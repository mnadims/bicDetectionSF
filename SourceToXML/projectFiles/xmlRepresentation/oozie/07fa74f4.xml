<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/07fa74f4.java"><expr_stmt><expr><name>From</name> <literal type="number">07fa74f450a79ccb6385c7c5389c9f56d7136854</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Kanter</name> <argument_list type="generic">&lt;<argument><name>rkanter</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">7</literal> <name>Jan</name> <literal type="number">2015</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">07</literal><operator>:</operator><literal type="number">12</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">2104</literal> <name>oozie</name> <name>server</name> <name>dies</name> <name>on</name> <name>startup</name></expr></expr_stmt> <if_stmt><if>if oozie-site
 redefines ActionExecutor classes <condition>(<expr><name>rkanter</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>ActionService</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">64</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestDagEngine</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>TestActionErrors</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor1</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">50</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor2</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">50</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionCheckerService</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionService</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">51</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>service</name><operator>/</operator><name><name>TestAuthorizationService</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestPurgeService</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestRecoveryService</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">12</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">205</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">24</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor1</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor2</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">28b90c045</literal><operator>..</operator><literal type="number">4444c87e5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> enum <name>ErrorCode</name> <block>{
     <expr><call><name>E0131</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>OPS</name></name></expr></argument>, <argument><expr><literal type="string">"Could not read workflow schemas file/s, {0}"</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E0140</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>OPS</name></name></expr></argument>, <argument><expr><literal type="string">"Could not access database, {0}"</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E0141</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>OPS</name></name></expr></argument>, <argument><expr><literal type="string">"Could not create DataSource connection pool, {0}"</literal></expr></argument>)</argument_list></call></expr>,
    <expr><call><name>E0150</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>OPS</name></name></expr></argument>, <argument><expr><literal type="string">"Actionexecutor type already registered [{0}]"</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E0160</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>OPS</name></name></expr></argument>, <argument><expr><literal type="string">"Could not read admin users file [{0}], {1}"</literal></expr></argument>)</argument_list></call></expr>,
 
     <expr><call><name>E0300</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Invalid content-type [{0}]"</literal></expr></argument>)</argument_list></call></expr>,
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>ActionService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>ActionService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c8ed26523</name><operator>..</operator><name>becc69b25</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>ActionService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>ActionService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr>,<expr><literal type="number">7</literal> @@</expr>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name></name>;</package></block></expr></expr_stmt></block_content></block></if></if_stmt>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>ReflectionUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>control</name><operator>.</operator><name>EndActionExecutor</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>control</name><operator>.</operator><name>ForkActionExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>control</name><operator>.</operator><name>JoinActionExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>control</name><operator>.</operator><name>KillActionExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>control</name><operator>.</operator><name>StartActionExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Service</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Instrumentable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Instrumentation</name></name>;</import>
 
<class><specifier>public</specifier> class <name>ActionService</name> <super_list><implements>implements <super><name>Service</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> class <name>ActionService</name> <super_list><implements>implements <super><name>Service</name></super>, <super><name>Instrumentable</name></super></implements></super_list> <block>{
 
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONF_ACTION_EXECUTOR_CLASSES</name> <init>= <expr><name>CONF_PREFIX</name> <operator>+</operator> <literal type="string">"ActionService.executor.classes"</literal></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionService</name> implements <name>Service</name> <block>{
     <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>executors</name></expr>;
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>XLog</name> <name>LOG</name> <operator>=</operator> <call><name><name>XLog</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    @<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
    @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><block>{<expr><literal type="string">"unchecked"</literal></expr>, <expr><literal type="string">"deprecation"</literal></expr>}</block></expr></argument>)</argument_list></call>
    @<name>Override</name>
     <specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Services</name> <name>services</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>ServiceException</name> <block>{
         <expr><name><name>this</name><operator>.</operator><name>services</name></name> <operator>=</operator> <name>services</name></expr></block></expr></argument></throws></expr>;
         <expr><call><name><name>ActionExecutor</name><operator>.</operator><name>enableInit</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">64</literal></expr>,<expr><literal type="number">16</literal> <operator>+</operator><literal type="number">64</literal></expr>,<expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionService</name> implements <name>Service</name> <block>{
         <expr><name>classes</name> <operator>=</operator> <operator>(</operator><name><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name><index>[]</index></name><operator>)</operator> <call><name><name>ConfigurationService</name><operator>.</operator><name>getClasses</name></name>
                 <argument_list>(<argument><expr><call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CONF_ACTION_EXECUTOR_EXT_CLASSES</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>registerExecutors</name><argument_list>(<argument><expr><name>classes</name></expr></argument>)</argument_list></call></expr>;

        <expr><call><name>initExecutors</name><argument_list>()</argument_list></call></expr>;
     }</block>
 
    <specifier>private</specifier> <name>void</name> <call><name>registerExecutors</name><argument_list>(<argument><expr><name><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name><index>[]</index></name> <name>classes</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>ServiceException</name> <block>{
    <expr><specifier>private</specifier> <name>void</name> <call><name>registerExecutors</name><argument_list>(<argument><expr><name><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name><index>[]</index></name> <name>classes</name></expr></argument>)</argument_list></call> <block>{</block></expr></block></expr></argument></throws></expr>
         <if_stmt><if>if <condition>(<expr><name>classes</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <for>for <control>(<init><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name></type> <name>executorClass</name> <range>: <expr><name>classes</name></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name>register</name><argument_list>(<argument><expr><name>executorClass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation>
                <type><name>ActionExecutor</name></type> <name>executor</name> <init>= <expr><operator>(</operator><name>ActionExecutor</name><operator>)</operator> <call><name><name>ReflectionUtils</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>executorClass</name></expr></argument>, <argument><expr><call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>executors</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>executorClass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></for></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
         }</block></class>
     }</block></class>
 
    <function><type><specifier>private</specifier> <name>void</name></type> <name>initExecutors</name><parameter_list>()</parameter_list> <block>{<block_content>
        <for>for <control>(<init><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name></type> <name>executorClass</name> <range>: <expr><call><name><name>executors</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name>initExecutor</name><argument_list>(<argument><expr><name>executorClass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Initialized action types: "</literal> <operator>+</operator> <call><name>getActionTypes</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>destroy</name><parameter_list>()</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name><name>ActionExecutor</name><operator>.</operator><name>enableInit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>ActionExecutor</name><operator>.</operator><name>resetInitInfo</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">43</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionService</name> implements <name>Service</name> <block>{
         <expr><name>executors</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     }</block>
 
    @<name>Override</name>
     <specifier>public</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Service</name></extends></argument>&gt;</argument_list></name> <call><name>getInterface</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>register</name><parameter_list>(<parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name></type> <name>klass</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument></throws> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>instrument</name><parameter_list>(<parameter><decl><type><name>Instrumentation</name></type> <name>instr</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>instr</name><operator>.</operator><name>addVariable</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><literal type="string">"action.types"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Instrumentation</name><operator>.</operator><name><name>Variable</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>String</name></type> <name>getValue</name><parameter_list>()</parameter_list> <block>{<block_content>
                <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actionTypes</name> <init>= <expr><call><name>getActionTypes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>actionTypes</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><call><name><name>actionTypes</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
                </block_content>}</block></if></if_stmt>
                <return>return <expr><literal type="string">"(unavailable)"</literal></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
    <annotation>@<name>VisibleForTesting</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>registerAndInitExecutor</name><parameter_list>(<parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name></type> <name>klass</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ActionExecutor</name><operator>.</operator><name>enableInit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ActionExecutor</name><operator>.</operator><name>resetInitInfo</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ActionExecutor</name><operator>.</operator><name>disableInit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerExecutors</name><argument_list>(<argument><expr><operator>new</operator> <name><name>Class</name><index>[]</index></name><block>{<expr><name>klass</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>initExecutors</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>initExecutor</name><parameter_list>(<parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ActionExecutor</name></extends></argument>&gt;</argument_list></name></type> <name>klass</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation>
         <type><name>ActionExecutor</name></type> <name>executor</name> <init>= <expr><operator>(</operator><name>ActionExecutor</name><operator>)</operator> <call><name><name>ReflectionUtils</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>klass</name></expr></argument>, <argument><expr><call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Registering action type [{0}] class [{1}]"</literal></expr></argument>, <argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>executors</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>ServiceException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0150</name></name></expr></argument>, <argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Initializing action type [{0}] class [{1}]"</literal></expr></argument>, <argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>ActionExecutor</name><operator>.</operator><name>enableInit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>executor</name><operator>.</operator><name>initActionType</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>ActionExecutor</name><operator>.</operator><name>disableInit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>executors</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Registered Action executor for action type [{0}] class [{1}]"</literal></expr></argument>, <argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Initialized Executor for action type [{0}] class [{1}]"</literal></expr></argument>, <argument><expr><call><name><name>executor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>ActionExecutor</name></type> <name>getExecutor</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>actionType</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestDagEngine</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestDagEngine</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">824fdf231</literal><operator>..</operator><literal type="number">15f86403f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestDagEngine</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestDagEngine</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDagEngine</name> extends <name>XTestCase</name> <block>{
         <expr><call><name>setSystemProperty</name><argument_list>(<argument><expr><name><name>SchemaService</name><operator>.</operator><name>WF_CONF_EXT_SCHEMAS</name></name></expr></argument>, <argument><expr><literal type="string">"wf-ext-schema.xsd"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>register</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>registerAndInitExecutor</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     <specifier>protected</specifier> <name>void</name> <call><name>tearDown</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>TestActionErrors</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>TestActionErrors</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b88dd3940</name><operator>..</operator><literal type="number">8eb98af87</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>TestActionErrors</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>TestActionErrors</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">65</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionErrors</name> extends <name>XDataTestCase</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt><expr><call><name>setSystemProperty</name><argument_list>(<argument><expr><name><name>LiteWorkflowStoreService</name><operator>.</operator><name>CONF_USER_RETRY_ERROR_CODE_EXT</name></name></expr></argument>, <argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>TEST_ERROR</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>register</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>registerAndInitExecutor</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></expr></expr_stmt>
 
     <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor1</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor1</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..ce34e84a2</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor1</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">50</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>

<class><specifier>public</specifier> class <name>DummyExecutor1</name> <super_list><extends>extends <super><name>ActionExecutor</name></super></extends></super_list> <block>{
    <constructor><specifier>public</specifier> <name>DummyExecutor1</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name><name>TestActionService</name><operator>.</operator><name>TEST_ACTION_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>start</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>end</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>check</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>kill</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>isCompleted</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>externalStatus</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor2</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..3ff83761b</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>DummyExecutor2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">50</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>

<class><specifier>public</specifier> class <name>DummyExecutor2</name> <super_list><extends>extends <super><name>ActionExecutor</name></super></extends></super_list> <block>{
    <constructor><specifier>public</specifier> <name>DummyExecutor2</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name><name>TestActionService</name><operator>.</operator><name>TEST_ACTION_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>start</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>end</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>check</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>kill</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>isCompleted</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>externalStatus</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionCheckerService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionCheckerService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e12920132</name><operator>..</operator><name>c465c7fa1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionCheckerService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionCheckerService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionCheckerService</name> extends <name>XDataTestCase</name> <block>{
         <expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name>setClassesToBeExcluded</name><argument_list>(<argument><expr><call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>excludedServices</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>register</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>registerAndInitExecutor</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2f3299372</literal><operator>..</operator><literal type="number">5b5ac937c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestActionService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ActionService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XTestCase</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestActionService</name> <super_list><extends>extends <super><name>XTestCase</name></super></extends></super_list> <block>{
 
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_ACTION_TYPE</name> <init>= <expr><literal type="string">"TestActionType"</literal></expr></init></decl>;</decl_stmt>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>protected</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">50</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionService</name> extends <name>XTestCase</name> <block>{
         <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>as</name><operator>.</operator><name>getExecutor</name></name><argument_list>(<argument><expr><literal type="string">"switch"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>void</name> <call><name>testDuplicateActionExecutors</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>ActionService</name> <name>as</name> <operator>=</operator> <operator>new</operator> <call><name>ActionService</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>set</name><argument_list>(<argument><expr><literal type="string">"oozie.service.ActionService.executor.classes"</literal></expr></argument>,
                <argument><expr><call><name><name>DummyExecutor1</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <call><name><name>DummyExecutor2</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>set</name><argument_list>(<argument><expr><literal type="string">"oozie.service.ActionService.executor.ext.classes"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>as</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// There are 5 hard-coded control action types + 1 TEST_ACTION_TYPE</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>as</name><operator>.</operator><name>getActionTypes</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>ActionExecutor</name></type> <name>executor</name> <init>= <expr><call><name><name>as</name><operator>.</operator><name>getExecutor</name></name><argument_list>(<argument><expr><name>TEST_ACTION_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>executor</name> <operator>instanceof</operator> <name>DummyExecutor2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><name>executor</name> <operator>instanceof</operator> <name>DummyExecutor1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name><name>as</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></finally></try>

        <expr_stmt><expr><name>as</name> <operator>=</operator> <operator>new</operator> <call><name>ActionService</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>set</name><argument_list>(<argument><expr><literal type="string">"oozie.service.ActionService.executor.classes"</literal></expr></argument>, <argument><expr><call><name><name>DummyExecutor1</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>set</name><argument_list>(<argument><expr><literal type="string">"oozie.service.ActionService.executor.ext.classes"</literal></expr></argument>, <argument><expr><call><name><name>DummyExecutor2</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>as</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// There are 5 hard-coded control action types + 1 TEST_ACTION_TYPE</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>as</name><operator>.</operator><name>getActionTypes</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>ActionExecutor</name></type> <name>executor</name> <init>= <expr><call><name><name>as</name><operator>.</operator><name>getExecutor</name></name><argument_list>(<argument><expr><name>TEST_ACTION_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>executor</name> <operator>instanceof</operator> <name>DummyExecutor2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><name>executor</name> <operator>instanceof</operator> <name>DummyExecutor1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name><name>as</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></finally></try>

        <expr_stmt><expr><name>as</name> <operator>=</operator> <operator>new</operator> <call><name>ActionService</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>set</name><argument_list>(<argument><expr><literal type="string">"oozie.service.ActionService.executor.classes"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>set</name><argument_list>(<argument><expr><literal type="string">"oozie.service.ActionService.executor.ext.classes"</literal></expr></argument>,
                <argument><expr><call><name><name>DummyExecutor1</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <call><name><name>DummyExecutor2</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>as</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// There are 5 hard-coded control action types + 1 TEST_ACTION_TYPE</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>as</name><operator>.</operator><name>getActionTypes</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>ActionExecutor</name></type> <name>executor</name> <init>= <expr><call><name><name>as</name><operator>.</operator><name>getExecutor</name></name><argument_list>(<argument><expr><name>TEST_ACTION_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>executor</name> <operator>instanceof</operator> <name>DummyExecutor2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><name>executor</name> <operator>instanceof</operator> <name>DummyExecutor1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name><name>as</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></finally></try>
    </block_content>}</block></function>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestAuthorizationService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestAuthorizationService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">86eabbfbc</literal><operator>..</operator><name>ce461c1f9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestAuthorizationService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestAuthorizationService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAuthorizationService</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setBoolean</name><argument_list>(<argument><expr><name><name>AuthorizationService</name><operator>.</operator><name>CONF_SECURITY_ENABLED</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>AuthorizationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>init</name><argument_list>(<argument><expr><name>services</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>register</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>registerAndInitExecutor</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestPurgeService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestPurgeService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ba20c662c</name><operator>..</operator><literal type="number">74d34ccff</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestPurgeService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestPurgeService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPurgeService</name> extends <name>XDataTestCase</name> <block>{
         <expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name>setClassesToBeExcluded</name><argument_list>(<argument><expr><call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>excludedServices</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>register</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>registerAndInitExecutor</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestRecoveryService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestRecoveryService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7a39e27ee</literal><operator>..</operator><literal type="number">62d14a0ff</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestRecoveryService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestRecoveryService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRecoveryService</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name>setSystemProperty</name><argument_list>(<argument><expr><name><name>SchemaService</name><operator>.</operator><name>WF_CONF_EXT_SCHEMAS</name></name></expr></argument>, <argument><expr><literal type="string">"wf-ext-schema.xsd"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>register</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>registerAndInitExecutor</name><argument_list>(<argument><expr><name><name>ForTestingActionExecutor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     }</block>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">26a02bdbf</literal><operator>..</operator><literal type="number">006ac7640</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.2.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">2104</literal> <name>oozie</name> <name>server</name> <name>dies</name> <name>on</name> <name>startup</name></expr></expr_stmt> <if_stmt><if>if oozie-site redefines ActionExecutor classes <condition>(<expr><name>rkanter</name></expr>)</condition><block type="pseudo"><block_content>
 <expr_stmt><expr><name>OOZIE</name><operator>-</operator><literal type="number">2092</literal> <name>Provide</name> <name>option</name> <name>to</name> <name>supply</name> <name>config</name> <name>to</name> <name>workflow</name> <name>during</name> <name>rerun</name> <name>of</name> <call><name>coordinator</name> <argument_list>(<argument><expr><name>jaydeepvishwakarma</name> <name>via</name> <name>shwethags</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2100</literal> <name>Publish</name> <name>oozie</name><operator>-</operator><name>webapp</name> <call><name>artifact</name> <argument_list>(<argument><expr><name>sureshms</name> <name>via</name> <name>bzhang</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">1889</literal> <name>Convert</name> <name>NamedNativeQueries</name> <name>to</name> <call><name>JPQL</name> <argument_list>(<argument><expr><name>dvillegas</name> <name>via</name> <name>shwethags</name></expr></argument>)</argument_list></call>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></function>

</unit>
