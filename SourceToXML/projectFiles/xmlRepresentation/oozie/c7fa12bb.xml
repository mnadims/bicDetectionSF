<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/c7fa12bb.java"><expr_stmt><expr><name>From</name> <name>c7fa12bb1abac643c60c7282626c39b690ae378b</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Kanter</name> <argument_list type="generic">&lt;<argument><name>rkanter</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">6</literal> <name>Jan</name> <literal type="number">2017</literal> <literal type="number">10</literal><operator>:</operator><literal type="number">36</literal><operator>:</operator><literal type="number">26</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">2748</literal> <name>NPE</name> <name>in</name> <call><name><name>LauncherMapper</name><operator>.</operator><name>printArgs</name></name><argument_list>()</argument_list></call> <operator>(</operator><name>pbacsko</name> <name>via</name>
 <name>rkanter</name><operator>)</operator>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">26</literal> <operator>++</operator><operator>++</operator><operator>++</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>                        <operator>|</operator>  <literal type="number">6</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>LauncherMapper</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">17</literal> <operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestLauncherMapper</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">88</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">136</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">2</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestLauncherMapper</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8965cdff8</literal><operator>..</operator><literal type="number">1c4b42966</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">2941</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">2941</literal></expr><operator>,</operator><expr><literal type="number">30</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestJavaActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"DEBUG"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>oozieActionHiveRootLogger</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>testEmptyArgs</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>String</name> <name>actionXml</name> <operator>=</operator> <literal type="string">"&lt;java&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;job-tracker&gt;"</literal> <operator>+</operator> <call><name>getJobTrackerUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/job-tracker&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;name-node&gt;"</literal> <operator>+</operator> <call><name>getNameNodeUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/name-node&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;main-class&gt;"</literal> <operator>+</operator> <call><name><name>LauncherMainTester</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/main-class&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;arg&gt;&lt;/arg&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;/java&gt;"</literal></expr></block></expr></argument></throws></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Context</name></type> <name>context</name> <init>= <expr><call><name>createContext</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>RunningJob</name></type> <name>runningJob</name> <init>= <expr><call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>waitFor</name><argument_list>(<argument><expr><literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <return>return <expr><call><name><name>runningJob</name><operator>.</operator><name>isComplete</name></name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>runningJob</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>ActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>JavaActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>ae</name><operator>.</operator><name>isCompleted</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }
 }
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">925957b7f</literal><operator>..</operator><name>e0c5be5ba</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.4.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">2748</literal> <name>NPE</name> <name>in</name> <call><name><name>LauncherMapper</name><operator>.</operator><name>printArgs</name></name><argument_list>()</argument_list></call> <operator>(</operator><name>pbacsko</name> <name>via</name> <name>rkanter</name><operator>)</operator>
 <name>OOZIE</name><operator>-</operator><literal type="number">2754</literal> <name>Document</name> <name>Ssh</name> <name>action</name> <name>failure</name></expr></expr_stmt> <if_stmt><if>if output is written to stdout/stderr upon login <condition>(<expr><name>asasvari</name> <name>via</name> <name>rkanter</name></expr>)</condition><block type="pseudo"><block_content>
 <expr_stmt><expr><name>OOZIE</name><operator>-</operator><literal type="number">2654</literal> <name>Zookeeper</name> <name>dependent</name> <name>services</name> <name>should</name> <name>not</name> <name>depend</name> <name>on</name> <name>Connectionstate</name> <name>to</name> <name>be</name> <name>valid</name> <name>before</name> <name>cleaning</name> <call><name>up</name> <argument_list>(<argument><expr><name>venkatnrangan</name> <name>via</name> <name>abhishekbafna</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2519</literal> <name>Oozie</name> <name>HA</name> <name>with</name> <name>SSL</name> <name>info</name> <name>is</name> <name>slightly</name> <call><name>incorrect</name> <argument_list>(<argument><expr><name><name>andras</name><operator>.</operator><name>piros</name></name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<name>index</name> <literal type="number">4a89934f7</literal><operator>..</operator><name>f3ea0716a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@
             <operator>&lt;</operator><name>scope</name><operator>&gt;</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>scope</name></argument>&gt;</argument_list></name>
         <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
 
        <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name><name>mockito</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
            <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name>mockito</name><operator>-</operator><name><name>all</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
            <operator>&lt;</operator><name>scope</name><operator>&gt;</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>scope</name></argument>&gt;</argument_list></name>
        <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>

         <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
             <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name><name>oozie</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
             <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name>oozie</name><operator>-</operator><name>hadoop</name><operator>-</operator><name><name>utils</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>LauncherMapper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>LauncherMapper</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">727148664..8edebac11</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>LauncherMapper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>LauncherMapper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt></block_content></block></if></if_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>Mapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>OutputCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>Reporter</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Strings</name></name>;</import>

 <class><specifier>public</specifier> class <name><name>LauncherMapper</name><parameter_list>&lt;<parameter><name>K1</name></parameter>, <parameter><name>V1</name></parameter>, <parameter><name>K2</name></parameter>, <parameter><name>V2</name></parameter>&gt;</parameter_list></name> <super_list><implements>implements <super><name><name>Mapper</name><argument_list type="generic">&lt;<argument><name>K1</name></argument>, <argument><name>V1</name></argument>, <argument><name>K2</name></argument>, <argument><name>V2</name></argument>&gt;</argument_list></name></super>, <super><name>Runnable</name></super></implements></super_list> <block>{
 
     <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONF_OOZIE_ACTION_MAIN_CLASS</name> <init>= <expr><literal type="string">"oozie.launcher.action.main.class"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">494</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">496</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>LauncherMapper</name><argument_list type="generic">&lt;<argument><name>K1</name></argument>, <argument><name>V1</name></argument>, <argument><name>K2</name></argument>, <argument><name>V2</name></argument>&gt;</argument_list></name> implements <name><name>Mapper</name><argument_list type="generic">&lt;<argument><name>K1</name></argument>, <argument><name>V1</name></argument>, <argument><name>K2</name></argument>, <argument><name>V2</name></argument>&gt;</argument_list></name></expr><operator>,</operator> <expr><name>R</name>
 
     <specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getMainArguments</name><argument_list>(<argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
         <expr><name><name>String</name><index>[]</index></name> <name>args</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>conf</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_ARG_COUNT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;

        <expr><name>int</name> <name>pos</name> <operator>=</operator> <literal type="number">0</literal></expr>;
         <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>args</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_ARG_PREFIX</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>arg</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_ARG_PREFIX</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Strings</name><operator>.</operator><name>isNullOrEmpty</name></name><argument_list>(<argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name><name>args</name><index>[<expr><name>pos</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_ARG_PREFIX</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for>}</block></expr></expr_stmt>
         }</block></class>
        <return>return <expr><name>args</name></expr>;</return>

        <comment type="line">// this is to skip null args, that is &lt;arg&gt;&lt;/arg&gt; in the workflow XML -- in this case,</comment>
        <comment type="line">// args[] might look like {"arg1", "arg2", null, null} at this point</comment>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>retArray</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[<expr><name>pos</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>arraycopy</name></name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>retArray</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return>return <expr><name>retArray</name></expr>;</return>
     }
 
     private <function><type><name>void</name></type> <name>setupHeartBeater</name><parameter_list>(<parameter><decl><type><name>Reporter</name></type> <name>reporter</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestLauncherMapper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestLauncherMapper</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..1dd800277</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>oozie</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestLauncherMapper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">88</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name></name>;</package>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_ACTION_MAIN_ARG_COUNT</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_ACTION_MAIN_ARG_PREFIX</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>BDDMockito</name><operator>.</operator><name>given</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Matchers</name><operator>.</operator><name>eq</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>runner</name><operator>.</operator><name>RunWith</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>runners</name><operator>.</operator><name>MockitoJUnitRunner</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Lists</name></name>;</import>

<class><annotation>@<name>RunWith</name><argument_list>(<argument><expr><name><name>MockitoJUnitRunner</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>TestLauncherMapper</name> <block>{
    <decl_stmt><decl><annotation>@<name>Mock</name></annotation>
    <type><specifier>private</specifier> <name>Configuration</name></type> <name>conf</name></decl>;</decl_stmt>  <comment type="line">// we have to use mock, because conf.set(null) throws exception</comment>

    <function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testLauncherMapperArgsHandlingWithoutNulls</name><parameter_list>()</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>setupConf</name><argument_list>(<argument><expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><literal type="string">"a"</literal></expr></argument>, <argument><expr><literal type="string">"b"</literal></expr></argument>, <argument><expr><literal type="string">"c"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <decl_stmt><decl><type><name>String</name></type> <name><name>args</name><index>[]</index></name> <init>= <expr><call><name><name>LauncherMapper</name><operator>.</operator><name>getMainArguments</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"a"</literal></expr>, <expr><literal type="string">"b"</literal></expr>, <expr><literal type="string">"c"</literal></expr>}</block></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testLauncherMapperArgsHandlingWhenArgsContainNulls</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>setupConf</name><argument_list>(<argument><expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><literal type="string">"a"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"b"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"c"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name><name>args</name><index>[]</index></name> <init>= <expr><call><name><name>LauncherMapper</name><operator>.</operator><name>getMainArguments</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"a"</literal></expr>, <expr><literal type="string">"b"</literal></expr>, <expr><literal type="string">"c"</literal></expr>}</block></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testLauncherMapperArgsHandlingWhenArgsContainsNullsOnly</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>setupConf</name><argument_list>(<argument><expr><name><name>Lists</name><operator>.</operator></name>&lt;<name>String</name><operator>&gt;</operator><call><name>newArrayList</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name><name>args</name><index>[]</index></name> <init>= <expr><call><name><name>LauncherMapper</name><operator>.</operator><name>getMainArguments</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{}</block></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testLauncherMapperArgsHandlingWhenArgsContainsOneNull</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>setupConf</name><argument_list>(<argument><expr><name><name>Lists</name><operator>.</operator></name>&lt;<name>String</name><operator>&gt;</operator><call><name>newArrayList</name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name><name>args</name><index>[]</index></name> <init>= <expr><call><name><name>LauncherMapper</name><operator>.</operator><name>getMainArguments</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{}</block></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>setupConf</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>argList</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>argCount</name> <init>= <expr><call><name><name>argList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>given</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><call><name>eq</name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_ARG_COUNT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>eq</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>willReturn</name><argument_list>(<argument><expr><name>argCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>argCount</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name>given</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>eq</name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_ARG_PREFIX</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>willReturn</name><argument_list>(<argument><expr><call><name><name>argList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function>

</unit>
