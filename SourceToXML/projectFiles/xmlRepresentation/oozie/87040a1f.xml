<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/87040a1f.java"><expr_stmt><expr><name>From</name> <literal type="number">87040a1f1f9ab1ccaecff640b56c33b9900eca2a</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Purshotam</name> <name>Shah</name> <operator>&lt;</operator><name>purushah</name>@<name>yahoo</name><operator>-</operator><name><name>inc</name><operator>.</operator><name>com</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">27</literal> <name>May</name> <literal type="number">2016</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">07</literal><operator>:</operator><literal type="number">48</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>amend</name> <name>OOZIE</name><operator>-</operator><literal type="number">1976</literal> <name>Specifying</name> <name>coordinator</name> <name>input</name> <name>datasets</name> <name>in</name>
 <name>more</name> <name>logical</name> <name>ways</name>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>CoordPushDependencyCheckXCommand</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELEvaluator</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELFunctions</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CoordInputDependencyFactory</name><operator>.</operator><name>java</name></name>          <operator>|</operator> <literal type="number">16</literal> <operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordOldInputDependency</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">76</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CoordInputLogicEvaluatorPhaseOne</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorUtil</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">19</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>OozieJexlInterpreter</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">12</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>TestCoordInputLogicPush</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>logic</name><operator>/</operator><name><name>TestCoordinatorInputLogic</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">11</literal> <operator>++</operator><operator>-</operator>
 <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>coord</name><operator>-</operator><name><name>inputlogic</name><operator>.</operator><name>xml</name></name>  <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">11</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">89</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">67</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordPushDependencyCheckXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordPushDependencyCheckXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2600a2bde</literal><operator>..</operator><literal type="number">6d8aa0ffd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordPushDependencyCheckXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordPushDependencyCheckXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>PreconditionException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>input</name><operator>.</operator><name>dependency</name><operator>.</operator><name>CoordInputDependency</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>dependency</name><operator>.</operator><name>ActionDependency</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>dependency</name><operator>.</operator><name>DependencyChecker</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>dependency</name><operator>.</operator><name>URIHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionGetForInputCheckJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">147</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordPushDependencyCheckXCommand</name> extends <name><name>CoordinatorXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name>
                     <name>isChangeInDependency</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
                 }
                 else <block>{<block_content>
                    <expr_stmt><expr><call><name><name>coordPushInputDependency</name><operator>.</operator><name>setMissingDependencies</name></name><argument_list>(<argument><expr><call><name><name>StringUtils</name><operator>.</operator><name>join</name></name><argument_list>(
                            <argument><expr><call><name><name>actionDependency</name><operator>.</operator><name>getMissingDependencies</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>CoordCommandUtils</name><operator>.</operator><name>RESOLVED_UNRESOLVED_SEPARATOR</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name>String</name></type> <name>stillMissingDeps</name> <init>= <expr><call><name><name>DependencyChecker</name><operator>.</operator><name>dependenciesAsString</name></name><argument_list>(<argument><expr><call><name><name>actionDependency</name><operator>.</operator><name>getMissingDependencies</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>coordPushInputDependency</name><operator>.</operator><name>setMissingDependencies</name></name><argument_list>(<argument><expr><name>stillMissingDeps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block>
 
                 <if_stmt><if>if <condition>(<expr><call><name><name>coordPushInputDependency</name><operator>.</operator><name>isDependencyMet</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELEvaluator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELEvaluator</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fba8ac1b5</name><operator>..</operator><literal type="number">809c026bc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELEvaluator</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELEvaluator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordELEvaluator</name> <block>{
                     <comment type="line">// check</comment>
                     <comment type="line">// null</comment>
                 }</block>
                <name>Element</name> <name>doneFlagElement</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"done-flag"</literal></expr></argument>, <argument><expr><call><name><name>data</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>Element</name></type> <name>doneFlagElement</name> <init>= <expr><call><name><name>data</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"dataset"</literal></expr></argument>, <argument><expr><call><name><name>data</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getChild</name><argument_list>(<argument><expr><literal type="string">"done-flag"</literal></expr></argument>,
                        <argument><expr><call><name><name>data</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>String</name></type> <name>doneFlag</name> <init>= <expr><call><name><name>CoordUtils</name><operator>.</operator><name>getDoneFlag</name></name><argument_list>(<argument><expr><name>doneFlagElement</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>setVariable</name></name><argument_list>(<argument><expr><literal type="string">".datain."</literal> <operator>+</operator> <call><name><name>data</name><operator>.</operator><name>getAttributeValue</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">".doneFlag"</literal></expr></argument>, <argument><expr><name>doneFlag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELFunctions</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELFunctions</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ffa0943d2</name><operator>..</operator><literal type="number">5bb8be668</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELFunctions</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordELFunctions</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">503</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">503</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordELFunctions</name> <block>{
         <expr><name>String</name> <name>uris</name> <operator>=</operator> <literal type="string">""</literal></expr>;
         <expr><name>ELEvaluator</name> <name>eval</name> <operator>=</operator> <call><name><name>ELEvaluator</name><operator>.</operator><name>getCurrent</name></name><argument_list>()</argument_list></call></expr>;
         <if_stmt><if>if <condition>(<expr><call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><literal type="string">".datain."</literal> <operator>+</operator> <name>dataInName</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal>
                <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><literal type="string">".actionInputLogic"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><literal type="string">".actionInputLogic"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(
                        <argument><expr><literal type="string">".actionInputLogic"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></expr_stmt>)</block_content> <block>{<block_content>
             <try>try <block>{<block_content>
                 <return>return <expr><operator>new</operator> <call><name>CoordInputLogicEvaluatorUtil</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInputDependencies</name><argument_list>(<argument><expr><name>dataInName</name></expr></argument>,
                         <argument><expr><operator>(</operator><name>SyncCoordAction</name><operator>)</operator> <call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><name>COORD_ACTION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordInputDependencyFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordInputDependencyFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ad50890c0</name><operator>..</operator><name>ea1546721</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordInputDependencyFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordInputDependencyFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputDependencyFactory</name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <specifier>static</specifier> <name>CoordInputDependency</name> <call><name>getPullInputDependencies</name><argument_list>(<argument><expr><name>StringBlob</name> <name>missingDependencies</name></expr></argument>)</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>missingDependencies</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>CoordPullInputDependency</name><argument_list>()</argument_list></call></expr>;</return>
            <return>return <expr><operator>new</operator> <call><name>CoordOldInputDependency</name><argument_list>()</argument_list></call></expr>;</return>
         <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block></expr></expr_stmt>
         <return>return <expr><call><name>getPullInputDependencies</name><argument_list>(<argument><expr><call><name><name>missingDependencies</name><operator>.</operator><name>getString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></try></block_content></block></block></if></if_stmt>}</block>
 
     <specifier>public</specifier> <specifier>static</specifier> <name>CoordInputDependency</name> <call><name>getPullInputDependencies</name><argument_list>(<argument><expr><name>String</name> <name>dependencies</name></expr></argument>)</argument_list></call> <block>{
 
        <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>CoordPullInputDependency</name><argument_list>()</argument_list></call></expr>;</return>
        <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>

        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>hasInputLogic</name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>hasInputLogic</name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <return>return <expr><operator>new</operator> <call><name>CoordOldInputDependency</name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></if>
         <else>else<block type="pseudo"><block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputDependencyFactory</name> <block>{
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>CoordInputDependency</name> <call><name>getPushInputDependencies</name><argument_list>(<argument><expr><name>StringBlob</name> <name>pushMissingDependencies</name></expr></argument>)</argument_list></call> <block>{
 
         <if_stmt><if>if <condition>(<expr><name>pushMissingDependencies</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>CoordPushInputDependency</name><argument_list>()</argument_list></call></expr>;</return>
            <return>return <expr><operator>new</operator> <call><name>CoordOldInputDependency</name><argument_list>()</argument_list></call></expr>;</return>
         <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block></expr></expr_stmt></block_content></block></else></if_stmt>
         <return>return <expr><call><name>getPushInputDependencies</name><argument_list>(<argument><expr><call><name><name>pushMissingDependencies</name><operator>.</operator><name>getString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputDependencyFactory</name> <block>{
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>CoordInputDependency</name> <call><name>getPushInputDependencies</name><argument_list>(<argument><expr><name>String</name> <name>dependencies</name></expr></argument>)</argument_list></call> <block>{
 

        <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>CoordPushInputDependency</name><argument_list>()</argument_list></call></expr>;</return>
        <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>hasInputLogic</name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>hasInputLogic</name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <return>return <expr><operator>new</operator> <call><name>CoordOldInputDependency</name><argument_list>(<argument><expr><name>dependencies</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></if></if_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordOldInputDependency</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordOldInputDependency</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9fc348ff5</literal><operator>..</operator><name>aabd2bf25</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordOldInputDependency</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>dependency</name><operator>/</operator><name><name>CoordOldInputDependency</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">49</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">55</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordOldInputDependency</name> implements <name>CoordInputDependency</name> <block>{
         <expr><name>String</name> <name>actualTimeStr</name> <operator>=</operator> <call><name><name>eAction</name><operator>.</operator><name>getAttributeValue</name></name><argument_list>(<argument><expr><literal type="string">"action-actual-time"</literal></expr></argument>)</argument_list></call></expr>;
         <name>Element</name> <name>inputList</name> <operator>=</operator> <call><name><name>eAction</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"input-events"</literal></expr></argument>, <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
        <if_stmt><if>if<condition>(<expr><name>inputList</name><operator>==</operator><literal type="null">null</literal></expr>)</condition><block>{<block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>

         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name></type> <name>eDataEvents</name> <init>= <expr><call><name><name>inputList</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"data-in"</literal></expr></argument>, <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Configuration</name></type> <name>actionConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>coordAction</name><operator>.</operator><name>getRunConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
        <decl_stmt><decl><type><name>Date</name></type> <name>actualTime</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>actualTimeStr</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>actualTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <expr_stmt><expr><name>actualTime</name> <operator>=</operator> <call><name><name>DateUtils</name><operator>.</operator><name>parseDateOozieTZ</name></name><argument_list>(<argument><expr><name>actualTimeStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>

        <for>for <control>(<init><decl><type><name>Element</name></type> <name>dEvent</name> <range>: <expr><name>eDataEvents</name></expr></range></decl></init>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name><name>CoordCommandUtils</name><operator>.</operator><name>UNRESOLVED_INSTANCES_TAG</name></name></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <continue>continue;</continue>
        <if_stmt><if>if <condition>(<expr><name>eDataEvents</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Date</name></type> <name>actualTime</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>actualTimeStr</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>actualTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
            <decl_stmt><decl><type><name>ELEvaluator</name></type> <name>eval</name> <init>= <expr><call><name><name>CoordELEvaluator</name><operator>.</operator><name>createLazyEvaluator</name></name><argument_list>(<argument><expr><name>actualTime</name></expr></argument>, <argument><expr><name>nominalTime</name></expr></argument>, <argument><expr><name>dEvent</name></expr></argument>, <argument><expr><name>actionConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>unResolvedInstance</name> <init>= <expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name><name>CoordCommandUtils</name><operator>.</operator><name>UNRESOLVED_INSTANCES_TAG</name></name></expr></argument>,
                    <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name><name>unresolvedList</name><index>[]</index></name> <init>= <expr><call><name><name>unResolvedInstance</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name><name>CoordELFunctions</name><operator>.</operator><name>INSTANCE_SEPARATOR</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>StringBuffer</name></type> <name>resolvedTmp</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>unresolvedList</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>String</name></type> <name>returnData</name> <init>= <expr><call><name><name>CoordELFunctions</name><operator>.</operator><name>evalAndWrap</name></name><argument_list>(<argument><expr><name>eval</name></expr></argument>, <argument><expr><name><name>unresolvedList</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>Boolean</name></type> <name>isResolved</name> <init>= <expr><operator>(</operator><name>Boolean</name><operator>)</operator> <call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><name><name>CoordELConstants</name><operator>.</operator><name>IS_RESOLVED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>isResolved</name> <operator>==</operator> <literal type="boolean">false</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"["</literal> <operator>+</operator> <call><name><name>coordAction</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"] :: Cannot resolve : "</literal> <operator>+</operator> <name>returnData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
            <if_stmt><else>else <block>{<block_content>
                <expr_stmt><expr><name>actualTime</name> <operator>=</operator> <call><name><name>DateUtils</name><operator>.</operator><name>parseDateOozieTZ</name></name><argument_list>(<argument><expr><name>actualTimeStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>

            <for>for <control>(<init><decl><type><name>Element</name></type> <name>dEvent</name> <range>: <expr><name>eDataEvents</name></expr></range></decl></init>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name><name>CoordCommandUtils</name><operator>.</operator><name>UNRESOLVED_INSTANCES_TAG</name></name></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <continue>continue;</continue>
                 </block_content>}</block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>resolvedTmp</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>CoordELFunctions</name><operator>.</operator><name>INSTANCE_SEPARATOR</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>ELEvaluator</name></type> <name>eval</name> <init>= <expr><call><name><name>CoordELEvaluator</name><operator>.</operator><name>createLazyEvaluator</name></name><argument_list>(<argument><expr><name>actualTime</name></expr></argument>, <argument><expr><name>nominalTime</name></expr></argument>, <argument><expr><name>dEvent</name></expr></argument>, <argument><expr><name>actionConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>unResolvedInstance</name> <init>= <expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name><name>CoordCommandUtils</name><operator>.</operator><name>UNRESOLVED_INSTANCES_TAG</name></name></expr></argument>,
                        <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name><name>unresolvedList</name><index>[]</index></name> <init>= <expr><call><name><name>unResolvedInstance</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name><name>CoordELFunctions</name><operator>.</operator><name>INSTANCE_SEPARATOR</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>StringBuffer</name></type> <name>resolvedTmp</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>unresolvedList</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                    <decl_stmt><decl><type><name>String</name></type> <name>returnData</name> <init>= <expr><call><name><name>CoordELFunctions</name><operator>.</operator><name>evalAndWrap</name></name><argument_list>(<argument><expr><name>eval</name></expr></argument>, <argument><expr><name><name>unresolvedList</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>Boolean</name></type> <name>isResolved</name> <init>= <expr><operator>(</operator><name>Boolean</name><operator>)</operator> <call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><name><name>CoordELConstants</name><operator>.</operator><name>IS_RESOLVED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><name>isResolved</name> <operator>==</operator> <literal type="boolean">false</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"["</literal> <operator>+</operator> <call><name><name>coordAction</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"] :: Cannot resolve : "</literal> <operator>+</operator> <name>returnData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                    </block_content>}</block></if></if_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>resolvedTmp</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>CoordELFunctions</name><operator>.</operator><name>INSTANCE_SEPARATOR</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                    <expr_stmt><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><name><name>CoordELConstants</name><operator>.</operator><name>RESOLVED_PATH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></for>
                <expr_stmt><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>eval</name><operator>.</operator><name>getVariable</name></name><argument_list>(<argument><expr><name><name>CoordELConstants</name><operator>.</operator><name>RESOLVED_PATH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>resolvedTmp</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>CoordELFunctions</name><operator>.</operator><name>INSTANCE_SEPARATOR</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(
                            <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>dEvent</name><operator>.</operator><name>removeChild</name></name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>resolvedTmp</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>CoordELFunctions</name><operator>.</operator><name>INSTANCE_SEPARATOR</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(
                                <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name>dEvent</name><operator>.</operator><name>removeChild</name></name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                    <decl_stmt><decl><type><name>Element</name></type> <name>uriInstance</name> <init>= <expr><operator>new</operator> <call><name>Element</name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>uriInstance</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>dEvent</name><operator>.</operator><name>getContent</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>uriInstance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></if></if_stmt>
                <decl_stmt><decl><type><name>Element</name></type> <name>uriInstance</name> <init>= <expr><operator>new</operator> <call><name>Element</name><argument_list>(<argument><expr><literal type="string">"uris"</literal></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>uriInstance</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><call><name><name>resolvedTmp</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>dEvent</name><operator>.</operator><name>getContent</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>uriInstance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>dEvent</name><operator>.</operator><name>removeChild</name></name><argument_list>(<argument><expr><name><name>CoordCommandUtils</name><operator>.</operator><name>UNRESOLVED_INSTANCES_TAG</name></name></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><call><name><name>dEvent</name><operator>.</operator><name>removeChild</name></name><argument_list>(<argument><expr><name><name>CoordCommandUtils</name><operator>.</operator><name>UNRESOLVED_INSTANCES_TAG</name></name></expr></argument>, <argument><expr><call><name><name>dEvent</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
 
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorPhaseOne</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorPhaseOne</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f54d30543</name><operator>..</operator><literal type="number">6525125d1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorPhaseOne</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorPhaseOne</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordCommandUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>input</name><operator>.</operator><name>dependency</name><operator>.</operator><name>AbstractCoordInputDependency</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>input</name><operator>.</operator><name>dependency</name><operator>.</operator><name>CoordInputDependency</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>input</name><operator>.</operator><name>dependency</name><operator>.</operator><name>CoordInputInstance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>input</name><operator>.</operator><name>dependency</name><operator>.</operator><name>CoordPullInputDependency</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>input</name><operator>.</operator><name>logic</name><operator>.</operator><name>CoordInputLogicEvaluatorResult</name><operator>.</operator><name>STATUS</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>dependency</name><operator>.</operator><name>URIHandlerException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>LogUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputLogicEvaluatorPhaseOne</name> implements <name>CoordInputLogicEvaluato</name>
         <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>availableList</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>coordInputDependency</name><operator>.</operator><name>getDependencyMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>dataSet</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name>CoordInputLogicEvaluatorResult</name></type> <name>retData</name> <init>= <expr><operator>new</operator> <call><name>CoordInputLogicEvaluatorResult</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>coordInputDependency</name><operator>.</operator><name>getAvailableDependencies</name></name><argument_list>(<argument><expr><name>dataSet</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal>
                    <operator>||</operator> <call><name><name>coordInputDependency</name><operator>.</operator><name>getAvailableDependencies</name></name><argument_list>(<argument><expr><name>dataSet</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>CoordPullInputDependency</name><operator>)</operator> <call><name><name>coordAction</name><operator>.</operator><name>getPullInputDependencies</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>getUnResolvedDependency</name><argument_list>(<argument><expr><name>dataSet</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Data set [{0}] is unresolved set, will get resolved in phasetwo"</literal></expr></argument>, <argument><expr><name>dataSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>retData</name><operator>.</operator><name>setStatus</name></name><argument_list>(<argument><expr><name><name>CoordInputLogicEvaluatorResult</name><operator>.</operator><name>STATUS</name><operator>.</operator><name>PHASE_TWO_EVALUATION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">63c07609a</literal><operator>..</operator><literal type="number">653fb2a32</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>CoordInputLogicEvaluatorUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputLogicEvaluatorUtil</name> <block>{
         <expr><name>JexlContext</name> <name>jc</name> <operator>=</operator> <operator>new</operator> <call><name>OozieJexlParser</name><argument_list>(<argument><expr><name>jexl</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>CoordInputLogicBuilder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CoordInputLogicEvaluatorPhaseOne</name><argument_list>(
                 <argument><expr><name>coordAction</name></expr></argument>, <argument><expr><call><name><name>coordAction</name><operator>.</operator><name>getPullInputDependencies</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <name>CoordInputLogicEvaluatorResult</name> <name>result</name> <operator>=</operator> <operator>(</operator><name>CoordInputLogicEvaluatorResult</name><operator>)</operator> <call><name><name>e</name><operator>.</operator><name>evaluate</name></name><argument_list>(<argument><expr><name>jc</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] and evaluate result is [{1}]"</literal></expr></argument>, <argument><expr><name>expression</name></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>isTrue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] and evaluate result is [{1}]"</literal></expr></argument>, <argument><expr><name>expression</name></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <if_stmt><if>if <condition>(<expr><call><name><name>result</name><operator>.</operator><name>isWaiting</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputLogicEvaluatorUtil</name> <block>{
         <expr><name>JexlContext</name> <name>jc</name> <operator>=</operator> <operator>new</operator> <call><name>OozieJexlParser</name><argument_list>(<argument><expr><name>jexl</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>CoordInputLogicBuilder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CoordInputLogicEvaluatorPhaseThree</name><argument_list>(
                 <argument><expr><name>coordAction</name></expr></argument>, <argument><expr><name>eval</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <name>CoordInputLogicEvaluatorResult</name> <name>result</name> <operator>=</operator> <operator>(</operator><name>CoordInputLogicEvaluatorResult</name><operator>)</operator> <call><name><name>e</name><operator>.</operator><name>evaluate</name></name><argument_list>(<argument><expr><name>jc</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] is [{1}] and evaluate result is [{2}]"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>expression</name></expr></argument>,
                <argument><expr><call><name><name>result</name><operator>.</operator><name>isTrue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>result</name><operator>.</operator><name>isTrue</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>name</name> <operator>+</operator> <literal type="string">" is not resolved"</literal></expr>;</return>
        <if_stmt><if>if <condition>(<expr><name>result</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <operator>!</operator><call><name><name>result</name><operator>.</operator><name>isTrue</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] is [{1}] and it is not resolved"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>expression</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><literal type="string">"${coord:dataIn('"</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">"')}"</literal></expr>;</return>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] is [{1}] and evaluate result is [{2}]"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>expression</name></expr></argument>,
                    <argument><expr><call><name><name>result</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><call><name><name>result</name><operator>.</operator><name>getDataSets</name></name><argument_list>()</argument_list></call></expr>;</return>
         </block_content>}</block></else></if_stmt>
        <return>return <expr><call><name><name>result</name><operator>.</operator><name>getDataSets</name></name><argument_list>()</argument_list></call></expr>;</return>
 
     </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">165</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputLogicEvaluatorUtil</name> <block>{
         <expr><name>JexlContext</name> <name>jc</name> <operator>=</operator> <operator>new</operator> <call><name>OozieJexlParser</name><argument_list>(<argument><expr><name>jexl</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>CoordInputLogicBuilder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CoordInputLogicEvaluatorPhaseOne</name><argument_list>(
                 <argument><expr><name>coordAction</name></expr></argument>, <argument><expr><call><name><name>coordAction</name><operator>.</operator><name>getPushInputDependencies</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <name>CoordInputLogicEvaluatorResult</name> <name>result</name> <operator>=</operator> <operator>(</operator><name>CoordInputLogicEvaluatorResult</name><operator>)</operator> <call><name><name>e</name><operator>.</operator><name>evaluate</name></name><argument_list>(<argument><expr><name>jc</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] and evaluate result is [{1}]"</literal></expr></argument>, <argument><expr><name>expression</name></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>isTrue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] and evaluate result is [{1}]"</literal></expr></argument>, <argument><expr><name>expression</name></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <if_stmt><if>if <condition>(<expr><call><name><name>result</name><operator>.</operator><name>isWaiting</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">192</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordInputLogicEvaluatorUtil</name> <block>{
         <expr><name>JexlContext</name> <name>jc</name> <operator>=</operator> <operator>new</operator> <call><name>OozieJexlParser</name><argument_list>(<argument><expr><name>jexl</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>CoordInputLogicBuilder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CoordInputLogicEvaluatorPhaseTwo</name><argument_list>(
                 <argument><expr><name>coordAction</name></expr></argument>, <argument><expr><name>actualTime</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <name>CoordInputLogicEvaluatorResult</name> <name>result</name> <operator>=</operator> <operator>(</operator><name>CoordInputLogicEvaluatorResult</name><operator>)</operator> <call><name><name>e</name><operator>.</operator><name>evaluate</name></name><argument_list>(<argument><expr><name>jc</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] and evaluate result is [{1}]"</literal></expr></argument>, <argument><expr><name>expression</name></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>isTrue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Input logic expression for [{0}] and evaluate result is [{1}]"</literal></expr></argument>, <argument><expr><name>expression</name></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <if_stmt><if>if <condition>(<expr><call><name><name>result</name><operator>.</operator><name>isWaiting</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>OozieJexlInterpreter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>OozieJexlInterpreter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2044723db</literal><operator>..</operator><literal type="number">757778895</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>OozieJexlInterpreter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name>input</name><operator>/</operator><name>logic</name><operator>/</operator><name><name>OozieJexlInterpreter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>jexl2</name><operator>.</operator><name>JexlEngine</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>jexl2</name><operator>.</operator><name>parser</name><operator>.</operator><name>ASTAndNode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>jexl2</name><operator>.</operator><name>parser</name><operator>.</operator><name>ASTOrNode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>jexl2</name><operator>.</operator><name>parser</name><operator>.</operator><name>JexlNode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>input</name><operator>.</operator><name>logic</name><operator>.</operator><name>CoordInputLogicEvaluatorResult</name><operator>.</operator><name>STATUS</name></name>;</import></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
 
 <comment type="block" format="javadoc">/**
  * Oozie implementation of jexl Interpreter
@@ -58,15 +59,22 @@ public class OozieJexlInterpreter extends Interpreter {
         CoordInputLogicEvaluatorResult left = (CoordInputLogicEvaluatorResult) node.jjtGetChild(0)
                 .jjtAccept(this, data);
 
        if (!left.isTrue()) {
        if(left.isWaiting() || !left.isTrue()){
             return left;
         }

         CoordInputLogicEvaluatorResult right = (CoordInputLogicEvaluatorResult) node.jjtGetChild(1).jjtAccept(this,
                 data);
        if(right.isWaiting()){
            return right;
        }
        if(left.isPhaseTwoEvaluation() || right.isPhaseTwoEvaluation()){
            return new CoordInputLogicEvaluatorResult(STATUS.PHASE_TWO_EVALUATION);
        }

         if (right.isTrue()) {
             right.appendDataSets(left.getDataSets());
         }

         return right;
     }
 
diff --git a/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordInputLogicPush.java b/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordInputLogicPush.java
index c58b18b73..6684a1fc7 100644
-- a/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordInputLogicPush.java
++ b/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordInputLogicPush.java
@@ -356,6 +356,10 @@ public class TestCoordInputLogicPush extends XHCatTestCase {
         String input1 = createTestCaseSubDir("input-data/b/2014/10/08/_SUCCESS".split("/"));
         String input2 = addPartition("db_a", "table1", "dt=20141008;country=usa");
 
        new CoordMaterializeTransitionXCommand(jobId, 3600).call();
        new CoordPushDependencyCheckXCommand(jobId + "@1").call();
        new CoordActionInputCheckXCommand(jobId + "@1", jobId).call();

         startCoordAction(jobId);
 
         CoordinatorActionBean actionBean = CoordActionQueryExecutor.getInstance().get(
@@ -546,7 +550,6 @@ public class TestCoordInputLogicPush extends XHCatTestCase {
 
     private void startCoordAction(final String jobId) throws CommandException, JPAExecutorException {
         new CoordMaterializeTransitionXCommand(jobId, 3600).call();

         new CoordActionInputCheckXCommand(jobId + "@1", jobId).call();
         new CoordPushDependencyCheckXCommand(jobId + "@1").call();
         new CoordActionInputCheckXCommand(jobId + "@1", jobId).call();
diff --git a/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordinatorInputLogic.java b/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordinatorInputLogic.java
index 0679c8cbf..aa0d5d62f 100644
-- a/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordinatorInputLogic.java
++ b/core/src/test/java/org/apache/oozie/coord/input/logic/TestCoordinatorInputLogic.java
@@ -202,9 +202,10 @@ public class TestCoordinatorInputLogic extends XDataTestCase {
          "&lt;/and&gt;";
         //@formatter:on
         conf.set("partitionName", "test");
        conf.set("A_done_flag", "done");
         final String jobId = _testCoordSubmit("coord-inputlogic.xml", conf, inputLogic);
 
        String input1 = createTestCaseSubDir("input-data/a/2014/10/08/00/_SUCCESS".split("/"));
        String input1 = createTestCaseSubDir("input-data/a/2014/10/08/00/done".split("/"));
         String input2 = createTestCaseSubDir("input-data/b/2014/10/08/00/_SUCCESS".split("/"));
         String input3 = createTestCaseSubDir("input-data/e/2014/10/08/00/_SUCCESS".split("/"));
         String input4 = createTestCaseSubDir("input-data/f/2014/10/08/00/_SUCCESS".split("/"));
@@ -216,7 +217,7 @@ public class TestCoordinatorInputLogic extends XDataTestCase {
         XConfiguration runConf = new XConfiguration(new StringReader(actionBean.getRunConf()));
         String dataSets = runConf.get("inputLogicData");
         assertEquals(dataSets.split(",").length, 4);
        checkDataSets(dataSets, input1, input2, input3, input4);
        checkDataSets(dataSets, input1.replace("/done", ""), input2, input3, input4);
 
     }
 
@@ -239,9 +240,10 @@ public class TestCoordinatorInputLogic extends XDataTestCase {
          "&lt;/or&gt;";
         //@formatter:on
         conf.set("partitionName", "test");
        conf.set("A_done_flag", "done");
         final String jobId = _testCoordSubmit("coord-inputlogic.xml", conf, inputLogic);
 
        String input1 = createTestCaseSubDir("input-data/a/2014/10/08/00/_SUCCESS".split("/"));
        String input1 = createTestCaseSubDir("input-data/a/2014/10/08/00/done".split("/"));
         String input2 = createTestCaseSubDir("input-data/b/2014/10/08/00/_SUCCESS".split("/"));
         String input3 = createTestCaseSubDir("input-data/c/2014/10/08/00/_SUCCESS".split("/"));
         String input4 = createTestCaseSubDir("input-data/e/2014/10/08/00/_SUCCESS".split("/"));
@@ -872,6 +874,9 @@ public class TestCoordinatorInputLogic extends XDataTestCase {
         conf.set("queueName", "default");
         conf.set("jobTracker", "localhost:9001");
         conf.set("examplesRoot", "examples");
        if (conf.get("A_done_flag") == null) {
            conf.set("A_done_flag", "_SUCCESS");
        }
 
         return new CoordSubmitXCommand(dryRun, conf).call();
     }
diff --git a/core/src/test/resources/coord-inputlogic.xml b/core/src/test/resources/coord-inputlogic.xml
index 51b67ac55..b87445da6 100644
-- a/core/src/test/resources/coord-inputlogic.xml
++ b/core/src/test/resources/coord-inputlogic.xml
@@ -29,6 +29,7 @@
             initial-instance="${initial_instance_a}" timezone="UTC"&gt;
             &lt;uri-template&gt;${data_set_a}/${YEAR}/${MONTH}/${DAY}/${HOUR}
             &lt;/uri-template&gt;
            &lt;done-flag&gt;${A_done_flag}&lt;/done-flag&gt;
         &lt;/dataset&gt;
         &lt;dataset name="b" frequency="${coord:hours(1)}"
             initial-instance="${initial_instance_b}" timezone="UTC"&gt;
- 
2.19.1.windows.1

</comment></unit>
