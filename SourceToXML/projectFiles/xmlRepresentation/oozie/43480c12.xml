<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/43480c12.java"><expr_stmt><expr><name>From</name> <literal type="number">43480c12f6fea605c720ae64aa4a9d0208d82735</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name><name>rkanter</name> <argument_list type="generic">&lt;<argument><name>rkanter</name><annotation>@<name>unknown</name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Sat</name></expr><operator>,</operator> <expr><literal type="number">22</literal> <name>Dec</name> <literal type="number">2012</literal> <literal type="number">23</literal><operator>:</operator><literal type="number">53</literal><operator>:</operator><literal type="number">37</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">1144</literal> <name>OOZIE</name><operator>-</operator><literal type="number">1137</literal> <name>breaks</name> <name>the</name> <call><name>sharelib</name> <argument_list>(<argument><expr><name>rkanter</name></expr></argument>)</argument_list></call>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/oozie/trunk@1425376 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">27</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">46</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">65</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">9</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8c1f84a97</literal><operator>..</operator><literal type="number">00ae5a0cb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">389</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">389</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>JavaActionExecutor</name> extends <name>ActionExecutor</name> <block>{
         }</block></expr></expr_stmt>
     }
 
    protected <decl_stmt><decl><type><name>void</name></type> <name>addShareLib</name><argument_list>(<argument><expr><name>Configuration</name> <name>conf</name></expr></argument>, <argument><expr><name>String</name> <name>actionShareLibName</name></expr></argument>)</argument_list>
    protected <name>void</name> <name>addShareLib</name><argument_list>(<argument><expr><name>Path</name> <name>appPath</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>, <argument><expr><name>String</name> <name>actionShareLibName</name></expr></argument>)</argument_list>
     <throws>throws <argument><expr><name>ActionExecutorException</name> <block>{</block></expr></argument></throws>
         if <argument_list>(<argument><expr><name>actionShareLibName</name> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list> <block>{<block_content>
             <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">397</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">397</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>JavaActionExecutor</name> extends <name>ActionExecutor</name> <block>{
                 <if_stmt><if>if <condition>(<expr><name>systemLibPath</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                     <decl_stmt><decl><type><name>Path</name></type> <name>actionLibPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>systemLibPath</name></expr></argument>, <argument><expr><name>actionShareLibName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                     <decl_stmt><decl><type><name>String</name></type> <name>user</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"user.name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>=
                        <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>HadoopAccessorService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createFileSystem</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><call><name><name>actionLibPath</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name></decl>;</decl_stmt>
                    <comment type="line">// If the actionLibPath has a valid scheme and authority, then use them to determine the filesystem that the</comment>
                    <comment type="line">// sharelib resides on; otherwise, assume it resides on the same filesystem as the appPath and use the appPath</comment>
                    <comment type="line">// to determine the filesystem</comment>
                    <if_stmt><if>if <condition>(<expr><call><name><name>actionLibPath</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getScheme</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>actionLibPath</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthority</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>fs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>HadoopAccessorService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createFileSystem</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><call><name><name>actionLibPath</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt/>}</block_content>
                    else <block>{<block_content>
                        <expr_stmt><expr><name>fs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>HadoopAccessorService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createFileSystem</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><call><name><name>appPath</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt/>}</block_content>
                     if (fs.exists(actionLibPath</block></block></if></if_stmt>)</block_content></block></if></if_stmt>) <block>{
                         <expr><name><name>FileStatus</name><index>[]</index></name> <name>files</name> <operator>=</operator> <call><name><name>fs</name><operator>.</operator><name>listStatus</name></name><argument_list>(<argument><expr><name>actionLibPath</name></expr></argument>)</argument_list></call></expr>;
                         <for>for <control>(<init><decl><type><name>FileStatus</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">482</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">490</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>JavaActionExecutor</name> extends <name>ActionExecutor</name> <block>{
             }</block></expr></expr_stmt>
         }</block_content>
 
        addAllShareLibs(conf</block><operator>,</operator> <expr_stmt><expr><name>context</name></expr><operator>,</operator> <expr><name>actionXml</name></expr></expr_stmt></for>)</block></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addAllShareLibs</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	</block_content>}</block></try>
 
     <comment type="line">// Adds action specific share libs and common share libs</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>void</name></type> <name>addAllShareLibs</name><argument_list>(<argument><expr><name>Configuration</name> <name>conf</name></expr></argument>, <argument><expr><name>Context</name> <name>context</name></expr></argument>, <argument><expr><name>Element</name> <name>actionXml</name></expr></argument>)</argument_list>
    private <name>void</name> <name>addAllShareLibs</name><argument_list>(<argument><expr><name>Path</name> <name>appPath</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>, <argument><expr><name>Context</name> <name>context</name></expr></argument>, <argument><expr><name>Element</name> <name>actionXml</name></expr></argument>)</argument_list>
             <throws>throws <argument><expr><name>ActionExecutorException</name> <block>{
         <comment type="line">// Add action specific share libs</comment>
        <expr><call><name>addActionShareLib</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addActionShareLib</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <comment type="line">// Add common sharelibs for Oozie</comment>
        <expr_stmt><expr><call><name>addShareLib</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>JavaActionExecutor</name><operator>.</operator><name>OOZIE_COMMON_LIBDIR</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addShareLib</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>JavaActionExecutor</name><operator>.</operator><name>OOZIE_COMMON_LIBDIR</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></decl></decl_stmt>
 
    <function><type><specifier>private</specifier> <name>void</name></type> <name>addActionShareLib</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Element</name></type> <name>actionXml</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>addActionShareLib</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>appPath</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Element</name></type> <name>actionXml</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>XConfiguration</name></type> <name>wfJobConf</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
             <expr_stmt><expr><name>wfJobConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getWorkflow</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">506</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">515</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>JavaActionExecutor</name> extends <name>ActionExecutor</name> <block>{
         <comment type="line">// Action sharelibs are only added if user has specified to use system libpath</comment>
         <if_stmt><if>if <condition>(<expr><call><name><name>wfJobConf</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USE_SYSTEM_LIBPATH</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <comment type="line">// add action specific sharelibs</comment>
            <expr_stmt><expr><call><name>addShareLib</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><call><name>getShareLibName</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>addShareLib</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><call><name>getShareLibName</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
     </block_content>}</block></try>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">022ab7a9b</literal><operator>..</operator><literal type="number">7c0c11290</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1019</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1019</literal></expr><operator>,</operator><expr><literal type="number">52</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestJavaActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>cacheFilesStr</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>jar3Path</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>testAddShareLibSchemeAndAuthority</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>JavaActionExecutor</name> <name>ae</name> <operator>=</operator> <operator>new</operator> <class><super><name>JavaActionExecutor</name></super><argument_list>(</argument_list></class></expr></block></expr></argument></throws></expr></expr_stmt>)</block_content> <block>{<block_content>
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>String</name></type> <name>getDefaultShareLibName</name><parameter_list>(<parameter><decl><type><name>Element</name></type> <name>actionXml</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <return>return <expr><literal type="string">"java-action-executor"</literal></expr>;</return>
            </block_content>}</block></function>
        </block_content>}</block></block>;</function>
        <decl_stmt><decl><type><name>String</name></type> <name>actionXml</name> <init>= <expr><literal type="string">"&lt;java&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;job-tracker&gt;"</literal> <operator>+</operator> <call><name>getJobTrackerUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/job-tracker&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;name-node&gt;"</literal>
                <operator>+</operator> <call><name>getNameNodeUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/name-node&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;main-class&gt;"</literal> <operator>+</operator> <call><name><name>LauncherMainTester</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call>
                <operator>+</operator> <literal type="string">"&lt;/main-class&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;/java&gt;"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>eActionXml</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Context</name></type> <name>context</name> <init>= <expr><call><name>createContext</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set sharelib to a relative path (i.e. no scheme nor authority)</comment>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>destroy</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setSystemProperty</name><argument_list>(<argument><expr><name><name>WorkflowAppService</name><operator>.</operator><name>SYSTEM_LIB_PATH</name></name></expr></argument>, <argument><expr><literal type="string">"/user/"</literal> <operator>+</operator> <call><name>getOozieUser</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/share/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call><operator>.</operator><call><name>init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>appPath</name> <init>= <expr><call><name>getAppPath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>JobConf</name></type> <name>conf</name> <init>= <expr><call><name><name>ae</name><operator>.</operator><name>createBaseHadoopConf</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>eActionXml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// The next line should not throw an Exception because it will get the scheme and authority from the appPath, and not the</comment>
        <comment type="line">// sharelib path because it doesn't have a scheme or authority</comment>
        <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>addShareLib</name></name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="string">"java-action-executor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>appPath</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><literal type="string">"foo://bar:1234/blah"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>conf</name> <operator>=</operator> <call><name><name>ae</name><operator>.</operator><name>createBaseHadoopConf</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>eActionXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// The next line should throw an Exception because it will get the scheme and authority from the appPath, which is obviously</comment>
        <comment type="line">// invalid, and not the sharelib path because it doesn't have a scheme or authority</comment>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>addShareLib</name></name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="string">"java-action-executor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>ActionExecutorException</name></type> <name>aee</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"E0902"</literal></expr></argument>, <argument><expr><call><name><name>aee</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>aee</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"[No FileSystem for scheme: foo]"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>

        <comment type="line">// Set sharelib to a full path (i.e. include scheme and authority)</comment>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>destroy</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setSystemProperty</name><argument_list>(<argument><expr><name><name>WorkflowAppService</name><operator>.</operator><name>SYSTEM_LIB_PATH</name></name></expr></argument>, <argument><expr><call><name>getNameNodeUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/user/"</literal> <operator>+</operator> <call><name>getOozieUser</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/share/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call><operator>.</operator><call><name>init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>appPath</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><literal type="string">"foo://bar:1234/blah"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>conf</name> <operator>=</operator> <call><name><name>ae</name><operator>.</operator><name>createBaseHadoopConf</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>eActionXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// The next line should not throw an Exception because it will get the scheme and authority from the sharelib path (and not</comment>
        <comment type="line">// from the obviously invalid appPath)</comment>
        <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>addShareLib</name></name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="string">"java-action-executor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

     <function><type><specifier>public</specifier> <name>void</name></type> <name>testFilesystemScheme</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>String</name></type> <name>actionXml</name> <init>= <expr><literal type="string">"&lt;java&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;job-tracker&gt;"</literal> <operator>+</operator> <call><name>getJobTrackerUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/job-tracker&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;name-node&gt;"</literal>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">8ec3b395e</literal><operator>..</operator><literal type="number">6acaef078</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr></init></decl>,5 +1,6 @@
 -- <decl><type ref="prev"/><name>Oozie</name> 3.4.0 <name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list>
 
<name>OOZIE</name>-1144 <name>OOZIE</name>-1137 <name>breaks</name> <name>the</name> <name>sharelib</name> <argument_list>(<argument><expr><name>rkanter</name></expr></argument>)</argument_list>
 <name>OOZIE</name>-1035 <name>Improve</name> <name>forkjoin</name> <name>validation</name> <name>to</name> <name>allow</name> <name>same</name> <name>errorTo</name> <name>transitions</name> <argument_list>(<argument><expr><name>rkanter</name></expr></argument>)</argument_list>
 <name>OOZIE</name>-1137 <name>In</name> <name>light</name> <name>of</name> <name>federation</name> <name>use</name> <name>actionLibPath</name> <name>instead</name> <name>of</name> <name>appPath</name> <argument_list>(<argument><expr><name>vaidya</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list>
 <name>OOZIE</name>-1126 <name>see</name> if <name>checkstyle</name> <name>works</name> for <name>oozie</name> <name><name>development</name><operator>.</operator></name> (<name>jaoki</name> <name>via</name> <name>rkanter</name></decl>)
- 
2.19.1.windows.1</decl_stmt></block_content></block></try></block_content></block></function>

</unit>
