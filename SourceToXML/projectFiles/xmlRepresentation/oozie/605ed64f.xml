<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/605ed64f.java"><expr_stmt><expr><name>From</name> <literal type="number">605ed64f75172f1ad2ea098023f81b42475c6cd6</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Mona</name> <name>Chitnis</name> <operator>&lt;</operator><name>chitnis</name>@<name>yahoo</name><operator>-</operator><name><name>inc</name><operator>.</operator><name>com</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">28</literal> <name>Jan</name> <literal type="number">2014</literal> <literal type="number">11</literal><operator>:</operator><literal type="number">53</literal><operator>:</operator><literal type="number">56</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">1644</literal> <name>Default</name> <name>config</name> <name>from</name> <name>config</name><operator>-</operator>default<operator>.</operator><name>xml</name> <name>is</name> <name>not</name>
 <name>propagated</name> <name>to</name> <call><name>actions</name> <argument_list>(<argument><expr><name>mona</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ReRunXCommand</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>SubmitXCommand</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">13</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>LiteWorkflowAppService</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">21</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>WorkflowAppService</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">21</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>XConfiguration</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name><name>WorkflowLib</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>LiteWorkflowAppParser</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">79</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>LiteWorkflowLib</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lite</name><operator>/</operator><name><name>TestLiteWorkflowAppParser</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">48</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>WorkflowFunctionalSpec</name><operator>.</operator><name>twiki</name></name>   <operator>|</operator> <literal type="number">30</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestMapReduceActionExecutor</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">85</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <literal type="number">12</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">227</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">98</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ReRunXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ReRunXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">433737af6</literal><operator>..</operator><name>fe588d4da</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ReRunXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ReRunXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReRunXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
         <expr><name>WorkflowAppService</name> <name>wps</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowAppService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
         <try>try <block>{<block_content>
             <expr_stmt><expr><call><name><name>XLog</name><operator>.</operator><name>Info</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>DagXLogInfoService</name><operator>.</operator><name>TOKEN</name></name></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>LOG_TOKEN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>WorkflowApp</name></type> <name>app</name> <init>= <expr><call><name><name>wps</name><operator>.</operator><name>parseDef</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>WorkflowApp</name></type> <name>app</name> <init>= <expr><call><name><name>wps</name><operator>.</operator><name>parseDef</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>XConfiguration</name></type> <name>protoActionConf</name> <init>= <expr><call><name><name>wps</name><operator>.</operator><name>createProtoActionConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>WorkflowLib</name></type> <name>workflowLib</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowStoreService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getWorkflowLibWithNoDB</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>SubmitXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>SubmitXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a81bf1019</name><operator>..</operator><literal type="number">0a68673d7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>SubmitXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>SubmitXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>WorkflowAppService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>HadoopAccessorService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>DagXLogInfoService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ConfigUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ELUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>LogUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLAOperations</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>SubmitXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <block>{
         <expr><name>WorkflowAppService</name> <name>wps</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowAppService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
         <try>try <block>{<block_content>
             <expr_stmt><expr><call><name><name>XLog</name><operator>.</operator><name>Info</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>DagXLogInfoService</name><operator>.</operator><name>TOKEN</name></name></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>LOG_TOKEN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>WorkflowApp</name></type> <name>app</name> <init>= <expr><call><name><name>wps</name><operator>.</operator><name>parseDef</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>XConfiguration</name></type> <name>protoActionConf</name> <init>= <expr><call><name><name>wps</name><operator>.</operator><name>createProtoActionConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>WorkflowLib</name></type> <name>workflowLib</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowStoreService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getWorkflowLibWithNoDB</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

             <decl_stmt><decl><type><name>String</name></type> <name>user</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>group</name> <init>= <expr><call><name><name>ConfigUtils</name><operator>.</operator><name>getWithDeprecatedCheck</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>OozieClient</name><operator>.</operator><name>JOB_ACL</name></name></expr></argument>, <argument><expr><name><name>OozieClient</name><operator>.</operator><name>GROUP_NAME</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>URI</name></type> <name>uri</name> <init>= <expr><operator>new</operator> <call><name>URI</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>APP_PATH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>HadoopAccessorService</name></type> <name>has</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>HadoopAccessorService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>Configuration</name></type> <name>fsConf</name> <init>= <expr><call><name><name>has</name><operator>.</operator><name>createJobConf</name></name><argument_list>(<argument><expr><call><name><name>uri</name><operator>.</operator><name>getAuthority</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name><name>has</name><operator>.</operator><name>createFileSystem</name></name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name>fsConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
             <decl_stmt><decl><type><name>Path</name></type> <name>configDefault</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Configuration</name></type> <name>defaultConf</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
             <comment type="line">// app path could be a directory</comment>
             <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>uri</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>fs</name><operator>.</operator><name>isFile</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SubmitXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <block>{
 
             <if_stmt><if>if <condition>(<expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>configDefault</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                 <try>try <block>{<block_content>
                    <decl_stmt><decl><type><name>Configuration</name></type> <name>defaultConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>configDefault</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name>defaultConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>configDefault</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name><name>PropertiesUtils</name><operator>.</operator><name>checkDisallowedProperties</name></name><argument_list>(<argument><expr><name>defaultConf</name></expr></argument>, <argument><expr><name>DISALLOWED_DEFAULT_PROPERTIES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name><name>XConfiguration</name><operator>.</operator><name>injectDefaults</name></name><argument_list>(<argument><expr><name>defaultConf</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></try>}</block>
@@ <operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SubmitXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <block>{
                 }</block></expr></expr_stmt></block_content></block></try>
             }</block>
 
            <name>WorkflowApp</name> <name>app</name> <operator>=</operator> <call><name><name>wps</name><operator>.</operator><name>parseDef</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>defaultConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>XConfiguration</name></type> <name>protoActionConf</name> <init>= <expr><call><name><name>wps</name><operator>.</operator><name>createProtoActionConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>WorkflowLib</name></type> <name>workflowLib</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowStoreService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getWorkflowLibWithNoDB</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

             <expr_stmt><expr><call><name><name>PropertiesUtils</name><operator>.</operator><name>checkDisallowedProperties</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>DISALLOWED_USER_PROPERTIES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
             <comment type="line">// Resolving all variables in the job properties.</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>LiteWorkflowAppService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>LiteWorkflowAppService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">40eeeff33</literal><operator>..</operator><literal type="number">0e29a0956</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>LiteWorkflowAppService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>LiteWorkflowAppService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@
  <operator>*</operator> <name>to</name> <name>you</name> <name>under</name> <name>the</name> <name>Apache</name> <name>License</name></expr><operator>,</operator> <expr><name>Version</name> <literal type="number">2.0</literal> <operator>(</operator><name>the</name>
  <operator>*</operator> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name>
  <operator>*</operator> <name>with</name> <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator>      <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
  <operator>*</operator> <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
  <expr><operator>*</operator> <name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteWorkflowAppService</name> extends <name>WorkflowAppService</name> <block>{
      <expr><operator>*</operator> @</expr><return>return <expr><name>workflow</name> <name><name>application</name><operator>.</operator></name>
      *<operator>/</operator>
     <specifier>public</specifier> <name>WorkflowApp</name> <call><name>parseDef</name><argument_list>(<argument><expr><name>Configuration</name> <name>jobConf</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>WorkflowException</name> <block>{</block></expr></argument></throws></expr></return>
        <return>return <expr><call><name>parseDef</name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></expr></expr_stmt>

    <function><type><specifier>public</specifier> <name>WorkflowApp</name></type> <name>parseDef</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>configDefault</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>String</name></type> <name>appPath</name> <init>= <expr><call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>APP_PATH</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>OozieClient</name><operator>.</operator><name>APP_PATH</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>String</name></type> <name>user</name> <init>= <expr><call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>String</name></type> <name>workflowXml</name> <init>= <expr><call><name>readDefinition</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><call><name>parseDef</name><argument_list>(<argument><expr><name>workflowXml</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr>;</return>
        <return>return <expr><call><name>parseDef</name><argument_list>(<argument><expr><name>workflowXml</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name>configDefault</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name>WorkflowApp</name></type> <name>parseDef</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>workflowXml</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>WorkflowApp</name></type> <name>parseDef</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>wfXml</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><call><name>parseDef</name><argument_list>(<argument><expr><name>wfXml</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>WorkflowApp</name></type> <name>parseDef</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>workflowXml</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>configDefault</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>WorkflowLib</name></type> <name>workflowLib</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowStoreService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getWorkflowLibWithNoDB</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><call><name><name>workflowLib</name><operator>.</operator><name>parseDef</name></name><argument_list>(<argument><expr><name>workflowXml</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr>;</return>
        <return>return <expr><call><name><name>workflowLib</name><operator>.</operator><name>parseDef</name></name><argument_list>(<argument><expr><name>workflowXml</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name>configDefault</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>

 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>WorkflowAppService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>WorkflowAppService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">81535a464</literal><operator>..</operator><name>c2f38365a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>WorkflowAppService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>WorkflowAppService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@
  <operator>*</operator> <name>to</name> <name>you</name> <name>under</name> <name>the</name> <name>Apache</name> <name>License</name></expr><operator>,</operator> <expr><name>Version</name> <literal type="number">2.0</literal> <operator>(</operator><name>the</name>
  <operator>*</operator> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name>
  <operator>*</operator> <name>with</name> <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator>      <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
  <operator>*</operator> <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
  <expr><operator>*</operator> <name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator></name>
@@ <operator>-</operator><literal type="number">262</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">262</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>WorkflowAppService</name> implements <name>Service</name> <block>{
     <comment type="block" format="javadoc">/**
      * Parse workflow definition.
      *
     * @param jobConf job configuration.
     * @return workflow application.
     * @throws WorkflowException thrown if the workflow application could not be parsed.
     * @param jobConf
     * @return
     * @throws WorkflowException
      */</comment>
     <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>WorkflowApp</name> <call><name>parseDef</name><argument_list>(<argument><expr><name>Configuration</name> <name>jobConf</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws></expr>;
 
    <comment type="block" format="javadoc">/**
     * Parse workflow definition along with config-default.xml config
     *
     * @param jobConf job configuration
     * @param configDefault config from config-default.xml
     * @return workflow application thrown if the workflow application could not
     *         be parsed
     * @throws WorkflowException
     */</comment>
    <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>WorkflowApp</name> <call><name>parseDef</name><argument_list>(<argument><expr><name>Configuration</name> <name>jobConf</name></expr></argument>, <argument><expr><name>Configuration</name> <name>configDefault</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws></expr>;

     <comment type="block" format="javadoc">/**
      * Parse workflow definition.
      * @param wfXml workflow.
diff --git a/core/src/main/java/org/apache/oozie/util/XConfiguration.java b/core/src/main/java/org/apache/oozie/util/XConfiguration.java
index 0b1d8e420..c16ab80c0 100644
-- a/core/src/main/java/org/apache/oozie/util/XConfiguration.java
++ b/core/src/main/java/org/apache/oozie/util/XConfiguration.java
@@ -200,9 +200,11 @@ public class XConfiguration extends Configuration {
      * @param target target configuration.
      */</comment>
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>injectDefaults</name><argument_list>(<argument><expr><name>Configuration</name> <name>source</name></expr></argument>, <argument><expr><name>Configuration</name> <name>target</name></expr></argument>)</argument_list></call> <block>{
        <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><name>source</name></expr></range></decl></init>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>target</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>target</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>source</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><name>source</name></expr></range></decl></init>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>target</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>target</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>}</block></expr>
             }</block></expr></expr_stmt>
         }
     }
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name><name>WorkflowLib</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name><name>WorkflowLib</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d32f770ad</name><operator>..</operator><literal type="number">7e4c90a66</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name><name>WorkflowLib</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name><name>WorkflowLib</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@
  <operator>*</operator> <name>to</name> <name>you</name> <name>under</name> <name>the</name> <name>Apache</name> <name>License</name></expr><operator>,</operator> <expr><name>Version</name> <literal type="number">2.0</literal> <operator>(</operator><name>the</name>
  <operator>*</operator> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name>
  <operator>*</operator> <name>with</name> <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator>      <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
  <operator>*</operator> <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
  <expr><operator>*</operator> <name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator></name>
@@ <operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> interface <name>WorkflowLib</name> <block>{
      <expr><operator>*</operator>
      <operator>*</operator> @<name>param</name> <name>wfXml</name> <name>string</name> <name>containing</name> <name>the</name> <name>workflow</name> <name><name>definition</name><operator>.</operator></name>
      * @<name>param</name> <name>jobConf</name> <name>job</name> <name>configuration</name>
     <operator>*</operator> @<name>param</name> <name>configDefault</name> <name>configuration</name> <name>from</name> <name>config</name><operator>-</operator>default<operator>.</operator><name>xml</name>
      <operator>*</operator> @</expr><return>return <expr><name>the</name> <name>parse</name> <name>workflow</name> <name><name>application</name><operator>.</operator></name>
      * @<throws>throws <argument><expr><name>WorkflowException</name> <name>thrown</name></expr></argument></throws></expr></return> <if_stmt><if>if the definition could not be parsed.
      */
    public WorkflowApp parseDef<condition>(<expr><name>String</name> <name>wfXml</name></expr><operator>,</operator> <expr><name>Configuration</name> <name>jobConf</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>

    <specifier>public</specifier> <name>WorkflowApp</name> <call><name>parseDef</name><argument_list>(<argument><expr><name>String</name> <name>wfXml</name></expr></argument>, <argument><expr><name>Configuration</name> <name>jobConf</name></expr></argument>, <argument><expr><name>Configuration</name> <name>configDefault</name></expr></argument>)</argument_list></call>
            <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws></block></expr>;</expr_stmt>
 
     <comment type="block" format="javadoc">/**
      * Create a workflow instance.
diff --git a/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java b/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java
index 31852b469..685503a47 100644
-- a/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java
++ b/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java
@@ -19,6 +19,7 @@ package org.apache.oozie.workflow.lite;
 
 import org.apache.oozie.workflow.WorkflowException;
 import org.apache.oozie.util.IOUtils;
import org.apache.oozie.util.XConfiguration;
 import org.apache.oozie.util.XmlUtils;
 import org.apache.oozie.util.ParamChecker;
 import org.apache.oozie.util.ParameterVerifier;
@@ -36,6 +37,7 @@ import org.xml.sax.SAXException;
 import javax.xml.transform.stream.StreamSource;
 import javax.xml.validation.Schema;
 import javax.xml.validation.Validator;

 import java.io.IOException;
 import java.io.Reader;
 import java.io.StringReader;
@@ -125,6 +127,10 @@ public class LiteWorkflowAppParser {
         this.actionHandlerClass = actionHandlerClass;
     }
 
    public LiteWorkflowApp validateAndParse(Reader reader, Configuration jobConf) throws WorkflowException {
        return validateAndParse(reader, jobConf, null);
    }

     /**
      * Parse and validate xml to {@link LiteWorkflowApp}
      *
@@ -132,7 +138,8 @@ public class LiteWorkflowAppParser {
      * @return LiteWorkflowApp
      * @throws WorkflowException
      */</comment>
    <function><type><specifier>public</specifier> <name>LiteWorkflowApp</name></type> <name>validateAndParse</name><parameter_list>(<parameter><decl><type><name>Reader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>LiteWorkflowApp</name></type> <name>validateAndParse</name><parameter_list>(<parameter><decl><type><name>Reader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>configDefault</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>WorkflowException</name></expr></argument></throws> <block>{<block_content>
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>StringWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>StringWriter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>copyCharStream</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteWorkflowAppParser</name> <block>{
 
             <expr><name>Element</name> <name>wfDefElement</name> <operator>=</operator> <call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><name>strDef</name></expr></argument>)</argument_list></call></expr>;
             <expr><call><name><name>ParameterVerifier</name><operator>.</operator><name>verifyParameters</name></name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name>wfDefElement</name></expr></argument>)</argument_list></call></expr>;
            <expr><name>LiteWorkflowApp</name> <name>app</name> <operator>=</operator> <call><name>parse</name><argument_list>(<argument><expr><name>strDef</name></expr></argument>, <argument><expr><name>wfDefElement</name></expr></argument>)</argument_list></call></expr>;
            <expr><name>LiteWorkflowApp</name> <name>app</name> <operator>=</operator> <call><name>parse</name><argument_list>(<argument><expr><name>strDef</name></expr></argument>, <argument><expr><name>wfDefElement</name></expr></argument>, <argument><expr><name>configDefault</name></expr></argument>)</argument_list></call></expr>;
             <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>VisitStatus</name></argument>&gt;</argument_list></name> <name>traversed</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>VisitStatus</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
             <expr><call><name><name>traversed</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>app</name><operator>.</operator><name>getNode</name></name><argument_list>(<argument><expr><name><name>StartNodeDef</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>VisitStatus</name><operator>.</operator><name>VISITING</name></name></expr></argument>)</argument_list></call></expr>;
             <expr><call><name>validate</name><argument_list>(<argument><expr><name>app</name></expr></argument>, <argument><expr><call><name><name>app</name><operator>.</operator><name>getNode</name></name><argument_list>(<argument><expr><name><name>StartNodeDef</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>traversed</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">372</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">379</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteWorkflowAppParser</name> <block>{
      <expr><operator>*</operator> @</expr><return>return <expr><name>LiteWorkflowApp</name>
      <operator>*</operator> @<throws>throws <argument><expr><name>WorkflowException</name>
      <operator>*</operator><operator>/</operator>
    <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><block>{<expr><literal type="string">"unchecked"</literal></expr>, <argument><expr><literal type="string">"ConstantConditions"</literal></expr></argument>}</block></expr></argument>)</argument_list></annotation>
    <specifier>private</specifier> <name>LiteWorkflowApp</name> <call><name>parse</name><argument_list>(<argument><expr><name>String</name> <name>strDef</name></expr></argument>, <argument><expr><name>Element</name> <name>root</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>WorkflowException</name> <block>{
    <expr><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><block>{<expr><literal type="string">"unchecked"</literal></expr>}</block></expr></argument>)</argument_list></annotation>
    <specifier>private</specifier> <name>LiteWorkflowApp</name> <call><name>parse</name><argument_list>(<argument><expr><name>String</name> <name>strDef</name></expr></argument>, <argument><expr><name>Element</name> <name>root</name></expr></argument>, <argument><expr><name>Configuration</name> <name>configDefault</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>WorkflowException</name> <block>{
         <expr><name>Namespace</name> <name>ns</name> <operator>=</operator> <call><name><name>root</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</return>
         <name>LiteWorkflowApp</name> <name>def</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;
         <expr><name>Element</name> <name>global</name> <operator>=</operator> <literal type="null">null</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">435</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">442</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteWorkflowAppParser</name> <block>{
                                                     }</block></expr>
                                                     <if_stmt><else>else <block>{<block_content>
                                                         <expr_stmt><expr><name>eActionConf</name> <operator>=</operator> <name>elem</name></expr>;</expr_stmt>
                                                        <expr_stmt><expr><call><name>handleGlobal</name><argument_list>(<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>global</name></expr></argument>, <argument><expr><name>elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                                        <expr_stmt><expr><call><name>handleGlobal</name><argument_list>(<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>global</name></expr></argument>, <argument><expr><name>configDefault</name></expr></argument>, <argument><expr><name>elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                                         <expr_stmt/></block_content></block></else></if_stmt>}</block></expr></expr_stmt>
                                                 </block_content>}</block></try>
                                             </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">557</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">564</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteWorkflowAppParser</name> <block>{
      <expr><operator>*</operator> @<throws>throws <argument><expr><name>WorkflowException</name>
      <operator>*</operator><operator>/</operator>
 
    <specifier>private</specifier> <name>void</name> <call><name>handleGlobal</name><argument_list>(<argument><expr><name>Namespace</name> <name>ns</name></expr></argument>, <argument><expr><name>Element</name> <name>global</name></expr></argument>, <argument><expr><name>Element</name> <name>eActionConf</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>WorkflowException</name> <block>{
    <expr><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
    <specifier>private</specifier> <name>void</name> <call><name>handleGlobal</name><argument_list>(<argument><expr><name>Namespace</name> <name>ns</name></expr></argument>, <argument><expr><name>Element</name> <name>global</name></expr></argument>, <argument><expr><name>Configuration</name> <name>configDefault</name></expr></argument>, <argument><expr><name>Element</name> <name>eActionConf</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws>
            <throws>throws <argument><expr><name>WorkflowException</name> <block>{
 
        <comment type="line">// Use the action's namespace when getting children of the action (will be different than ns for extension actions)</comment>
        <comment type="line">// Use the action's namespace when getting children of the action (will</comment>
        <comment type="line">// be different than ns for extension actions)</comment>
         <expr><name>Namespace</name> <name>actionNs</name> <operator>=</operator> <call><name><name>eActionConf</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
         <if_stmt><if>if <condition>(<expr><name>global</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">587</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">597</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteWorkflowAppParser</name> <block>{
                     <for>for<control>(<init><decl><type><name>Element</name></type> <name>actionXml</name><range>: <expr><name>actionJobXml</name></expr></range></decl></init>)</control><block>{<block_content>
                         <if_stmt><if>if<condition>(<expr><call><name><name>jobXml</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>actionXml</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
                             <expr_stmt><expr><name>alreadyExists</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
                            <break>break;</break>
                         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
                     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">598</literal></expr><operator>,</operator><expr><literal type="number">35</literal> <operator>+</operator><literal type="number">609</literal></expr><operator>,</operator><expr><literal type="number">39</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteWorkflowAppParser</name> <block>{
 
                 }</block></expr></expr_stmt>
             }

            if <expr_stmt><expr><operator>(</operator><name>globalConfiguration</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <block>{
            <try>try <block>{<block_content>
                <decl_stmt><decl><type><name>XConfiguration</name></type> <name>actionConf</name></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>Element</name></type> <name>actionConfiguration</name> <init>= <expr><call><name><name>eActionConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><name>actionNs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <if_stmt><if>if <condition>(<expr><name>actionConfiguration</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>actionConfiguration</name> <operator>=</operator> <operator>new</operator> <call><name>Element</name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><name>actionNs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>eActionConf</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><name>actionConfiguration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name>actionConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt/></block_content></block></if></if_stmt></block_content></block></try>}</block></expr></expr_stmt>
                <for>for <control>(<init><decl><type><name>Element</name></type> <name>globalConfig</name> <range>: <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>globalConfiguration</name><operator>.</operator><name>getChildren</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                    <decl_stmt><decl><type><name>boolean</name></type> <name>isSet</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>String</name></type> <name>globalVarName</name> <init>= <expr><call><name><name>globalConfig</name><operator>.</operator><name>getChildText</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <for>for <control>(<init><decl><type><name>Element</name></type> <name>local</name> <range>: <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>actionConfiguration</name><operator>.</operator><name>getChildren</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                        <if_stmt><if>if <condition>(<expr><call><name><name>local</name><operator>.</operator><name>getChildText</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name>actionNs</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>globalVarName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                            <expr_stmt><expr><name>isSet</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
                        </block_content>}</block></if></if_stmt>
                    </block_content>}</block></for>
                    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>isSet</name></expr>)</condition> <block>{<block_content>
                        <decl_stmt><decl><type><name>Element</name></type> <name>varToCopy</name> <init>= <expr><operator>new</operator> <call><name>Element</name><argument_list>(<argument><expr><literal type="string">"property"</literal></expr></argument>, <argument><expr><name>actionNs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name>Element</name></type> <name>varName</name> <init>= <expr><operator>new</operator> <call><name>Element</name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name>actionNs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name>Element</name></type> <name>varValue</name> <init>= <expr><operator>new</operator> <call><name>Element</name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name>actionNs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt><expr><call><name><name>varName</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>globalConfig</name><operator>.</operator><name>getChildText</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name>varValue</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>globalConfig</name><operator>.</operator><name>getChildText</name></name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt><expr><call><name><name>varToCopy</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><name>varName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name>varToCopy</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><name>varValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt><expr><call><name><name>actionConfiguration</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><name>varToCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if>
                <else>else <block>{<block_content>
                    <expr_stmt><expr><name>actionConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><name>actionConfiguration</name></expr></argument>)</argument_list></call>
                            <operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>globalConfiguration</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>Configuration</name></type> <name>globalConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(
                            <argument><expr><name>globalConfiguration</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>XConfiguration</name><operator>.</operator><name>injectDefaults</name></name><argument_list>(<argument><expr><name>globalConf</name></expr></argument>, <argument><expr><name>actionConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></if></if_stmt>
                <expr_stmt><expr><call><name><name>XConfiguration</name><operator>.</operator><name>injectDefaults</name></name><argument_list>(<argument><expr><name>configDefault</name></expr></argument>, <argument><expr><name>actionConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>position</name> <init>= <expr><call><name><name>eActionConf</name><operator>.</operator><name>indexOf</name></name><argument_list>(<argument><expr><name>actionConfiguration</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>eActionConf</name><operator>.</operator><name>removeContent</name></name><argument_list>(<argument><expr><name>actionConfiguration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//replace with enhanced one</comment>
                <decl_stmt><decl><type><name>Element</name></type> <name>eConfXml</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>actionConf</name><operator>.</operator><name>toXmlString</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>eConfXml</name><operator>.</operator><name>detach</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>eConfXml</name><operator>.</operator><name>setNamespace</name></name><argument_list>(<argument><expr><name>actionNs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><name>position</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>eActionConf</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><name>position</name></expr></argument>, <argument><expr><name>eConfXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if>
                <else>else <block>{<block_content>
                    <expr_stmt><expr><call><name><name>eActionConf</name><operator>.</operator><name>addContent</name></name><argument_list>(<argument><expr><name>eConfXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
            <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>WorkflowException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0700</name></name></expr></argument>, <argument><expr><literal type="string">"Error while processing action conf"</literal></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></catch>
            <catch>catch <parameter_list>(<parameter><decl><type><name>JDOMException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>WorkflowException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0700</name></name></expr></argument>, <argument><expr><literal type="string">"Error while processing action conf"</literal></expr></argument>)</argument_list></call></expr>;</throw>
             </block_content>}</block></catch>
         }
         else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>LiteWorkflowLib</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>LiteWorkflowLib</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">12f7ed067</literal><operator>..</operator><literal type="number">7f6f1ccab</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>LiteWorkflowLib</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>LiteWorkflowLib</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">6</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@
  <operator>*</operator> <name>to</name> <name>you</name> <name>under</name> <name>the</name> <name>Apache</name> <name>License</name></expr><operator>,</operator> <expr><name>Version</name> <literal type="number">2.0</literal> <operator>(</operator><name>the</name>
  <operator>*</operator> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name>
  <operator>*</operator> <name>with</name> <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator>      <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
  <operator>*</operator> <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
  <expr><operator>*</operator> <name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator></name>
@@ <operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LiteWorkflowLib</name> implements <name>WorkflowLib</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>WorkflowApp</name> <call><name>parseDef</name><argument_list>(<argument><expr><name>String</name> <name>appXml</name></expr></argument>, <argument><expr><name>Configuration</name> <name>jobConf</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>WorkflowException</name> <block>{
    <expr><specifier>public</specifier> <name>WorkflowApp</name> <call><name>parseDef</name><argument_list>(<argument><expr><name>String</name> <name>appXml</name></expr></argument>, <argument><expr><name>Configuration</name> <name>jobConf</name></expr></argument>, <argument><expr><name>Configuration</name> <name>configDefault</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>WorkflowException</name> <block>{
         <expr><call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><name>appXml</name></expr></argument>, <argument><expr><literal type="string">"appXml"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
         <return>return <expr><operator>new</operator> <call><name>LiteWorkflowAppParser</name><argument_list>(<argument><expr><name>schema</name></expr></argument>, <argument><expr><name>controlHandlerClass</name></expr></argument>, <argument><expr><name>decisionHandlerClass</name></expr></argument>, <argument><expr><name>actionHandlerClass</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>validateAndParse</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><name>appXml</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr>;</return>
                <expr_stmt><expr><operator>.</operator><call><name>validateAndParse</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><name>appXml</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name>configDefault</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block>
 
     <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>TestLiteWorkflowAppParser</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>TestLiteWorkflowAppParser</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a250c8cd3</name><operator>..</operator><literal type="number">8f3464c6e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>TestLiteWorkflowAppParser</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>workflow</name><operator>/</operator><name>lite</name><operator>/</operator><name><name>TestLiteWorkflowAppParser</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
              <expr><literal type="string">"  &lt;name-node&gt;bar&lt;/name-node&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;A&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;name&gt;b&lt;/name&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;value&gt;B&lt;/value&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;A&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;/configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"&lt;/map-reduce&gt;"</literal></expr>;
        <expr><name>d</name> <operator>=</operator> <call><name><name>d</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" xmlns=?(\"|\')(\"|\')"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>expectedD</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>,<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>d</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     }</block>
@@ <operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
              <expr><literal type="string">"  &lt;job-xml&gt;/spam2&lt;/job-xml&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;A&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;name&gt;b&lt;/name&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;value&gt;B&lt;/value&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;A&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;/configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"&lt;/map-reduce&gt;"</literal></expr>;
        <expr><name>d</name> <operator>=</operator> <call><name><name>d</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" xmlns=?(\"|\')(\"|\')"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>expectedD</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>,<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>d</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     }</block>
@@ <operator>-</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
                 <expr><literal type="string">"  &lt;/prepare&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"  &lt;configuration&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"      &lt;value&gt;A2&lt;/value&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"      &lt;name&gt;b&lt;/name&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"      &lt;value&gt;B&lt;/value&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"      &lt;value&gt;A2&lt;/value&gt;\r\n"</literal> <operator>+</operator>
                <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"  &lt;/configuration&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"  &lt;script&gt;/tmp&lt;/script&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"  &lt;param&gt;x&lt;/param&gt;\r\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">172</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">174</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
                 <expr><literal type="string">"  &lt;job-tracker&gt;foo&lt;/job-tracker&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"  &lt;name-node&gt;bar&lt;/name-node&gt;\r\n"</literal> <operator>+</operator>
                 <literal type="string">"&lt;/pig&gt;"</literal></expr>;
        <expr><name>e</name> <operator>=</operator> <call><name><name>e</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" xmlns=?(\"|\')(\"|\')"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>expectedE</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     }</block>
@@ <operator>-</operator><literal type="number">194</literal></expr>,<expr><literal type="number">16</literal> <operator>+</operator><literal type="number">197</literal></expr>,<expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
              <expr><literal type="string">"  &lt;/prepare&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;c&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;C&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;b&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;B&lt;/value&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;value&gt;A&lt;/value&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;b&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;B&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;c&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;C&lt;/value&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;/configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;script&gt;script.q&lt;/script&gt;\r\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">212</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">215</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
              <expr><literal type="string">"  &lt;job-tracker&gt;foo&lt;/job-tracker&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;name-node&gt;bar&lt;/name-node&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"&lt;/hive&gt;"</literal></expr>;
        <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"AAA "</literal> <operator>+</operator> <call><name><name>expectedA</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>a</name> <operator>=</operator> <call><name><name>a</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" xmlns=?(\"|\')(\"|\')"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>expectedA</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>,<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>a</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
@@ <operator>-</operator><literal type="number">236</literal></expr>,<expr><literal type="number">17</literal> <operator>+</operator><literal type="number">239</literal></expr>,<expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
              <expr><literal type="string">"  &lt;/prepare&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;A2&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;name&gt;b&lt;/name&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"      &lt;value&gt;B&lt;/value&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;property&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;name&gt;a&lt;/name&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"      &lt;value&gt;A2&lt;/value&gt;\r\n"</literal> <operator>+</operator>
             <literal type="string">"    &lt;/property&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;/configuration&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;arg&gt;/tmp/data.txt&lt;/arg&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"  &lt;arg&gt;/tmp2/data.txt&lt;/arg&gt;\r\n"</literal> <operator>+</operator>
              <literal type="string">"&lt;/distcp&gt;"</literal></expr>;
        <expr><name>b</name> <operator>=</operator> <call><name><name>b</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" xmlns=?(\"|\')(\"|\')"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>expectedB</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>,<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>b</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
@@ <operator>-</operator><literal type="number">792</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">796</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLiteWorkflowAppParser</name> extends <name>XTestCase</name> <block>{
             <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>we</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"three"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         }</block></expr>
     }</block></expr></block></expr></expr_stmt>
    

     <comment type="block">/*
      *f-&gt;(2,3)
      *2-&gt;decision node-&gt;{4,end}
diff --git a/docs/src/site/twiki/WorkflowFunctionalSpec.twiki b/docs/src/site/twiki/WorkflowFunctionalSpec.twiki
index da4cc5455..77084969f 100644
-- a/docs/src/site/twiki/WorkflowFunctionalSpec.twiki
++ b/docs/src/site/twiki/WorkflowFunctionalSpec.twiki
@@ -560,11 +560,14 @@ configurations.
 The =map-reduce= action has to be configured with all the necessary Hadoop JobConf properties to run the Hadoop
 map/reduce job.
 
Hadoop JobConf properties can be specified in a JobConf XML file bundled with the workflow application or they can be
indicated inline in the =map-reduce= action configuration.
Hadoop JobConf properties can be specified as part of 
   * the =config-default.xml= or
   * JobConf XML file bundled with the workflow application or
   * &lt;global&gt; tag in workflow definition or
   * Inline =map-reduce= action configuration. 
 
The configuration properties are loaded in the following order, =streaming=, =job-xml= and =configuration=, and later
values override earlier values.
The configuration properties are loaded in the following above order i.e. =streaming=, =job-xml= and =configuration=, and 
the precedence order is later values override earlier values.
 
 Streaming and inline property values can be parameterized (templatized) using EL expressions.
 
@@ -829,11 +832,14 @@ A =pig= action can be configured to perform HDFS files/directories cleanup or HC
 starting the Pig job. This capability enables Oozie to retry a Pig job in the situation of a transient failure (Pig
 creates temporary directories for intermediate data, thus a retry without cleanup would fail).
 
Hadoop JobConf properties can be specified in a JobConf XML file bundled with the workflow application or they can be
indicated inline in the =pig= action configuration.
Hadoop JobConf properties can be specified as part of 
   * the =config-default.xml= or
   * JobConf XML file bundled with the workflow application or
   * &lt;global&gt; tag in workflow definition or
   * Inline =pig= action configuration. 
 
The configuration properties are loaded in the following order, =job-xml= and =configuration=, and later
values override earlier values.
The configuration properties are loaded in the following above order i.e. =job-xml= and =configuration=, and 
the precedence order is later values override earlier values.
 
 Inline property values can be parameterized (templatized) using EL expressions.
 
@@ -1496,9 +1502,9 @@ used within the =transition= elements of a node.
 When a workflow job is submitted to Oozie, the submitter may specify as many workflow job properties as required
 (similar to Hadoop JobConf properties).
 
Workflow applications may define default values for the workflow job parameters. They must be defined in a
Workflow applications may define default values for the workflow job or action parameters. They must be defined in a
  =config-default.xml= file bundled with the workflow application archive (refer to section '7 Workflow
 Applications Packaging'). Workflow job properties have precedence over the default values.
 Applications Packaging'). Job or action properties specified in the workflow definition have precedence over the default values.
 
 Properties that are a valid Java identifier, &lt;code&gt;[A-Za-z_][0-9A-Za-z_]*&lt;/code&gt;, are available as '${NAME}'
 variables within the workflow definition.
@@ -2182,11 +2188,11 @@ specify an uber jar is governed by the =oozie.action.mapreduce.uber.jar.enable=
 &lt;/action&gt;
 &lt;/verbatim&gt;
 
The =config-default.xml= file defines, if any, default values for the workflow job parameters. This file must be in
The =config-default.xml= file defines, if any, default values for the workflow job or action parameters. This file must be in
 the Hadoop Configuration XML format. EL expressions are not supported and =user.name= property cannot be specified in
 this file.
 
Any other resources like =job.xml= files referenced from a workflow action action node must be included under the
Any other resources like =job.xml= files referenced from a workflow action node must be included under the
 corresponding path, relative paths always start from the root of the workflow application.
 
 ---++ 8 External Data Assumptions
diff --git a/release-log.txt b/release-log.txt
index 518eee4dd..dee1cba04 100644
-- a/release-log.txt
++ b/release-log.txt
@@ -1,5 +1,6 @@
 -- Oozie 4.1.0 release (trunk - unreleased)
 
OOZIE-1644 Default config from config-default.xml is not propagated to actions (mona)
 OOZIE-1645 Oozie upgrade DB command fails due to missing dependencies for mssql (omaliuvanchuk via rkanter)
 OOZIE-1668 Coord log streaming start and end time should be of action list start and end time (puru via rohini)
 OOZIE-1674 DB upgrade from 3.3.0 to trunk fails on postgres (rkanter)
diff --git a/sharelib/streaming/src/test/java/org/apache/oozie/action/hadoop/TestMapReduceActionExecutor.java b/sharelib/streaming/src/test/java/org/apache/oozie/action/hadoop/TestMapReduceActionExecutor.java
index 00f0261a8..7e60289de 100644
-- a/sharelib/streaming/src/test/java/org/apache/oozie/action/hadoop/TestMapReduceActionExecutor.java
++ b/sharelib/streaming/src/test/java/org/apache/oozie/action/hadoop/TestMapReduceActionExecutor.java
@@ -28,8 +28,12 @@ import org.apache.hadoop.mapred.JobID;
 import org.apache.hadoop.streaming.StreamJob;
 import org.apache.oozie.WorkflowActionBean;
 import org.apache.oozie.WorkflowJobBean;
import org.apache.oozie.client.OozieClient;
 import org.apache.oozie.client.WorkflowAction;
import org.apache.oozie.service.URIHandlerService;
import org.apache.oozie.command.wf.StartXCommand;
import org.apache.oozie.command.wf.SubmitXCommand;
import org.apache.oozie.executor.jpa.WorkflowActionQueryExecutor;
import org.apache.oozie.executor.jpa.WorkflowActionQueryExecutor.WorkflowActionQuery;
 import org.apache.oozie.service.WorkflowAppService;
 import org.apache.oozie.service.Services;
 import org.apache.oozie.service.HadoopAccessorService;
@@ -40,6 +44,7 @@ import org.apache.oozie.util.ClassUtils;
 import org.jdom.Element;
 
 import java.io.File;
import java.io.FileWriter;
 import java.io.OutputStream;
 import java.io.InputStream;
 import java.io.FileInputStream;
@@ -48,9 +53,7 @@ import java.io.Writer;
 import java.io.OutputStreamWriter;
 import java.io.StringReader;
 import java.net.URI;
import java.util.ArrayList;
 import java.util.Arrays;
import java.util.List;
 import java.util.Map;
 import java.util.Scanner;
 import java.util.jar.JarOutputStream;
@@ -76,6 +79,82 @@ public class TestMapReduceActionExecutor extends ActionExecutorTestCase {
                 + "&lt;/configuration&gt;" + "&lt;/map-reduce&gt;");
     }
 
    public void testConfigDefaultPropsToAction() throws Exception {
        String wfXml = "&lt;workflow-app xmlns=\"uri:oozie:workflow:0.5\" name=\"map-reduce-wf\"&gt;"
        + "&lt;global&gt;"
        + "&lt;job-tracker&gt;${jobTracker}&lt;/job-tracker&gt;"
        + "&lt;name-node&gt;${nameNode}&lt;/name-node&gt;"
        + "&lt;configuration&gt;&lt;property&gt;&lt;name&gt;aa&lt;/name&gt;&lt;value&gt;AA&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt;"
        + "&lt;/global&gt;"
        + "    &lt;start to=\"mr-node\"/&gt;"
        + "    &lt;action name=\"mr-node\"&gt;"
        + "      &lt;map-reduce&gt;"
        + "        &lt;prepare&gt;"
        + "          &lt;delete path=\"${nameNode}/user/${wf:user()}/mr/${outputDir}\"/&gt;"
        + "        &lt;/prepare&gt;"
        + "        &lt;configuration&gt;"
        + "          &lt;property&gt;&lt;name&gt;bb&lt;/name&gt;&lt;value&gt;BB&lt;/value&gt;&lt;/property&gt;"
        + "          &lt;property&gt;&lt;name&gt;cc&lt;/name&gt;&lt;value&gt;from_action&lt;/value&gt;&lt;/property&gt;"
        + "        &lt;/configuration&gt;"
        + "      &lt;/map-reduce&gt;"
        + "    &lt;ok to=\"end\"/&gt;"
        + "    &lt;error to=\"fail\"/&gt;"
        + "&lt;/action&gt;"
        + "&lt;kill name=\"fail\"&gt;"
        + "    &lt;message&gt;Map/Reduce failed, error message[${wf:errorMessage(wf:lastErrorNode())}]&lt;/message&gt;"
        + "&lt;/kill&gt;"
        + "&lt;end name=\"end\"/&gt;"
        + "&lt;/workflow-app&gt;";

        Writer writer = new FileWriter(getTestCaseDir() + "/workflow.xml");
        IOUtils.copyCharStream(new StringReader(wfXml), writer);

        Configuration conf = new XConfiguration();
        conf.set("nameNode", getNameNodeUri());
        conf.set("jobTracker", getJobTrackerUri());
        conf.set(OozieClient.USER_NAME, getTestUser());
        conf.set(OozieClient.APP_PATH, "file://" + getTestCaseDir() + File.separator + "workflow.xml");
        conf.set(OozieClient.LOG_TOKEN, "t");

        OutputStream os = new FileOutputStream(getTestCaseDir() + "/config-default.xml");
        XConfiguration defaultConf = new XConfiguration();
        defaultConf.set("outputDir", "output-data-dir");
        defaultConf.set("mapred.mapper.class", "MM");
        defaultConf.set("mapred.reducer.class", "RR");
        defaultConf.set("cc", "from_default");
        defaultConf.writeXml(os);
        os.close();

        String wfId = new SubmitXCommand(conf).call();
        new StartXCommand(wfId).call();
        sleep(3000);

        WorkflowActionBean mrAction = WorkflowActionQueryExecutor.getInstance().get(WorkflowActionQuery.GET_ACTION,
                wfId + "@mr-node");

        // check NN and JT settings
        Element eConf = XmlUtils.parseXml(mrAction.getConf());
        eConf = eConf.getChild("name-node", eConf.getNamespace());
        assertEquals(getNameNodeUri(), eConf.getText());
        eConf = XmlUtils.parseXml(mrAction.getConf());
        eConf = eConf.getChild("job-tracker", eConf.getNamespace());
        assertEquals(getJobTrackerUri(), eConf.getText());

        // check other m-r settings
        eConf = XmlUtils.parseXml(mrAction.getConf());
        eConf = eConf.getChild("configuration", eConf.getNamespace());
        Configuration actionConf = new XConfiguration(new StringReader(XmlUtils.prettyPrint(eConf).toString()));
        assertEquals("output-data-dir", actionConf.get("outputDir"));
        assertEquals("MM", actionConf.get("mapred.mapper.class"));
        assertEquals("RR", actionConf.get("mapred.reducer.class"));
        // check that default did not overwrite same property explicit in action conf
        assertEquals("from_action", actionConf.get("cc"));
        // check that original conf and from global was not deleted
        assertEquals("AA", actionConf.get("aa"));
        assertEquals("BB", actionConf.get("bb"));

    }

     @SuppressWarnings("unchecked")
     public void testSetupMethods() throws Exception {
         MapReduceActionExecutor ae = new MapReduceActionExecutor();
- 
2.19.1.windows.1

</comment></unit>
