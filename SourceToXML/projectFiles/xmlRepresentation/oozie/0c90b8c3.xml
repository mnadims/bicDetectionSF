<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/0c90b8c3.java"><expr_stmt><expr><name>From</name> <literal type="number">0c90b8c3629ffbf98fdafa5081979a7d42aaf056</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Kanter</name> <argument_list type="generic">&lt;<argument><name>rkanter</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">9</literal> <name>Mar</name> <literal type="number">2015</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">44</literal><operator>:</operator><literal type="number">12</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">2126</literal> <name>SSH</name> <name>action</name> <name>can</name> <name>be</name> <name>too</name> <name>fast</name></expr></expr_stmt> <for>for Oozie sometimes
 <control>(<init><expr><name>rkanter</name></expr></init>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>CompletedActionXCommand</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">38</literal> <operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallbackService</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator>
 <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>     <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>wf</name><operator>/</operator><name><name>TestCompletedActionXCommand</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">200</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>service</name><operator>/</operator><name><name>TestConfigurationService</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">7</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">251</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">7</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>TestCompletedActionXCommand</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7630c2f66</literal><operator>..</operator><literal type="number">2fd2e9995</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> enum <name>ErrorCode</name> <block>{
     <expr><call><name>E0818</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Action [{0}] status is running but WF Job [{1}] status is [{2}]. Expected status is RUNNING or SUSPENDED."</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E0819</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Unable to delete the temp dir of job WF Job [{0}]."</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E0820</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Action user retry max [{0}] is over system defined max [{1}], re-assign to use system max."</literal></expr></argument>)</argument_list></call></expr>,
    <expr><call><name>E0821</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Received early callback for action still in PREP state; will wait [{0}]ms and requeue up to [{1}] more times"</literal></expr></argument>)</argument_list></call></expr>,
    <expr><call><name>E0822</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Received early callback for action [{0}] while still in PREP state and exhausted all requeues"</literal></expr></argument>)</argument_list></call></expr>,
 
     <expr><call><name>E0900</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>OPS</name></name></expr></argument>, <argument><expr><literal type="string">"JobTracker [{0}] not allowed, not in Oozie's whitelist. Allowed values are: {1}"</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E0901</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>OPS</name></name></expr></argument>, <argument><expr><literal type="string">"NameNode [{0}] not allowed, not in Oozie's whitelist. Allowed values are: {1}"</literal></expr></argument>)</argument_list></call></expr>,
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>CompletedActionXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>CompletedActionXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b1226ccf8</name><operator>..</operator><name>bc39bce14</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>CompletedActionXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>CompletedActionXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">28</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>PreconditionException</name></name>;</import></block></expr></expr_stmt></block_content></block></for>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>WorkflowActionQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ActionService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>CallbackService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>LogUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompletedActionXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>actionId</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>externalStatus</name></expr>;
     <expr><specifier>private</specifier> <name>WorkflowActionBean</name> <name>wfactionBean</name></expr>;
    <expr><specifier>private</specifier> <name>int</name> <name>earlyRequeueCount</name></expr>;
 
    <expr><specifier>public</specifier> <call><name>CompletedActionXCommand</name><argument_list>(<argument><expr><name>String</name> <name>actionId</name></expr></argument>, <argument><expr><name>String</name> <name>externalStatus</name></expr></argument>, <argument><expr><name>Properties</name> <name>actionData</name></expr></argument>, <argument><expr><name>int</name> <name>priority</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <call><name>CompletedActionXCommand</name><argument_list>(<argument><expr><name>String</name> <name>actionId</name></expr></argument>, <argument><expr><name>String</name> <name>externalStatus</name></expr></argument>, <argument><expr><name>Properties</name> <name>actionData</name></expr></argument>, <argument><expr><name>int</name> <name>priority</name></expr></argument>,
                                   <argument><expr><name>int</name> <name>earlyRequeueCount</name></expr></argument>)</argument_list></call> <block>{
         <expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"callback"</literal></expr></argument>, <argument><expr><literal type="string">"callback"</literal></expr></argument>, <argument><expr><name>priority</name></expr></argument>)</argument_list></call></expr>;
         <expr><name><name>this</name><operator>.</operator><name>actionId</name></name> <operator>=</operator> <call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><name>actionId</name></expr></argument>, <argument><expr><literal type="string">"actionId"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name><name>this</name><operator>.</operator><name>externalStatus</name></name> <operator>=</operator> <call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><name>externalStatus</name></expr></argument>, <argument><expr><literal type="string">"externalStatus"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name><name>this</name><operator>.</operator><name>earlyRequeueCount</name></name> <operator>=</operator> <name>earlyRequeueCount</name></expr>;
    }</block>

    <specifier>public</specifier> <call><name>CompletedActionXCommand</name><argument_list>(<argument><expr><name>String</name> <name>actionId</name></expr></argument>, <argument><expr><name>String</name> <name>externalStatus</name></expr></argument>, <argument><expr><name>Properties</name> <name>actionData</name></expr></argument>, <argument><expr><name>int</name> <name>priority</name></expr></argument>)</argument_list></call> <block>{
        <expr><call><name>this</name><argument_list>(<argument><expr><name>actionId</name></expr></argument>, <argument><expr><name>externalStatus</name></expr></argument>, <argument><expr><name>actionData</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     <specifier>public</specifier> <call><name>CompletedActionXCommand</name><argument_list>(<argument><expr><name>String</name> <name>actionId</name></expr></argument>, <argument><expr><name>String</name> <name>externalStatus</name></expr></argument>, <argument><expr><name>Properties</name> <name>actionData</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">79</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">87</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompletedActionXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     @<name>Override</name>
     <specifier>protected</specifier> <name>void</name> <call><name>eagerVerifyPrecondition</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>CommandException</name></expr></argument>, <argument><expr><name>PreconditionException</name> <block>{</block></expr></argument></throws></expr>
        <if_stmt><if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>WorkflowActionBean</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>WorkflowActionBean</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name>
                <operator>&amp;&amp;</operator> <call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>WorkflowActionBean</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr>)</condition> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0800</name></name></expr></argument>, <argument><expr><name>actionId</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr>
     }</block>
@@ <operator>-</operator><literal type="number">91</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">100</literal></expr>,<expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompletedActionXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     @<name>Override</name>
     <specifier>protected</specifier> <name>Void</name> <call><name>execute</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>CommandException</name> <block>{
        <expr><name>ActionExecutor</name> <name>executor</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExecutor</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <comment type="line">// this is done because oozie notifications (of sub-wfs) is send</comment>
        <comment type="line">// every status change, not only on completion.</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>executor</name><operator>.</operator><name>isCompleted</name></name><argument_list>(<argument><expr><name>externalStatus</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>queue</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ActionCheckXCommand</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getPriority</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// If the action is still in PREP, we probably received a callback before Oozie was able to update from PREP to RUNNING;</comment>
        <comment type="line">// we'll requeue this command a few times and hope that it switches to RUNNING before giving up</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>WorkflowActionBean</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>maxEarlyRequeueCount</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>CallbackService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getEarlyRequeueMaxRetries</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>earlyRequeueCount</name></name> <operator>&lt;</operator> <name>maxEarlyRequeueCount</name></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>long</name></type> <name>delay</name> <init>= <expr><call><name>getRequeueDelay</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Received early callback for action still in PREP state; will wait [{0}]ms and requeue up to [{1}] more"</literal>
                        <operator>+</operator> <literal type="string">" times"</literal></expr></argument>, <argument><expr><name>delay</name></expr></argument>, <argument><expr><operator>(</operator><name>maxEarlyRequeueCount</name> <operator>-</operator> <name>earlyRequeueCount</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>queue</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CompletedActionXCommand</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>actionId</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>externalStatus</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call></expr></argument>,
                        <argument><expr><name><name>this</name><operator>.</operator><name>earlyRequeueCount</name></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0822</name></name></expr></argument>, <argument><expr><name>actionId</name></expr></argument>)</argument_list></call></expr>;</throw>
            <expr_stmt/></block_content></block></else></if_stmt>}</block></expr>
        }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>    <comment type="line">// RUNNING</comment>
            <decl_stmt><decl><type><name>ActionExecutor</name></type> <name>executor</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ActionService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExecutor</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line">// this is done because oozie notifications (of sub-wfs) is send</comment>
            <comment type="line">// every status change, not only on completion.</comment>
            <if_stmt><if>if <condition>(<expr><call><name><name>executor</name><operator>.</operator><name>isCompleted</name></name><argument_list>(<argument><expr><name>externalStatus</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name>queue</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ActionCheckXCommand</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>wfactionBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getPriority</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
         </block_content>}</block></else></if_stmt>
         <return>return <expr><literal type="null">null</literal></expr>;</return>
     }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallbackService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallbackService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7fa07f18f</literal><operator>..</operator><literal type="number">405701d76</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallbackService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallbackService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>CallbackService</name> implements <name>Service</name> <block>{
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>CONF_BASE_URL</name> <operator>=</operator> <name>CONF_PREFIX</name> <operator>+</operator> <literal type="string">"base.url"</literal></expr>;
 
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>CONF_EARLY_REQUEUE_MAX_RETRIES</name> <operator>=</operator> <name>CONF_PREFIX</name> <operator>+</operator> <literal type="string">"early.requeue.max.retries"</literal></expr>;

     <expr><specifier>private</specifier> <name>Configuration</name> <name>oozieConf</name></expr>;
    <expr><specifier>private</specifier> <name>int</name> <name>earlyRequeueMaxRetries</name></expr>;
 
     <comment type="block" format="javadoc">/**
      * Initialize the service.
@@ -45,6 +48,7 @@ public class CallbackService implements Service {
      */</comment>
     <expr><specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Services</name> <name>services</name></expr></argument>)</argument_list></call> <block>{
         <expr><name>oozieConf</name> <operator>=</operator> <call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr>;
        <expr><name>earlyRequeueMaxRetries</name> <operator>=</operator> <call><name><name>ConfigurationService</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name>CONF_EARLY_REQUEUE_MAX_RETRIES</name></expr></argument>)</argument_list></call></expr>;
     }</block></expr>
 
     <comment type="block" format="javadoc">/**
@@ -132,4 +136,7 @@ public class CallbackService implements Service {
         }
     }
 
    public int getEarlyRequeueMaxRetries() {
        return earlyRequeueMaxRetries;
    }
 }
diff --git a/core/src/main/resources/oozie-default.xml b/core/src/main/resources/oozie-default.xml
index 98433300e..cb65502e0 100644
-- a/core/src/main/resources/oozie-default.xml
++ b/core/src/main/resources/oozie-default.xml
@@ -1518,6 +1518,15 @@
         &lt;/description&gt;
     &lt;/property&gt;
 
    &lt;property&gt;
        &lt;name&gt;oozie.service.CallbackService.early.requeue.max.retries&lt;/name&gt;
        &lt;value&gt;5&lt;/value&gt;
        &lt;description&gt;
            If Oozie receives a callback too early (while the action is in PREP state), it will requeue the command this many times
            to give the action time to transition to RUNNING.
        &lt;/description&gt;
    &lt;/property&gt;

     &lt;!-- CallbackServlet --&gt;
 
     &lt;property&gt;
diff --git a/core/src/test/java/org/apache/oozie/command/wf/TestCompletedActionXCommand.java b/core/src/test/java/org/apache/oozie/command/wf/TestCompletedActionXCommand.java
new file mode 100644
index 000000000..a4f0e837d
-- /dev/null
++ b/core/src/test/java/org/apache/oozie/command/wf/TestCompletedActionXCommand.java
@@ -0,0 +1,200 @@
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>wf</name></name>;</package></block></expr></expr_stmt>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowActionBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>XCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>InstrumentationService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XDataTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Instrumentation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>workflow</name><operator>.</operator><name>WorkflowInstance</name></name>;</import>

<class><specifier>public</specifier> class <name>TestCompletedActionXCommand</name> <super_list><extends>extends <super><name>XDataTestCase</name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>Services</name></type> <name>services</name></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>tearDown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testEarlyCallbackTimeout</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>Instrumentation</name></type> <name>inst</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>InstrumentationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>WorkflowJobBean</name></type> <name>job</name> <init>= <expr><call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>WorkflowActionBean</name></type> <name>action</name> <init>= <expr><call><name>addRecordToWfActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>CompletedActionXCommand</name></type> <name>cmd</name> <init>= <expr><operator>new</operator> <call><name>CompletedActionXCommand</name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>xexceptionCount</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">".xexceptions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>xexceptionCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>executionsCount</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">".executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>executionsCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>executionCount</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>executionCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">".execution"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>executionCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>executionCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>cmd</name><operator>.</operator><name>call</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>timeout</name> <init>= <expr><literal type="number">10000</literal> <operator>*</operator> <literal type="number">5</literal> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>waitFor</name><argument_list>(<argument><expr><name>timeout</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <decl_stmt><decl><type><name>long</name></type> <name>xexceptionCount</name></decl>;</decl_stmt>
                <try>try <block>{<block_content>
                    <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                            <operator>+</operator> <literal type="string">".xexceptions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block> <catch>catch<parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <comment type="line">//counter might be null</comment>
                    <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
                </block_content>}</block></catch></try>
                <return>return <expr><operator>(</operator><name>xexceptionCount</name> <operator>==</operator> <literal type="number">1L</literal><operator>)</operator></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                <operator>+</operator> <literal type="string">".executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6L</literal></expr></argument>, <argument><expr><name>executionsCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>executionCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">".execution"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>executionCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>executionCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                <operator>+</operator> <literal type="string">".xexceptions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><name>xexceptionCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testEarlyCallbackTransitionToRunning</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>Instrumentation</name></type> <name>inst</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>InstrumentationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>WorkflowJobBean</name></type> <name>job</name> <init>= <expr><call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>WorkflowActionBean</name></type> <name>action</name> <init>= <expr><call><name>addRecordToWfActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>CompletedActionXCommand</name></type> <name>cmd</name> <init>= <expr><operator>new</operator> <call><name>CompletedActionXCommand</name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>xexceptionCount</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">".xexceptions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>xexceptionCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>executionsCount</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">".executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>executionsCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>checkXCommandExecutionsCount</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>checkXCommandExecutionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                    <argument><expr><literal type="string">"action.check.executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>checkXCommandExecutionsCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>checkXCommandExecutionsCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>cmd</name><operator>.</operator><name>call</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>timeout</name> <init>= <expr><literal type="number">100000</literal> <operator>*</operator> <literal type="number">5</literal> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>waitFor</name><argument_list>(<argument><expr><name>timeout</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <decl_stmt><decl><type><name>long</name></type> <name>executionsCount</name></decl>;</decl_stmt>
                <try>try <block>{<block_content>
                    <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                            <operator>+</operator> <literal type="string">".executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
                    <comment type="line">//counter might be null</comment>
                    <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
                </block_content>}</block></catch></try>
                <if_stmt><if>if <condition>(<expr><name>executionsCount</name> <operator>==</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <comment type="line">// Transition the action to RUNNING</comment>
                    <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setStatus</name></name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(
                            <argument><expr><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>WorkflowActionQuery</name><operator>.</operator><name>UPDATE_ACTION</name></name></expr></argument>, <argument><expr><name>action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <decl_stmt><decl><type><name>long</name></type> <name>checkXCommandExecutionsCount</name></decl>;</decl_stmt>
                <try>try <block>{<block_content>
                    <expr_stmt><expr><name>checkXCommandExecutionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                            <argument><expr><literal type="string">"action.check.executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
                    <comment type="line">//counter might be null</comment>
                    <expr_stmt><expr><name>checkXCommandExecutionsCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
                </block_content>}</block></catch></try>
                <return>return <expr><operator>(</operator><name>checkXCommandExecutionsCount</name> <operator>==</operator> <literal type="number">1L</literal><operator>)</operator></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>executionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                <operator>+</operator> <literal type="string">".executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"expected a value greater than 3L, but found "</literal> <operator>+</operator> <name>executionsCount</name></expr></argument>, <argument><expr><name>executionsCount</name> <operator>&gt;=</operator> <literal type="number">3L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>checkXCommandExecutionsCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                    <argument><expr><literal type="string">"action.check.executions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><name>checkXCommandExecutionsCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XCommand</name><operator>.</operator><name>INSTRUMENTATION_GROUP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>cmd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">".xexceptions"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NullPointerException</name></type> <name>npe</name></decl></parameter>)</parameter_list><block>{<block_content>
            <comment type="line">//counter might be null</comment>
            <expr_stmt><expr><name>xexceptionCount</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>xexceptionCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestConfigurationService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestConfigurationService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b1dde2c19</name><operator>..</operator><name>ddb3d58f3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestConfigurationService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestConfigurationService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestConfigurationService</name> extends <name>XTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>ConfigUtils</name><operator>.</operator><name>STRING_DEFAULT</name></name></expr></argument>, <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>testConf</name></expr></argument>, <argument><expr><literal type="string">"test.nonexist"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"http://localhost:8080/oozie/callback"</literal></expr></argument>, <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>CallbackService</name><operator>.</operator><name>CONF_BASE_URL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name><name>CallbackService</name><operator>.</operator><name>CONF_EARLY_REQUEUE_MAX_RETRIES</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"gz"</literal></expr></argument>, <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>CodecFactory</name><operator>.</operator><name>COMPRESSION_OUTPUT_CODEC</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4096</literal></expr></argument>, <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name><name>XLogStreamingService</name><operator>.</operator><name>STREAM_BUFFER_LEN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">10000</literal></expr></argument>,  <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><name><name>JvmPauseMonitorService</name><operator>.</operator><name>WARN_THRESHOLD_KEY</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">1e6e101c6</literal><operator>..</operator><literal type="number">6ab5737e4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr>,<expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr>,<expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.2.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">2126</literal> <name>SSH</name> <name>action</name> <name>can</name> <name>be</name> <name>too</name> <name>fast</name></expr> <for>for Oozie sometimes <control>(<init><expr><name>rkanter</name></expr></init>)</control><block type="pseudo"><block_content>
 <expr><name>OOZIE</name><operator>-</operator><literal type="number">2142</literal> <name>Changing</name> <name>the</name> <name>JT</name> <name>whitelist</name> <name>causes</name> <name>running</name> <name>Workflows</name> <name>to</name> <name>stay</name> <name>RUNNING</name> <call><name>forever</name> <argument_list>(<argument><expr><name>rkanter</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2164</literal> <name>make</name> <name>master</name> <name>parameterizable</name> <name>in</name> <name>Spark</name> <name>action</name> <call><name>example</name> <argument_list>(<argument><expr><name>wypoon</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2155</literal> <name>Incorrect</name> <name>DST</name> <name>Shifts</name> <name>are</name> <name>occurring</name> <name>based</name> <name>on</name> <name>the</name> <name>Database</name> <call><name>timezone</name> <argument_list>(<argument><expr><name>rkanter</name></expr></argument>)</argument_list></call>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block_content></block></for></block></expr></expr_stmt>

</unit>
