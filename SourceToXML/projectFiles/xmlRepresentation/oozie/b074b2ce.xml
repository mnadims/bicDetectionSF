<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/b074b2ce.java"><expr_stmt><expr><name>From</name> <name>b074b2ceec82d081441d7dd3bd7dee8506c67bd6</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Kanter</name> <argument_list type="generic">&lt;<argument><name>rkanter</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">18</literal> <name>Aug</name> <literal type="number">2015</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">46</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">2332</literal> <name>Add</name> <name>ability</name> <name>to</name> <name>provide</name> <name>Hive</name> <name>and</name> <name>Hive</name> <literal type="number">2</literal> <name>Action</name>
 <name>queries</name> <name>inline</name> <name>in</name> <call><name>workflows</name> <argument_list>(<argument><expr><name>prateekrungta</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.6.xsd</literal> <operator>|</operator>  <literal type="number">72</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>hive2</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal>   <operator>|</operator>  <literal type="number">74</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>Hive2ActionExecutor</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">48</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveActionExecutor</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">43</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>ScriptLanguageActionExecutor</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_Hive2ActionExtension</name><operator>.</operator><name>twiki</name></name>  <operator>|</operator>  <literal type="number">69</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_HiveActionExtension</name><operator>.</operator><name>twiki</name></name>   <operator>|</operator>  <literal type="number">64</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveMain</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">75</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveActionExecutor</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">161</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveMain</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>Hive2Main</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">73</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHive2ActionExecutor</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">191</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">15</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">703</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">206</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.6.xsd</literal>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>hive2</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">48bac7d78</literal><operator>..</operator><literal type="number">65291ff13</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">2081</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2081</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieCLI</name> <block>{
                         <expr><literal type="string">"hive-action-0.4.xsd"</literal></expr>))</block></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
                 <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                         <argument><expr><literal type="string">"hive-action-0.5.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                        <argument><expr><literal type="string">"hive-action-0.6.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                         <argument><expr><literal type="string">"sqoop-action-0.2.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">2093</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">2095</literal></expr></argument>,<argument><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>OozieCLI</name> <block>{
                         <expr><literal type="string">"ssh-action-0.2.xsd"</literal></expr></block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                         <argument><expr><literal type="string">"hive2-action-0.1.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call>
                        <operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"spark-action-0.1.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                        <argument><expr><literal type="string">"hive2-action-0.2.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                        <argument><expr><literal type="string">"spark-action-0.1.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <decl_stmt><decl><type><name>SchemaFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>SchemaFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>XMLConstants</name><operator>.</operator><name>W3C_XML_SCHEMA_NS_URI</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>Schema</name></type> <name>schema</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>newSchema</name></name><argument_list>(<argument><expr><call><name><name>sources</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>StreamSource</name><index>[<expr><call><name><name>sources</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>Validator</name></type> <name>validator</name> <init>= <expr><call><name><name>schema</name><operator>.</operator><name>newValidator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.6.xsd</literal> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.6.xsd</literal>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..720c4a2a0</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.6.xsd</literal>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><ternary><condition><expr><literal type="number">72</literal> @@
<operator>&lt;</operator></expr>?</condition><then><expr><name>xml</name> <name>version</name><operator>=</operator><literal type="string">"1.0"</literal> <name>encoding</name><operator>=</operator><ternary><condition><expr><literal type="string">"UTF-8"</literal></expr>?</condition><then><expr><operator>&gt;</operator>
<operator>&lt;</operator><operator>!</operator><operator>--</operator>
  <name>Licensed</name> <name>to</name> <name>the</name> <name>Apache</name> <name>Software</name> <call><name>Foundation</name> <argument_list>(<argument><expr><name>ASF</name></expr></argument>)</argument_list></call> <name>under</name> <name>one</name>
  <name>or</name> <name>more</name> <name>contributor</name> <name>license</name> <name><name>agreements</name><operator>.</operator>  <name>See</name></name> <name>the</name> <name>NOTICE</name> <name>file</name>
  <name>distributed</name> <name>with</name> <name>this</name> <name>work</name></expr></then></ternary></expr></then></ternary></expr></expr_stmt> <for>for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License<operator>,</operator> <expr_stmt><expr><name>Version</name> <literal type="number">2.0</literal> <operator>(</operator><name>the</name>
  <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt></for> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name>
  <name>with</name> <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>

       <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>

  <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
  <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
  <expr><name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator>
  <name>See</name></name> <name>the</name> <name>License</name></expr></expr_stmt> <for>for the specific language governing permissions and
  limitations under the License.
--&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:hive="uri:oozie:hive-action:0.6" elementFormDefault="qualified"
           targetNamespace="uri:oozie:hive-action:0.6"&gt;

    &lt;xs:element name="hive" type="hive:ACTION"/&gt;

    &lt;xs:complexType name="ACTION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="job-tracker" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="name-node" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="prepare" type="hive:PREPARE" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="job-xml" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="configuration" type="hive:CONFIGURATION" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:choice minOccurs="1" maxOccurs="1"&gt;
                &lt;xs:element name="script" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
                &lt;xs:element name="query" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
            &lt;/xs:choice&gt;
            &lt;xs:element name="param" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="argument" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="file" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="archive" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="CONFIGURATION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="property" minOccurs="1" maxOccurs="unbounded"&gt;
                &lt;xs:complexType&gt;
                    &lt;xs:sequence&gt;
                        &lt;xs:element name="name" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="value" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="description" minOccurs="0" maxOccurs="1" type="xs:string"/&gt;
                    &lt;/xs:sequence&gt;
                &lt;/xs:complexType&gt;
            &lt;/xs:element&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="PREPARE"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="delete" type="hive:DELETE" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="mkdir" type="hive:MKDIR" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="DELETE"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="MKDIR"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;

&lt;/xs:schema&gt;
diff --git a/client/src/main/resources/hive2-action-0.2.xsd b/client/src/main/resources/hive2-action-0.2.xsd
new file mode 100644
index 000000000..f5d7a6084
-- /dev/null
++ b/client/src/main/resources/hive2-action-0.2.xsd
@@ -0<operator>,</operator><expr_stmt><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><ternary><condition><expr><literal type="number">74</literal> @@
<operator>&lt;</operator></expr>?</condition><then><expr><name>xml</name> <name>version</name><operator>=</operator><literal type="string">"1.0"</literal> <name>encoding</name><operator>=</operator><ternary><condition><expr><literal type="string">"UTF-8"</literal></expr>?</condition><then><expr><operator>&gt;</operator>
<operator>&lt;</operator><operator>!</operator><operator>--</operator>
  <name>Licensed</name> <name>to</name> <name>the</name> <name>Apache</name> <name>Software</name> <call><name>Foundation</name> <argument_list>(<argument><expr><name>ASF</name></expr></argument>)</argument_list></call> <name>under</name> <name>one</name>
  <name>or</name> <name>more</name> <name>contributor</name> <name>license</name> <name><name>agreements</name><operator>.</operator>  <name>See</name></name> <name>the</name> <name>NOTICE</name> <name>file</name>
  <name>distributed</name> <name>with</name> <name>this</name> <name>work</name></expr></then></ternary></expr></then></ternary></expr></expr_stmt></for> <for>for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License<operator>,</operator> <expr_stmt><expr><name>Version</name> <literal type="number">2.0</literal> <operator>(</operator><name>the</name>
  <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt></for> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name>
  <name>with</name> <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>

       <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>

  <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
  <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
  <expr><name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator>
  <name>See</name></name> <name>the</name> <name>License</name></expr></expr_stmt> <for>for the specific language governing permissions and
  limitations under the License.
--&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:hive2="uri:oozie:hive2-action:0.2" elementFormDefault="qualified"
           targetNamespace="uri:oozie:hive2-action:0.2"&gt;

    &lt;xs:element name="hive2" type="hive2:ACTION"/&gt;

    &lt;xs:complexType name="ACTION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="job-tracker" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="name-node" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="prepare" type="hive2:PREPARE" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="job-xml" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="configuration" type="hive2:CONFIGURATION" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="jdbc-url" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
            &lt;xs:element name="password" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:choice minOccurs="1" maxOccurs="1"&gt;
                &lt;xs:element name="script" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
                &lt;xs:element name="query" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
            &lt;/xs:choice&gt;
            &lt;xs:element name="param" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="argument" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="file" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="archive" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="CONFIGURATION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="property" minOccurs="1" maxOccurs="unbounded"&gt;
                &lt;xs:complexType&gt;
                    &lt;xs:sequence&gt;
                        &lt;xs:element name="name" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="value" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="description" minOccurs="0" maxOccurs="1" type="xs:string"/&gt;
                    &lt;/xs:sequence&gt;
                &lt;/xs:complexType&gt;
            &lt;/xs:element&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="PREPARE"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="delete" type="hive2:DELETE" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="mkdir" type="hive2:MKDIR" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="DELETE"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="MKDIR"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;

&lt;/xs:schema&gt;
\ No newline at end of file
diff --git a/core/src/main/java/org/apache/oozie/action/hadoop/Hive2ActionExecutor.java b/core/src/main/java/org/apache/oozie/action/hadoop/Hive2ActionExecutor.java
index 704b762cc..b5b1bf908 100644
-- a/core/src/main/java/org/apache/oozie/action/hadoop/Hive2ActionExecutor.java
++ b/core/src/main/java/org/apache/oozie/action/hadoop/Hive2ActionExecutor.java
@@ -21<operator>,</operator><expr_stmt><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt></for> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name></name>;</package>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_ACTION_MAIN_CLASS</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URISyntaxException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2ActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
     <expr><specifier>static</specifier> <name>final</name> <name>String</name> <name>HIVE2_JDBC_URL</name> <operator>=</operator> <literal type="string">"oozie.hive2.jdbc.url"</literal></expr>;
     <expr><specifier>static</specifier> <name>final</name> <name>String</name> <name>HIVE2_PASSWORD</name> <operator>=</operator> <literal type="string">"oozie.hive2.password"</literal></expr>;
     <expr><specifier>static</specifier> <name>final</name> <name>String</name> <name>HIVE2_SCRIPT</name> <operator>=</operator> <literal type="string">"oozie.hive2.script"</literal></expr>;
    <expr><specifier>static</specifier> <name>final</name> <name>String</name> <name>HIVE2_QUERY</name> <operator>=</operator> <literal type="string">"oozie.hive2.query"</literal></expr>;
     <expr><specifier>static</specifier> <name>final</name> <name>String</name> <name>HIVE2_PARAMS</name> <operator>=</operator> <literal type="string">"oozie.hive2.params"</literal></expr>;
     <expr><specifier>static</specifier> <name>final</name> <name>String</name> <name>HIVE2_ARGS</name> <operator>=</operator> <literal type="string">"oozie.hive2.args"</literal></expr>;
 
    <expr><specifier>private</specifier> <name>boolean</name> <name>addScriptToCache</name></expr>;

     <expr><specifier>public</specifier> <call><name>Hive2ActionExecutor</name><argument_list>()</argument_list></call> <block>{
         <expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"hive2"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name><name>this</name><operator>.</operator><name>addScriptToCache</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
     }</block>
 
     @<name>Override</name>
@@ <operator>-</operator><literal type="number">63</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">65</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2ActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
         <return>return <expr><name>classes</name></expr>;</return></block></expr>
     }</block>
 
    @<name>Override</name>
    <specifier>protected</specifier> <name>boolean</name> <call><name>shouldAddScriptToCache</name><argument_list>()</argument_list></call><block>{
        <return>return <expr><name><name>this</name><operator>.</operator><name>addScriptToCache</name></name></expr>;</return>
    }</block></expr></expr_stmt>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>protected</specifier> <name>String</name></type> <name>getLauncherMain</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>launcherConf</name></decl></parameter>, <parameter><decl><type><name>Element</name></type> <name>actionXml</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><call><name><name>launcherConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_CLASS</name></expr></argument>, <argument><expr><name>HIVE2_MAIN_CLASS_NAME</name></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">29</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2ActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
         <expr><name>Namespace</name> <name>ns</name> <operator>=</operator> <call><name><name>actionXml</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr>;
 
         <expr><name>String</name> <name>jdbcUrl</name> <operator>=</operator> <call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"jdbc-url"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE2_JDBC_URL</name></expr></argument>, <argument><expr><name>jdbcUrl</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>String</name> <name>password</name> <operator>=</operator> <literal type="null">null</literal></expr>;
         <expr><name>Element</name> <name>passwordElement</name> <operator>=</operator> <call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr>;
         <if_stmt><if>if <condition>(<expr><name>passwordElement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><name>password</name> <operator>=</operator> <call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE2_PASSWORD</name></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></if></if_stmt>}</block>
 
        <name>String</name> <name>script</name> <operator>=</operator> <call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"script"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>scriptName</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>beelineScriptContent</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getProtoActionConf</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>HIVE2_SCRIPT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>beelineScriptContent</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
            <expr_stmt><expr><call><name>addToCache</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>script</name> <operator>+</operator> <literal type="string">"#"</literal> <operator>+</operator> <name>scriptName</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>queryElement</name> <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"query"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>scriptElement</name>  <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"script"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><name>scriptElement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>script</name> <init>= <expr><call><name><name>scriptElement</name><operator>.</operator><name>getTextTrim</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>scriptName</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>addScriptToCache</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE2_SCRIPT</name></expr></argument>, <argument><expr><name>scriptName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>queryElement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// Unable to use getTextTrim due to https://issues.apache.org/jira/browse/HIVE-8182</comment>
            <decl_stmt><decl><type><name>String</name></type> <name>query</name> <init>= <expr><call><name><name>queryElement</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE2_QUERY</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>ActionExecutorException</name><argument_list>(<argument><expr><name><name>ActionExecutorException</name><operator>.</operator><name>ErrorType</name><operator>.</operator><name>ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"INVALID_ARGUMENTS"</literal></expr></argument>,
                <argument><expr><literal type="string">"Hive 2 action requires one of &lt;script&gt; or &lt;query&gt; to be set. Neither were found."</literal></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></else></if_stmt>
 
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>actionXml</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"param"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2ActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
         <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>params</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <expr_stmt><expr><name><name>strParams</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></for>
        <call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE2_PARAMS</name></expr></argument>, <argument><expr><name>strParams</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>

         <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>strArgs</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name></type> <name>eArgs</name> <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"argument"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>eArgs</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>eArgs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2ActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
                 <expr><name><name>strArgs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>eArgs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;
             }</block></expr></expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE2_ARGS</name></expr></argument>, <argument><expr><name>strArgs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <expr_stmt><expr><call><name>setHive2Props</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>jdbcUrl</name></expr></argument>, <argument><expr><name>password</name></expr></argument>, <argument><expr><name>scriptName</name></expr></argument>, <argument><expr><name>strParams</name></expr></argument>, <argument><expr><name>strArgs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <return>return <expr><name>conf</name></expr>;</return>
     </block_content>}</block></if></if_stmt>
 
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>setHive2Props</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>jdbcUrl</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>password</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>script</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>params</name></decl></parameter>,
            <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE2_JDBC_URL</name></expr></argument>, <argument><expr><name>jdbcUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>password</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE2_PASSWORD</name></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE2_SCRIPT</name></expr></argument>, <argument><expr><name>script</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE2_PARAMS</name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE2_ARGS</name></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>protected</specifier> <name>boolean</name></type> <name>getCaptureOutput</name><parameter_list>(<parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JDOMException</name></expr></argument></throws> <block>{<block_content>
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bc5b0336a</name><operator>..</operator><name>c74e9e61c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name></name>;</package>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_ACTION_MAIN_CLASS</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URISyntaxException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobConf</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>RunningJob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutor</name><operator>.</operator><name>Context</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>XOozieClient</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ConfigurationService</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Namespace</name></name>;</import>
 <class><specifier>public</specifier> class <name>HiveActionExecutor</name> <super_list><extends>extends <super><name>ScriptLanguageActionExecutor</name></super></extends></super_list> <block>{
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HIVE_MAIN_CLASS_NAME</name> <init>= <expr><literal type="string">"org.apache.oozie.action.hadoop.HiveMain"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HIVE_QUERY</name> <init>= <expr><literal type="string">"oozie.hive.query"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HIVE_SCRIPT</name> <init>= <expr><literal type="string">"oozie.hive.script"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HIVE_PARAMS</name> <init>= <expr><literal type="string">"oozie.hive.params"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HIVE_ARGS</name> <init>= <expr><literal type="string">"oozie.hive.args"</literal></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>addScriptToCache</name></decl>;</decl_stmt>

     <constructor><specifier>public</specifier> <name>HiveActionExecutor</name><parameter_list>()</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"hive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>addScriptToCache</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
         <return>return <expr><name>classes</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>boolean</name></type> <name>shouldAddScriptToCache</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name><name>this</name><operator>.</operator><name>addScriptToCache</name></name></expr>;</return>
    </block_content>}</block></function>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>protected</specifier> <name>String</name></type> <name>getLauncherMain</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>launcherConf</name></decl></parameter>, <parameter><decl><type><name>Element</name></type> <name>actionXml</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><call><name><name>launcherConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>CONF_OOZIE_ACTION_MAIN_CLASS</name></expr></argument>, <argument><expr><name>HIVE_MAIN_CLASS_NAME</name></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
         <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <call><name><name>super</name><operator>.</operator><name>setupActionConf</name></name><argument_list>(<argument><expr><name>actionConf</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>, <argument><expr><name>appPath</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>Namespace</name> <name>ns</name> <operator>=</operator> <call><name><name>actionXml</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr>;
        <expr><name>String</name> <name>script</name> <operator>=</operator> <call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"script"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;
        <expr><name>String</name> <name>scriptName</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr>;
        <expr><name>String</name> <name>hiveScriptContent</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getProtoActionConf</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>XOozieClient</name><operator>.</operator><name>HIVE_SCRIPT</name></name></expr></argument>)</argument_list></call></expr>;

        <if_stmt><if>if <condition>(<expr><name>hiveScriptContent</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
            <expr_stmt><expr><call><name>addToCache</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>script</name> <operator>+</operator> <literal type="string">"#"</literal> <operator>+</operator> <name>scriptName</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>scriptElement</name> <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"script"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>queryElement</name> <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"query"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>scriptElement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>script</name> <init>= <expr><call><name><name>scriptElement</name><operator>.</operator><name>getTextTrim</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>scriptName</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>addScriptToCache</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE_SCRIPT</name></expr></argument>, <argument><expr><name>scriptName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <if_stmt><if type="elseif">else if <condition>(<expr><name>queryElement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// Unable to use getTextTrim due to https://issues.apache.org/jira/browse/HIVE-8182</comment>
            <decl_stmt><decl><type><name>String</name></type> <name>query</name> <init>= <expr><call><name><name>queryElement</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE_QUERY</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>ActionExecutorException</name><argument_list>(<argument><expr><name><name>ActionExecutorException</name><operator>.</operator><name>ErrorType</name><operator>.</operator><name>ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"INVALID_ARGUMENTS"</literal></expr></argument>,
                <argument><expr><literal type="string">"Hive action requires one of &lt;script&gt; or &lt;query&gt; to be set. Neither were found."</literal></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></else></if_stmt>
 
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>actionXml</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"param"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
         <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>params</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <expr_stmt><expr><name><name>strParams</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></for>}</block>
        <call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE_PARAMS</name></expr></argument>, <argument><expr><name>strParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>strArgs</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Element</name></argument>&gt;</argument_list></name></type> <name>eArgs</name> <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"argument"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>eArgs</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>eArgs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveActionExecutor</name> extends <name>ScriptLanguageActionExecutor</name> <block>{
                 <expr><name><name>strArgs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>eArgs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;
             }</block></expr></expr_stmt>
         </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><call><name>setHiveScript</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>scriptName</name></expr></argument>, <argument><expr><name>strParams</name></expr></argument>, <argument><expr><name>strArgs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE_ARGS</name></expr></argument>, <argument><expr><name>strArgs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <return>return <expr><name>conf</name></expr>;</return>
     </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>setHiveScript</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>script</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>params</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HIVE_SCRIPT</name></expr></argument>, <argument><expr><name>script</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE_PARAMS</name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>HIVE_ARGS</name></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>protected</specifier> <name>boolean</name></type> <name>getCaptureOutput</name><parameter_list>(<parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JDOMException</name></expr></argument></throws> <block>{<block_content>
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>ScriptLanguageActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>ScriptLanguageActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e16124fac</name><operator>..</operator><name>f2541265c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>ScriptLanguageActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>ScriptLanguageActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ScriptLanguageActionExecutor</name> extends <name>JavaActionExecutor</name> <block>{
         <return>return <expr><literal type="null">null</literal></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>shouldAddScriptToCache</name><parameter_list>()</parameter_list><block>{<block_content>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>protected</specifier> <name>Configuration</name></type> <name>setupLauncherConf</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>Element</name></type> <name>actionXml</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>appPath</name></decl></parameter>, <parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
        <throws>throws <argument><expr><name>ActionExecutorException</name> <block>{
         <expr><call><name><name>super</name><operator>.</operator><name>setupLauncherConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>, <argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
        <if_stmt><if>if<condition>(<expr><call><name>shouldAddScriptToCache</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>addScriptToCache</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>, <argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><name>conf</name></expr>;</return>

    </block_content>}</block></function>

    <function><type><specifier>protected</specifier> <name>void</name></type> <name>addScriptToCache</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>Element</name></type> <name>actionXml</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>appPath</name></decl></parameter>, <parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list>
        <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>Namespace</name></type> <name>ns</name> <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>String</name></type> <name>script</name> <init>= <expr><call><name><name>actionXml</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"script"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ScriptLanguageActionExecutor</name> extends <name>JavaActionExecutor</name> <block>{
         <if_stmt><else>else <block>{<block_content>
             <expr_stmt><expr><call><name>addToCache</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>appPath</name></expr></argument>, <argument><expr><name>script</name> <operator>+</operator> <literal type="string">"#"</literal> <operator>+</operator> <name>name</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></else></if_stmt>}</block></expr></expr_stmt>

        <return>return <expr><name>conf</name></expr>;</return>
     </block_content>}</block></function>
 
     <function_decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>String</name></type> <name>getScriptName</name><parameter_list>()</parameter_list>;</function_decl>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>
<name>index</name> <literal type="number">9689ce053</literal><operator>..</operator><literal type="number">32a1df044</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>
@@ <operator>-</operator><literal type="number">1442</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">1442</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@
             <name>oozie</name><operator>-</operator><name>workflow</name><operator>-</operator><literal type="number">0.4.5.xsd</literal></expr><operator>,</operator><expr><name>oozie</name><operator>-</operator><name>workflow</name><operator>-</operator><literal type="number">0.5.xsd</literal></expr><operator>,</operator>
             <expr><name>shell</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.1.xsd</literal></expr><operator>,</operator><expr><name>shell</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator><expr><name>shell</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.3.xsd</literal></expr><operator>,</operator>
             <expr><name>email</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.1.xsd</literal></expr><operator>,</operator><expr><name>email</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator>
            <expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator><expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.3.xsd</literal></expr><operator>,</operator><expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.4.xsd</literal></expr><operator>,</operator><expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.5.xsd</literal></expr><operator>,</operator>
            <expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator><expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.3.xsd</literal></expr><operator>,</operator><expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.4.xsd</literal></expr><operator>,</operator><expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.5.xsd</literal></expr><operator>,</operator><expr><name>hive</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.6.xsd</literal></expr><operator>,</operator>
             <expr><name>sqoop</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator><expr><name>sqoop</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.3.xsd</literal></expr><operator>,</operator><expr><name>sqoop</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.4.xsd</literal></expr><operator>,</operator>
             <expr><name>ssh</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.1.xsd</literal></expr><operator>,</operator><expr><name>ssh</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator>
             <expr><name>distcp</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.1.xsd</literal></expr><operator>,</operator><expr><name>distcp</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator>
             <expr><name>oozie</name><operator>-</operator><name>sla</name><operator>-</operator><literal type="number">0.1.xsd</literal></expr><operator>,</operator><expr><name>oozie</name><operator>-</operator><name>sla</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator>
            <expr><name>hive2</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.1.xsd</literal></expr><operator>,</operator>
            <expr><name>hive2</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.1.xsd</literal></expr><operator>,</operator> <expr><name>hive2</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.2.xsd</literal></expr><operator>,</operator>
             <expr><name>spark</name><operator>-</operator><name>action</name><operator>-</operator><literal type="number">0.1.xsd</literal>
         <operator>&lt;</operator><operator>/</operator><name>value</name><operator>&gt;</operator>
         <operator>&lt;</operator><name>description</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_Hive2ActionExtension</name><operator>.</operator><name>twiki</name></name> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_Hive2ActionExtension</name><operator>.</operator><name>twiki</name></name>
<name>index</name> <literal type="number">37aff88b7</literal><operator>..</operator><literal type="number">4cd588eff</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_Hive2ActionExtension</name><operator>.</operator><name>twiki</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_Hive2ActionExtension</name><operator>.</operator><name>twiki</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>The</name> <name>workflow</name> <name>job</name> <name>will</name> <name>wait</name> <name>until</name> <name>the</name> <name>Hive</name> <name>Server</name> <literal type="number">2</literal> <name>job</name> <name>completes</name> <name>before</name>
 <name>continuing</name> <name>to</name> <name>the</name> <name>next</name> <name><name>action</name><operator>.</operator>
 
 <name>To</name></name> <name>run</name> <name>the</name> <name>Hive</name> <name>Server</name> <literal type="number">2</literal> <name>job</name></expr><operator>,</operator> <expr><name>you</name> <name>have</name> <name>to</name> <name>configure</name> <name>the</name> <operator>=</operator><name>hive2</name><operator>=</operator> <name>action</name> <name>with</name> <name>the</name>
<operator>=</operator><name>job</name><operator>-</operator><name>tracker</name><operator>=</operator></expr><operator>,</operator> <expr><operator>=</operator><name>name</name><operator>-</operator><name>node</name><operator>=</operator></expr><operator>,</operator> <expr><operator>=</operator><name>jdbc</name><operator>-</operator><name>url</name><operator>=</operator></expr><operator>,</operator> <expr><operator>=</operator><name>password</name><operator>=</operator></expr><operator>,</operator> <expr><name>and</name> <name>Hive</name> <operator>=</operator><name>script</name><operator>=</operator> <name>elements</name> <name>as</name>
<name>well</name> <name>as</name> <name>the</name> <name>necessary</name> <name>parameters</name> <name>and</name> <name><name>configuration</name><operator>.</operator></name>
=<name>job</name><operator>-</operator><name>tracker</name><operator>=</operator></expr><operator>,</operator> <expr><operator>=</operator><name>name</name><operator>-</operator><name>node</name><operator>=</operator></expr><operator>,</operator> <expr><operator>=</operator><name>jdbc</name><operator>-</operator><name>url</name><operator>=</operator></expr><operator>,</operator> <expr><operator>=</operator><name>password</name><operator>=</operator> <name>elements</name></expr><operator>,</operator> <expr><name>and</name> <name>either</name>
<name>Hive</name><literal type="char">'s =script= or =query= element, as well as the necessary parameters
and configuration.
 
 A =hive2= action can be configured to create or delete HDFS directories
 before starting the Hive Server 2 job.
@@ -99,6 +100,10 @@ execute. The Hive script can be templatized with variables of the form
 =${VARIABLE}=. The values of these variables can then be specified
 using the =params= element.
 
The =query= element available from uri:oozie:hive2-action:0.2, can be used instead of the =script= element. It allows for embedding
queries within the =worklfow.xml= directly.  Similar to the =script= element, it also allows for the templatization of variables
in the form =${VARIABLE}=.

 The =params= element, if present, contains parameters to be passed to
 the Hive script.
 
@@ -150,6 +155,66 @@ with a Kerberized Hive Server 2.
 
 ---+++ AE.A Appendix A, Hive 2 XML-Schema
 
---++++ Hive 2 Action Schema Version 0.2
&lt;verbatim&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:hive2="uri:oozie:hive2-action:0.2" elementFormDefault="qualified"
           targetNamespace="uri:oozie:hive2-action:0.2"&gt;
.
    &lt;xs:element name="hive2" type="hive2:ACTION"/&gt;
.
    &lt;xs:complexType name="ACTION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="job-tracker" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="name-node" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="prepare" type="hive2:PREPARE" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="job-xml" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="configuration" type="hive2:CONFIGURATION" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="jdbc-url" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
            &lt;xs:element name="password" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:choice minOccurs="1" maxOccurs="1"&gt;
                &lt;xs:element name="script" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
                &lt;xs:element name="query"  type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
            &lt;/xs:choice&gt;
            &lt;xs:element name="param" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="argument" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="file" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="archive" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="CONFIGURATION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="property" minOccurs="1" maxOccurs="unbounded"&gt;
                &lt;xs:complexType&gt;
                    &lt;xs:sequence&gt;
                        &lt;xs:element name="name" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="value" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="description" minOccurs="0" maxOccurs="1" type="xs:string"/&gt;
                    &lt;/xs:sequence&gt;
                &lt;/xs:complexType&gt;
            &lt;/xs:element&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="PREPARE"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="delete" type="hive2:DELETE" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="mkdir" type="hive2:MKDIR" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="DELETE"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="MKDIR"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;
.
&lt;/xs:schema&gt;
&lt;/verbatim&gt;

 ---++++ Hive 2 Action Schema Version 0.1
 &lt;verbatim&gt;
 &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
diff --git a/docs/src/site/twiki/DG_HiveActionExtension.twiki b/docs/src/site/twiki/DG_HiveActionExtension.twiki
index c8f50307b..93e122ba2 100644
-- a/docs/src/site/twiki/DG_HiveActionExtension.twiki
++ b/docs/src/site/twiki/DG_HiveActionExtension.twiki
@@ -17,7 +17,7 @@ The workflow job will wait until the Hive job completes before
 continuing to the next action.
 
 To run the Hive job, you have to configure the =hive= action with the
=job-tracker=, =name-node= and Hive =script= elements as
=job-tracker=, =name-node= and Hive =script= (or Hive =query=) elements as
 well as the necessary parameters and configuration.
 
 A =hive= action can be configured to create or delete HDFS directories
@@ -95,6 +95,11 @@ execute. The Hive script can be templatized with variables of the form
 =${VARIABLE}=. The values of these variables can then be specified
 using the =params= element.
 
The =query= element available from uri:oozie:hive-action:0.6, can be used instead of the
=script= element. It allows for embedding queries within the =worklfow.xml= directly.
Similar to the =script= element, it also allows for the templatization of variables in the
form =${VARIABLE}=.

 The =params= element, if present, contains parameters to be passed to
 the Hive script.
 
@@ -149,6 +154,63 @@ property =oozie.hive.log.level=. The default value is =INFO=.
 
 ---+++ AE.A Appendix A, Hive XML-Schema
 
---++++ Hive Action Schema Version 0.6
&lt;verbatim&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:hive="uri:oozie:hive-action:0.6" elementFormDefault="qualified"
           targetNamespace="uri:oozie:hive-action:0.6"&gt;
.
    &lt;xs:element name="hive" type="hive:ACTION"/&gt;
.
    &lt;xs:complexType name="ACTION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="job-tracker" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="name-node" type="xs:string" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="prepare" type="hive:PREPARE" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:element name="job-xml" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="configuration" type="hive:CONFIGURATION" minOccurs="0" maxOccurs="1"/&gt;
            &lt;xs:choice minOccurs="1" maxOccurs="1"&gt;
                &lt;xs:element name="script" type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
                &lt;xs:element name="query"  type="xs:string" minOccurs="1" maxOccurs="1"/&gt;
            &lt;/xs:choice&gt;
            &lt;xs:element name="param" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="argument" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="file" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="archive" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="CONFIGURATION"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="property" minOccurs="1" maxOccurs="unbounded"&gt;
                &lt;xs:complexType&gt;
                    &lt;xs:sequence&gt;
                        &lt;xs:element name="name" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="value" minOccurs="1" maxOccurs="1" type="xs:string"/&gt;
                        &lt;xs:element name="description" minOccurs="0" maxOccurs="1" type="xs:string"/&gt;
                    &lt;/xs:sequence&gt;
                &lt;/xs:complexType&gt;
            &lt;/xs:element&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="PREPARE"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="delete" type="hive:DELETE" minOccurs="0" maxOccurs="unbounded"/&gt;
            &lt;xs:element name="mkdir" type="hive:MKDIR" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="DELETE"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;
.
    &lt;xs:complexType name="MKDIR"&gt;
        &lt;xs:attribute name="path" type="xs:string" use="required"/&gt;
    &lt;/xs:complexType&gt;
.
&lt;/xs:schema&gt;
&lt;/verbatim&gt;
 ---++++ Hive Action Schema Version 0.5
 &lt;verbatim&gt;
 &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
diff --git a/release-log.txt b/release-log.txt
index 556e88b3e..eedbce63e 100644
-- a/release-log.txt
++ b/release-log.txt
@@ -1,5 +1,6 @@
 -- Oozie 4.3.0 release (trunk - unreleased)
 
OOZIE-2332 Add ability to provide Hive and Hive 2 Action queries inline in workflows (prateekrungta via rkanter)
 OOZIE-2329 Make handling yarn restarts configurable (puru)
 OOZIE-2228 Statustransit service doesn'</literal><name>t</name> <name>pick</name> <name>bundle</name> <name>with</name> <name>suspend</name> <call><name>status</name> <argument_list>(<argument><expr><name>puru</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2325</literal> <name>Shell</name> <name>action</name> <name>fails</name></expr></expr_stmt> <if_stmt><if>if user overrides oozie.launcher.mapreduce.map.env <condition>(<expr><name>kailongs</name> <name>via</name> <name>puru</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveMain</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveMain</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">84bdb7900</literal><operator>..</operator><literal type="number">58c28d328</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveMain</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>HiveMain</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></block_content></block></if></if_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hive</name><operator>.</operator><name>cli</name><operator>.</operator><name>CliDriver</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveMain</name> extends <name>LauncherMain</name> <block>{
         <expr><name>Configuration</name> <name>hiveConf</name> <operator>=</operator> <call><name>setUpHiveSite</name><argument_list>()</argument_list></call></expr>;
 
         <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>arguments</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
        <expr><name>String</name> <name>scriptPath</name> <operator>=</operator> <call><name><name>hiveConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_SCRIPT</name></name></expr></argument>)</argument_list></call></expr>;

        <if_stmt><if>if <condition>(<expr><name>scriptPath</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Action Configuration does not have ["</literal> <operator>+</operator>  <name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_SCRIPT</name></name> <operator>+</operator> <literal type="string">"] property"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>

        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>exists</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Hive script file ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] does not exist"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
 
         <decl_stmt><decl><type><name>String</name></type> <name>logFile</name> <init>= <expr><call><name>setUpHiveLog4J</name><argument_list>(<argument><expr><name>hiveConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"--hiveconf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">45</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveMain</name> extends <name>LauncherMain</name> <block>{
         <expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"--hiveconf"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hive.log4j.exec.file="</literal> <operator>+</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>HIVE_EXEC_L4J_PROPS</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
        <comment type="line">// print out current directory &amp; its contents</comment>
        <expr><name>File</name> <name>localDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"dummy"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParentFile</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Current (local) dir = "</literal> <operator>+</operator> <call><name><name>localDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;
        <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><call><name><name>localDir</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"  "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>scriptPath</name> <init>= <expr><call><name><name>hiveConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_SCRIPT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>query</name> <init>= <expr><call><name><name>hiveConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_QUERY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>scriptPath</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>exists</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Hive script file ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] does not exist"</literal></expr></argument>)</argument_list></call></expr>;</throw>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>}</block>
            <comment type="line">// print out current directory &amp; its contents</comment>
            <name>File</name> <name>localDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"dummy"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParentFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Current (local) dir = "</literal> <operator>+</operator> <call><name><name>localDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><call><name><name>localDir</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"  "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// Prepare the Hive Script</comment>
            <decl_stmt><decl><type><name>String</name></type> <name>script</name> <init>= <expr><call><name>readStringFromFile</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Script ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] content: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function> <if_stmt><if type="elseif">else if <condition>(<expr><name>query</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Query: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>filename</name> <init>= <expr><call><name>createScriptFile</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Action Configuration does not have ["</literal>
                <operator>+</operator>  <name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_SCRIPT</name></name> <operator>+</operator> <literal type="string">"], or ["</literal>
                <operator>+</operator>  <name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_QUERY</name></name> <operator>+</operator> <literal type="string">"] property"</literal></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></else></if_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <constructor_decl><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><parameter_list>()</parameter_list>;</constructor_decl>

        <comment type="line">// Prepare the Hive Script</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>script</name> <init>= <expr><call><name>readStringFromFile</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <constructor_decl><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><parameter_list>()</parameter_list>;</constructor_decl>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Script ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] content: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <constructor_decl><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><parameter_list>(<parameter><decl><type><name>script</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <constructor_decl><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><parameter_list>()</parameter_list>;</constructor_decl>
 
         <comment type="line">// Pass any parameters to Hive via arguments</comment>
         <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>params</name> <init>= <expr><call><name><name>MapReduceMain</name><operator>.</operator><name>getStrings</name></name><argument_list>(<argument><expr><name>hiveConf</name></expr></argument>, <argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_PARAMS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">261</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveMain</name> extends <name>LauncherMain</name> <block>{
             <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;
         }</block>
 
        <call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <constructor_decl><name><name>arguments</name><operator>.</operator><name>add</name></name><parameter_list>(<parameter><decl><type><name>scriptPath</name></type></decl></parameter>)</parameter_list>;</constructor_decl>

         <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>hiveArgs</name> <init>= <expr><call><name><name>MapReduceMain</name><operator>.</operator><name>getStrings</name></name><argument_list>(<argument><expr><name>hiveConf</name></expr></argument>, <argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_ARGS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>hiveArg</name> <range>: <expr><name>hiveArgs</name></expr></range></decl></init>)</control> <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><call><name><name>DISALLOWED_HIVE_OPTIONS</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>hiveArg</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">302</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">312</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>HiveMain</name> extends <name>LauncherMain</name> <block>{
         }</block></expr></expr_stmt>
     </block_content>}</block></if></if_stmt>
 
    <function><type><specifier>private</specifier> <name>String</name></type> <name>createScriptFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>query</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>filename</name> <init>= <expr><literal type="string">"oozie-hive-query-"</literal> <operator>+</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".hql"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>writeStringToFile</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>filename</name></expr>;</return>
    </block_content>}</block></function>

     <function><type><specifier>private</specifier> <name>void</name></type> <name>runHive</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt><expr><call><name><name>CliDriver</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a11d40961</name><operator>..</operator><name>b966d4b63</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobID</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>RunningJob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>ActionExecutorTestCase</name><operator>.</operator><name>Context</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ConfigurationService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>HadoopAccessorService</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHiveActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
     <expr><specifier>private</specifier> <name>String</name> <call><name>getHiveScript</name><argument_list>(<argument><expr><name>String</name> <name>inputPath</name></expr></argument>, <argument><expr><name>String</name> <name>outputPath</name></expr></argument>)</argument_list></call> <block>{
         <expr><name>StringBuilder</name> <name>buffer</name> <operator>=</operator> <operator>new</operator> <call><name>StringBuilder</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"set -v;"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"DROP TABLE IF EXISTS test;"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"CREATE EXTERNAL TABLE test (a INT) STORED AS"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"TEXTFILE LOCATION '"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>inputPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"';"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">86</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">86</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHiveActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <return>return <expr><call><name><name>buffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr>
     }</block>
 
    <specifier>private</specifier> <name>String</name> <call><name>getActionXml</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>private</specifier> <name>String</name> <call><name>getActionScriptXml</name><argument_list>()</argument_list></call> <block>{
         <expr><name>String</name> <name>script</name> <operator>=</operator> <literal type="string">"&lt;hive xmlns=''uri:oozie:hive-action:0.2''&gt;"</literal> <operator>+</operator>
         <literal type="string">"&lt;job-tracker&gt;{0}&lt;/job-tracker&gt;"</literal> <operator>+</operator>
         <literal type="string">"&lt;name-node&gt;{1}&lt;/name-node&gt;"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">117</literal></expr>,<expr><literal type="number">58</literal> <operator>+</operator><literal type="number">117</literal></expr>,<expr><literal type="number">121</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHiveActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <return>return <expr><call><name><name>MessageFormat</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>, <argument><expr><call><name>getJobTrackerUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getNameNodeUri</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr>
     }</block>
 
    <specifier>private</specifier> <name>String</name> <call><name>getActionQueryXml</name><argument_list>(<argument><expr><name>String</name> <name>query</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>String</name> <name>script</name> <operator>=</operator> <literal type="string">"&lt;hive xmlns=''uri:oozie:hive-action:0.6''&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;job-tracker&gt;{0}&lt;/job-tracker&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name-node&gt;{1}&lt;/name-node&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;configuration&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;value&gt;jdbc:derby:"</literal> <operator>+</operator> <call><name>getTestCaseDir</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/db;create=true&lt;/value&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;value&gt;org.apache.derby.jdbc.EmbeddedDriver&lt;/value&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;value&gt;sa&lt;/value&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;value&gt; &lt;/value&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name&gt;oozie.hive.log.level&lt;/name&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;value&gt;DEBUG&lt;/value&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/property&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/configuration&gt;"</literal></expr>;
        <return>return <expr><call><name><name>MessageFormat</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>, <argument><expr><call><name>getJobTrackerUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getNameNodeUri</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
            <operator>+</operator> <literal type="string">"&lt;query&gt;"</literal> <operator>+</operator> <name>query</name> <operator>+</operator> <literal type="string">"&lt;/query&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/hive&gt;"</literal></expr>;</return></block></expr>
    }</block>

     <specifier>public</specifier> <name>void</name> <call><name>testHiveAction</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>Path</name> <name>inputDir</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INPUT_DIRNAME</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>Path</name> <name>outputDir</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>OUTPUT_DIRNAME</name></expr></argument>)</argument_list></call></expr>;

        <expr><name>String</name> <name>hiveScript</name> <operator>=</operator> <call><name>getHiveScript</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>FileSystem</name> <name>fs</name> <operator>=</operator> <call><name>getFileSystem</name><argument_list>()</argument_list></call></expr>;
        <expr><name>Path</name> <name>script</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getAppPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>HIVE_SCRIPT_FILENAME</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>Writer</name> <name>scriptWriter</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>scriptWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name>getHiveScript</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>scriptWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
        <expr><name>Writer</name> <name>dataWriter</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><name>DATA_FILENAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>dataWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>SAMPLE_DATA_TEXT</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>dataWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;

        <expr><name>Context</name> <name>context</name> <operator>=</operator> <call><name>createContext</name><argument_list>(<argument><expr><call><name>getActionXml</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>final</name> <name>RunningJob</name> <name>launcherJob</name> <operator>=</operator> <call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>String</name> <name>launcherId</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name>waitFor</name><argument_list>(<argument><expr><literal type="number">200</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
            <function><type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <return>return <expr><call><name><name>launcherJob</name><operator>.</operator><name>isComplete</name></name><argument_list>()</argument_list></call></expr>;</return>
            <expr_stmt/>}</block_content>
        }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr>
        <call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherJob</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"user.name"</literal></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actionData</name> <init>= <expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>getActionData</name></name><argument_list>(<argument><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getActionDir</name></name><argument_list>()</argument_list></call></expr></argument>,
        <block>{<block_content>
            <decl_stmt><decl><type><name>Path</name></type> <name>script</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getAppPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>HIVE_SCRIPT_FILENAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Writer</name></type> <name>scriptWriter</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>scriptWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>hiveScript</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>scriptWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Writer</name></type> <name>dataWriter</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><name>DATA_FILENAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>dataWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>SAMPLE_DATA_TEXT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>dataWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Context</name></type> <name>context</name> <init>= <expr><call><name>createContext</name><argument_list>(<argument><expr><call><name>getActionScriptXml</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Namespace</name></type> <name>ns</name> <init>= <expr><call><name><name>Namespace</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"uri:oozie:hive-action:0.2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>RunningJob</name></type> <name>launcherJob</name> <init>= <expr><call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>launcherId</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>waitFor</name><argument_list>(<argument><expr><literal type="number">200</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
                <function><type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                    <return>return <expr><call><name><name>launcherJob</name><operator>.</operator><name>isComplete</name></name><argument_list>()</argument_list></call></expr>;</return>
                </block_content>}</block></function>
            }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherJob</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"user.name"</literal></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actionData</name> <init>= <expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>getActionData</name></name><argument_list>(<argument><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getActionDir</name></name><argument_list>()</argument_list></call></expr></argument>,
                 <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>hasIdSwap</name></name><argument_list>(<argument><expr><name>actionData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>HiveActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>HiveActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Properties</name></type> <name>outputData</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>outputData</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//while this works in a real cluster, it does not with miniMR</comment>
        <comment type="line">//assertTrue(outputData.getProperty(LauncherMain.HADOOP_JOBS).trim().length() &gt; 0);</comment>
        <comment type="line">//assertTrue(!actionData.get(LauncherMapper.ACTION_DATA_EXTERNAL_CHILD_IDS).isEmpty());</comment>

        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>hasIdSwap</name></name><argument_list>(<argument><expr><name>actionData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>HiveActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>HiveActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Properties</name></type> <name>outputData</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>outputData</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">//while this works in a real cluster, it does not with miniMR</comment>
            <comment type="line">//assertTrue(outputData.getProperty(LauncherMain.HADOOP_JOBS).trim().length() &gt; 0);</comment>
            <comment type="line">//assertTrue(!actionData.get(LauncherMapper.ACTION_DATA_EXTERNAL_CHILD_IDS).isEmpty());</comment>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></argument_list></call></expr></init></decl></decl_stmt>
        <block>{<block_content>
            <decl_stmt><decl><type><name>Context</name></type> <name>context</name> <init>= <expr><call><name>createContext</name><argument_list>(<argument><expr><call><name>getActionQueryXml</name><argument_list>(<argument><expr><name>hiveScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Namespace</name></type> <name>ns</name> <init>= <expr><call><name><name>Namespace</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"uri:oozie:hive-action:0.6"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>RunningJob</name></type> <name>launcherJob</name> <init>= <expr><call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>launcherId</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>waitFor</name><argument_list>(<argument><expr><literal type="number">200</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
                <function><type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                    <return>return <expr><call><name><name>launcherJob</name><operator>.</operator><name>isComplete</name></name><argument_list>()</argument_list></call></expr>;</return>
                </block_content>}</block></function>
            }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherJob</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"user.name"</literal></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actionData</name> <init>= <expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>getActionData</name></name><argument_list>(<argument><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getActionDir</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>hasIdSwap</name></name><argument_list>(<argument><expr><name>actionData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>HiveActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>HiveActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Properties</name></type> <name>outputData</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>outputData</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">//while this works in a real cluster, it does not with miniMR</comment>
            <comment type="line">//assertTrue(outputData.getProperty(LauncherMain.HADOOP_JOBS).trim().length() &gt; 0);</comment>
            <comment type="line">//assertTrue(!actionData.get(LauncherMapper.ACTION_DATA_EXTERNAL_CHILD_IDS).isEmpty());</comment>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
     </block_content>}</block></for>
 
    <function><type><specifier>private</specifier> <name>RunningJob</name></type> <name>submitAction</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>RunningJob</name></type> <name>submitAction</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Namespace</name></type> <name>ns</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>HiveActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>HiveActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <decl_stmt><decl><type><name>WorkflowAction</name></type> <name>action</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">246</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHiveActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>jobTracker</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>consoleUrl</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>Element</name> <name>e</name> <operator>=</operator> <call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Namespace</name> <name>ns</name> <operator>=</operator> <call><name><name>Namespace</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"uri:oozie:hive-action:0.2"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>XConfiguration</name> <name>conf</name> <operator>=</operator>
                 <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.job.tracker"</literal></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getChildTextTrim</name></name><argument_list>(<argument><expr><literal type="string">"job-tracker"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">246</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">308</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHiveActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name><name>dataWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>SAMPLE_DATA_TEXT</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>dataWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
        <expr><name>Context</name> <name>context</name> <operator>=</operator> <call><name>createContext</name><argument_list>(<argument><expr><call><name>getActionXml</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>Context</name> <name>context</name> <operator>=</operator> <call><name>createContext</name><argument_list>(<argument><expr><call><name>getActionScriptXml</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Namespace</name> <name>ns</name> <operator>=</operator> <call><name><name>Namespace</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"uri:oozie:hive-action:0.2"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>FSDataInputStream</name> <name>os</name> <operator>=</operator> <call><name><name>fs</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getActionDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>LauncherMapper</name><operator>.</operator><name>ACTION_CONF_XML</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>XConfiguration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>addResource</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveMain</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveMain</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d06a62bc9</name><operator>..</operator><name>d72e298e0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveMain</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHiveMain</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">50</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHiveMain</name> extends <name>MainTestCase</name> <block>{
     <expr><specifier>private</specifier> <name>String</name> <call><name>getHiveScript</name><argument_list>(<argument><expr><name>String</name> <name>inputPath</name></expr></argument>, <argument><expr><name>String</name> <name>outputPath</name></expr></argument>)</argument_list></call> <block>{
         <expr><name>StringBuilder</name> <name>buffer</name> <operator>=</operator> <operator>new</operator> <call><name>StringBuilder</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"set -v;"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"DROP TABLE IF EXISTS test;"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"CREATE EXTERNAL TABLE test (a INT) STORED AS"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"TEXTFILE LOCATION '"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>inputPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"';"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">100</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">101</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHiveMain</name> extends <name>MainTestCase</name> <block>{
 
             <expr><call><name><name>SharelibUtils</name><operator>.</operator><name>addToDistributedCache</name></name><argument_list>(<argument><expr><literal type="string">"hive"</literal></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr>;
 
            <expr><call><name><name>HiveActionExecutor</name><operator>.</operator><name>setHiveScript</name></name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><call><name><name>script</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="string">"IN="</literal> <operator>+</operator> <call><name><name>inputDir</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPath</name><argument_list>()</argument_list></call></expr>,
                    <expr><literal type="string">"OUT="</literal> <operator>+</operator> <call><name><name>outputDir</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPath</name><argument_list>()</argument_list></call></expr>}</block></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"-v"</literal></expr> }</block></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_SCRIPT</name></name></expr></argument>, <argument><expr><call><name><name>script</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_PARAMS</name></name></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{
                <expr><literal type="string">"IN="</literal> <operator>+</operator> <call><name><name>inputDir</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPath</name><argument_list>()</argument_list></call></expr>,
                <expr><literal type="string">"OUT="</literal> <operator>+</operator> <call><name><name>outputDir</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPath</name><argument_list>()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>MapReduceMain</name><operator>.</operator><name>setStrings</name></name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name><name>HiveActionExecutor</name><operator>.</operator><name>HIVE_ARGS</name></name></expr></argument>,
                <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><literal type="string">"-v"</literal></expr> }</block></expr></argument>)</argument_list></call></expr>;
 
             <expr><name>File</name> <name>actionXml</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"action.xml"</literal></expr></argument>)</argument_list></call></expr>;
             <expr><name>OutputStream</name> <name>os</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>Hive2Main</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>Hive2Main</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">557969e5d</literal><operator>..</operator><literal type="number">97af28b17</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>Hive2Main</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>Hive2Main</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import></block></expr>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileUtils</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>output</name><operator>.</operator><name>TeeOutputStream</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">32</literal> <operator>+</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">44</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2Main</name> extends <name>LauncherMain</name> <block>{
         <expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"org.apache.hive.jdbc.HiveDriver"</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>String</name> <name>scriptPath</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Hive2ActionExecutor</name><operator>.</operator><name>HIVE2_SCRIPT</name></name></expr></argument>)</argument_list></call></expr>;
        <if_stmt><if>if <condition>(<expr><name>scriptPath</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Action Configuration does not have ["</literal> <operator>+</operator>  <name><name>Hive2ActionExecutor</name><operator>.</operator><name>HIVE2_SCRIPT</name></name>
                    <operator>+</operator> <literal type="string">"] property"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>exists</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Hive 2 script file ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] does not exist"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// print out current directory &amp; its contents</comment>
        <decl_stmt><decl><type><name>File</name></type> <name>localDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"dummy"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParentFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Current (local) dir = "</literal> <operator>+</operator> <call><name><name>localDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><call><name><name>localDir</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"  "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>query</name> <init>= <expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Hive2ActionExecutor</name><operator>.</operator><name>HIVE2_QUERY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>scriptPath</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>exists</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Hive 2 script file ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] does not exist"</literal></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></if></if_stmt>
            <comment type="line">// print out current directory &amp; its contents</comment>
            <decl_stmt><decl><type><name>File</name></type> <name>localDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"dummy"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParentFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Current (local) dir = "</literal> <operator>+</operator> <call><name><name>localDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><call><name><name>localDir</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"  "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// Prepare the Hive Script</comment>
            <decl_stmt><decl><type><name>String</name></type> <name>script</name> <init>= <expr><call><name>readStringFromFile</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Script ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] content: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>query</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Query: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>filename</name> <init>= <expr><call><name>createScriptFile</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Action Configuration does not have ["</literal>
                <operator>+</operator>  <name><name>Hive2ActionExecutor</name><operator>.</operator><name>HIVE2_SCRIPT</name></name> <operator>+</operator> <literal type="string">"], or ["</literal>
                <operator>+</operator>  <name><name>Hive2ActionExecutor</name><operator>.</operator><name>HIVE2_QUERY</name></name> <operator>+</operator> <literal type="string">"] property"</literal></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></else></if_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Prepare the Hive Script</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>script</name> <init>= <expr><call><name>readStringFromFile</name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Script ["</literal> <operator>+</operator> <name>scriptPath</name> <operator>+</operator> <literal type="string">"] content: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">// Pass any parameters to Beeline via arguments</comment>
         <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>params</name> <init>= <expr><call><name><name>MapReduceMain</name><operator>.</operator><name>getStrings</name></name><argument_list>(<argument><expr><name>actionConf</name></expr></argument>, <argument><expr><name><name>Hive2ActionExecutor</name><operator>.</operator><name>HIVE2_PARAMS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2Main</name> extends <name>LauncherMain</name> <block>{
             <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>()</argument_list></call></expr>;
         }</block>
 
        <call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-f"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>scriptPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <comment type="line">// This tells BeeLine to look for a delegation token; otherwise it won't and will fail in secure mode because there are no</comment>
         <comment type="line">// Kerberos credentials.  In non-secure mode, this argument is ignored so we can simply always pass it.</comment>
         <expr_stmt><expr><call><name><name>arguments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-a"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">235</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">245</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>Hive2Main</name> extends <name>LauncherMain</name> <block>{
         }</block></expr></expr_stmt>
     </block_content>}</block></for>
 
    <function><type><specifier>private</specifier> <name>String</name></type> <name>createScriptFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>query</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>filename</name> <init>= <expr><literal type="string">"oozie-hive2-query-"</literal> <operator>+</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".hql"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>writeStringToFile</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>filename</name></expr>;</return>
    </block_content>}</block></function>

     <function><type><specifier>private</specifier> <name>void</name></type> <name>runBeeline</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>logFile</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <comment type="line">// We do this instead of calling BeeLine.main so we can duplicate the error stream for harvesting Hadoop child job IDs</comment>
         <decl_stmt><decl><type><name>BeeLine</name></type> <name>beeLine</name> <init>= <expr><operator>new</operator> <call><name>BeeLine</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHive2ActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHive2ActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">16d026757</literal><operator>..</operator><literal type="number">5963e42fd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHive2ActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>hive2</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestHive2ActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">60</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHive2ActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
     }</block>
 
     @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>void</name> <call><name>testSetupMethods</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><specifier>public</specifier> <name>void</name> <call><name>testSetupMethodsForScript</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>Hive2ActionExecutor</name> <name>ae</name> <operator>=</operator> <operator>new</operator> <call><name>Hive2ActionExecutor</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Class</name></argument>&gt;</argument_list></name></type> <name>classes</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Class</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>classes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>Hive2Main</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>classes</name></expr></argument>, <argument><expr><call><name><name>ae</name><operator>.</operator><name>getLauncherClasses</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <decl_stmt><decl><type><name>Element</name></type> <name>actionXml</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><literal type="string">"&lt;hive2&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;job-tracker&gt;"</literal> <operator>+</operator> <call><name>getJobTrackerUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/job-tracker&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name-node&gt;"</literal> <operator>+</operator> <call><name>getNameNodeUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/name-node&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;jdbc-url&gt;jdbc:hive2://foo:1234/bar&lt;/jdbc-url&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;password&gt;pass&lt;/password&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;script&gt;script.q&lt;/script&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;param&gt;a=A&lt;/param&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;param&gt;b=B&lt;/param&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;argument&gt;-c&lt;/argument&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;argument&gt;--dee&lt;/argument&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/hive2&gt;"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>XConfiguration</name></type> <name>protoConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>protoConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>WorkflowAppService</name><operator>.</operator><name>HADOOP_USER</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>WorkflowJobBean</name></type> <name>wf</name> <init>= <expr><call><name>createBaseWorkflow</name><argument_list>(<argument><expr><name>protoConf</name></expr></argument>, <argument><expr><literal type="string">"hive2-action"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>WorkflowActionBean</name></type> <name>action</name> <init>= <expr><operator>(</operator><name>WorkflowActionBean</name><operator>)</operator> <call><name><name>wf</name><operator>.</operator><name>getActions</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><call><name><name>ae</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Context</name></type> <name>context</name> <init>= <expr><operator>new</operator> <call><name>Context</name><argument_list>(<argument><expr><name>wf</name></expr></argument>, <argument><expr><name>action</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><call><name><name>ae</name><operator>.</operator><name>createBaseHadoopConf</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>setupActionConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>, <argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"jdbc:hive2://foo:1234/bar"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.jdbc.url"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"pass"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.password"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"script.q"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.script"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"2"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.params.size"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"a=A"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.params.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"b=B"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.params.1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"2"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.args.size"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"-c"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.args.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"--dee"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.args.1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testSetupMethodsForQuery</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Hive2ActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>Hive2ActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Class</name></argument>&gt;</argument_list></name></type> <name>classes</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Class</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>classes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>Hive2Main</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>classes</name></expr></argument>, <argument><expr><call><name><name>ae</name><operator>.</operator><name>getLauncherClasses</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>sampleQuery</name> <init>= <expr><literal type="string">"SELECT count(*) from foobar"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>actionXml</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><literal type="string">"&lt;hive2  xmlns=\"uri:oozie:hive2-action:0.2\"&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;job-tracker&gt;"</literal> <operator>+</operator> <call><name>getJobTrackerUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/job-tracker&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;name-node&gt;"</literal> <operator>+</operator> <call><name>getNameNodeUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/name-node&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;jdbc-url&gt;jdbc:hive2://foo:1234/bar&lt;/jdbc-url&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;password&gt;pass&lt;/password&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;script&gt;script.q&lt;/script&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;query&gt;"</literal> <operator>+</operator> <name>sampleQuery</name> <operator>+</operator> <literal type="string">"&lt;/query&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;param&gt;a=A&lt;/param&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;param&gt;b=B&lt;/param&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;argument&gt;-c&lt;/argument&gt;"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">102</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">144</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestHive2ActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name><name>ae</name><operator>.</operator><name>setupActionConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>, <argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"jdbc:hive2://foo:1234/bar"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.jdbc.url"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"pass"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.password"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"script.q"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.script"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>sampleQuery</name></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.query"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.script"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"2"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.params.size"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"a=A"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.params.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"b=B"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.hive2.params.1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">114</literal></expr>,<expr><literal type="number">26</literal> <operator>+</operator><literal type="number">157</literal></expr>,<expr><literal type="number">39</literal> @@ <specifier>public</specifier> class <name>TestHive2ActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
     <expr><specifier>private</specifier> <name>String</name> <call><name>getHive2Script</name><argument_list>(<argument><expr><name>String</name> <name>inputPath</name></expr></argument>, <argument><expr><name>String</name> <name>outputPath</name></expr></argument>)</argument_list></call> <block>{
         <expr><name>StringBuilder</name> <name>buffer</name> <operator>=</operator> <operator>new</operator> <call><name>StringBuilder</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"set -v;"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"DROP TABLE IF EXISTS test;"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"CREATE EXTERNAL TABLE test (a INT) STORED AS"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"TEXTFILE LOCATION '"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>inputPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"';"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"INSERT OVERWRITE DIRECTORY '"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>outputPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"'"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"SELECT (a-1) FROM test;"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>NEW_LINE</name></expr></argument>)</argument_list></call></expr>;

         <return>return <expr><call><name><name>buffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
     }</block>
 
    <specifier>private</specifier> <name>String</name> <call><name>getActionXml</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>private</specifier> <name>String</name> <call><name>getScriptActionXml</name><argument_list>()</argument_list></call> <block>{
         <expr><name>String</name> <name>script</name> <operator>=</operator> <literal type="string">"&lt;hive2 xmlns=''uri:oozie:hive2-action:0.1''&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;job-tracker&gt;{0}&lt;/job-tracker&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;name-node&gt;{1}&lt;/name-node&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;configuration&gt;&lt;/configuration&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;jdbc-url&gt;{2}&lt;/jdbc-url&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;password&gt;dummy&lt;/password&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;script&gt;"</literal> <operator>+</operator> <name>HIVE_SCRIPT_FILENAME</name> <operator>+</operator> <literal type="string">"&lt;/script&gt;"</literal> <operator>+</operator>
            <literal type="string">"&lt;/hive2&gt;"</literal></expr>;
        <return>return <expr><call><name><name>MessageFormat</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>, <argument><expr><call><name>getJobTrackerUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getNameNodeUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getHiveServer2JdbcURL</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block>

    <specifier>private</specifier> <name>String</name> <call><name>getQueryActionXml</name><argument_list>(<argument><expr><name>String</name> <name>query</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>String</name> <name>script</name> <operator>=</operator> <literal type="string">"&lt;hive2 xmlns=\"uri:oozie:hive2-action:0.2\"&gt;"</literal> <operator>+</operator>
         <literal type="string">"&lt;job-tracker&gt;{0}&lt;/job-tracker&gt;"</literal> <operator>+</operator>
         <literal type="string">"&lt;name-node&gt;{1}&lt;/name-node&gt;"</literal> <operator>+</operator>
         <literal type="string">"&lt;configuration&gt;&lt;/configuration&gt;"</literal> <operator>+</operator>
         <literal type="string">"&lt;jdbc-url&gt;{2}&lt;/jdbc-url&gt;"</literal> <operator>+</operator>
        <literal type="string">"&lt;password&gt;dummy&lt;/password&gt;"</literal> <operator>+</operator>
        <literal type="string">"&lt;script&gt;"</literal> <operator>+</operator> <name>HIVE_SCRIPT_FILENAME</name> <operator>+</operator> <literal type="string">"&lt;/script&gt;"</literal> <operator>+</operator>
        <literal type="string">"&lt;/hive2&gt;"</literal></expr>;
        <return>return <expr><call><name><name>MessageFormat</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>, <argument><expr><call><name>getJobTrackerUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getNameNodeUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getHiveServer2JdbcURL</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        <literal type="string">"&lt;password&gt;dummy&lt;/password&gt;"</literal></block></expr>;
        <expr><name>String</name> <name>expanded</name> <operator>=</operator> <call><name><name>MessageFormat</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>, <argument><expr><call><name>getJobTrackerUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getNameNodeUri</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getHiveServer2JdbcURL</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <comment type="line">// MessageFormat strips single quotes, which causes issues with the hive query parser</comment>
        <return>return <expr><name>expanded</name> <operator>+</operator>
            <literal type="string">"&lt;query&gt;"</literal> <operator>+</operator> <name>query</name> <operator>+</operator> <literal type="string">"&lt;/query&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;/hive2&gt;"</literal></expr>;</return>
     }</block>
 
     @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">141</literal></expr>,<expr><literal type="number">51</literal> <operator>+</operator><literal type="number">197</literal></expr>,<expr><literal type="number">85</literal> @@ <specifier>public</specifier> class <name>TestHive2ActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>setupHiveServer2</name><argument_list>()</argument_list></call></expr>;
         <expr><name>Path</name> <name>inputDir</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INPUT_DIRNAME</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>Path</name> <name>outputDir</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>OUTPUT_DIRNAME</name></expr></argument>)</argument_list></call></expr>;

         <expr><name>FileSystem</name> <name>fs</name> <operator>=</operator> <call><name>getFileSystem</name><argument_list>()</argument_list></call></expr>;
        <expr><name>Path</name> <name>script</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getAppPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>HIVE_SCRIPT_FILENAME</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>Writer</name> <name>scriptWriter</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>scriptWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name>getHive2Script</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>scriptWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;

        <expr><name>Writer</name> <name>dataWriter</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><name>DATA_FILENAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>dataWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>SAMPLE_DATA_TEXT</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>dataWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;

        <expr><name>Context</name> <name>context</name> <operator>=</operator> <call><name>createContext</name><argument_list>(<argument><expr><call><name>getActionXml</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>final</name> <name>RunningJob</name> <name>launcherJob</name> <operator>=</operator> <call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>String</name> <name>launcherId</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name>waitFor</name><argument_list>(<argument><expr><literal type="number">200</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <return>return <expr><call><name><name>launcherJob</name><operator>.</operator><name>isComplete</name></name><argument_list>()</argument_list></call></expr>;</return>
            <expr_stmt/>}</block_content>
        }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr>
        <call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherJob</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;
        <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"user.name"</literal></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>actionData</name> <operator>=</operator> <call><name><name>LauncherMapperHelper</name><operator>.</operator><name>getActionData</name></name><argument_list>(<argument><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getActionDir</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>hasIdSwap</name></name><argument_list>(<argument><expr><name>actionData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
        <expr><name>Hive2ActionExecutor</name> <name>ae</name> <operator>=</operator> <operator>new</operator> <call><name>Hive2ActionExecutor</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Properties</name> <name>outputData</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>outputData</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><block>{
            <expr><name>String</name> <name>query</name> <operator>=</operator> <call><name>getHive2Script</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>Writer</name> <name>dataWriter</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><name>DATA_FILENAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>dataWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>SAMPLE_DATA_TEXT</name></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>dataWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
            <expr><name>Context</name> <name>context</name> <operator>=</operator> <call><name>createContext</name><argument_list>(<argument><expr><call><name>getQueryActionXml</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>final</name> <name>RunningJob</name> <name>launcherJob</name> <operator>=</operator> <call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>,
                <argument><expr><call><name><name>Namespace</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"uri:oozie:hive2-action:0.2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>String</name> <name>launcherId</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name>waitFor</name><argument_list>(<argument><expr><literal type="number">200</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
                <function><annotation>@<name>Override</name></annotation>
                <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                    <return>return <expr><call><name><name>launcherJob</name><operator>.</operator><name>isComplete</name></name><argument_list>()</argument_list></call></expr>;</return>
                <expr_stmt/>}</block_content>
            }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr>
            <call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherJob</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;
            <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"user.name"</literal></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>actionData</name> <operator>=</operator> <call><name><name>LauncherMapperHelper</name><operator>.</operator><name>getActionData</name></name><argument_list>(<argument><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getActionDir</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>hasIdSwap</name></name><argument_list>(<argument><expr><name>actionData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>Hive2ActionExecutor</name> <name>ae</name> <operator>=</operator> <operator>new</operator> <call><name>Hive2ActionExecutor</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>Properties</name> <name>outputData</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name><name>outputData</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        }</block>
        <block>{
            <expr><name>Path</name> <name>script</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getAppPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>HIVE_SCRIPT_FILENAME</name></expr></argument>)</argument_list></call></expr>;
            <expr><name>Writer</name> <name>scriptWriter</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>script</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>scriptWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name>getHive2Script</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>scriptWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;

            <expr><name>Writer</name> <name>dataWriter</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><name>DATA_FILENAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>dataWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>SAMPLE_DATA_TEXT</name></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>dataWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
            <expr><name>Context</name> <name>context</name> <operator>=</operator> <call><name>createContext</name><argument_list>(<argument><expr><call><name>getScriptActionXml</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>final</name> <name>RunningJob</name> <name>launcherJob</name> <operator>=</operator> <call><name>submitAction</name><argument_list>(<argument><expr><name>context</name></expr></argument>,
                <argument><expr><call><name><name>Namespace</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"uri:oozie:hive2-action:0.1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>String</name> <name>launcherId</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name>waitFor</name><argument_list>(<argument><expr><literal type="number">200</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
                <function><annotation>@<name>Override</name></annotation>
                <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                    <return>return <expr><call><name><name>launcherJob</name><operator>.</operator><name>isComplete</name></name><argument_list>()</argument_list></call></expr>;</return>
                <expr_stmt/>}</block_content>
            }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr>
            <call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherJob</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;
            <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"user.name"</literal></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>actionData</name> <operator>=</operator> <call><name><name>LauncherMapperHelper</name><operator>.</operator><name>getActionData</name></name><argument_list>(<argument><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getActionDir</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LauncherMapperHelper</name><operator>.</operator><name>hasIdSwap</name></name><argument_list>(<argument><expr><name>actionData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>Hive2ActionExecutor</name> <name>ae</name> <operator>=</operator> <operator>new</operator> <call><name>Hive2ActionExecutor</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><name>Properties</name> <name>outputData</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name><name>outputData</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>outputData</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        }</block></expr></argument></argument_list></call></expr></init></decl></decl_stmt>
     </block_content>}</block></function>
 
    <function><type><specifier>private</specifier> <name>RunningJob</name></type> <name>submitAction</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>RunningJob</name></type> <name>submitAction</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Namespace</name></type> <name>ns</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>Hive2ActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>Hive2ActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <decl_stmt><decl><type><name>WorkflowAction</name></type> <name>action</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">200</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">290</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHive2ActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>jobTracker</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>consoleUrl</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>Element</name> <name>e</name> <operator>=</operator> <call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Namespace</name> <name>ns</name> <operator>=</operator> <call><name><name>Namespace</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"uri:oozie:hive2-action:0.1"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>XConfiguration</name> <name>conf</name> <operator>=</operator>
                 <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.job.tracker"</literal></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getChildTextTrim</name></name><argument_list>(<argument><expr><literal type="string">"job-tracker"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></expr_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></function></block_content></block></function>

</unit>
