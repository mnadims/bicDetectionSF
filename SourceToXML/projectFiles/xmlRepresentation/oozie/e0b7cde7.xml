<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/e0b7cde7.java"><expr_stmt><expr><name>From</name> <name>e0b7cde711b1b9e1a03660ec635041eeb9755049</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Peter</name> <name><name>Bacsko</name> <argument_list type="generic">&lt;<argument><name>pbacsko</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">15</literal> <name>May</name> <literal type="number">2017</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">50</literal><operator>:</operator><literal type="number">28</literal> <operator>+</operator><literal type="number">0200</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">2872</literal> <name>Address</name> <name>backward</name> <name>compatibility</name> <name>issue</name> <name>introduced</name> <name>by</name>
 <name>OOZIE</name><operator>-</operator><literal type="number">2748</literal> <operator>(</operator><name>pbacsko</name><operator>)</operator>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">6</literal> <operator>++</operator><operator>+</operator>
 <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>     <operator>|</operator>  <literal type="number">9</literal> <operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">17</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>LauncherMapper</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">35</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestLauncherMapper</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">37</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator>
 <literal type="number">6</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">88</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">17</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d60a5c7b9</name><operator>..</operator><literal type="number">06ae5fd9a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>JavaActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">998</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">998</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>JavaActionExecutor</name> extends <name>ActionExecutor</name> <block>{
                 <expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>list</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;
             }</block>
             <call><name><name>LauncherMapperHelper</name><operator>.</operator><name>setupMainArguments</name></name><argument_list>(<argument><expr><name>launcherJobConf</name></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// backward compatibility flag - see OOZIE-2872</comment>
            <if_stmt><if>if <condition>(<expr><call><name><name>ConfigurationService</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><name><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_NULL_ARGS_ALLOWED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>launcherJobConf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><name><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_NULL_ARGS_ALLOWED</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <expr_stmt><expr><call><name><name>launcherJobConf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><name><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_NULL_ARGS_ALLOWED</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
 
             <comment type="line">// Make mapred.child.java.opts and mapreduce.map.java.opts equal, but give values from the latter priority; also append</comment>
             <comment type="line">// &lt;java-opt&gt; and &lt;java-opts&gt; and give those highest priority</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>
<name>index</name> <literal type="number">076401d8c</literal><operator>..</operator><literal type="number">205c89b9b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>oozie</name><operator>-</operator>default<operator>.</operator><name>xml</name>
@@ <operator>-</operator><literal type="number">3047</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">3047</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <name>will</name> <name>be</name> <name>the</name> <name>requeue</name> <name>interval</name></expr></expr_stmt> <for>for the actions which are waiting for a long time w
         &lt;description&gt;Regex pattern for HCat URIs. The regex can be modified by users as per requirement
             for parsing/splitting the HCat URIs.&lt;/description&gt;
     &lt;/property&gt;

    &lt;property&gt;
        &lt;name&gt;oozie.actions.null.args.allowed&lt;/name&gt;
        &lt;value&gt;true&lt;/value&gt;
        &lt;description&gt;
            When set to true<operator>,</operator> <decl_stmt><decl><type><name>empty</name></type> <name>arguments</name> <argument_list>(<argument><expr><name>like</name> <operator>&amp;</operator><name>lt</name></expr></argument>;<argument><expr><name>arg</name><operator>&amp;</operator><name>gt</name></expr></argument>;<argument><expr><operator>&amp;</operator><name>lt</name></expr></argument>;<argument><expr><operator>/</operator><name>arg</name><operator>&amp;</operator><name>gt</name></expr></argument>;)</argument_list> <name>will</name> <name>be</name> <name>passed</name> <name>as</name> "null" <name>to</name> <name>the</name> <name>main</name> <name>method</name> <name>of</name> <name>a</name>
            <name>given</name> <name><name>action</name><operator>.</operator> <name>That</name></name> <name>is</name></decl>, <decl><type ref="prev"/><name>the</name> <name><name>args</name><index>[]</index></name> <name>array</name> <name>will</name> <name>contain</name> "null" <name><name>elements</name><operator>.</operator> <name>When</name></name> <name>set</name> <name>to</name> false</decl>, <decl><type ref="prev"/><name>then</name> "nulls" <name>are</name> <name><name>removed</name><operator>.</operator></name>
        &lt;/<name>description</name>&gt;
    <argument_list type="generic">&lt;<argument><operator>/</operator><name>property</name></argument>&gt;</argument_list>
 <argument_list type="generic">&lt;<argument><operator>/</operator><name>configuration</name></argument>&gt;</argument_list>
<name>diff</name> --<name>git</name> <name>a</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d1f53fee4</name>..<name>b27b3d8a2</name> 100644
-- <name>a</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
++ <name>b</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>TestJavaActionExecutor</name><operator>.</operator><name>java</name></name>
@@ -2941</decl>,7 +2941,18 @@ public <decl><type ref="prev"/><name>class</name> <name>TestJavaActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{<block_content>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"DEBUG"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>oozieActionHiveRootLogger</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></decl></decl_stmt></for>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testEmptyArgs</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testEmptyArgsWithNullArgsNotAllowed</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>testEmptyArgs</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testEmptyArgsWithNullArgsAllowed</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>testEmptyArgs</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"FAILED/KILLED"</literal></expr></argument>, <argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>ERROR</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>testEmptyArgs</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>nullArgsAllowed</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expectedExternalStatus</name></decl></parameter>, <parameter><decl><type><name><name>WorkflowAction</name><operator>.</operator><name>Status</name></name></type> <name>expectedStatus</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><name><name>LauncherMapper</name><operator>.</operator><name>CONF_OOZIE_NULL_ARGS_ALLOWED</name></name></expr></argument>, <argument><expr><name>nullArgsAllowed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <decl_stmt><decl><type><name>String</name></type> <name>actionXml</name> <init>= <expr><literal type="string">"&lt;java&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;job-tracker&gt;"</literal> <operator>+</operator> <call><name>getJobTrackerUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/job-tracker&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;name-node&gt;"</literal> <operator>+</operator> <call><name>getNameNodeUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/name-node&gt;"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">2961</literal></expr></init></decl>,11 +2972,11 @@ public <decl><type ref="prev"/><name>class</name> <name>TestJavaActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{<block_content>
         <decl_stmt><decl><type><name>ActionExecutor</name></type> <name>ae</name> <init>= <expr><operator>new</operator> <call><name>JavaActionExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>ae</name><operator>.</operator><name>isCompleted</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expectedExternalStatus</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <expr_stmt><expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expectedStatus</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></decl></decl_stmt>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testMaxOutputDataSetByUser</name><parameter_list>()</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">5800715f2</literal><operator>..</operator><literal type="number">03d0df931</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.4.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">2872</literal> <name>Address</name> <name>backward</name> <name>compatibility</name> <name>issue</name> <name>introduced</name> <name>by</name> <name>OOZIE</name><operator>-</operator><literal type="number">2748</literal> <operator>(</operator><name>pbacsko</name><operator>)</operator>
 <name>OOZIE</name><operator>-</operator><literal type="number">2780</literal> <name>Upgrade</name> <name>minimum</name> <name>Hadoop</name> <name>version</name> <name>to</name> <literal type="number">2.6.0</literal> <operator>(</operator><name>dbist13</name> <name>via</name> <name>rkanter</name><operator>)</operator>
 <name>OOZIE</name><operator>-</operator><literal type="number">2824</literal> <name>Fix</name> <name>typos</name> <name>in</name> <call><name>documentation</name> <argument_list>(<argument><expr><name>lzeke</name> <name>via</name> <name>gezapeti</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2874</literal> <name>Make</name> <name>the</name> <name>Launcher</name> <name>Mapper</name> <name>map</name><operator>-</operator><name>only</name> <name>job</name><literal type="char">'</literal></expr></expr_stmt></block_content></block></function></block_content></block></function></block_content></block></function>s InputFormat class pluggable (andras.piros via gezapeti)
diff --git a/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java b/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java
index 8edebac11..8657c678c 100644
-- a/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java
++ b/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java
@@ -63,6 +63,7 @@ public class LauncherMapper&lt;K1, V1, K2, V2&gt; implements Mapper&lt;K1, V1, K2, V2&gt;, R
     static final String CONF_OOZIE_EXTERNAL_STATS_MAX_SIZE = "oozie.external.stats.max.size";
     static final String OOZIE_ACTION_CONFIG_CLASS = ACTION_PREFIX + "config.class";
     static final String CONF_OOZIE_ACTION_FS_GLOB_MAX = ACTION_PREFIX + "fs.glob.max";
    static final String CONF_OOZIE_NULL_ARGS_ALLOWED = ACTION_PREFIX + "null.args.allowed";
 
     static final String COUNTER_GROUP = "oozie.launcher";
     static final String COUNTER_LAUNCHER_ERROR = "oozie.launcher.error";
@@ -497,18 +498,28 @@ public class LauncherMapper&lt;K1, V1, K2, V2&gt; implements Mapper&lt;K1, V1, K2, V2&gt;, R
     public static String[] getMainArguments(Configuration conf) {
         String[] args = new String[conf.getInt(CONF_OOZIE_ACTION_MAIN_ARG_COUNT, 0)];
 
        int pos = 0;
        for (int i = 0; i &lt; args.length; i++) {
            String arg = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);
            if (!Strings.isNullOrEmpty(arg)) {
                args[pos++] = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);
        String[] retArray;

        if (conf.getBoolean(CONF_OOZIE_NULL_ARGS_ALLOWED, true)) {
            for (int i = 0; i &lt; args.length; i++) {
                args[i] = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);
            }

            retArray = args;
        } else {
            int pos = 0;
            for (int i = 0; i &lt; args.length; i++) {
                String arg = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);
                if (!Strings.isNullOrEmpty(arg)) {
                    args[pos++] = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);
                }
             }
        }
 
        // this is to skip null args, that is &lt;arg&gt;&lt;/arg&gt; in the workflow XML -- in this case,
        // args[] might look like {"arg1", "arg2", null, null} at this point
        String[] retArray = new String[pos];
        System.arraycopy(args, 0, retArray, 0, pos);
            // this is to skip null args, that is &lt;arg&gt;&lt;/arg&gt; in the workflow XML -- in this case,
            // args[] might look like {"arg1", "arg2", null, null} at this point
            retArray = new String[pos];
            System.arraycopy(args, 0, retArray, 0, pos);
        }
 
         return retArray;
     }
@@ -632,6 +643,10 @@ public class LauncherMapper&lt;K1, V1, K2, V2&gt; implements Mapper&lt;K1, V1, K2, V2&gt;, R
         System.out.println(banner);
         boolean maskNextArg = false;
         for (String arg : args) {
            if (arg == null) {
                arg = "null"; // prevent NPE in pwd masking
            }

             if (maskNextArg) {
                 System.out.println("             " + "********");
                 maskNextArg = false;
diff --git a/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java b/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java
index 1dd800277..51b1d6f8c 100644
-- a/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java
++ b/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java
@@ -23,6 +23,7 @@ import static org.apache.oozie.action.hadoop.LauncherMapper.CONF_OOZIE_ACTION_MA
 import static org.junit.Assert.assertTrue;
 import static org.mockito.BDDMockito.given;
 import static org.mockito.Matchers.eq;
import static org.mockito.Matchers.anyBoolean;
 
 import java.util.Arrays;
 import java.util.List;
@@ -41,8 +42,9 @@ public class TestLauncherMapper {
     private Configuration conf;  // we have to use mock, because conf.set(null) throws exception
 
     @Test
    public void testLauncherMapperArgsHandlingWithoutNulls() {
    public void testArgsHandlingWithoutNullsAndNullsNotAllowed() {
        setupConf(Lists.newArrayList("a", "b", "c"));
       setEnableNullArgsAllowed(false);
 
        String args[] = LauncherMapper.getMainArguments(conf);
 
@@ -50,8 +52,9 @@ public class TestLauncherMapper {
     }
 
     @Test
    public void testLauncherMapperArgsHandlingWhenArgsContainNulls() {
    public void testHandlingWhenArgsContainNullsAndNullsNotAllowed() {
         setupConf(Lists.newArrayList("a", null, "b", null, "c"));
        setEnableNullArgsAllowed(false);
 
         String args[] = LauncherMapper.getMainArguments(conf);
 
@@ -59,8 +62,9 @@ public class TestLauncherMapper {
     }
 
     @Test
    public void testLauncherMapperArgsHandlingWhenArgsContainsNullsOnly() {
    public void testArgsHandlingWhenArgsContainsNullsOnlyAndNullsNotAllowed() {
         setupConf(Lists.&lt;String&gt;newArrayList(null, null, null));
        setEnableNullArgsAllowed(false);
 
         String args[] = LauncherMapper.getMainArguments(conf);
 
@@ -68,14 +72,35 @@ public class TestLauncherMapper {
     }
 
     @Test
    public void testLauncherMapperArgsHandlingWhenArgsContainsOneNull() {
    public void testArgsHandlingWhenArgsContainsOneNullAndNullsNotAllowed() {
         setupConf(Lists.&lt;String&gt;newArrayList((String) null));
        setEnableNullArgsAllowed(false);
 
         String args[] = LauncherMapper.getMainArguments(conf);
 
         assertTrue(Arrays.equals(new String[] {}, args));
     }
 
    @Test
    public void testHandlingWhenArgsContainNullsAndNullAllowed() {
        setupConf(Lists.newArrayList("a", null, "b", null, "c"));
        setEnableNullArgsAllowed(true);

        String args[] = LauncherMapper.getMainArguments(conf);

        assertTrue(Arrays.equals(new String[] { "a", null, "b", null, "c"}, args));
    }

    @Test
    public void testArgsHandlingWhenArgsContainsOneNullAndNullsAllowed() {
        setupConf(Lists.&lt;String&gt;newArrayList((String) null));
        setEnableNullArgsAllowed(true);

        String args[] = LauncherMapper.getMainArguments(conf);

        assertTrue(Arrays.equals(new String[] { null }, args));
    }

     private void setupConf(List&lt;String&gt; argList) {
         int argCount = argList.size();
 
@@ -85,4 +110,8 @@ public class TestLauncherMapper {
             given(conf.get(eq(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i))).willReturn(argList.get(i));
         }
     }

    private void setEnableNullArgsAllowed(boolean nullArgsAllowed) {
        given(conf.getBoolean(eq(LauncherMapper.CONF_OOZIE_NULL_ARGS_ALLOWED), anyBoolean())).willReturn(nullArgsAllowed);
    }
 }
- 
2.19.1.windows.1

</unit>
