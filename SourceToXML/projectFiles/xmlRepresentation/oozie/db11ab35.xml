<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/db11ab35.java"><expr_stmt><expr><name>From</name> <name>db11ab356af7c29478e41441bd2325dfdb5130c0</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Rohini</name> <name><name>Palaniswamy</name> <argument_list type="generic">&lt;<argument><name>rohini</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">23</literal> <name>Jun</name> <literal type="number">2014</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">52</literal><operator>:</operator><literal type="number">06</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">1878</literal> <name>Can</name><literal type="char">'t execute dryrun on the CLI (puru via rohini)

--
 .../java/org/apache/oozie/cli/CLIParser.java  | 50 +++++++++++-
 .../org/apache/oozie/client/TestOozieCLI.java | 79 ++++++++++++++++++-
 .../servlet/MockCoordinatorEngineService.java | 16 ++++
 release-log.txt                               |  1 +
 4 files changed, 144 insertions(+), 2 deletions(-)

diff --git a/client/src/main/java/org/apache/oozie/cli/CLIParser.java b/client/src/main/java/org/apache/oozie/cli/CLIParser.java
index 6d490f275..c8b16814c 100644
-- a/client/src/main/java/org/apache/oozie/cli/CLIParser.java
++ b/client/src/main/java/org/apache/oozie/cli/CLIParser.java
@@ -17,12 +17,15 @@
  */
 package org.apache.oozie.cli;
 
import org.apache.commons.cli.MissingOptionException;
 import org.apache.commons.cli.Options;
 import org.apache.commons.cli.GnuParser;
 import org.apache.commons.cli.ParseException;
 import org.apache.commons.cli.CommandLine;
 import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.UnrecognizedOptionException;
 
import java.util.Arrays;
 import java.util.Map;
 import java.util.LinkedHashMap;
 import java.text.MessageFormat;
@@ -114,9 +117,18 @@ public class CLIParser {
         }
         else {
             if (commands.containsKey(args[0])) {
                GnuParser parser = new GnuParser();
                GnuParser parser ;
                 String[] minusCommand = new String[args.length - 1];
                 System.arraycopy(args, 1, minusCommand, 0, minusCommand.length);

                if (args[0].equals(OozieCLI.JOB_CMD)) {
                    validdateArgs(args, minusCommand);
                    parser = new OozieGnuParser(true);
                }
                else {
                    parser = new OozieGnuParser(false);
                }

                 return new Command(args[0], parser.parse(commands.get(args[0]), minusCommand,
                                                          commandWithArgs.get(args[0])));
             }
@@ -126,6 +138,23 @@ public class CLIParser {
         }
     }
 
    public void validdateArgs(final String[] args, String[] minusCommand) throws ParseException {
        try {
            GnuParser parser = new OozieGnuParser(false);
            parser.parse(commands.get(args[0]), minusCommand, commandWithArgs.get(args[0]));
        }
        catch (MissingOptionException e) {
            if (Arrays.toString(args).contains("-dryrun")) {
                // ignore this, else throw exception
                //Dryrun is also part of update sub-command. CLI parses dryrun as sub-command and throws
                //Missing Option Exception, if -dryrun is used as command. It'</literal><name>s</name> <name>ok</name> <name>to</name> <name>skip</name> <name>exception</name> <name>only</name></expr></expr_stmt> <for>for dryrun.</for>
            }
            else <block>{<block_content>
                <throw>throw <expr><name>e</name></expr>;</throw>
            </block_content>}</block>
        }
    }

     <function><type><specifier>public</specifier> <name>String</name></type> <name>shortHelp</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><literal type="string">"use 'help [sub-command]' for help details"</literal></expr>;</return>
     </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">193</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>CLIParser</name> <block>{
         <expr><call><name><name>pw</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;
     }</block>
 
    <specifier>static</specifier> <name>class</name> <name>OozieGnuParser</name> extends <name>GnuParser</name> <block>{
        <expr><specifier>private</specifier> <name>boolean</name> <name>ignoreMissingOption</name></expr>;

        <expr><specifier>public</specifier> <call><name>OozieGnuParser</name><argument_list>(<argument><expr><name>final</name> <name>boolean</name> <name>ignoreMissingOption</name></expr></argument>)</argument_list></call> <block>{
            <expr><name><name>this</name><operator>.</operator><name>ignoreMissingOption</name></name> <operator>=</operator> <name>ignoreMissingOption</name></expr>;
        }</block>

        @<name>Override</name>
        <specifier>protected</specifier> <name>void</name> <call><name>checkRequiredOptions</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>MissingOptionException</name> <block>{</block></expr></argument></throws></expr>
            <if_stmt><if>if <condition>(<expr><name>ignoreMissingOption</name></expr>)</condition> <block>{<block_content>
                <return>return;</return>
            <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
            <if_stmt><else>else <block>{<block_content>
                <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>checkRequiredOptions</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        }
    }

 }
 

diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>TestOozieCLI</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>TestOozieCLI</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8a85cd26a</literal><operator>..</operator><name>a8f8cf9b8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>TestOozieCLI</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>TestOozieCLI</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Callable</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>cli</name><operator>.</operator><name>OozieCLI</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>servlet</name><operator>.</operator><name>DagServletTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestOozieCLI</name> extends <name>DagServletTestCase</name> <block>{
         <return>return <expr><name>path</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>private</specifier> <name>String</name></type> <name>createCoodrConfigFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>appPath</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name>getName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".xml"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>COORDINATOR_APP_PATH</name></name></expr></argument>, <argument><expr><name>appPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>writeXml</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>path</name></expr>;</return>
    </block_content>}</block></function>

     <function><type><specifier>private</specifier> <name>String</name></type> <name>createPropertiesFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>appPath</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name>getName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".properties"</literal></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Properties</name></type> <name>props</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1149</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">1158</literal></expr><operator>,</operator><expr><literal type="number">72</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestOozieCLI</name> extends <name>DagServletTestCase</name> <block>{
         }</block></expr></expr_stmt>)</block_content></block>;</function>
     }
 
    public <function><type><name>void</name></type> <name>testJobDryrun</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>runTest</name><argument_list>(<argument><expr><name>END_POINTS</name></expr></argument>, <argument><expr><name>SERVLET_CLASSES</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>Void</name></type> <name>call</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <expr_stmt><expr><call><name><name>HeaderTestingVersionServlet</name><operator>.</operator><name>OOZIE_HEADERS</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>Path</name></type> <name>appPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"app"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><literal type="string">"coordinator.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>close</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>oozieUrl</name> <init>= <expr><call><name>getContextURL</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"job"</literal></expr>, <expr><literal type="string">"-dryrun"</literal></expr>, <expr><literal type="string">"-config"</literal></expr>, <expr><call><name>createCoodrConfigFile</name><argument_list>(<argument><expr><call><name><name>appPath</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>,
                        <expr><literal type="string">"-oozie"</literal></expr>, <expr><name>oozieUrl</name></expr>, <expr><literal type="string">"-Doozie.proxysubmission=true"</literal></expr> }</block></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>OozieCLI</name><argument_list>()</argument_list></call><operator>.</operator><call><name>run</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>did</name></name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_ACTION_DRYRUN</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>started</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testUpdate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>runTest</name><argument_list>(<argument><expr><name>END_POINTS</name></expr></argument>, <argument><expr><name>SERVLET_CLASSES</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>Void</name></type> <name>call</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <expr_stmt><expr><call><name><name>HeaderTestingVersionServlet</name><operator>.</operator><name>OOZIE_HEADERS</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>oozieUrl</name> <init>= <expr><call><name>getContextURL</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"job"</literal></expr>, <expr><literal type="string">"-update"</literal></expr>, <expr><literal type="string">"aaa"</literal></expr>, <expr><literal type="string">"-oozie"</literal></expr>, <expr><name>oozieUrl</name></expr> }</block></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>OozieCLI</name><argument_list>()</argument_list></call><operator>.</operator><call><name>run</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>did</name></name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_UPDATE</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>started</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testUpdateWithDryrun</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>runTest</name><argument_list>(<argument><expr><name>END_POINTS</name></expr></argument>, <argument><expr><name>SERVLET_CLASSES</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>Void</name></type> <name>call</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <expr_stmt><expr><call><name><name>HeaderTestingVersionServlet</name><operator>.</operator><name>OOZIE_HEADERS</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>String</name></type> <name>oozieUrl</name> <init>= <expr><call><name>getContextURL</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"job"</literal></expr>, <expr><literal type="string">"-update"</literal></expr>, <expr><literal type="string">"aaa"</literal></expr>, <expr><literal type="string">"-dryrun"</literal></expr>, <expr><literal type="string">"-oozie"</literal></expr>, <expr><name>oozieUrl</name></expr> }</block></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>OozieCLI</name><argument_list>()</argument_list></call><operator>.</operator><call><name>run</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>did</name></name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_UPDATE</name></name> <operator>+</operator> <literal type="string">"&amp;"</literal>
                        <operator>+</operator> <name><name>RestConstants</name><operator>.</operator><name>JOB_ACTION_DRYRUN</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>started</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testFailNoArg</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>runTest</name><argument_list>(<argument><expr><name>END_POINTS</name></expr></argument>, <argument><expr><name>SERVLET_CLASSES</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>Void</name></type> <name>call</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                <expr_stmt><expr><call><name><name>HeaderTestingVersionServlet</name><operator>.</operator><name>OOZIE_HEADERS</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>String</name></type> <name>oozieUrl</name> <init>= <expr><call><name>getContextURL</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"job"</literal></expr>, <expr><literal type="string">"-oozie"</literal></expr>, <expr><name>oozieUrl</name></expr> }</block></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>OozieCLI</name><argument_list>()</argument_list></call><operator>.</operator><call><name>run</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">80ab512f5</literal><operator>..</operator><literal type="number">638c28d17</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>MockCoordinatorEngineService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorJob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorJob</name><operator>.</operator><name>Execution</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordUpdateXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>CoordinatorEngineService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockCoordinatorEngineService</name> extends <name>CoordinatorEngineService</name> <block>{
     <expr><specifier>public</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>&gt;</argument_list></name> <name>started</name></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>INIT_COORD_COUNT</name> <operator>=</operator> <literal type="number">4</literal></expr>;
 

     <expr><specifier>static</specifier> <block>{
         <expr><call><name>reset</name><argument_list>()</argument_list></call></expr>;
     }</block>
@@ <operator>-</operator><literal type="number">226</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">229</literal></expr>,<expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockCoordinatorEngineService</name> extends <name>CoordinatorEngineService</name> <block>{
             <expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>LOG</name></expr></argument>)</argument_list></call></expr>;
         }</block>
 
        @<name>Override</name>
        <specifier>public</specifier> <name>String</name> <call><name>updateJob</name><argument_list>(<argument><expr><name>Configuration</name> <name>conf</name></expr></argument>, <argument><expr><name>String</name> <name>jobId</name></expr></argument>, <argument><expr><name>boolean</name> <name>dryrun</name></expr></argument>, <argument><expr><name>boolean</name> <name>showDiff</name></expr></argument>)</argument_list></call>
                <throws>throws <argument><expr><name>CoordinatorEngineException</name> <block>{</block></expr></argument></throws></expr>
            <if_stmt><if>if <condition>(<expr><name>dryrun</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>did</name> <operator>=</operator> <name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_UPDATE</name></name> <operator>+</operator> <literal type="string">"&amp;"</literal> <operator>+</operator> <name><name>RestConstants</name><operator>.</operator><name>JOB_ACTION_DRYRUN</name></name></expr>;</expr_stmt>
            <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
            <if_stmt><else>else <block>{<block_content>
                <expr_stmt><expr><name>did</name> <operator>=</operator> <name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_UPDATE</name></name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <expr_stmt><expr><call><name>validateCoordinatorIdx</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><literal type="string">""</literal></expr>;</return>
        }

         private <function><type><name>int</name></type> <name>validateCoordinatorIdx</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CoordinatorEngineException</name></expr></argument></throws> <block>{<block_content>
             <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
             <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>d1b209c43</name><operator>..</operator><name>fef34534e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.1.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">1878</literal> <name>Can</name><literal type="char">'</literal></expr></expr_stmt></block_content></block></try></block_content></block></function>t execute dryrun on the CLI (puru via rohini)
 OOZIE-1741 Add new coord EL function to get input partitions value string (satish.mittal via rohini) 
 OOZIE-1817 Oozie timers are not biased (rkanter)
 OOZIE-1807 Make bundle change command synchronous (puru via rohini)
- 
2.19.1.windows.1

</unit>
