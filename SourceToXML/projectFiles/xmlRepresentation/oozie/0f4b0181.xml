<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/0f4b0181.java"><expr_stmt><expr><name>From</name> <literal type="number">0f4b0181bc8bdac4696bce2bde854b332bb02d80</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Purshotam</name> <name>Shah</name> <operator>&lt;</operator><name>purushah</name>@<name>yahoo</name><operator>-</operator><name><name>inc</name><operator>.</operator><name>com</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">20</literal> <name>Feb</name> <literal type="number">2015</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">01</literal><operator>:</operator><literal type="number">19</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">1913</literal> <name>Devise</name> <name>a</name> <name>way</name> <name>to</name> <name>turn</name> <name>off</name> <name>SLA</name> <name>alerts</name></expr></expr_stmt> <for>for
 bundle/coordinator flexibly

--
 .../java/org/apache/oozie/cli/OozieCLI.java   <operator>|</operator>  69 +++-
 .../org/apache/oozie/client/OozieClient.java  <operator>|</operator> 185 +++++++++--
 .../apache/oozie/client/event/SLAEvent.java   <operator>|</operator>   2 +-
 .../apache/oozie/client/rest/JsonTags.java    <operator>|</operator>   2 +
 .../oozie/client/rest/RestConstants.java      <operator>|</operator>  20 ++
 .../java/org/apache/oozie/BaseEngine.java     <operator>|</operator>  40 +++
 .../java/org/apache/oozie/BundleEngine.java   <operator>|</operator>  42 ++-
 .../apache/oozie/CoordinatorActionBean.java   <operator>|</operator>  49 +--
 .../org/apache/oozie/CoordinatorEngine.java   <operator>|</operator>  47 +++
 .../org/apache/oozie/CoordinatorJobBean.java  <operator>|</operator>  56 ++--
 .../main/java/org/apache/oozie/DagEngine.java <operator>|</operator>  16 +
 .../main/java/org/apache/oozie/ErrorCode.java <operator>|</operator>   2 +
 .../oozie/command/SLAAlertsXCommand.java      <operator>|</operator> 117 +++++++
 .../BundleSLAAlertsDisableXCommand.java       <operator>|</operator>  44 +++
 .../bundle/BundleSLAAlertsEnableXCommand.java <operator>|</operator>  45 +++
 .../bundle/BundleSLAAlertsXCommand.java       <operator>|</operator> 149 +++++++++
 .../bundle/BundleSLAChangeXCommand.java       <operator>|</operator>  57 ++++
 .../bundle/BundleStatusTransitXCommand.java   <operator>|</operator>   1 +
 .../CoordMaterializeTransitionXCommand.java   <operator>|</operator>  19 +-
 .../coord/CoordSLAAlertsDisableXCommand.java  <operator>|</operator>  71 ++++
 .../coord/CoordSLAAlertsEnableXCommand.java   <operator>|</operator>  65 ++++
 .../command/coord/CoordSLAAlertsXCommand.java <operator>|</operator> 233 ++++++++++++++
 .../command/coord/CoordSLAChangeXCommand.java <operator>|</operator> 100 ++++++
 .../org/apache/oozie/coord/CoordUtils.java    <operator>|</operator> 146 ++++++++-
 .../jpa/CoordActionQueryExecutor.java         <operator>|</operator>  48 ++-
 ...obGetActionIdsForDateRangeJPAExecutor.java <operator>|</operator>  69 ----
 ...obGetActionsByDatesForKillJPAExecutor.java <operator>|</operator> 108 -------
 ...CoordJobGetActionsForDatesJPAExecutor.java <operator>|</operator>  70 ----
 .../executor/jpa/CoordJobQueryExecutor.java   <operator>|</operator>  51 ++-
 .../CoordJobsToBeMaterializedJPAExecutor.java <operator>|</operator>   2 +-
 .../jpa/SLARegistrationQueryExecutor.java     <operator>|</operator>  62 +++-
 .../executor/jpa/SLASummaryQueryExecutor.java <operator>|</operator>  29 +-
 .../CoordMaterializeTriggerService.java       <operator>|</operator>   2 +-
 .../oozie/service/EventHandlerService.java    <operator>|</operator>  24 +-
 .../apache/oozie/servlet/BaseJobServlet.java  <operator>|</operator>  55 ++++
 .../org/apache/oozie/servlet/SLAServlet.java  <operator>|</operator>   1 +
 .../apache/oozie/servlet/V0JobServlet.java    <operator>|</operator>  18 +-
 .../apache/oozie/servlet/V1JobServlet.java    <operator>|</operator>  16 +
 .../apache/oozie/servlet/V2JobServlet.java    <operator>|</operator>  74 ++++-
 .../apache/oozie/servlet/V2SLAServlet.java    <operator>|</operator>  21 +-
 .../org/apache/oozie/sla/SLACalcStatus.java   <operator>|</operator>  12 +-
 .../org/apache/oozie/sla/SLACalculator.java   <operator>|</operator>  54 ++++
 .../apache/oozie/sla/SLACalculatorMemory.java <operator>|</operator> 302 +++++++++++++++---
 .../org/apache/oozie/sla/SLAOperations.java   <operator>|</operator> 143 ++++++---
 .../apache/oozie/sla/SLARegistrationBean.java <operator>|</operator>  28 +-
 .../org/apache/oozie/sla/SLASummaryBean.java  <operator>|</operator>  33 +-
 .../apache/oozie/sla/service/SLAService.java  <operator>|</operator>  94 +++++-
 .../oozie/util/CoordActionsInDateRange.java   <operator>|</operator>  23 +-
 core/src/main/resources/oozie-default.xml     <operator>|</operator>   9 +
 .../oozie/command/TestSLAAlertXCommand.java   <operator>|</operator> 300 +++++++++++++++++
 .../coord/TestCoordSubmitXCommand.java        <operator>|</operator> 178 +++++++++++
 ...java =&gt; TestCoordActionQueryExecutor.java</for>} |  <expr_stmt><expr><literal type="number">52</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><name><name>ordJobGetActionIdsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">82</literal> <operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestHASLAService</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">71</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>TestV2SLAServlet</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLACalculatorMemory</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">125</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLAEventGeneration</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name><name>TestSLARegistrationGetJPAExecutor</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>coord</name><operator>-</operator><name>action</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>xml</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_CommandLineTool</name><operator>.</operator><name>twiki</name></name>  <operator>|</operator>  <literal type="number">22</literal> <operator>+</operator><operator>-</operator>
 <name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SLAMonitoring</name><operator>.</operator><name>twiki</name></name>    <operator>|</operator>  <literal type="number">46</literal> <operator>++</operator><operator>+</operator>
 <name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>WebServicesAPI</name><operator>.</operator><name>twiki</name></name>      <operator>|</operator>  <literal type="number">42</literal> <operator>++</operator><operator>+</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>js</name><operator>/</operator><name>oozie</name><operator>-</operator><name>sla</name><operator>-</operator><name><name>table</name><operator>.</operator><name>js</name></name>  <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>oozie</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>html</name></name>    <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">65</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">3256</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">618</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name><name>SLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAChangeXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAChangeXCommand</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsByDatesForKillJPAExecutor</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name><name>TestSLAAlertXCommand</name><operator>.</operator><name>java</name></name>
 <name>rename</name> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><block>{<expr><name><name>TestCoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>TestCoordActionQueryExecutor</name><operator>.</operator><name>java</name></name></expr>}</block> <operator>(</operator><literal type="number">52</literal><operator>%</operator><operator>)</operator>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordJobGetActionIdsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">66908696f</literal><operator>..</operator><literal type="number">218edf219</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>OozieCLI</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieCLI</name> <block>{
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>LOCAL_TIME_OPTION</name> <operator>=</operator> <literal type="string">"localtime"</literal></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>TIME_ZONE_OPTION</name> <operator>=</operator> <literal type="string">"timezone"</literal></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>QUEUE_DUMP_OPTION</name> <operator>=</operator> <literal type="string">"queuedump"</literal></expr>;
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>RERUN_COORD_OPTION</name> <operator>=</operator> <literal type="string">"coordinator"</literal></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>DATE_OPTION</name> <operator>=</operator> <literal type="string">"date"</literal></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>RERUN_REFRESH_OPTION</name> <operator>=</operator> <literal type="string">"refresh"</literal></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>RERUN_NOCLEANUP_OPTION</name> <operator>=</operator> <literal type="string">"nocleanup"</literal></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>RERUN_FAILED_OPTION</name> <operator>=</operator> <literal type="string">"failed"</literal></expr>;
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ORDER_OPTION</name> <operator>=</operator> <literal type="string">"order"</literal></expr>;
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>COORD_OPTION</name> <operator>=</operator> <literal type="string">"coordinator"</literal></expr>;
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>UPDATE_SHARELIB_OPTION</name> <operator>=</operator> <literal type="string">"sharelibupdate"</literal></expr>;
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>LIST_SHARELIB_LIB_OPTION</name> <operator>=</operator> <literal type="string">"shareliblist"</literal></expr>;
 
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SLA_DISABLE_ALERT</name> <operator>=</operator> <literal type="string">"sla_disable"</literal></expr>;
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SLA_ENABLE_ALERT</name> <operator>=</operator> <literal type="string">"sla_enable"</literal></expr>;
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SLA_CHANGE</name> <operator>=</operator> <literal type="string">"sla_change"</literal></expr>;

 
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>AUTH_OPTION</name> <operator>=</operator> <literal type="string">"auth"</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">328</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">332</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieCLI</name> <block>{
                         <expr><operator>+</operator> <literal type="string">"(requires -log)"</literal></expr>)</block></expr>;
         <expr><name>Option</name> <name>date</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>DATE_OPTION</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
                 <argument><expr><literal type="string">"coordinator/bundle rerun on action dates (requires -rerun); coordinator log retrieval on action dates (requires -log)"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>Option</name> <name>rerun_coord</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>RERUN_COORD_OPTION</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"bundle rerun on coordinator names (requires -rerun)"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>Option</name> <name>rerun_coord</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>COORD_OPTION</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"bundle rerun on coordinator names (requires -rerun)"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>Option</name> <name>rerun_refresh</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>RERUN_REFRESH_OPTION</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>,
                 <argument><expr><literal type="string">"re-materialize the coordinator rerun actions (requires -rerun)"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>Option</name> <name>rerun_nocleanup</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>RERUN_NOCLEANUP_OPTION</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">348</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">352</literal></expr></argument>,<argument><expr><literal type="number">14</literal> @@ <specifier>public</specifier> class <name>OozieCLI</name> <block>{
         <expr><name>Option</name> <name>interval</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>INTERVAL_OPTION</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"polling interval in minutes (default is 5, requires -poll)"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>interval</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
        <expr><name>Option</name> <name>slaDisableAlert</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>SLA_DISABLE_ALERT</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
                <argument><expr><literal type="string">"disables sla alerts for the job and its children"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>Option</name> <name>slaEnableAlert</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>SLA_ENABLE_ALERT</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
                <argument><expr><literal type="string">"enables sla alerts for the job and its children"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>Option</name> <name>slaChange</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>SLA_CHANGE</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
                <argument><expr><literal type="string">"Update sla param for jobs, supported param are should-start, should-end, nominal-time and max-duration"</literal></expr></argument>)</argument_list></call></expr>;


         <expr><name>Option</name> <name>doAs</name> <operator>=</operator> <operator>new</operator> <call><name>Option</name><argument_list>(<argument><expr><name>DO_AS_OPTION</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"doAs user, impersonates as the specified user"</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>OptionGroup</name> <name>actions</name> <operator>=</operator> <operator>new</operator> <call><name>OptionGroup</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">368</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">380</literal></expr>,<expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>OozieCLI</name> <block>{
         <expr><call><name><name>actions</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>config_content</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>actions</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>ignore</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>actions</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>poll</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>actions</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>slaDisableAlert</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>actions</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>slaEnableAlert</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>actions</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>slaChange</name></expr></argument>)</argument_list></call></expr>;

         <expr><call><name><name>actions</name><operator>.</operator><name>setRequired</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>Options</name> <name>jobOptions</name> <operator>=</operator> <operator>new</operator> <call><name>Options</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>jobOptions</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>oozie</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">401</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">417</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>OozieCLI</name> <block>{
         <expr><name>OptionGroup</name> <name>updateOption</name> <operator>=</operator> <operator>new</operator> <call><name>OptionGroup</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>updateOption</name><operator>.</operator><name>addOption</name></name><argument_list>(<argument><expr><name>dryrun</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>jobOptions</name><operator>.</operator><name>addOptionGroup</name></name><argument_list>(<argument><expr><name>updateOption</name></expr></argument>)</argument_list></call></expr>;

         <return>return <expr><name>jobOptions</name></expr>;</return>
     }</block>
 
@@ <operator>-</operator><literal type="number">1014</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1031</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>OozieCLI</name> <block>{
                         <expr><name>dateScope</name> <operator>=</operator> <call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>DATE_OPTION</name></expr></argument>)</argument_list></call></expr>;
                     }</block></expr>
 
                    <if_stmt><if>if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>RERUN_COORD_OPTION</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>coordScope</name> <operator>=</operator> <call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>RERUN_COORD_OPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>COORD_OPTION</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>coordScope</name> <operator>=</operator> <call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>COORD_OPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt/>}</block_content>
 
                     if (options.contains(RERUN_REFRESH_OPTION</block></if></if_stmt>)</block_content></block></if></if_stmt>) <block>{
@@ <expr><operator>-</operator><literal type="number">1234</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1251</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> class <name>OozieCLI</name> <block>{
                 <expr><name>boolean</name> <name>verbose</name> <operator>=</operator> <call><name><name>commandLine</name><operator>.</operator><name>hasOption</name></name><argument_list>(<argument><expr><name>VERBOSE_OPTION</name></expr></argument>)</argument_list></call></expr>;
                 <expr><call><name><name>wc</name><operator>.</operator><name>pollJob</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><name>interval</name></expr></argument>, <argument><expr><name>verbose</name></expr></argument>)</argument_list></call></expr>;
             }</block></expr>
            <if_stmt><if type="elseif">else if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>SLA_ENABLE_ALERT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name>slaAlertCommand</name><argument_list>(<argument><expr><call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>SLA_ENABLE_ALERT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>wc</name></expr></argument>, <argument><expr><name>commandLine</name></expr></argument>, <argument><expr><name>options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/>}</block_content>
            else if (options.contains(SLA_DISABLE_ALERT</block></if></if_stmt>)</block></block></expr></block></expr></argument>)</argument_list></call> <block>{
                <expr><call><name>slaAlertCommand</name><argument_list>(<argument><expr><call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>SLA_DISABLE_ALERT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>wc</name></expr></argument>, <argument><expr><name>commandLine</name></expr></argument>, <argument><expr><name>options</name></expr></argument>)</argument_list></call></expr>;
            }</block></expr>
            <if_stmt><if type="elseif">else if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>SLA_CHANGE</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name>slaAlertCommand</name><argument_list>(<argument><expr><call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>SLA_CHANGE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>wc</name></expr></argument>, <argument><expr><name>commandLine</name></expr></argument>, <argument><expr><name>options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
         }
         catch <expr_stmt><expr><operator>(</operator><name>OozieClientException</name> <name>ex</name><operator>)</operator> <block>{
             <throw>throw <argument_list>new <argument><expr><call><name>OozieCLIException</name><argument_list>(<argument><expr><call><name><name>ex</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
@@ <expr><operator>-</operator><literal type="number">1902</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1928</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieCLI</name> <block>{
                         <expr><literal type="string">"ssh-action-0.2.xsd"</literal></expr>))</block></expr>)</block></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                         <argument><expr><literal type="string">"hive2-action-0.1.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(
                        <argument><expr><literal type="string">"spark-action-0.1.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamSource</name><argument_list>(<argument><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call>
                        <operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"spark-action-0.1.xsd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <decl_stmt><decl><type><name>SchemaFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>SchemaFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>XMLConstants</name><operator>.</operator><name>W3C_XML_SCHEMA_NS_URI</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>Schema</name></type> <name>schema</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>newSchema</name></name><argument_list>(<argument><expr><call><name><name>sources</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>StreamSource</name><index>[<expr><call><name><name>sources</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>Validator</name></type> <name>validator</name> <init>= <expr><call><name><name>schema</name><operator>.</operator><name>newValidator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2059</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">2085</literal></expr><operator>,</operator><expr><literal type="number">35</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieCLI</name> <block>{
         <return>return <expr><call><name><name>allDeps</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>private</specifier> <name>void</name></type> <name>slaAlertCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobIds</name></decl></parameter>, <parameter><decl><type><name>OozieClient</name></type> <name>wc</name></decl></parameter>, <parameter><decl><type><name>CommandLine</name></type> <name>commandLine</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>options</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>OozieCLIException</name></expr></argument>, <argument><expr><name>OozieClientException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>actions</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>, <decl><type ref="prev"/><name>coordinators</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>, <decl><type ref="prev"/><name>dates</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>ACTION_OPTION</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>actions</name> <operator>=</operator> <call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>ACTION_OPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>DATE_OPTION</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>dates</name> <operator>=</operator> <call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>DATE_OPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>COORD_OPTION</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>coordinators</name> <operator>=</operator> <call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>COORD_OPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>coordinators</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>OozieCLIException</name><argument_list>(<argument><expr><literal type="string">"No value specified for -coordinator option"</literal></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>SLA_ENABLE_ALERT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>wc</name><operator>.</operator><name>slaEnableAlert</name></name><argument_list>(<argument><expr><name>jobIds</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coordinators</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif">else if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>SLA_DISABLE_ALERT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>wc</name><operator>.</operator><name>slaDisableAlert</name></name><argument_list>(<argument><expr><name>jobIds</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coordinators</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif">else if <condition>(<expr><call><name><name>options</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>SLA_CHANGE</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>newSlaParams</name> <init>= <expr><call><name><name>commandLine</name><operator>.</operator><name>getOptionValue</name></name><argument_list>(<argument><expr><name>CHANGE_VALUE_OPTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>wc</name><operator>.</operator><name>slaChange</name></name><argument_list>(<argument><expr><name>jobIds</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coordinators</name></expr></argument>, <argument><expr><name>newSlaParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>OozieClient</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>OozieClient</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e4c93cdae</name><operator>..</operator><literal type="number">5de25cc94</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>OozieClient</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name><name>OozieClient</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Callable</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieClient</name> <block>{
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>EXTERNAL_ID</name> <operator>=</operator> <literal type="string">"oozie.wf.external.id"</literal></expr>;
 
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>WORKFLOW_NOTIFICATION_URL</name> <operator>=</operator> <literal type="string">"oozie.wf.workflow.notification.url"</literal></expr>;

     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>WORKFLOW_NOTIFICATION_PROXY</name> <operator>=</operator> <literal type="string">"oozie.wf.workflow.notification.proxy"</literal></expr>;
 
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>WORKFLOW_NOTIFICATION_URL</name> <operator>=</operator> <literal type="string">"oozie.wf.workflow.notification.url"</literal></expr>;

     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ACTION_NOTIFICATION_URL</name> <operator>=</operator> <literal type="string">"oozie.wf.action.notification.url"</literal></expr>;
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>COORD_ACTION_NOTIFICATION_URL</name> <operator>=</operator> <literal type="string">"oozie.coord.action.notification.url"</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">155</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">156</literal></expr>,<expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieClient</name> <block>{
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>FILTER_CREATED_TIME_END</name> <operator>=</operator> <literal type="string">"endcreatedtime"</literal></expr>;
 
    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SLA_DISABLE_ALERT</name> <operator>=</operator> <literal type="string">"oozie.sla.disable.alerts"</literal></expr>;

    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SLA_ENABLE_ALERT</name> <operator>=</operator> <literal type="string">"oozie.sla.enable.alerts"</literal></expr>;

    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SLA_DISABLE_ALERT_OLDER_THAN</name> <operator>=</operator> <name>SLA_DISABLE_ALERT</name> <operator>+</operator> <literal type="string">".older.than"</literal></expr>;

    <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SLA_DISABLE_ALERT_COORD</name> <operator>=</operator> <name>SLA_DISABLE_ALERT</name> <operator>+</operator> <literal type="string">".coord"</literal></expr>;

     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>CHANGE_VALUE_ENDTIME</name> <operator>=</operator> <literal type="string">"endtime"</literal></expr>;
 
     <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>CHANGE_VALUE_PAUSETIME</name> <operator>=</operator> <literal type="string">"pausetime"</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">1626</literal></expr>,<expr><literal type="number">33</literal> <operator>+</operator><literal type="number">1635</literal></expr>,<expr><literal type="number">137</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieClient</name> <block>{
     }</block>
 
     <comment type="block" format="javadoc">/**
     * Print sla info about coordinator and workflow jobs and actions.
     * Sla enable alert.
      *
     * @param start starting offset
     * @param len number of results
     * @throws OozieClientException
     * @param jobIds the job ids
     * @param actionIds comma separated list of action ids or action id ranges
     * @param dates comma separated list of the nominal times
     * @throws OozieClientException the oozie client exception
      */</comment>
    <specifier>public</specifier> <name>void</name> <call><name>getSlaInfo</name><argument_list>(<argument><expr><name>int</name> <name>start</name></expr></argument>, <argument><expr><name>int</name> <name>len</name></expr></argument>, <argument><expr><name>String</name> <name>filter</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>OozieClientException</name> <block>{
        <expr><operator>new</operator> <call><name>SlaInfo</name><argument_list>(<argument><expr><name>start</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><specifier>public</specifier> <name>void</name> <call><name>slaEnableAlert</name><argument_list>(<argument><expr><name>String</name> <name>jobIds</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name> <name>dates</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>OozieClientException</name> <block>{
        <expr><operator>new</operator> <call><name>UpdateSLA</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_ENABLE_ALERT</name></name></expr></argument>, <argument><expr><name>jobIds</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     }</block>
 
    <specifier>private</specifier> <name>class</name> <name>SlaInfo</name> extends <name><name>ClientCallable</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
    <comment type="block" format="javadoc">/**
     * Sla enable alert for bundle with coord name/id.
     *
     * @param bundleId the bundle id
     * @param actionIds comma separated list of action ids or action id ranges
     * @param dates comma separated list of the nominal times
     * @param coords the coordinators
     * @throws OozieClientException the oozie client exception
     */</comment>
    <expr><specifier>public</specifier> <name>void</name> <call><name>slaEnableAlert</name><argument_list>(<argument><expr><name>String</name> <name>bundleId</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name> <name>dates</name></expr></argument>, <argument><expr><name>String</name> <name>coords</name></expr></argument>)</argument_list></call>
            <throws>throws <argument><expr><name>OozieClientException</name> <block>{
        <expr><operator>new</operator> <call><name>UpdateSLA</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_ENABLE_ALERT</name></name></expr></argument>, <argument><expr><name>bundleId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coords</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    }</block>
 
        <call><name>SlaInfo</name><argument_list>(<argument><expr><name>int</name> <name>start</name></expr></argument>, <argument><expr><name>int</name> <name>len</name></expr></argument>, <argument><expr><name>String</name> <name>filter</name></expr></argument>)</argument_list></call> <block>{
            <expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>, <argument><expr><name>WS_PROTOCOL_VERSION_1</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><call><name>prepareParams</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_GT_SEQUENCE_ID</name></name></expr></argument>,
                    <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>start</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>MAX_EVENTS</name></name></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>len</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOBS_FILTER_PARAM</name></name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <comment type="block" format="javadoc">/**
     * Sla disable alert.
     *
     * @param jobIds the job ids
     * @param actionIds comma separated list of action ids or action id ranges
     * @param dates comma separated list of the nominal times
     * @throws OozieClientException the oozie client exception
     */</comment>
    <expr><specifier>public</specifier> <name>void</name> <call><name>slaDisableAlert</name><argument_list>(<argument><expr><name>String</name> <name>jobIds</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name> <name>dates</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>OozieClientException</name> <block>{
        <expr><operator>new</operator> <call><name>UpdateSLA</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>, <argument><expr><name>jobIds</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    }</block>

    <comment type="block" format="javadoc">/**
     * Sla disable alert for bundle with coord name/id.
     *
     * @param bundleId the bundle id
     * @param actionIds comma separated list of action ids or action id ranges
     * @param dates comma separated list of the nominal times
     * @param coords the coordinators
     * @throws OozieClientException the oozie client exception
     */</comment>
    <specifier>public</specifier> <name>void</name> <call><name>slaDisableAlert</name><argument_list>(<argument><expr><name>String</name> <name>bundleId</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name> <name>dates</name></expr></argument>, <argument><expr><name>String</name> <name>coords</name></expr></argument>)</argument_list></call>
            <throws>throws <argument><expr><name>OozieClientException</name> <block>{
        <expr><operator>new</operator> <call><name>UpdateSLA</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>, <argument><expr><name>bundleId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coords</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    }</block>

    <comment type="block" format="javadoc">/**
     * Sla change definations.
     * SLA change definition parameters can be [&lt;key&gt;=&lt;value&gt;,...&lt;key&gt;=&lt;value&gt;]
     * Supported parameter key names are should-start, should-end and max-duration
     * @param jobIds the job ids
     * @param actionIds comma separated list of action ids or action id ranges.
     * @param dates comma separated list of the nominal times
     * @param newSlaParams the new sla params
     * @throws OozieClientException the oozie client exception
     */</comment>
    <specifier>public</specifier> <name>void</name> <call><name>slaChange</name><argument_list>(<argument><expr><name>String</name> <name>jobIds</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name> <name>dates</name></expr></argument>, <argument><expr><name>String</name> <name>newSlaParams</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>OozieClientException</name> <block>{
        <expr><operator>new</operator> <call><name>UpdateSLA</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_CHANGE</name></name></expr></argument>, <argument><expr><name>jobIds</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>newSlaParams</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    }

    <comment type="block" format="javadoc">/**
     * Sla change defination for bundle with coord name/id.
     * SLA change definition parameters can be [&lt;key&gt;=&lt;value&gt;,...&lt;key&gt;=&lt;value&gt;]
     * Supported parameter key names are should-start, should-end and max-duration
     * @param bundleId the bundle id
     * @param actionIds comma separated list of action ids or action id ranges
     * @param dates comma separated list of the nominal times
     * @param coords the coords
     * @param newSlaParams the new sla params
     * @throws OozieClientException the oozie client exception
     */</comment>
    public <function><type><name>void</name></type> <name>slaChange</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>bundleId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coords</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>newSlaParams</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>OozieClientException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><operator>new</operator> <call><name>UpdateSLA</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_CHANGE</name></name></expr></argument>, <argument><expr><name>bundleId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coords</name></expr></argument>, <argument><expr><name>newSlaParams</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Sla change with new sla param as hasmap.
     * Supported parameter key names are should-start, should-end and max-duration
     * @param bundleId the bundle id
     * @param actionIds comma separated list of action ids or action id ranges
     * @param dates comma separated list of the nominal times
     * @param coords the coords
     * @param newSlaParams the new sla params
     * @throws OozieClientException the oozie client exception
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>slaChange</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>bundleId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coords</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newSlaParams</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>OozieClientException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><operator>new</operator> <call><name>UpdateSLA</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_CHANGE</name></name></expr></argument>, <argument><expr><name>bundleId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coords</name></expr></argument>, <argument><expr><call><name>mapToString</name><argument_list>(<argument><expr><name>newSlaParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Convert Map to string.
     *
     * @param map the map
     * @return the string
     */</comment>
    <function><type><specifier>private</specifier> <name>String</name></type> <name>mapToString</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>map</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>StringBuilder</name></type> <name>sb</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>it</name> <init>= <expr><call><name><name>map</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>e</name> <init>= <expr><operator>(</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">";"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
        <return>return <expr><call><name><name>sb</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <class><specifier>private</specifier> class <name>UpdateSLA</name> <super_list><extends>extends <super><name><name>ClientCallable</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{

        <constructor><name>UpdateSLA</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>jobIds</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coordActions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coords</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"PUT"</literal></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB</name></name></expr></argument>, <argument><expr><call><name>notEmpty</name><argument_list>(<argument><expr><name>jobIds</name></expr></argument>, <argument><expr><literal type="string">"jobIds"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>prepareParams</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>ACTION_PARAM</name></name></expr></argument>,
                    <argument><expr><name>action</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_ACTION_LIST</name></name></expr></argument>, <argument><expr><name>coordActions</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_DATE</name></name></expr></argument>,
                    <argument><expr><name>dates</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>COORDINATORS_PARAM</name></name></expr></argument>, <argument><expr><name>coords</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <constructor><name>UpdateSLA</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>jobIds</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coordActions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coords</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>newSlaParams</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"PUT"</literal></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB</name></name></expr></argument>, <argument><expr><call><name>notEmpty</name><argument_list>(<argument><expr><name>jobIds</name></expr></argument>, <argument><expr><literal type="string">"jobIds"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>prepareParams</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>ACTION_PARAM</name></name></expr></argument>,
                    <argument><expr><name>action</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_ACTION_LIST</name></name></expr></argument>, <argument><expr><name>coordActions</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_DATE</name></name></expr></argument>,
                    <argument><expr><name>dates</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>COORDINATORS_PARAM</name></name></expr></argument>, <argument><expr><name>coords</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_CHANGE_VALUE</name></name></expr></argument>, <argument><expr><name>newSlaParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></constructor>
 
         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>protected</specifier> <name>Void</name></type> <name>call</name><parameter_list>(<parameter><decl><type><name>HttpURLConnection</name></type> <name>conn</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>OozieClientException</name></expr></argument></throws> <block>{<block_content>
             <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>setRequestProperty</name></name><argument_list>(<argument><expr><literal type="string">"content-type"</literal></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>XML_CONTENT_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><operator>(</operator><call><name><name>conn</name><operator>.</operator><name>getResponseCode</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>HttpURLConnection</name><operator>.</operator><name>HTTP_OK</name></name><operator>)</operator></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><call><name><name>conn</name><operator>.</operator><name>getInputStream</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
                <while>while <condition>(<expr><operator>(</operator><name>line</name> <operator>=</operator> <call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></while>
                <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Done"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if>
             <else>else <block>{<block_content>
                 <expr_stmt><expr><call><name>handleError</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1661</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1774</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <specifier>public</specifier> <name>class</name> <name>OozieClient</name> <block>{
         }</block></expr></expr_stmt>
     </block_content>}</block></else></if_stmt>
 
    <comment type="block" format="javadoc">/**
    * Print sla info about coordinator and workflow jobs and actions.
    *
    * @param start starting offset
    * @param len number of results
    * @throws OozieClientException
    */</comment>
        <function><type><specifier>public</specifier> <name>void</name></type> <name>getSlaInfo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>OozieClientException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><operator>new</operator> <call><name>SlaInfo</name><argument_list>(<argument><expr><name>start</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>

        <class><specifier>private</specifier> class <name>SlaInfo</name> <super_list><extends>extends <super><name><name>ClientCallable</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{

            <constructor><name>SlaInfo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>, <argument><expr><name>WS_PROTOCOL_VERSION_1</name></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><call><name>prepareParams</name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_GT_SEQUENCE_ID</name></name></expr></argument>,
                        <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>start</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>MAX_EVENTS</name></name></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>len</name></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOBS_FILTER_PARAM</name></name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></constructor>

            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>Void</name></type> <name>call</name><parameter_list>(<parameter><decl><type><name>HttpURLConnection</name></type> <name>conn</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>OozieClientException</name></expr></argument></throws> <block>{<block_content>
                <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>setRequestProperty</name></name><argument_list>(<argument><expr><literal type="string">"content-type"</literal></expr></argument>, <argument><expr><name><name>RestConstants</name><operator>.</operator><name>XML_CONTENT_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><operator>(</operator><call><name><name>conn</name><operator>.</operator><name>getResponseCode</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>HttpURLConnection</name><operator>.</operator><name>HTTP_OK</name></name><operator>)</operator></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><call><name><name>conn</name><operator>.</operator><name>getInputStream</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
                    <while>while <condition>(<expr><operator>(</operator><name>line</name> <operator>=</operator> <call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></while>
                </block_content>}</block></if>
                <else>else <block>{<block_content>
                    <expr_stmt><expr><call><name>handleError</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></function>
        }</block></class>

     <class><specifier>private</specifier> class <name>JobIdAction</name> <super_list><extends>extends <super><name><name>ClientCallable</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{
 
         <constructor><name>JobIdAction</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>externalId</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name>event</name><operator>/</operator><name><name>SLAEvent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name>event</name><operator>/</operator><name><name>SLAEvent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">27a0e1fa8</literal><operator>..</operator><literal type="number">19d732f0e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name>event</name><operator>/</operator><name><name>SLAEvent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>client</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>client</name><operator>/</operator><name>event</name><operator>/</operator><name><name>SLAEvent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>SLAEvent</name> extends <name>Event</name> <block>{
      <expr><operator>*</operator>
      <operator>*</operator> @</expr><return>return <expr><name>String</name> <name>slaConfig</name>
      <operator>*</operator><operator>/</operator>
    <specifier>public</specifier> <specifier>abstract</specifier> <name>String</name> <call><name>getSlaConfig</name><argument_list>()</argument_list></call></expr>;</return>
    <specifier>public</specifier> <specifier>abstract</specifier> <name>String</name> <call><name>getSLAConfig</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <comment type="block" format="javadoc">/**
      * Get the actual start time of job for SLA
diff --git a/client/src/main/java/org/apache/oozie/client/rest/JsonTags.java b/client/src/main/java/org/apache/oozie/client/rest/JsonTags.java
index b7cf0e73c..1022dd7e6 100644
-- a/client/src/main/java/org/apache/oozie/client/rest/JsonTags.java
++ b/client/src/main/java/org/apache/oozie/client/rest/JsonTags.java
@@ -172,6 +172,8 @@ public interface JsonTags {
     public static final String SLA_SUMMARY_JOB_STATUS = "jobStatus";
     public static final String SLA_SUMMARY_SLA_STATUS = "slaStatus";
     public static final String SLA_SUMMARY_LAST_MODIFIED = "lastModified";
    public static final String SLA_ALERT_STATUS = "slaAlertStatus";

 
     public static final String TO_STRING = "toString";
 
diff --git a/client/src/main/java/org/apache/oozie/client/rest/RestConstants.java b/client/src/main/java/org/apache/oozie/client/rest/RestConstants.java
index 3c2afc3aa..4c75d2a95 100644
-- a/client/src/main/java/org/apache/oozie/client/rest/RestConstants.java
++ b/client/src/main/java/org/apache/oozie/client/rest/RestConstants.java
@@ -186,4 +186,24 @@ public interface RestConstants {
     public static final String LOG_FILTER_OPTION = "logfilter";
 
     public static final String JOB_COORD_RERUN_FAILED_PARAM = "failed";

    public static final String SLA_DISABLE_ALERT = "sla-disable";

    public static final String SLA_ENABLE_ALERT = "sla-enable";

    public static final String SLA_CHANGE = "sla-change";

    public static final String SLA_ALERT_RANGE = "sla-alert-range";

    public static final String COORDINATORS_PARAM = "coordinators";

    public static final String SLA_NOMINAL_TIME = "sla-nominal-time";

    public static final String SLA_SHOULD_START = "sla-should-start";

    public static final String SLA_SHOULD_END = "sla-should-end";

    public static final String SLA_MAX_DURATION = "sla-max-duration";

    public static final String JOB_COORD_SCOPE_ACTION_LIST = "action-list";
 }
diff --git a/core/src/main/java/org/apache/oozie/BaseEngine.java b/core/src/main/java/org/apache/oozie/BaseEngine.java
index bf38a0c84..44074ea94 100644
-- a/core/src/main/java/org/apache/oozie/BaseEngine.java
++ b/core/src/main/java/org/apache/oozie/BaseEngine.java
@@ -239,4 +239,44 @@ public abstract class BaseEngine {
      * @throws BaseEngineException thrown if the job's status could not be obtained
      */</comment>
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>String</name></type> <name>getJobStatus</name><argument_list>(<argument><expr><name>String</name> <name>jobId</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Return the status for a Job ID
     *
     * @param jobId job Id.
     * @return the job's status
     * @throws BaseEngineException thrown if the job's status could not be obtained
     */</comment>

    <comment type="block" format="javadoc">/**
     * Enable SLA alert for job
     * @param id
     * @param actions
     * @param dates
     * @param childIds
     * @throws BaseEngineException
     */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>enableSLAAlert</name><argument_list>(<argument><expr><name>String</name> <name>id</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name> <name>dates</name></expr></argument>, <argument><expr><name>String</name> <name>childIds</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Disable SLA alert for job
     * @param id
     * @param actions
     * @param dates
     * @param childIds
     * @throws BaseEngineException
     */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>disableSLAAlert</name><argument_list>(<argument><expr><name>String</name> <name>id</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name>  <name>dates</name></expr></argument>, <argument><expr><name>String</name> <name>childIds</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Change SLA properties for job
     * @param id
     * @param actions
     * @param childIds
     * @param newParams
     * @throws BaseEngineException
     */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>changeSLA</name><argument_list>(<argument><expr><name>String</name> <name>id</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name>  <name>dates</name></expr></argument>, <argument><expr><name>String</name> <name>childIds</name></expr></argument>, <argument><expr><name>String</name> <name>newParams</name></expr></argument>)</argument_list>
            <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws></decl>;</decl_stmt>

 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>BundleEngine</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>BundleEngine</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9818acc77</literal><operator>..</operator><literal type="number">659c8e633</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>BundleEngine</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>BundleEngine</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>StringTokenizer</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorJob</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowJob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>BulkResponseImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>BulkJobsXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name><operator>.</operator><name>BundleSLAAlertsDisableXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name><operator>.</operator><name>BundleSLAAlertsEnableXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name><operator>.</operator><name>BundleSLAChangeXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name><operator>.</operator><name>BundleJobChangeXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name><operator>.</operator><name>BundleJobResumeXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name><operator>.</operator><name>BundleJobSuspendXCommand</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>DagXLogInfoService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>XLogStreamingService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>JobUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLogFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLogUserFilterParam</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">506</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">509</literal></expr><operator>,</operator><expr><literal type="number">41</literal> @@ <specifier>public</specifier> <name>class</name> <name>BundleEngine</name> extends <name>BaseEngine</name> <block>{
             <throw>throw <argument_list>new <argument><expr><call><name>BundleEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
         }</block></expr></expr_stmt>
     }</block></class>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>enableSLAAlert</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <expr_stmt><expr><operator>new</operator> <call><name>BundleSLAAlertsEnableXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>CommandException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>BundleEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>disableSLAAlert</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <expr_stmt><expr><operator>new</operator> <call><name>BundleSLAAlertsDisableXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>CommandException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>BundleEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>changeSLA</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>newParams</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>slaNewParams</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>

            <if_stmt><if>if <condition>(<expr><name>newParams</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>slaNewParams</name> <operator>=</operator> <call><name><name>JobUtils</name><operator>.</operator><name>parseChangeValue</name></name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><operator>new</operator> <call><name>BundleSLAChangeXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>, <argument><expr><name>slaNewParams</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>CommandException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>BundleEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorActionBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorActionBean</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bd01d14c7</name><operator>..</operator><literal type="number">85b7ed43e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorActionBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorActionBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>MessageFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Basic</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Column</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Entity</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Id</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Lob</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQueries</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQuery</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Table</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Writable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>openjpa</name><operator>.</operator><name>persistence</name><operator>.</operator><name>jdbc</name><operator>.</operator><name>Strategy</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONArray</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Basic</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Column</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>ColumnResult</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Entity</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Id</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Lob</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedNativeQueries</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedNativeQuery</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQueries</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQuery</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>SqlResultSetMapping</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Table</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>MessageFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <annotation>@<name>Entity</name></annotation>
 <annotation>@<name>NamedQueries</name><argument_list>(<argument><expr><block>{
<annotation>@</annotation></block></expr></argument></argument_list></annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">147</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_ACTIONS_FOR_RECOVERY_OLDER_THAN"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.jobId, a.statusStr, a.externalId, a.pending from CoordinatorActionBean a where a.pending &gt; 0 AND (a.statusStr = 'SUSPENDED' OR a.statusStr = 'KILLED' OR a.statusStr = 'RUNNING') AND a.lastModifiedTimestamp &lt;= :lastModifiedTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
         <comment type="line">// Select query used by rerun, requires almost all columns so select * is used</comment>
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTIONS_FOR_DATES"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(a) from CoordinatorActionBean a where a.jobId = :jobId AND (a.statusStr = 'TIMEDOUT' OR a.statusStr = 'SUCCEEDED' OR a.statusStr = 'KILLED' OR a.statusStr = 'FAILED' OR a.statusStr = 'IGNORED') AND a.nominalTimestamp &gt;= :startTime AND a.nominalTimestamp &lt;= :endTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_TERMINATED_ACTIONS_FOR_DATES"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(a) from CoordinatorActionBean a where a.jobId = :jobId AND (a.statusStr = 'TIMEDOUT' OR a.statusStr = 'SUCCEEDED' OR a.statusStr = 'KILLED' OR a.statusStr = 'FAILED' OR a.statusStr = 'IGNORED') AND a.nominalTimestamp &gt;= :startTime AND a.nominalTimestamp &lt;= :endTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
         <comment type="line">// Select query used by log</comment>
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_IDS_FOR_DATES"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id from CoordinatorActionBean a where a.jobId = :jobId AND (a.statusStr = 'TIMEDOUT' OR a.statusStr = 'SUCCEEDED' OR a.statusStr = 'KILLED' OR a.statusStr = 'FAILED') AND a.nominalTimestamp &gt;= :startTime AND a.nominalTimestamp &lt;= :endTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_TERMINATED_ACTION_IDS_FOR_DATES"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id from CoordinatorActionBean a where a.jobId = :jobId AND (a.statusStr = 'TIMEDOUT' OR a.statusStr = 'SUCCEEDED' OR a.statusStr = 'KILLED' OR a.statusStr = 'FAILED') AND a.nominalTimestamp &gt;= :startTime AND a.nominalTimestamp &lt;= :endTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
         <comment type="line">// Select query used by rerun, requires almost all columns so select * is used</comment>
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_FOR_NOMINALTIME"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(a) from CoordinatorActionBean a where a.jobId = :jobId AND a.nominalTimestamp = :nominalTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTIONS_BY_DATES_FOR_KILL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.jobId, a.statusStr, a.externalId, a.pending, a.nominalTimestamp, a.createdTimestamp from CoordinatorActionBean a where a.jobId = :jobId AND (a.statusStr &lt;&gt; 'FAILED' AND a.statusStr &lt;&gt; 'KILLED' AND a.statusStr &lt;&gt; 'SUCCEEDED' AND a.statusStr &lt;&gt; 'TIMEDOUT') AND a.nominalTimestamp &gt;= :startTime AND a.nominalTimestamp &lt;= :endTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTIVE_ACTIONS_FOR_DATES"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.jobId, a.statusStr, a.externalId, a.pending, a.nominalTimestamp, a.createdTimestamp from CoordinatorActionBean a where a.jobId = :jobId AND (a.statusStr = 'WAITING' OR a.statusStr = 'READY' OR a.statusStr = 'SUBMITTED' OR a.statusStr = 'RUNNING'  OR a.statusStr = 'SUSPENDED') AND a.nominalTimestamp &gt;= :startTime AND a.nominalTimestamp &lt;= :endTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_ACTIONS_COUNT"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select count(w) from CoordinatorActionBean w"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">161</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_ACTIONS_MAX_MODIFIED_DATE_FOR_RANGE"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select max(w.lastModifiedTimestamp) from CoordinatorActionBean w where w.jobId= :jobId and w.id &gt;= :startAction AND w.id &lt;= :endAction"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_READY_ACTIONS_GROUP_BY_JOBID"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.jobId, min(a.lastModifiedTimestamp) from CoordinatorActionBean a where a.statusStr = 'READY' group by a.jobId having min(a.lastModifiedTimestamp) &lt; :lastModifiedTime"</literal></expr></argument>)</argument_list></annotation>}</block></class>)
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_READY_ACTIONS_GROUP_BY_JOBID"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.jobId, min(a.lastModifiedTimestamp) from CoordinatorActionBean a where a.statusStr = 'READY' group by a.jobId having min(a.lastModifiedTimestamp) &lt; :lastModifiedTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTIVE_ACTIONS_IDS_FOR_SLA_CHANGE"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.nominalTimestamp, a.createdTimestamp, a.actionXml  from CoordinatorActionBean a where a.id in (:ids) and (a.statusStr &lt;&gt; 'FAILED' AND a.statusStr &lt;&gt; 'KILLED' AND a.statusStr &lt;&gt; 'SUCCEEDED' AND a.statusStr &lt;&gt; 'TIMEDOUT'  AND a.statusStr &lt;&gt; 'IGNORED')"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTIVE_ACTIONS_JOBID_FOR_SLA_CHANGE"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.nominalTimestamp, a.createdTimestamp, a.actionXml  from CoordinatorActionBean a where a.jobId = :jobId and (a.statusStr &lt;&gt; 'FAILED' AND a.statusStr &lt;&gt; 'KILLED' AND a.statusStr &lt;&gt; 'SUCCEEDED' AND a.statusStr &lt;&gt; 'TIMEDOUT'  AND a.statusStr &lt;&gt; 'IGNORED')"</literal></expr></argument>)</argument_list></annotation>
 })
 
 <annotation>@<name>Table</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"COORD_ACTIONS"</literal></expr></argument>)</argument_list></annotation>
 <expr_stmt><expr><specifier>public</specifier> <name>class</name> <name>CoordinatorActionBean</name> implements
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorEngine</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorEngine</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">136c09730</literal><operator>..</operator><literal type="number">642a82a3f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorEngine</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorEngine</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name></name>;</package>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordJobsXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordKillXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordRerunXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordResumeXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSLAAlertsDisableXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSLAAlertsEnableXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSLAChangeXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSubmitXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSuspendXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordUpdateXCommand</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>XLogStreamingService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>CoordActionsInDateRange</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>JobUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLog</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">847</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">852</literal></expr><operator>,</operator><expr><literal type="number">46</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordinatorEngine</name> extends <name>BaseEngine</name> <block>{
             <throw>throw <argument_list>new <argument><expr><call><name>CoordinatorEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
         }</block></expr></expr_stmt>
     }

    @<function><type><name>Override</name>
    <specifier>public</specifier> <name>void</name></type> <name>disableSLAAlert</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAAlertsDisableXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>CommandException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CoordinatorEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>changeSLA</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>newParams</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>slaNewParams</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

        <try>try <block>{<block_content>

            <if_stmt><if>if <condition>(<expr><name>newParams</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>slaNewParams</name> <operator>=</operator> <call><name><name>JobUtils</name><operator>.</operator><name>parseChangeValue</name></name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>

            <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAChangeXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>slaNewParams</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>CommandException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CoordinatorEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>enableSLAAlert</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAAlertsEnableXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>CommandException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CoordinatorEngineException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4d6b97025</literal><operator>..</operator><name>c3ee83997</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Writable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonTags</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>WritableUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>openjpa</name><operator>.</operator><name>persistence</name><operator>.</operator><name>jdbc</name><operator>.</operator><name>Index</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>openjpa</name><operator>.</operator><name>persistence</name><operator>.</operator><name>jdbc</name><operator>.</operator><name>Strategy</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONArray</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>MessageFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Basic</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Column</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQueries</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQuery</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Table</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Transient</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>MessageFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Writable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonTags</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>WritableUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>openjpa</name><operator>.</operator><name>persistence</name><operator>.</operator><name>jdbc</name><operator>.</operator><name>Index</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>openjpa</name><operator>.</operator><name>persistence</name><operator>.</operator><name>jdbc</name><operator>.</operator><name>Strategy</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONArray</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
 
 <annotation>@<name>Entity</name></annotation>
 <annotation>@<name>NamedQueries</name><argument_list>( <argument><expr><block>{
<annotation>@</annotation></block></expr></argument></argument_list></annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_COORD_JOB_CHANGE"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update CoordinatorJobBean w set w.endTimestamp = :endTime, w.statusStr = :status, w.pending = :pending, w.doneMaterialization = :doneMaterialization, w.concurrency = :concurrency, w.pauseTimestamp = :pauseTime, w.lastActionNumber = :lastActionNumber, w.lastActionTimestamp = :lastActionTime, w.nextMaterializedTimestamp = :nextMatdTime, w.lastModifiedTimestamp = :lastModifiedTime where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_COORD_JOB_CONF"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update CoordinatorJobBean w set w.conf = :conf where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_COORD_JOB_XML"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update CoordinatorJobBean w set w.jobXml = :jobXml where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"DELETE_COORD_JOB"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"delete from CoordinatorJobBean w where w.id IN (:id)"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOBS"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(w) from CoordinatorJobBean w"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
         <comment type="line">//TODO need to remove.</comment>
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOBS_OLDER_THAN"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(w) from CoordinatorJobBean w where w.startTimestamp &lt;= :matTime AND (w.statusStr = 'PREP' OR w.statusStr = 'RUNNING' or w.statusStr = 'RUNNINGWITHERROR') AND (w.nextMaterializedTimestamp &lt; :matTime OR w.nextMaterializedTimestamp IS NULL) AND (w.nextMaterializedTimestamp IS NULL OR (w.endTimestamp &gt; w.nextMaterializedTimestamp AND (w.pauseTimestamp IS NULL OR w.pauseTimestamp &gt; w.nextMaterializedTimestamp))) order by w.lastModifiedTimestamp"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOBS_OLDER_FOR_MATERILZATION"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.id from CoordinatorJobBean w where w.startTimestamp &lt;= :matTime AND (w.statusStr = 'PREP' OR w.statusStr = 'RUNNING' or w.statusStr = 'RUNNINGWITHERROR') AND (w.nextMaterializedTimestamp &lt; :matTime OR w.nextMaterializedTimestamp IS NULL) AND (w.nextMaterializedTimestamp IS NULL OR (w.endTimestamp &gt; w.nextMaterializedTimestamp AND (w.pauseTimestamp IS NULL OR w.pauseTimestamp &gt; w.nextMaterializedTimestamp))) and w.matThrottling &gt; ( select count(a.jobId) from CoordinatorActionBean a where a.jobId = w.id and a.statusStr = 'WAITING') order by w.lastModifiedTimestamp"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOBS_OLDER_FOR_MATERIALIZATION"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.id from CoordinatorJobBean w where w.startTimestamp &lt;= :matTime AND (w.statusStr = 'PREP' OR w.statusStr = 'RUNNING' or w.statusStr = 'RUNNINGWITHERROR') AND (w.nextMaterializedTimestamp &lt; :matTime OR w.nextMaterializedTimestamp IS NULL) AND (w.nextMaterializedTimestamp IS NULL OR (w.endTimestamp &gt; w.nextMaterializedTimestamp AND (w.pauseTimestamp IS NULL OR w.pauseTimestamp &gt; w.nextMaterializedTimestamp))) and w.matThrottling &gt; ( select count(a.jobId) from CoordinatorActionBean a where a.jobId = w.id and a.statusStr = 'WAITING') order by w.lastModifiedTimestamp"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOBS_OLDER_THAN_STATUS"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(w) from CoordinatorJobBean w where w.statusStr = :status AND w.lastModifiedTimestamp &lt;= :lastModTime order by w.lastModifiedTimestamp"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOB_STATUS_PARENTID"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.statusStr, w.bundleId from CoordinatorJobBean w where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
        <decl_stmt><decl><annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_IDS_FOR_STATUS_TRANSIT"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select DISTINCT w.id from CoordinatorActionBean a, CoordinatorJobBean w where w.id = a.jobId and a.lastModifiedTimestamp &gt;= :lastModifiedTime and (w.statusStr IN ('PAUSED', 'RUNNING', 'RUNNINGWITHERROR', 'PAUSEDWITHERROR') or w.pending = 1)  and w.statusStr &lt;&gt; 'IGNORED'"</literal></expr></argument>)</argument_list></annotation>
        @<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_IDS_FOR_STATUS_TRANSIT"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select DISTINCT w.id from CoordinatorActionBean a, CoordinatorJobBean w where w.id = a.jobId and a.lastModifiedTimestamp &gt;= :lastModifiedTime and (w.statusStr IN ('PAUSED', 'RUNNING', 'RUNNINGWITHERROR', 'PAUSEDWITHERROR') or w.pending = 1)  and w.statusStr &lt;&gt; 'IGNORED'"</literal></expr></argument>)</argument_list></decl>,

        @<decl><type ref="prev"/><name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOBS_FOR_BUNDLE_BY_APPNAME_ID"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.id from CoordinatorJobBean w where ( w.appName IN (:appName) OR w.id IN (:appName) )  AND w.bundleId = :bundleId"</literal></expr></argument>)</argument_list></decl>,

        @<decl><type ref="prev"/><name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOB_CONF"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.conf from CoordinatorJobBean w where w.id = :id"</literal></expr></argument>)</argument_list></decl>,

        @<decl><type ref="prev"/><name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOB_XML"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.jobXml from CoordinatorJobBean w where w.id = :id"</literal></expr></argument>)</argument_list></decl></decl_stmt>
 
 })
 <annotation>@<name>NamedNativeQueries</name><argument_list>(<argument><expr><block>{
<annotation>@</annotation></block></expr></argument></argument_list></annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">232</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordinatorJobBean</name> implements <name>Writable</name></expr><operator>,</operator> <expr><name>CoordinatorJob</name></expr><operator>,</operator> <expr><name>JsonBean</name> <block>{
     <expr><specifier>private</specifier> <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name> <name>startTimestamp</name> <operator>=</operator> <literal type="null">null</literal></expr>;
 
     @<expr><name>Basic</name>
    @<name>Index</name>
     @<call><name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"end_time"</literal></expr></argument>)</argument_list></call>
     <specifier>private</specifier> <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name> <name>endTimestamp</name> <operator>=</operator> <literal type="null">null</literal></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>DagEngine</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>DagEngine</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">50aef2fad</literal><operator>..</operator><name>ac2e7b1bb</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>DagEngine</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>DagEngine</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">585</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">585</literal></expr>,<expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>DagEngine</name> extends <name>BaseEngine</name> <block>{
             <throw>throw <argument_list>new <argument><expr><call><name>DagEngineException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
         }</block></expr>
     }</block>

    @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>enableSLAAlert</name><argument_list>(<argument><expr><name>String</name> <name>id</name></expr></argument>, <argument><expr><name>String</name> <name>actions</name></expr></argument>, <argument><expr><name>String</name> <name>dates</name></expr></argument>, <argument><expr><name>String</name> <name>childIds</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>BaseEngineException</name> <block>{</block></expr></argument></throws>
        <throw>throw <argument_list>new <argument><expr><call><name>BaseEngineException</name><argument_list>(<argument><expr><operator>new</operator> <call><name>XException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0301</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported for workflow"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
    }

    @<function><type><name>Override</name>
    <specifier>public</specifier> <name>void</name></type> <name>disableSLAAlert</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>BaseEngineException</name><argument_list>(<argument><expr><operator>new</operator> <call><name>XException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0301</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported for workflow"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>changeSLA</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>newParams</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>BaseEngineException</name></expr></argument></throws> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>BaseEngineException</name><argument_list>(<argument><expr><operator>new</operator> <call><name>XException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0301</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported for workflow"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4444c87e5</literal><operator>..</operator><literal type="number">7630c2f66</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>ErrorCode</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> enum <name>ErrorCode</name> <block>{
     <expr><call><name>E1023</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Coord Job update Error: [{0}]"</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E1024</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Cannot run ignore command: [{0}]"</literal></expr></argument>)</argument_list></call></expr>,
     <expr><call><name>E1025</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Coord status transit error: [{0}]"</literal></expr></argument>)</argument_list></call></expr>,
    <expr><call><name>E1026</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"SLA alert update command failed: {0}"</literal></expr></argument>)</argument_list></call></expr>,
    <expr><call><name>E1027</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"SLA change command failed. {0}"</literal></expr></argument>)</argument_list></call></expr>,
 
 
     <expr><call><name>E1100</name><argument_list>(<argument><expr><name><name>XLog</name><operator>.</operator><name>STD</name></name></expr></argument>, <argument><expr><literal type="string">"Command precondition does not hold before execution, [{0}]"</literal></expr></argument>)</argument_list></call></expr>,
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name><name>SLAAlertsXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name><name>SLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..baf3a278d</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name><name>SLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr>,<expr><literal type="number">117</literal> @@</expr>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name></name>;</package></block></expr></expr_stmt>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>LogUtils</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>SLAAlertsXCommand</name> <super_list><extends>extends <super><name><name>XCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>jobId</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>SLAAlertsXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>jobId</name></name> <operator>=</operator> <name>jobId</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>final</specifier> <specifier>protected</specifier> <name>boolean</name></type> <name>isLockRequired</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>final</specifier> <specifier>public</specifier> <name>String</name></type> <name>getEntityKey</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>final</specifier> <specifier>public</specifier> <name>String</name></type> <name>getJobId</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>jobId</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>setLogInfo</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LogUtils</name><operator>.</operator><name>setLogInfo</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>loadState</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>verifyPrecondition</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument>, <argument><expr><name>PreconditionException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>Void</name></type> <name>execute</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>executeSlaCommand</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>isJobRequest</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1026</name></name></expr></argument>, <argument><expr><literal type="string">"No record found"</literal></expr></argument>)</argument_list></call></expr>;</throw>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>

        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>ServiceException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name>updateJob</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getKey</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><call><name>getName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"_"</literal> <operator>+</operator> <name>jobId</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>protected</specifier> <name>void</name></type> <name>validateSLAChangeParam</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>slaParams</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument>, <argument><expr><name>PreconditionException</name></expr></argument></throws> <block>{<block_content>
        <for>for <control>(<init><decl><type><name>String</name></type> <name>key</name> <range>: <expr><call><name><name>slaParams</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_NOMINAL_TIME</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>key</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_START</name></name></expr></argument>)</argument_list></call>
                    <operator>||</operator> <call><name><name>key</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_END</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>key</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_MAX_DURATION</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <comment type="line">// good.</comment>
            </block_content>}</block></if>
            <else>else <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1027</name></name></expr></argument>, <argument><expr><literal type="string">"Unsupported parameter "</literal> <operator>+</operator> <name>key</name></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Execute sla command.
     *
     * @return true, if successful
     * @throws ServiceException the service exception
     * @throws CommandException the command exception
     */</comment>
    <function_decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>boolean</name></type> <name>executeSlaCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>, <argument><expr><name>CommandException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Update job.
     *
     * @throws CommandException the command exception
     */</comment>
    <function_decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>updateJob</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws>;</function_decl>

    <function_decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>boolean</name></type> <name>isJobRequest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws>;</function_decl>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..4f4e2cda4</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">44</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSLAAlertsDisableXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>

<class><specifier>public</specifier> class <name>BundleSLAAlertsDisableXCommand</name> <super_list><extends>extends <super><name>BundleSLAAlertsXCommand</name></super></extends></super_list> <block>{

    <constructor><specifier>public</specifier> <name>BundleSLAAlertsDisableXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>loadState</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>updateJob</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>executeCoordCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>,
            <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAAlertsDisableXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..4d3b75c9f</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">45</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSLAAlertsEnableXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>

<class><specifier>public</specifier> class <name>BundleSLAAlertsEnableXCommand</name> <super_list><extends>extends <super><name>BundleSLAAlertsXCommand</name></super></extends></super_list> <block>{

    <constructor><specifier>public</specifier> <name>BundleSLAAlertsEnableXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>loadState</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>executeCoordCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>,
            <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAAlertsEnableXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>updateJob</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..1e6f6aea9</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">149</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>XException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>SLAAlertsXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>BundleSLAAlertsXCommand</name> <super_list><extends>extends <super><name>SLAAlertsXCommand</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>actions</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>dates</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>childIds</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>BundleSLAAlertsXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="string">"SLA.command"</literal></expr></argument>, <argument><expr><literal type="string">"SLA.command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>actions</name></name> <operator>=</operator> <name>actions</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dates</name></name> <operator>=</operator> <name>dates</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>childIds</name></name> <operator>=</operator> <name>childIds</name></expr>;</expr_stmt>

    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>loadState</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Gets the coord jobs from bundle.
     *
     * @param id the bundle id
     * @param coords the coords name/id
     * @return the coord jobs from bundle
     * @throws CommandException the command exception
     */</comment>
    <function><type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getCoordJobsFromBundle</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coords</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>jobs</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorJobBean</name></argument>&gt;</argument_list></name></type> <name>coordJobs</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>coords</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>coordJobs</name> <operator>=</operator> <call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call>
                        <operator>.</operator><call><name>getList</name><argument_list>(<argument><expr><name><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOBS_WITH_PARENT_ID</name></name></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else>else <block>{<block_content>
                <expr_stmt><expr><name>coordJobs</name> <operator>=</operator> <call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                        <argument><expr><name><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOBS_FOR_BUNDLE_BY_APPNAME_ID</name></name></expr></argument>, <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>coords</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>XException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
        <for>for <control>(<init><decl><type><name>CoordinatorJobBean</name></type> <name>jobBean</name> <range>: <expr><name>coordJobs</name></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>jobs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>jobBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <return>return <expr><name>jobs</name></expr>;</return>

    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Gets the coord jobs.
     *
     * @return the coord jobs
     */</comment>
    <function><type><specifier>protected</specifier> <name>String</name></type> <name>getCoordJobs</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>childIds</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Gets the actions.
     *
     * @return the actions
     */</comment>
    <function><type><specifier>protected</specifier> <name>String</name></type> <name>getActions</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>actions</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Gets the dates.
     *
     * @return the dates
     */</comment>
    <function><type><specifier>protected</specifier> <name>String</name></type> <name>getDates</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>dates</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>isJobRequest</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>boolean</name></type> <name>executeSlaCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>, <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>StringBuffer</name></type> <name>report</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>coordJobs</name> <init>= <expr><call><name>getCoordJobsFromBundle</name><argument_list>(<argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getCoordJobs</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>coordJobs</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1026</name></name></expr></argument>, <argument><expr><literal type="string">"No record found"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <for>for <control>(<init><decl><type><name>String</name></type> <name>job</name> <range>: <expr><name>coordJobs</name></expr></range></decl></init>)</control> <block>{<block_content>
                <try>try <block>{<block_content>
                    <expr_stmt><expr><call><name>executeCoordCommand</name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><call><name>getActions</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getDates</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block>
                <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <comment type="line">// Ignore exception for coords.</comment>
                    <decl_stmt><decl><type><name>String</name></type> <name>errorMsg</name> <init>= <expr><literal type="string">"SLA command for coord job "</literal> <operator>+</operator> <name>job</name> <operator>+</operator> <literal type="string">" failed. Error message is  : "</literal> <operator>+</operator> <call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>errorMsg</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>report</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>errorMsg</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"line.separator"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></catch></try>
            </block_content>}</block></for>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>report</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1026</name></name></expr></argument>, <argument><expr><call><name><name>report</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

    <function_decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>executeCoordCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>,
            <argument><expr><name>CommandException</name></expr></argument></throws>;</function_decl>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAChangeXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAChangeXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..653045178</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleSLAChangeXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">57</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>PreconditionException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordSLAChangeXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>

<class><specifier>public</specifier> class <name>BundleSLAChangeXCommand</name> <super_list><extends>extends <super><name>BundleSLAAlertsXCommand</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newSlaParams</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>BundleSLAChangeXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>childIds</name></decl></parameter>,
            <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newSlaParams</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>newSlaParams</name></name> <operator>=</operator> <name>newSlaParams</name></expr>;</expr_stmt>

    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>loadState</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>executeCoordCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>,
            <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAChangeXCommand</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>newSlaParams</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>updateJob</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>verifyPrecondition</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument>, <argument><expr><name>PreconditionException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>validateSLAChangeParam</name><argument_list>(<argument><expr><name>newSlaParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleStatusTransitXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleStatusTransitXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d6a319701</name><operator>..</operator><literal type="number">953e899b7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleStatusTransitXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>bundle</name><operator>/</operator><name><name>BundleStatusTransitXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BundleStatusTransitXCommand</name> extends <name>StatusTransitXCommand</name> <block>{
                 }</block></expr></expr_stmt>
 
                 <if_stmt><if>if <condition>(<expr><call><name><name>bAction</name><operator>.</operator><name>isPending</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name>bAction</name> <operator>+</operator> <literal type="string">" has pending flag set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><name>foundPending</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
                 </block_content>}</block></if></if_stmt>
             }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">548946f05</literal><operator>..</operator><literal type="number">39e6ac15c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>MaterializeTransitionXCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>PreconditionException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>bundle</name><operator>.</operator><name>BundleStatusUpdateXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name><operator>.</operator><name>UpdateEntry</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">486</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">487</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordMaterializeTransitionXCommand</name> extends <name>MaterializeTransitionXCo</name>
                 <call><name><name>actionBean</name><operator>.</operator><name>setTimeOut</name></name><argument_list>(<argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
                 <if_stmt><if>if <condition>(<expr><operator>!</operator><name>dryrun</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name>storeToDB</name><argument_list>(<argument><expr><name>actionBean</name></expr></argument>, <argument><expr><name>action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// Storing to table</comment>
                    <expr_stmt><expr><call><name>storeToDB</name><argument_list>(<argument><expr><name>actionBean</name></expr></argument>, <argument><expr><name>action</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// Storing to table</comment>
 
                 </block_content>}</block></if>
                 <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">524</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">525</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordMaterializeTransitionXCommand</name> extends <name>MaterializeTransitionXCo</name></expr></expr_stmt>
         </block_content>}</block></else></if_stmt>
     }
 
    private <function><type><name>void</name></type> <name>storeToDB</name><parameter_list>(<parameter><decl><type><name>CoordinatorActionBean</name></type> <name>actionBean</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actionXml</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>storeToDB</name><parameter_list>(<parameter><decl><type><name>CoordinatorActionBean</name></type> <name>actionBean</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actionXml</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"In storeToDB() coord action id = "</literal> <operator>+</operator> <call><name><name>actionBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">", size of actionXml = "</literal>
                 <operator>+</operator> <call><name><name>actionXml</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>actionBean</name><operator>.</operator><name>setActionXml</name></name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <expr_stmt><expr><call><name><name>insertList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>actionBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>writeActionSlaRegistration</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>, <argument><expr><name>actionBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>writeActionSlaRegistration</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>, <argument><expr><name>actionBean</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
    <function><type><specifier>private</specifier> <name>void</name></type> <name>writeActionSlaRegistration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>actionXml</name></decl></parameter>, <parameter><decl><type><name>CoordinatorActionBean</name></type> <name>actionBean</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>writeActionSlaRegistration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>actionXml</name></decl></parameter>, <parameter><decl><type><name>CoordinatorActionBean</name></type> <name>actionBean</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>Element</name></type> <name>eAction</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Element</name></type> <name>eSla</name> <init>= <expr><call><name><name>eAction</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"action"</literal></expr></argument>, <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getChild</name><argument_list>(<argument><expr><literal type="string">"info"</literal></expr></argument>, <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"sla"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SLAEventBean</name></type> <name>slaEvent</name> <init>= <expr><call><name><name>SLADbOperations</name><operator>.</operator><name>createSlaRegistrationEvent</name></name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SlaAppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coordJob</name>
                <operator>.</operator><name>getUser</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>coordJob</name><operator>.</operator><name>getGroup</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>LOG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><name>slaEvent</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>SLAEventBean</name></type> <name>slaEvent</name> <init>= <expr><call><name><name>SLADbOperations</name><operator>.</operator><name>createSlaRegistrationEvent</name></name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>,
                                 <argument><expr><name><name>SlaAppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coordJob</name><operator>.</operator><name>getUser</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>coordJob</name><operator>.</operator><name>getGroup</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>LOG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                         <if_stmt><if>if <condition>(<expr><name>slaEvent</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>insertList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>slaEvent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
         <comment type="line">// inserting into new table also</comment>
         <expr_stmt><expr><call><name><name>SLAOperations</name><operator>.</operator><name>createSlaRegistrationEvent</name></name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coordJob</name><operator>.</operator><name>getUser</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>coordJob</name><operator>.</operator><name>getAppName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>LOG</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr><operator>,</operator> <expr><call><name><name>coordJob</name><operator>.</operator><name>getUser</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><call><name><name>coordJob</name><operator>.</operator><name>getAppName</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>LOG</name></expr><operator>,</operator> <expr><literal type="boolean">false</literal></expr><operator>,</operator>
                <expr><call><name><name>CoordUtils</name><operator>.</operator><name>isSlaAlertDisabled</name></name><argument_list>(<argument><expr><name>actionBean</name></expr></argument>, <argument><expr><call><name><name>coordJob</name><operator>.</operator><name>getAppName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>private</specifier> <name>void</name></type> <name>updateJobMaterializeInfo</name><parameter_list>(<parameter><decl><type><name>CoordinatorJobBean</name></type> <name>job</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..11daa4199</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsDisableXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">71</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLAOperations</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XConfiguration</name></name>;</import>

<class><specifier>public</specifier> class <name>CoordSLAAlertsDisableXCommand</name> <super_list><extends>extends <super><name>CoordSLAAlertsXCommand</name></super></extends></super_list> <block>{

    <constructor><specifier>public</specifier> <name>CoordSLAAlertsDisableXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><literal type="string">"SLA.alerts.disable"</literal></expr></argument>, <argument><expr><literal type="string">"SLA.alerts.disable"</literal></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></constructor>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
    <annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>boolean</name></type> <name>executeSlaCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>, <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>getActionList</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// if getActionList() == null, means enable command is for all child job.</comment>
            <return>return <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>disableChildJobAlert</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
                <block>{<block_content>
                    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>
            }</block></class></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <return>return <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>disableAlert</name><argument_list>(<argument><expr><call><name>getActionList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></else></if_stmt>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>updateJob</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>XConfiguration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name>isJobRequest</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Updating job property "</literal> <operator>+</operator> <name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name> <operator>+</operator> <literal type="string">" = "</literal> <operator>+</operator> <name><name>SLAOperations</name><operator>.</operator><name>ALL_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>, <argument><expr><name><name>SLAOperations</name><operator>.</operator><name>ALL_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Updating job property "</literal> <operator>+</operator> <name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name> <operator>+</operator> <literal type="string">" = "</literal> <operator>+</operator> <name><name>SLAOperations</name><operator>.</operator><name>ALL_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>, <argument><expr><call><name>getActionDateListAsString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>

        <expr_stmt><expr><call><name>updateJobConf</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..936f13d22</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsEnableXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">65</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XConfiguration</name></name>;</import>

<class><specifier>public</specifier> class <name>CoordSLAAlertsEnableXCommand</name> <super_list><extends>extends <super><name>CoordSLAAlertsXCommand</name></super></extends></super_list> <block>{

    <constructor><specifier>public</specifier> <name>CoordSLAAlertsEnableXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><literal type="string">"SLA.alerts.enable"</literal></expr></argument>, <argument><expr><literal type="string">"SLA.alerts.enable"</literal></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
    <annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>boolean</name></type> <name>executeSlaCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>, <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>getActionList</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// if getActionList() == null, means enable command is for all child job.</comment>
            <return>return <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>enableChildJobAlert</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
                <block>{<block_content>
                    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block>
            }</block></class></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <return>return <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>enableAlert</name><argument_list>(<argument><expr><call><name>getActionList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>updateJob</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>XConfiguration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name>isJobRequest</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Updating job property "</literal> <operator>+</operator> <name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name> <operator>+</operator> <literal type="string">" = "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_ENABLE_ALERT</name></name></expr></argument>, <argument><expr><call><name>getActionDateListAsString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Updating job property "</literal> <operator>+</operator> <name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name> <operator>+</operator> <literal type="string">" = "</literal> <operator>+</operator> <call><name>getActionDateListAsString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>
        <expr_stmt><expr><call><name>updateJobConf</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..b8affd67a</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAAlertsXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">233</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>XException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>SLAAlertsXCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLAOperations</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XmlUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Element</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>JDOMException</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>CoordSLAAlertsXCommand</name> <super_list><extends>extends <super><name>SLAAlertsXCommand</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>scope</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>dates</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actionIds</name></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>loadState</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name>actionIds</name> <operator>=</operator> <call><name>getActionListForScopeAndDate</name><argument_list>(<argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    <constructor><specifier>public</specifier> <name>CoordSLAAlertsXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scope</name></name> <operator>=</operator> <name>actions</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dates</name></name> <operator>=</operator> <name>dates</name></expr>;</expr_stmt>

    </block_content>}</block></constructor>

    <comment type="block" format="javadoc">/**
     * Update job conf.
     *
     * @param newConf the new conf
     * @throws CommandException the command exception
     */</comment>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>updateJobConf</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>newConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>

        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>XConfiguration</name></type> <name>conf</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>conf</name> <operator>=</operator> <call><name>getJobConf</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>XConfiguration</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>newConf</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setConf</name></name><argument_list>(<argument><expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(
                    <argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>UPDATE_COORD_JOB_CONF</name></name></expr></argument>, <argument><expr><name>job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>

        <catch>catch <parameter_list>(<parameter><decl><type><name>XException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Update job sla.
     *
     * @param newParams the new params
     * @throws CommandException the command exception
     */</comment>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>updateJobSLA</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newParams</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>

        <try>try <block>{<block_content>

            <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                    <argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB_XML</name></name></expr></argument>, <argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>Element</name></type> <name>eAction</name></decl>;</decl_stmt>
            <try>try <block>{<block_content>
                <expr_stmt><expr><name>eAction</name> <operator>=</operator> <call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getJobXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block>
            <catch>catch <parameter_list>(<parameter><decl><type><name>JDOMException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1005</name></name></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></catch></try>
            <decl_stmt><decl><type><name>Element</name></type> <name>eSla</name> <init>= <expr><call><name><name>eAction</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"action"</literal></expr></argument>, <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getChild</name><argument_list>(<argument><expr><literal type="string">"info"</literal></expr></argument>,
                    <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"sla"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><name>newParams</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_NOMINAL_TIME</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name>updateSlaTagElement</name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><name><name>SLAOperations</name><operator>.</operator><name>NOMINAL_TIME</name></name></expr></argument>,
                            <argument><expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_NOMINAL_TIME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_START</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name>updateSlaTagElement</name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><name><name>SLAOperations</name><operator>.</operator><name>SHOULD_START</name></name></expr></argument>,
                            <argument><expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_START</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_END</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name>updateSlaTagElement</name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><name><name>SLAOperations</name><operator>.</operator><name>SHOULD_END</name></name></expr></argument>, <argument><expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_END</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_MAX_DURATION</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name>updateSlaTagElement</name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><name><name>SLAOperations</name><operator>.</operator><name>MAX_DURATION</name></name></expr></argument>,
                            <argument><expr><call><name><name>newParams</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>SLA_MAX_DURATION</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>actualXml</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><name>eAction</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setJobXml</name></name><argument_list>(<argument><expr><name>actualXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>UPDATE_COORD_JOB_XML</name></name></expr></argument>,
                    <argument><expr><name>job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>XException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>

    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Gets the action and date list as string.
     *
     * @return the action date list as string
     */</comment>
    <function><type><specifier>protected</specifier> <name>String</name></type> <name>getActionDateListAsString</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>StringBuffer</name></type> <name>bf</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>dates</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>bf</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>dates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>bf</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>bf</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><call><name><name>bf</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <return>return <expr><call><name><name>bf</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>

    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Gets the action list for scope and date.
     *
     * @param id the id
     * @param scope the scope
     * @param dates the dates
     * @return the action list for scope and date
     * @throws CommandException the command exception
     */</comment>
    <function><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getActionListForScopeAndDate</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actionIds</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>scope</name> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>dates</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>parsed</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>dates</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>actionSet</name> <init>= <expr><call><name><name>CoordUtils</name><operator>.</operator><name>getCoordActionsFromDates</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>CoordinatorActionBean</name></type> <name>action</name> <range>: <expr><name>actionSet</name></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name><name>actionIds</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt><expr><call><name><name>parsed</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>actionIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>scope</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>parsed</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>CoordUtils</name><operator>.</operator><name>getActionsIds</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><name>parsed</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Gets the action list.
     *
     * @return the action list
     */</comment>
    <function><type><specifier>protected</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getActionList</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>actionIds</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>isJobRequest</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>dates</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>


    <comment type="block" format="javadoc">/**
     * Update Sla tag element.
     *
     * @param elem the elem
     * @param tagName the tag name
     * @param value the value
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>updateSlaTagElement</name><parameter_list>(<parameter><decl><type><name>Element</name></type> <name>elem</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tagName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>elem</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>elem</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name>tagName</name></expr></argument>, <argument><expr><call><name><name>elem</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"sla"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>elem</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name>tagName</name></expr></argument>, <argument><expr><call><name><name>elem</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"sla"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setText</name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

    <function><type><specifier>protected</specifier> <name>XConfiguration</name></type> <name>getJobConf</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument>, <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                <argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB_CONF</name></name></expr></argument>, <argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>jobConf</name> <init>= <expr><call><name><name>job</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>XConfiguration</name></type> <name>conf</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1005</name></name></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
        <return>return <expr><name>conf</name></expr>;</return>
    </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAChangeXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAChangeXCommand</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..4d2438876</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordSLAChangeXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">100</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>coord</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>PreconditionException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordELEvaluator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name><operator>.</operator><name>CoordELFunctions</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name><operator>.</operator><name>CoordActionQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ServiceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ELEvaluator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XmlUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Element</name></name>;</import>

<class><specifier>public</specifier> class <name>CoordSLAChangeXCommand</name> <super_list><extends>extends <super><name>CoordSLAAlertsXCommand</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newParams</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>CoordSLAChangeXCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>actions</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dates</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newParams</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="string">"SLA.alerts.change"</literal></expr></argument>, <argument><expr><literal type="string">"SLA.alerts.change"</literal></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>newParams</name></name> <operator>=</operator> <name>newParams</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>boolean</name></type> <name>executeSlaCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument>, <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>idSlaDefinitionList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>coordinatorActionBeanList</name> <init>= <expr><call><name>getNotTerminatedActions</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><call><name>getJobConf</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>CoordinatorActionBean</name></type> <name>coordAction</name> <range>: <expr><name>coordinatorActionBeanList</name></expr></range></decl></init>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>slaDefinitionMap</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <for>for <control>(<init><decl><type><name>String</name></type> <name>key</name> <range>: <expr><call><name><name>slaDefinitionMap</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                    <decl_stmt><decl><type><name>Element</name></type> <name>eAction</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>coordAction</name><operator>.</operator><name>getActionXml</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>ELEvaluator</name></type> <name>evalSla</name> <init>= <expr><call><name><name>CoordELEvaluator</name><operator>.</operator><name>createSLAEvaluator</name></name><argument_list>(<argument><expr><name>eAction</name></expr></argument>, <argument><expr><name>coordAction</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>String</name></type> <name>updateValue</name> <init>= <expr><call><name><name>CoordELFunctions</name><operator>.</operator><name>evalAndWrap</name></name><argument_list>(<argument><expr><name>evalSla</name></expr></argument>, <argument><expr><call><name><name>slaDefinitionMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>slaDefinitionMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>updateValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt><expr><call><name><name>idSlaDefinitionList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>coordAction</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>slaDefinitionMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <return>return <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>changeDefinition</name><argument_list>(<argument><expr><name>idSlaDefinitionList</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1027</name></name></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>updateJob</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>isJobRequest</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>updateJobSLA</name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>getNotTerminatedActions</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>isJobRequest</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><call><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                    <argument><expr><name><name>CoordActionQuery</name><operator>.</operator><name>GET_ACTIVE_ACTIONS_JOBID_FOR_SLA_CHANGE</name></name></expr></argument>, <argument><expr><call><name>getJobId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if>
        <else>else <block>{<block_content>
            <return>return <expr><call><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                    <argument><expr><name><name>CoordActionQuery</name><operator>.</operator><name>GET_ACTIVE_ACTIONS_IDS_FOR_SLA_CHANGE</name></name></expr></argument>, <argument><expr><call><name>getActionList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></else></if_stmt>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>verifyPrecondition</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument>, <argument><expr><name>PreconditionException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>validateSLAChangeParam</name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4643d7326</literal><operator>..</operator><literal type="number">90050b3df</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>coord</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>ParseException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionGetJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetActionForNominalTimeJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ConfigurationService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>XLogService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLAOperations</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>CoordActionsInDateRange</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLog</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Element</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>

 <class><specifier>public</specifier> class <name>CoordUtils</name> <block>{
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HADOOP_USER</name> <init>= <expr><literal type="string">"user.name"</literal></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordUtils</name> <block>{
      <expr><operator>*</operator> @</expr><return>return <expr><name>the</name> <name>list</name> <name>of</name> <name>Coordinator</name> <name>actions</name></expr></return> <for>for the date range
      * @<throws>throws <argument><expr><name>CommandException</name> <name>thrown</name></expr></argument></throws> if failed to get coordinator actions by given date range
      */
    static List&lt;CoordinatorActionBean&gt; getCoordActionsFromDates<control>(<init><decl><type><name>String</name></type> <name>jobId</name></decl>, <decl><type ref="prev"/><name>String</name> <name>scope</name></decl>, <decl><type ref="prev"/><name>boolean</name> <name>active</name></decl></init>)</control><block type="pseudo"><block_content>
    <function><annotation>@<name>VisibleForTesting</name></annotation>
    <type><specifier>public</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>getCoordActionsFromDates</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>active</name></decl></parameter>)</parameter_list>
             <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>JPAService</name></type> <name>jpaService</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="string">"jobId"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">132</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordUtils</name> <block>{
                     <throw>throw <argument_list>new <argument><expr><call><name>CommandException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><call><name><name>s</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
                 }</block></expr></expr_stmt>
                 <catch>catch <parameter_list>(<parameter><decl><type><name>JPAExecutorException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                    <if_stmt><if>if <condition>(<expr><call><name><name>e</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>ErrorCode</name><operator>.</operator><name>E0605</name></name></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>XLog</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><name><name>CoordUtils</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>info</name><argument_list>(<argument><expr><literal type="string">"No action for nominal time:"</literal> <operator>+</operator> <name>s</name> <operator>+</operator> <literal type="string">". Skipping over"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if>
                    <else>else <block>{<block_content>
                        <throw>throw <expr><operator>new</operator> <call><name>CommandException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                    </block_content>}</block></else></if_stmt>
                 </block_content>}</block></catch>
 
             </block_content>}</block></function></block_content></block></for>
@@ <operator>-</operator><literal type="number">145</literal><operator>,</operator><literal type="number">16</literal> <operator>+</operator><literal type="number">158</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordUtils</name> <block>{
         <return>return <expr><name>coordActions</name></expr>;</return>
     }</block>
 
    <comment type="block" format="javadoc">/**
     * Get the list of actions for given id ranges
     *
     * @param jobId coordinator job id
     * @param scope a comma-separated list of action ranges. The action range is specified with two action numbers separated by '-'
     * @return the list of all Coordinator actions for action range
     * @throws CommandException thrown if failed to get coordinator actions by given id range
     */</comment>
     <specifier>public</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name> <call><name>getCoordActionsFromIds</name><argument_list>(<argument><expr><name>String</name> <name>jobId</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>CommandException</name> <block>{
        <expr><name>JPAService</name> <name>jpaService</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getActionsIds</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt><expr><call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="string">"jobId"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>ParamChecker</name><operator>.</operator><name>notEmpty</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"scope"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordUtils</name> <block>{
                 <expr><call><name><name>actions</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jobId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <name>s</name></expr></argument>)</argument_list></call></expr>;
             }</block></expr></expr_stmt>
         </block_content>}</block></function>
        <return>return <expr><name>actions</name></expr>;</return>
    }</block></class>

    <comment type="block" format="javadoc">/**
     * Get the list of actions for given id ranges
     *
     * @param jobId coordinator job id
     * @param scope a comma-separated list of action ranges. The action range is specified with two action numbers separated by '-'
     * @return the list of all Coordinator actions for action range
     * @throws CommandException thrown if failed to get coordinator actions by given id range
     */</comment>
     <function><annotation>@<name>VisibleForTesting</name></annotation>
     <type><specifier>public</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>getCoordActionsFromIds</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>JPAService</name></type> <name>jpaService</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actions</name> <init>= <expr><call><name>getActionsIds</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <comment type="line">// Retrieve the actions using the corresponding actionIds</comment>
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>coordActions</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>id</name> <range>: <expr><name>actions</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">107</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordUtils</name> <block>{
         <return>return <expr><name>coordActions</name></expr>;</return>
     }</block></expr></expr_stmt>
 
     <comment type="block" format="javadoc">/**
      * Check if sla alert is disabled for action.
      * @param actionBean
      * @param coordName
      * @param jobConf
      * @return
      * @throws ParseException
      */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>boolean</name></type> <name>isSlaAlertDisabled</name><parameter_list>(<parameter><decl><type><name>CoordinatorActionBean</name></type> <name>actionBean</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coordName</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>ParseException</name></expr></argument></throws> <block>{<block_content>

        <decl_stmt><decl><type><name>int</name></type> <name>disableSlaNotificationOlderThan</name> <init>= <expr><call><name><name>jobConf</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_OLDER_THAN</name></name></expr></argument>,
                <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_OLDER_THAN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>disableSlaNotificationOlderThan</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// Disable alert for catchup jobs</comment>
            <decl_stmt><decl><type><name>long</name></type> <name>timeDiffinHrs</name> <init>= <expr><call><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name><operator>.</operator><name>toHours</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call>
                    <operator>-</operator> <call><name><name>actionBean</name><operator>.</operator><name>getNominalTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>timeDiffinHrs</name> <operator>&gt;</operator> <call><name><name>jobConf</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_OLDER_THAN</name></name></expr></argument>,
                    <argument><expr><call><name><name>ConfigurationService</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_OLDER_THAN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>

        <decl_stmt><decl><type><name>boolean</name></type> <name>disableAlert</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_COORD</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>coords</name> <init>= <expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_COORD</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>coordsToDisableFor</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>coords</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>coordsToDisableFor</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>coordName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>coordsToDisableFor</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// Check if sla alert is disabled for that action</comment>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <operator>&amp;&amp;</operator> <call><name>getCoordActionSLAAlertStatus</name><argument_list>(<argument><expr><name>actionBean</name></expr></argument>, <argument><expr><name>coordName</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// Check if sla alert is enabled for that action</comment>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_ENABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <operator>&amp;&amp;</operator> <call><name>getCoordActionSLAAlertStatus</name><argument_list>(<argument><expr><name>actionBean</name></expr></argument>, <argument><expr><name>coordName</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_ENABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <return>return <expr><name>disableAlert</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Get coord action SLA alert status.
     * @param actionBean
     * @param coordName
     * @param jobConf
     * @param slaAlertType
     * @return
     * @throws ParseException
     */</comment>
    <function><type><specifier>private</specifier> <specifier>static</specifier> <name>boolean</name></type> <name>getCoordActionSLAAlertStatus</name><parameter_list>(<parameter><decl><type><name>CoordinatorActionBean</name></type> <name>actionBean</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coordName</name></decl></parameter>,
            <parameter><decl><type><name>Configuration</name></type> <name>jobConf</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>slaAlertType</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ParseException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>slaAlertList</name></decl>;</decl_stmt>

       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>slaAlertType</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>slaAlertList</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>slaAlertType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// check if ALL or date/action-num range</comment>
            <if_stmt><if>if <condition>(<expr><call><name><name>slaAlertList</name><operator>.</operator><name>equalsIgnoreCase</name></name><argument_list>(<argument><expr><name><name>SLAOperations</name><operator>.</operator><name>ALL_VALUE</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>slaAlertList</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>String</name></type> <name>value</name> <range>: <expr><name>values</name></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>value</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>value</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"::"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>datesInRange</name> <init>= <expr><call><name><name>value</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"::"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>Date</name></type> <name>start</name> <init>= <expr><call><name><name>DateUtils</name><operator>.</operator><name>parseDateOozieTZ</name></name><argument_list>(<argument><expr><name><name>datesInRange</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>Date</name></type> <name>end</name> <init>= <expr><call><name><name>DateUtils</name><operator>.</operator><name>parseDateOozieTZ</name></name><argument_list>(<argument><expr><name><name>datesInRange</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <comment type="line">// check if nominal time in this range</comment>
                    <if_stmt><if>if <condition>(<expr><call><name><name>actionBean</name><operator>.</operator><name>getNominalTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><name>start</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal>
                            <operator>||</operator> <call><name><name>actionBean</name><operator>.</operator><name>getNominalTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><name>end</name></expr></argument>)</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if>
                <if type="elseif">else if <condition>(<expr><call><name><name>value</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"-"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>actionsInRange</name> <init>= <expr><call><name><name>value</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"-"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>int</name></type> <name>start</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><name><name>actionsInRange</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>int</name></type> <name>end</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><name><name>actionsInRange</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <comment type="line">// check if action number in this range</comment>
                    <if_stmt><if>if <condition>(<expr><call><name><name>actionBean</name><operator>.</operator><name>getActionNumber</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <name>start</name> <operator>||</operator> <call><name><name>actionBean</name><operator>.</operator><name>getActionNumber</name></name><argument_list>()</argument_list></call> <operator>&lt;=</operator> <name>end</name></expr>)</condition> <block>{<block_content>
                        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if>
                <else>else <block>{<block_content>
                    <decl_stmt><decl><type><name>int</name></type> <name>actionNumber</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>value</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>actionBean</name><operator>.</operator><name>getActionNumber</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>actionNumber</name></expr>)</condition> <block>{<block_content>
                        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>

 </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e6ab09b87</name><operator>..</operator><name>c6a60a10f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Query</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>StringBlob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordActionQueryExecutor</name> extends
         <name>GET_COORD_ACTIVE_ACTIONS_COUNT_BY_JOBID</name></expr><operator>,</operator>
         <expr><name>GET_COORD_ACTIONS_BY_LAST_MODIFIED_TIME</name></expr><operator>,</operator>
         <expr><name>GET_COORD_ACTIONS_STATUS_UNIGNORED</name></expr><operator>,</operator>
        <expr><name>GET_COORD_ACTIONS_PENDING_COUNT</name>
        <name>GET_COORD_ACTIONS_PENDING_COUNT</name></expr><operator>,</operator>
        <expr><name>GET_ACTIVE_ACTIONS_IDS_FOR_SLA_CHANGE</name></expr><operator>,</operator>
        <expr><name>GET_ACTIVE_ACTIONS_JOBID_FOR_SLA_CHANGE</name></expr><operator>,</operator>
        <expr><name>GET_TERMINATED_ACTIONS_FOR_DATES</name></expr><operator>,</operator>
        <expr><name>GET_TERMINATED_ACTION_IDS_FOR_DATES</name></expr><operator>,</operator>
        <expr><name>GET_ACTIVE_ACTIONS_FOR_DATES</name></expr></expr_stmt>
     </block_content>}</block></function><empty_stmt>;</empty_stmt>
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>CoordActionQueryExecutor</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>CoordActionQueryExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordActionQueryExecutor</name> extends</expr></expr_stmt>
             <case>case <expr><name>GET_COORD_ACTIONS_PENDING_COUNT</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_ACTIVE_ACTIONS_IDS_FOR_SLA_CHANGE</name></expr>:</case>
            <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"ids"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
            <case>case <expr><name>GET_ACTIVE_ACTIONS_JOBID_FOR_SLA_CHANGE</name></expr>:</case>
            <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
            <case>case <expr><name>GET_TERMINATED_ACTIONS_FOR_DATES</name></expr>:</case>
            <case>case <expr><name>GET_TERMINATED_ACTION_IDS_FOR_DATES</name></expr>:</case>
            <case>case <expr><name>GET_ACTIVE_ACTIONS_FOR_DATES</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"startTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Date</name><operator>)</operator> <name><name>parameters</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"endTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Date</name><operator>)</operator> <name><name>parameters</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
 
             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot set parameters for "</literal>
@@ <operator>-</operator><literal type="number">247</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">266</literal></expr></argument>,<argument><expr><literal type="number">33</literal> @@ <specifier>public</specifier> class <name>CoordActionQueryExecutor</name> extends
                 <call><name><name>bean</name><operator>.</operator><name>setStatusStr</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                 <argument><expr><call><name><name>bean</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                 break;
            case <argument><expr><name>GET_ACTIVE_ACTIONS_IDS_FOR_SLA_CHANGE</name><operator>:</operator></expr></argument>
            <case>case <expr><name>GET_ACTIVE_ACTIONS_JOBID_FOR_SLA_CHANGE</name></expr>:</case>
                <argument><expr><name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr></argument>;
                <argument><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorActionBean</name><argument_list>()</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setNominalTime</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setCreatedTime</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setActionXmlBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                break;
            case <argument><expr><name>GET_TERMINATED_ACTIONS_FOR_DATES</name><operator>:</operator>
                <name>bean</name> <operator>=</operator> <operator>(</operator><name>CoordinatorActionBean</name><operator>)</operator> <name>ret</name></expr></argument>;
                break;
            case <argument><expr><name>GET_TERMINATED_ACTION_IDS_FOR_DATES</name><operator>:</operator>
                <name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorActionBean</name><argument_list>()</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name>ret</name></expr></argument>)</argument_list></call></expr></argument>;
                break;
            case <argument><expr><name>GET_ACTIVE_ACTIONS_FOR_DATES</name><operator>:</operator>
                <name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr></argument>;
                <argument><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorActionBean</name><argument_list>()</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setJobId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setStatusStr</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setNominalTime</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                <argument><expr><call><name><name>bean</name><operator>.</operator><name>setCreatedTime</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>;
                break;
 
             <argument><expr>default<operator>:</operator>
                 <throw>throw <argument_list>new <argument><expr><call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot construct action bean for "</literal>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">1862c7c68</literal><operator>..</operator><literal type="number">000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">69</literal> <operator>+</operator><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal> @@</expr></argument>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name></name>;</package></argument_list></call></expr></argument></argument_list></throw></expr></argument></argument_list></call></expr></throw>

<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Query</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Load coordinator action ids by date range.
 */</comment>
<class><specifier>public</specifier> class <name>CoordJobGetActionIdsForDateRangeJPAExecutor</name> <super_list><implements>implements <super><name><name>JPAExecutor</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>jobId</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Date</name></type> <name>startDate</name></decl>, <decl><type ref="prev"/><name>endDate</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>CoordJobGetActionIdsForDateRangeJPAExecutor</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>startDate</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>endDate</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ParamChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="string">"jobId"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>jobId</name></name> <operator>=</operator> <name>jobId</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>startDate</name></name> <operator>=</operator> <name>startDate</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>endDate</name></name> <operator>=</operator> <name>endDate</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="string">"CoordJobGetActionIdsForDateRangeJPAExecutor"</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>EntityManager</name></type> <name>em</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>Query</name></type> <name>q</name> <init>= <expr><call><name><name>em</name><operator>.</operator><name>createNamedQuery</name></name><argument_list>(<argument><expr><literal type="string">"GET_ACTION_IDS_FOR_DATES"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"startTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><call><name><name>startDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"endTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><call><name><name>endDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>coordActionIds</name><init>= <expr><call><name><name>q</name><operator>.</operator><name>getResultList</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name>coordActionIds</name></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsByDatesForKillJPAExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsByDatesForKillJPAExecutor</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>eb9559102</name><operator>..</operator><literal type="number">000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsByDatesForKillJPAExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">108</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Query</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Load non-terminal coordinator actions by dates.
 */</comment>
<class><specifier>public</specifier> class <name>CoordJobGetActionsByDatesForKillJPAExecutor</name> <super_list><implements>implements <super><name><name>JPAExecutor</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>jobId</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Date</name></type> <name>startDate</name></decl>, <decl><type ref="prev"/><name>endDate</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>CoordJobGetActionsByDatesForKillJPAExecutor</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>startDate</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>endDate</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ParamChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="string">"jobId"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>jobId</name></name> <operator>=</operator> <name>jobId</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>startDate</name></name> <operator>=</operator> <name>startDate</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>endDate</name></name> <operator>=</operator> <name>endDate</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="string">"CoordJobGetActionsByDatesForKillJPAExecutor"</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>EntityManager</name></type> <name>em</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>actionList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>Query</name></type> <name>q</name> <init>= <expr><call><name><name>em</name><operator>.</operator><name>createNamedQuery</name></name><argument_list>(<argument><expr><literal type="string">"GET_ACTIONS_BY_DATES_FOR_KILL"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"startTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><call><name><name>startDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"endTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><call><name><name>endDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Object</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>actions</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>getResultList</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <for>for <control>(<init><decl><type><name><name>Object</name><index>[]</index></name></type> <name>a</name> <range>: <expr><name>actions</name></expr></range></decl></init>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>CoordinatorActionBean</name></type> <name>aa</name> <init>= <expr><call><name>getBeanForRunningCoordAction</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>actionList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>aa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <return>return <expr><name>actionList</name></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>CoordinatorActionBean</name></type> <name>getBeanForRunningCoordAction</name><parameter_list>(<parameter><decl><type><name><name>Object</name><index>[]</index></name></type> <name>arr</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>CoordinatorActionBean</name></type> <name>action</name> <init>= <expr><operator>new</operator> <call><name>CoordinatorActionBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setJobId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setStatus</name></name><argument_list>(<argument><expr><call><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setNominalTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setCreatedTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><name>action</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>d1856ae45</name><operator>..</operator><literal type="number">000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">70</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Query</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ParamChecker</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Load coordinator actions by dates.
 */</comment>
<class><specifier>public</specifier> class <name>CoordJobGetActionsForDatesJPAExecutor</name> <super_list><implements>implements <super><name><name>JPAExecutor</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>jobId</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Date</name></type> <name>startDate</name></decl>, <decl><type ref="prev"/><name>endDate</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>CoordJobGetActionsForDatesJPAExecutor</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>startDate</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>endDate</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ParamChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="string">"jobId"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>jobId</name></name> <operator>=</operator> <name>jobId</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>startDate</name></name> <operator>=</operator> <name>startDate</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>endDate</name></name> <operator>=</operator> <name>endDate</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="string">"CoordJobGetActionsForDatesJPAExecutor"</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>EntityManager</name></type> <name>em</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>actions</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>Query</name></type> <name>q</name> <init>= <expr><call><name><name>em</name><operator>.</operator><name>createNamedQuery</name></name><argument_list>(<argument><expr><literal type="string">"GET_ACTIONS_FOR_DATES"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"startTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><call><name><name>startDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"endTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><call><name><name>endDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>actions</name> <operator>=</operator> <call><name><name>q</name><operator>.</operator><name>getResultList</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>actions</name></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4bccef45d</literal><operator>..</operator><literal type="number">15186863d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Query</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>StringBlob</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name>
         <name>UPDATE_COORD_JOB_STATUS_PENDING_TIME</name></expr><operator>,</operator>
         <expr><name>UPDATE_COORD_JOB_MATERIALIZE</name></expr><operator>,</operator>
         <expr><name>UPDATE_COORD_JOB_CHANGE</name></expr><operator>,</operator>
        <expr><name>UPDATE_COORD_JOB_CONF</name></expr><operator>,</operator>
        <expr><name>UPDATE_COORD_JOB_XML</name></expr><operator>,</operator>
         <expr><name>GET_COORD_JOB</name></expr><operator>,</operator>
         <expr><name>GET_COORD_JOB_USER_APPNAME</name></expr><operator>,</operator>
         <expr><name>GET_COORD_JOB_INPUT_CHECK</name></expr><operator>,</operator>
@@ <expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name>
         <name>GET_COORD_JOB_STATUS</name></expr><operator>,</operator>
         <expr><name>GET_COORD_JOB_STATUS_PARENTID</name></expr><operator>,</operator>
         <expr><name>GET_COORD_JOBS_CHANGED</name></expr><operator>,</operator>
        <expr><name>GET_COORD_JOBS_OLDER_FOR_MATERILZATION</name></expr><operator>,</operator>
        <expr><name>GET_COORD_JOBS_OLDER_FOR_MATERIALIZATION</name></expr><operator>,</operator>
         <expr><name>GET_COORD_FOR_ABANDONEDCHECK</name></expr><operator>,</operator>
        <expr><name>GET_COORD_IDS_FOR_STATUS_TRANSIT</name>
        <name>GET_COORD_IDS_FOR_STATUS_TRANSIT</name></expr><operator>,</operator>
        <expr><name>GET_COORD_JOBS_FOR_BUNDLE_BY_APPNAME_ID</name></expr><operator>,</operator>
        <expr><name>GET_COORD_JOBS_WITH_PARENT_ID</name></expr><operator>,</operator>
        <expr><name>GET_COORD_JOB_CONF</name></expr><operator>,</operator>
        <expr><name>GET_COORD_JOB_XML</name></expr></expr_stmt>
     </block_content>}</block></function><empty_stmt>;</empty_stmt>
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>CoordJobQueryExecutor</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>CoordJobQueryExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name>
                 <call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"lastModifiedTime"</literal></expr></argument>, <argument><expr><call><name><name>cjBean</name><operator>.</operator><name>getLastModifiedTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name><name>cjBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>UPDATE_COORD_JOB_CONF</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"conf"</literal></expr></argument>, <argument><expr><call><name><name>cjBean</name><operator>.</operator><name>getConfBlob</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name><name>cjBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>UPDATE_COORD_JOB_XML</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobXml"</literal></expr></argument>, <argument><expr><call><name><name>cjBean</name><operator>.</operator><name>getJobXmlBlob</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name><name>cjBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>

             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot set parameters for "</literal>
                         <operator>+</operator> <call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name></expr></expr_stmt>
             <case>case <expr><name>GET_COORD_JOB_SUSPEND_KILL</name></expr>:</case>
             <case>case <expr><name>GET_COORD_JOB_STATUS</name></expr>:</case>
             <case>case <expr><name>GET_COORD_JOB_STATUS_PARENTID</name></expr>:</case>
            <case>case <expr><name>GET_COORD_JOB_CONF</name></expr>:</case>
            <case>case <expr><name>GET_COORD_JOB_XML</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
             <case>case <expr><name>GET_COORD_JOBS_CHANGED</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"lastModifiedTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Date</name><operator>)</operator><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_COORD_JOBS_OLDER_FOR_MATERILZATION</name></expr>:</case>
            <case>case <expr><name>GET_COORD_JOBS_OLDER_FOR_MATERIALIZATION</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"matTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Date</name><operator>)</operator><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <decl_stmt><decl><type><name>int</name></type> <name>limit</name> <init>= <expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>parameters</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                 <if_stmt><if>if <condition>(<expr><name>limit</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name></expr></expr_stmt>
             <case>case <expr><name>GET_COORD_IDS_FOR_STATUS_TRANSIT</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"lastModifiedTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Date</name><operator>)</operator> <name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>

            <case>case <expr><name>GET_COORD_JOBS_FOR_BUNDLE_BY_APPNAME_ID</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"appName"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"bundleId"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_COORD_JOBS_WITH_PARENT_ID</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"parentId"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot set parameters for "</literal>
                         <operator>+</operator> <call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">357</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name></expr></expr_stmt>
             <case>case <expr><name>GET_COORD_JOBS_CHANGED</name></expr>:</case>
                 <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>(</operator><name>CoordinatorJobBean</name><operator>)</operator> <name>ret</name></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_COORD_JOBS_OLDER_FOR_MATERILZATION</name></expr>:</case>
            <case>case <expr><name>GET_COORD_JOBS_OLDER_FOR_MATERIALIZATION</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_COORD_JOBS_FOR_BUNDLE_BY_APPNAME_ID</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_COORD_JOBS_WITH_PARENT_ID</name></expr>:</case>
                 <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">347</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">377</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name>
                 <call><name><name>bean</name><operator>.</operator><name>setGroup</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setAppName</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>

             <case>case <expr><name>GET_COORD_IDS_FOR_STATUS_TRANSIT</name></expr>:</case>
                 <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_COORD_JOB_CONF</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setConfBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_COORD_JOB_XML</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setJobXmlBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
 
             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot construct job bean for "</literal>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobsToBeMaterializedJPAExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobsToBeMaterializedJPAExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5e018c724</literal><operator>..</operator><literal type="number">6d13ed178</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobsToBeMaterializedJPAExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobsToBeMaterializedJPAExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>CoordJobsToBeMaterializedJPAExecutor</name> implements <name>JPAExecutor</name><operator>&lt;</operator><name>List</name><operator>&lt;</operator><name>Co</name>
     <specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorJobBean</name></argument>&gt;</argument_list></name> <call><name>execute</name><argument_list>(<argument><expr><name>EntityManager</name> <name>em</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>JPAExecutorException</name> <block>{
         <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorJobBean</name></argument>&gt;</argument_list></name> <name>cjBeans</name></expr></block></expr></argument></throws></expr></argument>;</argument_list></call></expr></throw>
         <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>Query</name></type> <name>q</name> <init>= <expr><call><name><name>em</name><operator>.</operator><name>createNamedQuery</name></name><argument_list>(<argument><expr><literal type="string">"GET_COORD_JOBS_OLDER_FOR_MATERILZATION"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Query</name></type> <name>q</name> <init>= <expr><call><name><name>em</name><operator>.</operator><name>createNamedQuery</name></name><argument_list>(<argument><expr><literal type="string">"GET_COORD_JOBS_OLDER_FOR_MATERIALIZATION"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"matTime"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Timestamp</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>dateInput</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><name>limit</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setMaxResults</name></name><argument_list>(<argument><expr><name>limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e220c019f</name><operator>..</operator><name>bded63464</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLARegistrationQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLARegistrationB</name>
 
     <specifier>public</specifier> enum <name>SLARegQuery</name> <block>{
         <expr><name>UPDATE_SLA_REG_ALL</name></expr>,
        <expr><name>UPDATE_SLA_CONFIG</name></expr>,
        <expr><name>UPDATE_SLA_EXPECTED_VALUE</name></expr>,
         <expr><name>GET_SLA_REG_ALL</name></expr>,
        <expr><name>GET_SLA_REG_ON_RESTART</name>
        <name>GET_SLA_EXPECTED_VALUE_CONFIG</name></expr>,
        <expr><name>GET_SLA_REG_FOR_PARENT_ID</name></expr>,
        <expr><name>GET_SLA_REG_ON_RESTART</name></expr>,
        <expr><name>GET_SLA_CONFIGS</name></expr>
     }</block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>SLARegistrationQueryExecutor</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>SLARegistrationQueryExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLARegistrationQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLARegistrationB</name>
                 <call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"parentId"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getParentId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobData"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getJobData</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>UPDATE_SLA_EXPECTED_VALUE</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"expectedStartTime"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getExpectedStartTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"expectedEndTime"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getExpectedEndTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"expectedDuration"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getExpectedDuration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>UPDATE_SLA_CONFIG</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"slaConfig"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getSlaConfig</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>

             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot set parameters for "</literal>
                         <operator>+</operator> <call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLARegistrationQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLARegistrationB</name></expr></expr_stmt>
             <case>case <expr><name>GET_SLA_REG_ON_RESTART</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_SLA_CONFIGS</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"ids"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_SLA_EXPECTED_VALUE_CONFIG</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_SLA_REG_FOR_PARENT_ID</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"parentId"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>

             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot set parameters for "</literal>
                         <operator>+</operator> <call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLARegistrationQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLARegistrationB</name>
         <name>JPAService</name> <name>jpaService</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>EntityManager</name></type> <name>em</name> <init>= <expr><call><name><name>jpaService</name><operator>.</operator><name>getEntityManager</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Query</name></type> <name>query</name> <init>= <expr><call><name>getSelectQuery</name><argument_list>(<argument><expr><name>namedQuery</name></expr></argument>, <argument><expr><name>em</name></expr></argument>, <argument><expr><name>parameters</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
        <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>SLARegistrationBean</name></argument>&gt;</argument_list></name></type> <name>beanList</name> <init>= <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name>SLARegistrationBean</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>jpaService</name><operator>.</operator><name>executeGetList</name></name><argument_list>(<argument><expr><call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><name>query</name></expr></argument>, <argument><expr><name>em</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>retList</name> <init>= <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>jpaService</name><operator>.</operator><name>executeGetList</name></name><argument_list>(<argument><expr><call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><name>em</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>SLARegistrationBean</name></argument>&gt;</argument_list></name></type> <name>beanList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>SLARegistrationBean</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>retList</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>Object</name></type> <name>ret</name> <range>: <expr><name>retList</name></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name><name>beanList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>constructBean</name><argument_list>(<argument><expr><name>namedQuery</name></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>
         <return>return <expr><name>beanList</name></expr>;</return>
     </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLARegistrationQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLARegistrationB</name>
                 <call><name><name>bean</name><operator>.</operator><name>setSlaConfig</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setJobData</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_SLA_CONFIGS</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>SLARegistrationBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSlaConfig</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_SLA_EXPECTED_VALUE_CONFIG</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>SLARegistrationBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSlaConfig</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExpectedStart</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExpectedEnd</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExpectedDuration</name></name><argument_list>(<argument><expr><operator>(</operator><name>Long</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setNominalTime</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_SLA_REG_FOR_PARENT_ID</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>SLARegistrationBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSlaConfig</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot construct job bean for "</literal>
                         <operator>+</operator> <call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c3197b764</name><operator>..</operator><literal type="number">0057c89e7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLASummaryQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLASummaryBean</name></expr><operator>,</operator> <expr><name>SLASu</name>
         <name>UPDATE_SLA_SUMMARY_FOR_ACTUAL_TIMES</name></expr><operator>,</operator>
         <expr><name>UPDATE_SLA_SUMMARY_ALL</name></expr><operator>,</operator>
         <expr><name>UPDATE_SLA_SUMMARY_EVENTPROCESSED</name></expr><operator>,</operator>
        <expr><name>UPDATE_SLA_SUMMARY_FOR_EXPECTED_TIMES</name></expr><operator>,</operator>
        <expr><name>UPDATE_SLA_SUMMARY_LAST_MODIFIED_TIME</name></expr><operator>,</operator>
         <expr><name>GET_SLA_SUMMARY</name></expr><operator>,</operator>
        <expr><name>GET_SLA_SUMMARY_EVENTPROCESSED</name>
        <name>GET_SLA_SUMMARY_EVENTPROCESSED</name></expr><operator>,</operator>
        <expr><name>GET_SLA_SUMMARY_EVENTPROCESSED_LAST_MODIFIED</name></expr></expr_stmt>
     </block_content>}</block></try><empty_stmt>;</empty_stmt>
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>SLASummaryQueryExecutor</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>SLASummaryQueryExecutor</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLASummaryQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLASummaryBean</name></expr><operator>,</operator> <expr><name>SLASu</name>
                 <call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"actualStartTS"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getActualStartTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>UPDATE_SLA_SUMMARY_FOR_EXPECTED_TIMES</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"nominalTime"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getNominalTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"expectedStartTime"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getExpectedStartTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"expectedEndTime"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getExpectedEndTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"expectedDuration"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getExpectedDuration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"lastModTime"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getLastModifiedTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>

             <case>case <expr><name>UPDATE_SLA_SUMMARY_EVENTPROCESSED</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"eventProcessed"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getEventProcessed</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>UPDATE_SLA_SUMMARY_LAST_MODIFIED_TIME</name></expr>:</case>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"lastModifiedTS"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getLastModifiedTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"jobId"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>

             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot set parameters for "</literal>
                         <operator>+</operator> <call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLASummaryQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLASummaryBean</name></expr><operator>,</operator> <expr><name>SLASu</name></expr></expr_stmt>
         <switch>switch <condition>(<expr><name>namedQuery</name></expr>)</condition> <block>{<block_content>
             <case>case <expr><name>GET_SLA_SUMMARY</name></expr>:</case>
             <case>case <expr><name>GET_SLA_SUMMARY_EVENTPROCESSED</name></expr>:</case>
            <case>case <expr><name>GET_SLA_SUMMARY_EVENTPROCESSED_LAST_MODIFIED</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
         </block_content>}</block></switch>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">193</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLASummaryQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>SLASummaryBean</name></expr><operator>,</operator> <expr><name>SLASu</name>
                 <name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>SLASummaryBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Byte</name><operator>)</operator><name>ret</name><operator>)</operator><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_SLA_SUMMARY_EVENTPROCESSED_LAST_MODIFIED</name></expr>:</case>
                <decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>SLASummaryBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><operator>(</operator><name>Byte</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLastModifiedTime</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator><name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break>break;</break>

             <default>default:</default>
                 <throw>throw <expr><operator>new</operator> <call><name>JPAExecutorException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0603</name></name></expr></argument>, <argument><expr><literal type="string">"QueryExecutor cannot construct job bean for "</literal>
                         <operator>+</operator> <call><name><name>namedQuery</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CoordMaterializeTriggerService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CoordMaterializeTriggerService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fa16d1d2a</name><operator>..</operator><literal type="number">1cbd47492</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CoordMaterializeTriggerService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CoordMaterializeTriggerService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordMaterializeTriggerService</name> implements <name>Service</name> <block>{
                 <throws>throws <argument><expr><name>JPAExecutorException</name> <block>{</block></expr></argument></throws>
             <try>try <block>{<block_content>
                 <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorJobBean</name></argument>&gt;</argument_list></name></type> <name>materializeJobs</name> <init>= <expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                        <argument><expr><name><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOBS_OLDER_FOR_MATERILZATION</name></name></expr></argument>, <argument><expr><name>currDate</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><name><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOBS_OLDER_FOR_MATERIALIZATION</name></name></expr><operator>,</operator> <expr><name>currDate</name></expr><operator>,</operator> <expr><name>limit</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
                 <call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"CoordMaterializeTriggerService - Curr Date= "</literal> <operator>+</operator> <call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>currDate</name></expr></argument>)</argument_list></call>
                         <operator>+</operator> <literal type="string">", Num jobs to materialize = "</literal> <operator>+</operator> <call><name><name>materializeJobs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                 <for>for <control>(<init><decl><type><name>CoordinatorJobBean</name></type> <name>coordJob</name> <range>: <expr><name>materializeJobs</name></expr></range></decl></init>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>EventHandlerService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>EventHandlerService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7c0d3bef4</literal><operator>..</operator><literal type="number">22c6fb096</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>EventHandlerService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>EventHandlerService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">32</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">32</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name></name>;</package>
 
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>BundleJobEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>CoordinatorActionEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>CoordinatorJobEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>Event</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>Event</name><operator>.</operator><name>MessageType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>JobEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>BundleJobEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>CoordinatorActionEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>CoordinatorJobEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>EventQueue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>MemoryEventQueue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>WorkflowActionEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>WorkflowJobEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>listener</name><operator>.</operator><name>JobEventListener</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>listener</name><operator>.</operator><name>SLAEventListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>LogUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLog</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Service class that handles the events system - creating events queue,
  * managing configured properties and managing and invoking various event
diff --git a/core/src/main/java/org/apache/oozie/servlet/BaseJobServlet.java b/core/src/main/java/org/apache/oozie/servlet/BaseJobServlet.java
index 569078747..a581f8b1f 100644
-- a/core/src/main/java/org/apache/oozie/servlet/BaseJobServlet.java
++ b/core/src/main/java/org/apache/oozie/servlet/BaseJobServlet.java
@@ -177,6 +177,27 @@ public abstract class BaseJobServlet extends JsonRestServlet {
             startCron();
             sendJsonResponse(response, HttpServletResponse.SC_OK, json);
         }
        else if (action.equals(RestConstants.SLA_ENABLE_ALERT)) {
            validateContentType(request, RestConstants.XML_CONTENT_TYPE);
            stopCron();
            slaEnableAlert(request, response);
            startCron();
            response.setStatus(HttpServletResponse.SC_OK);
        }
        else if (action.equals(RestConstants.SLA_DISABLE_ALERT)) {
            validateContentType(request, RestConstants.XML_CONTENT_TYPE);
            stopCron();
            slaDisableAlert(request, response);
            startCron();
            response.setStatus(HttpServletResponse.SC_OK);
        }
        else if (action.equals(RestConstants.SLA_CHANGE)) {
            validateContentType(request, RestConstants.XML_CONTENT_TYPE);
            stopCron();
            slaChange(request, response);
            startCron();
            response.setStatus(HttpServletResponse.SC_OK);
        }
         else {
             throw new XServletException(HttpServletResponse.SC_BAD_REQUEST, ErrorCode.E0303,
                     RestConstants.ACTION_PARAM, action);
@@ -498,4 +519,38 @@ public abstract class BaseJobServlet extends JsonRestServlet {
      */</comment>
     <decl_stmt><decl><type><specifier>abstract</specifier> <name>String</name></type> <name>getJobStatus</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list>
             <throws>throws <argument><expr><name>XServletException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Abstract method to enable SLA alert.
     *
     * @param request the request
     * @param response the response
     * @throws XServletException the x servlet exception
     * @throws IOException Signals that an I/O exception has occurred.
     */</comment>
    <decl_stmt><decl><type><specifier>abstract</specifier> <name>void</name></type> <name>slaEnableAlert</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
            <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Abstract method to disable SLA alert.
     *
     * @param request the request
     * @param response the response
     * @throws XServletException the x servlet exception
     * @throws IOException Signals that an I/O exception has occurred.
     */</comment>
    <decl_stmt><decl><type><specifier>abstract</specifier> <name>void</name></type> <name>slaDisableAlert</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
            <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Abstract method to change SLA definition.
     *
     * @param request the request
     * @param response the response
     * @throws XServletException the x servlet exception
     * @throws IOException Signals that an I/O exception has occurred.
     */</comment>
    <decl_stmt><decl><type><specifier>abstract</specifier> <name>void</name></type> <name>slaChange</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
            <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>

 </block_content>}</block></for>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SLAServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SLAServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2578e41f2</literal><operator>..</operator><name>f897652cd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SLAServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SLAServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>StringTokenizer</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServletRequest</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServletResponse</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>SLAEventBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V0JobServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V0JobServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3e186f98d</literal><operator>..</operator><literal type="number">3cb916883</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V0JobServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V0JobServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>V0JobServlet</name> extends <name>BaseJobServlet</name> <block>{
     @<expr><name>Override</name>
     <specifier>protected</specifier> <name>String</name> <call><name>getJobStatus</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
             <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
        <throw>throw <argument_list>new <argument><expr><call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v1"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;
        <throw>throw <argument_list>new <argument><expr><call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v0"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></block></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><name>void</name></type> <name>slaEnableAlert</name><parameter_list>(<parameter><decl><type><name>HttpServletRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>HttpServletResponse</name></type> <name>response</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v0"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><name>void</name></type> <name>slaDisableAlert</name><parameter_list>(<parameter><decl><type><name>HttpServletRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>HttpServletResponse</name></type> <name>response</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
            <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v0"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><name>void</name></type> <name>slaChange</name><parameter_list>(<parameter><decl><type><name>HttpServletRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>HttpServletResponse</name></type> <name>response</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v0"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V1JobServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V1JobServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">64b97c26b</literal><operator>..</operator><name>d4564c671</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V1JobServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V1JobServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1103</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">1103</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>V1JobServlet</name> extends <name>BaseJobServlet</name> <block>{
             <expr><name>IOException</name> <block>{
         <throw>throw <argument_list>new <argument><expr><call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v1"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
     }</block>

    @<name>Override</name>
    <name>void</name> <call><name>slaEnableAlert</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>XServletException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
        <throw>throw <argument_list>new <argument><expr><call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v1"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;
    }</block>

    @<name>Override</name>
    <name>void</name> <call><name>slaDisableAlert</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
            <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
        <throw>throw <argument_list>new <argument><expr><call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v1"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><name>void</name></type> <name>slaChange</name><parameter_list>(<parameter><decl><type><name>HttpServletRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>HttpServletResponse</name></type> <name>response</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0302</name></name></expr></argument>, <argument><expr><literal type="string">"Not supported in v1"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V2JobServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V2JobServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5238426db</literal><operator>..</operator><literal type="number">7100c98ef</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V2JobServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>V2JobServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">53</literal> @@ <specifier>public</specifier> <name>class</name> <name>V2JobServlet</name> extends <name>V1JobServlet</name> <block>{
 
     }</block>
 
    @<name>Override</name>
    <specifier>protected</specifier> <name>void</name> <call><name>slaEnableAlert</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
            <argument><expr><name>IOException</name> <block>{
        <expr><name>String</name> <name>jobId</name> <operator>=</operator> <call><name>getResourceName</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actions</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_ACTION_LIST</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>dates</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_DATE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>childIds</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>COORDINATORS_PARAM</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>getBaseEngine</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><call><name>getUser</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>enableSLAAlert</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>BaseEngineException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>

    }

    @<function><type><name>Override</name>
    <specifier>protected</specifier> <name>void</name></type> <name>slaDisableAlert</name><parameter_list>(<parameter><decl><type><name>HttpServletRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>HttpServletResponse</name></type> <name>response</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>,
            <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>jobId</name> <init>= <expr><call><name>getResourceName</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actions</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_ACTION_LIST</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>dates</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_DATE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>childIds</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>COORDINATORS_PARAM</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>getBaseEngine</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><call><name>getUser</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>disableSLAAlert</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>childIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>BaseEngineException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>slaChange</name><parameter_list>(<parameter><decl><type><name>HttpServletRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>HttpServletResponse</name></type> <name>response</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>XServletException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>jobId</name> <init>= <expr><call><name>getResourceName</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actions</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_ACTION_LIST</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>dates</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_COORD_SCOPE_DATE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>newParams</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>JOB_CHANGE_VALUE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>coords</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name><name>RestConstants</name><operator>.</operator><name>COORDINATORS_PARAM</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>getBaseEngine</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><call><name>getUser</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>changeSLA</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><name>coords</name></expr></argument>, <argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>BaseEngineException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>XServletException</name><argument_list>(<argument><expr><name><name>HttpServletResponse</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

     <comment type="block" format="javadoc">/**
      * Ignore a coordinator job/action
      *
@@ -199,21 +246,18 @@ public class V2JobServlet extends V1JobServlet {
         String status;
         String jobId = getResourceName(request);
         try {
            if (jobId.endsWith("-B")) {
                BundleEngine engine = Services.get().get(BundleEngineService.class).getBundleEngine(getUser(request));
                status = engine.getJobStatus(jobId);
            } else if (jobId.endsWith("-W")) {
                DagEngine engine = Services.get().get(DagEngineService.class).getDagEngine(getUser(request));
                status = engine.getJobStatus(jobId);
            } else {
                CoordinatorEngine engine =
                        Services.get().get(CoordinatorEngineService.class).getCoordinatorEngine(getUser(request));
                if (jobId.contains("-C@")) {
                    status = engine.getActionStatus(jobId);
                } else {
                    status = engine.getJobStatus(jobId);
                }
            if (jobId.endsWith("-B") || jobId.endsWith("-W")) {
                status = getBaseEngine(jobId, getUser(request)).getJobStatus(jobId);
            }
            else if (jobId.contains("C@")) {
                CoordinatorEngine engine = Services.get().get(CoordinatorEngineService.class)
                        .getCoordinatorEngine(getUser(request));
                status = engine.getActionStatus(jobId);
             }
            else {
                status = getBaseEngine(jobId, getUser(request)).getJobStatus(jobId);
            }

         } catch (BaseEngineException ex) {
             throw new XServletException(HttpServletResponse.SC_BAD_REQUEST, ex);
         }
@@ -251,7 +295,7 @@ public class V2JobServlet extends V1JobServlet {
         else if (jobId.endsWith("-B")) {
             return Services.get().get(BundleEngineService.class).getBundleEngine(user);
         }
        else if (jobId.endsWith("-C")) {
        else if (jobId.contains("-C")) {
             return Services.get().get(CoordinatorEngineService.class).getCoordinatorEngine(user);
         }
         else {
diff --git a/core/src/main/java/org/apache/oozie/servlet/V2SLAServlet.java b/core/src/main/java/org/apache/oozie/servlet/V2SLAServlet.java
index a0fe1b638..57170e1ef 100644
-- a/core/src/main/java/org/apache/oozie/servlet/V2SLAServlet.java
++ b/core/src/main/java/org/apache/oozie/servlet/V2SLAServlet.java
@@ -22,7 +22,9 @@ import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 import java.text.ParseException;
import java.util.ArrayList;
 import java.util.Arrays;
import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
@@ -31,15 +33,19 @@ import java.util.Set;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;

 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.XException;
 import org.apache.oozie.client.OozieClient;
 import org.apache.oozie.client.rest.RestConstants;
 import org.apache.oozie.command.CommandException;
import org.apache.oozie.executor.jpa.SLARegistrationQueryExecutor;
import org.apache.oozie.executor.jpa.SLARegistrationQueryExecutor.SLARegQuery;
 import org.apache.oozie.executor.jpa.sla.SLASummaryGetForFilterJPAExecutor;
 import org.apache.oozie.executor.jpa.sla.SLASummaryGetForFilterJPAExecutor.SLASummaryFilter;
 import org.apache.oozie.service.JPAService;
 import org.apache.oozie.service.Services;
import org.apache.oozie.sla.SLARegistrationBean;
 import org.apache.oozie.sla.SLASummaryBean;
 import org.apache.oozie.util.DateUtils;
 import org.apache.oozie.util.XLog;
@@ -146,7 +152,20 @@ public class V2SLAServlet extends SLAServlet {
             else {
                 XLog.getLog(getClass()).error(ErrorCode.E0610);
             }
            return SLASummaryBean.toJSONObject(slaSummaryList, timeZoneId);

            List&lt;String&gt; jobIds = new ArrayList&lt;String&gt;();
            for(SLASummaryBean summaryBean:slaSummaryList){
                jobIds.add(summaryBean.getId());
            }
            List&lt;SLARegistrationBean&gt; SLARegistrationList = SLARegistrationQueryExecutor.getInstance().getList(
                    SLARegQuery.GET_SLA_CONFIGS, jobIds);

            Map&lt;String, Map&lt;String, String&gt;&gt; jobIdSLAConfigMap = new HashMap&lt;String, Map&lt;String, String&gt;&gt;();
            for(SLARegistrationBean registrationBean:SLARegistrationList){
                jobIdSLAConfigMap.put(registrationBean.getId(), registrationBean.getSLAConfigMap());
            }

            return SLASummaryBean.toJSONObject(slaSummaryList, jobIdSLAConfigMap, timeZoneId);
         }
         catch (XException ex) {
             throw new CommandException(ex);
diff --git a/core/src/main/java/org/apache/oozie/sla/SLACalcStatus.java b/core/src/main/java/org/apache/oozie/sla/SLACalcStatus.java
index 189d5ea1f..0d7123a71 100644
-- a/core/src/main/java/org/apache/oozie/sla/SLACalcStatus.java
++ b/core/src/main/java/org/apache/oozie/sla/SLACalcStatus.java
@@ -20,8 +20,10 @@
 package org.apache.oozie.sla;
 
 import java.util.Date;
import java.util.Map;
 
 import org.apache.oozie.AppType;
import org.apache.oozie.client.OozieClient;
 import org.apache.oozie.client.event.SLAEvent;
 import org.apache.oozie.lock.LockToken;
 import org.apache.oozie.service.JobsConcurrencyService;
@@ -65,6 +67,10 @@ public class SLACalcStatus extends SLAEvent {
         reg.setAlertContact(regBean.getAlertContact());
         reg.setAlertEvents(regBean.getAlertEvents());
         reg.setJobData(regBean.getJobData());
        if (regBean.getSLAConfigMap().containsKey(OozieClient.SLA_DISABLE_ALERT)) {
            reg.addToSLAConfigMap(OozieClient.SLA_DISABLE_ALERT,
                    regBean.getSLAConfigMap().get(OozieClient.SLA_DISABLE_ALERT));
        }
         reg.setId(summary.getId());
         reg.setAppType(summary.getAppType());
         reg.setUser(summary.getUser());
@@ -267,10 +273,14 @@ public class SLACalcStatus extends SLAEvent {
     }
 
     @Override
    public String getSlaConfig() {
    public String getSLAConfig() {
         return regBean.getSlaConfig();
     }
 
    public Map&lt;String, String&gt; getSLAConfigMap() {
        return regBean.getSLAConfigMap();
    }

     @Override
     public MessageType getMsgType() {
         return regBean.getMsgType();
diff --git a/core/src/main/java/org/apache/oozie/sla/SLACalculator.java b/core/src/main/java/org/apache/oozie/sla/SLACalculator.java
index 20f93b5c5..f2383215f 100644
-- a/core/src/main/java/org/apache/oozie/sla/SLACalculator.java
++ b/core/src/main/java/org/apache/oozie/sla/SLACalculator.java
@@ -20,11 +20,14 @@ package org.apache.oozie.sla;
 
 import java.util.Date;
 import java.util.Iterator;
import java.util.List;
import java.util.Map;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.client.event.JobEvent.EventStatus;
 import org.apache.oozie.executor.jpa.JPAExecutorException;
 import org.apache.oozie.service.ServiceException;
import org.apache.oozie.util.Pair;
 
 public interface SLACalculator {
 
@@ -51,4 +54,55 @@ public interface SLACalculator {
 
     SLACalcStatus get(String jobId) throws JPAExecutorException;
 
    /**
     * Enable jobs sla alert.
     *
     * @param jobId the job ids
     * @return true, if successful
     * @throws JPAExecutorException the JPA executor exception
     * @throws ServiceException the service exception
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>enableAlert</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>jobId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument>, <argument><expr><name>ServiceException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Enable sla alert for child jobs.
     * @param jobId the parent job ids
     * @return
     * @throws JPAExecutorException
     * @throws ServiceException
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>enableChildJobAlert</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>parentJobIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument>, <argument><expr><name>ServiceException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Disable jobs Sla alert.
     *
     * @param jobId the job ids
     * @return true, if successful
     * @throws JPAExecutorException the JPA executor exception
     * @throws ServiceException the service exception
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>disableAlert</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>jobId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument>, <argument><expr><name>ServiceException</name></expr></argument></throws>;</function_decl>


    <comment type="block" format="javadoc">/**
     * Disable Sla alert for child jobs.
     * @param jobId the parent job ids
     * @return
     * @throws JPAExecutorException
     * @throws ServiceException
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>disableChildJobAlert</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>parentJobIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument>, <argument><expr><name>ServiceException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Change jobs Sla definitions
     * It takes list of pairs of jobid and key/value pairs of el evaluated sla definition.
     * Support definition are sla-should-start, sla-should-end, sla-nominal-time and sla-max-duration.
     *
     * @param jobIdsSLAPair the job ids sla pair
     * @return true, if successful
     * @throws JPAExecutorException the JPA executor exception
     * @throws ServiceException the service exception
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>changeDefinition</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>jobIdsSLAPair</name></decl></parameter> )</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument>,
            <argument><expr><name>ServiceException</name></expr></argument></throws>;</function_decl>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLACalculatorMemory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLACalculatorMemory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fdce6b53c</name><operator>..</operator><literal type="number">42313fd3a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLACalculatorMemory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLACalculatorMemory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowJobBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>XException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowJob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>JobEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name><operator>.</operator><name>EventStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name><operator>.</operator><name>SLAStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name><operator>.</operator><name>UpdateEntry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionGetForSLAJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name><operator>.</operator><name>CoordActionQuery</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLARegistrationQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowJobQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>SLARegQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLASummaryQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLASummaryQueryExecutor</name><operator>.</operator><name>SLASummaryQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionGetForSLAJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowJobGetForSLAJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>WorkflowActionQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowJobGetForSLAJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowJobQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowJobQueryExecutor</name><operator>.</operator><name>WorkflowJobQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLASummaryGetRecordsOnRestartJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLASummaryQueryExecutor</name><operator>.</operator><name>SLASummaryQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name><operator>.</operator><name>UpdateEntry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>lock</name><operator>.</operator><name>LockToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ConfigurationService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>EventHandlerService</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>LogUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLog</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>
 
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">453</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">456</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLACalculatorMemory</name> implements <name>SLACalculator</name> <block>{
         <return>return <expr><name>memObj</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>private</specifier> <name>SLACalcStatus</name></type> <name>getSLACalcStatus</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>SLACalcStatus</name></type> <name>memObj</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>memObj</name> <operator>=</operator> <call><name><name>slaMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>memObj</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>memObj</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalcStatus</name><argument_list>(<argument><expr><call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>GET_SLA_SUMMARY</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><call><name><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLARegQuery</name><operator>.</operator><name>GET_SLA_REG_ON_RESTART</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><name>memObj</name></expr>;</return>
    </block_content>}</block></function>


     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>iterator</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><call><name><name>slaMap</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">477</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">491</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLACalculatorMemory</name> implements <name>SLACalculator</name> <block>{
         <synchronized>synchronized <init>(<expr><name>slaCalc</name></expr>)</init> <block>{<block_content>
             <decl_stmt><decl><type><name>boolean</name></type> <name>change</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
             <comment type="line">// get eventProcessed on DB for validation in HA</comment>
            <decl_stmt><decl><type><name>Object</name></type> <name>eventProcObj</name> <init>= <expr><operator>(</operator><operator>(</operator><name>SLASummaryQueryExecutor</name><operator>)</operator> <call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>getSingleValue</name><argument_list>(
                    <argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>GET_SLA_SUMMARY_EVENTPROCESSED</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>byte</name></type> <name>eventProc</name> <init>= <expr><operator>(</operator><operator>(</operator><name>Byte</name><operator>)</operator> <name>eventProcObj</name><operator>)</operator><operator>.</operator><call><name>byteValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>SLASummaryBean</name></type> <name>summaryBean</name> <init>= <expr><operator>(</operator><operator>(</operator><name>SLASummaryQueryExecutor</name><operator>)</operator> <call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>get</name><argument_list>(
                    <argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>GET_SLA_SUMMARY_EVENTPROCESSED_LAST_MODIFIED</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>byte</name></type> <name>eventProc</name> <init>= <expr><call><name><name>summaryBean</name><operator>.</operator><name>getEventProcessed</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><name>eventProc</name> <operator>&gt;=</operator> <literal type="number">7</literal></expr>)</condition> <block>{<block_content>
                 <if_stmt><if>if <condition>(<expr><name>eventProc</name> <operator>==</operator> <literal type="number">7</literal></expr>)</condition> <block>{<block_content>
                     <expr_stmt><expr><call><name><name>historySet</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">488</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">502</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLACalculatorMemory</name> implements <name>SLACalculator</name> <block>{
                 <expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Removed Job [{0}] from map as SLA processed"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></synchronized>
             }</block></expr></expr_stmt>
             <if_stmt><else>else <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>slaCalc</name><operator>.</operator><name>getLastModifiedTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>summaryBean</name><operator>.</operator><name>getLastModifiedTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <comment type="line">//Update last modified time.</comment>
                    <expr_stmt><expr><call><name><name>slaCalc</name><operator>.</operator><name>setLastModifiedTime</name></name><argument_list>(<argument><expr><call><name><name>summaryBean</name><operator>.</operator><name>getLastModifiedTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name>reloadExpectedTimeAndConfig</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Last modified time has changed for job "</literal> <operator>+</operator> <name>jobId</name> <operator>+</operator> <literal type="string">" reloading config from DB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                 <expr_stmt><expr><call><name><name>slaCalc</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><name>eventProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <decl_stmt><decl><type><name>SLARegistrationBean</name></type> <name>reg</name> <init>= <expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLARegistrationBean</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <comment type="line">// calculation w.r.t current time and status</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">499</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">519</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLACalculatorMemory</name> implements <name>SLACalculator</name> <block>{
                             <if_stmt><if>if <condition>(<expr><name>eventProc</name> <operator>!=</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator> <operator>(</operator><name>eventProc</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                                 <comment type="line">// Some DB exception</comment>
                                 <expr_stmt><expr><call><name><name>slaCalc</name><operator>.</operator><name>setEventStatus</name></name><argument_list>(<argument><expr><name><name>EventStatus</name><operator>.</operator><name>START_MISS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name>eventHandler</name><operator>.</operator><name>queueEvent</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SLACalcStatus</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <if_stmt><if>if <condition>(<expr><call><name>shouldAlert</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                    <expr_stmt><expr><call><name><name>eventHandler</name><operator>.</operator><name>queueEvent</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SLACalcStatus</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                </block_content>}</block></if></if_stmt>
                                 <expr_stmt><expr><name>eventProc</name><operator>++</operator></expr>;</expr_stmt>
                             </block_content>}</block></if></if_stmt>
                             <name>change</name> <operator>=</operator> <literal type="boolean">true</literal></block></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">525</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">547</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLACalculatorMemory</name> implements <name>SLACalculator</name> <block>{
                             <if_stmt><if>if <condition>(<expr><name>eventProc</name> <operator>!=</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>eventProc</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                                 <comment type="line">// Some DB exception</comment>
                                 <expr_stmt><expr><call><name><name>slaCalc</name><operator>.</operator><name>setEventStatus</name></name><argument_list>(<argument><expr><name><name>EventStatus</name><operator>.</operator><name>DURATION_MISS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name>eventHandler</name><operator>.</operator><name>queueEvent</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SLACalcStatus</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <if_stmt><if>if <condition>(<expr><call><name>shouldAlert</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                    <expr_stmt><expr><call><name><name>eventHandler</name><operator>.</operator><name>queueEvent</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SLACalcStatus</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                </block_content>}</block></if></if_stmt>
                                 <expr_stmt><expr><name>eventProc</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
                             </block_content>}</block></if></if_stmt>
                             <name>change</name> <operator>=</operator> <literal type="boolean">true</literal></block></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">552</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">576</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLACalculatorMemory</name> implements <name>SLACalculator</name> <block>{
                                 <comment type="line">// Should not be &gt; 8. But to handle any corner cases</comment>
                                 <expr><call><name><name>slaCalc</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;
                                 <call><name><name>slaMap</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Removed Job [{0}] from map after Event-processed=8"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                             </block_content>}</block></else></if_stmt>
                             <if_stmt><else>else <block>{<block_content>
                                 <expr_stmt><expr><call><name><name>slaCalc</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><name>eventProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                             </block_content>}</block></else></if_stmt>
                            <decl_stmt><decl><type><name>SLASummaryBean</name></type> <name>slaSummaryBean</name> <init>= <expr><operator>new</operator> <call><name>SLASummaryBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><name>eventProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setSLAStatus</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setEventStatus</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getEventStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setActualEnd</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getActualEnd</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setActualStart</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getActualStart</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setActualDuration</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getActualDuration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setJobStatus</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getJobStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setLastModifiedTime</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(
                                    <argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_FOR_STATUS_ACTUAL_TIMES</name></name></expr></argument>, <argument><expr><name>slaSummaryBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name>writetoDB</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>, <argument><expr><name>eventProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                             <if_stmt><if>if <condition>(<expr><name>eventProc</name> <operator>==</operator> <literal type="number">7</literal></expr>)</condition> <block>{<block_content>
                                 <expr_stmt><expr><call><name><name>historySet</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                 <expr_stmt><expr><call><name><name>slaMap</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Removed Job [{0}] from map after End-processed"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Removed Job [{0}] from map after Event-processed=7"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                             </block_content>}</block></if></if_stmt>
                         </block_content>}</block></function>
                     }
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">586</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">600</literal></expr><operator>,</operator><expr><literal type="number">48</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLACalculatorMemory</name> implements <name>SLACalculator</name> <block>{
         }</block></expr></expr_stmt>
     }
 
    private <function><type><name>void</name></type> <name>writetoDB</name><parameter_list>(<parameter><decl><type><name>SLACalcStatus</name></type> <name>slaCalc</name></decl></parameter>, <parameter><decl><type><name>byte</name></type> <name>eventProc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>SLASummaryBean</name></type> <name>slaSummaryBean</name> <init>= <expr><operator>new</operator> <call><name>SLASummaryBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><name>eventProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setSLAStatus</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setEventStatus</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getEventStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setActualEnd</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getActualEnd</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setActualStart</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getActualStart</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setActualDuration</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getActualDuration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setJobStatus</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getJobStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>setLastModifiedTime</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_FOR_STATUS_ACTUAL_TIMES</name></name></expr></argument>,
                <argument><expr><name>slaSummaryBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Stored SLA SummaryBean Job [{0}] with Event-processed=[{1}]"</literal></expr></argument>, <argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><call><name><name>slaSummaryBean</name><operator>.</operator><name>getEventProcessed</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"rawtypes"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>private</specifier> <name>void</name></type> <name>updateDBSlaConfig</name><parameter_list>(<parameter><decl><type><name>SLACalcStatus</name></type> <name>slaCalc</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>UpdateEntry</name></argument>&gt;</argument_list></name></type> <name>updateList</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>updateList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>UpdateEntry</name><argument_list type="generic">&lt;<argument><name>SLARegQuery</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name><name>SLARegQuery</name><operator>.</operator><name>UPDATE_SLA_CONFIG</name></name></expr></argument>, <argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLARegistrationBean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaCalc</name><operator>.</operator><name>setLastModifiedTime</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>updateList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>UpdateEntry</name><argument_list type="generic">&lt;<argument><name>SLASummaryQuery</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_LAST_MODIFIED_TIME</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SLASummaryBean</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"rawtypes"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>private</specifier> <name>void</name></type> <name>updateDBSlaExpectedValues</name><parameter_list>(<parameter><decl><type><name>SLACalcStatus</name></type> <name>slaCalc</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>UpdateEntry</name></argument>&gt;</argument_list></name></type> <name>updateList</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>slaCalc</name><operator>.</operator><name>setLastModifiedTime</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>updateList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>UpdateEntry</name><argument_list type="generic">&lt;<argument><name>SLARegQuery</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name><name>SLARegQuery</name><operator>.</operator><name>UPDATE_SLA_EXPECTED_VALUE</name></name></expr></argument>, <argument><expr><call><name><name>slaCalc</name>
                <operator>.</operator><name>getSLARegistrationBean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>updateList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>UpdateEntry</name><argument_list type="generic">&lt;<argument><name>SLASummaryQuery</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_FOR_EXPECTED_TIMES</name></name></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>SLASummaryBean</name><argument_list>(<argument><expr><name>slaCalc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"rawtypes"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>private</specifier> <name>void</name></type> <name>executeBatchQuery</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>UpdateEntry</name></argument>&gt;</argument_list></name></type> <name>updateList</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>BatchQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeBatchInsertUpdateDelete</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>updateList</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>


     <comment type="block" format="javadoc">/**
      * Periodically run by the SLAService worker threads to update SLA status by
      * iterating through all the jobs in the map
@@ -673,6 +729,8 @@ public class SLACalculatorMemory implements SLACalculator {
                 slaCalc.setSLAStatus(SLAStatus.NOT_STARTED);
                 slaCalc.setJobStatus(getJobStatus(reg.getAppType()));
                 slaMap.put(jobId, slaCalc);

                @SuppressWarnings("rawtypes")
                 List&lt;UpdateEntry&gt; updateList = new ArrayList&lt;UpdateEntry&gt;();
                 updateList.add(new UpdateEntry&lt;SLARegQuery&gt;(SLARegQuery.UPDATE_SLA_REG_ALL, reg));
                 updateList.add(new UpdateEntry&lt;SLASummaryQuery&gt;(SLASummaryQuery.UPDATE_SLA_SUMMARY_ALL,
@@ -758,9 +816,17 @@ public class SLACalculatorMemory implements SLACalculator {
                     locked = slaCalc.isLocked();
                     if (locked) {
                         // get eventProcessed on DB for validation in HA
                        Object eventProcObj = ((SLASummaryQueryExecutor) SLASummaryQueryExecutor.getInstance())
                                .getSingleValue(SLASummaryQuery.GET_SLA_SUMMARY_EVENTPROCESSED, jobId);
                        byte eventProc = ((Byte) eventProcObj).byteValue();
                        SLASummaryBean summaryBean = ((SLASummaryQueryExecutor) SLASummaryQueryExecutor.getInstance()).get(
                                SLASummaryQuery.GET_SLA_SUMMARY_EVENTPROCESSED_LAST_MODIFIED, jobId);
                        byte eventProc = summaryBean.getEventProcessed();

                        if (!slaCalc.getLastModifiedTime().equals(summaryBean.getLastModifiedTime())) {
                            //Update last modified time.
                            slaCalc.setLastModifiedTime(summaryBean.getLastModifiedTime());
                            reloadExpectedTimeAndConfig(slaCalc);
                            LOG.debug("Last modified time has changed for job " + jobId + " reloading config from DB");
                        }

                         slaCalc.setEventProcessed(eventProc);
                         slaCalc.setJobStatus(jobStatus);
                         switch (jobEventStatus) {
@@ -824,7 +890,9 @@ public class SLACalculatorMemory implements SLACalculator {
                 else {
                     slaCalc.setEventStatus(EventStatus.START_MET);
                 }
                eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                if (shouldAlert(slaCalc)) {
                    eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                }
             }
             eventProc += 1;
             slaCalc.setEventProcessed(eventProc);
@@ -869,7 +937,9 @@ public class SLACalculatorMemory implements SLACalculator {
             }
             eventProc += 4;
             slaCalc.setEventProcessed(eventProc);
            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
            if (shouldAlert(slaCalc)) {
                eventHandler.queueEvent(new SLACalcStatus(slaCalc));
            }
         }
         return getSLASummaryBean(slaCalc);
     }
@@ -891,7 +961,9 @@ public class SLACalculatorMemory implements SLACalculator {
             if (slaCalc.getEventProcessed() &lt; 4) {
                 slaCalc.setEventStatus(EventStatus.END_MISS);
                 slaCalc.setSLAStatus(SLAStatus.MISS);
                eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                if (shouldAlert(slaCalc)) {
                    eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                }
                 slaCalc.setEventProcessed(7);
                 return getSLASummaryBean(slaCalc);
             }
@@ -905,7 +977,9 @@ public class SLACalculatorMemory implements SLACalculator {
         if (((eventProc &gt;&gt; 1) &amp; 1) == 0) {
             if (expectedDuration != -1) {
                 slaCalc.setEventStatus(EventStatus.DURATION_MISS);
                eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                if (shouldAlert(slaCalc)) {
                    eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                }
             }
             eventProc += 2;
             slaCalc.setEventProcessed(eventProc);
@@ -915,7 +989,9 @@ public class SLACalculatorMemory implements SLACalculator {
             slaCalc.setSLAStatus(SLAStatus.MISS);
             eventProc += 4;
             slaCalc.setEventProcessed(eventProc);
            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
            if (shouldAlert(slaCalc)) {
                eventHandler.queueEvent(new SLACalcStatus(slaCalc));
            }
         }
         return getSLASummaryBean(slaCalc);
     }
@@ -934,13 +1010,16 @@ public class SLACalculatorMemory implements SLACalculator {
     }
 
     private void processDurationSLA(long expected, long actual, SLACalcStatus slaCalc) {
        if (expected != -1 &amp;&amp; actual &gt; expected) {
            slaCalc.setEventStatus(EventStatus.DURATION_MISS);
            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
        }
        else if (expected != -1 &amp;&amp; actual &lt;= expected) {
            slaCalc.setEventStatus(EventStatus.DURATION_MET);
            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
        if (expected != -1) {
            if (actual &gt; expected) {
                slaCalc.setEventStatus(EventStatus.DURATION_MISS);
            }
            else if (actual &lt;= expected) {
                slaCalc.setEventStatus(EventStatus.DURATION_MET);
            }
            if (shouldAlert(slaCalc)) {
                eventHandler.queueEvent(new SLACalcStatus(slaCalc));
            }
         }
     }
 
@@ -1016,7 +1095,9 @@ public class SLACalculatorMemory implements SLACalculator {
                         else {
                             slaCalc.setEventStatus(EventStatus.START_MET);
                         }
                        eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        if (shouldAlert(slaCalc)) {
                            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        }
                     }
                     slaCalc.setActualDuration(slaCalc.getActualEnd().getTime() - slaCalc.getActualStart().getTime());
                     if (((eventProc &gt;&gt; 1) &amp; 1) == 0) {
@@ -1030,7 +1111,9 @@ public class SLACalculatorMemory implements SLACalculator {
                     else {
                         slaCalc.setEventStatus(EventStatus.END_MET);
                     }
                    eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                    if (shouldAlert(slaCalc)) {
                        eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                    }
                 }
                 slaCalc.setEventProcessed(8);
             }
@@ -1046,12 +1129,16 @@ public class SLACalculatorMemory implements SLACalculator {
                         else {
                             slaCalc.setEventStatus(EventStatus.START_MET);
                         }
                        eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        if (shouldAlert(slaCalc)) {
                            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        }
                         eventProc++;
                     }
                     else if (slaCalc.getExpectedStart().getTime() &lt; System.currentTimeMillis()) {
                         slaCalc.setEventStatus(EventStatus.START_MISS);
                        eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        if (shouldAlert(slaCalc)) {
                            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        }
                         eventProc++;
                     }
                 }
@@ -1059,14 +1146,18 @@ public class SLACalculatorMemory implements SLACalculator {
                         &amp;&amp; slaCalc.getExpectedDuration() != -1) {
                     if (System.currentTimeMillis() - slaCalc.getActualStart().getTime() &gt; slaCalc.getExpectedDuration()) {
                         slaCalc.setEventStatus(EventStatus.DURATION_MISS);
                        eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        if (shouldAlert(slaCalc)) {
                            eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                        }
                         eventProc += 2;
                     }
                 }
                 if (eventProc &lt; 4 &amp;&amp; slaCalc.getExpectedEnd().getTime() &lt; System.currentTimeMillis()) {
                     slaCalc.setEventStatus(EventStatus.END_MISS);
                     slaCalc.setSLAStatus(SLAStatus.MISS);
                    eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                    if (shouldAlert(slaCalc)) {
                        eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                    }
                     eventProc += 4;
                 }
                 slaCalc.setEventProcessed(eventProc);
@@ -1078,12 +1169,36 @@ public class SLACalculatorMemory implements SLACalculator {
             if (slaCalc.getEventProcessed() &lt; 4 &amp;&amp; slaCalc.getExpectedEnd().getTime() &lt; System.currentTimeMillis()) {
                 slaCalc.setEventStatus(EventStatus.END_MISS);
                 slaCalc.setSLAStatus(SLAStatus.MISS);
                eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                if (shouldAlert(slaCalc)) {
                    eventHandler.queueEvent(new SLACalcStatus(slaCalc));
                }
                 slaCalc.setEventProcessed(slaCalc.getEventProcessed() + 4);
             }
         }
     }
 
    public void reloadExpectedTimeAndConfig(SLACalcStatus slaCalc) throws JPAExecutorException {
        SLARegistrationBean regBean = SLARegistrationQueryExecutor.getInstance().get(
                SLARegQuery.GET_SLA_EXPECTED_VALUE_CONFIG, slaCalc.getId());

        if (regBean.getExpectedDuration() &gt; 0) {
            slaCalc.getSLARegistrationBean().setExpectedDuration(regBean.getExpectedDuration());
        }
        if (regBean.getExpectedEnd() != null) {
            slaCalc.getSLARegistrationBean().setExpectedEnd(regBean.getExpectedEnd());
        }
        if (regBean.getExpectedStart() != null) {
            slaCalc.getSLARegistrationBean().setExpectedStart(regBean.getExpectedStart());
        }
        if (regBean.getSLAConfigMap().containsKey(OozieClient.SLA_DISABLE_ALERT)) {
            slaCalc.getSLARegistrationBean().addToSLAConfigMap(OozieClient.SLA_DISABLE_ALERT,
                    regBean.getSLAConfigMap().get(OozieClient.SLA_DISABLE_ALERT));
        }
        if (regBean.getNominalTime() != null) {
            slaCalc.getSLARegistrationBean().setNominalTime(regBean.getNominalTime());
        }
    }

     @VisibleForTesting
     public boolean isJobIdInSLAMap(String jobId) {
         return this.slaMap.containsKey(jobId);
@@ -1097,4 +1212,99 @@ public class SLACalculatorMemory implements SLACalculator {
     private void setLogPrefix(String jobId) {
         LOG = LogUtils.setLogInfo(LOG, jobId, null, null);
     }

    @Override
    public boolean enableAlert(List&lt;String&gt; jobIds) throws JPAExecutorException, ServiceException {
        boolean isJobFound = false;
        @SuppressWarnings("rawtypes")
        List&lt;UpdateEntry&gt; updateList = new ArrayList&lt;BatchQueryExecutor.UpdateEntry&gt;();
        for (String jobId : jobIds) {
            SLACalcStatus slaCalc = getSLACalcStatus(jobId);
            if (slaCalc != null) {
                slaCalc.getSLARegistrationBean().removeFromSLAConfigMap(OozieClient.SLA_DISABLE_ALERT);
                updateDBSlaConfig(slaCalc, updateList);
                isJobFound = true;
            }
        }
        executeBatchQuery(updateList);
        return isJobFound;
    }

    @Override
    public boolean enableChildJobAlert(List&lt;String&gt; parentJobIds) throws JPAExecutorException, ServiceException {
        return enableAlert(getSLAJobsforParents(parentJobIds));
    }


    @Override
    public boolean disableAlert(List&lt;String&gt; jobIds) throws JPAExecutorException, ServiceException {
        boolean isJobFound = false;
        @SuppressWarnings("rawtypes")
        List&lt;UpdateEntry&gt; updateList = new ArrayList&lt;BatchQueryExecutor.UpdateEntry&gt;();

            for (String jobId : jobIds) {
                SLACalcStatus slaCalc = getSLACalcStatus(jobId);
                if (slaCalc != null) {
                    slaCalc.getSLARegistrationBean().addToSLAConfigMap(OozieClient.SLA_DISABLE_ALERT, Boolean.toString(true));
                    updateDBSlaConfig(slaCalc, updateList);
                    isJobFound = true;
                }
            }
        executeBatchQuery(updateList);
        return isJobFound;
    }

    @Override
    public boolean disableChildJobAlert(List&lt;String&gt; parentJobIds) throws JPAExecutorException, ServiceException {
        return disableAlert(getSLAJobsforParents(parentJobIds));
    }

    @Override
    public boolean changeDefinition(List&lt;Pair&lt;String, Map&lt;String,String&gt;&gt;&gt; jobIdsSLAPair ) throws JPAExecutorException,
            ServiceException{
        boolean isJobFound = false;
        @SuppressWarnings("rawtypes")
        List&lt;UpdateEntry&gt; updateList = new ArrayList&lt;BatchQueryExecutor.UpdateEntry&gt;();
            for (Pair&lt;String, Map&lt;String,String&gt;&gt; jobIdSLAPair : jobIdsSLAPair) {
                SLACalcStatus slaCalc = getSLACalcStatus(jobIdSLAPair.getFist());
                if (slaCalc != null) {
                    updateParams(slaCalc, jobIdSLAPair.getSecond());
                    updateDBSlaExpectedValues(slaCalc, updateList);
                    isJobFound = true;
                }
            }
        executeBatchQuery(updateList);
        return isJobFound;
    }

    private void updateParams(SLACalcStatus slaCalc, Map&lt;String, String&gt; newParams) throws ServiceException {
        SLARegistrationBean reg = slaCalc.getSLARegistrationBean();
        if (newParams != null) {
            try {
                Date newNominal = SLAOperations.setNominalTime(newParams.get(RestConstants.SLA_NOMINAL_TIME), reg);
                SLAOperations.setExpectedStart(newParams.get(RestConstants.SLA_SHOULD_START), newNominal, reg);
                SLAOperations.setExpectedEnd(newParams.get(RestConstants.SLA_SHOULD_END), newNominal, reg);
                SLAOperations.setExpectedDuration(newParams.get(RestConstants.SLA_MAX_DURATION), reg);
            }
            catch (CommandException ce) {
                throw new ServiceException(ce);
            }
        }
    }

    private boolean shouldAlert(SLACalcStatus slaObj) {
        return !slaObj.getSLAConfigMap().containsKey(OozieClient.SLA_DISABLE_ALERT);
    }

    private List&lt;String&gt; getSLAJobsforParents(List&lt;String&gt; parentJobIds) throws JPAExecutorException{
        List&lt;String&gt; childJobIds = new ArrayList&lt;String&gt;();
        for (String jobId : parentJobIds) {
            List&lt;SLARegistrationBean&gt; registrationBeanList = SLARegistrationQueryExecutor.getInstance().getList(
                    SLARegQuery.GET_SLA_REG_FOR_PARENT_ID, jobId);
            for (SLARegistrationBean bean : registrationBeanList) {
                childJobIds.add(bean.getId());
            }
        }
        return childJobIds;
    }
 }
diff --git a/core/src/main/java/org/apache/oozie/sla/SLAOperations.java b/core/src/main/java/org/apache/oozie/sla/SLAOperations.java
index f5fc8269f..390500341 100644
-- a/core/src/main/java/org/apache/oozie/sla/SLAOperations.java
++ b/core/src/main/java/org/apache/oozie/sla/SLAOperations.java
@@ -23,15 +23,14 @@ import java.util.Date;
 
 import org.apache.oozie.AppType;
 import org.apache.oozie.ErrorCode;
import org.apache.oozie.client.OozieClient;
 import org.apache.oozie.client.event.SLAEvent.EventStatus;
 import org.apache.oozie.command.CommandException;
 import org.apache.oozie.executor.jpa.JPAExecutorException;
 import org.apache.oozie.executor.jpa.SLARegistrationQueryExecutor;
 import org.apache.oozie.executor.jpa.SLARegistrationQueryExecutor.SLARegQuery;
import org.apache.oozie.service.JPAService;
 import org.apache.oozie.service.ServiceException;
 import org.apache.oozie.service.Services;
import org.apache.oozie.sla.SLARegistrationBean;
 import org.apache.oozie.sla.service.SLAService;
 import org.apache.oozie.util.DateUtils;
 import org.apache.oozie.util.XLog;
@@ -40,14 +39,20 @@ import org.jdom.Element;
 
 public class SLAOperations {
 
    private static final String NOMINAL_TIME = "nominal-time";
    private static final String SHOULD_START = "should-start";
    private static final String SHOULD_END = "should-end";
    private static final String MAX_DURATION = "max-duration";
    private static final String ALERT_EVENTS = "alert-events";
    public static final String NOMINAL_TIME = "nominal-time";
    public static final String SHOULD_START = "should-start";
    public static final String SHOULD_END = "should-end";
    public static final String MAX_DURATION = "max-duration";
    public static final String ALERT_EVENTS = "alert-events";
    public static final String ALL_VALUE = "ALL";


    static public XLog LOG = XLog.getLog(SLAOperations.class);

 
     public static SLARegistrationBean createSlaRegistrationEvent(Element eSla, String jobId, String parentId,
            AppType appType, String user, String appName, XLog log, boolean rerun) throws CommandException {
            AppType appType, String user, String appName, XLog log, boolean rerun, boolean disableAlert)
            throws CommandException {
         if (eSla == null || !SLAService.isEnabled()) {
             log.debug("Not registering SLA for job [{0}]. Sla-Xml null OR SLAService not enabled", jobId);
             return null;
@@ -56,56 +61,19 @@ public class SLAOperations {
 
         // Setting nominal time
         String strNominalTime = getTagElement(eSla, NOMINAL_TIME);
        if (strNominalTime == null || strNominalTime.length() == 0) {
            throw new CommandException(ErrorCode.E1101, NOMINAL_TIME);
        }
        Date nominalTime;
        try {
            nominalTime = DateUtils.parseDateOozieTZ(strNominalTime);
            sla.setNominalTime(nominalTime);
        }
        catch (ParseException pex) {
            throw new CommandException(ErrorCode.E0302, strNominalTime, pex);
        }
        Date nominalTime = setNominalTime(strNominalTime, sla);
 
         // Setting expected start time
         String strExpectedStart = getTagElement(eSla, SHOULD_START);
        if (strExpectedStart != null) {
            float expectedStart = Float.parseFloat(strExpectedStart);
            if (expectedStart &lt; 0) {
                throw new CommandException(ErrorCode.E0302, strExpectedStart, "for SLA Expected start time");
            }
            else {
                Date expectedStartTime = new Date(nominalTime.getTime() + (long) (expectedStart * 60 * 1000));
                sla.setExpectedStart(expectedStartTime);
            }
        }
        setExpectedStart(strExpectedStart, nominalTime, sla);
 
         // Setting expected end time
         String strExpectedEnd = getTagElement(eSla, SHOULD_END);
        if (strExpectedEnd == null || strExpectedEnd.length() == 0) {
            throw new CommandException(ErrorCode.E1101, SHOULD_END);
        }
        float expectedEnd = Float.parseFloat(strExpectedEnd);
        if (expectedEnd &lt; 0) {
            throw new CommandException(ErrorCode.E0302, strExpectedEnd, "for SLA Expected end time");
        }
        else {
            Date expectedEndTime = new Date(nominalTime.getTime() + (long) (expectedEnd * 60 * 1000));
            sla.setExpectedEnd(expectedEndTime);
        }
        setExpectedEnd(strExpectedEnd, nominalTime, sla);
 
         // Setting expected duration in milliseconds
         String expectedDurationStr = getTagElement(eSla, MAX_DURATION);
        if (expectedDurationStr != null &amp;&amp; expectedDurationStr.length() &gt; 0) {
            float expectedDuration = Float.parseFloat(expectedDurationStr);
            if (expectedDuration &gt; 0) {
                sla.setExpectedDuration((long) (expectedDuration * 60 * 1000));
            }
        }
        else if (sla.getExpectedStart() != null) {
            sla.setExpectedDuration(sla.getExpectedEnd().getTime() - sla.getExpectedStart().getTime());
        }
        setExpectedDuration(expectedDurationStr, sla);
 
         // Parse desired alert-types i.e. start-miss, end-miss, start-met etc..
         String alertEvents = getTagElement(eSla, ALERT_EVENTS);
@@ -134,6 +102,10 @@ public class SLAOperations {
         sla.setAlertContact(getTagElement(eSla, "alert-contact"));
         sla.setUpstreamApps(getTagElement(eSla, "upstream-apps"));
 
        //disable Alert flag in slaConfig
        if (disableAlert) {
            sla.addToSLAConfigMap(OozieClient.SLA_DISABLE_ALERT, Boolean.toString(disableAlert));
        }
         // Oozie defined
         sla.setId(jobId);
         sla.setAppType(appType);
@@ -158,6 +130,68 @@ public class SLAOperations {
         return sla;
     }
 
    public static Date setNominalTime(String strNominalTime, SLARegistrationBean sla) throws CommandException {
        if (strNominalTime == null || strNominalTime.length() == 0) {
            return sla.getNominalTime();
        }
        Date nominalTime;
        try {
            nominalTime = DateUtils.parseDateOozieTZ(strNominalTime);
            sla.setNominalTime(nominalTime);
        }
        catch (ParseException pex) {
            throw new CommandException(ErrorCode.E0302, strNominalTime, pex);
        }
        return nominalTime;
    }

    public static void setExpectedStart(String strExpectedStart, Date nominalTime, SLARegistrationBean sla)
            throws CommandException {
        if (strExpectedStart != null) {
            float expectedStart = Float.parseFloat(strExpectedStart);
            if (expectedStart &lt; 0) {
                throw new CommandException(ErrorCode.E0302, strExpectedStart, "for SLA Expected start time");
            }
            else {
                Date expectedStartTime = new Date(nominalTime.getTime() + (long) (expectedStart * 60 * 1000));
                sla.setExpectedStart(expectedStartTime);
                LOG.debug("Setting expected start to " + expectedStartTime + " for job " + sla.getId());
            }
        }
    }

    public static void setExpectedEnd(String strExpectedEnd, Date nominalTime, SLARegistrationBean sla)
            throws CommandException {
        if (strExpectedEnd != null) {
            float expectedEnd = Float.parseFloat(strExpectedEnd);
            if (expectedEnd &lt; 0) {
                throw new CommandException(ErrorCode.E0302, strExpectedEnd, "for SLA Expected end time");
            }
            else {
                Date expectedEndTime = new Date(nominalTime.getTime() + (long) (expectedEnd * 60 * 1000));
                sla.setExpectedEnd(expectedEndTime);
                LOG.debug("Setting expected end to " + expectedEndTime + " for job " + sla.getId());

            }
        }
    }

    public static void setExpectedDuration(String expectedDurationStr, SLARegistrationBean sla) {
        if (expectedDurationStr != null &amp;&amp; expectedDurationStr.length() &gt; 0) {
            float expectedDuration = Float.parseFloat(expectedDurationStr);
            if (expectedDuration &gt; 0) {
                long duration = (long) (expectedDuration * 60 * 1000);
                LOG.debug("Setting expected duration to " + duration + " for job " + sla.getId());
                sla.setExpectedDuration(duration);
            }
        }
        else if (sla.getExpectedStart() != null) {
            long duration = sla.getExpectedEnd().getTime() - sla.getExpectedStart().getTime();
            LOG.debug("Setting expected duration to " + duration + " for job " + sla.getId());
            sla.setExpectedDuration(sla.getExpectedEnd().getTime() - sla.getExpectedStart().getTime());
        }
    }

     /**
      * Retrieve registration event
      * @param jobId the jobId
@@ -165,7 +199,6 @@ public class SLAOperations {
      * @throws JPAExecutorException
      */</comment>
     <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>updateRegistrationEvent</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument>, <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>JPAService</name></type> <name>jpaService</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>SLAService</name></type> <name>slaService</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>SLARegistrationBean</name></type> <name>reg</name> <init>= <expr><call><name><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLARegQuery</name><operator>.</operator><name>GET_SLA_REG_ALL</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">236</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLAOperations</name> <block>{
         <return>return <expr><call><name>createSlaRegistrationEvent</name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>appType</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>log</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>getTagElement</name><parameter_list>(<parameter><decl><type><name>Element</name></type> <name>elem</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tagName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="block">/*
     * default disableAlert flag
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>SLARegistrationBean</name></type> <name>createSlaRegistrationEvent</name><parameter_list>(<parameter><decl><type><name>Element</name></type> <name>eSla</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>parentId</name></decl></parameter>,
            <parameter><decl><type><name>AppType</name></type> <name>appType</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>appName</name></decl></parameter>, <parameter><decl><type><name>XLog</name></type> <name>log</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>rerun</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><call><name>createSlaRegistrationEvent</name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>appType</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>appName</name></expr></argument>, <argument><expr><name>log</name></expr></argument>, <argument><expr><name>rerun</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>getTagElement</name><parameter_list>(<parameter><decl><type><name>Element</name></type> <name>elem</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tagName</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>elem</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>elem</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name>tagName</name></expr></argument>, <argument><expr><call><name><name>elem</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"sla"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <return>return <expr><call><name><name>elem</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><name>tagName</name></expr></argument>, <argument><expr><call><name><name>elem</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"sla"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getText</name><argument_list>()</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr>;</return>
         </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLARegistrationBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLARegistrationBean</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0770bd369</literal><operator>..</operator><literal type="number">1b8370f01</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLARegistrationBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLARegistrationBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQueries</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQuery</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Table</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Transient</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>AppType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>Event</name><operator>.</operator><name>MessageType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
 
  <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_REG_ALL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLARegistrationBean w set w.jobId = :jobId, w.nominalTimeTS = :nominalTime, w.expectedStartTS = :expectedStartTime, w.expectedEndTS = :expectedEndTime, w.expectedDuration = :expectedDuration, w.slaConfig = :slaConfig, w.notificationMsg = :notificationMsg, w.upstreamApps = :upstreamApps, w.appType = :appType, w.appName = :appName, w.user = :user, w.parentId = :parentId, w.jobData = :jobData where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
 <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_CONFIG"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLARegistrationBean w set w.slaConfig = :slaConfig where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

 <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_EXPECTED_VALUE"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLARegistrationBean w set w.expectedStartTS = :expectedStartTime, w.expectedEndTS = :expectedEndTime , w.expectedDuration = :expectedDuration  where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

  <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_SLA_REG_ON_RESTART"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.notificationMsg, w.upstreamApps, w.slaConfig, w.jobData from SLARegistrationBean w where w.jobId = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
 <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_SLA_REG_ALL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(w) from SLARegistrationBean w where w.jobId = :id"</literal></expr></argument>)</argument_list></annotation> </block_content>}</block></function>)</block_content>
 @NamedQuery(name = "GET_SLA_REG_ALL"</block><operator>,</operator> query <init>= <expr><literal type="string">"select OBJECT(w) from SLARegistrationBean w where w.jobId = :id"</literal></expr>)</init><operator>,</operator>

 @NamedQuery<parameter_list>(<parameter><decl><type><name>name</name></type> <init>= <expr><literal type="string">"GET_SLA_CONFIGS"</literal></expr></init></decl></parameter>, <parameter><decl><type><name>query</name></type> <init>= <expr><literal type="string">"select w.jobId, w.slaConfig from SLARegistrationBean w where w.jobId IN (:ids)"</literal></expr></init></decl></parameter>)</parameter_list><operator>,</operator>

 @NamedQuery<parameter_list>(<parameter><decl><type><name>name</name></type> <init>= <expr><literal type="string">"GET_SLA_EXPECTED_VALUE_CONFIG"</literal></expr></init></decl></parameter>, <parameter><decl><type><name>query</name></type> <init>= <expr><literal type="string">"select w.jobId, w.slaConfig, w.expectedStartTS, w.expectedEndTS, w.expectedDuration, w.nominalTimeTS from SLARegistrationBean w where w.jobId = :id"</literal></expr></init></decl></parameter>)</parameter_list><operator>,</operator>

 @NamedQuery<parameter_list>(<parameter><decl><type><name>name</name></type> <init>= <expr><literal type="string">"GET_SLA_REG_FOR_PARENT_ID"</literal></expr></init></decl></parameter>, <parameter><decl><type><name>query</name></type> <init>= <expr><literal type="string">"select w.jobId, w.slaConfig from SLARegistrationBean w where w.parentId = :parentId"</literal></expr></init></decl></parameter>)</parameter_list></function>
 </block_content>}</block></try>)</block_content>

 public class SLARegistrationBean implements JsonBean <block>{<block_content>
 
     <annotation>@<name>Id</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">281</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">292</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>SLARegistrationBean</name> implements <name>JsonBean</name> <block>{
         <expr><name>slaConfig</name> <operator>=</operator> <call><name>slaConfigMapToString</name><argument_list>()</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getSlaConfigMap</name><argument_list>()</argument_list></call> <block>{

    <expr><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getSLAConfigMap</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><name>slaConfigMap</name></expr>;</return></block></expr>
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>addToSLAConfigMap</name><argument_list>(<argument><expr><name>String</name> <name>key</name></expr></argument>, <argument><expr><name>String</name> <name>value</name></expr></argument>)</argument_list></call> <block>{
        <expr><call><name><name>slaConfigMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>slaConfig</name> <operator>=</operator> <call><name>slaConfigMapToString</name><argument_list>()</argument_list></call></expr>;
    }</block>

    <specifier>public</specifier> <name>void</name> <call><name>removeFromSLAConfigMap</name><argument_list>(<argument><expr><name>String</name> <name>key</name></expr></argument>)</argument_list></call> <block>{
        <expr><call><name><name>slaConfigMap</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>slaConfig</name> <operator>=</operator> <call><name>slaConfigMapToString</name><argument_list>()</argument_list></call></expr>;
    }</block>

     <specifier>private</specifier> <name>void</name> <call><name>slaConfigStringToMap</name><argument_list>()</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>slaConfig</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>splitString</name> <init>= <expr><call><name><name>slaConfig</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"},"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLASummaryBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLASummaryBean</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9907dd009</literal><operator>..</operator><name>a88dcf612</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLASummaryBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>SLASummaryBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Timestamp</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Basic</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Column</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQuery</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Table</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>AppType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonTags</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
 
  <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_SUMMARY_FOR_ACTUAL_TIMES"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLASummaryBean w set w.eventProcessed = :eventProcessed, w.actualStartTS = :actualStartTS, w.actualEndTS = :actualEndTS, w.actualEndTS = :actualEndTS, w.actualDuration = :actualDuration, w.lastModifiedTS = :lastModifiedTS where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
 <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_SUMMARY_FOR_EXPECTED_TIMES"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLASummaryBean w set w.nominalTimeTS = :nominalTime, w.expectedStartTS = :expectedStartTime, w.expectedEndTS = :expectedEndTime, w.expectedDuration = :expectedDuration , w.lastModifiedTS = :lastModTime where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

  <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_SUMMARY_EVENTPROCESSED"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLASummaryBean w set w.eventProcessed = :eventProcessed where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
 <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_SUMMARY_LAST_MODIFIED_TIME"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLASummaryBean w set w.lastModifiedTS = :lastModifiedTS where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

  <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_SLA_SUMMARY_ALL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update SLASummaryBean w set w.jobId = :jobId, w.appName = :appName, w.appType = :appType, w.nominalTimeTS = :nominalTime, w.expectedStartTS = :expectedStartTime, w.expectedEndTS = :expectedEndTime, w.expectedDuration = :expectedDuration, w.jobStatus = :jobStatus, w.slaStatus = :slaStatus, w.eventStatus = :eventStatus, w.lastModifiedTS = :lastModTime, w.user = :user, w.parentId = :parentId, w.eventProcessed = :eventProcessed, w.actualDuration = :actualDuration, w.actualEndTS = :actualEndTS, w.actualStartTS = :actualStartTS where w.jobId = :jobId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
  <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_SLA_SUMMARY"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(w) from SLASummaryBean w where w.jobId = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
  <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_SLA_SUMMARY_RECORDS_RESTART"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select OBJECT(w) from SLASummaryBean w where w.eventProcessed &lt;= 7 AND w.lastModifiedTS &gt;= :lastModifiedTime"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
 <decl_stmt><decl><annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_SLA_SUMMARY_EVENTPROCESSED"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.eventProcessed from SLASummaryBean w where w.jobId = :id"</literal></expr></argument>)</argument_list></annotation>
 @<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_SLA_SUMMARY_EVENTPROCESSED"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.eventProcessed from SLASummaryBean w where w.jobId = :id"</literal></expr></argument>)</argument_list></decl>,

 @<decl><type ref="prev"/><name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_SLA_SUMMARY_EVENTPROCESSED_LAST_MODIFIED"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.eventProcessed, w.lastModifiedTS from SLASummaryBean w where w.jobId = :id"</literal></expr></argument>)</argument_list>

 }</decl>)
 
 <comment type="block" format="javadoc">/**
@@ -431,6 +440,7 @@ public class SLASummaryBean implements JsonBean {
             json.put(JsonTags.SLA_SUMMARY_JOB_STATUS, jobStatus);
             json.put(JsonTags.SLA_SUMMARY_SLA_STATUS, slaStatus);
             json.put(JsonTags.SLA_SUMMARY_LAST_MODIFIED, JsonUtils.formatDateRfc822(lastModifiedTS, timeZoneId));

             return json;
         }
     }
@@ -455,4 +465,25 @@ public class SLASummaryBean implements JsonBean {
         return json;
     }
 
    @SuppressWarnings("unchecked")
    public static JSONObject toJSONObject(List&lt;? extends SLASummaryBean&gt; slaSummaryList,
            Map&lt;String, Map&lt;String, String&gt;&gt; slaConfigMap, String timeZoneId) {
        JSONObject json = new JSONObject();
        JSONArray array = new JSONArray();
        if (slaSummaryList != null) {
            for (SLASummaryBean summary : slaSummaryList) {
                JSONObject slaJson = summary.toJSONObject(timeZoneId);
                String slaAlertStatus = "";
                if (slaConfigMap.containsKey(summary.getId())) {
                    slaAlertStatus = slaConfigMap.get(summary.getId()).containsKey(
                            OozieClient.SLA_DISABLE_ALERT) ? "Disabled" : "Enabled";
                }
                slaJson.put(JsonTags.SLA_ALERT_STATUS, slaAlertStatus);
                array.add(slaJson);
            }
        }
        json.put(JsonTags.SLA_SUMMARY_LIST, array);
        return json;
    }

 }
diff --git a/core/src/main/java/org/apache/oozie/sla/service/SLAService.java b/core/src/main/java/org/apache/oozie/sla/service/SLAService.java
index a4562e77c..ef1d335e8 100644
-- a/core/src/main/java/org/apache/oozie/sla/service/SLAService.java
++ b/core/src/main/java/org/apache/oozie/sla/service/SLAService.java
@@ -19,6 +19,8 @@
 package org.apache.oozie.sla.service;
 
 import java.util.Date;
import java.util.List;
import java.util.Map;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.ErrorCode;
@@ -33,6 +35,7 @@ import org.apache.oozie.service.Services;
 import org.apache.oozie.sla.SLACalculator;
 import org.apache.oozie.sla.SLACalculatorMemory;
 import org.apache.oozie.sla.SLARegistrationBean;
import org.apache.oozie.util.Pair;
 import org.apache.oozie.util.XLog;
 
 import com.google.common.annotations.VisibleForTesting;
@@ -107,7 +110,6 @@ public class SLAService implements Service {
         return calcImpl;
     }
 
    @VisibleForTesting
     public void runSLAWorker() {
         new SLAWorker(calcImpl).run();
     }
@@ -181,4 +183,94 @@ public class SLAService implements Service {
         calcImpl.removeRegistration(jobId);
     }
 
    /**
     * Enable jobs sla alert.
     *
     * @param jobIds the job ids
     * @param isParentJob, if jobIds are parent job
     * @return true, if successful
     * @throws ServiceException the service exception
     */</comment>
    public boolean enableAlert(List&lt;String&gt; jobIds</decl_stmt>)</block_content> <throws>throws <argument><expr><name>ServiceException</name> <block>{</block></expr></argument></throws>
        try <block>{<block_content>
            <return>return <expr><call><name><name>calcImpl</name><operator>.</operator><name>enableAlert</name></name><argument_list>(<argument><expr><name>jobIds</name></expr></argument>)</argument_list></call></expr>;</return>
        <expr_stmt/></block_content></block></block></if></if_stmt>}</block></expr></expr_stmt>
        <catch>catch <parameter_list>(<parameter><decl><type><name>JPAExecutorException</name></type> <name>jpe</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Exception while updating SLA alerting for Job [{0}]"</literal></expr></argument>, <argument><expr><call><name><name>jobIds</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <throw>throw <expr><operator>new</operator> <call><name>ServiceException</name><argument_list>(<argument><expr><name>jpe</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch>
    </block_content>}</block>

    <comment type="block" format="javadoc">/**
     * Enable child jobs sla alert.
     *
     * @param jobIds the parent job ids
     * @param isParentJob, if jobIds are parent job
     * @return true, if successful
     * @throws ServiceException the service exception
     */</comment>
    public boolean enableChildJobAlert(List&lt;String&gt; parentJobIds</block></function>) <throws>throws <argument><expr><name>ServiceException</name> <block>{</block></expr></argument></throws>
        <try>try <block>{<block_content>
            <return>return <expr><call><name><name>calcImpl</name><operator>.</operator><name>enableChildJobAlert</name></name><argument_list>(<argument><expr><name>parentJobIds</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>JPAExecutorException</name></type> <name>jpe</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Exception while updating SLA alerting for Job [{0}]"</literal></expr></argument>, <argument><expr><call><name><name>parentJobIds</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <throw>throw <expr><operator>new</operator> <call><name>ServiceException</name><argument_list>(<argument><expr><name>jpe</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    }

    <comment type="block" format="javadoc">/**
     * Disable jobs Sla alert.
     *
     * @param jobIds the job ids
     * @param isParentJob, if jobIds are parent job
     * @return true, if successful
     * @throws ServiceException the service exception
     */</comment>
    public <function><type><name>boolean</name></type> <name>disableAlert</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>jobIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <return>return <expr><call><name><name>calcImpl</name><operator>.</operator><name>disableAlert</name></name><argument_list>(<argument><expr><name>jobIds</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>JPAExecutorException</name></type> <name>jpe</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Exception while updating SLA alerting for Job [{0}]"</literal></expr></argument>, <argument><expr><call><name><name>jobIds</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <throw>throw <expr><operator>new</operator> <call><name>ServiceException</name><argument_list>(<argument><expr><name>jpe</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Disable child jobs Sla alert.
     *
     * @param jobIds the parent job ids
     * @param isParentJob, if jobIds are parent job
     * @return true, if successful
     * @throws ServiceException the service exception
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>disableChildJobAlert</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>parentJobIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ServiceException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <return>return <expr><call><name><name>calcImpl</name><operator>.</operator><name>disableChildJobAlert</name></name><argument_list>(<argument><expr><name>parentJobIds</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>JPAExecutorException</name></type> <name>jpe</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Exception while updating SLA alerting for Job [{0}]"</literal></expr></argument>, <argument><expr><call><name><name>parentJobIds</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <throw>throw <expr><operator>new</operator> <call><name>ServiceException</name><argument_list>(<argument><expr><name>jpe</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Change jobs Sla definitions
     * It takes list of pairs of jobid and key/value pairs of el evaluated sla definition.
     * Support definition are sla-should-start, sla-should-end, sla-nominal-time and sla-max-duration.
     *
     * @param jobIdsSLAPair the job ids sla pair
     * @return true, if successful
     * @throws ServiceException the service exception
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>changeDefinition</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>idSlaDefinitionList</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>ServiceException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <return>return <expr><call><name><name>calcImpl</name><operator>.</operator><name>changeDefinition</name></name><argument_list>(<argument><expr><name>idSlaDefinitionList</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>JPAExecutorException</name></type> <name>jpe</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>ServiceException</name><argument_list>(<argument><expr><name>jpe</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CoordActionsInDateRange</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CoordActionsInDateRange</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7c2620c60</literal><operator>..</operator><literal type="number">1c565ef3e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CoordActionsInDateRange</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CoordActionsInDateRange</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>XException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetActionModifiedDateForRangeJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetActionRunningCountForRangeJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetActionsByDatesForKillJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetActionsForDatesJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name><operator>.</operator><name>CoordActionQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordActionsInDateRange</name> <block>{
                 <throw>throw <argument_list>new <argument><expr><call><name>XException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E0308</name></name></expr></argument>, <argument><expr><literal type="string">"'"</literal> <operator>+</operator> <name>range</name> <operator>+</operator> <literal type="string">"'. Start date '"</literal> <operator>+</operator> <name>start</name> <operator>+</operator> <literal type="string">"' is older than end date: '"</literal> <operator>+</operator> <name>end</name>
 <operator>+</operator> <literal type="string">"'"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
             }</block>
            <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>list</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>JPAService</name></type> <name>jpaService</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>list</name> <operator>=</operator> <call><name><name>jpaService</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>start</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>list</name></expr>;</return>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>listOfActions</name> <init>= <expr><call><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                    <argument><expr><name><name>CoordActionQuery</name><operator>.</operator><name>GET_TERMINATED_ACTIONS_FOR_DATES</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>start</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>idsList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>( <init><decl><type><name>CoordinatorActionBean</name></type> <name>bean</name> <range>: <expr><name>listOfActions</name></expr></range></decl></init>)</control><block>{<block_content>
                <expr_stmt><expr><call><name><name>idsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <return>return <expr><name>idsList</name></expr>;</return>
     }
 
     <comment type="block" format="javadoc">/**
@@ -156,12 +158,13 @@ public class CoordActionsInDateRange {
     private static List&lt;CoordinatorActionBean&gt; getActionsFromDateRange(String jobId, Date start, Date end,
             boolean active) throws XException {
         List&lt;CoordinatorActionBean&gt; list;
        JPAService jpaService = Services.get().get(JPAService.class);
         if (!active) {
            list = jpaService.execute(new CoordJobGetActionsForDatesJPAExecutor(jobId, start, end));
            list = CoordActionQueryExecutor.getInstance().getList(
                    CoordActionQuery.GET_TERMINATED_ACTIONS_FOR_DATES, jobId, start, end);
         }
         else {
            list = jpaService.execute(new CoordJobGetActionsByDatesForKillJPAExecutor(jobId, start, end));
            list = CoordActionQueryExecutor.getInstance().getList(
                    CoordActionQuery.GET_ACTIVE_ACTIONS_FOR_DATES, jobId, start, end);
         }
         return list;
     }
diff --git a/core/src/main/resources/oozie-default.xml b/core/src/main/resources/oozie-default.xml
index 6f76b0744..b40fec0e2 100644
-- a/core/src/main/resources/oozie-default.xml
++ b/core/src/main/resources/oozie-default.xml
@@ -2211,6 +2211,15 @@
         &lt;/description&gt;
     &lt;/property&gt;
 
    &lt;property&gt;
        &lt;name&gt;oozie.sla.disable.alerts.older.than&lt;/name&gt;
        &lt;value&gt;48&lt;/value&gt;
        &lt;description&gt;
             Time threshold, in HOURS, for disabling SLA alerting for jobs whose
             nominal time is older than this.
        &lt;/description&gt;
    &lt;/property&gt;

     &lt;!-- ZooKeeper configuration --&gt;
     &lt;property&gt;
         &lt;name&gt;oozie.zookeeper.connection.string&lt;/name&gt;
diff --git a/core/src/test/java/org/apache/oozie/command/TestSLAAlertXCommand.java b/core/src/test/java/org/apache/oozie/command/TestSLAAlertXCommand.java
new file mode 100644
index 000000000..ce5988516
-- /dev/null
++ b/core/src/test/java/org/apache/oozie/command/TestSLAAlertXCommand.java
@@ -0,0 +1,300 @@
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

package <expr_stmt><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name></name></expr>;</expr_stmt>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>AppType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>BaseEngineException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>BundleEngine</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>BundleJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorEngine</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>Job</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>local</name><operator>.</operator><name>LocalOozie</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ConfigurationService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLACalcStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLACalculatorMemory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLAOperations</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLARegistrationBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XDataTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XConfiguration</name></name>;</import>

<class><specifier>public</specifier> class <name>TestSLAAlertXCommand</name> <super_list><extends>extends <super><name>XDataTestCase</name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>Services</name></type> <name>services</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SLACalculatorMemory</name></type> <name>slaCalcMemory</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BundleJobBean</name></type> <name>bundle</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>coord1</name></decl>, <decl><type ref="prev"/><name>coord2</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>BundleEngine</name></type> <name>bundleEngine</name> <init>= <expr><operator>new</operator> <call><name>BundleEngine</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Date</name></type> <name>startTime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Date</name></type> <name>endTime</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>timeInSec</name> <init>= <expr><literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>data</name> <init>= <expr><literal type="string">"2014-01-01T00:00Z"</literal></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>Services</name><operator>.</operator><name>CONF_SERVICE_EXT_CLASSES</name></name></expr></argument>, <argument><expr><literal type="string">"org.apache.oozie.service.EventHandlerService,"</literal>
                <operator>+</operator> <literal type="string">"org.apache.oozie.sla.service.SLAService"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>CONF_SLA_CHECK_INTERVAL</name></name></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LocalOozie</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>tearDown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testBundleSLAAlertCommands</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>setupSLAJobs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>jobIdsStr</name> <init>= <expr><call><name><name>bundle</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actions</name> <init>= <expr><literal type="string">"1,2"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>coords</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>disableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>coords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>enableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job1</name> <init>= <expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                <argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>XConfiguration</name></type> <name>xConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>xConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job2</name> <init>= <expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                <argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>xConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>job2</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>xConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>disableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"coord1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>job1</name> <operator>=</operator> <call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>,
                <argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>xConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>xConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>SLAOperations</name><operator>.</operator><name>ALL_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>disableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"coord2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// with multiple coordID.</comment>

        <decl_stmt><decl><type><name>String</name></type> <name>dates</name> <init>= <expr><literal type="string">"2014-01-01T00:00Z::2014-01-03T00:00Z"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>enableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>dates</name></expr></argument>, <argument><expr><literal type="string">"coord1,"</literal> <operator>+</operator> <call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>disableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"dummy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Should throw Exception"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>BaseEngineException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1026</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>

    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSLAChangeCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>setupSLAJobs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>newParams</name> <init>= <expr><name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_END</name></name> <operator>+</operator> <literal type="string">"=10"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>jobIdsStr</name> <init>= <expr><call><name><name>bundle</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>coords</name> <init>= <expr><call><name><name>coord1</name><operator>.</operator><name>getAppName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>changeSLA</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>coords</name></expr></argument>, <argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name>getSLACalcStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedEnd</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><call><name>getSLACalcStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getNominalTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">10</literal> <operator>*</operator> <name>timeInSec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name>getSLACalcStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedEnd</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><call><name>getSLACalcStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getNominalTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">10</literal> <operator>*</operator> <name>timeInSec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name>getSLACalcStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedEnd</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><call><name>getSLACalcStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getNominalTime</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">10</literal> <operator>*</operator> <name>timeInSec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>newParams</name> <operator>=</operator> <literal type="string">"non-valid-param=10"</literal></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>bundleEngine</name><operator>.</operator><name>changeSLA</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>coords</name></expr></argument>, <argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Should throw Exception"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>BaseEngineException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1027</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <try>try <block>{<block_content>
            <expr_stmt><expr><operator>new</operator> <call><name>CoordinatorEngine</name><argument_list>()</argument_list></call><operator>.</operator><call><name>changeSLA</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Should throw Exception"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>BaseEngineException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ErrorCode</name><operator>.</operator><name>E1027</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCoordSLAAlertCommands</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>setupSLAJobs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><specifier>final</specifier> <name>CoordinatorEngine</name></type> <name>engine</name> <init>= <expr><operator>new</operator> <call><name>CoordinatorEngine</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>jobIdsStr</name> <init>= <expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actions</name> <init>= <expr><literal type="string">"1-3,5"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>coords</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>engine</name><operator>.</operator><name>disableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>coords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>actions</name> <operator>=</operator> <literal type="string">"1-3"</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>engine</name><operator>.</operator><name>enableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><name>actions</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>engine</name><operator>.</operator><name>enableSLAAlert</name></name><argument_list>(<argument><expr><name>jobIdsStr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                <argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><name>jobIdsStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>XConfiguration</name></type> <name>xConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>xConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>setupSLAJobs</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

        <expr_stmt><expr><name>coord1</name> <operator>=</operator> <call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>Job</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime1</name> <init>= <expr><call><name><name>DateUtils</name><operator>.</operator><name>parseDateUTC</name></name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
                <argument><expr><name>nominalTime1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime2</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addDays</name></name><argument_list>(<argument><expr><name>nominalTime1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
                <argument><expr><name>nominalTime2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime3</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addDays</name></name><argument_list>(<argument><expr><name>nominalTime1</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
                <argument><expr><name>nominalTime3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime4</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addDays</name></name><argument_list>(<argument><expr><name>nominalTime1</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
                <argument><expr><name>nominalTime4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime5</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addDays</name></name><argument_list>(<argument><expr><name>nominalTime1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
                <argument><expr><name>nominalTime5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>coord2</name> <operator>=</operator> <call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>Job</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
                <argument><expr><name>nominalTime1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
                <argument><expr><name>nominalTime2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
                <argument><expr><name>nominalTime3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
                <argument><expr><name>nominalTime4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>bundle</name> <operator>=</operator> <call><name>addRecordToBundleJobTable</name><argument_list>(<argument><expr><name><name>Job</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>coord1</name><operator>.</operator><name>setBundleId</name></name><argument_list>(<argument><expr><call><name><name>bundle</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>coord1</name><operator>.</operator><name>setAppName</name></name><argument_list>(<argument><expr><literal type="string">"coord1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>coord1</name><operator>.</operator><name>setStartTime</name></name><argument_list>(<argument><expr><name>nominalTime1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>coord1</name><operator>.</operator><name>setMatThrottling</name></name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>coord1</name><operator>.</operator><name>setLastActionNumber</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>coord2</name><operator>.</operator><name>setBundleId</name></name><argument_list>(<argument><expr><call><name><name>bundle</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>coord2</name><operator>.</operator><name>setAppName</name></name><argument_list>(<argument><expr><literal type="string">"coord2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>CoordJobQuery</name><operator>.</operator><name>UPDATE_COORD_JOB</name></name></expr></argument>, <argument><expr><name>coord1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>CoordJobQuery</name><operator>.</operator><name>UPDATE_COORD_JOB</name></name></expr></argument>, <argument><expr><name>coord2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_JOB</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_JOB</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>registerSLABean</name><argument_list>(<argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>coord2</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nominalTime4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@2"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@3"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@5"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>checkSLAStatus</name><argument_list>(<argument><expr><call><name><name>coord1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"@4"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>registerSLABean</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>AppType</name></type> <name>appType</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>parentId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>nominalTime</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>SLARegistrationBean</name></type> <name>slaRegBean</name> <init>= <expr><operator>new</operator> <call><name>SLARegistrationBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>slaRegBean</name><operator>.</operator><name>setNominalTime</name></name><argument_list>(<argument><expr><name>nominalTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaRegBean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaRegBean</name><operator>.</operator><name>setAppType</name></name><argument_list>(<argument><expr><name>appType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>startTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// 1 hour back</comment>
        <expr_stmt><expr><call><name><name>slaRegBean</name><operator>.</operator><name>setExpectedStart</name></name><argument_list>(<argument><expr><name>startTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaRegBean</name><operator>.</operator><name>setExpectedDuration</name></name><argument_list>(<argument><expr><literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaRegBean</name><operator>.</operator><name>setParentId</name></name><argument_list>(<argument><expr><name>parentId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaRegBean</name><operator>.</operator><name>setExpectedEnd</name></name><argument_list>(<argument><expr><name>endTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// 1 hour ahead</comment>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>addRegistrationEvent</name><argument_list>(<argument><expr><name>slaRegBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>checkSLAStatus</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>status</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name>getSLACalcStatus</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSLAConfigMap</name><argument_list>()</argument_list></call><operator>.</operator><call><name>containsKey</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>SLACalcStatus</name></type> <name>getSLACalcStatus</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JPAExecutorException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSLACalculator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>TestCoordSubmitXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>TestCoordSubmitXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5ce9a7fb9</literal><operator>..</operator><literal type="number">5f72e5704</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>TestCoordSubmitXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>TestCoordSubmitXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Writer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>Job</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>EventHandlerService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLACalcStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLACalculator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLAOperations</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XDataTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>JobUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XmlUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Element</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoordSubmitXCommand</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>protected</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>set</name><argument_list>(<argument><expr><name><name>Services</name><operator>.</operator><name>CONF_SERVICE_EXT_CLASSES</name></name></expr></argument>,
                <argument><expr><call><name><name>EventHandlerService</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <call><name><name>SLAService</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
     }</block>
 
@@ <operator>-</operator><literal type="number">1319</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">1331</literal></expr><operator>,</operator><expr><literal type="number">170</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoordSubmitXCommand</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getTimeout</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">43200</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>testSubmitWithSLAAlertsDisable</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>File</name></type> <name>appPathFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"coordinator.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// CASE 1: Failure case i.e. multiple data-in instances</comment>
        <decl_stmt><decl><type><name>Reader</name></type> <name>reader</name> <init>= <expr><call><name><name>IOUtils</name><operator>.</operator><name>getResourceAsReader</name></name><argument_list>(<argument><expr><literal type="string">"coord-action-sla.xml"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Writer</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>FileWriter</name><argument_list>(<argument><expr><name>appPathFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>copyCharStream</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>COORDINATOR_APP_PATH</name></name></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"start"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"end"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"frequency"</literal></expr></argument>, <argument><expr><literal type="string">"coord:days(1)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>getResourceAsReader</name></name><argument_list>(<argument><expr><literal type="string">"wf-credentials.xml"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>appPathFile</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>FileWriter</name><argument_list>(<argument><expr><name>appPathFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>copyCharStream</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"wfAppPath"</literal></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>nominalTime</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>coordId</name> <init>= <expr><operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>SLAService</name></type> <name>slaService</name> <init>= <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SLACalculator</name></type> <name>calc</name> <init>= <expr><call><name><name>slaService</name><operator>.</operator><name>getSLACalculator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SLACalcStatus</name></type> <name>slaCalc</name> <init>= <expr><call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf1</name><init>=<expr><operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// CASE I: "ALL"</comment>
        <expr_stmt><expr><call><name><name>conf1</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>, <argument><expr><literal type="string">"ALL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>coordId</name> <operator>=</operator> <operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf1</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>slaService</name> <operator>=</operator> <call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>calc</name> <operator>=</operator> <call><name><name>slaService</name><operator>.</operator><name>getSLACalculator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>slaCalc</name> <operator>=</operator> <call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// CASE II: Date Range</comment>
        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf2</name><init>=<expr><operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>startRangeDate</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf2</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>,
                <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>startRangeDate</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"::"</literal> <operator>+</operator> <call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>nominalTime</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>coordId</name> <operator>=</operator> <operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf2</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>slaCalc</name> <operator>=</operator> <call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// CASE III: Coord name (negative test)</comment>
        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf3</name><init>=<expr><operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf3</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_COORD</name></name></expr></argument>, <argument><expr><literal type="string">"test-coord-sla-x"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>coordId</name> <operator>=</operator> <operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf3</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>slaCalc</name> <operator>=</operator> <call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// CASE IV: Older than n(hours)</comment>
        <decl_stmt><decl><type><name>Date</name></type> <name>otherNominalTime</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">73</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>appPathFile</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"coordinator.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>COORDINATOR_APP_PATH</name></name></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"wfAppPath"</literal></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"start"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"end"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>otherNominalTime</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_OLDER_THAN</name></name></expr></argument>, <argument><expr><literal type="number">72</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>coordId</name> <operator>=</operator> <operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>slaCalc</name> <operator>=</operator> <call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// catchup mode</comment>
        <expr_stmt><expr><name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>COORDINATOR_APP_PATH</name></name></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"wfAppPath"</literal></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"start"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"end"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>,
                <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>,
                <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>coordId</name> <operator>=</operator> <operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>slaCalc</name> <operator>=</operator> <call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// normal mode</comment>
        <expr_stmt><expr><name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>COORDINATOR_APP_PATH</name></name></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"wfAppPath"</literal></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"start"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"end"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>coordId</name> <operator>=</operator> <operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>slaCalc</name> <operator>=</operator> <call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    }

    public <function><type><name>void</name></type> <name>testSLAAlertWithNewlyCreatedActions</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>File</name></type> <name>appPathFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"coordinator.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// CASE 1: Failure case i.e. multiple data-in instances</comment>
        <decl_stmt><decl><type><name>Reader</name></type> <name>reader</name> <init>= <expr><call><name><name>IOUtils</name><operator>.</operator><name>getResourceAsReader</name></name><argument_list>(<argument><expr><literal type="string">"coord-action-sla.xml"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Writer</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>FileWriter</name><argument_list>(<argument><expr><name>appPathFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>copyCharStream</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>COORDINATOR_APP_PATH</name></name></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"start"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addDays</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"end"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>time</name><operator>.</operator><name>DateUtils</name><operator>.</operator><name>addMonths</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>getResourceAsReader</name></name><argument_list>(<argument><expr><literal type="string">"wf-credentials.xml"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>appPathFile</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>FileWriter</name><argument_list>(<argument><expr><name>appPathFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>copyCharStream</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"wfAppPath"</literal></expr></argument>, <argument><expr><call><name><name>appPathFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>, <argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>nominalTime</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>coordId</name> <init>= <expr><operator>new</operator> <call><name>CoordSubmitXCommand</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(
                <argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><name>coordId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setMatThrottling</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>UPDATE_COORD_JOB</name></name></expr></argument>, <argument><expr><name>job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>SLAService</name></type> <name>slaService</name> <init>= <expr><call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SLACalculator</name></type> <name>calc</name> <init>= <expr><call><name><name>slaService</name><operator>.</operator><name>getSLACalculator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SLACalcStatus</name></type> <name>slaCalc</name> <init>= <expr><call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getExpectedDuration</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1800000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>job</name> <operator>=</operator> <call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><name>coordId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getLastActionNumber</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>newParams</name> <init>= <expr><name><name>RestConstants</name><operator>.</operator><name>SLA_MAX_DURATION</name></name> <operator>+</operator> <literal type="string">"=${5 * MINUTES}"</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAChangeXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>JobUtils</name><operator>.</operator><name>parseChangeValue</name></name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>CoordSLAAlertsDisableXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>job</name> <operator>=</operator> <call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><name>coordId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setMatThrottling</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>UPDATE_COORD_JOB</name></name></expr></argument>, <argument><expr><name>job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>job</name> <operator>=</operator> <call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><name>coordId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><operator>new</operator> <call><name>CoordMaterializeTransitionXCommand</name><argument_list>(<argument><expr><name>coordId</name></expr></argument>, <argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>job</name> <operator>=</operator> <call><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name><operator>.</operator><name>GET_COORD_JOB</name></name></expr></argument>, <argument><expr><name>coordId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>slaCalc</name> <operator>=</operator> <call><name><name>calc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coordId</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <call><name><name>job</name><operator>.</operator><name>getLastActionNumber</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getExpectedDuration</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">300000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// newly action should have sla disable after coord disable command on coord job</comment>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>slaCalc</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>eAction</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getJobXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Element</name></type> <name>eSla</name> <init>= <expr><call><name><name>eAction</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"action"</literal></expr></argument>, <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getChild</name><argument_list>(<argument><expr><literal type="string">"info"</literal></expr></argument>, <argument><expr><call><name><name>eAction</name><operator>.</operator><name>getNamespace</name></name><argument_list>(<argument><expr><literal type="string">"sla"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>SLAOperations</name><operator>.</operator><name>getTagElement</name></name><argument_list>(<argument><expr><name>eSla</name></expr></argument>, <argument><expr><literal type="string">"max-duration"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"${5 * MINUTES}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">52</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">293d9259c</literal><operator>..</operator><literal type="number">85ff5d273</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordJobGetActionsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordActionQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>local</name><operator>.</operator><name>LocalOozie</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name><operator>.</operator><name>CoordActionQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XDataTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
 
<class><specifier>public</specifier> class <name>TestCoordJobGetActionsForDatesJPAExecutor</name> <super_list><extends>extends <super><name>XDataTestCase</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> class <name>TestCoordActionQueryExecutor</name> <super_list><extends>extends <super><name>XDataTestCase</name></super></extends></super_list> <block>{

     <decl_stmt><decl><type><name>Services</name></type> <name>services</name></decl>;</decl_stmt>
 
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">37</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoordJobGetActionsForDatesJPAExecutor</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>super</name><operator>.</operator><name>tearDown</name></name><argument_list>()</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>testCoordActionGet</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><specifier>public</specifier> <name>void</name> <call><name>testGetTerminatedActionForDates</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>int</name> <name>actionNum</name> <operator>=</operator> <literal type="number">1</literal></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>CoordinatorJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>actionNum</name></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>FAILED</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Path</name></type> <name>appPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"coord"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actionXml</name> <init>= <expr><call><name>getCoordActionXml</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actionNomialTime</name> <init>= <expr><call><name>getActionNominalTime</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime</name> <init>= <expr><call><name><name>DateUtils</name><operator>.</operator><name>parseDateOozieTZ</name></name><argument_list>(<argument><expr><name>actionNomialTime</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>Date</name></type> <name>d1</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>d2</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>_testGetTerminatedActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>d1</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>d2</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>_testGetTerminatedActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <constructor_decl><name>cleanUpDBTables</name><parameter_list>()</parameter_list>;</constructor_decl>
        <expr_stmt><expr><name>job</name> <operator>=</operator> <call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>CoordinatorJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>actionNum</name></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>_testGetTerminatedActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></class>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>_testGetTerminatedActionForDates</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>d1</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>d2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>expected</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>actionIds</name> <init>= <expr><call><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                <argument><expr><name><name>CoordActionQuery</name><operator>.</operator><name>GET_TERMINATED_ACTIONS_FOR_DATES</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>actionIds</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetTerminatedActionIdsForDates</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>int</name></type> <name>actionNum</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>CoordinatorJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>actionNum</name></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>FAILED</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoordJobGetActionsForDatesJPAExecutor</name> extends <name>XDataTestCase</name> <block>{
 
         <expr><name>Date</name> <name>d1</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>Date</name> <name>d2</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_testGetActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_testGetTerminatedActionIdsForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>d1</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>d2</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">2000</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_testGetActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_testGetTerminatedActionIdsForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><call><name>cleanUpDBTables</name><argument_list>()</argument_list></call></expr>;
         <expr><name>job</name> <operator>=</operator> <call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>CoordinatorJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>actionNum</name></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_testGetActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_testGetTerminatedActionIdsForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <specifier>private</specifier> <name>void</name> <call><name>_testGetActionForDates</name><argument_list>(<argument><expr><name>String</name> <name>jobId</name></expr></argument>, <argument><expr><name>Date</name> <name>d1</name></expr></argument>, <argument><expr><name>Date</name> <name>d2</name></expr></argument>, <argument><expr><name>int</name> <name>expected</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>JPAService</name> <name>jpaService</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>jpaService</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>CoordJobGetActionsForDatesJPAExecutor</name></type> <name>actionGetCmd</name> <init>= <expr><operator>new</operator> <call><name>CoordJobGetActionsForDatesJPAExecutor</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>actions</name> <init>= <expr><call><name><name>jpaService</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><name>actionGetCmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>_testGetTerminatedActionIdsForDates</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>d1</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>d2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>expected</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>CoordinatorActionBean</name></argument>&gt;</argument_list></name></type> <name>actions</name> <init>= <expr><call><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                <argument><expr><name><name>CoordActionQuery</name><operator>.</operator><name>GET_TERMINATED_ACTION_IDS_FOR_DATES</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>actions</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordJobGetActionIdsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordJobGetActionIdsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">9d92256cf</literal><operator>..</operator><literal type="number">000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestCoordJobGetActionIdsForDatesJPAExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">82</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>local</name><operator>.</operator><name>LocalOozie</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XDataTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>

<class><specifier>public</specifier> class <name>TestCoordJobGetActionIdsForDatesJPAExecutor</name> <super_list><extends>extends <super><name>XDataTestCase</name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><name>Services</name></type> <name>services</name></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>services</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>tearDown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCoordActionGet</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>actionNum</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CoordinatorJobBean</name></type> <name>job</name> <init>= <expr><call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>CoordinatorJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>actionNum</name></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>FAILED</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Path</name></type> <name>appPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"coord"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actionXml</name> <init>= <expr><call><name>getCoordActionXml</name><argument_list>(<argument><expr><name>appPath</name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>actionNomialTime</name> <init>= <expr><call><name>getActionNominalTime</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nominalTime</name> <init>= <expr><call><name><name>DateUtils</name><operator>.</operator><name>parseDateOozieTZ</name></name><argument_list>(<argument><expr><name>actionNomialTime</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>Date</name></type> <name>d1</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>d2</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>_testGetActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>d1</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>d2</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>nominalTime</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>_testGetActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>cleanUpDBTables</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>job</name> <operator>=</operator> <call><name>addRecordToCoordJobTable</name><argument_list>(<argument><expr><name><name>CoordinatorJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>actionNum</name></expr></argument>, <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>WAITING</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>_testGetActionForDates</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>_testGetActionForDates</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>jobId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>d1</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>d2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>expected</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>JPAService</name></type> <name>jpaService</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>jpaService</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name></type> <name>actionGetCmd</name> <init>= <expr><operator>new</operator> <call><name>CoordJobGetActionIdsForDateRangeJPAExecutor</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name>d1</name></expr></argument>, <argument><expr><name>d2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>actionIds</name> <init>= <expr><call><name><name>jpaService</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><name>actionGetCmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>actionIds</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestHASLAService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestHASLAService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5aa911b24</literal><operator>..</operator><literal type="number">795db3731</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestHASLAService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestHASLAService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>AppType</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorJobBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowJobBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowJob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>JobEvent</name><operator>.</operator><name>EventStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name><operator>.</operator><name>SLAStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>event</name><operator>.</operator><name>EventQueue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>TestSLAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>listener</name><operator>.</operator><name>SLAEventListener</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>ZKXTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>JobUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>workflow</name><operator>.</operator><name>WorkflowInstance</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestHASLAService</name> <super_list><extends>extends <super><name>ZKXTestCase</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">358</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">363</literal></expr><operator>,</operator><expr><literal type="number">72</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHASLAService</name> extends <name>ZKXTestCase</name> <block>{
         }</block></expr></expr_stmt>
     }</block></class>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSLAAlertCommandWithHA</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

        <comment type="line">//Test SLA ALERT commands in HA mode.</comment>
        <comment type="line">//slaCalcMem1 is for server 1 and slaCalcMem2 is for server2</comment>

        <decl_stmt><decl><type><name>String</name></type> <name>id</name> <init>= <expr><literal type="string">"0000001-130521183438837-oozie-test-C@1"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>expectedStartTS</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// 2 hrs passed</comment>
        <decl_stmt><decl><type><name>Date</name></type> <name>expectedEndTS1</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// 1 hour ahead</comment>
        <comment type="line">// Coord Action of jobs 1-4 not started yet</comment>
        <expr_stmt><expr><call><name>createDBEntry</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>expectedStartTS</name></expr></argument>, <argument><expr><name>expectedEndTS1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>SLAService</name></type> <name>slas</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SLACalculatorMemory</name></type> <name>slaCalcMem1</name> <init>= <expr><operator>(</operator><name>SLACalculatorMemory</name><operator>)</operator> <call><name><name>slas</name><operator>.</operator><name>getSLACalculator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>slaCalcMem1</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>idList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>idList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>slaCalcMem1</name><operator>.</operator><name>disableAlert</name></name><argument_list>(<argument><expr><name>idList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>slaCalcMem1</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSLAConfigMap</name><argument_list>()</argument_list></call><operator>.</operator><call><name>containsKey</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>DummyZKOozie</name></type> <name>dummyOozie_1</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <comment type="line">// start another dummy oozie instance (dummy sla and event handler services)</comment>
            <expr_stmt><expr><name>dummyOozie_1</name> <operator>=</operator> <operator>new</operator> <call><name>DummyZKOozie</name><argument_list>(<argument><expr><literal type="string">"a"</literal></expr></argument>, <argument><expr><literal type="string">"http://blah"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>DummySLACalculatorMemory</name></type> <name>slaCalcMem2</name> <init>= <expr><operator>new</operator> <call><name>DummySLACalculatorMemory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>EventHandlerService</name></type> <name>dummyEhs</name> <init>= <expr><operator>new</operator> <call><name>EventHandlerService</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>setEventHandlerService</name></name><argument_list>(<argument><expr><name>dummyEhs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line">// So that job sla updated doesn't run automatically</comment>
            <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setInt</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>CONF_SLA_CHECK_INTERVAL</name></name></expr></argument>, <argument><expr><literal type="number">100000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setInt</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>CONF_SLA_CHECK_INITIAL_DELAY</name></name></expr></argument>, <argument><expr><literal type="number">100000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>dummyEhs</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>updateAllSlaStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSLAConfigMap</name><argument_list>()</argument_list></call><operator>.</operator><call><name>containsKey</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>newParams</name> <init>= <expr><name><name>RestConstants</name><operator>.</operator><name>SLA_MAX_DURATION</name></name> <operator>+</operator> <literal type="string">"=5"</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>jobIdsSLAPair</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>jobIdsSLAPair</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><call><name><name>JobUtils</name><operator>.</operator><name>parseChangeValue</name></name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>slaCalcMem1</name><operator>.</operator><name>changeDefinition</name></name><argument_list>(<argument><expr><name>jobIdsSLAPair</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>slaCalcMem1</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedDuration</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">5</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line">//Before update, default is 10.</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedDuration</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">10</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>updateAllSlaStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedDuration</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">5</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name>newParams</name> <operator>=</operator> <name><name>RestConstants</name><operator>.</operator><name>SLA_MAX_DURATION</name></name> <operator>+</operator> <literal type="string">"=15"</literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>jobIdsSLAPair</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>jobIdsSLAPair</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><call><name><name>JobUtils</name><operator>.</operator><name>parseChangeValue</name></name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>slaCalcMem1</name><operator>.</operator><name>changeDefinition</name></name><argument_list>(<argument><expr><name>jobIdsSLAPair</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line">// Before update</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedDuration</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">5</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>updateAllSlaStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>slaCalcMem2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExpectedDuration</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">15</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>
        <finally>finally <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>dummyOozie_1</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>dummyOozie_1</name><operator>.</operator><name>teardown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></finally></try>
    </block_content>}</block></function>

     <function><type><specifier>private</specifier> <name>void</name></type> <name>createDBEntry</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>actionId</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>expectedStartTS</name></decl></parameter>, <parameter><decl><type><name>Date</name></type> <name>expectedEndTS</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>JsonBean</name></argument>&gt;</argument_list></name></type> <name>insertList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>JsonBean</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>CoordinatorActionBean</name></type> <name>coordAction</name> <init>= <expr><operator>new</operator> <call><name>CoordinatorActionBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>TestV2SLAServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>TestV2SLAServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5f51b22da</literal><operator>..</operator><literal type="number">1886f4833</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>TestV2SLAServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>TestV2SLAServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonTags</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>SLASummaryBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONArray</name></name>;</import>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLACalculatorMemory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLACalculatorMemory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c70ef794e</name><operator>..</operator><literal type="number">432efef69</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLACalculatorMemory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLACalculatorMemory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Level</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">28</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">36</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>AppType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>CoordinatorActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowActionBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>WorkflowJobBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>OozieClient</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowJob</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>CoordinatorAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>JobEvent</name><operator>.</operator><name>EventStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>event</name><operator>.</operator><name>SLAEvent</name><operator>.</operator><name>SLAStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>JsonBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>rest</name><operator>.</operator><name>RestConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name><operator>.</operator><name>UpdateEntry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionInsertJPAExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name><operator>.</operator><name>CoordActionQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLARegistrationQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>SLARegQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLASummaryQueryExecutor</name><operator>.</operator><name>SLASummaryQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>BatchQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLASummaryQueryExecutor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>SLASummaryQueryExecutor</name><operator>.</operator><name>SLASummaryQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowActionInsertJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowJobQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>WorkflowJobQueryExecutor</name><operator>.</operator><name>WorkflowJobQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>ConfigurationService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>EventHandlerService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>JPAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>service</name><operator>.</operator><name>SLAService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XDataTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>DateUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>JobUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>workflow</name><operator>.</operator><name>WorkflowInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>protected</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>Services</name> <name>services</name> <operator>=</operator> <operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <call><name><name>services</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>Services</name><operator>.</operator><name>CONF_SERVICE_EXT_CLASSES</name></name></expr></argument>, <argument><expr><literal type="string">"org.apache.oozie.service.EventHandlerService,"</literal>
                 <operator>+</operator> <literal type="string">"org.apache.oozie.sla.service.SLAService"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>CONF_SLA_CHECK_INTERVAL</name></name></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
         <expr><name>jpaService</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     }</block>
@@ <operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     @<expr><name>Test</name>
     <specifier>public</specifier> <name>void</name> <call><name>testLoadOnRestart</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean1</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><literal type="string">"job-1"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>String</name> <name>jobId1</name> <operator>=</operator> <call><name><name>slaRegBean1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean2</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><literal type="string">"job-2"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">156</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">167</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>BatchQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeBatchInsertUpdateDelete</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>updateList</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">201</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">212</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testWorkflowJobSLAStatusOnRestart</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>SimpleDateFormat</name> <name>sdf</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy-mm-dd"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean1</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><literal type="string">"job-1"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>String</name> <name>jobId1</name> <operator>=</operator> <call><name><name>slaRegBean1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>slaRegBean1</name><operator>.</operator><name>setExpectedEnd</name></name><argument_list>(<argument><expr><call><name><name>sdf</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2013-03-07"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">228</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">239</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>WorkflowJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>insert</name><argument_list>(<argument><expr><name>wjb</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">// As job succeeded, it should not be in memory</comment>
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">257</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">268</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_ALL</name></name></expr></argument>, <argument><expr><name>slaSummaryBean</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>slaSummary</name> <operator>=</operator> <call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>GET_SLA_SUMMARY</name></name></expr></argument>, <argument><expr><name>jobId1</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">281</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">292</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_ALL</name></name></expr></argument>, <argument><expr><name>slaSummaryBean</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLACalcStatus</name> <name>calc</name> <operator>=</operator> <call><name><name>slaCalcMemory</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>jobId1</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">297</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">308</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testWorkflowActionSLAStatusOnRestart</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>SimpleDateFormat</name> <name>sdf</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy-mm-dd"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean1</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><literal type="string">"job@1"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_ACTION</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>String</name> <name>jobId1</name> <operator>=</operator> <call><name><name>slaRegBean1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>slaRegBean1</name><operator>.</operator><name>setExpectedEnd</name></name><argument_list>(<argument><expr><call><name><name>sdf</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2013-03-07"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">322</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">333</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>jpaService</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><name>wfInsertCmd</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">// As job succeeded, it should not be in memory</comment>
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">343</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">354</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testCoordinatorActionSLAStatusOnRestart</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>SimpleDateFormat</name> <name>sdf</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy-mm-dd"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean1</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><literal type="string">"job@1"</literal></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>String</name> <name>jobId1</name> <operator>=</operator> <call><name><name>slaRegBean1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>slaRegBean1</name><operator>.</operator><name>setExpectedEnd</name></name><argument_list>(<argument><expr><call><name><name>sdf</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><literal type="string">"2013-03-07"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">373</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">384</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>WorkflowJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>insert</name><argument_list>(<argument><expr><name>wjb</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">// As job succeeded, it should not be in memory</comment>
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">394</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">405</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testSLAEvents1</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>EventHandlerService</name> <name>ehs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowJobBean</name> <name>job1</name> <operator>=</operator> <call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>slaRegBean</name><operator>.</operator><name>setExpectedStart</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>; <comment type="line">// 1 hour</comment>
@@ <expr><operator>-</operator><literal type="number">445</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">456</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testSLAEvents2</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>EventHandlerService</name> <name>ehs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>WorkflowJobBean</name> <name>job1</name> <operator>=</operator> <call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">505</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">516</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
         <comment type="line">// test start-miss</comment>
         <expr><name>EventHandlerService</name> <name>ehs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowJobBean</name> <name>job1</name> <operator>=</operator> <call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>Date</name> <name>startTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// 1 hour back</comment>
@@ <expr><operator>-</operator><literal type="number">534</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">545</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testDuplicateEndMiss</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>EventHandlerService</name> <name>ehs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowJobBean</name> <name>job1</name> <operator>=</operator> <call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>Date</name> <name>startTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// 1 hour ahead</comment>
@@ <expr><operator>-</operator><literal type="number">577</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">588</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testSLAHistorySet</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
             <expr><name>EventHandlerService</name> <name>ehs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
             <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
            <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
             <expr><name>WorkflowJobBean</name> <name>job1</name> <operator>=</operator> <call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr>;
             <expr><name>SLARegistrationBean</name> <name>slaRegBean</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
             <expr><name>Date</name> <name>startTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">612</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">623</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>void</name> <call><name>testHistoryPurge</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name><block>{
        <expr><name>EventHandlerService</name> <name>ehs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name>SLACalculatorMemory</name> <name>slaCalcMemory</name> <operator>=</operator> <operator>new</operator> <call><name>SLACalculatorMemory</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalcMemory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowJobBean</name> <name>job1</name> <operator>=</operator> <call><name>addRecordToWfJobTable</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>SLARegistrationBean</name> <name>slaRegBean</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><call><name><name>job1</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>Date</name> <name>startTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">662</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">672</literal></expr>,<expr><literal type="number">75</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLACalculatorMemory</name> extends <name>XDataTestCase</name> <block>{
 
     }</block>
 
    @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>void</name> <call><name>testDisablingAlertsEvents</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>SLAService</name> <name>slaService</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>SLAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <expr><name>EventHandlerService</name> <name>ehs</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><name>SLACalculator</name> <name>slaCalculator</name> <operator>=</operator> <call><name><name>slaService</name><operator>.</operator><name>getSLACalculator</name></name><argument_list>()</argument_list></call></expr>;
        <comment type="line">// create dummy sla records and coord action records</comment>
        <expr><name>String</name> <name>id1</name> <operator>=</operator> <call><name>_setupSlaMap</name><argument_list>(<argument><expr><name>slaCalculator</name></expr></argument>, <argument><expr><literal type="string">"00020-1234567-wrkf-C"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>String</name> <name>id2</name> <operator>=</operator> <call><name>_setupSlaMap</name><argument_list>(<argument><expr><name>slaCalculator</name></expr></argument>, <argument><expr><literal type="string">"00020-1234567-wrkf-C"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;

        <expr><name>SLACalcStatus</name> <name>slaCalcObj1</name> <operator>=</operator> <call><name><name>slaCalculator</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id1</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>slaCalcObj1</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>containsKey</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>SLACalcStatus</name> <name>slaCalcObj2</name> <operator>=</operator> <call><name><name>slaCalculator</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id2</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>slaCalcObj2</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>containsKey</name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalculator</name><operator>.</operator><name>updateAllSlaStatus</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>ehs</name><operator>.</operator><name>getEventQueue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;

        <comment type="line">// check that SLACalculator sends no event</comment>
        <expr><call><name><name>ehs</name><operator>.</operator><name>getEventQueue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>clear</name><argument_list>()</argument_list></call></expr>;
        <expr><name>SLASummaryBean</name> <name>persistentSla</name> <operator>=</operator> <operator>new</operator> <call><name>SLASummaryBean</name><argument_list>(<argument><expr><name>slaCalcObj1</name></expr></argument>)</argument_list></call></expr>;
        <comment type="line">// reset eventProcessed for the sla calc objects</comment>
        <expr><call><name><name>persistentSla</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_EVENTPROCESSED</name></name></expr></argument>,
                <argument><expr><name>persistentSla</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>persistentSla</name> <operator>=</operator> <operator>new</operator> <call><name>SLASummaryBean</name><argument_list>(<argument><expr><name>slaCalcObj2</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>persistentSla</name><operator>.</operator><name>setEventProcessed</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>SLASummaryQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>SLASummaryQuery</name><operator>.</operator><name>UPDATE_SLA_SUMMARY_EVENTPROCESSED</name></name></expr></argument>,
                <argument><expr><name>persistentSla</name></expr></argument>)</argument_list></call></expr>;
        <comment type="line">// CASE I : list of sla ids, no new params</comment>
        <expr><call><name><name>slaService</name><operator>.</operator><name>enableChildJobAlert</name></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>id1</name></expr></argument>, <argument><expr><name>id2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalculator</name><operator>.</operator><name>updateAllSlaStatus</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>ehs</name><operator>.</operator><name>getEventQueue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <comment type="line">// CASE II : ALL</comment>
        <expr><call><name>_setupSlaMap</name><argument_list>(<argument><expr><name>slaCalculator</name></expr></argument>, <argument><expr><literal type="string">"00020-1234567-wrkf-C"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_setupSlaMap</name><argument_list>(<argument><expr><name>slaCalculator</name></expr></argument>, <argument><expr><literal type="string">"00020-1234567-wrkf-C"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalculator</name><operator>.</operator><name>enableChildJobAlert</name></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"00020-1234567-wrkf-C"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalculator</name><operator>.</operator><name>updateAllSlaStatus</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>ehs</name><operator>.</operator><name>getEventQueue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <comment type="line">// CASE III : resume w/ new params</comment>
        <expr><name>final</name> <name>String</name> <name>id5</name> <operator>=</operator> <call><name>_setupSlaMap</name><argument_list>(<argument><expr><name>slaCalculator</name></expr></argument>, <argument><expr><literal type="string">"00020-1234567-wrkf-C"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>Date</name> <name>now</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>now</name><operator>.</operator><name>setTime</name></name><argument_list>(<argument><expr><call><name><name>now</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">10</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
       <expr><name>final</name>  <name>String</name> <name>newParams</name> <operator>=</operator> <name><name>RestConstants</name><operator>.</operator><name>SLA_NOMINAL_TIME</name></name> <operator>+</operator> <literal type="string">"="</literal> <operator>+</operator> <call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>now</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">";"</literal>
                <operator>+</operator> <name><name>RestConstants</name><operator>.</operator><name>SLA_SHOULD_END</name></name> <operator>+</operator> <literal type="string">"=5"</literal></expr>;
        <expr><call><name><name>slaCalculator</name><operator>.</operator><name>changeDefinition</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list><block>{
            <block>{<block_content>
            <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>Pair</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>id5</name></expr></argument>, <argument><expr><call><name><name>JobUtils</name><operator>.</operator><name>parseChangeValue</name></name><argument_list>(<argument><expr><name>newParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/>}</block_content>
        }</block>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr>

        <call><name><name>slaCalculator</name><operator>.</operator><name>updateAllSlaStatus</name></name><argument_list>()</argument_list></call></block></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>ehs</name><operator>.</operator><name>getEventQueue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;

    }</block>

    <specifier>private</specifier> <name>String</name> <call><name>_setupSlaMap</name><argument_list>(<argument><expr><name>SLACalculator</name> <name>slaCalculator</name></expr></argument>, <argument><expr><name>String</name> <name>id</name></expr></argument>, <argument><expr><name>int</name> <name>actionNum</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>CoordinatorActionBean</name> <name>action</name> <operator>=</operator> <call><name>addRecordToCoordActionTable</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>actionNum</name></expr></argument>,
                <argument><expr><name><name>CoordinatorAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>TIMEDOUT</name></name></expr></argument>, <argument><expr><literal type="string">"coord-action-get.xml"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <expr><call><name><name>action</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>CoordActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>CoordActionQuery</name><operator>.</operator><name>UPDATE_COORD_ACTION_FOR_START</name></name></expr></argument>, <argument><expr><name>action</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>SLARegistrationBean</name> <name>slaRegBean</name> <operator>=</operator> <call><name>_createSLARegistration</name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><name>Date</name> <name>startTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaRegBean</name><operator>.</operator><name>setExpectedStart</name></name><argument_list>(<argument><expr><name>startTime</name></expr></argument>)</argument_list></call></expr>; <comment type="line">// 2 hours back</comment>
        <expr><call><name><name>slaRegBean</name><operator>.</operator><name>setExpectedDuration</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaRegBean</name><operator>.</operator><name>setExpectedEnd</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">3600</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>; <comment type="line">// 1 hr back</comment>
        <expr><call><name><name>slaRegBean</name><operator>.</operator><name>setParentId</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>slaCalculator</name><operator>.</operator><name>addRegistration</name></name><argument_list>(<argument><expr><call><name><name>slaRegBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>slaRegBean</name></expr></argument>)</argument_list></call></expr>;
        <return>return <expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr>
    }</block></expr>

 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLAEventGeneration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLAEventGeneration</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ea82baaf6</name><operator>..</operator><literal type="number">7a710c28c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLAEventGeneration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLAEventGeneration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">112</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">112</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLAEventGeneration</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>CONF_WORKER_INTERVAL</name></name></expr></argument>, <argument><expr><literal type="number">10000</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>CONF_WORKER_THREADS</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>CONF_BATCH_SIZE</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>SLA_DISABLE_ALERT_OLDER_THAN</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>services</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;
         <expr><name>jpa</name> <operator>=</operator> <call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>JPAService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>ehs</name> <operator>=</operator> <call><name><name>services</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>EventHandlerService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">409</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">410</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLAEventGeneration</name> extends <name>XDataTestCase</name> <block>{
         <expr><name>Date</name> <name>nominal</name> <operator>=</operator> <call><name><name>cal</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr>;
         <expr><name>String</name> <name>nominalTime</name> <operator>=</operator> <call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><name>nominal</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"nominal_time"</literal></expr></argument>, <argument><expr><name>nominalTime</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"start"</literal></expr></argument>, <argument><expr><literal type="string">"2009-01-02T08:01Z"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"frequency"</literal></expr></argument>, <argument><expr><literal type="string">"coord:days(1)"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"end"</literal></expr></argument>, <argument><expr><literal type="string">"2009-01-03T08:00Z"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>cal</name><operator>.</operator><name>setTime</name></name><argument_list>(<argument><expr><name>nominal</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>cal</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>Calendar</name><operator>.</operator><name>MINUTE</name></name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// as per the sla xml</comment>
         <expr><name>String</name> <name>expectedStart</name> <operator>=</operator> <call><name><name>DateUtils</name><operator>.</operator><name>formatDateOozieTZ</name></name><argument_list>(<argument><expr><call><name><name>cal</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLARegistrationGetJPAExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLARegistrationGetJPAExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fe9002ce1</name><operator>..</operator><name>d56e06af7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLARegistrationGetJPAExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>sla</name><operator>/</operator><name><name>TestSLARegistrationGetJPAExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">61</literal></expr>,<expr><literal type="number">27</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLARegistrationGetJPAExecutor</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>AppType</name><operator>.</operator><name>WORKFLOW_JOB</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getAppType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>current</name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getExpectedStart</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getSlaConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"END_MISS"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getAlertEvents</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"alert@example.com"</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getAlertContact</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>testSLARegistrationBulkConfigMap</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>Date</name> <name>current</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
        <expr><name>String</name> <name>jobId</name> <operator>=</operator> <literal type="string">"0000000-"</literal> <operator>+</operator> <call><name><name>current</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-TestSLARegGetJPAExecutor-C@1"</literal></expr>;
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>jobIds</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>jobIds</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_addRecordToSLARegistrationTable</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"END_MISS"</literal></expr></argument>,
                <argument><expr><literal type="string">"alert@example.com"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>jobId</name> <operator>=</operator> <literal type="string">"0000000-"</literal> <operator>+</operator> <call><name><name>current</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-TestSLARegGetJPAExecutor-C@2"</literal></expr>;
        <expr><call><name><name>jobIds</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>_addRecordToSLARegistrationTable</name><argument_list>(<argument><expr><name>jobId</name></expr></argument>, <argument><expr><name><name>AppType</name><operator>.</operator><name>COORDINATOR_ACTION</name></name></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"END_MISS"</literal></expr></argument>,
                <argument><expr><literal type="string">"alert@example.com"</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>SLARegistrationBean</name></argument>&gt;</argument_list></name> <name>bean</name> <operator>=</operator> <call><name><name>SLARegistrationQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getList</name><argument_list>(
                <argument><expr><name><name>SLARegQuery</name><operator>.</operator><name>GET_SLA_CONFIGS</name></name></expr></argument>, <argument><expr><name>jobIds</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    }</block>

     <specifier>private</specifier> <name>void</name> <call><name>_addRecordToSLARegistrationTable</name><argument_list>(<argument><expr><name>String</name> <name>jobId</name></expr></argument>, <argument><expr><name>AppType</name> <name>appType</name></expr></argument>, <argument><expr><name>Date</name> <name>start</name></expr></argument>, <argument><expr><name>Date</name> <name>end</name></expr></argument>,
             <argument><expr><name>String</name> <name>alertEvent</name></expr></argument>, <argument><expr><name>String</name> <name>alertContact</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><name>SLARegistrationBean</name> <name>reg</name> <operator>=</operator> <operator>new</operator> <call><name>SLARegistrationBean</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
@@ <expr><operator>-</operator><literal type="number">92</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">108</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSLARegistrationGetJPAExecutor</name> extends <name>XDataTestCase</name> <block>{
         <expr><name>String</name> <name>slaConfig</name> <operator>=</operator> <literal type="string">"{alert_contact=hadoopqa@oozie.com},{alert_events=START_MISS,DURATION_MISS,END_MISS},"</literal></expr>;
         <expr><name>SLARegistrationBean</name> <name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>SLARegistrationBean</name><argument_list>()</argument_list></call></expr>;
         <expr><call><name><name>bean</name><operator>.</operator><name>setSlaConfig</name></name><argument_list>(<argument><expr><name>slaConfig</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getSlaConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getSLAConfigMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getAlertEvents</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"START_MISS,DURATION_MISS,END_MISS"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getAlertContact</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"hadoopqa@oozie.com"</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>coord</name><operator>-</operator><name>action</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>coord</name><operator>-</operator><name>action</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>xml</name></name>
<name>index</name> <literal type="number">8b301fd1c</literal><operator>..</operator><name>f3f1bc09c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>coord</name><operator>-</operator><name>action</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>coord</name><operator>-</operator><name>action</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr>,<expr><literal type="number">7</literal> @@
   <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
 --<operator>&gt;</operator>
 <operator>&lt;</operator><name>coordinator</name><operator>-</operator><name>app</name> <name>name</name><operator>=</operator><literal type="string">"test-coord-sla"</literal> <name>frequency</name><operator>=</operator><literal type="string">"${coord:days(1)}"</literal>
                 <name>start</name><operator>=</operator><literal type="string">"2009-01-02T08:01Z"</literal> <name>end</name><operator>=</operator><literal type="string">"2009-01-03T08:00Z"</literal>
                 <name>start</name><operator>=</operator><literal type="string">"${start}"</literal> <name>end</name><operator>=</operator><literal type="string">"${end}"</literal>
                  <name>timezone</name><operator>=</operator><literal type="string">"America/Los_Angeles"</literal>
                  <name>xmlns</name><operator>=</operator><literal type="string">"uri:oozie:coordinator:0.4"</literal>
                  <name>xmlns</name><operator>:</operator><name>sla</name><operator>=</operator><literal type="string">"uri:oozie:sla:0.2"</literal><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_CommandLineTool</name><operator>.</operator><name>twiki</name></name> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_CommandLineTool</name><operator>.</operator><name>twiki</name></name>
<name>index</name> <literal type="number">0f1768b33</literal><operator>..</operator><name>bd53bf942</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_CommandLineTool</name><operator>.</operator><name>twiki</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_CommandLineTool</name><operator>.</operator><name>twiki</name></name>
@@ <operator>-</operator><literal type="number">91</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">91</literal></expr>,<expr><literal type="number">10</literal> @@ <name>usage</name><operator>:</operator>
                 <operator>-</operator><name><name>value</name> <argument_list type="generic">&lt;<argument><name>arg</name></argument>&gt;</argument_list></name>          <operator>new</operator> <name>endtime</name><operator>/</operator><name>concurrency</name><operator>/</operator><name>pausetime</name> <name>value</name></expr> <for>for changing a
                                       coordinator job
                 -verbose              verbose mode
.
                -sladisable           disables sla alerts for the job and its children
                -slaenable            enables sla alerts for the job and its children
                -slachange            Update sla param for jobs<operator>,</operator> <expr_stmt><expr><name>supported</name> <name>param</name> <name>are</name> <name>should</name><operator>-</operator><name>start</name></expr><operator>,</operator> <expr><name>should</name><operator>-</operator><name>end</name> <name>and</name> <name>max</name><operator>-</operator><name>duration</name>

       <name>oozie</name> <name><name>jobs</name> <argument_list type="generic">&lt;<argument><name>OPTIONS</name></argument>&gt;</argument_list></name> <operator>:</operator> <name>jobs</name> <name>status</name>
                  <operator>-</operator><name><name>auth</name> <argument_list type="generic">&lt;<argument><name>arg</name></argument>&gt;</argument_list></name>          <name>select</name> <name>authentication</name> <name><name>type</name> <index>[<expr><name>SIMPLE</name><operator>|</operator><name>KERBEROS</name></expr>]</index></name>
                  <operator>-</operator><name><name>doas</name> <argument_list type="generic">&lt;<argument><name>arg</name></argument>&gt;</argument_list></name>          <name>doAs</name> <name>user</name></expr><operator>,</operator> <expr><name>impersonates</name> <name>as</name> <name>the</name> <name>specified</name> <name><name>user</name><operator>.</operator></name>
@@ <operator>-</operator><literal type="number">889</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">892</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <name>All</name> <name>other</name> <name>arguments</name> <name>are</name> <name>optional</name><operator>:</operator>
    <operator>*</operator> <operator>=</operator><name>interval</name><operator>=</operator>  <name>allows</name> <name>specifying</name> <name>the</name> <name>polling</name> <name>interval</name> <name>in</name> <call><name>minutes</name> <argument_list>(<argument><expr>default <name>is</name> <literal type="number">5</literal></expr></argument>)</argument_list></call>
    <operator>*</operator> <operator>=</operator><name>timeout</name><operator>=</operator> <name>allows</name> <name>specifying</name> <name>the</name> <name>timeout</name> <name>in</name> <call><name>minutes</name> <argument_list>(<argument><expr>default <name>is</name> <literal type="number">30</literal> <name>minutes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></for> <name>negative</name> <name>values</name> <name>indicate</name> <name>no</name> <name>timeout</name>
 
<operator>--</operator><operator>-</operator><operator>++</operator><operator>+</operator> <name>Changing</name> <name>job</name> <name>SLA</name> <name>definition</name> <name>and</name> <name>alerting</name>
   <operator>*</operator> <name>slaenable</name> <name>command</name> <name>can</name> <name>be</name> <name>used</name> <name>to</name> <name>enable</name> <name>job</name> <name>sla</name> <name><name>alerts</name><operator>.</operator></name>
   * <name>sladisable</name> <name>command</name> <name>can</name> <name>be</name> <name>used</name> <name>to</name> <name>disable</name> <name>job</name> <name>sla</name> <name><name>alerts</name><operator>.</operator></name>
   * <name>slachange</name> <name>command</name> <name>can</name> <name>be</name> <name>used</name> <name>to</name> <name>change</name> <name>sla</name> <name>job</name> <name><name>definition</name><operator>.</operator></name>
   * <name>Supported</name> <name>parameters</name></block></expr> <for>for sla change command are should-start<operator>,</operator> <expr_stmt><expr><name>should</name><operator>-</operator><name>end</name> <name>and</name> <name>max</name><operator>-</operator><name><name>duration</name><operator>.</operator> <name>Please</name></name> <name>specify</name> <name>the</name> <name>value</name> <name>in</name> <name>single</name> <name>quotes</name> <name>instead</name> <name>of</name> <name>double</name> <name>quotes</name> <name>in</name> <name>command</name> <name>line</name> <name>to</name> <name>avoid</name> <name>bash</name> <name>interpreting</name> <name>braces</name> <name>in</name> <name>EL</name> <name>functions</name> <name>and</name> <name>causing</name> <name><name>error</name><operator>.</operator></name>
   * <name>All</name> <name>sla</name> <name>commands</name> <name>takes</name> <operator>-</operator><name>action</name> <name>or</name> <operator>-</operator><name>date</name> <name><name>parameter</name><operator>.</operator> <name>For</name></name> <name>bundle</name> <name>jobs</name> <name>additional</name> <operator>-</operator><call><name>coordinator</name> <argument_list>(<argument><expr><name>coord_name</name><operator>/</operator><name>id</name></expr></argument>)</argument_list></call> <name>parameter</name> <name>can</name> <name>be</name> <name><name>passed</name><operator>.</operator> <name>Sla</name></name> <name>change</name> <name>command</name> <name>need</name> <name>extra</name> <name>parameter</name> <operator>-</operator><name>value</name> <name>to</name> <name>specify</name> <operator>new</operator> <name>sla</name> <name><name>definition</name><operator>.</operator></name>
   * <name>Sla</name> <name>commands</name> <name>without</name> <operator>-</operator><name>action</name> <name>or</name> <operator>-</operator><name>date</name> <name>parameter</name> <name>is</name> <name>applied</name> <name>to</name> <name>all</name> <name>non</name> <name>terminated</name> <name>actions</name> <name>and</name> <name>all</name> <name>future</name> <name><name>actions</name><operator>.</operator></name>
   * <name>Sla</name> <name>commands</name> <name>with</name> <operator>-</operator><name>action</name> <name>or</name> <operator>-</operator><name>date</name> <name>parameter</name> <name>will</name> <name>be</name> <name>applied</name> <name>to</name> <name>only</name> <name>non</name> <name>terminated</name> <name><name>actions</name><operator>.</operator>

  <name>Eg</name><operator>.</operator></name>
  &lt;<name>verbatim</name><operator>&gt;</operator>
  <name>$oozie</name> <name>job</name> <operator>-</operator><name><name><name>slaenable</name> <argument_list type="generic">&lt;<argument><name>coord_Job_id</name></argument>&gt;</argument_list></name> <index>[<expr><operator>-</operator><name>action</name> <literal type="number">1</literal></expr><operator>,</operator><literal type="number">3</literal><operator>-</operator><literal type="number">4</literal><operator>,</operator><literal type="number">7</literal><operator>-</operator><literal type="number">40</literal>]</index> <index>[<expr><operator>-</operator><name>date</name> <literal type="number">2009</literal><operator>-</operator><literal type="number">01</literal><operator>-</operator><literal type="number">01T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">05</literal><operator>-</operator><literal type="number">31T23</literal><operator>:</operator><literal type="number">59Z</literal></expr><operator>,</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">11</literal><operator>-</operator><literal type="number">10T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">12</literal><operator>-</operator><literal type="number">31T22</literal><operator>:</operator><literal type="number">00Z</literal>]</index></name>
  <name>$oozie</name> <name>job</name> <operator>-</operator><name><name><name>sladisable</name> <argument_list type="generic">&lt;<argument><name>coord_Job_id</name></argument>&gt;</argument_list></name> <index>[<expr><operator>-</operator><name>action</name> <literal type="number">1</literal></expr><operator>,</operator><literal type="number">3</literal><operator>-</operator><literal type="number">4</literal><operator>,</operator><literal type="number">7</literal><operator>-</operator><literal type="number">40</literal>]</index> <index>[<expr><operator>-</operator><name>date</name> <literal type="number">2009</literal><operator>-</operator><literal type="number">01</literal><operator>-</operator><literal type="number">01T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">05</literal><operator>-</operator><literal type="number">31T23</literal><operator>:</operator><literal type="number">59Z</literal></expr><operator>,</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">11</literal><operator>-</operator><literal type="number">10T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">12</literal><operator>-</operator><literal type="number">31T22</literal><operator>:</operator><literal type="number">00Z</literal>]</index></name>
  <name>$oozie</name> <name>job</name> <operator>-</operator><name><name><name>slachange</name> <argument_list type="generic">&lt;<argument><name>coord_Job_id</name></argument>&gt;</argument_list></name> <index>[<expr><operator>-</operator><name>action</name> <literal type="number">1</literal></expr><operator>,</operator><literal type="number">3</literal><operator>-</operator><literal type="number">4</literal><operator>,</operator><literal type="number">7</literal><operator>-</operator><literal type="number">40</literal>]</index> <index>[<expr><operator>-</operator><name>date</name> <literal type="number">2009</literal><operator>-</operator><literal type="number">01</literal><operator>-</operator><literal type="number">01T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">05</literal><operator>-</operator><literal type="number">31T23</literal><operator>:</operator><literal type="number">59Z</literal></expr><operator>,</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">11</literal><operator>-</operator><literal type="number">10T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">12</literal><operator>-</operator><literal type="number">31T22</literal><operator>:</operator><literal type="number">00Z</literal>]</index></name> <operator>-</operator><name>value</name> <literal type="char">'sla-max-duration=${10 * MINUTES};sla-should-end=${30 * MINUTES};sla-max-duration=${30 * MINUTES}'</literal>
  <name>$oozie</name> <name>job</name> <operator>-</operator><name><name><name>slaenable</name> <argument_list type="generic">&lt;<argument><name>bundle_job_id</name></argument>&gt;</argument_list></name> <index>[<expr><operator>-</operator><name>action</name> <literal type="number">1</literal></expr><operator>,</operator><literal type="number">3</literal><operator>-</operator><literal type="number">4</literal><operator>,</operator><literal type="number">7</literal><operator>-</operator><literal type="number">40</literal>]</index> <index>[<expr><operator>-</operator><name>date</name> <literal type="number">2009</literal><operator>-</operator><literal type="number">01</literal><operator>-</operator><literal type="number">01T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">05</literal><operator>-</operator><literal type="number">31T23</literal><operator>:</operator><literal type="number">59Z</literal></expr><operator>,</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">11</literal><operator>-</operator><literal type="number">10T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">12</literal><operator>-</operator><literal type="number">31T22</literal><operator>:</operator><literal type="number">00Z</literal>]</index> <index>[<expr><operator>-</operator><name>coordinator</name> <operator>&lt;</operator><name>List_of_coord_names</name><operator>/</operator><name>ids</name></expr>]</index></name>
  <operator>&lt;</operator><operator>/</operator><name>verbatim</name><operator>&gt;</operator>

 <operator>--</operator><operator>-</operator><operator>++</operator> <name>Jobs</name> <name>Operations</name>
 
 <operator>--</operator><operator>-</operator><operator>++</operator><operator>+</operator> <name>Checking</name> <name>the</name> <name>Status</name> <name>of</name> <name>multiple</name> <name>Workflow</name> <name>Jobs</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SLAMonitoring</name><operator>.</operator><name>twiki</name></name> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SLAMonitoring</name><operator>.</operator><name>twiki</name></name>
<name>index</name> <name>acf8ac16f</name><operator>..</operator><literal type="number">1413945cf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SLAMonitoring</name><operator>.</operator><name>twiki</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SLAMonitoring</name><operator>.</operator><name>twiki</name></name>
@@ <operator>-</operator><literal type="number">294</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">294</literal></expr><operator>,</operator><expr><literal type="number">52</literal> @@ <name>SLA</name> <name>Details</name><operator>:</operator>
   <name>Actual</name> <call><name>Duration</name> <argument_list>(<argument><expr><name>in</name> <name>mins</name></expr></argument>)</argument_list></call> <operator>-</operator> <operator>-</operator><literal type="number">1</literal>
 <operator>&lt;</operator><operator>/</operator><name>verbatim</name><operator>&gt;</operator>
 
<operator>--</operator><operator>-</operator><operator>++</operator><operator>+</operator> <name>Changing</name> <name>job</name> <name>SLA</name> <name>definition</name> <name>and</name> <name>alerting</name>
<name>Following</name> <name>properties</name> <name>can</name> <name>be</name> <name>specified</name> <name>in</name> <name><name>job</name><operator>.</operator><name>xml</name></name> <name>to</name> <name>enable</name><operator>/</operator><name>disable</name> <name>SLA</name> <name><name>alerts</name><operator>.</operator></name>

=<name><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>disable</name><operator>.</operator><name>alerts</name><operator>.</operator><name>older</name><operator>.</operator><name>than</name></name><operator>=</operator> <name>this</name> <name>property</name> <name>can</name> <name>be</name> <name>specified</name> <name>in</name> <name>hours</name></expr><operator>,</operator> <expr><name>the</name> <name>SLA</name> <name>notification</name></expr></expr_stmt></for> <for>for coord actions will be disabled whose nominal is time older then this value. Default is 24 hours.
&lt;verbatim&gt;
&lt;property&gt;
    &lt;name&gt;oozie.sla.disable.alerts.older.than&lt;/name&gt;
    &lt;value&gt;12&lt;/value&gt;
&lt;/property&gt;
&lt;/verbatim&gt;

=oozie.sla.disable.alerts= List of coord actions to be disabled. Value can be specified as list of coord actions or date range.
&lt;verbatim&gt;
&lt;property&gt;
    &lt;name&gt;oozie.sla.disable.alerts&lt;/name&gt;
    &lt;value&gt;1<operator>,</operator><expr_stmt><expr><literal type="number">3</literal><operator>-</operator><literal type="number">4</literal></expr><operator>,</operator><expr><literal type="number">7</literal><operator>-</operator><literal type="number">10</literal><operator>&lt;</operator><operator>/</operator><name>value</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>property</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>verbatim</name><operator>&gt;</operator>
<name>Will</name> <name>disable</name> <name>alert</name></expr></expr_stmt></for> <for>for coord actions 1<operator>,</operator><expr_stmt><expr><literal type="number">3</literal></expr><operator>,</operator><expr><literal type="number">5</literal></expr><operator>,</operator><expr><literal type="number">7</literal></expr><operator>,</operator><expr><literal type="number">8</literal></expr><operator>,</operator><expr><literal type="number">9</literal></expr><operator>,</operator><expr><literal type="number">10</literal>

<operator>=</operator><name><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>enable</name><operator>.</operator><name>alerts</name></name><operator>=</operator> <name>List</name> <name>of</name> <name>coord</name> <name>actions</name> <name>to</name> <name>be</name> <name><name>disabled</name><operator>.</operator> <name>Value</name></name> <name>can</name> <name>be</name> <name>specified</name> <name>as</name> <name>list</name> <name>of</name> <name>coord</name> <name>actions</name> <name>or</name> <name>date</name> <name><name>range</name><operator>.</operator></name>
&lt;<name>verbatim</name><operator>&gt;</operator>
<operator>&lt;</operator><name>property</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>name</name><operator>&gt;</operator><name><name>oozie</name><operator>.</operator><name>sla</name><operator>.</operator><name>disable</name><operator>.</operator><name><name>alerts</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>name</name></argument>&gt;</argument_list></name></name>
    <operator>&lt;</operator><name>value</name><operator>&gt;</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">01</literal><operator>-</operator><literal type="number">01T01</literal><operator>:</operator><literal type="number">00Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">05</literal><operator>-</operator><literal type="number">31T23</literal><operator>:</operator><literal type="number">59Z</literal><operator>&lt;</operator><operator>/</operator><name>value</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>property</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>verbatim</name><operator>&gt;</operator>
<name>This</name> <name>will</name> <name>enable</name> <name>SLA</name> <name>alert</name></expr></expr_stmt></for> <for>for coord actions whose nominal time is in between <control>(<init><expr><name>inclusive</name></expr></init>)</control><block type="pseudo"><block_content> <expr_stmt><expr><literal type="number">2009</literal><operator>-</operator><literal type="number">01</literal><operator>-</operator><literal type="number">01T01</literal><operator>:</operator><literal type="number">00Z</literal> <name>and</name> <literal type="number">2009</literal><operator>-</operator><literal type="number">05</literal><operator>-</operator><literal type="number">31T23</literal><operator>:</operator><literal type="number">59Z</literal><operator>.</operator>

<name>ALL</name> <name>keyword</name> <name>can</name> <name>be</name> <name>specified</name> <name>to</name> <name>specify</name> <name>all</name> <name><name>actions</name><operator>.</operator> <name>Below</name></name> <name>property</name> <name>will</name> <name>disable</name> <name>SLA</name> <name>notifications</name></expr></expr_stmt></block_content></block></for> <for>for all coord actions.
&lt;verbatim&gt;
&lt;property&gt;
    &lt;name&gt;oozie.sla.disable.alerts&lt;/name&gt;
    &lt;value&gt;ALL&lt;/value&gt;
&lt;/property&gt;
&lt;/verbatim&gt;

SLA alert enabling or disabling can also be modified through commandline or REST API after submission for running jobs.

Refer [[DG_CommandLineTool#Changing_job_SLA_definition_and_alerting][Changing job SLA definition and alerting]] for commandline usage.
Refer the REST API [[WebServicesAPI#Changing_job_SLA_definition_and_alerting][Changing job SLA definition and alerting]].

SLA definition of should-start<operator>,</operator> <expr_stmt><expr><name>should</name><operator>-</operator><name>end</name></expr><operator>,</operator> <expr><name>nominal</name><operator>-</operator><name>time</name> <name>and</name> <name>max</name><operator>-</operator><name>duration</name> <name>can</name> <name>be</name> <name>changed</name></expr></expr_stmt></for> <for>for running jobs through commandline or REST API.
Refer [[DG_CommandLineTool#Changing_job_SLA_definition_and_alerting][Changing job SLA definition and alerting]] for commandline usage.
Refer the REST API [[WebServicesAPI#Changing_job_SLA_definition_and_alerting][Changing job SLA definition and alerting]].

 ---++ Known issues
 There are two known issues when you define SLA for a workflow action.
    * If there are decision nodes and SLA is defined for a workflow action not in the execution path because of the decision node<operator>,</operator> <expr_stmt><expr><name>you</name> <name>will</name> <name>still</name> <name>get</name> <name>an</name> <name>SLA_MISS</name> <name><name>notification</name><operator>.</operator>
<name>diff</name></name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>WebServicesAPI</name><operator>.</operator><name>twiki</name></name> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>WebServicesAPI</name><operator>.</operator><name>twiki</name></name>
<name>index</name> <name>c301b78bd</name><operator>..</operator><literal type="number">3dc359a1b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>WebServicesAPI</name><operator>.</operator><name>twiki</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>WebServicesAPI</name><operator>.</operator><name>twiki</name></name>
@@ <operator>-</operator><literal type="number">1520</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1520</literal></expr><operator>,</operator><expr><literal type="number">48</literal> @@ <name>Content</name><operator>-</operator><name>Type</name><operator>:</operator> <name>application</name><operator>/</operator><name>json</name></expr>;</expr_stmt></for><name>charset</name><operator>=</operator><name>UTF</name><operator>-</operator><literal type="number">8</literal>
 
 <name>It</name> <name>accepts</name> <name>any</name> <name>valid</name> <name>Workflow</name> <name>Job</name> <name>ID</name><operator>,</operator> <name>Coordinator</name> <name>Job</name> <name>ID</name><operator>,</operator> <name>Coordinator</name> <name>Action</name> <name>ID</name><operator>,</operator> <name>or</name> <name>Bundle</name> <name>Job</name> <name><name>ID</name><operator>.</operator></name>
 
--<operator>-</operator><operator>++</operator><operator>++</operator> <name>Changing</name> <name>job</name> <name>SLA</name> <name>definition</name> <name>and</name> <name>alerting</name>
<name>An</name> <operator>=</operator><name>HTTP</name> <name>PUT</name><operator>=</operator> <name>request</name> <name>to</name> <name>change</name> <name>job</name> <name>SLA</name> <name>alert</name> <name>status</name><operator>/</operator><name>SLA</name> <name><name>definition</name><operator>.</operator></name>

   * <name>All</name> <name>sla</name> <name>commands</name> <name>takes</name> <name>actions</name><operator>-</operator><name>list</name> <name>or</name> <name>date</name> <name><name>parameter</name><operator>.</operator></name>
   * <operator>=</operator><name>date</name><operator>=</operator><operator>:</operator> <name>a</name> <name>comma</name><operator>-</operator><name>separated</name> <name>list</name> <name>of</name> <name>date</name> <name><name>ranges</name><operator>.</operator> <name>Each</name></name> <name>date</name> <name>range</name> <name>element</name> <name>is</name> <name>specified</name> <name>with</name> <name>dates</name> <name>separated</name> <name>by</name> <operator>=</operator><operator>::</operator><operator>=</operator>
   <operator>*</operator> <operator>=</operator><name>action</name><operator>-</operator><name>list</name><operator>=</operator><operator>:</operator> <name>a</name> <name>comma</name><operator>-</operator><name>separated</name> <name>list</name> <name>of</name> <name>action</name> <name><name>ranges</name><operator>.</operator> <name>Each</name></name> <name>action</name> <name>range</name> <name>is</name> <name>specified</name> <name>with</name> <name>two</name> <name>action</name> <name>numbers</name> <name>separated</name> <name>by</name> <operator>=</operator><operator>-=</operator>
   <operator>*</operator> <name>For</name> <name>bundle</name> <name>jobs</name> <name>additional</name> <operator>=</operator><name>coordinators</name><operator>=</operator> <operator>(</operator><name>coord_name</name><operator>/</operator><name>id</name><operator>)</operator> <name>parameter</name> <name>can</name> <name>be</name> <name><name>passed</name><operator>.</operator></name>
   * <name>Sla</name> <name>change</name> <name>command</name> <name>need</name> <name>extra</name> <name>parameter</name> <operator>=</operator><name>value</name><operator>=</operator> <name>to</name> <name>specify</name> <operator>new</operator> <name>sla</name> <name><name>definition</name><operator>.</operator></name>


   * <name>Changing</name> <name>SLA</name> <name>definition</name>
   <name>SLA</name> <name>definition</name> <name>of</name> <name>should</name><operator>-</operator><name>start</name><operator>,</operator> <name>should</name><operator>-</operator><name>end</name><operator>,</operator> <name>nominal</name><operator>-</operator><name>time</name> <name>and</name> <name>max</name><operator>-</operator><name>duration</name> <name>can</name> <name>be</name> <name><name>changed</name><operator>.</operator></name>

&lt;<ternary><condition><expr><name>verbatim</name><operator>&gt;</operator>
<name>PUT</name> <operator>/</operator><name>oozie</name><operator>/</operator><name>v2</name><operator>/</operator><name>job</name><operator>/</operator><literal type="number">0000003</literal><operator>-</operator><literal type="number">140319184715726</literal><operator>-</operator><name>oozie</name><operator>-</operator><name>puru</name><operator>-</operator><name>C</name></expr>?</condition><then><expr><name>action</name><operator>=</operator><name>sla</name><operator>-</operator><name>change</name><operator>&amp;</operator><name>value</name><operator>=</operator><operator>&lt;</operator><name>key</name><operator>&gt;=</operator><operator>&lt;</operator><name>value</name><operator>&gt;</operator></expr></then></ternary></block></expr>;<expr><operator>...</operator></expr>;<expr><ternary><condition><expr><operator>&lt;</operator><name>key</name><operator>&gt;=</operator><operator>&lt;</operator><name>value</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>verbatim</name><operator>&gt;</operator>

   <operator>*</operator> <name>Disabling</name> <name>SLA</name> <name><name>alert</name>

<argument_list type="generic">&lt;<argument><name>verbatim</name></argument>&gt;</argument_list></name>
<name>PUT</name> <operator>/</operator><name>oozie</name><operator>/</operator><name>v2</name><operator>/</operator><name>job</name><operator>/</operator><literal type="number">0000003</literal><operator>-</operator><literal type="number">140319184715726</literal><operator>-</operator><name>oozie</name><operator>-</operator><name>puru</name><operator>-</operator><name>C</name></expr>?</condition><then><expr><name>action</name><operator>=</operator><name>sla</name><operator>-</operator><name>disable</name><operator>&amp;</operator><name>action</name><operator>-</operator><name>list</name><operator>=</operator><ternary><condition><expr><literal type="number">3</literal><operator>-</operator><literal type="number">4</literal>
<operator>&lt;</operator><operator>/</operator><name>verbatim</name><operator>&gt;</operator>
<name>Will</name> <name>disable</name> <name>SLA</name> <name>alert</name></expr></condition></ternary></expr></then></ternary></expr> <for>for actions 3 and 4.

&lt;verbatim&gt;
PUT /oozie/v1/job/0000003-140319184715726-oozie-puru-C?action=sla-disable&amp;date=2009-02-01T00:10Z::2009-03-01T00:10Z
&lt;/verbatim&gt;
Will disable SLA alert for actions whose nominal time is in-between 2009-02-01T00:10Z 2009-03-01T00:10Z <control>(<init><expr><name>inclusive</name></expr></init>)</control><block type="pseudo"><block_content><expr_stmt><expr><ternary><condition><expr><operator>.</operator>


<operator>&lt;</operator><name>verbatim</name><operator>&gt;</operator>
<name>PUT</name> <operator>/</operator><name>oozie</name><operator>/</operator><name>v1</name><operator>/</operator><name>job</name><operator>/</operator><literal type="number">0000004</literal><operator>-</operator><literal type="number">140319184715726</literal><operator>-</operator><name>oozie</name><operator>-</operator><name>puru</name><operator>-</operator><name>B</name></expr>?</condition><then><expr><name>action</name><operator>=</operator><name>sla</name><operator>-</operator><name>disable</name><operator>&amp;</operator><name>date</name><operator>=</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">02</literal><operator>-</operator><literal type="number">01T00</literal></expr></then><else>:<expr><literal type="number">10Z</literal><operator>::</operator><literal type="number">2009</literal><operator>-</operator><literal type="number">03</literal><operator>-</operator><literal type="number">01T00</literal><operator>:</operator><literal type="number">10Z</literal><operator>&amp;</operator><name>coordinators</name><operator>=</operator><name><name>abc</name>
<argument_list type="generic">&lt;<argument><operator>/</operator><name>verbatim</name></argument>&gt;</argument_list></name>
<name>For</name> <name>bundle</name> <name>jobs</name> <name>additional</name> <call><name>coordinators</name> <argument_list>(<argument><expr><name>list</name> <name>of</name> <name>comma</name> <name>separated</name> <name>coord_name</name><operator>/</operator><name>id</name></expr></argument>)</argument_list></call> <name>parameter</name> <name>can</name> <name>be</name> <name><name>passed</name><operator>.</operator></name>

   * <ternary><condition><expr><name>Enabling</name> <name>SLA</name> <name><name>alert</name>

<argument_list type="generic">&lt;<argument><name>verbatim</name></argument>&gt;</argument_list></name>
<name>PUT</name> <operator>/</operator><name>oozie</name><operator>/</operator><name>v2</name><operator>/</operator><name>job</name><operator>/</operator><literal type="number">0000003</literal><operator>-</operator><literal type="number">140319184715726</literal><operator>-</operator><name>oozie</name><operator>-</operator><name>puru</name><operator>-</operator><name>C</name></expr>?</condition><then><expr><name>action</name><operator>=</operator><name>sla</name><operator>-</operator><name>enable</name><operator>&amp;</operator><name>action</name><operator>-</operator><name>list</name><operator>=</operator><literal type="number">1</literal></expr></then></ternary></expr></else></ternary></expr><operator>,</operator><expr><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">17</literal><operator>-</operator><literal type="number">20</literal>
<operator>&lt;</operator><operator>/</operator><name>verbatim</name><operator>&gt;</operator>
<name>Will</name> <name>enable</name> <name>SLA</name> <name>alert</name></expr></expr_stmt></block_content></block></for> <for>for actions 1<operator>,</operator><expr_stmt><expr><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">20.</literal>

 <operator>--</operator><operator>-</operator><operator>++</operator><operator>++</operator> <name>Jobs</name> <name>Information</name>
 
 <name>A</name> <name>HTTP</name> <name>GET</name> <name>request</name> <name>retrieves</name> <name>workflow</name> <name>and</name> <name>coordinator</name> <name>jobs</name> <name><name>information</name><operator>.</operator>
<name>diff</name></name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>be11f2cab</name><operator>..</operator><literal type="number">24d594ddd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.2.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">1913</literal> <name>Devise</name> <name>a</name> <name>way</name> <name>to</name> <name>turn</name> <name>off</name> <name>SLA</name> <name>alerts</name></expr></expr_stmt></for> <for>for bundle/coordinator flexibly <control>(<init><expr><name>puru</name></expr></init>)</control><block type="pseudo"><block_content>
 <expr_stmt><expr><name>OOZIE</name><operator>-</operator><literal type="number">2071</literal> <name>Add</name> <name>a</name> <name>Spark</name> <call><name>example</name> <argument_list>(<argument><expr><name>pavan</name> <name>kumar</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2145</literal> <name>ZooKeeper</name> <name>paths</name> <name>should</name> <name>start</name> <name>with</name> <name>a</name> <literal type="string">"/"</literal> <operator>(</operator><name>rkanter</name><operator>)</operator>
 <name>OOZIE</name><operator>-</operator><literal type="number">2113</literal> <name>Oozie</name> <name>Command</name> <name>Line</name> <name>Utilities</name> <name>are</name> <name>failing</name> <name>as</name> <name>hadoop</name><operator>-</operator><name>auth</name> <name>jar</name> <name>not</name> <call><name>found</name> <argument_list>(<argument><expr><name>shwethags</name></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>js</name><operator>/</operator><name>oozie</name><operator>-</operator><name>sla</name><operator>-</operator><name><name>table</name><operator>.</operator><name>js</name></name> <name>b</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>js</name><operator>/</operator><name>oozie</name><operator>-</operator><name>sla</name><operator>-</operator><name><name>table</name><operator>.</operator><name>js</name></name>
<name>index</name> <literal type="number">1a88671ad</literal><operator>..</operator><literal type="number">7ae604cff</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>js</name><operator>/</operator><name>oozie</name><operator>-</operator><name>sla</name><operator>-</operator><name><name>table</name><operator>.</operator><name>js</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>js</name><operator>/</operator><name>oozie</name><operator>-</operator><name>sla</name><operator>-</operator><name><name>table</name><operator>.</operator><name>js</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>var</name> <name>columnsToShow</name> <operator>=</operator> <index>[
               <expr><block>{ <expr><literal type="string">"mData"</literal><operator>:</operator> <literal type="string">"jobStatus"</literal></expr>, <expr><literal type="string">"sDefaultContent"</literal><operator>:</operator> <literal type="string">""</literal></expr>}</block></expr><operator>,</operator>
               <block>{ <expr><literal type="string">"mData"</literal><operator>:</operator> <literal type="string">"parentId"</literal></expr>, <expr><literal type="string">"sDefaultContent"</literal><operator>:</operator> <literal type="string">""</literal></expr>, <expr><literal type="string">"bVisible"</literal><operator>:</operator> <literal type="boolean">false</literal></expr>}</block><operator>,</operator>
               <block>{ <expr><literal type="string">"mData"</literal><operator>:</operator> <literal type="string">"appName"</literal></expr>, <expr><literal type="string">"bVisible"</literal><operator>:</operator> <literal type="boolean">false</literal></expr>}</block><operator>,</operator>
              <block>{ <expr><literal type="string">"mData"</literal><operator>:</operator> <literal type="string">"slaAlertStatus"</literal></expr>, <expr><literal type="string">"bVisible"</literal><operator>:</operator> <literal type="boolean">false</literal></expr>}</block><operator>,</operator>
              ]</index></expr>;</expr_stmt></block_content></block></for>
 
 <name><name>$</name><operator>.</operator><name>fn</name><operator>.</operator><name>dataTableExt</name><operator>.</operator><name>oApi</name><operator>.</operator><name>fnGetTds</name></name>  <operator>=</operator> <call><name>function</name> <argument_list>( <argument><expr><name>oSettings</name></expr></argument>, <argument><expr><name>mTr</name></expr></argument> )</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>oozie</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>html</name></name> <name>b</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>oozie</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>html</name></name>
<name>index</name> <literal type="number">23e8af248</literal><operator>..</operator><name>e5bf6275a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>oozie</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>html</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>webapp</name><operator>/</operator><name>console</name><operator>/</operator><name>sla</name><operator>/</operator><name>oozie</name><operator>-</operator><name><name>sla</name><operator>.</operator><name>html</name></name>
@@ <operator>-</operator><literal type="number">101</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">101</literal><operator>,</operator><literal type="number">7</literal> @@
                             <operator>&lt;</operator><name>th</name><operator>&gt;</operator><name>Job</name> <name><name>Status</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>th</name></argument>&gt;</argument_list></name>
                             <operator>&lt;</operator><name>th</name><operator>&gt;</operator><name>Parent</name> <name><name>Id</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>th</name></argument>&gt;</argument_list></name>
                             <operator>&lt;</operator><name>th</name><operator>&gt;</operator><name><name>AppName</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>th</name></argument>&gt;</argument_list></name>
                            <operator>&lt;</operator><name>th</name><operator>&gt;</operator><name>Sla</name> <name><name>Alert</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>th</name></argument>&gt;</argument_list></name>
                         <operator>&lt;</operator><operator>/</operator><name>tr</name><operator>&gt;</operator>
                     <operator>&lt;</operator><operator>/</operator><name>thead</name><operator>&gt;</operator>
                 <operator>&lt;</operator><operator>/</operator><name>table</name><operator>&gt;</operator>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></function></block_content></block></function></block></class>

</unit>
