<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/dc56aaee.java"><expr_stmt><expr><name>From</name> <name>dc56aaeed6a56dff58e7ff1328ab36da8cae427a</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name><name>virag</name> <argument_list type="generic">&lt;<argument><name>virag</name><annotation>@<name>unknown</name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">12</literal> <name>Oct</name> <literal type="number">2012</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">55</literal><operator>:</operator><literal type="number">53</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">1012</literal> <name>Sqoop</name> <name>jobs</name> <name>are</name> <name>unable</name> <name>to</name> <name>utilize</name> <name>Hadoop</name> <call><name>Counters</name>
 <argument_list>(<argument><expr><name>jarcec</name> <name>via</name> <name>virag</name></expr></argument>)</argument_list></call>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/oozie/trunk@1397401 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>SqoopActionExecutor</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">143</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestSqoopActionExecutor</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">12</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SqoopActionExtension</name><operator>.</operator><name>twiki</name></name>  <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>WorkflowFunctionalSpec</name><operator>.</operator><name>twiki</name></name>   <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">165</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>SqoopActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>SqoopActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7bb2b430c</literal><operator>..</operator><literal type="number">05c32d914</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>SqoopActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>SqoopActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">33</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URISyntaxException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>StringTokenizer</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>Counters</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobConf</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobID</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>RunningJob</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutorException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>client</name><operator>.</operator><name>WorkflowAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name><operator>.</operator><name>HadoopAccessorException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XmlUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XLog</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Element</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>JDOMException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Namespace</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>SqoopActionExecutor</name> <super_list><extends>extends <super><name>JavaActionExecutor</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>OOZIE_ACTION_EXTERNAL_STATS_WRITE</name> <init>= <expr><literal type="string">"oozie.action.external.stats.write"</literal></expr></init></decl>;</decl_stmt>
 
     <constructor><specifier>public</specifier> <name>SqoopActionExecutor</name><parameter_list>()</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"sqoop"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">138</literal> @@ <specifier>public</specifier> <name>class</name> <name>SqoopActionExecutor</name> extends <name>JavaActionExecutor</name> <block>{
         <return>return <expr><name>actionConf</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <comment type="block" format="javadoc">/**
     * We will gather counters from all executed action Hadoop jobs (e.g. jobs
     * that moved data, not the launcher itself) and merge them together. There
     * will be only one job most of the time. The only exception is
     * import-all-table option that will execute one job per one exported table.
     *
     * @param context Action context
     * @param action Workflow action
     * @throws ActionExecutorException
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>end</name><parameter_list>(<parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>JobClient</name></type> <name>jobClient</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>boolean</name></type> <name>exception</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>Element</name></type> <name>actionXml</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>JobConf</name></type> <name>jobConf</name> <init>= <expr><call><name>createBaseHadoopConf</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name>jobClient</name> <operator>=</operator> <call><name>createJobClient</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// Cumulative counters for all Sqoop mapreduce jobs</comment>
                <decl_stmt><decl><type><name>Counters</name></type> <name>counters</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name>String</name></type> <name>externalIds</name> <init>= <expr><call><name><name>action</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name><name>String</name> <index>[]</index></name></type><name>jobIds</name> <init>= <expr><call><name><name>externalIds</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <for>for<control>(<init><decl><type><name>String</name></type> <name>jobId</name> <range>: <expr><name>jobIds</name></expr></range></decl></init>)</control> <block>{<block_content>
                    <decl_stmt><decl><type><name>RunningJob</name></type> <name>runningJob</name> <init>= <expr><call><name><name>jobClient</name><operator>.</operator><name>getJob</name></name><argument_list>(<argument><expr><call><name><name>JobID</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><name>runningJob</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                      <throw>throw <expr><operator>new</operator> <call><name>ActionExecutorException</name><argument_list>(<argument><expr><name><name>ActionExecutorException</name><operator>.</operator><name>ErrorType</name><operator>.</operator><name>FAILED</name></name></expr></argument>, <argument><expr><literal type="string">"SQOOP001"</literal></expr></argument>,
                        <argument><expr><literal type="string">"Unknown hadoop job [{0}] associated with action [{1}].  Failing this action!"</literal></expr></argument>, <argument><expr><call><name><name>action</name>
                        <operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
                    </block_content>}</block></if></if_stmt>

                    <decl_stmt><decl><type><name>Counters</name></type> <name>taskCounters</name> <init>= <expr><call><name><name>runningJob</name><operator>.</operator><name>getCounters</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if<condition>(<expr><name>taskCounters</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <if_stmt><if>if<condition>(<expr><name>counters</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                          <expr_stmt><expr><name>counters</name> <operator>=</operator> <name>taskCounters</name></expr>;</expr_stmt>
                        </block_content>}</block></if> <else>else <block>{<block_content>
                          <expr_stmt><expr><call><name><name>counters</name><operator>.</operator><name>incrAllCounters</name></name><argument_list>(<argument><expr><name>taskCounters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        </block_content>}</block></else></if_stmt>
                    </block_content>}</block></if> <else>else <block>{<block_content>
                      <expr_stmt><expr><call><name><name>XLog</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>warn</name><argument_list>(<argument><expr><literal type="string">"Could not find Hadoop Counters for job: [{0}]"</literal></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></for>

                <if_stmt><if>if <condition>(<expr><name>counters</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>ActionStats</name></type> <name>stats</name> <init>= <expr><operator>new</operator> <call><name>MRStats</name><argument_list>(<argument><expr><name>counters</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>String</name></type> <name>statsJsonString</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>toJSON</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setVar</name></name><argument_list>(<argument><expr><name><name>MapReduceActionExecutor</name><operator>.</operator><name>HADOOP_COUNTERS</name></name></expr></argument>, <argument><expr><name>statsJsonString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="line">// If action stats write property is set to false by user or</comment>
                    <comment type="line">// size of stats is greater than the maximum allowed size,</comment>
                    <comment type="line">// do not store the action stats</comment>
                    <if_stmt><if>if <condition>(<expr><call><name><name>Boolean</name><operator>.</operator><name>parseBoolean</name></name><argument_list>(<argument><expr><call><name>evaluateConfigurationProperty</name><argument_list>(<argument><expr><name>actionXml</name></expr></argument>,
                            <argument><expr><name>OOZIE_ACTION_EXTERNAL_STATS_WRITE</name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                            <operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>statsJsonString</name><operator>.</operator><name>getBytes</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name> <operator>&lt;=</operator> <call><name>getMaxExternalStatsSize</name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setExecutionStats</name></name><argument_list>(<argument><expr><name>statsJsonString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(
                          <argument><expr><literal type="string">"Printing stats for sqoop action as a JSON string : [{0}]"</literal> <operator>+</operator> <name>statsJsonString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setVar</name></name><argument_list>(<argument><expr><name><name>MapReduceActionExecutor</name><operator>.</operator><name>HADOOP_COUNTERS</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>XLog</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>warn</name><argument_list>(<argument><expr><literal type="string">"Can't find any associated Hadoop job counters"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><name>exception</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            <throw>throw <expr><call><name>convertException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch>
        <finally>finally <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>jobClient</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <try>try <block>{<block_content>
                    <expr_stmt><expr><call><name><name>jobClient</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block>
                <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><name>exception</name></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"JobClient error: "</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if>
                    <else>else <block>{<block_content>
                        <throw>throw <expr><call><name>convertException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></catch></try>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></finally></try>
    </block_content>}</block></function>

    <comment type="line">// Return the value of the specified configuration property</comment>
    <function><type><specifier>private</specifier> <name>String</name></type> <name>evaluateConfigurationProperty</name><parameter_list>(<parameter><decl><type><name>Element</name></type> <name>actionConf</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>defaultValue</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>ActionExecutorException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>actionConf</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>Namespace</name></type> <name>ns</name> <init>= <expr><call><name><name>actionConf</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>Element</name></type> <name>e</name> <init>= <expr><call><name><name>actionConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt><if>if<condition>(<expr><name>e</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                  <decl_stmt><decl><type><name>String</name></type> <name>strConf</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                  <decl_stmt><decl><type><name>XConfiguration</name></type> <name>inlineConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><name>strConf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                  <return>return <expr><call><name><name>inlineConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>defaultValue</name></expr></argument>)</argument_list></call></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>defaultValue</name></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><call><name>convertException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Get the stats and external child IDs
     *
     * @param actionFs the FileSystem object
     * @param runningJob the runningJob
     * @param action the Workflow action
     * @param context executor context
     *
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>getActionData</name><parameter_list>(<parameter><decl><type><name>FileSystem</name></type> <name>actionFs</name></decl></parameter>, <parameter><decl><type><name>RunningJob</name></type> <name>runningJob</name></decl></parameter>, <parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>Context</name></type> <name>context</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>HadoopAccessorException</name></expr></argument>, <argument><expr><name>JDOMException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>URISyntaxException</name></expr></argument></throws><block>{<block_content>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>getActionData</name></name><argument_list>(<argument><expr><name>actionFs</name></expr></argument>, <argument><expr><name>runningJob</name></expr></argument>, <argument><expr><name>action</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load stored Hadoop jobs ids and promote them as external child ids</comment>
        <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Properties</name></type> <name>props</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setExternalChildIDs</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator><call><name><name>props</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>LauncherMain</name><operator>.</operator><name>HADOOP_JOBS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>protected</specifier> <name>boolean</name></type> <name>getCaptureOutput</name><parameter_list>(<parameter><decl><type><name>WorkflowAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JDOMException</name></expr></argument></throws> <block>{<block_content>
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestSqoopActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestSqoopActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c064d95df</name><operator>..</operator><literal type="number">9f160b01c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestSqoopActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestSqoopActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSqoopActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalChildIDs</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <expr><name>String</name> <name>hadoopCounters</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getVar</name></name><argument_list>(<argument><expr><name><name>MapReduceActionExecutor</name><operator>.</operator><name>HADOOP_COUNTERS</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>hadoopCounters</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>hadoopCounters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

         <expr><name>FileSystem</name> <name>fs</name> <operator>=</operator> <call><name>getFileSystem</name><argument_list>()</argument_list></call></expr>;
         <expr><name>BufferedReader</name> <name>br</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getSqoopOutputDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"part-m-00000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>int</name> <name>count</name> <operator>=</operator> <literal type="number">0</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">216</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">222</literal></expr>,<expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSqoopActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>launcherId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"SUCCEEDED"</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getExternalChildIDs</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>ae</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>getAction</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <expr><name>String</name> <name>hadoopCounters</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getVar</name></name><argument_list>(<argument><expr><name><name>MapReduceActionExecutor</name><operator>.</operator><name>HADOOP_COUNTERS</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>hadoopCounters</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>hadoopCounters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

         <expr><name>FileSystem</name> <name>fs</name> <operator>=</operator> <call><name>getFileSystem</name><argument_list>()</argument_list></call></expr>;
         <expr><name><name>FileStatus</name><index>[]</index></name> <name>parts</name> <operator>=</operator> <call><name><name>fs</name><operator>.</operator><name>listStatus</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getSqoopOutputDir</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>PathFilter</name></super><argument_list>()</argument_list> <block>{
             <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SqoopActionExtension</name><operator>.</operator><name>twiki</name></name> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SqoopActionExtension</name><operator>.</operator><name>twiki</name></name>
<name>index</name> <name>eccafac22</name><operator>..</operator><name>b256529b8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SqoopActionExtension</name><operator>.</operator><name>twiki</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>twiki</name><operator>/</operator><name><name>DG_SqoopActionExtension</name><operator>.</operator><name>twiki</name></name>
@@ <operator>-</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>The</name> <name>same</name> <name>Sqoop</name> <name>action</name> <name>using</name> <operator>=</operator><name>arg</name><operator>=</operator> <name>elements</name><operator>:</operator>
 <name>NOTE</name><operator>:</operator> <name>The</name> <operator>=</operator><name>arg</name><operator>=</operator> <name>elements</name> <name>syntax</name></expr><operator>,</operator></expr_stmt> <while>while more verbose<operator>,</operator> <decl_stmt><decl><type><name>allows</name> <name>to</name> <name>have</name> <name>spaces</name> <name>in</name> <name>a</name> <name>single</name></type> <name>argument</name></decl>, <decl><type ref="prev"/><name>something</name> <name>useful</name> <name>when</name>
 <name>using</name> <name>free</name> <name>from</name> <name><name>queries</name><operator>.</operator></name>
 
---+++ <name>Sqoop</name> <name>Action</name> <name>Counters</name>

<name>The</name> <name>counters</name> <name>of</name> <name>the</name> <name>map</name>-<name>reduce</name> <name>job</name> <name>run</name> <name>by</name> <name>the</name> <name>Sqoop</name> <name>action</name> <name>are</name> <name>available</name> <name>to</name> <name>be</name> <name>used</name> <name>in</name> <name>the</name> <name>workflow</name> <name>via</name> <name><name>the</name>
<index>[<expr><index>[<expr><name>WorkflowFunctionalSpec</name><operator>#</operator><name>HadoopCountersEL</name></expr>]</index><index>[<expr><name>hadoop</name><operator>:</operator><call><name>counters</name><argument_list>()</argument_list></call> <name>EL</name> <name>function</name></expr>]</index></expr>]</index></name>.

<name>If</name> <name>the</name> <name>Sqoop</name> <name>action</name> <name>run</name> <name>an</name> <name>import</name> <name>all</name> <name>command</name></decl>, <decl><type ref="prev"/><name>the</name> <init>=<expr><name>hadoop</name><operator>:</operator><call><name>counters</name><argument_list>()</argument_list></call><operator>=</operator> <name>EL</name> <name>will</name></expr></init></decl></decl_stmt></while> <return>return <expr><name>the</name> <name>aggregated</name> <name>counters</name>
<name>of</name> <name>all</name> <name>map</name><operator>-</operator><name>reduce</name> <name>jobs</name> <name>run</name> <name>by</name> <name>the</name> <name>Sqoop</name></expr></return> <import>import <name>all</name> <name><name>command</name><operator>.</operator></name>

 ---+++ <name>Sqoop</name> <name>Action</name> <name>Logging</name>
 
 <name>Sqoop</name> <name>action</name> <name>logs</name> <name>are</name> <name>redirected</name> <name>to</name> <name>the</name> <name>Oozie</name> <name>Launcher</name> <name>map</name>-<name>reduce</name> <name>job</name> <name>task</name> <name>STDOUT</name>/<name>STDERR</name> <name>that</name> <name>runs</name> <name><name>Sqoop</name><operator>.</operator>
<name>diff</name></name> --<name>git</name> <name>a</name>/<name>docs</name>/<name>src</name>/<name>site</name>/<name>twiki</name>/<name><name>WorkflowFunctionalSpec</name><operator>.</operator><name>twiki</name></name> <name>b</name>/<name>docs</name>/<name>src</name>/<name>site</name>/<name>twiki</name>/<name><name>WorkflowFunctionalSpec</name><operator>.</operator><name>twiki</name></name>
<name>index</name> <name>cb34fd8ba</name>..690a7f95a 100644
-- <name>a</name>/<name>docs</name>/<name>src</name>/<name>site</name>/<name>twiki</name>/<name><name>WorkflowFunctionalSpec</name><operator>.</operator><name>twiki</name></name>
++ <name>b</name>/<name>docs</name>/<name>src</name>/<name>site</name>/<name>twiki</name>/<name><name>WorkflowFunctionalSpec</name><operator>.</operator><name>twiki</name></name>
@@ -1688<operator>,</operator>6 +1688<operator>,</operator>7 @@ <name>not</name> <name>completed</name> <name><name>yet</name><operator>.</operator></name>
 
 ---++++ 4.2.5 <name>Hadoop</name> <name>EL</name> <name>Functions</name>
 
#<name>HadoopCountersEL</name>
 *<name><name>Map</name> <argument_list type="generic">&lt; <argument><name>String</name></argument>, <argument><name><name>Map</name> <argument_list type="generic">&lt; <argument><name>String</name></argument>, <argument><name>Long</name></argument> &gt;</argument_list></name></argument> &gt;</argument_list></name> <name>hadoop</name>:<name>counters</name>(<name>String</name> <name>node</name></import>)</block><expr_stmt><expr><operator>*</operator>
 
 <name>It</name> <name>returns</name> <name>the</name> <name>counters</name></expr></expr_stmt></class></expr></argument></argument_list></call></expr> <for>for a job submitted by a Hadoop action node. It returns =0= if the if the Hadoop job has not
diff --git a/release-log.txt b/release-log.txt
index a9beaeb63..11ec8257d 100644
-- a/release-log.txt
++ b/release-log.txt
@@ -1<operator>,</operator><expr_stmt><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">3.4.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">1012</literal> <name>Sqoop</name> <name>jobs</name> <name>are</name> <name>unable</name> <name>to</name> <name>utilize</name> <name>Hadoop</name> <call><name>Counters</name> <argument_list>(<argument><expr><name>jarcec</name> <name>via</name> <name>virag</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">986</literal> <name>Oozie</name> <name>client</name> <name>shell</name> <name>script</name> <name>should</name> <name>use</name> <name>consistent</name> <name>naming</name></expr></expr_stmt></for> <for>for java options <control>(<init><expr><name>stevenwillis</name> <name>via</name> <name>tucu</name></expr></init>)</control><block type="pseudo"><block_content>
 <expr_stmt><expr><name>OOZIE</name><operator>-</operator><literal type="number">1018</literal> <name>Display</name> <name>coord</name> <name>job</name> <name>start</name> <name>time</name></expr><operator>,</operator> <expr><name>end</name> <name>time</name></expr><operator>,</operator> <expr><name>pause</name> <name>time</name></expr><operator>,</operator> <expr><name>concurrency</name> <name>in</name> <name>job</name> <operator>-</operator><call><name>info</name> <argument_list>(<argument><expr><name>mona</name> <name>via</name> <name>tucu</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">1016</literal> <name>Tests</name> <name>that</name> <name>use</name> <name>junit</name></expr></expr_stmt></block_content></block></for> <assert>assert <expr><name>or</name> <name>fail</name> <name>in</name> <name>a</name> <operator>new</operator> <name>thread</name> <name>report</name> <name>success</name> <name>when</name> <name>they</name> <name>are</name> <name>actually</name> <call><name>failing</name> <argument_list>(<argument><expr><name>rkanter</name> <name>via</name> <name>tucu</name></expr></argument>)</argument_list></call>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></assert></block></expr></block></expr></expr_stmt></block_content></block></function></block_content></block></constructor></block></class>

</unit>
