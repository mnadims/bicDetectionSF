<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/78c86996.java"><expr_stmt><expr><name>From</name> <literal type="number">78c8699693408dcbcf6892ecbb3ee1037908d943</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Kanter</name> <argument_list type="generic">&lt;<argument><name>rkanter</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">21</literal> <name>Apr</name> <literal type="number">2016</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">03</literal><operator>:</operator><literal type="number">38</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">2511</literal> <name>SubWorkflow</name> <name>missing</name> <name>variable</name> <name>set</name> <name>from</name> <name>option</name></expr></expr_stmt> <if_stmt><if>if
 config-default is present in parent workflow <condition>(<expr><name>asasvari</name> <name>via</name> <name>rkanter</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name><name>SubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestSubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">184</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">138</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">53</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>SubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>SubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">20e4caf12</literal><operator>..</operator><name>f77e52cd2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>SubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>SubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SubWorkflowActionExecutor</name> extends <name>ActionExecutor</name> <block>{
                 <expr><name>String</name> <name>appPath</name> <operator>=</operator> <call><name><name>eConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"app-path"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTextTrim</name><argument_list>()</argument_list></call></expr>;
 
                 <name>XConfiguration</name> <name>subWorkflowConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt><expr><call><name>injectInline</name><argument_list>(<argument><expr><call><name><name>eConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>subWorkflowConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                 <decl_stmt><decl><type><name>Configuration</name></type> <name>parentConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getWorkflow</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                 <if_stmt><if>if <condition>(<expr><call><name><name>eConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><operator>(</operator><literal type="string">"propagate-configuration"</literal><operator>)</operator></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                     <expr_stmt><expr><call><name><name>XConfiguration</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>parentConf</name></expr></argument>, <argument><expr><name>subWorkflowConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SubWorkflowActionExecutor</name> extends <name>ActionExecutor</name> <block>{
                 <if_stmt><if>if<condition>(<expr><name>group</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                     <expr_stmt><expr><call><name><name>subWorkflowConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>GROUP_NAME</name></name></expr></argument>, <argument><expr><name>group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt/></block_content></block></if></if_stmt>}</block>
                <call><name>injectInline</name><argument_list>(<argument><expr><call><name><name>eConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>subWorkflowConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                 <expr_stmt><expr><call><name>injectCallback</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>subWorkflowConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name>injectRecovery</name><argument_list>(<argument><expr><name>extId</name></expr></argument>, <argument><expr><name>subWorkflowConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name>injectParent</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getWorkflow</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getId</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>subWorkflowConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestSubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestSubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">26e5031af</literal><operator>..</operator><name>bdbbfd935</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestSubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>TestSubWorkflowActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">230</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">230</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>WorkflowJob</name> <name>wf</name> <operator>=</operator> <call><name><name>oozieClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>wf</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <call><name>getWorkflowConfig</name><argument_list>(<argument><expr><name>wf</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"xyz"</literal></expr></argument>, <argument><expr><call><name><name>childConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"abc"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
@@ <operator>-</operator><literal type="number">281</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">281</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>WorkflowJob</name> <name>wf</name> <operator>=</operator> <call><name><name>oozieClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>wf</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <call><name>getWorkflowConfig</name><argument_list>(<argument><expr><name>wf</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name>getTestGroup</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>childConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>GROUP_NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">361</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">361</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name></expr></argument>, <argument><expr><call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>WorkflowJob</name> <name>wf</name> <operator>=</operator> <call><name><name>oozieClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>wf</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <call><name>getWorkflowConfig</name><argument_list>(<argument><expr><name>wf</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>childConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"abc"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
@@ <operator>-</operator><literal type="number">409</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">409</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
 
         <expr><name>WorkflowAppService</name> <name>wps</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowAppService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowJob</name> <name>wf</name> <operator>=</operator> <call><name><name>oozieClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>wf</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Configuration</name> <name>childConf</name> <operator>=</operator> <call><name>getWorkflowConfig</name><argument_list>(<argument><expr><name>wf</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>childConf</name> <operator>=</operator> <call><name><name>wps</name><operator>.</operator><name>createProtoActionConf</name></name><argument_list>(<argument><expr><name>childConf</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>childConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>WorkflowAppService</name><operator>.</operator><name>APP_LIB_PATH_LIST</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>subwfLibJar</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
@@ <operator>-</operator><literal type="number">419</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">419</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><name>FileSystem</name> <name>fs</name> <operator>=</operator> <call><name>getFileSystem</name><argument_list>()</argument_list></call></expr>;
         <expr><name>Writer</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>subWorkflowAppPath</name></expr></argument>, <argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <comment type="line">// Infinitly recursive workflow</comment>
        

         <expr><name>String</name> <name>appStr</name> <operator>=</operator> <literal type="string">"&lt;workflow-app xmlns=\"uri:oozie:workflow:0.4\" name=\"workflow\"&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;start to=\"subwf\"/&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;action name=\"subwf\"&gt;"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">574</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">574</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
             <expr><name>Writer</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>subWorkflowPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
             <expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name>getLazyWorkflow</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
             <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;

             <expr><name>String</name> <name>workflowUri</name> <operator>=</operator> <call><name>getTestCaseFileUri</name><argument_list>(<argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr>;
             <expr><name>String</name> <name>appXml</name> <operator>=</operator> <literal type="string">"&lt;workflow-app xmlns=\"uri:oozie:workflow:0.4\" name=\"workflow\"&gt;"</literal> <operator>+</operator>
                     <literal type="string">"&lt;start to=\"subwf\"/&gt;"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">629</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">630</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
             }</block></expr>)</block></expr>;
 
             <expr><name>WorkflowJob</name> <name>job</name> <operator>=</operator> <call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getActions</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>SUCCEEDED</name></name></expr></argument>)</argument_list></call></expr>;
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>SUCCEEDED</name></name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
             <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>subWorkflowExternalId</name></expr></argument>)</argument_list></call></expr>;
 
         }</block></expr> <finally>finally <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">640</literal></expr><operator>,</operator><expr><literal type="number">57</literal> <operator>+</operator><literal type="number">641</literal></expr><operator>,</operator><expr><literal type="number">64</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
 
     <expr><specifier>public</specifier> <name>void</name> <call><name>testParentGlobalConf</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr>
         <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>Path</name></type> <name>subWorkflowAppPath</name> <init>= <expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Path</name></type> <name>subWorkflowPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>subWorkflowAppPath</name></expr></argument>, <argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Writer</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>subWorkflowPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name>getWorkflow</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Path</name></type> <name>subWorkflowAppPath</name> <init>= <expr><call><name>createSubWorkflowXml</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
            <decl_stmt><decl><type><name>String</name></type> <name>workflowUri</name> <init>= <expr><call><name>getTestCaseFileUri</name><argument_list>(<argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>appXml</name> <init>= <expr><literal type="string">"&lt;workflow-app xmlns=\"uri:oozie:workflow:0.4\" name=\"workflow\"&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;global&gt;"</literal> <operator>+</operator>
                    <literal type="string">"   &lt;configuration&gt;"</literal> <operator>+</operator>
                    <literal type="string">"        &lt;property&gt;"</literal> <operator>+</operator>
                    <literal type="string">"            &lt;name&gt;foo2&lt;/name&gt;"</literal> <operator>+</operator>
                    <literal type="string">"            &lt;value&gt;foo2&lt;/value&gt;"</literal> <operator>+</operator>
                    <literal type="string">"        &lt;/property&gt;"</literal> <operator>+</operator>
                    <literal type="string">"        &lt;property&gt;"</literal> <operator>+</operator>
                    <literal type="string">"            &lt;name&gt;foo3&lt;/name&gt;"</literal> <operator>+</operator>
                    <literal type="string">"            &lt;value&gt;foo3&lt;/value&gt;"</literal> <operator>+</operator>
                    <literal type="string">"        &lt;/property&gt;"</literal> <operator>+</operator>
                    <literal type="string">"    &lt;/configuration&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;/global&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;start to=\"subwf\"/&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;action name=\"subwf\"&gt;"</literal> <operator>+</operator>
                    <literal type="string">"     &lt;sub-workflow xmlns='uri:oozie:workflow:0.4'&gt;"</literal> <operator>+</operator>
                    <literal type="string">"          &lt;app-path&gt;"</literal> <operator>+</operator> <call><name><name>subWorkflowAppPath</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/app-path&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;propagate-configuration/&gt;"</literal> <operator>+</operator>
                    <literal type="string">"   &lt;configuration&gt;"</literal> <operator>+</operator>
                    <literal type="string">"        &lt;property&gt;"</literal> <operator>+</operator>
                    <literal type="string">"            &lt;name&gt;foo3&lt;/name&gt;"</literal> <operator>+</operator>
                    <literal type="string">"            &lt;value&gt;actionconf&lt;/value&gt;"</literal> <operator>+</operator>
                    <literal type="string">"        &lt;/property&gt;"</literal> <operator>+</operator>
                    <literal type="string">"   &lt;/configuration&gt;"</literal> <operator>+</operator>
                    <literal type="string">"     &lt;/sub-workflow&gt;"</literal> <operator>+</operator>
                    <literal type="string">"     &lt;ok to=\"end\"/&gt;"</literal> <operator>+</operator>
                    <literal type="string">"     &lt;error to=\"fail\"/&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;/action&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;kill name=\"fail\"&gt;"</literal> <operator>+</operator>
                    <literal type="string">"     &lt;message&gt;Sub workflow failed, error message[${wf:errorMessage(wf:lastErrorNode())}]&lt;/message&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;/kill&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;end name=\"end\"/&gt;"</literal> <operator>+</operator>
                    <literal type="string">"&lt;/workflow-app&gt;"</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>workflowUri</name> <init>= <expr><call><name>createTestWorkflowXml</name><argument_list>(<argument><expr><name>subWorkflowAppPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>LocalOozie</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>OozieClient</name></type> <name>wfClient</name> <init>= <expr><call><name><name>LocalOozie</name><operator>.</operator><name>getClient</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Properties</name></type> <name>conf</name> <init>= <expr><call><name><name>wfClient</name><operator>.</operator><name>createConfiguration</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>APP_PATH</name></name></expr></argument>, <argument><expr><name>workflowUri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"appName"</literal></expr></argument>, <argument><expr><literal type="string">"var-app-name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>jobId</name> <init>= <expr><call><name><name>wfClient</name><operator>.</operator><name>submit</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>wfClient</name><operator>.</operator><name>start</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>waitFor</name><argument_list>(<argument><expr><name>JOB_TIMEOUT</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
                <function><type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
                    <return>return <expr><operator>(</operator><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>SUCCEEDED</name></name><operator>)</operator> <operator>&amp;&amp;</operator>
                            <operator>(</operator><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getActions</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>OK</name></name><operator>)</operator></expr>;</return>
                <expr_stmt/>}</block_content>
            }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr></expr_stmt>
            <decl_stmt><decl><type><name>WorkflowJob</name></type> <name>subWorkflow</name> <init>= <expr><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call><operator>.</operator>
                    <call><name>getActions</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>Configuration</name></type> <name>subWorkflowConf</name> <init>= <expr><call><name>getWorkflowConfig</name><argument_list>(<argument><expr><name>subWorkflow</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Element</name></type> <name>eConf</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>subWorkflow</name><operator>.</operator><name>getActions</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Element</name></type> <name>element</name> <init>= <expr><call><name><name>eConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><call><name><name>eConf</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Configuration</name></type> <name>actionConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><name>element</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foo1"</literal></expr></argument>, <argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"subconf"</literal></expr></argument>, <argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>, <argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line">// Checking the action conf configuration.</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"actionconf"</literal></expr></argument>, <argument><expr><call><name><name>subWorkflowConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name><name>LocalOozie</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></finally></block_content></block></finally>}</block></expr></expr_stmt>
    }

    public <function><type><name>void</name></type> <name>testParentGlobalConfWithConfigDefault</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>Path</name></type> <name>subWorkflowAppPath</name> <init>= <expr><call><name>createSubWorkflowXml</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name>createConfigDefaultXml</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>workflowUri</name> <init>= <expr><call><name>createTestWorkflowXml</name><argument_list>(<argument><expr><name>subWorkflowAppPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
            <expr_stmt><expr><call><name>writeToFile</name><argument_list>(<argument><expr><name>appXml</name></expr></argument>, <argument><expr><name>workflowUri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>LocalOozie</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><specifier>final</specifier> <name>OozieClient</name></type> <name>wfClient</name> <init>= <expr><call><name><name>LocalOozie</name><operator>.</operator><name>getClient</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>Properties</name></type> <name>conf</name> <init>= <expr><call><name><name>wfClient</name><operator>.</operator><name>createConfiguration</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>APP_PATH</name></name></expr></argument>, <argument><expr><name>workflowUri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"appName"</literal></expr></argument>, <argument><expr><literal type="string">"var-app-name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"other"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>jobId</name> <init>= <expr><call><name><name>wfClient</name><operator>.</operator><name>submit</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>wfClient</name><operator>.</operator><name>start</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// configuration should have overridden value</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"other"</literal></expr></argument>,
                    <argument><expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
             <expr_stmt><expr><call><name>waitFor</name><argument_list>(<argument><expr><name>JOB_TIMEOUT</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
                 <function><type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">700</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">708</literal></expr><operator>,</operator><expr><literal type="number">92</literal> @@ <specifier>public</specifier> class <name>TestSubWorkflowActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
             }</block></expr></expr_stmt></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><name>WorkflowJob</name></type> <name>subWorkflow</name> <init>= <expr><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><call><name><name>wfClient</name><operator>.</operator><name>getJobInfo</name></name><argument_list>(<argument><expr><name>jobId</name></expr></argument>)</argument_list></call><operator>.</operator>
                     <call><name>getActions</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExternalId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Configuration</name></type> <name>subWorkflowConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>subWorkflow</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>Configuration</name></type> <name>subWorkflowConf</name> <init>= <expr><call><name>getWorkflowConfig</name><argument_list>(<argument><expr><name>subWorkflow</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>Element</name></type> <name>eConf</name> <init>= <expr><call><name><name>XmlUtils</name><operator>.</operator><name>parseXml</name></name><argument_list>(<argument><expr><call><name><name>subWorkflow</name><operator>.</operator><name>getActions</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>Element</name></type> <name>element</name> <init>= <expr><call><name><name>eConf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><call><name><name>eConf</name><operator>.</operator><name>getNamespace</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>Configuration</name></type> <name>actionConf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>XmlUtils</name><operator>.</operator><name>prettyPrint</name></name><argument_list>(<argument><expr><name>element</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"subconf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line">// configuration in subWorkflow should have overridden value</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"other"</literal></expr></argument>, <argument><expr><call><name><name>subWorkflowConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foo1"</literal></expr></argument>, <argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"subconf"</literal></expr></argument>, <argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>, <argument><expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <comment type="line">// Checking the action conf configuration.</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>subWorkflowConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"actionconf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"actionconf"</literal></expr></argument>, <argument><expr><call><name><name>subWorkflowConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"foo3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         </block_content>}</block> <finally>finally <block>{<block_content>
             <expr_stmt><expr><call><name><name>LocalOozie</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></finally></try>
     </block_content>}</block></function>
 
    <function><type><specifier>private</specifier> <name>Configuration</name></type> <name>getWorkflowConfig</name><parameter_list>(<parameter><decl><type><name>WorkflowJob</name></type> <name>workflow</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><call><name><name>workflow</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>String</name></type> <name>createTestWorkflowXml</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>subWorkflowAppPath</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>workflowUri</name> <init>= <expr><call><name>getTestCaseFileUri</name><argument_list>(<argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>appXml</name> <init>= <expr><literal type="string">"&lt;workflow-app xmlns=\"uri:oozie:workflow:0.4\" name=\"workflow\"&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;global&gt;"</literal> <operator>+</operator>
                <literal type="string">"   &lt;configuration&gt;"</literal> <operator>+</operator>
                <literal type="string">"        &lt;property&gt;"</literal> <operator>+</operator>
                <literal type="string">"            &lt;name&gt;foo2&lt;/name&gt;"</literal> <operator>+</operator>
                <literal type="string">"            &lt;value&gt;foo2&lt;/value&gt;"</literal> <operator>+</operator>
                <literal type="string">"        &lt;/property&gt;"</literal> <operator>+</operator>
                <literal type="string">"        &lt;property&gt;"</literal> <operator>+</operator>
                <literal type="string">"            &lt;name&gt;foo3&lt;/name&gt;"</literal> <operator>+</operator>
                <literal type="string">"            &lt;value&gt;foo3&lt;/value&gt;"</literal> <operator>+</operator>
                <literal type="string">"        &lt;/property&gt;"</literal> <operator>+</operator>
                <literal type="string">"    &lt;/configuration&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;/global&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;start to=\"subwf\"/&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;action name=\"subwf\"&gt;"</literal> <operator>+</operator>
                <literal type="string">"     &lt;sub-workflow xmlns='uri:oozie:workflow:0.4'&gt;"</literal> <operator>+</operator>
                <literal type="string">"          &lt;app-path&gt;"</literal> <operator>+</operator> <call><name><name>subWorkflowAppPath</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/app-path&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;propagate-configuration/&gt;"</literal> <operator>+</operator>
                <literal type="string">"   &lt;configuration&gt;"</literal> <operator>+</operator>
                <literal type="string">"        &lt;property&gt;"</literal> <operator>+</operator>
                <literal type="string">"            &lt;name&gt;foo3&lt;/name&gt;"</literal> <operator>+</operator>
                <literal type="string">"            &lt;value&gt;actionconf&lt;/value&gt;"</literal> <operator>+</operator>
                <literal type="string">"        &lt;/property&gt;"</literal> <operator>+</operator>
                <literal type="string">"   &lt;/configuration&gt;"</literal> <operator>+</operator>
                <literal type="string">"     &lt;/sub-workflow&gt;"</literal> <operator>+</operator>
                <literal type="string">"     &lt;ok to=\"end\"/&gt;"</literal> <operator>+</operator>
                <literal type="string">"     &lt;error to=\"fail\"/&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;/action&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;kill name=\"fail\"&gt;"</literal> <operator>+</operator>
                <literal type="string">"     &lt;message&gt;Sub workflow failed, error message[${wf:errorMessage(wf:lastErrorNode())}]&lt;/message&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;/kill&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;end name=\"end\"/&gt;"</literal> <operator>+</operator>
                <literal type="string">"&lt;/workflow-app&gt;"</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>writeToFile</name><argument_list>(<argument><expr><name>appXml</name></expr></argument>, <argument><expr><name>workflowUri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>workflowUri</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>Path</name></type> <name>createSubWorkflowXml</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Path</name></type> <name>subWorkflowAppPath</name> <init>= <expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>subWorkflowPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>subWorkflowAppPath</name></expr></argument>, <argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Writer</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>subWorkflowPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name>getWorkflow</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>subWorkflowAppPath</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>createConfigDefaultXml</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>config_defaultUri</name><init>=<expr><call><name>getTestCaseFileUri</name><argument_list>(<argument><expr><literal type="string">"config-default.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>config_default</name><init>=<expr><literal type="string">"&lt;configuration&gt;\n"</literal> <operator>+</operator>
                <literal type="string">"&lt;property&gt;\n"</literal> <operator>+</operator>
                <literal type="string">"&lt;name&gt;foo&lt;/name&gt;\n"</literal> <operator>+</operator>
                <literal type="string">"&lt;value&gt;default&lt;/value&gt;\n"</literal> <operator>+</operator>
                <literal type="string">"&lt;/property&gt;\n"</literal> <operator>+</operator>
                <literal type="string">"&lt;/configuration&gt;"</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>writeToFile</name><argument_list>(<argument><expr><name>config_default</name></expr></argument>, <argument><expr><name>config_defaultUri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

     <function><type><specifier>public</specifier> <name>String</name></type> <name>getWorkflow</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return  <expr><literal type="string">"&lt;workflow-app xmlns='uri:oozie:workflow:0.4' name='app'&gt;"</literal> <operator>+</operator>
                 <literal type="string">"&lt;global&gt;"</literal> <operator>+</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>d9abb4b54</name><operator>..</operator><literal type="number">67f48e8f6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.3.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">2511</literal> <name>SubWorkflow</name> <name>missing</name> <name>variable</name> <name>set</name> <name>from</name> <name>option</name></expr></return> <if_stmt><if>if config-default is present in parent workflow <condition>(<expr><name>asasvari</name> <name>via</name> <name>rkanter</name></expr>)</condition><block type="pseudo"><block_content>
 <expr_stmt><expr><name>OOZIE</name><operator>-</operator><literal type="number">2391</literal> <name>spark</name><operator>-</operator><name>opts</name> <name>value</name> <name>in</name> <name><name>workflow</name><operator>.</operator><name>xml</name></name> <name>is</name> <name>not</name> <name>parsed</name> <call><name>properly</name> <argument_list>(<argument><expr><name>gezapeti</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2489</literal> <name>XML</name> <name>parsing</name> <name>is</name> <call><name>vulnerable</name> <argument_list>(<argument><expr><name>fdenes</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">2485</literal> <name>Oozie</name> <name>client</name> <name>keeps</name> <name>trying</name> <name>to</name> <name>use</name> <name>expired</name> <name>auth</name> <call><name>token</name> <argument_list>(<argument><expr><name>rkanter</name></expr></argument>)</argument_list></call>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
