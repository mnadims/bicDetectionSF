<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/872db60c.java"><expr_stmt><expr><name>From</name> <literal type="number">872db60c8da0d03900e057923ae41f043ffc6b59</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Virag</name> <name>Kothari</name> <operator>&lt;</operator><name>virag</name>@<name>yahoo</name><operator>-</operator><name><name>inc</name><operator>.</operator><name>com</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">24</literal> <name>Feb</name> <literal type="number">2014</literal> <literal type="number">10</literal><operator>:</operator><literal type="number">30</literal><operator>:</operator><literal type="number">27</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">1699</literal> <name>Some</name> <name>of</name> <name>the</name> <name>commands</name> <name>submitted</name> <name>to</name> <name>Oozie</name> <name>internal</name>
 <name>queue</name> <name>are</name> <name>never</name> <call><name>executed</name> <argument_list>(<argument><expr><name>sriksun</name> <name>via</name> <name>virag</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallableQueueService</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">35</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>PollablePriorityDelayQueue</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">32</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>service</name><operator>/</operator><name><name>TestCallableQueueService</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">59</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">92</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">37</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallableQueueService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallableQueueService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ab81b091c</name><operator>..</operator><literal type="number">093eb08dc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallableQueueService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>CallableQueueService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>BlockingQueue</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentHashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>RejectedExecutionException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ThreadPoolExecutor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>CallableQueueService</name> implements <name>Service</name></expr><operator>,</operator> <expr><name>Instrumentable</name> <block>{
         }</block>
 
         <specifier>public</specifier> <name>void</name> <call><name>run</name><argument_list>()</argument_list></call> <block>{
            <if_stmt><if>if <condition>(<expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSystemMode</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>SYSTEM_MODE</name><operator>.</operator><name>SAFEMODE</name></name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Oozie is in SAFEMODE, requeuing callable [{0}] with [{1}]ms delay"</literal></expr></argument>, <argument><expr><call><name>getElement</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>,
                        <argument><expr><name>SAFE_MODE_DELAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>setDelay</name><argument_list>(<argument><expr><name>SAFE_MODE_DELAY</name></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>removeFromUniqueCallables</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>queue</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return>return;</return>
            <expr_stmt/></block_content></block></if></if_stmt>}</block>
            <name><name>XCallable</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <name>callable</name> <operator>=</operator> <call><name>getElement</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name>XCallable</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>callable</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
             <try>try <block>{<block_content>
                <expr_stmt><expr><call><name>removeFromUniqueCallables</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSystemMode</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>SYSTEM_MODE</name><operator>.</operator><name>SAFEMODE</name></name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Oozie is in SAFEMODE, requeuing callable [{0}] with [{1}]ms delay"</literal></expr></argument>, <argument><expr><call><name>getElement</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>,
                            <argument><expr><name>SAFE_MODE_DELAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name>setDelay</name><argument_list>(<argument><expr><name>SAFE_MODE_DELAY</name></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name>queue</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return>return;</return>
                </block_content>}</block></if></if_stmt>
                <expr_stmt><expr><name>callable</name> <operator>=</operator> <call><name>getElement</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 <if_stmt><if>if <condition>(<expr><call><name>callableBegin</name><argument_list>(<argument><expr><name>callable</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                     <expr_stmt><expr><call><name><name>cron</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name>addInQueueCron</name><argument_list>(<argument><expr><name>cron</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>CallableQueueService</name> implements <name>Service</name></expr><operator>,</operator> <expr><name>Instrumentable</name> <block>{
                     <expr><name>XLog</name> <name>log</name> <operator>=</operator> <call><name><name>XLog</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
                     <call><name><name>log</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"executing callable [{0}]"</literal></expr></argument>, <argument><expr><call><name><name>callable</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
                    <expr_stmt><expr><call><name>removeFromUniqueCallables</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                     <try>try <block>{<block_content>
                         <expr_stmt><expr><call><name><name>callable</name><operator>.</operator><name>call</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                         <expr_stmt><expr><call><name>incrCounter</name><argument_list>(<argument><expr><name>INSTR_EXECUTED_COUNTER</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">188</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>CallableQueueService</name> implements <name>Service</name></expr><operator>,</operator> <expr><name>Instrumentable</name> <block>{
                     <expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"max concurrency for callable [{0}] exceeded, requeueing with [{1}]ms delay"</literal></expr></argument>, <argument><expr><call><name><name>callable</name>
                             <operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CONCURRENCY_DELAY</name></expr></argument>)</argument_list></call></expr>;
                     <call><name>setDelay</name><argument_list>(<argument><expr><name>CONCURRENCY_DELAY</name></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name>removeFromUniqueCallables</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name>queue</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name>incrCounter</name><argument_list>(<argument><expr><call><name><name>callable</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"#exceeded.concurrency"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></try>
             </block_content>}</block></if></if_stmt>
            <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <expr_stmt><expr><call><name>incrCounter</name><argument_list>(<argument><expr><name>INSTR_FAILED_COUNTER</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"exception callable [{0}], {1}"</literal></expr></argument>, <argument><expr><ternary><condition><expr><name>callable</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">"N/A"</literal></expr> </then><else>: <expr><call><name><name>callable</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></argument>,
                        <argument><expr><call><name><name>t</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></catch>
             <finally>finally <block>{<block_content>
                <expr_stmt><expr><call><name>callableEnd</name><argument_list>(<argument><expr><name>callable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><name>callable</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name>callableEnd</name><argument_list>(<argument><expr><name>callable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
             </block_content>}</block></finally>
         </block_content>}</block></try>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">558</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">563</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>CallableQueueService</name> implements <name>Service</name></expr><operator>,</operator> <expr><name>Instrumentable</name> <block>{
                 <try>try <block>{<block_content>
                     <expr_stmt><expr><call><name><name>executor</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><name>wrapper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt>
                <catch>catch <parameter_list>(<parameter><decl><type><name>RejectedExecutionException</name></type> <name>ree</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>ree</name></decl></parameter>)</parameter_list> <block>{<block_content>
                     <expr_stmt><expr><call><name><name>wrapper</name><operator>.</operator><name>removeFromUniqueCallables</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                    <throw>throw <expr><name>ree</name></expr>;</throw>
                    <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ree</name></expr></argument>)</argument_list></call></expr>;</throw>
                 </block_content>}</block></catch>
             </block_content>}</block></catch>
         }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PollablePriorityDelayQueue</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PollablePriorityDelayQueue</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">664554439..6d692e31e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PollablePriorityDelayQueue</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PollablePriorityDelayQueue</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>PollablePriorityDelayQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> extends <name><name>PriorityDelayQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     @<name>Override</name>
     <specifier>public</specifier> <name><name>QueueElement</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> <call><name>poll</name><argument_list>()</argument_list></call> <block>{
        <expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;
         <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name>antiStarvation</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><name><name>QueueElement</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></type> <name>e</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>priorities</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8b4e0fff6</literal><operator>..</operator><name>a3f214840</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>util</name><operator>/</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>PriorityDelayQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> extends <name>AbstractQueue</name><operator>&lt;</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>Queu</name></name>
     @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
     <specifier>public</specifier> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name><name>QueueElement</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <call><name>iterator</name><argument_list>()</argument_list></call> <block>{
         <expr><name><name>QueueElement</name><index>[]</index><index>[]</index></name> <name>queueElements</name> <operator>=</operator> <operator>new</operator> <name><name>QueueElement</name><index>[<expr><name><name>queues</name><operator>.</operator><name>length</name></name></expr>]</index><index>[]</index></name></expr>;
        <expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;
         <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>queues</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                 <expr_stmt><expr><name><name>queueElements</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>queues</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>toArray</name><argument_list>(<argument><expr><operator>new</operator> <name><name>QueueElement</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></for></block_content></block></try>}</block>
@@ <operator>-</operator><literal type="number">340</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">340</literal></expr><operator>,</operator><expr><literal type="number">29</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>PriorityDelayQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> extends <name>AbstractQueue</name><operator>&lt;</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>Queu</name></name></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>queueElement</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>NullPointerException</name><argument_list>(<argument><expr><literal type="string">"queueElement is NULL"</literal></expr></argument>)</argument_list></call></expr>;</throw>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></try>}</block></expr>
        <if_stmt><if>if <condition>(<expr><call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <name>priorities</name></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"priority out of range"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        <if_stmt><if>if <condition>(<expr><call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <name>priorities</name></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"priority out of range: "</literal> <operator>+</operator> <name>queueElement</name></expr></argument>)</argument_list></call></expr>;</throw>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><name><name>queueElement</name><operator>.</operator><name>inQueue</name></name></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"queueElement already in a queue"</literal></expr></argument>)</argument_list></call></expr>;</throw>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"queueElement already in a queue: "</literal> <operator>+</operator> <name>queueElement</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></if></if_stmt>
         <if_stmt><if>if <condition>(<expr><operator>!</operator><name>ignoreSize</name> <operator>&amp;&amp;</operator> <name>currentSize</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>currentSize</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <name>maxSize</name></expr>)</condition> <block>{<block_content>
             <return>return <expr><literal type="boolean">false</literal></expr>;</return>
         </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>accepted</name> <init>= <expr><name><name>queues</name><index>[<expr><call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call></expr>]</index></name><operator>.</operator><call><name>offer</name><argument_list>(<argument><expr><name>queueElement</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>debug</name><argument_list>(<argument><expr><literal type="string">"offer([{0}]), to P[{1}] delay[{2}ms] accepted[{3}]"</literal></expr></argument>, <argument><expr><call><name><name>queueElement</name><operator>.</operator><name>getElement</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>,
              <argument><expr><call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>queueElement</name><operator>.</operator><name>getDelay</name></name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>accepted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>accepted</name></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>currentSize</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>currentSize</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>accepted</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>accepted</name> <operator>=</operator> <name><name>queues</name><index>[<expr><call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call></expr>]</index></name><operator>.</operator><call><name>offer</name><argument_list>(<argument><expr><name>queueElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>debug</name><argument_list>(<argument><expr><literal type="string">"offer([{0}]), to P[{1}] delay[{2}ms] accepted[{3}]"</literal></expr></argument>, <argument><expr><call><name><name>queueElement</name><operator>.</operator><name>getElement</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>,
                  <argument><expr><call><name><name>queueElement</name><operator>.</operator><name>getPriority</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>queueElement</name><operator>.</operator><name>getDelay</name></name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>accepted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>accepted</name></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>currentSize</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>currentSize</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <expr_stmt><expr><name><name>queueElement</name><operator>.</operator><name>inQueue</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><name><name>queueElement</name><operator>.</operator><name>inQueue</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        </block_content>}</block> <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>unlock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></finally></try>
         <return>return <expr><name>accepted</name></expr>;</return>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">390</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">396</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>PriorityDelayQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> extends <name>AbstractQueue</name><operator>&lt;</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>Queu</name></name>
      <operator>*</operator><operator>/</operator>
     @<name>Override</name>
     <specifier>public</specifier> <name><name>QueueElement</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> <call><name>poll</name><argument_list>()</argument_list></call> <block>{
        <expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
         <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name>antiStarvation</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><name><name>QueueElement</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></type> <name>e</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>priorities</name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">421</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">427</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>PriorityDelayQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> extends <name>AbstractQueue</name><operator>&lt;</operator><name><name>PriorityDelayQueue</name><operator>.</operator><name>Queu</name></name>
      <operator>*</operator><operator>/</operator>
     @<name>Override</name>
     <specifier>public</specifier> <name><name>QueueElement</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name> <call><name>peek</name><argument_list>()</argument_list></call> <block>{
        <expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
         <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name>antiStarvation</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><name><name>QueueElement</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></type> <name>e</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestCallableQueueService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestCallableQueueService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">903866df1</literal><operator>..</operator><name>fefb44893</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestCallableQueueService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>service</name><operator>/</operator><name><name>TestCallableQueueService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>service</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</import>

<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>CommandException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>PreconditionException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>command</name><operator>.</operator><name>XCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>test</name><operator>.</operator><name>XTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>XCallable</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</import>

 <class><specifier>public</specifier> class <name>TestCallableQueueService</name> <super_list><extends>extends <super><name>XTestCase</name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><specifier>static</specifier> <name>AtomicLong</name></type> <name>EXEC_ORDER</name> <init>= <expr><operator>new</operator> <call><name>AtomicLong</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">872</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">873</literal></expr><operator>,</operator><expr><literal type="number">46</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCallableQueueService</name> extends <name>XTestCase</name> <block>{
         <expr><call><name>assertTrue</name><argument_list>(<argument><expr><name><name>intCallable</name><operator>.</operator><name>executed</name></name> <operator>&gt;</operator> <call><name><name>callables</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call><operator>.</operator><name>executed</name></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testRemoveUniqueCallables</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>XCommand</name></type> <name>command</name> <init>= <expr><operator>new</operator> <class><super><name>XCommand</name></super><argument_list>(<argument><expr><literal type="string">"Test"</literal></expr></argument>, <argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>boolean</name></type> <name>isLockRequired</name><parameter_list>()</parameter_list> <block>{<block_content>
                <return>return <expr><literal type="boolean">false</literal></expr>;</return>
            </block_content>}</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>String</name></type> <name>getEntityKey</name><parameter_list>()</parameter_list> <block>{<block_content>
                <return>return <expr><literal type="string">"TEST"</literal></expr>;</return>
            </block_content>}</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>void</name></type> <name>loadState</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
            </block_content>}</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>void</name></type> <name>verifyPrecondition</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument>, <argument><expr><name>PreconditionException</name></expr></argument></throws> <block>{<block_content>
            </block_content>}</block></function>

            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>Object</name></type> <name>execute</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CommandException</name></expr></argument></throws> <block>{<block_content>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>destroy</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setSystemProperty</name><argument_list>(<argument><expr><name><name>CallableQueueService</name><operator>.</operator><name>CONF_THREADS</name></name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>Services</name><argument_list>()</argument_list></call><operator>.</operator><call><name>init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CallableQueueService</name></type> <name>queueservice</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>CallableQueueService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>uniquesBefore</name> <init>= <expr><call><name><name>queueservice</name><operator>.</operator><name>getUniqueDump</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>queueservice</name><operator>.</operator><name>queue</name></name><argument_list>(<argument><expr><name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Expected illegal argument exception: priority = 100"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getCause</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>e</name><operator>.</operator><name>getCause</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>IllegalArgumentException</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>uniquesAfter</name> <init>= <expr><call><name><name>queueservice</name><operator>.</operator><name>getUniqueDump</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>uniquesAfter</name><operator>.</operator><name>removeAll</name></name><argument_list>(<argument><expr><name>uniquesBefore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>uniquesAfter</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>uniquesAfter</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">3f8b9bb8f</literal><operator>..</operator><name>fa0540fae</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.1.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">1699</literal> <name>Some</name> <name>of</name> <name>the</name> <name>commands</name> <name>submitted</name> <name>to</name> <name>Oozie</name> <name>internal</name> <name>queue</name> <name>are</name> <name>never</name> <call><name>executed</name> <argument_list>(<argument><expr><name>sriksun</name> <name>via</name> <name>virag</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">1671</literal> <name>add</name> <name>an</name> <name>option</name> <name>to</name> <name>limit</name> <operator>#</operator> <name>of</name> <name>coordinator</name> <name>actions</name></expr></expr_stmt> <for>for log retrieval <control>(<init><expr><name>ryota</name></expr></init>)</control><block type="pseudo"><block_content>
 <expr_stmt><expr><name>OOZIE</name><operator>-</operator><literal type="number">1629</literal> <name>EL</name> <name>function</name> <name><name>in</name> <argument_list type="generic">&lt;<argument><name>timeout</name></argument>&gt;</argument_list></name> <name>is</name> <name>not</name> <name>evaluated</name> <call><name>properly</name> <argument_list>(<argument><expr><name>ryota</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">1618</literal> <name>dryrun</name> <name>should</name> <name>check</name> <name>variable</name> <name>substitution</name> <name>in</name> <call><name><name>workflow</name><operator>.</operator><name>xml</name></name> <argument_list>(<argument><expr><name>bowenzhangusa</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></for></block_content></block></try></block_content></block></try></block_content></block></if></if_stmt>

</unit>
