<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/746be5c2.java"><expr_stmt><expr><name>From</name> <literal type="number">746be5c2917310ab7202767a1a6bb2c79ad26dd6</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Rohini</name> <name><name>Palaniswamy</name> <argument_list type="generic">&lt;<argument><name>rohini</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">2</literal> <name>Mar</name> <literal type="number">2015</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">03</literal><operator>:</operator><literal type="number">01</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">2158</literal> <name>Overrides</name> <name>in</name> <name>action</name> <name>conf</name> <name>in</name> <name>streaming</name> <name>action</name></expr></expr_stmt> <do>do<block type="pseudo"><block_content>
 <decl_stmt><decl><type><name>not</name></type> <name>work</name> <argument_list>(<argument><expr><name>rohini</name></expr></argument>)</argument_list>

--
 <name>release</name>-<name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>  1 +
 <modifier>...</modifier>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>PipesMain</name><operator>.</operator><name>java</name></name> <operator>|</operator> 20 ++++---
 <modifier>...</modifier>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>StreamingMain</name><operator>.</operator><name>java</name></name>    <operator>|</operator> 21 ++++---
 <modifier>...</modifier>/<name>hadoop</name>/<name><name>TestMapReduceActionExecutor</name><operator>.</operator><name>java</name></name>   <operator>|</operator> 60 +++++++++++++++++--
 4 <name>files</name> <name>changed</name></decl>, 82 <decl><type ref="prev"/><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></decl>, 20 <decl><type ref="prev"/><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list>

<name>diff</name> --<name>git</name> <name>a</name>/<name>release</name>-<name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name>/<name>release</name>-<name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>ca6dfc2fd</name>..0851d1c47 100644
-- <name>a</name>/<name>release</name>-<name><name>log</name><operator>.</operator><name>txt</name></name>
++ <name>b</name>/<name>release</name>-<name><name>log</name><operator>.</operator><name>txt</name></name>
@@ -1</decl>,5 +1,6 @@
 -- <decl><type ref="prev"/><name>Oozie</name> 4.2.0 <name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list>
 
<name>OOZIE</name>-2158 <name>Overrides</name> <name>in</name> <name>action</name> <name>conf</name> <name>in</name> <name>streaming</name> <name>action</name> do <name>not</name> <name>work</name> <argument_list>(<argument><expr><name>rohini</name></expr></argument>)</argument_list>
 <name>OOZIE</name>-2042 <name>Max</name> <name>substitution</name> for <name>config</name> <name>variables</name> <name>should</name> <name>be</name> <name>configurable</name> <argument_list>(<argument><expr><name>seoeun25</name> <name>via</name> <name>puru</name></expr></argument>)</argument_list>
 <name>OOZIE</name>-1913 <name>Devise</name> <name>a</name> <name>way</name> <name>to</name> <name>turn</name> <name>off</name> <name>SLA</name> <name>alerts</name> for <name>bundle</name>/<name>coordinator</name> <name>flexibly</name> <argument_list>(<argument><expr><name>puru</name></expr></argument>)</argument_list>
 <name>OOZIE</name>-2071 <name>Add</name> <name>a</name> <name>Spark</name> <name>example</name> <argument_list>(<argument><expr><name>pavan</name> <name>kumar</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list>
<name>diff</name> --<name>git</name> <name>a</name>/<name>sharelib</name>/<name>oozie</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>PipesMain</name><operator>.</operator><name>java</name></name> <name>b</name>/<name>sharelib</name>/<name>oozie</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>PipesMain</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bf91b4327</name>..5b5e9db22 100644
-- <name>a</name>/<name>sharelib</name>/<name>oozie</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>PipesMain</name><operator>.</operator><name>java</name></name>
++ <name>b</name>/<name>sharelib</name>/<name>oozie</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>oozie</name>/<name>action</name>/<name>hadoop</name>/<name><name>PipesMain</name><operator>.</operator><name>java</name></name>
@@ -32</decl>,32 +32,32 @@ public <decl><type ref="prev"/><name>class</name> <name>PipesMain</name> extends <name>MapReduceMain</name> <block>{<block_content>
     </block_content>}</block></decl></decl_stmt></block_content></block>
 
     @Override
    protected RunningJob submitJob(JobConf jobConf</do>) <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>String</name> <name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.map"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>addActionConf</name><parameter_list>(<parameter><decl><type><name>JobConf</name></type> <name>jobConf</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>actionConf</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.map"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><literal type="string">"hadoop.pipes.java.mapper"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.mapper.class"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.reduce"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.reduce"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><literal type="string">"hadoop.pipes.java.reducer"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.reducer.class"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.inputformat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.inputformat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><literal type="string">"hadoop.pipes.java.recordreader"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.input.format.class"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.partitioner"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.partitioner"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.partitioner.class"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.writer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.writer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><literal type="string">"hadoop.pipes.java.recordwriter"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.output.format.class"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.program"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.pipes.program"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"hadoop.pipes.executable"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><call><name><name>value</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"#"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>PipesMain</name> extends <name>MapReduceMain</name> <block>{
             }</block></expr></expr_stmt>
         </block_content>}</block></if></if_stmt>
 
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>addActionConf</name></name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name>actionConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>RunningJob</name></type> <name>submitJob</name><parameter_list>(<parameter><decl><type><name>JobConf</name></type> <name>jobConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

         <comment type="line">//propagate delegation related props from launcher job to MR job</comment>
         <if_stmt><if>if <condition>(<expr><call><name>getFilePathFromEnv</name><argument_list>(<argument><expr><literal type="string">"HADOOP_TOKEN_FILE_LOCATION"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapreduce.job.credentials.binary"</literal></expr></argument>, <argument><expr><call><name>getFilePathFromEnv</name><argument_list>(<argument><expr><literal type="string">"HADOOP_TOKEN_FILE_LOCATION"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>StreamingMain</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>StreamingMain</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c65c8594d</name><operator>..</operator><literal type="number">991bf7e84</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>StreamingMain</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>StreamingMain</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamingMain</name> extends <name>MapReduceMain</name> <block>{
         <expr><call><name>run</name><argument_list>(<argument><expr><name><name>StreamingMain</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
 

     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>RunningJob</name></type> <name>submitJob</name><parameter_list>(<parameter><decl><type><name>JobConf</name></type> <name>jobConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>addActionConf</name><parameter_list>(<parameter><decl><type><name>JobConf</name></type> <name>jobConf</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>actionConf</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.mapper.class"</literal></expr></argument>, <argument><expr><literal type="string">"org.apache.hadoop.streaming.PipeMapper"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.reducer.class"</literal></expr></argument>, <argument><expr><literal type="string">"org.apache.hadoop.streaming.PipeReducer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.map.runner.class"</literal></expr></argument>, <argument><expr><literal type="string">"org.apache.hadoop.streaming.PipeMapRunner"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamingMain</name> extends <name>MapReduceMain</name> <block>{
         <expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.create.symlink"</literal></expr></argument>, <argument><expr><literal type="string">"yes"</literal></expr></argument>)</argument_list></call></expr>;
         <call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.used.genericoptionsparser"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
        <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"stream.addenvironment"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.streaming.mapper"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.streaming.mapper"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"stream.map.streamprocessor"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.streaming.reducer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.streaming.reducer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"stream.reduce.streamprocessor"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.streaming.record-reader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>actionConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"oozie.streaming.record-reader"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"stream.recordreader.class"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name>getStrings</name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><literal type="string">"oozie.streaming.record-reader-mapping"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name>getStrings</name><argument_list>(<argument><expr><name>actionConf</name></expr></argument>, <argument><expr><literal type="string">"oozie.streaming.record-reader-mapping"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>s</name> <range>: <expr><name>values</name></expr></range></decl></init>)</control> <block>{<block_content>
             <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>kv</name> <init>= <expr><call><name><name>s</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"="</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"stream.recordreader."</literal> <operator>+</operator> <name><name>kv</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>kv</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></for>
        <expr_stmt><expr><name>values</name> <operator>=</operator> <call><name>getStrings</name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><literal type="string">"oozie.streaming.env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>values</name> <operator>=</operator> <call><name>getStrings</name><argument_list>(<argument><expr><name>actionConf</name></expr></argument>, <argument><expr><literal type="string">"oozie.streaming.env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>jobConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"stream.addenvironment"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>value</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><name>value</name> <operator>=</operator> <name>value</name> <operator>+</operator> <literal type="string">" "</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamingMain</name> extends <name>MapReduceMain</name> <block>{
         }</block>
         <call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"stream.addenvironment"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>addActionConf</name></name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>, <argument><expr><name>actionConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>RunningJob</name></type> <name>submitJob</name><parameter_list>(<parameter><decl><type><name>JobConf</name></type> <name>jobConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

         <comment type="line">// propagate delegation related props from launcher job to MR job</comment>
         <if_stmt><if>if <condition>(<expr><call><name>getFilePathFromEnv</name><argument_list>(<argument><expr><literal type="string">"HADOOP_TOKEN_FILE_LOCATION"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>jobConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapreduce.job.credentials.binary"</literal></expr></argument>, <argument><expr><call><name>getFilePathFromEnv</name><argument_list>(<argument><expr><literal type="string">"HADOOP_TOKEN_FILE_LOCATION"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestMapReduceActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestMapReduceActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3204c00c6</literal><operator>..</operator><name>d4095dafd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestMapReduceActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>sharelib</name><operator>/</operator><name>streaming</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>action</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>TestMapReduceActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>hadoop</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>filecache</name><operator>.</operator><name>DistributedCache</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FSDataInputStream</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>PathFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobConf</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobClient</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>RunningJob</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>ClassUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>jdom</name><operator>.</operator><name>Element</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Scanner</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>ZipEntry</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>SequenceFile</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>action</name><operator>.</operator><name>ActionExecutorException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>util</name><operator>.</operator><name>PropertiesUtils</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">799</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">806</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMapReduceActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <return>return <expr><name>conf</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testStreaming</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>runStreamingWordCountJob</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>inputDir</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>outputDir</name></decl></parameter>, <parameter><decl><type><name>XConfiguration</name></type> <name>streamingConf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Path</name></type> <name>streamingJar</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"jar/hadoop-streaming.jar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">807</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">814</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMapReduceActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><name>OutputStream</name> <name>os</name> <operator>=</operator> <call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getAppPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>streamingJar</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <call><name><name>IOUtils</name><operator>.</operator><name>copyStream</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>, <argument><expr><name>os</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
        <decl_stmt><decl><type><name>Path</name></type> <name>inputDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"input"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>outputDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"output"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

         <decl_stmt><decl><type><name>Writer</name></type> <name>w</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><literal type="string">"data.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">"dummy\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">"dummy\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">818</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">822</literal></expr><operator>,</operator><expr><literal type="number">57</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMapReduceActionExecutor</name> extends <name>ActionExecutorTestCase</name> <block>{
         <expr><name>String</name> <name>actionXml</name> <operator>=</operator> <literal type="string">"&lt;map-reduce&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;job-tracker&gt;"</literal> <operator>+</operator> <call><name>getJobTrackerUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/job-tracker&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;name-node&gt;"</literal>
                 <operator>+</operator> <call><name>getNameNodeUri</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"&lt;/name-node&gt;"</literal> <operator>+</operator> <literal type="string">"      &lt;streaming&gt;"</literal> <operator>+</operator> <literal type="string">"        &lt;mapper&gt;cat&lt;/mapper&gt;"</literal>
                 <operator>+</operator> <literal type="string">"        &lt;reducer&gt;wc&lt;/reducer&gt;"</literal> <operator>+</operator> <literal type="string">"      &lt;/streaming&gt;"</literal>
                <operator>+</operator> <call><name>getStreamingConfig</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toXmlString</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"&lt;file&gt;"</literal>
                <operator>+</operator> <call><name><name>streamingConf</name><operator>.</operator><name>toXmlString</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"&lt;file&gt;"</literal>
                 <operator>+</operator> <name>streamingJar</name> <operator>+</operator> <literal type="string">"&lt;/file&gt;"</literal> <operator>+</operator> <literal type="string">"&lt;/map-reduce&gt;"</literal></expr>;
         <call><name>_testSubmit</name><argument_list>(<argument><expr><literal type="string">"streaming"</literal></expr></argument>, <argument><expr><name>actionXml</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testStreaming</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>inputDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"input"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>outputDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"output"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>XConfiguration</name></type> <name>streamingConf</name> <init>= <expr><call><name>getStreamingConfig</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>runStreamingWordCountJob</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><name>outputDir</name></expr></argument>, <argument><expr><name>streamingConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><specifier>final</specifier> <name>FSDataInputStream</name></type> <name>dis</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name>getOutputFile</name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>lines</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name><operator>.</operator><name>readLines</name></name><argument_list>(<argument><expr><name>dis</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>dis</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>lines</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// Not sure why it is 14 instead of 12. \n twice ??</comment>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"2       2      14"</literal></expr></argument>, <argument><expr><call><name><name>lines</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testStreamingConfOverride</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>inputDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"input"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>outputDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name>getFsTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"output"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>XConfiguration</name></type> <name>streamingConf</name> <init>= <expr><call><name>getStreamingConfig</name><argument_list>(<argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>outputDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>streamingConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"mapred.output.format.class"</literal></expr></argument>, <argument><expr><literal type="string">"org.apache.hadoop.mapred.SequenceFileOutputFormat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>runStreamingWordCountJob</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>, <argument><expr><name>outputDir</name></expr></argument>, <argument><expr><name>streamingConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name><name>SequenceFile</name><operator>.</operator><name>Reader</name></name></type> <name>seqFile</name> <init>= <expr><operator>new</operator> <call><name><name>SequenceFile</name><operator>.</operator><name>Reader</name></name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><call><name>getOutputFile</name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>getFileSystem</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Text</name></type> <name>key</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>value</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>seqFile</name><operator>.</operator><name>next</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"2       2      14"</literal></expr></argument>, <argument><expr><call><name><name>key</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><call><name><name>value</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>seqFile</name><operator>.</operator><name>next</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>seqFile</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>Path</name></type> <name>getOutputFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>outputDir</name></decl></parameter>, <parameter><decl><type><name>FileSystem</name></type> <name>fs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name><name>FileStatus</name><index>[]</index></name></type> <name>files</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>listStatus</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>PathFilter</name></super><argument_list>()</argument_list> <block>{

            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>boolean</name></type> <name>accept</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <return>return <expr><call><name><name>path</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><literal type="string">"part"</literal></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><name><name>files</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>getPath</name><argument_list>()</argument_list></call></expr>;</return> <comment type="line">//part-[m/r]-00000</comment>
    </block_content>}</block></function>

     <function><type><specifier>protected</specifier> <name>XConfiguration</name></type> <name>getPipesConfig</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>inputDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>outputDir</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <decl_stmt><decl><type><name>XConfiguration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><literal type="string">"hadoop.pipes.java.recordreader"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function>

</unit>
