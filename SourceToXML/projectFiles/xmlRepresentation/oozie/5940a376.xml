<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/oozie/5940a376.java"><expr_stmt><expr><name>From</name> <literal type="number">5940a3764ca9cb1f95a7378713e77f38742d9ddd</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name><name>mona</name> <argument_list type="generic">&lt;<argument><name>mona</name><annotation>@<name>unknown</name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">17</literal> <name>Oct</name> <literal type="number">2013</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">23</literal><operator>:</operator><literal type="number">00</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>OOZIE</name><operator>-</operator><literal type="number">1559</literal> <name>Fix</name> <name>missing</name> <name>fields</name> <name>from</name> <operator>new</operator> <name>SELECT</name> <name>queries</name> <name>and</name>
 <name>Recovery</name> <name>Service</name> <name>picking</name> <name>up</name> <name>killed</name> <name>control</name> <call><name>nodes</name> <argument_list>(<argument><expr><name>ryota</name></expr></argument>,<argument><expr><name>mona</name> <name>via</name> <name>mona</name></expr></argument>)</argument_list></call>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/oozie/trunk@1533196 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>WorkflowActionBean</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordActionInputCheckXCommand</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionEndXCommand</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionKillXCommand</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>KillXCommand</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>jpa</name><operator>/</operator><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">113</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>oozie</name><operator>/</operator><name>event</name><operator>/</operator><name><name>TestEventGeneration</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestWorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">81</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>                               <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">12</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">90</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">142</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9923478ea</literal><operator>..</operator><name>f189b69b4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>CoordinatorJobBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOB_ACTION_KILL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.id, w.user, w.group, w.appName, w.statusStr from CoordinatorJobBean w where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOB_MATERIALIZE"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.id, w.user, w.group, w.appName, w.statusStr, w.frequency, w.matThrottling, w.timeOut, w.timeZone, w.startTimestamp, w.endTimestamp, w.pauseTimestamp, w.nextMaterializedTimestamp, w.lastActionTimestamp, w.lastActionNumber, w.doneMaterialization, w.bundleId, w.conf, w.jobXml from CoordinatorJobBean w where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
        <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOB_MATERIALIZE"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.id, w.user, w.group, w.appName, w.statusStr, w.frequency, w.matThrottling, w.timeOut, w.timeZone, w.startTimestamp, w.endTimestamp, w.pauseTimestamp, w.nextMaterializedTimestamp, w.lastActionTimestamp, w.lastActionNumber, w.doneMaterialization, w.bundleId, w.conf, w.jobXml, w.appNamespace from CoordinatorJobBean w where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
         <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_COORD_JOB_SUSPEND_KILL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select w.id, w.user, w.group, w.appName, w.statusStr, w.bundleId, w.appNamespace, w.doneMaterialization from CoordinatorJobBean w where w.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>WorkflowActionBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>WorkflowActionBean</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">17ed5c7eb</literal><operator>..</operator><literal type="number">2b1f0448f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>WorkflowActionBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name><name>WorkflowActionBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
 
     <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_ACTION_CHECK"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update WorkflowActionBean a set a.userRetryCount = :userRetryCount, a.stats = :stats, a.externalChildIDs = :externalChildIDs, a.externalStatus = :externalStatus, a.statusStr = :status, a.data = :data, a.pending = :pending, a.errorCode = :errorCode, a.errorMessage = :errorMessage, a.lastCheckTimestamp = :lastCheckTime, a.retries = :retries, a.pendingAgeTimestamp = :pendingAge, a.startTimestamp = :startTime where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_ACTION_END"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update WorkflowActionBean a set a.stats = :stats, a.errorCode = :errorCode, a.errorMessage = :errorMessage, a.retries = :retries, a.endTimestamp = :endTime, a.statusStr = :status, a.retries = :retries, a.pending = :pending, a.pendingAgeTimestamp = :pendingAge, a.signalValue = :signalValue, a.userRetryCount = :userRetryCount, a.externalStatus = :externalStatus where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_ACTION_END"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update WorkflowActionBean a set a.stats = :stats, a.errorCode = :errorCode, a.errorMessage = :errorMessage, a.retries = :retries, a.endTimestamp = :endTime, a.statusStr = :status, a.pending = :pending, a.pendingAgeTimestamp = :pendingAge, a.signalValue = :signalValue, a.userRetryCount = :userRetryCount, a.externalStatus = :externalStatus where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
     <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"UPDATE_ACTION_PENDING"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"update WorkflowActionBean a set a.pending = :pending, a.pendingAgeTimestamp = :pendingAge where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONObject</name></name>;</import>
 
     <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_FAIL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.type, a.logToken, a.transition, a.errorCode, a.errorMessage from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_SIGNAL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.type, a.logToken, a.transition, a.errorCode, a.errorMessage, a.executionPath, a.signalValue, a.slaXml from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_SIGNAL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.pendingAgeTimestamp, a.type, a.logToken, a.transition, a.errorCode, a.errorMessage, a.executionPath, a.signalValue, a.slaXml from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_START"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.type, a.logToken, a.transition, a.retries, a.userRetryCount, a.userRetryMax, a.userRetryInterval, a.startTimestamp, a.endTimestamp, a.errorCode, a.errorMessage, a.cred, a.conf, a.slaXml from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_START"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.pendingAgeTimestamp, a.type, a.logToken, a.transition, a.retries, a.userRetryCount, a.userRetryMax, a.userRetryInterval, a.startTimestamp, a.endTimestamp, a.errorCode, a.errorMessage, a.cred, a.externalId, a.externalStatus, a.conf, a.slaXml from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_CHECK"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.type, a.logToken, a.transition, a.retries, a.trackerUri, a.startTimestamp, a.endTimestamp, a.lastCheckTimestamp, a.errorCode, a.errorMessage, a.externalId, a.externalStatus, a.externalChildIDs, a.conf from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_END"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.type, a.logToken, a.transition, a.retries, a.trackerUri, a.userRetryCount, a.userRetryMax, a.userRetryInterval, a.startTimestamp, a.endTimestamp, a.errorCode, a.errorMessage, a.externalId, a.externalStatus, a.externalChildIDs, a.conf, a.data, a.stats from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>

    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_KILL"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.type, a.logToken, a.transition, a.retries, a.trackerUri, a.startTimestamp, a.endTimestamp, a.errorCode, a.errorMessage, a.externalId, a.conf, a.data from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
    <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_CHECK"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.name, a.statusStr, a.pending, a.pendingAgeTimestamp, a.type, a.logToken, a.transition, a.retries, a.userRetryCount, a.userRetryMax, a.userRetryInterval, a.trackerUri, a.startTimestamp, a.endTimestamp, a.lastCheckTimestamp, a.errorCode, a.errorMessage, a.externalId, a.externalStatus, a.externalChildIDs, a.conf from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
     <annotation>@<name>NamedQuery</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"GET_ACTION_COMPLETED"</literal></expr></argument>, <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select a.id, a.wfId, a.statusStr, a.type, a.logToken from WorkflowActionBean a where a.id = :id"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordActionInputCheckXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordActionInputCheckXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ddc3768c2</name><operator>..</operator><literal type="number">7ec84be88</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordActionInputCheckXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordActionInputCheckXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>dependency</name><operator>.</operator><name>URIHandlerException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionGetForInputCheckJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordActionQueryExecutor</name><operator>.</operator><name>CoordActionQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobGetJPAExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>CoordJobQueryExecutor</name><operator>.</operator><name>CoordJobQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>oozie</name><operator>.</operator><name>executor</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAExecutorException</name></name>;</import>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d9db20179</name><operator>..</operator><name>af9fe8796</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>coord</name><operator>/</operator><name><name>CoordMaterializeTransitionXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">455</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">455</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordMaterializeTransitionXCommand</name> extends <name>MaterializeTransitionXCo</name>
         <call><name><name>job</name><operator>.</operator><name>setPending</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
         <if_stmt><if>if <condition>(<expr><call><name><name>jobEndTime</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><name>endMatdTime</name></expr></argument>)</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"["</literal> <operator>+</operator> <call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"]: all actions have been materialized, job status = "</literal> <operator>+</operator> <call><name><name>job</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call>
                    <operator>+</operator> <literal type="string">", set pending to true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"["</literal> <operator>+</operator> <call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"]: all actions have been materialized, set pending to true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <comment type="line">// set doneMaterialization to true when materialization is done</comment>
             <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setDoneMaterialization</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
         <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setStatus</name></name><argument_list>(<argument><expr><call><name><name>StatusUtils</name><operator>.</operator><name>getStatus</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Coord Job status updated to = "</literal> <operator>+</operator> <call><name><name>job</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>setNextMaterializedTime</name></name><argument_list>(<argument><expr><name>endMatdTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     }
 
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionEndXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionEndXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fb9dec3e8</name><operator>..</operator><name>ac2408f71</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionEndXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionEndXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionEndXCommand</name> extends <name><name>ActionXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
             <if_stmt><if>if <condition>(<expr><name>jpaService</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wfJob</name></name> <operator>=</operator> <call><name><name>WorkflowJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowJobQuery</name><operator>.</operator><name>GET_WORKFLOW_ACTION_OP</name></name></expr></argument>,
                         <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wfAction</name></name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_END</name></name></expr></argument>, <argument><expr><name>actionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wfAction</name></name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION</name></name></expr></argument>, <argument><expr><name>actionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>LogUtils</name><operator>.</operator><name>setLogInfo</name></name><argument_list>(<argument><expr><name>wfJob</name></expr></argument>, <argument><expr><name>logInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>LogUtils</name><operator>.</operator><name>setLogInfo</name></name><argument_list>(<argument><expr><name>wfAction</name></expr></argument>, <argument><expr><name>logInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></if></if_stmt>}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionKillXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionKillXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d4d01f3ca</name><operator>..</operator><literal type="number">863bf7d24</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionKillXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>ActionKillXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionKillXCommand</name> extends <name><name>ActionXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
 
             <if_stmt><if>if <condition>(<expr><name>jpaService</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wfJob</name></name> <operator>=</operator> <call><name><name>WorkflowJobQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowJobQuery</name><operator>.</operator><name>GET_WORKFLOW_ACTION_OP</name></name></expr></argument>, <argument><expr><name>jobId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wfAction</name></name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_KILL</name></name></expr></argument>, <argument><expr><name>actionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wfAction</name></name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION</name></name></expr></argument>, <argument><expr><name>actionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>LogUtils</name><operator>.</operator><name>setLogInfo</name></name><argument_list>(<argument><expr><name>wfJob</name></expr></argument>, <argument><expr><name>logInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>LogUtils</name><operator>.</operator><name>setLogInfo</name></name><argument_list>(<argument><expr><name>wfAction</name></expr></argument>, <argument><expr><name>logInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></if></if_stmt>}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>KillXCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>KillXCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7fb968cd6</literal><operator>..</operator><literal type="number">37a2f8b64</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>KillXCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>command</name><operator>/</operator><name>wf</name><operator>/</operator><name><name>KillXCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>KillXCommand</name> extends <name><name>WorkflowXCommand</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name> <block>{
             <for>for <control>(<init><decl><type><name>WorkflowActionBean</name></type> <name>action</name> <range>: <expr><name>actionList</name></expr></range></decl></init>)</control> <block>{<block_content>
                 <if_stmt><if>if <condition>(<expr><call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>WorkflowActionBean</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name>
                         <operator>||</operator> <call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>WorkflowActionBean</name><operator>.</operator><name>Status</name><operator>.</operator><name>DONE</name></name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setPending</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>actionService</name><operator>.</operator><name>getExecutor</name></name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>ControlNodeActionExecutor</name><operator>)</operator></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>action</name><operator>.</operator><name>setPending</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>}</block>
                     <call><name><name>action</name><operator>.</operator><name>setStatus</name></name><argument_list>(<argument><expr><name><name>WorkflowActionBean</name><operator>.</operator><name>Status</name><operator>.</operator><name>KILLED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name><name>updateList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>UpdateEntry</name><argument_list type="generic">&lt;<argument><name>WorkflowActionQuery</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>UPDATE_ACTION_STATUS_PENDING</name></name></expr></argument>, <argument><expr><name>action</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>eff54ea47</name><operator>..</operator><literal type="number">8e9743678</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>CoordJobQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">279</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">279</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoordJobQueryExecutor</name> extends <name>QueryExecutor</name><operator>&lt;</operator><name>CoordinatorJobBean</name></expr><operator>,</operator> <expr><name>Coo</name>
                 <call><name><name>bean</name><operator>.</operator><name>setBundleId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setConfBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setJobXmlBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setAppNamespace</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
             <case>case <expr><name>GET_COORD_JOB_SUSPEND_KILL</name></expr>:</case>
                 <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>CoordinatorJobBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d0d7677da</name><operator>..</operator><name>d95ff08a3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>WorkflowActionQueryExecutor</name> extends
         <name>GET_ACTION_SIGNAL</name></expr><operator>,</operator>
         <expr><name>GET_ACTION_START</name></expr><operator>,</operator>
         <expr><name>GET_ACTION_CHECK</name></expr><operator>,</operator>
        <expr><name>GET_ACTION_END</name></expr><operator>,</operator>
        <expr><name>GET_ACTION_KILL</name></expr><operator>,</operator>
         <expr><name>GET_ACTION_COMPLETED</name></expr><operator>,</operator>
         <expr><name>GET_RUNNING_ACTIONS</name></expr><operator>,</operator>
         <expr><name>GET_PENDING_ACTIONS</name></expr><operator>,</operator>
@@ <expr><operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>WorkflowActionQueryExecutor</name> extends
                 <call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"retries"</literal></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"status"</literal></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"endTime"</literal></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getEndTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"retries"</literal></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"pending"</literal></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"pendingAge"</literal></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getPendingAgeTimestamp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"signalValue"</literal></expr></argument>, <argument><expr><call><name><name>actionBean</name><operator>.</operator><name>getSignalValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>WorkflowActionQueryExecutor</name> extends</expr></expr_stmt>
             <case>case <expr><name>GET_ACTION_SIGNAL</name></expr>:</case>
             <case>case <expr><name>GET_ACTION_START</name></expr>:</case>
             <case>case <expr><name>GET_ACTION_CHECK</name></expr>:</case>
            <case>case <expr><name>GET_ACTION_END</name></expr>:</case>
            <case>case <expr><name>GET_ACTION_KILL</name></expr>:</case>
             <case>case <expr><name>GET_ACTION_COMPLETED</name></expr>:</case>
                 <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name><name>parameters</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">279</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>WorkflowActionQueryExecutor</name> extends
                 <call><name><name>bean</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStatusStr</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setErrorInfo</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExecutionPath</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSignalValue</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSlaXmlBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPendingAge</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setErrorInfo</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExecutionPath</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSignalValue</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSlaXmlBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
             <case>case <expr><name>GET_ACTION_START</name></expr>:</case>
                 <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>WorkflowActionBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">295</literal></expr><operator>,</operator><expr><literal type="number">69</literal> <operator>+</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>WorkflowActionQueryExecutor</name> extends
                 <call><name><name>bean</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStatusStr</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setRetries</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryCount</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryMax</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryInterval</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStartTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setEndTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setErrorInfo</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setCred</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setConfBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSlaXmlBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_ACTION_CHECK</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>WorkflowActionBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setJobId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStatusStr</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setRetries</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTrackerUri</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStartTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setEndTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLastCheckTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setErrorInfo</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalStatus</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalChildIDsBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setConfBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><name>GET_ACTION_END</name></expr>:</case>
                <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>WorkflowActionBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setJobId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStatusStr</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setRetries</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTrackerUri</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPendingAge</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setRetries</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryCount</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryMax</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryInterval</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStartTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setEndTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setErrorInfo</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalStatus</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalChildIDsBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setCred</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalStatus</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setConfBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setDataBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStatsBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">22</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setSlaXmlBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
            <case>case <expr><name>GET_ACTION_KILL</name></expr>:</case>
            <case>case <expr><name>GET_ACTION_CHECK</name></expr>:</case>
                 <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>WorkflowActionBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><name>arr</name> <operator>=</operator> <operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>ret</name></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">365</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">316</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <name>class</name> <name>WorkflowActionQueryExecutor</name> extends
                 <call><name><name>bean</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStatusStr</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPending</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setRetries</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTrackerUri</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStartTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setEndTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setErrorInfo</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setConfBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setDataBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setPendingAge</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLogToken</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTransition</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setRetries</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryCount</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryMax</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setUserRetryInterval</name></name><argument_list>(<argument><expr><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setTrackerUri</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setStartTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setEndTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setLastCheckTime</name></name><argument_list>(<argument><expr><call><name><name>DateUtils</name><operator>.</operator><name>toDate</name></name><argument_list>(<argument><expr><operator>(</operator><name>Timestamp</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setErrorInfo</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalStatus</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setExternalChildIDsBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>bean</name><operator>.</operator><name>setConfBlob</name></name><argument_list>(<argument><expr><operator>(</operator><name>StringBlob</name><operator>)</operator> <name><name>arr</name><index>[<expr><literal type="number">22</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <break>break;</break>
             <case>case <expr><name>GET_ACTION_COMPLETED</name></expr>:</case>
                 <expr_stmt><expr><name>bean</name> <operator>=</operator> <operator>new</operator> <call><name>WorkflowActionBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>event</name><operator>/</operator><name><name>TestEventGeneration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>event</name><operator>/</operator><name><name>TestEventGeneration</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">330cff868</literal><operator>..</operator><name>c68fa4810</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>event</name><operator>/</operator><name><name>TestEventGeneration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>event</name><operator>/</operator><name><name>TestEventGeneration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">361</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">361</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestEventGeneration</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name><name>ehs</name><operator>.</operator><name>setAppTypes</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"workflow_action"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowJobBean</name> <name>job</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>addRecordToWfJobTable</name></name><argument_list>(<argument><expr><name><name>WorkflowJob</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><name><name>WorkflowInstance</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowActionBean</name> <name>action</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>addRecordToWfActionTable</name></name><argument_list>(<argument><expr><call><name><name>job</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>WorkflowActionGetJPAExecutor</name> <name>wfActionGetCmd</name> <operator>=</operator> <operator>new</operator> <call><name>WorkflowActionGetJPAExecutor</name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <comment type="line">// adding record sets externalChildID to dummy workflow-id so resetting it</comment>
        <expr><call><name><name>action</name><operator>.</operator><name>setExternalChildIDs</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>executeUpdate</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>UPDATE_ACTION_START</name></name></expr></argument>, <argument><expr><name>action</name></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">// Starting job</comment>
         <expr><operator>new</operator> <call><name>ActionStartXCommand</name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"map-reduce"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>call</name><argument_list>()</argument_list></call></expr>;
        <expr><name>WorkflowActionGetJPAExecutor</name> <name>wfActionGetCmd</name> <operator>=</operator> <operator>new</operator> <call><name>WorkflowActionGetJPAExecutor</name><argument_list>(<argument><expr><call><name><name>action</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>action</name> <operator>=</operator> <call><name><name>jpaService</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><name>wfActionGetCmd</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>RUNNING</name></name></expr></argument>, <argument><expr><call><name><name>action</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>queue</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">488</literal></expr>,<expr><literal type="number">12</literal> <operator>+</operator><literal type="number">491</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestEventGeneration</name> extends <name>XDataTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testForNoDuplicates</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <comment type="line">// test workflow job events</comment>
         <expr><name>Reader</name> <name>reader</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>getResourceAsReader</name></name><argument_list>(<argument><expr><literal type="string">"wf-no-op.xml"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <expr><name>Writer</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>FileWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>Writer</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>FileWriter</name><argument_list>(<argument><expr><call><name>getTestCaseDir</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/workflow.xml"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>IOUtils</name><operator>.</operator><name>copyCharStream</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>final</name> <name>DagEngine</name> <name>engine</name> <operator>=</operator> <operator>new</operator> <call><name>DagEngine</name><argument_list>(<argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>XConfiguration</name><argument_list>()</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>APP_PATH</name></name></expr></argument>, <argument><expr><call><name>getTestCaseFileUri</name><argument_list>(<argument><expr><literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>APP_PATH</name></name></expr></argument>, <argument><expr><literal type="string">"file://"</literal> <operator>+</operator> <call><name>getTestCaseDir</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <literal type="string">"workflow.xml"</literal></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>OozieClient</name><operator>.</operator><name>USER_NAME</name></name></expr></argument>, <argument><expr><call><name>getTestUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>final</name> <name>String</name> <name>jobId1</name> <operator>=</operator> <call><name><name>engine</name><operator>.</operator><name>submitJob</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestWorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestWorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">77db9cf90</literal><operator>..</operator><literal type="number">7c7c37bbd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestWorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>oozie</name><operator>/</operator><name>executor</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>TestWorkflowActionQueryExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">191</literal></expr>,<expr><literal type="number">16</literal> <operator>+</operator><literal type="number">191</literal></expr>,<expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestWorkflowActionQueryExecutor</name> extends <name>XDataTestCase</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>void</name> <call><name>testGet</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><name>WorkflowActionBean</name> <name>bean</name> <operator>=</operator> <call><name>addRecordToWfActionTable</name><argument_list>(<argument><expr><literal type="string">"workflowId"</literal></expr></argument>,<argument><expr><literal type="string">"testAction"</literal></expr></argument>, <argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <expr><name>WorkflowActionBean</name> <name>bean</name> <operator>=</operator> <call><name>addRecordToWfActionTable</name><argument_list>(<argument><expr><literal type="string">"workflowId"</literal></expr></argument>, <argument><expr><literal type="string">"testAction"</literal></expr></argument>, <argument><expr><name><name>WorkflowAction</name><operator>.</operator><name>Status</name><operator>.</operator><name>PREP</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>,
                <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
         <expr><name>WorkflowActionBean</name> <name>retBean</name></expr>;
 
        <comment type="line">//GET_WORKFFLOW_ID_TYPE</comment>
        <comment type="line">//GET_ACTION_ID_TYPE_LASTCHECK</comment>
         <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_ID_TYPE_LASTCHECK</name></name></expr></argument>,
                 <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getLastCheckTime</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getLastCheckTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
        <comment type="line">//GET_WORKFFLOW_FAIL</comment>
        <comment type="line">//GET_ACTION_FAIL</comment>
         <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_FAIL</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">218</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">220</literal></expr>,<expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestWorkflowActionQueryExecutor</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
        <comment type="line">//GET_WORKFFLOW_SIGNAL</comment>
        <comment type="line">//GET_ACTION_SIGNAL</comment>
         <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_SIGNAL</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getPendingAge</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getPendingAge</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">256</literal></expr>,<expr><literal type="number">23</literal> <operator>+</operator><literal type="number">259</literal></expr>,<expr><literal type="number">29</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestWorkflowActionQueryExecutor</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getErrorMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getErrorMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getCred</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getCred</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExternalStatus</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
        <comment type="line">// GET_WORKFLOW_CHECK</comment>
        <comment type="line">// GET_ACTION_CHECK</comment>
         <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_CHECK</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getPendingAge</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getPendingAge</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryCount</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryMax</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryMax</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryInterval</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryInterval</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getTrackerUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getTrackerUri</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStartTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStartTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getEndTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getEndTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">287</literal></expr>,<expr><literal type="number">68</literal> <operator>+</operator><literal type="number">296</literal></expr>,<expr><literal type="number">48</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestWorkflowActionQueryExecutor</name> extends <name>XDataTestCase</name> <block>{
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
        <comment type="line">// GET_WORKFLOW_END</comment>
        <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_END</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <comment type="line">//GET_ACTION_COMPLETED</comment>
        <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_COMPLETED</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getTrackerUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getTrackerUri</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryCount</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryMax</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryMax</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryInterval</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryInterval</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExternalStatus</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStartTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStartTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getEndTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getEndTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getErrorMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getErrorMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
        <comment type="line">// GET_WORKFLOW_KILL</comment>
        <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_KILL</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <comment type="line">// GET_ACTION (entire obj)</comment>
        <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getPending</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getPendingAge</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getPendingAge</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getTransition</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getRetries</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getTrackerUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getTrackerUri</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryCount</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryMax</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryMax</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getUserRetryInterval</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getUserRetryInterval</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStartTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStartTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getEndTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getEndTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getCreatedTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getCreatedTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getLastCheckTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getLastCheckTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getErrorCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getErrorMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getErrorMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExecutionPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExecutionPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getSignalValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getSignalValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getCred</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getCred</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <comment type="line">//GET_WORKFLOW_COMPLETED</comment>
        <expr><name>retBean</name> <operator>=</operator> <call><name><name>WorkflowActionQueryExecutor</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>WorkflowActionQuery</name><operator>.</operator><name>GET_ACTION_COMPLETED</name></name></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getJobId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStatusStr</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getLogToken</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getSlaXml</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retBean</name><operator>.</operator><name>getExternalChildIDs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     <specifier>public</specifier> <name>void</name> <call><name>testGetList</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">3a0ed38b4</literal><operator>..</operator><literal type="number">7cbce39c8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>release</name><operator>-</operator><name><name>log</name><operator>.</operator><name>txt</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@
 <operator>--</operator> <name>Oozie</name> <literal type="number">4.1.0</literal> <call><name>release</name> <argument_list>(<argument><expr><name>trunk</name> <operator>-</operator> <name>unreleased</name></expr></argument>)</argument_list></call>
 
<name>OOZIE</name><operator>-</operator><literal type="number">1559</literal> <name>Fix</name> <name>missing</name> <name>fields</name> <name>from</name> <operator>new</operator> <name>SELECT</name> <name>queries</name> <name>and</name> <name>Recovery</name> <name>Service</name> <name>picking</name> <name>up</name> <name>killed</name> <name>control</name> <call><name>nodes</name> <argument_list>(<argument><expr><name>ryota</name></expr></argument>,<argument><expr><name>mona</name> <name>via</name> <name>mona</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">1569</literal> <name>Maintain</name> <name>backward</name> <name>incompatibility</name></expr></argument></throws></expr> <for>for running jobs before upgrade <control>(<init><expr><name>mona</name></expr></init>)</control><block type="pseudo"><block_content>
 <expr><name>OOZIE</name><operator>-</operator><literal type="number">1568</literal> <name><name>TestWorkflowClient</name><operator>.</operator><name>testSla</name></name> <name>is</name> <call><name>flakey</name> <argument_list>(<argument><expr><name>rkanter</name></expr></argument>)</argument_list></call>
 <name>OOZIE</name><operator>-</operator><literal type="number">1517</literal> <name>Support</name> <name>using</name> <name>MS</name> <name>SQL</name> <name>Server</name> <name>as</name> <name>a</name> <call><name>metastore</name> <argument_list>(<argument><expr><name>dwann</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block_content></block></for></block></expr></block></expr></block></expr></block></expr></expr_stmt>

</unit>
