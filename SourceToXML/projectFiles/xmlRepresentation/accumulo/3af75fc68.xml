<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/3af75fc68.java"><expr_stmt><expr><name>From</name> <literal type="number">3af75fc685d6e2a90a9f68c204122a87ac90e781</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <literal type="string">"Eric C. Newton"</literal> <operator>&lt;</operator><name><name>eric</name><operator>.</operator><name>newton</name></name>@<name><name>gmail</name><operator>.</operator><name>com</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">16</literal> <name>Dec</name> <literal type="number">2015</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">08</literal><operator>:</operator><literal type="number">33</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">4077</literal> <name>back</name> <name>out</name> <name>a</name> <name>couple</name> <name>of</name> <literal type="number">0.9.1</literal> <name>hacks</name></expr><operator>,</operator> <expr><name>run</name> <name>the</name> <operator>new</operator>
 <name>compiler</name>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ClientService</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">1278</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ConfigurationType</name><operator>.</operator><name>java</name></name> <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>SecurityErrorCode</name><operator>.</operator><name>java</name></name> <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TDiskUsage</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">39</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TableOperation</name><operator>.</operator><name>java</name></name>    <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TableOperationExceptionType</name><operator>.</operator><name>java</name></name>   <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ThriftSecurityException</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ThriftTableOperationException</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">44</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ThriftTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">57</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>InitialMultiScan</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>InitialScan</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>IterInfo</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">28</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>MapFileInfo</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>MultiScanResult</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">138</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanResult</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">43</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TCMResult</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">27</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TCMStatus</name><operator>.</operator><name>java</name></name>  <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TColumn</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">53</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TCondition</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">95</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TConditionalMutation</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">48</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TConditionalSession</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">30</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TConstraintViolationSummary</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">35</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TKey</name><operator>.</operator><name>java</name></name>       <operator>|</operator>    <literal type="number">74</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TKeyExtent</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">53</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TKeyValue</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">30</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TMutation</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">92</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TRange</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">49</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>UpdateErrors</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">102</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>gc</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>GCMonitorService</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">35</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>gc</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>GCStatus</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">31</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>gc</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>GcCycleStats</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">53</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>BulkImportState</name><operator>.</operator><name>java</name></name>   <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>BulkImportStatus</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">32</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>Compacting</name><operator>.</operator><name>java</name></name>        <operator>|</operator>    <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>DeadServer</name><operator>.</operator><name>java</name></name>        <operator>|</operator>    <literal type="number">28</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>FateOperation</name><operator>.</operator><name>java</name></name>     <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>FateService</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">210</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>MasterClientService</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">676</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>MasterGoalState</name><operator>.</operator><name>java</name></name>   <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>MasterMonitorInfo</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">194</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>MasterState</name><operator>.</operator><name>java</name></name>       <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>RecoveryException</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>RecoveryStatus</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">30</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TableInfo</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">89</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletLoadState</name><operator>.</operator><name>java</name></name>   <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletServerStatus</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">169</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>master</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletSplit</name><operator>.</operator><name>java</name></name>       <operator>|</operator>    <literal type="number">41</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>replication</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>KeyValues</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">36</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>RemoteReplicationErrorCode</name><operator>.</operator><name>java</name></name>    <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>RemoteReplicationException</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ReplicationCoordinator</name><operator>.</operator><name>java</name></name>        <operator>|</operator>    <literal type="number">35</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>ReplicationCoordinatorErrorCode</name><operator>.</operator><name>java</name></name>      <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>ReplicationCoordinatorException</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ReplicationServicer</name><operator>.</operator><name>java</name></name>           <operator>|</operator>    <literal type="number">77</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>replication</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>WalEdits</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">34</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TAuthenticationKey</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">48</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TAuthenticationTokenIdentifier</name><operator>.</operator><name>java</name></name>       <operator>|</operator>    <literal type="number">44</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TCredentials</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">40</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TDelegationToken</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">30</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TDelegationTokenConfig</name><operator>.</operator><name>java</name></name>        <operator>|</operator>    <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ActionStats</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">67</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ActiveCompaction</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">164</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ActiveScan</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">203</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>CompactionReason</name><operator>.</operator><name>java</name></name> <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>CompactionType</name><operator>.</operator><name>java</name></name>   <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ConstraintViolationException</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">36</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>IteratorConfig</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">36</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NoSuchScanIDException</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NotServingTabletException</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanState</name><operator>.</operator><name>java</name></name>   <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanType</name><operator>.</operator><name>java</name></name>    <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TDurability</name><operator>.</operator><name>java</name></name> <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TIteratorSetting</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">57</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TSampleNotPresentException</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TSamplerConfiguration</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">45</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletClientService</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">1732</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletStats</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">59</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TooManyFilesException</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>trace</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TInfo</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>scripts</name><operator>/</operator><name>generate</name><operator>-</operator><name><name>thrift</name><operator>.</operator><name>sh</name></name>      <operator>|</operator>     <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <name><name>pom</name><operator>.</operator><name>xml</name></name>                                       <operator>|</operator>    <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>AccumuloProxy</name><operator>.</operator><name>cpp</name></name>          <operator>|</operator> <literal type="number">10424</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>AccumuloProxy</name><operator>.</operator><name>h</name></name>            <operator>|</operator>  <literal type="number">4573</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_constants</name><operator>.</operator><name>cpp</name></name>        <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_constants</name><operator>.</operator><name>h</name></name>          <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_types</name><operator>.</operator><name>cpp</name></name>            <operator>|</operator>  <literal type="number">1808</literal> <operator>++</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_types</name><operator>.</operator><name>h</name></name>              <operator>|</operator>  <literal type="number">1073</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>AccumuloException</name><operator>.</operator><name>java</name></name>       <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>AccumuloProxy</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4385</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>AccumuloSecurityException</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ActiveCompaction</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">111</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ActiveScan</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">136</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>BatchScanOptions</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">118</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>Column</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">53</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ColumnUpdate</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">79</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>CompactionReason</name><operator>.</operator><name>java</name></name>        <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>CompactionStrategyConfig</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">45</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>CompactionType</name><operator>.</operator><name>java</name></name> <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>Condition</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">62</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ConditionalStatus</name><operator>.</operator><name>java</name></name>       <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ConditionalUpdates</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">61</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ConditionalWriterOptions</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">66</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>DiskUsage</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">39</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>Durability</name><operator>.</operator><name>java</name></name>     <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>IteratorScope</name><operator>.</operator><name>java</name></name>  <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>IteratorSetting</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">57</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>Key</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">76</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>KeyExtent</name><operator>.</operator><name>java</name></name>      <operator>|</operator>    <literal type="number">44</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>KeyValue</name><operator>.</operator><name>java</name></name>       <operator>|</operator>    <literal type="number">30</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>KeyValueAndPeek</name><operator>.</operator><name>java</name></name>         <operator>|</operator>    <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>thrift</name><operator>/</operator><name><name>MutationsRejectedException</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NoMoreEntriesException</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>PartialKey</name><operator>.</operator><name>java</name></name>     <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>Range</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">35</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanColumn</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">39</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanOptions</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">98</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanResult</name><operator>.</operator><name>java</name></name>     <operator>|</operator>    <literal type="number">43</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanState</name><operator>.</operator><name>java</name></name>      <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ScanType</name><operator>.</operator><name>java</name></name>       <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>SystemPermission</name><operator>.</operator><name>java</name></name>        <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TableExistsException</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TableNotFoundException</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TablePermission</name><operator>.</operator><name>java</name></name>         <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TimeType</name><operator>.</operator><name>java</name></name>       <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>UnknownScanner</name><operator>.</operator><name>java</name></name> <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>UnknownWriter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>WriterOptions</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">50</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>python</name><operator>/</operator><name>AccumuloProxy</name><operator>-</operator><name>remote</name>    <operator>|</operator>   <literal type="number">330</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>python</name><operator>/</operator><name><name>AccumuloProxy</name><operator>.</operator><name>py</name></name>        <operator>|</operator>  <literal type="number">3713</literal> <operator>++</operator><operator>++</operator><operator>--</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>python</name><operator>/</operator><name><name>constants</name><operator>.</operator><name>py</name></name>            <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>python</name><operator>/</operator><name><name>ttypes</name><operator>.</operator><name>py</name></name>               <operator>|</operator>   <literal type="number">354</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>ruby</name><operator>/</operator><name><name>accumulo_proxy</name><operator>.</operator><name>rb</name></name>         <operator>|</operator>     <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>ruby</name><operator>/</operator><name><name>proxy_constants</name><operator>.</operator><name>rb</name></name>        <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>ruby</name><operator>/</operator><name><name>proxy_types</name><operator>.</operator><name>rb</name></name>            <operator>|</operator>     <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>CustomNonBlockingServer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">234</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TNonblockingServerSocket</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">156</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>     <operator>|</operator>     <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>tracer</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>Annotation</name><operator>.</operator><name>java</name></name>    <operator>|</operator>    <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>tracer</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>RemoteSpan</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">115</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>tracer</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>SpanReceiver</name><operator>.</operator><name>java</name></name>  <operator>|</operator>    <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>tracer</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TestService</name><operator>.</operator><name>java</name></name>   <operator>|</operator>    <literal type="number">32</literal> <operator>+</operator><operator>-</operator>
 <name>test</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>                                  <operator>|</operator>     <literal type="number">4</literal> <operator>+</operator>
 <literal type="number">142</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">26986</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">8675</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TNonblockingServerSocket</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ClientService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ClientService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">40b28fde3</literal><operator>..</operator><literal type="number">44df667d5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ClientService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>ClientService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">15</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">15</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ClientService {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ClientService {
 
   public interface Iface {
 
@@ -4894,7 +4897,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -5205,7 +5210,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -5494,7 +5506,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -5805,7 +5819,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -6094,7 +6115,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -6405,7 +6428,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -7008,7 +7038,7 @@ import org.slf4j.LoggerFactory;
         return getCredentials();
 
       case TID:
        return Long.valueOf(getTid());
        return getTid();
 
       case TABLE_ID:
         return getTableId();
@@ -7020,7 +7050,7 @@ import org.slf4j.LoggerFactory;
         return getErrorDir();
 
       case SET_TIME:
        return Boolean.valueOf(isSetTime());
        return isSetTime();
 
       }
       throw new IllegalStateException();
@@ -7132,7 +7162,44 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tid = true;
      list.add(present_tid);
      if (present_tid)
        list.add(tid);

      boolean present_tableId = true &amp;&amp; (isSetTableId());
      list.add(present_tableId);
      if (present_tableId)
        list.add(tableId);

      boolean present_files = true &amp;&amp; (isSetFiles());
      list.add(present_files);
      if (present_files)
        list.add(files);

      boolean present_errorDir = true &amp;&amp; (isSetErrorDir());
      list.add(present_errorDir);
      if (present_errorDir)
        list.add(errorDir);

      boolean present_setTime = true;
      list.add(present_setTime);
      if (present_setTime)
        list.add(setTime);

      return list.hashCode();
     }
 
     @Override
@@ -7370,11 +7437,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                   struct.files = new ArrayList&lt;String&gt;(_list8.size);
                  for (int _i9 = 0; _i9 &lt; _list8.size; ++_i9)
                  String _elem9;
                  for (int _i10 = 0; _i10 &lt; _list8.size; ++_i10)
                   {
                    String _elem10;
                    _elem10 = iprot.readString();
                    struct.files.add(_elem10);
                    _elem9 = iprot.readString();
                    struct.files.add(_elem9);
                   }
                   iprot.readListEnd();
                 }
@@ -7547,11 +7614,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.files = new ArrayList&lt;String&gt;(_list13.size);
            for (int _i14 = 0; _i14 &lt; _list13.size; ++_i14)
            String _elem14;
            for (int _i15 = 0; _i15 &lt; _list13.size; ++_i15)
             {
              String _elem15;
              _elem15 = iprot.readString();
              struct.files.add(_elem15);
              _elem14 = iprot.readString();
              struct.files.add(_elem14);
             }
           }
           struct.setFilesIsSet(true);
@@ -7899,7 +7966,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -8031,11 +8115,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;String&gt;(_list16.size);
                  for (int _i17 = 0; _i17 &lt; _list16.size; ++_i17)
                  String _elem17;
                  for (int _i18 = 0; _i18 &lt; _list16.size; ++_i18)
                   {
                    String _elem18;
                    _elem18 = iprot.readString();
                    struct.success.add(_elem18);
                    _elem17 = iprot.readString();
                    struct.success.add(_elem17);
                   }
                   iprot.readListEnd();
                 }
@@ -8152,11 +8236,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new ArrayList&lt;String&gt;(_list21.size);
            for (int _i22 = 0; _i22 &lt; _list21.size; ++_i22)
            String _elem22;
            for (int _i23 = 0; _i23 &lt; _list21.size; ++_i23)
             {
              String _elem23;
              _elem23 = iprot.readString();
              struct.success.add(_elem23);
              _elem22 = iprot.readString();
              struct.success.add(_elem22);
             }
           }
           struct.setSuccessIsSet(true);
@@ -8375,7 +8459,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case TID:
        return Long.valueOf(getTid());
        return getTid();
 
       }
       throw new IllegalStateException();
@@ -8432,7 +8516,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_tid = true;
      list.add(present_tid);
      if (present_tid)
        list.add(tid);

      return list.hashCode();
     }
 
     @Override
@@ -8784,7 +8880,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       }
       throw new IllegalStateException();
@@ -8830,7 +8926,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -9182,7 +9285,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -9541,7 +9651,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -9973,7 +10090,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tables = true &amp;&amp; (isSetTables());
      list.add(present_tables);
      if (present_tables)
        list.add(tables);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -10090,11 +10219,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set24 = iprot.readSetBegin();
                   struct.tables = new HashSet&lt;String&gt;(2*_set24.size);
                  for (int _i25 = 0; _i25 &lt; _set24.size; ++_i25)
                  String _elem25;
                  for (int _i26 = 0; _i26 &lt; _set24.size; ++_i26)
                   {
                    String _elem26;
                    _elem26 = iprot.readString();
                    struct.tables.add(_elem26);
                    _elem25 = iprot.readString();
                    struct.tables.add(_elem25);
                   }
                   iprot.readSetEnd();
                 }
@@ -10191,11 +10320,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set29 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.tables = new HashSet&lt;String&gt;(2*_set29.size);
            for (int _i30 = 0; _i30 &lt; _set29.size; ++_i30)
            String _elem30;
            for (int _i31 = 0; _i31 &lt; _set29.size; ++_i31)
             {
              String _elem31;
              _elem31 = iprot.readString();
              struct.tables.add(_elem31);
              _elem30 = iprot.readString();
              struct.tables.add(_elem30);
             }
           }
           struct.setTablesIsSet(true);
@@ -10543,7 +10672,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_toe = true &amp;&amp; (isSetToe());
      list.add(present_toe);
      if (present_toe)
        list.add(toe);

      return list.hashCode();
     }
 
     @Override
@@ -10675,12 +10821,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;TDiskUsage&gt;(_list32.size);
                  for (int _i33 = 0; _i33 &lt; _list32.size; ++_i33)
                  TDiskUsage _elem33;
                  for (int _i34 = 0; _i34 &lt; _list32.size; ++_i34)
                   {
                    TDiskUsage _elem34;
                    _elem34 = new TDiskUsage();
                    _elem34.read(iprot);
                    struct.success.add(_elem34);
                    _elem33 = new TDiskUsage();
                    _elem33.read(iprot);
                    struct.success.add(_elem33);
                   }
                   iprot.readListEnd();
                 }
@@ -10797,12 +10943,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;TDiskUsage&gt;(_list37.size);
            for (int _i38 = 0; _i38 &lt; _list37.size; ++_i38)
            TDiskUsage _elem38;
            for (int _i39 = 0; _i39 &lt; _list37.size; ++_i39)
             {
              TDiskUsage _elem39;
              _elem39 = new TDiskUsage();
              _elem39.read(iprot);
              struct.success.add(_elem39);
              _elem38 = new TDiskUsage();
              _elem38.read(iprot);
              struct.success.add(_elem38);
             }
           }
           struct.setSuccessIsSet(true);
@@ -11076,7 +11222,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -11557,7 +11715,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -11671,11 +11841,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set40 = iprot.readSetBegin();
                   struct.success = new HashSet&lt;String&gt;(2*_set40.size);
                  for (int _i41 = 0; _i41 &lt; _set40.size; ++_i41)
                  String _elem41;
                  for (int _i42 = 0; _i42 &lt; _set40.size; ++_i42)
                   {
                    String _elem42;
                    _elem42 = iprot.readString();
                    struct.success.add(_elem42);
                    _elem41 = iprot.readString();
                    struct.success.add(_elem41);
                   }
                   iprot.readSetEnd();
                 }
@@ -11772,11 +11942,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set45 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashSet&lt;String&gt;(2*_set45.size);
            for (int _i46 = 0; _i46 &lt; _set45.size; ++_i46)
            String _elem46;
            for (int _i47 = 0; _i47 &lt; _set45.size; ++_i47)
             {
              String _elem47;
              _elem47 = iprot.readString();
              struct.success.add(_elem47);
              _elem46 = iprot.readString();
              struct.success.add(_elem46);
             }
           }
           struct.setSuccessIsSet(true);
@@ -11906,7 +12076,7 @@ import org.slf4j.LoggerFactory;
       this.tinfo = tinfo;
       this.credentials = credentials;
       this.principal = principal;
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     /**
@@ -11924,7 +12094,6 @@ import org.slf4j.LoggerFactory;
       }
       if (other.isSetPassword()) {
         this.password = org.apache.thrift.TBaseHelper.copyBinary(other.password);
;
       }
     }
 
@@ -12018,16 +12187,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForPassword() {
      return password;
      return org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     public createLocalUser_args setPassword(byte[] password) {
      setPassword(password == null ? (ByteBuffer)null : ByteBuffer.wrap(password));
      this.password = password == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(password, password.length));
       return this;
     }
 
     public createLocalUser_args setPassword(ByteBuffer password) {
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
       return this;
     }
 
@@ -12174,7 +12343,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_password = true &amp;&amp; (isSetPassword());
      list.add(present_password);
      if (present_password)
        list.add(password);

      return list.hashCode();
     }
 
     @Override
@@ -12661,7 +12852,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -13135,7 +13333,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      return list.hashCode();
     }
 
     @Override
@@ -13581,7 +13796,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -13857,7 +14079,7 @@ import org.slf4j.LoggerFactory;
       this.tinfo = tinfo;
       this.credentials = credentials;
       this.principal = principal;
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     /**
@@ -13875,7 +14097,6 @@ import org.slf4j.LoggerFactory;
       }
       if (other.isSetPassword()) {
         this.password = org.apache.thrift.TBaseHelper.copyBinary(other.password);
;
       }
     }
 
@@ -13969,16 +14190,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForPassword() {
      return password;
      return org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     public changeLocalUserPassword_args setPassword(byte[] password) {
      setPassword(password == null ? (ByteBuffer)null : ByteBuffer.wrap(password));
      this.password = password == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(password, password.length));
       return this;
     }
 
     public changeLocalUserPassword_args setPassword(ByteBuffer password) {
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
       return this;
     }
 
@@ -14125,7 +14346,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_password = true &amp;&amp; (isSetPassword());
      list.add(present_password);
      if (present_password)
        list.add(password);

      return list.hashCode();
     }
 
     @Override
@@ -14612,7 +14855,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -15027,7 +15277,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -15433,7 +15695,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case SEC:
         return getSec();
@@ -15493,7 +15755,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -16006,7 +16280,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_toAuth = true &amp;&amp; (isSetToAuth());
      list.add(present_toAuth);
      if (present_toAuth)
        list.add(toAuth);

      return list.hashCode();
     }
 
     @Override
@@ -16458,7 +16749,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case SEC:
         return getSec();
@@ -16518,7 +16809,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -17107,7 +17410,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
      list.add(present_authorizations);
      if (present_authorizations)
        list.add(authorizations);

      return list.hashCode();
     }
 
     @Override
@@ -17206,7 +17531,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
       sb.append(")");
@@ -17289,11 +17614,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                   struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list48.size);
                  for (int _i49 = 0; _i49 &lt; _list48.size; ++_i49)
                  ByteBuffer _elem49;
                  for (int _i50 = 0; _i50 &lt; _list48.size; ++_i50)
                   {
                    ByteBuffer _elem50;
                    _elem50 = iprot.readBinary();
                    struct.authorizations.add(_elem50);
                    _elem49 = iprot.readBinary();
                    struct.authorizations.add(_elem49);
                   }
                   iprot.readListEnd();
                 }
@@ -17417,11 +17742,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list53.size);
            for (int _i54 = 0; _i54 &lt; _list53.size; ++_i54)
            ByteBuffer _elem54;
            for (int _i55 = 0; _i55 &lt; _list53.size; ++_i55)
             {
              ByteBuffer _elem55;
              _elem55 = iprot.readBinary();
              struct.authorizations.add(_elem55);
              _elem54 = iprot.readBinary();
              struct.authorizations.add(_elem54);
             }
           }
           struct.setAuthorizationsIsSet(true);
@@ -17626,7 +17951,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -18100,7 +18432,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      return list.hashCode();
     }
 
     @Override
@@ -18622,7 +18971,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -18677,7 +19038,7 @@ import org.slf4j.LoggerFactory;
       if (this.success == null) {
         sb.append("null");
       } else {
        sb.append(this.success);
        org.apache.thrift.TBaseHelper.toString(this.success, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -18736,11 +19097,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list56 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;ByteBuffer&gt;(_list56.size);
                  for (int _i57 = 0; _i57 &lt; _list56.size; ++_i57)
                  ByteBuffer _elem57;
                  for (int _i58 = 0; _i58 &lt; _list56.size; ++_i58)
                   {
                    ByteBuffer _elem58;
                    _elem58 = iprot.readBinary();
                    struct.success.add(_elem58);
                    _elem57 = iprot.readBinary();
                    struct.success.add(_elem57);
                   }
                   iprot.readListEnd();
                 }
@@ -18837,11 +19198,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list61 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new ArrayList&lt;ByteBuffer&gt;(_list61.size);
            for (int _i62 = 0; _i62 &lt; _list61.size; ++_i62)
            ByteBuffer _elem62;
            for (int _i63 = 0; _i63 &lt; _list61.size; ++_i63)
             {
              ByteBuffer _elem63;
              _elem63 = iprot.readBinary();
              struct.success.add(_elem63);
              _elem62 = iprot.readBinary();
              struct.success.add(_elem62);
             }
           }
           struct.setSuccessIsSet(true);
@@ -19151,7 +19512,7 @@ import org.slf4j.LoggerFactory;
         return getPrincipal();
 
       case SYS_PERM:
        return Byte.valueOf(getSysPerm());
        return getSysPerm();
 
       }
       throw new IllegalStateException();
@@ -19230,7 +19591,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_sysPerm = true;
      list.add(present_sysPerm);
      if (present_sysPerm)
        list.add(sysPerm);

      return list.hashCode();
     }
 
     @Override
@@ -19714,7 +20097,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case SEC:
         return getSec();
@@ -19774,7 +20157,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -20317,7 +20712,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case TBL_PERM:
        return Byte.valueOf(getTblPerm());
        return getTblPerm();
 
       }
       throw new IllegalStateException();
@@ -20407,7 +20802,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_tblPerm = true;
      list.add(present_tblPerm);
      if (present_tblPerm)
        list.add(tblPerm);

      return list.hashCode();
     }
 
     @Override
@@ -20977,7 +21399,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case SEC:
         return getSec();
@@ -21051,7 +21473,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -21637,7 +22076,7 @@ import org.slf4j.LoggerFactory;
         return getNs();
 
       case TBL_NSPC_PERM:
        return Byte.valueOf(getTblNspcPerm());
        return getTblNspcPerm();
 
       }
       throw new IllegalStateException();
@@ -21727,7 +22166,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_ns = true &amp;&amp; (isSetNs());
      list.add(present_ns);
      if (present_ns)
        list.add(ns);

      boolean present_tblNspcPerm = true;
      list.add(present_tblNspcPerm);
      if (present_tblNspcPerm)
        list.add(tblNspcPerm);

      return list.hashCode();
     }
 
     @Override
@@ -22297,7 +22763,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case SEC:
         return getSec();
@@ -22371,7 +22837,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -22909,7 +23392,7 @@ import org.slf4j.LoggerFactory;
         return getPrincipal();
 
       case PERMISSION:
        return Byte.valueOf(getPermission());
        return getPermission();
 
       }
       throw new IllegalStateException();
@@ -22988,7 +23471,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_permission = true;
      list.add(present_permission);
      if (present_permission)
        list.add(permission);

      return list.hashCode();
     }
 
     @Override
@@ -23471,7 +23976,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -23927,7 +24439,7 @@ import org.slf4j.LoggerFactory;
         return getPrincipal();
 
       case PERMISSION:
        return Byte.valueOf(getPermission());
        return getPermission();
 
       }
       throw new IllegalStateException();
@@ -24006,7 +24518,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_permission = true;
      list.add(present_permission);
      if (present_permission)
        list.add(permission);

      return list.hashCode();
     }
 
     @Override
@@ -24489,7 +25023,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -24993,7 +25534,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case PERMISSION:
        return Byte.valueOf(getPermission());
        return getPermission();
 
       }
       throw new IllegalStateException();
@@ -25083,7 +25624,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_permission = true;
      list.add(present_permission);
      if (present_permission)
        list.add(permission);

      return list.hashCode();
     }
 
     @Override
@@ -25666,7 +26234,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -26213,7 +26793,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case PERMISSION:
        return Byte.valueOf(getPermission());
        return getPermission();
 
       }
       throw new IllegalStateException();
@@ -26303,7 +26883,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_permission = true;
      list.add(present_permission);
      if (present_permission)
        list.add(permission);

      return list.hashCode();
     }
 
     @Override
@@ -26886,7 +27493,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -27433,7 +28052,7 @@ import org.slf4j.LoggerFactory;
         return getNs();
 
       case PERMISSION:
        return Byte.valueOf(getPermission());
        return getPermission();
 
       }
       throw new IllegalStateException();
@@ -27523,7 +28142,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_ns = true &amp;&amp; (isSetNs());
      list.add(present_ns);
      if (present_ns)
        list.add(ns);

      boolean present_permission = true;
      list.add(present_permission);
      if (present_permission)
        list.add(permission);

      return list.hashCode();
     }
 
     @Override
@@ -28106,7 +28752,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -28653,7 +29311,7 @@ import org.slf4j.LoggerFactory;
         return getNs();
 
       case PERMISSION:
        return Byte.valueOf(getPermission());
        return getPermission();
 
       }
       throw new IllegalStateException();
@@ -28743,7 +29401,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_ns = true &amp;&amp; (isSetNs());
      list.add(present_ns);
      if (present_ns)
        list.add(ns);

      boolean present_permission = true;
      list.add(present_permission);
      if (present_permission)
        list.add(permission);

      return list.hashCode();
     }
 
     @Override
@@ -29326,7 +30011,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -29859,7 +30556,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_type = true &amp;&amp; (isSetType());
      list.add(present_type);
      if (present_type)
        list.add(type.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -30012,7 +30726,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 1: // TYPE
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.type = ConfigurationType.findByValue(iprot.readI32());
                struct.type = org.apache.accumulo.core.client.impl.thrift.ConfigurationType.findByValue(iprot.readI32());
                 struct.setTypeIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -30102,7 +30816,7 @@ import org.slf4j.LoggerFactory;
           struct.setCredentialsIsSet(true);
         }
         if (incoming.get(2)) {
          struct.type = ConfigurationType.findByValue(iprot.readI32());
          struct.type = org.apache.accumulo.core.client.impl.thrift.ConfigurationType.findByValue(iprot.readI32());
           struct.setTypeIsSet(true);
         }
       }
@@ -30319,7 +31033,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -30415,13 +31136,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map64 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,String&gt;(2*_map64.size);
                  for (int _i65 = 0; _i65 &lt; _map64.size; ++_i65)
                  String _key65;
                  String _val66;
                  for (int _i67 = 0; _i67 &lt; _map64.size; ++_i67)
                   {
                    String _key66;
                    String _val67;
                    _key66 = iprot.readString();
                    _val67 = iprot.readString();
                    struct.success.put(_key66, _val67);
                    _key65 = iprot.readString();
                    _val66 = iprot.readString();
                    struct.success.put(_key65, _val66);
                   }
                   iprot.readMapEnd();
                 }
@@ -30500,13 +31221,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map70 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashMap&lt;String,String&gt;(2*_map70.size);
            for (int _i71 = 0; _i71 &lt; _map70.size; ++_i71)
            String _key71;
            String _val72;
            for (int _i73 = 0; _i73 &lt; _map70.size; ++_i73)
             {
              String _key72;
              String _val73;
              _key72 = iprot.readString();
              _val73 = iprot.readString();
              struct.success.put(_key72, _val73);
              _key71 = iprot.readString();
              _val72 = iprot.readString();
              struct.success.put(_key71, _val72);
             }
           }
           struct.setSuccessIsSet(true);
@@ -30829,7 +31550,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -31348,7 +32086,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -31462,13 +32212,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map74 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,String&gt;(2*_map74.size);
                  for (int _i75 = 0; _i75 &lt; _map74.size; ++_i75)
                  String _key75;
                  String _val76;
                  for (int _i77 = 0; _i77 &lt; _map74.size; ++_i77)
                   {
                    String _key76;
                    String _val77;
                    _key76 = iprot.readString();
                    _val77 = iprot.readString();
                    struct.success.put(_key76, _val77);
                    _key75 = iprot.readString();
                    _val76 = iprot.readString();
                    struct.success.put(_key75, _val76);
                   }
                   iprot.readMapEnd();
                 }
@@ -31567,13 +32317,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map80 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashMap&lt;String,String&gt;(2*_map80.size);
            for (int _i81 = 0; _i81 &lt; _map80.size; ++_i81)
            String _key81;
            String _val82;
            for (int _i83 = 0; _i83 &lt; _map80.size; ++_i83)
             {
              String _key82;
              String _val83;
              _key82 = iprot.readString();
              _val83 = iprot.readString();
              struct.success.put(_key82, _val83);
              _key81 = iprot.readString();
              _val82 = iprot.readString();
              struct.success.put(_key81, _val82);
             }
           }
           struct.setSuccessIsSet(true);
@@ -31901,7 +32651,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_ns = true &amp;&amp; (isSetNs());
      list.add(present_ns);
      if (present_ns)
        list.add(ns);

      return list.hashCode();
     }
 
     @Override
@@ -32420,7 +33187,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -32534,13 +33313,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map84 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,String&gt;(2*_map84.size);
                  for (int _i85 = 0; _i85 &lt; _map84.size; ++_i85)
                  String _key85;
                  String _val86;
                  for (int _i87 = 0; _i87 &lt; _map84.size; ++_i87)
                   {
                    String _key86;
                    String _val87;
                    _key86 = iprot.readString();
                    _val87 = iprot.readString();
                    struct.success.put(_key86, _val87);
                    _key85 = iprot.readString();
                    _val86 = iprot.readString();
                    struct.success.put(_key85, _val86);
                   }
                   iprot.readMapEnd();
                 }
@@ -32639,13 +33418,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map90 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashMap&lt;String,String&gt;(2*_map90.size);
            for (int _i91 = 0; _i91 &lt; _map90.size; ++_i91)
            String _key91;
            String _val92;
            for (int _i93 = 0; _i93 &lt; _map90.size; ++_i93)
             {
              String _key92;
              String _val93;
              _key92 = iprot.readString();
              _val93 = iprot.readString();
              struct.success.put(_key92, _val93);
              _key91 = iprot.readString();
              _val92 = iprot.readString();
              struct.success.put(_key91, _val92);
             }
           }
           struct.setSuccessIsSet(true);
@@ -33032,7 +33811,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_className = true &amp;&amp; (isSetClassName());
      list.add(present_className);
      if (present_className)
        list.add(className);

      boolean present_interfaceMatch = true &amp;&amp; (isSetInterfaceMatch());
      list.add(present_interfaceMatch);
      if (present_interfaceMatch)
        list.add(interfaceMatch);

      return list.hashCode();
     }
 
     @Override
@@ -33475,7 +34276,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       }
       throw new IllegalStateException();
@@ -33521,7 +34322,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -34109,7 +34917,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableId = true &amp;&amp; (isSetTableId());
      list.add(present_tableId);
      if (present_tableId)
        list.add(tableId);

      boolean present_className = true &amp;&amp; (isSetClassName());
      list.add(present_className);
      if (present_className)
        list.add(className);

      boolean present_interfaceMatch = true &amp;&amp; (isSetInterfaceMatch());
      list.add(present_interfaceMatch);
      if (present_interfaceMatch)
        list.add(interfaceMatch);

      return list.hashCode();
     }
 
     @Override
@@ -34683,7 +35518,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case SEC:
         return getSec();
@@ -34757,7 +35592,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -35431,7 +36283,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_namespaceId = true &amp;&amp; (isSetNamespaceId());
      list.add(present_namespaceId);
      if (present_namespaceId)
        list.add(namespaceId);

      boolean present_className = true &amp;&amp; (isSetClassName());
      list.add(present_className);
      if (present_className)
        list.add(className);

      boolean present_interfaceMatch = true &amp;&amp; (isSetInterfaceMatch());
      list.add(present_interfaceMatch);
      if (present_interfaceMatch)
        list.add(interfaceMatch);

      return list.hashCode();
     }
 
     @Override
@@ -36005,7 +36884,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case SEC:
         return getSec();
@@ -36079,7 +36958,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ConfigurationType.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ConfigurationType.java
index 739980281..143393e07 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ConfigurationType.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ConfigurationType.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/SecurityErrorCode.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/SecurityErrorCode.java
index 754f24ef9..8bc1964c8 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/SecurityErrorCode.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/SecurityErrorCode.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TDiskUsage.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TDiskUsage.java
index 1ae011b34..fd5a76f72 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TDiskUsage.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TDiskUsage.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TDiskUsage implements org.apache.thrift.TBase&lt;TDiskUsage, TDiskUsage._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TDiskUsage&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TDiskUsage implements org.apache.thrift.TBase&lt;TDiskUsage, TDiskUsage._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TDiskUsage&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDiskUsage");
 
   private static final org.apache.thrift.protocol.TField TABLES_FIELD_DESC = new org.apache.thrift.protocol.TField("tables", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -264,7 +267,7 @@ import org.slf4j.LoggerFactory;
       return getTables();
 
     case USAGE:
      return Long.valueOf(getUsage());
      return getUsage();
 
     }
     throw new IllegalStateException();
@@ -321,7 +324,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_tables = true &amp;&amp; (isSetTables());
    list.add(present_tables);
    if (present_tables)
      list.add(tables);

    boolean present_usage = true;
    list.add(present_usage);
    if (present_usage)
      list.add(usage);

    return list.hashCode();
   }
 
   @Override
@@ -433,11 +448,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                 struct.tables = new ArrayList&lt;String&gt;(_list0.size);
                for (int _i1 = 0; _i1 &lt; _list0.size; ++_i1)
                String _elem1;
                for (int _i2 = 0; _i2 &lt; _list0.size; ++_i2)
                 {
                  String _elem2;
                  _elem2 = iprot.readString();
                  struct.tables.add(_elem2);
                  _elem1 = iprot.readString();
                  struct.tables.add(_elem1);
                 }
                 iprot.readListEnd();
               }
@@ -531,11 +546,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.tables = new ArrayList&lt;String&gt;(_list5.size);
          for (int _i6 = 0; _i6 &lt; _list5.size; ++_i6)
          String _elem6;
          for (int _i7 = 0; _i7 &lt; _list5.size; ++_i7)
           {
            String _elem7;
            _elem7 = iprot.readString();
            struct.tables.add(_elem7);
            _elem6 = iprot.readString();
            struct.tables.add(_elem6);
           }
         }
         struct.setTablesIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperation.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperation.java
index 47302767a..5b499523d 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperation.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperation.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperationExceptionType.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperationExceptionType.java
index 48b561947..52ec63f74 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperationExceptionType.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperationExceptionType.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftSecurityException.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftSecurityException.java
index 9e94830c9..c9d7d274b 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftSecurityException.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftSecurityException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ThriftSecurityException extends TException implements org.apache.thrift.TBase&lt;ThriftSecurityException, ThriftSecurityException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ThriftSecurityException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ThriftSecurityException extends TException implements org.apache.thrift.TBase&lt;ThriftSecurityException, ThriftSecurityException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ThriftSecurityException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThriftSecurityException");
 
   private static final org.apache.thrift.protocol.TField USER_FIELD_DESC = new org.apache.thrift.protocol.TField("user", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -318,7 +321,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_user = true &amp;&amp; (isSetUser());
    list.add(present_user);
    if (present_user)
      list.add(user);

    boolean present_code = true &amp;&amp; (isSetCode());
    list.add(present_code);
    if (present_code)
      list.add(code.getValue());

    return list.hashCode();
   }
 
   @Override
@@ -437,7 +452,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 2: // CODE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.code = SecurityErrorCode.findByValue(iprot.readI32());
              struct.code = org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode.findByValue(iprot.readI32());
               struct.setCodeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -510,7 +525,7 @@ import org.slf4j.LoggerFactory;
         struct.setUserIsSet(true);
       }
       if (incoming.get(1)) {
        struct.code = SecurityErrorCode.findByValue(iprot.readI32());
        struct.code = org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode.findByValue(iprot.readI32());
         struct.setCodeIsSet(true);
       }
     }
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTableOperationException.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTableOperationException.java
index fad7ea712..551690134 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTableOperationException.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTableOperationException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ThriftTableOperationException extends TException implements org.apache.thrift.TBase&lt;ThriftTableOperationException, ThriftTableOperationException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ThriftTableOperationException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ThriftTableOperationException extends TException implements org.apache.thrift.TBase&lt;ThriftTableOperationException, ThriftTableOperationException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ThriftTableOperationException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThriftTableOperationException");
 
   private static final org.apache.thrift.protocol.TField TABLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("tableId", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -511,7 +514,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_tableId = true &amp;&amp; (isSetTableId());
    list.add(present_tableId);
    if (present_tableId)
      list.add(tableId);

    boolean present_tableName = true &amp;&amp; (isSetTableName());
    list.add(present_tableName);
    if (present_tableName)
      list.add(tableName);

    boolean present_op = true &amp;&amp; (isSetOp());
    list.add(present_op);
    if (present_op)
      list.add(op.getValue());

    boolean present_type = true &amp;&amp; (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type.getValue());

    boolean present_description = true &amp;&amp; (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    return list.hashCode();
   }
 
   @Override
@@ -692,7 +722,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 3: // OP
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.op = TableOperation.findByValue(iprot.readI32());
              struct.op = org.apache.accumulo.core.client.impl.thrift.TableOperation.findByValue(iprot.readI32());
               struct.setOpIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -700,7 +730,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 4: // TYPE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = TableOperationExceptionType.findByValue(iprot.readI32());
              struct.type = org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType.findByValue(iprot.readI32());
               struct.setTypeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -818,11 +848,11 @@ import org.slf4j.LoggerFactory;
         struct.setTableNameIsSet(true);
       }
       if (incoming.get(2)) {
        struct.op = TableOperation.findByValue(iprot.readI32());
        struct.op = org.apache.accumulo.core.client.impl.thrift.TableOperation.findByValue(iprot.readI32());
         struct.setOpIsSet(true);
       }
       if (incoming.get(3)) {
        struct.type = TableOperationExceptionType.findByValue(iprot.readI32());
        struct.type = org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType.findByValue(iprot.readI32());
         struct.setTypeIsSet(true);
       }
       if (incoming.get(4)) {
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTest.java b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTest.java
index c4af9218a..4848920ed 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTest.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ThriftTest.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ThriftTest {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ThriftTest {
 
   public interface Iface {
 
@@ -663,7 +666,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -930,7 +935,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       }
       throw new IllegalStateException();
@@ -976,7 +981,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -1263,7 +1275,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -1530,7 +1544,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       }
       throw new IllegalStateException();
@@ -1576,7 +1590,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -1863,7 +1884,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -2175,7 +2198,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case EX:
         return getEx();
@@ -2235,7 +2258,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ex = true &amp;&amp; (isSetEx());
      list.add(present_ex);
      if (present_ex)
        list.add(ex);

      return list.hashCode();
     }
 
     @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialMultiScan.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialMultiScan.java
index d124c1425..558cc8677 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialMultiScan.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialMultiScan.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class InitialMultiScan implements org.apache.thrift.TBase&lt;InitialMultiScan, InitialMultiScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;InitialMultiScan&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class InitialMultiScan implements org.apache.thrift.TBase&lt;InitialMultiScan, InitialMultiScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;InitialMultiScan&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InitialMultiScan");
 
   private static final org.apache.thrift.protocol.TField SCAN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("scanID", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -244,7 +247,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case SCAN_ID:
      return Long.valueOf(getScanID());
      return getScanID();
 
     case RESULT:
       return getResult();
@@ -304,7 +307,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_scanID = true;
    list.add(present_scanID);
    if (present_scanID)
      list.add(scanID);

    boolean present_result = true &amp;&amp; (isSetResult());
    list.add(present_result);
    if (present_result)
      list.add(result);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialScan.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialScan.java
index 38239d7bd..3266801e4 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialScan.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialScan.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class InitialScan implements org.apache.thrift.TBase&lt;InitialScan, InitialScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;InitialScan&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class InitialScan implements org.apache.thrift.TBase&lt;InitialScan, InitialScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;InitialScan&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InitialScan");
 
   private static final org.apache.thrift.protocol.TField SCAN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("scanID", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -244,7 +247,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case SCAN_ID:
      return Long.valueOf(getScanID());
      return getScanID();
 
     case RESULT:
       return getResult();
@@ -304,7 +307,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_scanID = true;
    list.add(present_scanID);
    if (present_scanID)
      list.add(scanID);

    boolean present_result = true &amp;&amp; (isSetResult());
    list.add(present_result);
    if (present_result)
      list.add(result);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/IterInfo.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/IterInfo.java
index 890a6b818..c2a7d32da 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/IterInfo.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/IterInfo.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class IterInfo implements org.apache.thrift.TBase&lt;IterInfo, IterInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;IterInfo&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class IterInfo implements org.apache.thrift.TBase&lt;IterInfo, IterInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;IterInfo&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IterInfo");
 
   private static final org.apache.thrift.protocol.TField PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("priority", org.apache.thrift.protocol.TType.I32, (short)1);
@@ -289,7 +292,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case PRIORITY:
      return Integer.valueOf(getPriority());
      return getPriority();
 
     case CLASS_NAME:
       return getClassName();
@@ -363,7 +366,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_priority = true;
    list.add(present_priority);
    if (present_priority)
      list.add(priority);

    boolean present_className = true &amp;&amp; (isSetClassName());
    list.add(present_className);
    if (present_className)
      list.add(className);

    boolean present_iterName = true &amp;&amp; (isSetIterName());
    list.add(present_iterName);
    if (present_iterName)
      list.add(iterName);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/MapFileInfo.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/MapFileInfo.java
index 0fbf04f91..d7613730f 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/MapFileInfo.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/MapFileInfo.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class MapFileInfo implements org.apache.thrift.TBase&lt;MapFileInfo, MapFileInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MapFileInfo&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class MapFileInfo implements org.apache.thrift.TBase&lt;MapFileInfo, MapFileInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MapFileInfo&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MapFileInfo");
 
   private static final org.apache.thrift.protocol.TField ESTIMATED_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("estimatedSize", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -199,7 +202,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case ESTIMATED_SIZE:
      return Long.valueOf(getEstimatedSize());
      return getEstimatedSize();
 
     }
     throw new IllegalStateException();
@@ -245,7 +248,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_estimatedSize = true;
    list.add(present_estimatedSize);
    if (present_estimatedSize)
      list.add(estimatedSize);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/MultiScanResult.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/MultiScanResult.java
index f1d9e6106..301d8d7da 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/MultiScanResult.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/MultiScanResult.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class MultiScanResult implements org.apache.thrift.TBase&lt;MultiScanResult, MultiScanResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MultiScanResult&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class MultiScanResult implements org.apache.thrift.TBase&lt;MultiScanResult, MultiScanResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MultiScanResult&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MultiScanResult");
 
   private static final org.apache.thrift.protocol.TField RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("results", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -535,10 +538,10 @@ import org.slf4j.LoggerFactory;
       return getPartNextKey();
 
     case PART_NEXT_KEY_INCLUSIVE:
      return Boolean.valueOf(isPartNextKeyInclusive());
      return isPartNextKeyInclusive();
 
     case MORE:
      return Boolean.valueOf(isMore());
      return isMore();
 
     }
     throw new IllegalStateException();
@@ -650,7 +653,44 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_results = true &amp;&amp; (isSetResults());
    list.add(present_results);
    if (present_results)
      list.add(results);

    boolean present_failures = true &amp;&amp; (isSetFailures());
    list.add(present_failures);
    if (present_failures)
      list.add(failures);

    boolean present_fullScans = true &amp;&amp; (isSetFullScans());
    list.add(present_fullScans);
    if (present_fullScans)
      list.add(fullScans);

    boolean present_partScan = true &amp;&amp; (isSetPartScan());
    list.add(present_partScan);
    if (present_partScan)
      list.add(partScan);

    boolean present_partNextKey = true &amp;&amp; (isSetPartNextKey());
    list.add(present_partNextKey);
    if (present_partNextKey)
      list.add(partNextKey);

    boolean present_partNextKeyInclusive = true;
    list.add(present_partNextKeyInclusive);
    if (present_partNextKeyInclusive)
      list.add(partNextKeyInclusive);

    boolean present_more = true;
    list.add(present_more);
    if (present_more)
      list.add(more);

    return list.hashCode();
   }
 
   @Override
@@ -854,12 +894,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                 struct.results = new ArrayList&lt;TKeyValue&gt;(_list24.size);
                for (int _i25 = 0; _i25 &lt; _list24.size; ++_i25)
                TKeyValue _elem25;
                for (int _i26 = 0; _i26 &lt; _list24.size; ++_i26)
                 {
                  TKeyValue _elem26;
                  _elem26 = new TKeyValue();
                  _elem26.read(iprot);
                  struct.results.add(_elem26);
                  _elem25 = new TKeyValue();
                  _elem25.read(iprot);
                  struct.results.add(_elem25);
                 }
                 iprot.readListEnd();
               }
@@ -873,25 +913,25 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map27 = iprot.readMapBegin();
                 struct.failures = new HashMap&lt;TKeyExtent,List&lt;TRange&gt;&gt;(2*_map27.size);
                for (int _i28 = 0; _i28 &lt; _map27.size; ++_i28)
                TKeyExtent _key28;
                List&lt;TRange&gt; _val29;
                for (int _i30 = 0; _i30 &lt; _map27.size; ++_i30)
                 {
                  TKeyExtent _key29;
                  List&lt;TRange&gt; _val30;
                  _key29 = new TKeyExtent();
                  _key29.read(iprot);
                  _key28 = new TKeyExtent();
                  _key28.read(iprot);
                   {
                     org.apache.thrift.protocol.TList _list31 = iprot.readListBegin();
                    _val30 = new ArrayList&lt;TRange&gt;(_list31.size);
                    for (int _i32 = 0; _i32 &lt; _list31.size; ++_i32)
                    _val29 = new ArrayList&lt;TRange&gt;(_list31.size);
                    TRange _elem32;
                    for (int _i33 = 0; _i33 &lt; _list31.size; ++_i33)
                     {
                      TRange _elem33;
                      _elem33 = new TRange();
                      _elem33.read(iprot);
                      _val30.add(_elem33);
                      _elem32 = new TRange();
                      _elem32.read(iprot);
                      _val29.add(_elem32);
                     }
                     iprot.readListEnd();
                   }
                  struct.failures.put(_key29, _val30);
                  struct.failures.put(_key28, _val29);
                 }
                 iprot.readMapEnd();
               }
@@ -905,12 +945,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list34 = iprot.readListBegin();
                 struct.fullScans = new ArrayList&lt;TKeyExtent&gt;(_list34.size);
                for (int _i35 = 0; _i35 &lt; _list34.size; ++_i35)
                TKeyExtent _elem35;
                for (int _i36 = 0; _i36 &lt; _list34.size; ++_i36)
                 {
                  TKeyExtent _elem36;
                  _elem36 = new TKeyExtent();
                  _elem36.read(iprot);
                  struct.fullScans.add(_elem36);
                  _elem35 = new TKeyExtent();
                  _elem35.read(iprot);
                  struct.fullScans.add(_elem35);
                 }
                 iprot.readListEnd();
               }
@@ -1124,12 +1164,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.results = new ArrayList&lt;TKeyValue&gt;(_list45.size);
          for (int _i46 = 0; _i46 &lt; _list45.size; ++_i46)
          TKeyValue _elem46;
          for (int _i47 = 0; _i47 &lt; _list45.size; ++_i47)
           {
            TKeyValue _elem47;
            _elem47 = new TKeyValue();
            _elem47.read(iprot);
            struct.results.add(_elem47);
            _elem46 = new TKeyValue();
            _elem46.read(iprot);
            struct.results.add(_elem46);
           }
         }
         struct.setResultsIsSet(true);
@@ -1138,24 +1178,24 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map48 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
           struct.failures = new HashMap&lt;TKeyExtent,List&lt;TRange&gt;&gt;(2*_map48.size);
          for (int _i49 = 0; _i49 &lt; _map48.size; ++_i49)
          TKeyExtent _key49;
          List&lt;TRange&gt; _val50;
          for (int _i51 = 0; _i51 &lt; _map48.size; ++_i51)
           {
            TKeyExtent _key50;
            List&lt;TRange&gt; _val51;
            _key50 = new TKeyExtent();
            _key50.read(iprot);
            _key49 = new TKeyExtent();
            _key49.read(iprot);
             {
               org.apache.thrift.protocol.TList _list52 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
              _val51 = new ArrayList&lt;TRange&gt;(_list52.size);
              for (int _i53 = 0; _i53 &lt; _list52.size; ++_i53)
              _val50 = new ArrayList&lt;TRange&gt;(_list52.size);
              TRange _elem53;
              for (int _i54 = 0; _i54 &lt; _list52.size; ++_i54)
               {
                TRange _elem54;
                _elem54 = new TRange();
                _elem54.read(iprot);
                _val51.add(_elem54);
                _elem53 = new TRange();
                _elem53.read(iprot);
                _val50.add(_elem53);
               }
             }
            struct.failures.put(_key50, _val51);
            struct.failures.put(_key49, _val50);
           }
         }
         struct.setFailuresIsSet(true);
@@ -1164,12 +1204,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list55 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.fullScans = new ArrayList&lt;TKeyExtent&gt;(_list55.size);
          for (int _i56 = 0; _i56 &lt; _list55.size; ++_i56)
          TKeyExtent _elem56;
          for (int _i57 = 0; _i57 &lt; _list55.size; ++_i57)
           {
            TKeyExtent _elem57;
            _elem57 = new TKeyExtent();
            _elem57.read(iprot);
            struct.fullScans.add(_elem57);
            _elem56 = new TKeyExtent();
            _elem56.read(iprot);
            struct.fullScans.add(_elem56);
           }
         }
         struct.setFullScansIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/ScanResult.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/ScanResult.java
index 3035db217..59758fd53 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/ScanResult.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/ScanResult.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ScanResult implements org.apache.thrift.TBase&lt;ScanResult, ScanResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanResult&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ScanResult implements org.apache.thrift.TBase&lt;ScanResult, ScanResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanResult&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ScanResult");
 
   private static final org.apache.thrift.protocol.TField RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("results", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -267,7 +270,7 @@ import org.slf4j.LoggerFactory;
       return getResults();
 
     case MORE:
      return Boolean.valueOf(isMore());
      return isMore();
 
     }
     throw new IllegalStateException();
@@ -324,7 +327,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_results = true &amp;&amp; (isSetResults());
    list.add(present_results);
    if (present_results)
      list.add(results);

    boolean present_more = true;
    list.add(present_more);
    if (present_more)
      list.add(more);

    return list.hashCode();
   }
 
   @Override
@@ -436,12 +451,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                 struct.results = new ArrayList&lt;TKeyValue&gt;(_list16.size);
                for (int _i17 = 0; _i17 &lt; _list16.size; ++_i17)
                TKeyValue _elem17;
                for (int _i18 = 0; _i18 &lt; _list16.size; ++_i18)
                 {
                  TKeyValue _elem18;
                  _elem18 = new TKeyValue();
                  _elem18.read(iprot);
                  struct.results.add(_elem18);
                  _elem17 = new TKeyValue();
                  _elem17.read(iprot);
                  struct.results.add(_elem17);
                 }
                 iprot.readListEnd();
               }
@@ -535,12 +550,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.results = new ArrayList&lt;TKeyValue&gt;(_list21.size);
          for (int _i22 = 0; _i22 &lt; _list21.size; ++_i22)
          TKeyValue _elem22;
          for (int _i23 = 0; _i23 &lt; _list21.size; ++_i23)
           {
            TKeyValue _elem23;
            _elem23 = new TKeyValue();
            _elem23.read(iprot);
            struct.results.add(_elem23);
            _elem22 = new TKeyValue();
            _elem22.read(iprot);
            struct.results.add(_elem22);
           }
         }
         struct.setResultsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMResult.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMResult.java
index 7c60cd17b..13c8a9cdf 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMResult.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMResult.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TCMResult implements org.apache.thrift.TBase&lt;TCMResult, TCMResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TCMResult&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TCMResult implements org.apache.thrift.TBase&lt;TCMResult, TCMResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TCMResult&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TCMResult");
 
   private static final org.apache.thrift.protocol.TField CMID_FIELD_DESC = new org.apache.thrift.protocol.TField("cmid", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -260,7 +263,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case CMID:
      return Long.valueOf(getCmid());
      return getCmid();
 
     case STATUS:
       return getStatus();
@@ -320,7 +323,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_cmid = true;
    list.add(present_cmid);
    if (present_cmid)
      list.add(cmid);

    boolean present_status = true &amp;&amp; (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status.getValue());

    return list.hashCode();
   }
 
   @Override
@@ -437,7 +452,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 2: // STATUS
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = TCMStatus.findByValue(iprot.readI32());
              struct.status = org.apache.accumulo.core.data.thrift.TCMStatus.findByValue(iprot.readI32());
               struct.setStatusIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -508,7 +523,7 @@ import org.slf4j.LoggerFactory;
         struct.setCmidIsSet(true);
       }
       if (incoming.get(1)) {
        struct.status = TCMStatus.findByValue(iprot.readI32());
        struct.status = org.apache.accumulo.core.data.thrift.TCMStatus.findByValue(iprot.readI32());
         struct.setStatusIsSet(true);
       }
     }
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMStatus.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMStatus.java
index 993e9e277..6cbe5afc5 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMStatus.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TCMStatus.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TColumn.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TColumn.java
index 127f7c6f8..f5a0de701 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TColumn.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TColumn.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TColumn implements org.apache.thrift.TBase&lt;TColumn, TColumn._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TColumn&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TColumn implements org.apache.thrift.TBase&lt;TColumn, TColumn._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TColumn&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TColumn");
 
   private static final org.apache.thrift.protocol.TField COLUMN_FAMILY_FIELD_DESC = new org.apache.thrift.protocol.TField("columnFamily", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -152,9 +155,9 @@ import org.slf4j.LoggerFactory;
     ByteBuffer columnVisibility)
   {
     this();
    this.columnFamily = columnFamily;
    this.columnQualifier = columnQualifier;
    this.columnVisibility = columnVisibility;
    this.columnFamily = org.apache.thrift.TBaseHelper.copyBinary(columnFamily);
    this.columnQualifier = org.apache.thrift.TBaseHelper.copyBinary(columnQualifier);
    this.columnVisibility = org.apache.thrift.TBaseHelper.copyBinary(columnVisibility);
   }
 
   /**
@@ -163,15 +166,12 @@ import org.slf4j.LoggerFactory;
   public TColumn(TColumn other) {
     if (other.isSetColumnFamily()) {
       this.columnFamily = org.apache.thrift.TBaseHelper.copyBinary(other.columnFamily);
;
     }
     if (other.isSetColumnQualifier()) {
       this.columnQualifier = org.apache.thrift.TBaseHelper.copyBinary(other.columnQualifier);
;
     }
     if (other.isSetColumnVisibility()) {
       this.columnVisibility = org.apache.thrift.TBaseHelper.copyBinary(other.columnVisibility);
;
     }
   }
 
@@ -192,16 +192,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColumnFamily() {
    return columnFamily;
    return org.apache.thrift.TBaseHelper.copyBinary(columnFamily);
   }
 
   public TColumn setColumnFamily(byte[] columnFamily) {
    setColumnFamily(columnFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(columnFamily));
    this.columnFamily = columnFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(columnFamily, columnFamily.length));
     return this;
   }
 
   public TColumn setColumnFamily(ByteBuffer columnFamily) {
    this.columnFamily = columnFamily;
    this.columnFamily = org.apache.thrift.TBaseHelper.copyBinary(columnFamily);
     return this;
   }
 
@@ -226,16 +226,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColumnQualifier() {
    return columnQualifier;
    return org.apache.thrift.TBaseHelper.copyBinary(columnQualifier);
   }
 
   public TColumn setColumnQualifier(byte[] columnQualifier) {
    setColumnQualifier(columnQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(columnQualifier));
    this.columnQualifier = columnQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(columnQualifier, columnQualifier.length));
     return this;
   }
 
   public TColumn setColumnQualifier(ByteBuffer columnQualifier) {
    this.columnQualifier = columnQualifier;
    this.columnQualifier = org.apache.thrift.TBaseHelper.copyBinary(columnQualifier);
     return this;
   }
 
@@ -260,16 +260,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColumnVisibility() {
    return columnVisibility;
    return org.apache.thrift.TBaseHelper.copyBinary(columnVisibility);
   }
 
   public TColumn setColumnVisibility(byte[] columnVisibility) {
    setColumnVisibility(columnVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(columnVisibility));
    this.columnVisibility = columnVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(columnVisibility, columnVisibility.length));
     return this;
   }
 
   public TColumn setColumnVisibility(ByteBuffer columnVisibility) {
    this.columnVisibility = columnVisibility;
    this.columnVisibility = org.apache.thrift.TBaseHelper.copyBinary(columnVisibility);
     return this;
   }
 
@@ -394,7 +394,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_columnFamily = true &amp;&amp; (isSetColumnFamily());
    list.add(present_columnFamily);
    if (present_columnFamily)
      list.add(columnFamily);

    boolean present_columnQualifier = true &amp;&amp; (isSetColumnQualifier());
    list.add(present_columnQualifier);
    if (present_columnQualifier)
      list.add(columnQualifier);

    boolean present_columnVisibility = true &amp;&amp; (isSetColumnVisibility());
    list.add(present_columnVisibility);
    if (present_columnVisibility)
      list.add(columnVisibility);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TCondition.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TCondition.java
index a4ae6dfe3..eb5ccb912 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TCondition.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TCondition.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TCondition implements org.apache.thrift.TBase&lt;TCondition, TCondition._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TCondition&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TCondition implements org.apache.thrift.TBase&lt;TCondition, TCondition._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TCondition&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TCondition");
 
   private static final org.apache.thrift.protocol.TField CF_FIELD_DESC = new org.apache.thrift.protocol.TField("cf", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -187,15 +190,15 @@ import org.slf4j.LoggerFactory;
     ByteBuffer iterators)
   {
     this();
    this.cf = cf;
    this.cq = cq;
    this.cv = cv;
    this.cf = org.apache.thrift.TBaseHelper.copyBinary(cf);
    this.cq = org.apache.thrift.TBaseHelper.copyBinary(cq);
    this.cv = org.apache.thrift.TBaseHelper.copyBinary(cv);
     this.ts = ts;
     setTsIsSet(true);
     this.hasTimestamp = hasTimestamp;
     setHasTimestampIsSet(true);
    this.val = val;
    this.iterators = iterators;
    this.val = org.apache.thrift.TBaseHelper.copyBinary(val);
    this.iterators = org.apache.thrift.TBaseHelper.copyBinary(iterators);
   }
 
   /**
@@ -205,25 +208,20 @@ import org.slf4j.LoggerFactory;
     __isset_bitfield = other.__isset_bitfield;
     if (other.isSetCf()) {
       this.cf = org.apache.thrift.TBaseHelper.copyBinary(other.cf);
;
     }
     if (other.isSetCq()) {
       this.cq = org.apache.thrift.TBaseHelper.copyBinary(other.cq);
;
     }
     if (other.isSetCv()) {
       this.cv = org.apache.thrift.TBaseHelper.copyBinary(other.cv);
;
     }
     this.ts = other.ts;
     this.hasTimestamp = other.hasTimestamp;
     if (other.isSetVal()) {
       this.val = org.apache.thrift.TBaseHelper.copyBinary(other.val);
;
     }
     if (other.isSetIterators()) {
       this.iterators = org.apache.thrift.TBaseHelper.copyBinary(other.iterators);
;
     }
   }
 
@@ -250,16 +248,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForCf() {
    return cf;
    return org.apache.thrift.TBaseHelper.copyBinary(cf);
   }
 
   public TCondition setCf(byte[] cf) {
    setCf(cf == null ? (ByteBuffer)null : ByteBuffer.wrap(cf));
    this.cf = cf == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(cf, cf.length));
     return this;
   }
 
   public TCondition setCf(ByteBuffer cf) {
    this.cf = cf;
    this.cf = org.apache.thrift.TBaseHelper.copyBinary(cf);
     return this;
   }
 
@@ -284,16 +282,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForCq() {
    return cq;
    return org.apache.thrift.TBaseHelper.copyBinary(cq);
   }
 
   public TCondition setCq(byte[] cq) {
    setCq(cq == null ? (ByteBuffer)null : ByteBuffer.wrap(cq));
    this.cq = cq == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(cq, cq.length));
     return this;
   }
 
   public TCondition setCq(ByteBuffer cq) {
    this.cq = cq;
    this.cq = org.apache.thrift.TBaseHelper.copyBinary(cq);
     return this;
   }
 
@@ -318,16 +316,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForCv() {
    return cv;
    return org.apache.thrift.TBaseHelper.copyBinary(cv);
   }
 
   public TCondition setCv(byte[] cv) {
    setCv(cv == null ? (ByteBuffer)null : ByteBuffer.wrap(cv));
    this.cv = cv == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(cv, cv.length));
     return this;
   }
 
   public TCondition setCv(ByteBuffer cv) {
    this.cv = cv;
    this.cv = org.apache.thrift.TBaseHelper.copyBinary(cv);
     return this;
   }
 
@@ -398,16 +396,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForVal() {
    return val;
    return org.apache.thrift.TBaseHelper.copyBinary(val);
   }
 
   public TCondition setVal(byte[] val) {
    setVal(val == null ? (ByteBuffer)null : ByteBuffer.wrap(val));
    this.val = val == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(val, val.length));
     return this;
   }
 
   public TCondition setVal(ByteBuffer val) {
    this.val = val;
    this.val = org.apache.thrift.TBaseHelper.copyBinary(val);
     return this;
   }
 
@@ -432,16 +430,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForIterators() {
    return iterators;
    return org.apache.thrift.TBaseHelper.copyBinary(iterators);
   }
 
   public TCondition setIterators(byte[] iterators) {
    setIterators(iterators == null ? (ByteBuffer)null : ByteBuffer.wrap(iterators));
    this.iterators = iterators == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(iterators, iterators.length));
     return this;
   }
 
   public TCondition setIterators(ByteBuffer iterators) {
    this.iterators = iterators;
    this.iterators = org.apache.thrift.TBaseHelper.copyBinary(iterators);
     return this;
   }
 
@@ -533,10 +531,10 @@ import org.slf4j.LoggerFactory;
       return getCv();
 
     case TS:
      return Long.valueOf(getTs());
      return getTs();
 
     case HAS_TIMESTAMP:
      return Boolean.valueOf(isHasTimestamp());
      return isHasTimestamp();
 
     case VAL:
       return getVal();
@@ -654,7 +652,44 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_cf = true &amp;&amp; (isSetCf());
    list.add(present_cf);
    if (present_cf)
      list.add(cf);

    boolean present_cq = true &amp;&amp; (isSetCq());
    list.add(present_cq);
    if (present_cq)
      list.add(cq);

    boolean present_cv = true &amp;&amp; (isSetCv());
    list.add(present_cv);
    if (present_cv)
      list.add(cv);

    boolean present_ts = true;
    list.add(present_ts);
    if (present_ts)
      list.add(ts);

    boolean present_hasTimestamp = true;
    list.add(present_hasTimestamp);
    if (present_hasTimestamp)
      list.add(hasTimestamp);

    boolean present_val = true &amp;&amp; (isSetVal());
    list.add(present_val);
    if (present_val)
      list.add(val);

    boolean present_iterators = true &amp;&amp; (isSetIterators());
    list.add(present_iterators);
    if (present_iterators)
      list.add(iterators);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalMutation.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalMutation.java
index 431a81c74..e43196c3a 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalMutation.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalMutation.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TConditionalMutation implements org.apache.thrift.TBase&lt;TConditionalMutation, TConditionalMutation._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TConditionalMutation&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TConditionalMutation implements org.apache.thrift.TBase&lt;TConditionalMutation, TConditionalMutation._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TConditionalMutation&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TConditionalMutation");
 
   private static final org.apache.thrift.protocol.TField CONDITIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("conditions", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -315,7 +318,7 @@ import org.slf4j.LoggerFactory;
       return getMutation();
 
     case ID:
      return Long.valueOf(getId());
      return getId();
 
     }
     throw new IllegalStateException();
@@ -383,7 +386,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_conditions = true &amp;&amp; (isSetConditions());
    list.add(present_conditions);
    if (present_conditions)
      list.add(conditions);

    boolean present_mutation = true &amp;&amp; (isSetMutation());
    list.add(present_mutation);
    if (present_mutation)
      list.add(mutation);

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    return list.hashCode();
   }
 
   @Override
@@ -516,12 +536,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list86 = iprot.readListBegin();
                 struct.conditions = new ArrayList&lt;TCondition&gt;(_list86.size);
                for (int _i87 = 0; _i87 &lt; _list86.size; ++_i87)
                TCondition _elem87;
                for (int _i88 = 0; _i88 &lt; _list86.size; ++_i88)
                 {
                  TCondition _elem88;
                  _elem88 = new TCondition();
                  _elem88.read(iprot);
                  struct.conditions.add(_elem88);
                  _elem87 = new TCondition();
                  _elem87.read(iprot);
                  struct.conditions.add(_elem87);
                 }
                 iprot.readListEnd();
               }
@@ -635,12 +655,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list91 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.conditions = new ArrayList&lt;TCondition&gt;(_list91.size);
          for (int _i92 = 0; _i92 &lt; _list91.size; ++_i92)
          TCondition _elem92;
          for (int _i93 = 0; _i93 &lt; _list91.size; ++_i93)
           {
            TCondition _elem93;
            _elem93 = new TCondition();
            _elem93.read(iprot);
            struct.conditions.add(_elem93);
            _elem92 = new TCondition();
            _elem92.read(iprot);
            struct.conditions.add(_elem92);
           }
         }
         struct.setConditionsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalSession.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalSession.java
index eb08623d6..7ec823024 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalSession.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TConditionalSession.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TConditionalSession implements org.apache.thrift.TBase&lt;TConditionalSession, TConditionalSession._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TConditionalSession&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TConditionalSession implements org.apache.thrift.TBase&lt;TConditionalSession, TConditionalSession._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TConditionalSession&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TConditionalSession");
 
   private static final org.apache.thrift.protocol.TField SESSION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sessionId", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -289,13 +292,13 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case SESSION_ID:
      return Long.valueOf(getSessionId());
      return getSessionId();
 
     case TSERVER_LOCK:
       return getTserverLock();
 
     case TTL:
      return Long.valueOf(getTtl());
      return getTtl();
 
     }
     throw new IllegalStateException();
@@ -363,7 +366,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_sessionId = true;
    list.add(present_sessionId);
    if (present_sessionId)
      list.add(sessionId);

    boolean present_tserverLock = true &amp;&amp; (isSetTserverLock());
    list.add(present_tserverLock);
    if (present_tserverLock)
      list.add(tserverLock);

    boolean present_ttl = true;
    list.add(present_ttl);
    if (present_ttl)
      list.add(ttl);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TConstraintViolationSummary.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TConstraintViolationSummary.java
index 1dc51e3eb..5085f570c 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TConstraintViolationSummary.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TConstraintViolationSummary.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TConstraintViolationSummary implements org.apache.thrift.TBase&lt;TConstraintViolationSummary, TConstraintViolationSummary._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TConstraintViolationSummary&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TConstraintViolationSummary implements org.apache.thrift.TBase&lt;TConstraintViolationSummary, TConstraintViolationSummary._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TConstraintViolationSummary&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TConstraintViolationSummary");
 
   private static final org.apache.thrift.protocol.TField CONSTRAIN_CLASS_FIELD_DESC = new org.apache.thrift.protocol.TField("constrainClass", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -337,13 +340,13 @@ import org.slf4j.LoggerFactory;
       return getConstrainClass();
 
     case VIOLATION_CODE:
      return Short.valueOf(getViolationCode());
      return getViolationCode();
 
     case VIOLATION_DESCRIPTION:
       return getViolationDescription();
 
     case NUMBER_OF_VIOLATING_MUTATIONS:
      return Long.valueOf(getNumberOfViolatingMutations());
      return getNumberOfViolatingMutations();
 
     }
     throw new IllegalStateException();
@@ -422,7 +425,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_constrainClass = true &amp;&amp; (isSetConstrainClass());
    list.add(present_constrainClass);
    if (present_constrainClass)
      list.add(constrainClass);

    boolean present_violationCode = true;
    list.add(present_violationCode);
    if (present_violationCode)
      list.add(violationCode);

    boolean present_violationDescription = true &amp;&amp; (isSetViolationDescription());
    list.add(present_violationDescription);
    if (present_violationDescription)
      list.add(violationDescription);

    boolean present_numberOfViolatingMutations = true;
    list.add(present_numberOfViolatingMutations);
    if (present_numberOfViolatingMutations)
      list.add(numberOfViolatingMutations);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TKey.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TKey.java
index 2b816513a..1228edc21 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TKey.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TKey.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TKey implements org.apache.thrift.TBase&lt;TKey, TKey._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TKey&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TKey implements org.apache.thrift.TBase&lt;TKey, TKey._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TKey&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TKey");
 
   private static final org.apache.thrift.protocol.TField ROW_FIELD_DESC = new org.apache.thrift.protocol.TField("row", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -170,10 +173,10 @@ import org.slf4j.LoggerFactory;
     long timestamp)
   {
     this();
    this.row = row;
    this.colFamily = colFamily;
    this.colQualifier = colQualifier;
    this.colVisibility = colVisibility;
    this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
    this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
     this.timestamp = timestamp;
     setTimestampIsSet(true);
   }
@@ -185,19 +188,15 @@ import org.slf4j.LoggerFactory;
     __isset_bitfield = other.__isset_bitfield;
     if (other.isSetRow()) {
       this.row = org.apache.thrift.TBaseHelper.copyBinary(other.row);
;
     }
     if (other.isSetColFamily()) {
       this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(other.colFamily);
;
     }
     if (other.isSetColQualifier()) {
       this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(other.colQualifier);
;
     }
     if (other.isSetColVisibility()) {
       this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(other.colVisibility);
;
     }
     this.timestamp = other.timestamp;
   }
@@ -222,16 +221,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForRow() {
    return row;
    return org.apache.thrift.TBaseHelper.copyBinary(row);
   }
 
   public TKey setRow(byte[] row) {
    setRow(row == null ? (ByteBuffer)null : ByteBuffer.wrap(row));
    this.row = row == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(row, row.length));
     return this;
   }
 
   public TKey setRow(ByteBuffer row) {
    this.row = row;
    this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
     return this;
   }
 
@@ -256,16 +255,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColFamily() {
    return colFamily;
    return org.apache.thrift.TBaseHelper.copyBinary(colFamily);
   }
 
   public TKey setColFamily(byte[] colFamily) {
    setColFamily(colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(colFamily));
    this.colFamily = colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colFamily, colFamily.length));
     return this;
   }
 
   public TKey setColFamily(ByteBuffer colFamily) {
    this.colFamily = colFamily;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
     return this;
   }
 
@@ -290,16 +289,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColQualifier() {
    return colQualifier;
    return org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
   }
 
   public TKey setColQualifier(byte[] colQualifier) {
    setColQualifier(colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(colQualifier));
    this.colQualifier = colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colQualifier, colQualifier.length));
     return this;
   }
 
   public TKey setColQualifier(ByteBuffer colQualifier) {
    this.colQualifier = colQualifier;
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
     return this;
   }
 
@@ -324,16 +323,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColVisibility() {
    return colVisibility;
    return org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
   }
 
   public TKey setColVisibility(byte[] colVisibility) {
    setColVisibility(colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(colVisibility));
    this.colVisibility = colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colVisibility, colVisibility.length));
     return this;
   }
 
   public TKey setColVisibility(ByteBuffer colVisibility) {
    this.colVisibility = colVisibility;
    this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
     return this;
   }
 
@@ -435,7 +434,7 @@ import org.slf4j.LoggerFactory;
       return getColVisibility();
 
     case TIMESTAMP:
      return Long.valueOf(getTimestamp());
      return getTimestamp();
 
     }
     throw new IllegalStateException();
@@ -525,7 +524,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_row = true &amp;&amp; (isSetRow());
    list.add(present_row);
    if (present_row)
      list.add(row);

    boolean present_colFamily = true &amp;&amp; (isSetColFamily());
    list.add(present_colFamily);
    if (present_colFamily)
      list.add(colFamily);

    boolean present_colQualifier = true &amp;&amp; (isSetColQualifier());
    list.add(present_colQualifier);
    if (present_colQualifier)
      list.add(colQualifier);

    boolean present_colVisibility = true &amp;&amp; (isSetColVisibility());
    list.add(present_colVisibility);
    if (present_colVisibility)
      list.add(colVisibility);

    boolean present_timestamp = true;
    list.add(present_timestamp);
    if (present_timestamp)
      list.add(timestamp);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyExtent.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyExtent.java
index 20f1fea81..725ae657a 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyExtent.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyExtent.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TKeyExtent implements org.apache.thrift.TBase&lt;TKeyExtent, TKeyExtent._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TKeyExtent&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TKeyExtent implements org.apache.thrift.TBase&lt;TKeyExtent, TKeyExtent._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TKeyExtent&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TKeyExtent");
 
   private static final org.apache.thrift.protocol.TField TABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("table", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -152,9 +155,9 @@ import org.slf4j.LoggerFactory;
     ByteBuffer prevEndRow)
   {
     this();
    this.table = table;
    this.endRow = endRow;
    this.prevEndRow = prevEndRow;
    this.table = org.apache.thrift.TBaseHelper.copyBinary(table);
    this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
    this.prevEndRow = org.apache.thrift.TBaseHelper.copyBinary(prevEndRow);
   }
 
   /**
@@ -163,15 +166,12 @@ import org.slf4j.LoggerFactory;
   public TKeyExtent(TKeyExtent other) {
     if (other.isSetTable()) {
       this.table = org.apache.thrift.TBaseHelper.copyBinary(other.table);
;
     }
     if (other.isSetEndRow()) {
       this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
     }
     if (other.isSetPrevEndRow()) {
       this.prevEndRow = org.apache.thrift.TBaseHelper.copyBinary(other.prevEndRow);
;
     }
   }
 
@@ -192,16 +192,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForTable() {
    return table;
    return org.apache.thrift.TBaseHelper.copyBinary(table);
   }
 
   public TKeyExtent setTable(byte[] table) {
    setTable(table == null ? (ByteBuffer)null : ByteBuffer.wrap(table));
    this.table = table == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(table, table.length));
     return this;
   }
 
   public TKeyExtent setTable(ByteBuffer table) {
    this.table = table;
    this.table = org.apache.thrift.TBaseHelper.copyBinary(table);
     return this;
   }
 
@@ -226,16 +226,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForEndRow() {
    return endRow;
    return org.apache.thrift.TBaseHelper.copyBinary(endRow);
   }
 
   public TKeyExtent setEndRow(byte[] endRow) {
    setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
    this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
     return this;
   }
 
   public TKeyExtent setEndRow(ByteBuffer endRow) {
    this.endRow = endRow;
    this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
     return this;
   }
 
@@ -260,16 +260,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForPrevEndRow() {
    return prevEndRow;
    return org.apache.thrift.TBaseHelper.copyBinary(prevEndRow);
   }
 
   public TKeyExtent setPrevEndRow(byte[] prevEndRow) {
    setPrevEndRow(prevEndRow == null ? (ByteBuffer)null : ByteBuffer.wrap(prevEndRow));
    this.prevEndRow = prevEndRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(prevEndRow, prevEndRow.length));
     return this;
   }
 
   public TKeyExtent setPrevEndRow(ByteBuffer prevEndRow) {
    this.prevEndRow = prevEndRow;
    this.prevEndRow = org.apache.thrift.TBaseHelper.copyBinary(prevEndRow);
     return this;
   }
 
@@ -394,7 +394,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_table = true &amp;&amp; (isSetTable());
    list.add(present_table);
    if (present_table)
      list.add(table);

    boolean present_endRow = true &amp;&amp; (isSetEndRow());
    list.add(present_endRow);
    if (present_endRow)
      list.add(endRow);

    boolean present_prevEndRow = true &amp;&amp; (isSetPrevEndRow());
    list.add(present_prevEndRow);
    if (present_prevEndRow)
      list.add(prevEndRow);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyValue.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyValue.java
index 75161b088..6d01c0c06 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyValue.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TKeyValue.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TKeyValue implements org.apache.thrift.TBase&lt;TKeyValue, TKeyValue._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TKeyValue&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TKeyValue implements org.apache.thrift.TBase&lt;TKeyValue, TKeyValue._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TKeyValue&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TKeyValue");
 
   private static final org.apache.thrift.protocol.TField KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("key", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -145,7 +148,7 @@ import org.slf4j.LoggerFactory;
   {
     this();
     this.key = key;
    this.value = value;
    this.value = org.apache.thrift.TBaseHelper.copyBinary(value);
   }
 
   /**
@@ -157,7 +160,6 @@ import org.slf4j.LoggerFactory;
     }
     if (other.isSetValue()) {
       this.value = org.apache.thrift.TBaseHelper.copyBinary(other.value);
;
     }
   }
 
@@ -201,16 +203,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForValue() {
    return value;
    return org.apache.thrift.TBaseHelper.copyBinary(value);
   }
 
   public TKeyValue setValue(byte[] value) {
    setValue(value == null ? (ByteBuffer)null : ByteBuffer.wrap(value));
    this.value = value == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(value, value.length));
     return this;
   }
 
   public TKeyValue setValue(ByteBuffer value) {
    this.value = value;
    this.value = org.apache.thrift.TBaseHelper.copyBinary(value);
     return this;
   }
 
@@ -313,7 +315,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_key = true &amp;&amp; (isSetKey());
    list.add(present_key);
    if (present_key)
      list.add(key);

    boolean present_value = true &amp;&amp; (isSetValue());
    list.add(present_value);
    if (present_value)
      list.add(value);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TMutation.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TMutation.java
index c13e989ee..fb51c147b 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TMutation.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TMutation.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TMutation implements org.apache.thrift.TBase&lt;TMutation, TMutation._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TMutation&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TMutation implements org.apache.thrift.TBase&lt;TMutation, TMutation._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TMutation&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TMutation");
 
   private static final org.apache.thrift.protocol.TField ROW_FIELD_DESC = new org.apache.thrift.protocol.TField("row", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -142,7 +145,7 @@ import org.slf4j.LoggerFactory;
   // isset id assignments
   private static final int __ENTRIES_ISSET_ID = 0;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.SOURCES};
  private static final _Fields optionals[] = {_Fields.SOURCES};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -172,8 +175,8 @@ import org.slf4j.LoggerFactory;
     int entries)
   {
     this();
    this.row = row;
    this.data = data;
    this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
    this.data = org.apache.thrift.TBaseHelper.copyBinary(data);
     this.values = values;
     this.entries = entries;
     setEntriesIsSet(true);
@@ -186,11 +189,9 @@ import org.slf4j.LoggerFactory;
     __isset_bitfield = other.__isset_bitfield;
     if (other.isSetRow()) {
       this.row = org.apache.thrift.TBaseHelper.copyBinary(other.row);
;
     }
     if (other.isSetData()) {
       this.data = org.apache.thrift.TBaseHelper.copyBinary(other.data);
;
     }
     if (other.isSetValues()) {
       List&lt;ByteBuffer&gt; __this__values = new ArrayList&lt;ByteBuffer&gt;(other.values);
@@ -223,16 +224,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForRow() {
    return row;
    return org.apache.thrift.TBaseHelper.copyBinary(row);
   }
 
   public TMutation setRow(byte[] row) {
    setRow(row == null ? (ByteBuffer)null : ByteBuffer.wrap(row));
    this.row = row == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(row, row.length));
     return this;
   }
 
   public TMutation setRow(ByteBuffer row) {
    this.row = row;
    this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
     return this;
   }
 
@@ -257,16 +258,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForData() {
    return data;
    return org.apache.thrift.TBaseHelper.copyBinary(data);
   }
 
   public TMutation setData(byte[] data) {
    setData(data == null ? (ByteBuffer)null : ByteBuffer.wrap(data));
    this.data = data == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(data, data.length));
     return this;
   }
 
   public TMutation setData(ByteBuffer data) {
    this.data = data;
    this.data = org.apache.thrift.TBaseHelper.copyBinary(data);
     return this;
   }
 
@@ -443,7 +444,7 @@ import org.slf4j.LoggerFactory;
       return getValues();
 
     case ENTRIES:
      return Integer.valueOf(getEntries());
      return getEntries();
 
     case SOURCES:
       return getSources();
@@ -536,7 +537,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_row = true &amp;&amp; (isSetRow());
    list.add(present_row);
    if (present_row)
      list.add(row);

    boolean present_data = true &amp;&amp; (isSetData());
    list.add(present_data);
    if (present_data)
      list.add(data);

    boolean present_values = true &amp;&amp; (isSetValues());
    list.add(present_values);
    if (present_values)
      list.add(values);

    boolean present_entries = true;
    list.add(present_entries);
    if (present_entries)
      list.add(entries);

    boolean present_sources = true &amp;&amp; (isSetSources());
    list.add(present_sources);
    if (present_sources)
      list.add(sources);

    return list.hashCode();
   }
 
   @Override
@@ -637,7 +665,7 @@ import org.slf4j.LoggerFactory;
     if (this.values == null) {
       sb.append("null");
     } else {
      sb.append(this.values);
      org.apache.thrift.TBaseHelper.toString(this.values, sb);
     }
     first = false;
     if (!first) sb.append(", ");
@@ -720,11 +748,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                 struct.values = new ArrayList&lt;ByteBuffer&gt;(_list0.size);
                for (int _i1 = 0; _i1 &lt; _list0.size; ++_i1)
                ByteBuffer _elem1;
                for (int _i2 = 0; _i2 &lt; _list0.size; ++_i2)
                 {
                  ByteBuffer _elem2;
                  _elem2 = iprot.readBinary();
                  struct.values.add(_elem2);
                  _elem1 = iprot.readBinary();
                  struct.values.add(_elem1);
                 }
                 iprot.readListEnd();
               }
@@ -746,11 +774,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                 struct.sources = new ArrayList&lt;String&gt;(_list3.size);
                for (int _i4 = 0; _i4 &lt; _list3.size; ++_i4)
                String _elem4;
                for (int _i5 = 0; _i5 &lt; _list3.size; ++_i5)
                 {
                  String _elem5;
                  _elem5 = iprot.readString();
                  struct.sources.add(_elem5);
                  _elem4 = iprot.readString();
                  struct.sources.add(_elem4);
                 }
                 iprot.readListEnd();
               }
@@ -892,11 +920,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.values = new ArrayList&lt;ByteBuffer&gt;(_list10.size);
          for (int _i11 = 0; _i11 &lt; _list10.size; ++_i11)
          ByteBuffer _elem11;
          for (int _i12 = 0; _i12 &lt; _list10.size; ++_i12)
           {
            ByteBuffer _elem12;
            _elem12 = iprot.readBinary();
            struct.values.add(_elem12);
            _elem11 = iprot.readBinary();
            struct.values.add(_elem11);
           }
         }
         struct.setValuesIsSet(true);
@@ -909,11 +937,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.sources = new ArrayList&lt;String&gt;(_list13.size);
          for (int _i14 = 0; _i14 &lt; _list13.size; ++_i14)
          String _elem14;
          for (int _i15 = 0; _i15 &lt; _list13.size; ++_i15)
           {
            String _elem15;
            _elem15 = iprot.readString();
            struct.sources.add(_elem15);
            _elem14 = iprot.readString();
            struct.sources.add(_elem14);
           }
         }
         struct.setSourcesIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/TRange.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/TRange.java
index 0ad791c5a..a635039cf 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/TRange.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/TRange.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TRange implements org.apache.thrift.TBase&lt;TRange, TRange._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TRange&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TRange implements org.apache.thrift.TBase&lt;TRange, TRange._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TRange&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TRange");
 
   private static final org.apache.thrift.protocol.TField START_FIELD_DESC = new org.apache.thrift.protocol.TField("start", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -430,16 +433,16 @@ import org.slf4j.LoggerFactory;
       return getStop();
 
     case START_KEY_INCLUSIVE:
      return Boolean.valueOf(isStartKeyInclusive());
      return isStartKeyInclusive();
 
     case STOP_KEY_INCLUSIVE:
      return Boolean.valueOf(isStopKeyInclusive());
      return isStopKeyInclusive();
 
     case INFINITE_START_KEY:
      return Boolean.valueOf(isInfiniteStartKey());
      return isInfiniteStartKey();
 
     case INFINITE_STOP_KEY:
      return Boolean.valueOf(isInfiniteStopKey());
      return isInfiniteStopKey();
 
     }
     throw new IllegalStateException();
@@ -540,7 +543,39 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_start = true &amp;&amp; (isSetStart());
    list.add(present_start);
    if (present_start)
      list.add(start);

    boolean present_stop = true &amp;&amp; (isSetStop());
    list.add(present_stop);
    if (present_stop)
      list.add(stop);

    boolean present_startKeyInclusive = true;
    list.add(present_startKeyInclusive);
    if (present_startKeyInclusive)
      list.add(startKeyInclusive);

    boolean present_stopKeyInclusive = true;
    list.add(present_stopKeyInclusive);
    if (present_stopKeyInclusive)
      list.add(stopKeyInclusive);

    boolean present_infiniteStartKey = true;
    list.add(present_infiniteStartKey);
    if (present_infiniteStartKey)
      list.add(infiniteStartKey);

    boolean present_infiniteStopKey = true;
    list.add(present_infiniteStopKey);
    if (present_infiniteStopKey)
      list.add(infiniteStopKey);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/data/thrift/UpdateErrors.java b/core/src/main/java/org/apache/accumulo/core/data/thrift/UpdateErrors.java
index 58f2f0289..865b3e572 100644
-- a/core/src/main/java/org/apache/accumulo/core/data/thrift/UpdateErrors.java
++ b/core/src/main/java/org/apache/accumulo/core/data/thrift/UpdateErrors.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class UpdateErrors implements org.apache.thrift.TBase&lt;UpdateErrors, UpdateErrors._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;UpdateErrors&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class UpdateErrors implements org.apache.thrift.TBase&lt;UpdateErrors, UpdateErrors._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;UpdateErrors&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UpdateErrors");
 
   private static final org.apache.thrift.protocol.TField FAILED_EXTENTS_FIELD_DESC = new org.apache.thrift.protocol.TField("failedExtents", org.apache.thrift.protocol.TType.MAP, (short)1);
@@ -431,7 +434,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_failedExtents = true &amp;&amp; (isSetFailedExtents());
    list.add(present_failedExtents);
    if (present_failedExtents)
      list.add(failedExtents);

    boolean present_violationSummaries = true &amp;&amp; (isSetViolationSummaries());
    list.add(present_violationSummaries);
    if (present_violationSummaries)
      list.add(violationSummaries);

    boolean present_authorizationFailures = true &amp;&amp; (isSetAuthorizationFailures());
    list.add(present_authorizationFailures);
    if (present_authorizationFailures)
      list.add(authorizationFailures);

    return list.hashCode();
   }
 
   @Override
@@ -563,14 +583,14 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map58 = iprot.readMapBegin();
                 struct.failedExtents = new HashMap&lt;TKeyExtent,Long&gt;(2*_map58.size);
                for (int _i59 = 0; _i59 &lt; _map58.size; ++_i59)
                TKeyExtent _key59;
                long _val60;
                for (int _i61 = 0; _i61 &lt; _map58.size; ++_i61)
                 {
                  TKeyExtent _key60;
                  long _val61;
                  _key60 = new TKeyExtent();
                  _key60.read(iprot);
                  _val61 = iprot.readI64();
                  struct.failedExtents.put(_key60, _val61);
                  _key59 = new TKeyExtent();
                  _key59.read(iprot);
                  _val60 = iprot.readI64();
                  struct.failedExtents.put(_key59, _val60);
                 }
                 iprot.readMapEnd();
               }
@@ -584,12 +604,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list62 = iprot.readListBegin();
                 struct.violationSummaries = new ArrayList&lt;TConstraintViolationSummary&gt;(_list62.size);
                for (int _i63 = 0; _i63 &lt; _list62.size; ++_i63)
                TConstraintViolationSummary _elem63;
                for (int _i64 = 0; _i64 &lt; _list62.size; ++_i64)
                 {
                  TConstraintViolationSummary _elem64;
                  _elem64 = new TConstraintViolationSummary();
                  _elem64.read(iprot);
                  struct.violationSummaries.add(_elem64);
                  _elem63 = new TConstraintViolationSummary();
                  _elem63.read(iprot);
                  struct.violationSummaries.add(_elem63);
                 }
                 iprot.readListEnd();
               }
@@ -603,14 +623,14 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map65 = iprot.readMapBegin();
                 struct.authorizationFailures = new HashMap&lt;TKeyExtent,org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode&gt;(2*_map65.size);
                for (int _i66 = 0; _i66 &lt; _map65.size; ++_i66)
                TKeyExtent _key66;
                org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode _val67;
                for (int _i68 = 0; _i68 &lt; _map65.size; ++_i68)
                 {
                  TKeyExtent _key67;
                  org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode _val68;
                  _key67 = new TKeyExtent();
                  _key67.read(iprot);
                  _val68 = org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode.findByValue(iprot.readI32());
                  struct.authorizationFailures.put(_key67, _val68);
                  _key66 = new TKeyExtent();
                  _key66.read(iprot);
                  _val67 = org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode.findByValue(iprot.readI32());
                  struct.authorizationFailures.put(_key66, _val67);
                 }
                 iprot.readMapEnd();
               }
@@ -739,14 +759,14 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map75 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I64, iprot.readI32());
           struct.failedExtents = new HashMap&lt;TKeyExtent,Long&gt;(2*_map75.size);
          for (int _i76 = 0; _i76 &lt; _map75.size; ++_i76)
          TKeyExtent _key76;
          long _val77;
          for (int _i78 = 0; _i78 &lt; _map75.size; ++_i78)
           {
            TKeyExtent _key77;
            long _val78;
            _key77 = new TKeyExtent();
            _key77.read(iprot);
            _val78 = iprot.readI64();
            struct.failedExtents.put(_key77, _val78);
            _key76 = new TKeyExtent();
            _key76.read(iprot);
            _val77 = iprot.readI64();
            struct.failedExtents.put(_key76, _val77);
           }
         }
         struct.setFailedExtentsIsSet(true);
@@ -755,12 +775,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list79 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.violationSummaries = new ArrayList&lt;TConstraintViolationSummary&gt;(_list79.size);
          for (int _i80 = 0; _i80 &lt; _list79.size; ++_i80)
          TConstraintViolationSummary _elem80;
          for (int _i81 = 0; _i81 &lt; _list79.size; ++_i81)
           {
            TConstraintViolationSummary _elem81;
            _elem81 = new TConstraintViolationSummary();
            _elem81.read(iprot);
            struct.violationSummaries.add(_elem81);
            _elem80 = new TConstraintViolationSummary();
            _elem80.read(iprot);
            struct.violationSummaries.add(_elem80);
           }
         }
         struct.setViolationSummariesIsSet(true);
@@ -769,14 +789,14 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map82 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I32, iprot.readI32());
           struct.authorizationFailures = new HashMap&lt;TKeyExtent,org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode&gt;(2*_map82.size);
          for (int _i83 = 0; _i83 &lt; _map82.size; ++_i83)
          TKeyExtent _key83;
          org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode _val84;
          for (int _i85 = 0; _i85 &lt; _map82.size; ++_i85)
           {
            TKeyExtent _key84;
            org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode _val85;
            _key84 = new TKeyExtent();
            _key84.read(iprot);
            _val85 = org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode.findByValue(iprot.readI32());
            struct.authorizationFailures.put(_key84, _val85);
            _key83 = new TKeyExtent();
            _key83.read(iprot);
            _val84 = org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode.findByValue(iprot.readI32());
            struct.authorizationFailures.put(_key83, _val84);
           }
         }
         struct.setAuthorizationFailuresIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCMonitorService.java b/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCMonitorService.java
index a5c47ff09..6f2329c84 100644
-- a/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCMonitorService.java
++ b/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCMonitorService.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class GCMonitorService {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class GCMonitorService {
 
   public interface Iface {
 
@@ -533,7 +536,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -997,7 +1012,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCStatus.java b/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCStatus.java
index 9d6ade6d3..45211e714 100644
-- a/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCStatus.java
++ b/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCStatus.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class GCStatus implements org.apache.thrift.TBase&lt;GCStatus, GCStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;GCStatus&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class GCStatus implements org.apache.thrift.TBase&lt;GCStatus, GCStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;GCStatus&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GCStatus");
 
   private static final org.apache.thrift.protocol.TField LAST_FIELD_DESC = new org.apache.thrift.protocol.TField("last", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -420,7 +423,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_last = true &amp;&amp; (isSetLast());
    list.add(present_last);
    if (present_last)
      list.add(last);

    boolean present_lastLog = true &amp;&amp; (isSetLastLog());
    list.add(present_lastLog);
    if (present_lastLog)
      list.add(lastLog);

    boolean present_current = true &amp;&amp; (isSetCurrent());
    list.add(present_current);
    if (present_current)
      list.add(current);

    boolean present_currentLog = true &amp;&amp; (isSetCurrentLog());
    list.add(present_currentLog);
    if (present_currentLog)
      list.add(currentLog);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/gc/thrift/GcCycleStats.java b/core/src/main/java/org/apache/accumulo/core/gc/thrift/GcCycleStats.java
index 83dc826a0..b74f4ce08 100644
-- a/core/src/main/java/org/apache/accumulo/core/gc/thrift/GcCycleStats.java
++ b/core/src/main/java/org/apache/accumulo/core/gc/thrift/GcCycleStats.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class GcCycleStats implements org.apache.thrift.TBase&lt;GcCycleStats, GcCycleStats._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;GcCycleStats&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class GcCycleStats implements org.apache.thrift.TBase&lt;GcCycleStats, GcCycleStats._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;GcCycleStats&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GcCycleStats");
 
   private static final org.apache.thrift.protocol.TField STARTED_FIELD_DESC = new org.apache.thrift.protocol.TField("started", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -424,22 +427,22 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case STARTED:
      return Long.valueOf(getStarted());
      return getStarted();
 
     case FINISHED:
      return Long.valueOf(getFinished());
      return getFinished();
 
     case CANDIDATES:
      return Long.valueOf(getCandidates());
      return getCandidates();
 
     case IN_USE:
      return Long.valueOf(getInUse());
      return getInUse();
 
     case DELETED:
      return Long.valueOf(getDeleted());
      return getDeleted();
 
     case ERRORS:
      return Long.valueOf(getErrors());
      return getErrors();
 
     }
     throw new IllegalStateException();
@@ -540,7 +543,39 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_started = true;
    list.add(present_started);
    if (present_started)
      list.add(started);

    boolean present_finished = true;
    list.add(present_finished);
    if (present_finished)
      list.add(finished);

    boolean present_candidates = true;
    list.add(present_candidates);
    if (present_candidates)
      list.add(candidates);

    boolean present_inUse = true;
    list.add(present_inUse);
    if (present_inUse)
      list.add(inUse);

    boolean present_deleted = true;
    list.add(present_deleted);
    if (present_deleted)
      list.add(deleted);

    boolean present_errors = true;
    list.add(present_errors);
    if (present_errors)
      list.add(errors);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportState.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportState.java
index 861d3b931..a4f2efef4 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportState.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportState.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportStatus.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportStatus.java
index 36b3d8efe..6c58618f0 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportStatus.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/BulkImportStatus.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class BulkImportStatus implements org.apache.thrift.TBase&lt;BulkImportStatus, BulkImportStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;BulkImportStatus&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class BulkImportStatus implements org.apache.thrift.TBase&lt;BulkImportStatus, BulkImportStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;BulkImportStatus&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BulkImportStatus");
 
   private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -305,7 +308,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case START_TIME:
      return Long.valueOf(getStartTime());
      return getStartTime();
 
     case FILENAME:
       return getFilename();
@@ -379,7 +382,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_startTime = true;
    list.add(present_startTime);
    if (present_startTime)
      list.add(startTime);

    boolean present_filename = true &amp;&amp; (isSetFilename());
    list.add(present_filename);
    if (present_filename)
      list.add(filename);

    boolean present_state = true &amp;&amp; (isSetState());
    list.add(present_state);
    if (present_state)
      list.add(state.getValue());

    return list.hashCode();
   }
 
   @Override
@@ -522,7 +542,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 3: // STATE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = BulkImportState.findByValue(iprot.readI32());
              struct.state = org.apache.accumulo.core.master.thrift.BulkImportState.findByValue(iprot.readI32());
               struct.setStateIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -608,7 +628,7 @@ import org.slf4j.LoggerFactory;
         struct.setFilenameIsSet(true);
       }
       if (incoming.get(2)) {
        struct.state = BulkImportState.findByValue(iprot.readI32());
        struct.state = org.apache.accumulo.core.master.thrift.BulkImportState.findByValue(iprot.readI32());
         struct.setStateIsSet(true);
       }
     }
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/Compacting.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/Compacting.java
index 5b1b9cc9c..707b9e8ad 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/Compacting.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/Compacting.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class Compacting implements org.apache.thrift.TBase&lt;Compacting, Compacting._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Compacting&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class Compacting implements org.apache.thrift.TBase&lt;Compacting, Compacting._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Compacting&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Compacting");
 
   private static final org.apache.thrift.protocol.TField RUNNING_FIELD_DESC = new org.apache.thrift.protocol.TField("running", org.apache.thrift.protocol.TType.I32, (short)1);
@@ -244,10 +247,10 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case RUNNING:
      return Integer.valueOf(getRunning());
      return getRunning();
 
     case QUEUED:
      return Integer.valueOf(getQueued());
      return getQueued();
 
     }
     throw new IllegalStateException();
@@ -304,7 +307,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_running = true;
    list.add(present_running);
    if (present_running)
      list.add(running);

    boolean present_queued = true;
    list.add(present_queued);
    if (present_queued)
      list.add(queued);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/DeadServer.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/DeadServer.java
index 1cbe5f74a..18810859b 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/DeadServer.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/DeadServer.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class DeadServer implements org.apache.thrift.TBase&lt;DeadServer, DeadServer._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;DeadServer&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class DeadServer implements org.apache.thrift.TBase&lt;DeadServer, DeadServer._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;DeadServer&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DeadServer");
 
   private static final org.apache.thrift.protocol.TField SERVER_FIELD_DESC = new org.apache.thrift.protocol.TField("server", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -292,7 +295,7 @@ import org.slf4j.LoggerFactory;
       return getServer();
 
     case LAST_STATUS:
      return Long.valueOf(getLastStatus());
      return getLastStatus();
 
     case STATUS:
       return getStatus();
@@ -363,7 +366,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_server = true &amp;&amp; (isSetServer());
    list.add(present_server);
    if (present_server)
      list.add(server);

    boolean present_lastStatus = true;
    list.add(present_lastStatus);
    if (present_lastStatus)
      list.add(lastStatus);

    boolean present_status = true &amp;&amp; (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/FateOperation.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/FateOperation.java
index c72646913..866d6f6ad 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/FateOperation.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/FateOperation.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/FateService.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/FateService.java
index 352d891db..615e89af7 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/FateService.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/FateService.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class FateService {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class FateService {
 
   public interface Iface {
 
@@ -1022,7 +1025,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -1428,7 +1443,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Long.valueOf(getSuccess());
        return getSuccess();
 
       case SEC:
         return getSec();
@@ -1488,7 +1503,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -2162,7 +2189,7 @@ import org.slf4j.LoggerFactory;
         return getCredentials();
 
       case OPID:
        return Long.valueOf(getOpid());
        return getOpid();
 
       case OP:
         return getOp();
@@ -2174,7 +2201,7 @@ import org.slf4j.LoggerFactory;
         return getOptions();
 
       case AUTO_CLEAN:
        return Boolean.valueOf(isAutoClean());
        return isAutoClean();
 
       }
       throw new IllegalStateException();
@@ -2286,7 +2313,44 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_opid = true;
      list.add(present_opid);
      if (present_opid)
        list.add(opid);

      boolean present_op = true &amp;&amp; (isSetOp());
      list.add(present_op);
      if (present_op)
        list.add(op.getValue());

      boolean present_arguments = true &amp;&amp; (isSetArguments());
      list.add(present_arguments);
      if (present_arguments)
        list.add(arguments);

      boolean present_options = true &amp;&amp; (isSetOptions());
      list.add(present_options);
      if (present_options)
        list.add(options);

      boolean present_autoClean = true;
      list.add(present_autoClean);
      if (present_autoClean)
        list.add(autoClean);

      return list.hashCode();
     }
 
     @Override
@@ -2419,7 +2483,7 @@ import org.slf4j.LoggerFactory;
       if (this.arguments == null) {
         sb.append("null");
       } else {
        sb.append(this.arguments);
        org.apache.thrift.TBaseHelper.toString(this.arguments, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -2513,7 +2577,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 3: // OP
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.op = FateOperation.findByValue(iprot.readI32());
                struct.op = org.apache.accumulo.core.master.thrift.FateOperation.findByValue(iprot.readI32());
                 struct.setOpIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -2524,11 +2588,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list86 = iprot.readListBegin();
                   struct.arguments = new ArrayList&lt;ByteBuffer&gt;(_list86.size);
                  for (int _i87 = 0; _i87 &lt; _list86.size; ++_i87)
                  ByteBuffer _elem87;
                  for (int _i88 = 0; _i88 &lt; _list86.size; ++_i88)
                   {
                    ByteBuffer _elem88;
                    _elem88 = iprot.readBinary();
                    struct.arguments.add(_elem88);
                    _elem87 = iprot.readBinary();
                    struct.arguments.add(_elem87);
                   }
                   iprot.readListEnd();
                 }
@@ -2542,13 +2606,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map89 = iprot.readMapBegin();
                   struct.options = new HashMap&lt;String,String&gt;(2*_map89.size);
                  for (int _i90 = 0; _i90 &lt; _map89.size; ++_i90)
                  String _key90;
                  String _val91;
                  for (int _i92 = 0; _i92 &lt; _map89.size; ++_i92)
                   {
                    String _key91;
                    String _val92;
                    _key91 = iprot.readString();
                    _val92 = iprot.readString();
                    struct.options.put(_key91, _val92);
                    _key90 = iprot.readString();
                    _val91 = iprot.readString();
                    struct.options.put(_key90, _val91);
                   }
                   iprot.readMapEnd();
                 }
@@ -2721,18 +2785,18 @@ import org.slf4j.LoggerFactory;
           struct.setOpidIsSet(true);
         }
         if (incoming.get(3)) {
          struct.op = FateOperation.findByValue(iprot.readI32());
          struct.op = org.apache.accumulo.core.master.thrift.FateOperation.findByValue(iprot.readI32());
           struct.setOpIsSet(true);
         }
         if (incoming.get(4)) {
           {
             org.apache.thrift.protocol.TList _list97 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.arguments = new ArrayList&lt;ByteBuffer&gt;(_list97.size);
            for (int _i98 = 0; _i98 &lt; _list97.size; ++_i98)
            ByteBuffer _elem98;
            for (int _i99 = 0; _i99 &lt; _list97.size; ++_i99)
             {
              ByteBuffer _elem99;
              _elem99 = iprot.readBinary();
              struct.arguments.add(_elem99);
              _elem98 = iprot.readBinary();
              struct.arguments.add(_elem98);
             }
           }
           struct.setArgumentsIsSet(true);
@@ -2741,13 +2805,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map100 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.options = new HashMap&lt;String,String&gt;(2*_map100.size);
            for (int _i101 = 0; _i101 &lt; _map100.size; ++_i101)
            String _key101;
            String _val102;
            for (int _i103 = 0; _i103 &lt; _map100.size; ++_i103)
             {
              String _key102;
              String _val103;
              _key102 = iprot.readString();
              _val103 = iprot.readString();
              struct.options.put(_key102, _val103);
              _key101 = iprot.readString();
              _val102 = iprot.readString();
              struct.options.put(_key101, _val102);
             }
           }
           struct.setOptionsIsSet(true);
@@ -3015,7 +3079,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -3466,7 +3542,7 @@ import org.slf4j.LoggerFactory;
         return getCredentials();
 
       case OPID:
        return Long.valueOf(getOpid());
        return getOpid();
 
       }
       throw new IllegalStateException();
@@ -3534,7 +3610,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_opid = true;
      list.add(present_opid);
      if (present_opid)
        list.add(opid);

      return list.hashCode();
     }
 
     @Override
@@ -4094,7 +4187,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -4586,7 +4696,7 @@ import org.slf4j.LoggerFactory;
         return getCredentials();
 
       case OPID:
        return Long.valueOf(getOpid());
        return getOpid();
 
       }
       throw new IllegalStateException();
@@ -4654,7 +4764,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_opid = true;
      list.add(present_opid);
      if (present_opid)
        list.add(opid);

      return list.hashCode();
     }
 
     @Override
@@ -5096,7 +5223,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java
index 0885d4cc7..59d343280 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class MasterClientService {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class MasterClientService {
 
   public interface Iface extends FateService.Iface {
 
@@ -517,7 +520,7 @@ import org.slf4j.LoggerFactory;
       args.setCredentials(credentials);
       args.setServerName(serverName);
       args.setSplit(split);
      sendBase("reportSplitExtent", args);
      sendBaseOneway("reportSplitExtent", args);
     }
 
     public void reportTabletStatus(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, String serverName, TabletLoadState status, org.apache.accumulo.core.data.thrift.TKeyExtent tablet) throws org.apache.thrift.TException
@@ -533,7 +536,7 @@ import org.slf4j.LoggerFactory;
       args.setServerName(serverName);
       args.setStatus(status);
       args.setTablet(tablet);
      sendBase("reportTabletStatus", args);
      sendBaseOneway("reportTabletStatus", args);
     }
 
     public List&lt;String&gt; getActiveTservers(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials) throws org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException, org.apache.thrift.TException
@@ -1177,7 +1180,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("reportSplitExtent", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("reportSplitExtent", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         reportSplitExtent_args args = new reportSplitExtent_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -1219,7 +1222,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("reportTabletStatus", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("reportTabletStatus", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         reportTabletStatus_args args = new reportTabletStatus_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -3141,7 +3144,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -3633,7 +3653,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Long.valueOf(getSuccess());
        return getSuccess();
 
       case SEC:
         return getSec();
@@ -3707,7 +3727,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -4092,8 +4129,8 @@ import org.slf4j.LoggerFactory;
       this.tinfo = tinfo;
       this.credentials = credentials;
       this.tableName = tableName;
      this.startRow = startRow;
      this.endRow = endRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       this.flushID = flushID;
       setFlushIDIsSet(true);
       this.maxLoops = maxLoops;
@@ -4116,11 +4153,9 @@ import org.slf4j.LoggerFactory;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
       this.flushID = other.flushID;
       this.maxLoops = other.maxLoops;
@@ -4221,16 +4256,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public waitForFlush_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public waitForFlush_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -4255,16 +4290,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public waitForFlush_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public waitForFlush_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -4408,10 +4443,10 @@ import org.slf4j.LoggerFactory;
         return getEndRow();
 
       case FLUSH_ID:
        return Long.valueOf(getFlushID());
        return getFlushID();
 
       case MAX_LOOPS:
        return Long.valueOf(getMaxLoops());
        return getMaxLoops();
 
       }
       throw new IllegalStateException();
@@ -4523,7 +4558,44 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      boolean present_flushID = true;
      list.add(present_flushID);
      if (present_flushID)
        list.add(flushID);

      boolean present_maxLoops = true;
      list.add(present_maxLoops);
      if (present_maxLoops)
        list.add(maxLoops);

      return list.hashCode();
     }
 
     @Override
@@ -5182,7 +5254,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -5817,7 +5901,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      boolean present_value = true &amp;&amp; (isSetValue());
      list.add(present_value);
      if (present_value)
        list.add(value);

      return list.hashCode();
     }
 
     @Override
@@ -6404,7 +6515,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -6980,7 +7103,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      return list.hashCode();
     }
 
     @Override
@@ -7526,7 +7671,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -8161,7 +8318,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_ns = true &amp;&amp; (isSetNs());
      list.add(present_ns);
      if (present_ns)
        list.add(ns);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      boolean present_value = true &amp;&amp; (isSetValue());
      list.add(present_value);
      if (present_value)
        list.add(value);

      return list.hashCode();
     }
 
     @Override
@@ -8748,7 +8932,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -9324,7 +9520,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_ns = true &amp;&amp; (isSetNs());
      list.add(present_ns);
      if (present_ns)
        list.add(ns);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      return list.hashCode();
     }
 
     @Override
@@ -9870,7 +10088,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tope = true &amp;&amp; (isSetTope());
      list.add(present_tope);
      if (present_tope)
        list.add(tope);

      return list.hashCode();
     }
 
     @Override
@@ -10403,7 +10633,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_state = true &amp;&amp; (isSetState());
      list.add(present_state);
      if (present_state)
        list.add(state.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -10556,7 +10803,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 2: // STATE
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.state = MasterGoalState.findByValue(iprot.readI32());
                struct.state = org.apache.accumulo.core.master.thrift.MasterGoalState.findByValue(iprot.readI32());
                 struct.setStateIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -10646,7 +10893,7 @@ import org.slf4j.LoggerFactory;
           struct.setCredentialsIsSet(true);
         }
         if (incoming.get(2)) {
          struct.state = MasterGoalState.findByValue(iprot.readI32());
          struct.state = org.apache.accumulo.core.master.thrift.MasterGoalState.findByValue(iprot.readI32());
           struct.setStateIsSet(true);
         }
       }
@@ -10849,7 +11096,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -11257,7 +11511,7 @@ import org.slf4j.LoggerFactory;
         return getCredentials();
 
       case STOP_TABLET_SERVERS:
        return Boolean.valueOf(isStopTabletServers());
        return isStopTabletServers();
 
       }
       throw new IllegalStateException();
@@ -11325,7 +11579,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_stopTabletServers = true;
      list.add(present_stopTabletServers);
      if (present_stopTabletServers)
        list.add(stopTabletServers);

      return list.hashCode();
     }
 
     @Override
@@ -11767,7 +12038,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -12223,7 +12501,7 @@ import org.slf4j.LoggerFactory;
         return getTabletServer();
 
       case FORCE:
        return Boolean.valueOf(isForce());
        return isForce();
 
       }
       throw new IllegalStateException();
@@ -12302,7 +12580,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tabletServer = true &amp;&amp; (isSetTabletServer());
      list.add(present_tabletServer);
      if (present_tabletServer)
        list.add(tabletServer);

      boolean present_force = true;
      list.add(present_force);
      if (present_force)
        list.add(force);

      return list.hashCode();
     }
 
     @Override
@@ -12785,7 +13085,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -13318,7 +13625,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      boolean present_value = true &amp;&amp; (isSetValue());
      list.add(present_value);
      if (present_value)
        list.add(value);

      return list.hashCode();
     }
 
     @Override
@@ -13805,7 +14134,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -14279,7 +14615,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      return list.hashCode();
     }
 
     @Override
@@ -14725,7 +15078,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -15140,7 +15500,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -15604,7 +15976,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -16006,7 +16390,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      return list.hashCode();
     }
 
     @Override
@@ -16300,7 +16691,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -16788,7 +17181,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_serverName = true &amp;&amp; (isSetServerName());
      list.add(present_serverName);
      if (present_serverName)
        list.add(serverName);

      boolean present_split = true &amp;&amp; (isSetSplit());
      list.add(present_split);
      if (present_split)
        list.add(split);

      return list.hashCode();
     }
 
     @Override
@@ -17532,7 +17947,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_serverName = true &amp;&amp; (isSetServerName());
      list.add(present_serverName);
      if (present_serverName)
        list.add(serverName);

      boolean present_status = true &amp;&amp; (isSetStatus());
      list.add(present_status);
      if (present_status)
        list.add(status.getValue());

      boolean present_tablet = true &amp;&amp; (isSetTablet());
      list.add(present_tablet);
      if (present_tablet)
        list.add(tablet);

      return list.hashCode();
     }
 
     @Override
@@ -17732,7 +18174,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 3: // STATUS
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.status = TabletLoadState.findByValue(iprot.readI32());
                struct.status = org.apache.accumulo.core.master.thrift.TabletLoadState.findByValue(iprot.readI32());
                 struct.setStatusIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -17857,7 +18299,7 @@ import org.slf4j.LoggerFactory;
           struct.setServerNameIsSet(true);
         }
         if (incoming.get(3)) {
          struct.status = TabletLoadState.findByValue(iprot.readI32());
          struct.status = org.apache.accumulo.core.master.thrift.TabletLoadState.findByValue(iprot.readI32());
           struct.setStatusIsSet(true);
         }
         if (incoming.get(4)) {
@@ -18124,7 +18566,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -18605,7 +19059,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -18719,11 +19185,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list104 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;String&gt;(_list104.size);
                  for (int _i105 = 0; _i105 &lt; _list104.size; ++_i105)
                  String _elem105;
                  for (int _i106 = 0; _i106 &lt; _list104.size; ++_i106)
                   {
                    String _elem106;
                    _elem106 = iprot.readString();
                    struct.success.add(_elem106);
                    _elem105 = iprot.readString();
                    struct.success.add(_elem105);
                   }
                   iprot.readListEnd();
                 }
@@ -18820,11 +19286,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list109 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new ArrayList&lt;String&gt;(_list109.size);
            for (int _i110 = 0; _i110 &lt; _list109.size; ++_i110)
            String _elem110;
            for (int _i111 = 0; _i111 &lt; _list109.size; ++_i111)
             {
              String _elem111;
              _elem111 = iprot.readString();
              struct.success.add(_elem111);
              _elem110 = iprot.readString();
              struct.success.add(_elem110);
             }
           }
           struct.setSuccessIsSet(true);
@@ -19152,7 +19618,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_cfg = true &amp;&amp; (isSetCfg());
      list.add(present_cfg);
      if (present_cfg)
        list.add(cfg);

      return list.hashCode();
     }
 
     @Override
@@ -19662,7 +20145,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -20258,7 +20753,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tfino = true &amp;&amp; (isSetTfino());
      list.add(present_tfino);
      if (present_tfino)
        list.add(tfino);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_logsToWatch = true &amp;&amp; (isSetLogsToWatch());
      list.add(present_logsToWatch);
      if (present_logsToWatch)
        list.add(logsToWatch);

      return list.hashCode();
     }
 
     @Override
@@ -20440,11 +20957,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set112 = iprot.readSetBegin();
                   struct.logsToWatch = new HashSet&lt;String&gt;(2*_set112.size);
                  for (int _i113 = 0; _i113 &lt; _set112.size; ++_i113)
                  String _elem113;
                  for (int _i114 = 0; _i114 &lt; _set112.size; ++_i114)
                   {
                    String _elem114;
                    _elem114 = iprot.readString();
                    struct.logsToWatch.add(_elem114);
                    _elem113 = iprot.readString();
                    struct.logsToWatch.add(_elem113);
                   }
                   iprot.readSetEnd();
                 }
@@ -20568,11 +21085,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set117 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.logsToWatch = new HashSet&lt;String&gt;(2*_set117.size);
            for (int _i118 = 0; _i118 &lt; _set117.size; ++_i118)
            String _elem118;
            for (int _i119 = 0; _i119 &lt; _set117.size; ++_i119)
             {
              String _elem119;
              _elem119 = iprot.readString();
              struct.logsToWatch.add(_elem119);
              _elem118 = iprot.readString();
              struct.logsToWatch.add(_elem118);
             }
           }
           struct.setLogsToWatchIsSet(true);
@@ -20733,7 +21250,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       }
       throw new IllegalStateException();
@@ -20779,7 +21296,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterGoalState.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterGoalState.java
index f436454d1..289172730 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterGoalState.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterGoalState.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterMonitorInfo.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterMonitorInfo.java
index bf9befbb8..1b8ed46dc 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterMonitorInfo.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterMonitorInfo.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class MasterMonitorInfo implements org.apache.thrift.TBase&lt;MasterMonitorInfo, MasterMonitorInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MasterMonitorInfo&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class MasterMonitorInfo implements org.apache.thrift.TBase&lt;MasterMonitorInfo, MasterMonitorInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MasterMonitorInfo&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MasterMonitorInfo");
 
   private static final org.apache.thrift.protocol.TField TABLE_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("tableMap", org.apache.thrift.protocol.TType.MAP, (short)1);
@@ -722,7 +725,7 @@ import org.slf4j.LoggerFactory;
       return getGoalState();
 
     case UNASSIGNED_TABLETS:
      return Integer.valueOf(getUnassignedTablets());
      return getUnassignedTablets();
 
     case SERVERS_SHUTTING_DOWN:
       return getServersShuttingDown();
@@ -865,7 +868,54 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_tableMap = true &amp;&amp; (isSetTableMap());
    list.add(present_tableMap);
    if (present_tableMap)
      list.add(tableMap);

    boolean present_tServerInfo = true &amp;&amp; (isSetTServerInfo());
    list.add(present_tServerInfo);
    if (present_tServerInfo)
      list.add(tServerInfo);

    boolean present_badTServers = true &amp;&amp; (isSetBadTServers());
    list.add(present_badTServers);
    if (present_badTServers)
      list.add(badTServers);

    boolean present_state = true &amp;&amp; (isSetState());
    list.add(present_state);
    if (present_state)
      list.add(state.getValue());

    boolean present_goalState = true &amp;&amp; (isSetGoalState());
    list.add(present_goalState);
    if (present_goalState)
      list.add(goalState.getValue());

    boolean present_unassignedTablets = true;
    list.add(present_unassignedTablets);
    if (present_unassignedTablets)
      list.add(unassignedTablets);

    boolean present_serversShuttingDown = true &amp;&amp; (isSetServersShuttingDown());
    list.add(present_serversShuttingDown);
    if (present_serversShuttingDown)
      list.add(serversShuttingDown);

    boolean present_deadTabletServers = true &amp;&amp; (isSetDeadTabletServers());
    list.add(present_deadTabletServers);
    if (present_deadTabletServers)
      list.add(deadTabletServers);

    boolean present_bulkImports = true &amp;&amp; (isSetBulkImports());
    list.add(present_bulkImports);
    if (present_bulkImports)
      list.add(bulkImports);

    return list.hashCode();
   }
 
   @Override
@@ -1103,14 +1153,14 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map26 = iprot.readMapBegin();
                 struct.tableMap = new HashMap&lt;String,TableInfo&gt;(2*_map26.size);
                for (int _i27 = 0; _i27 &lt; _map26.size; ++_i27)
                String _key27;
                TableInfo _val28;
                for (int _i29 = 0; _i29 &lt; _map26.size; ++_i29)
                 {
                  String _key28;
                  TableInfo _val29;
                  _key28 = iprot.readString();
                  _val29 = new TableInfo();
                  _val29.read(iprot);
                  struct.tableMap.put(_key28, _val29);
                  _key27 = iprot.readString();
                  _val28 = new TableInfo();
                  _val28.read(iprot);
                  struct.tableMap.put(_key27, _val28);
                 }
                 iprot.readMapEnd();
               }
@@ -1124,12 +1174,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list30 = iprot.readListBegin();
                 struct.tServerInfo = new ArrayList&lt;TabletServerStatus&gt;(_list30.size);
                for (int _i31 = 0; _i31 &lt; _list30.size; ++_i31)
                TabletServerStatus _elem31;
                for (int _i32 = 0; _i32 &lt; _list30.size; ++_i32)
                 {
                  TabletServerStatus _elem32;
                  _elem32 = new TabletServerStatus();
                  _elem32.read(iprot);
                  struct.tServerInfo.add(_elem32);
                  _elem31 = new TabletServerStatus();
                  _elem31.read(iprot);
                  struct.tServerInfo.add(_elem31);
                 }
                 iprot.readListEnd();
               }
@@ -1143,13 +1193,13 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map33 = iprot.readMapBegin();
                 struct.badTServers = new HashMap&lt;String,Byte&gt;(2*_map33.size);
                for (int _i34 = 0; _i34 &lt; _map33.size; ++_i34)
                String _key34;
                byte _val35;
                for (int _i36 = 0; _i36 &lt; _map33.size; ++_i36)
                 {
                  String _key35;
                  byte _val36;
                  _key35 = iprot.readString();
                  _val36 = iprot.readByte();
                  struct.badTServers.put(_key35, _val36);
                  _key34 = iprot.readString();
                  _val35 = iprot.readByte();
                  struct.badTServers.put(_key34, _val35);
                 }
                 iprot.readMapEnd();
               }
@@ -1160,7 +1210,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 6: // STATE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = MasterState.findByValue(iprot.readI32());
              struct.state = org.apache.accumulo.core.master.thrift.MasterState.findByValue(iprot.readI32());
               struct.setStateIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1168,7 +1218,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 8: // GOAL_STATE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.goalState = MasterGoalState.findByValue(iprot.readI32());
              struct.goalState = org.apache.accumulo.core.master.thrift.MasterGoalState.findByValue(iprot.readI32());
               struct.setGoalStateIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1187,11 +1237,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TSet _set37 = iprot.readSetBegin();
                 struct.serversShuttingDown = new HashSet&lt;String&gt;(2*_set37.size);
                for (int _i38 = 0; _i38 &lt; _set37.size; ++_i38)
                String _elem38;
                for (int _i39 = 0; _i39 &lt; _set37.size; ++_i39)
                 {
                  String _elem39;
                  _elem39 = iprot.readString();
                  struct.serversShuttingDown.add(_elem39);
                  _elem38 = iprot.readString();
                  struct.serversShuttingDown.add(_elem38);
                 }
                 iprot.readSetEnd();
               }
@@ -1205,12 +1255,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list40 = iprot.readListBegin();
                 struct.deadTabletServers = new ArrayList&lt;DeadServer&gt;(_list40.size);
                for (int _i41 = 0; _i41 &lt; _list40.size; ++_i41)
                DeadServer _elem41;
                for (int _i42 = 0; _i42 &lt; _list40.size; ++_i42)
                 {
                  DeadServer _elem42;
                  _elem42 = new DeadServer();
                  _elem42.read(iprot);
                  struct.deadTabletServers.add(_elem42);
                  _elem41 = new DeadServer();
                  _elem41.read(iprot);
                  struct.deadTabletServers.add(_elem41);
                 }
                 iprot.readListEnd();
               }
@@ -1224,12 +1274,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list43 = iprot.readListBegin();
                 struct.bulkImports = new ArrayList&lt;BulkImportStatus&gt;(_list43.size);
                for (int _i44 = 0; _i44 &lt; _list43.size; ++_i44)
                BulkImportStatus _elem44;
                for (int _i45 = 0; _i45 &lt; _list43.size; ++_i45)
                 {
                  BulkImportStatus _elem45;
                  _elem45 = new BulkImportStatus();
                  _elem45.read(iprot);
                  struct.bulkImports.add(_elem45);
                  _elem44 = new BulkImportStatus();
                  _elem44.read(iprot);
                  struct.bulkImports.add(_elem44);
                 }
                 iprot.readListEnd();
               }
@@ -1461,14 +1511,14 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map58 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.tableMap = new HashMap&lt;String,TableInfo&gt;(2*_map58.size);
          for (int _i59 = 0; _i59 &lt; _map58.size; ++_i59)
          String _key59;
          TableInfo _val60;
          for (int _i61 = 0; _i61 &lt; _map58.size; ++_i61)
           {
            String _key60;
            TableInfo _val61;
            _key60 = iprot.readString();
            _val61 = new TableInfo();
            _val61.read(iprot);
            struct.tableMap.put(_key60, _val61);
            _key59 = iprot.readString();
            _val60 = new TableInfo();
            _val60.read(iprot);
            struct.tableMap.put(_key59, _val60);
           }
         }
         struct.setTableMapIsSet(true);
@@ -1477,12 +1527,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list62 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.tServerInfo = new ArrayList&lt;TabletServerStatus&gt;(_list62.size);
          for (int _i63 = 0; _i63 &lt; _list62.size; ++_i63)
          TabletServerStatus _elem63;
          for (int _i64 = 0; _i64 &lt; _list62.size; ++_i64)
           {
            TabletServerStatus _elem64;
            _elem64 = new TabletServerStatus();
            _elem64.read(iprot);
            struct.tServerInfo.add(_elem64);
            _elem63 = new TabletServerStatus();
            _elem63.read(iprot);
            struct.tServerInfo.add(_elem63);
           }
         }
         struct.setTServerInfoIsSet(true);
@@ -1491,23 +1541,23 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map65 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.BYTE, iprot.readI32());
           struct.badTServers = new HashMap&lt;String,Byte&gt;(2*_map65.size);
          for (int _i66 = 0; _i66 &lt; _map65.size; ++_i66)
          String _key66;
          byte _val67;
          for (int _i68 = 0; _i68 &lt; _map65.size; ++_i68)
           {
            String _key67;
            byte _val68;
            _key67 = iprot.readString();
            _val68 = iprot.readByte();
            struct.badTServers.put(_key67, _val68);
            _key66 = iprot.readString();
            _val67 = iprot.readByte();
            struct.badTServers.put(_key66, _val67);
           }
         }
         struct.setBadTServersIsSet(true);
       }
       if (incoming.get(3)) {
        struct.state = MasterState.findByValue(iprot.readI32());
        struct.state = org.apache.accumulo.core.master.thrift.MasterState.findByValue(iprot.readI32());
         struct.setStateIsSet(true);
       }
       if (incoming.get(4)) {
        struct.goalState = MasterGoalState.findByValue(iprot.readI32());
        struct.goalState = org.apache.accumulo.core.master.thrift.MasterGoalState.findByValue(iprot.readI32());
         struct.setGoalStateIsSet(true);
       }
       if (incoming.get(5)) {
@@ -1518,11 +1568,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TSet _set69 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.serversShuttingDown = new HashSet&lt;String&gt;(2*_set69.size);
          for (int _i70 = 0; _i70 &lt; _set69.size; ++_i70)
          String _elem70;
          for (int _i71 = 0; _i71 &lt; _set69.size; ++_i71)
           {
            String _elem71;
            _elem71 = iprot.readString();
            struct.serversShuttingDown.add(_elem71);
            _elem70 = iprot.readString();
            struct.serversShuttingDown.add(_elem70);
           }
         }
         struct.setServersShuttingDownIsSet(true);
@@ -1531,12 +1581,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list72 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.deadTabletServers = new ArrayList&lt;DeadServer&gt;(_list72.size);
          for (int _i73 = 0; _i73 &lt; _list72.size; ++_i73)
          DeadServer _elem73;
          for (int _i74 = 0; _i74 &lt; _list72.size; ++_i74)
           {
            DeadServer _elem74;
            _elem74 = new DeadServer();
            _elem74.read(iprot);
            struct.deadTabletServers.add(_elem74);
            _elem73 = new DeadServer();
            _elem73.read(iprot);
            struct.deadTabletServers.add(_elem73);
           }
         }
         struct.setDeadTabletServersIsSet(true);
@@ -1545,12 +1595,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list75 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.bulkImports = new ArrayList&lt;BulkImportStatus&gt;(_list75.size);
          for (int _i76 = 0; _i76 &lt; _list75.size; ++_i76)
          BulkImportStatus _elem76;
          for (int _i77 = 0; _i77 &lt; _list75.size; ++_i77)
           {
            BulkImportStatus _elem77;
            _elem77 = new BulkImportStatus();
            _elem77.read(iprot);
            struct.bulkImports.add(_elem77);
            _elem76 = new BulkImportStatus();
            _elem76.read(iprot);
            struct.bulkImports.add(_elem76);
           }
         }
         struct.setBulkImportsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterState.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterState.java
index 1d633051e..29548d3ed 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterState.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterState.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryException.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryException.java
index 025cced4c..f19bf6368 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryException.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class RecoveryException extends TException implements org.apache.thrift.TBase&lt;RecoveryException, RecoveryException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RecoveryException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class RecoveryException extends TException implements org.apache.thrift.TBase&lt;RecoveryException, RecoveryException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RecoveryException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecoveryException");
 
   private static final org.apache.thrift.protocol.TField WHY_FIELD_DESC = new org.apache.thrift.protocol.TField("why", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_why = true &amp;&amp; (isSetWhy());
    list.add(present_why);
    if (present_why)
      list.add(why);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryStatus.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryStatus.java
index 3ffcb03fe..72b6058d0 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryStatus.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryStatus.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class RecoveryStatus implements org.apache.thrift.TBase&lt;RecoveryStatus, RecoveryStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RecoveryStatus&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class RecoveryStatus implements org.apache.thrift.TBase&lt;RecoveryStatus, RecoveryStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RecoveryStatus&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecoveryStatus");
 
   private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
@@ -292,10 +295,10 @@ import org.slf4j.LoggerFactory;
       return getName();
 
     case RUNTIME:
      return Integer.valueOf(getRuntime());
      return getRuntime();
 
     case PROGRESS:
      return Double.valueOf(getProgress());
      return getProgress();
 
     }
     throw new IllegalStateException();
@@ -363,7 +366,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_name = true &amp;&amp; (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_runtime = true;
    list.add(present_runtime);
    if (present_runtime)
      list.add(runtime);

    boolean present_progress = true;
    list.add(present_progress);
    if (present_progress)
      list.add(progress);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/TableInfo.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/TableInfo.java
index 3c919cd20..126369d1b 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/TableInfo.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/TableInfo.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TableInfo implements org.apache.thrift.TBase&lt;TableInfo, TableInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TableInfo&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TableInfo implements org.apache.thrift.TBase&lt;TableInfo, TableInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TableInfo&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TableInfo");
 
   private static final org.apache.thrift.protocol.TField RECS_FIELD_DESC = new org.apache.thrift.protocol.TField("recs", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -694,28 +697,28 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case RECS:
      return Long.valueOf(getRecs());
      return getRecs();
 
     case RECS_IN_MEMORY:
      return Long.valueOf(getRecsInMemory());
      return getRecsInMemory();
 
     case TABLETS:
      return Integer.valueOf(getTablets());
      return getTablets();
 
     case ONLINE_TABLETS:
      return Integer.valueOf(getOnlineTablets());
      return getOnlineTablets();
 
     case INGEST_RATE:
      return Double.valueOf(getIngestRate());
      return getIngestRate();
 
     case INGEST_BYTE_RATE:
      return Double.valueOf(getIngestByteRate());
      return getIngestByteRate();
 
     case QUERY_RATE:
      return Double.valueOf(getQueryRate());
      return getQueryRate();
 
     case QUERY_BYTE_RATE:
      return Double.valueOf(getQueryByteRate());
      return getQueryByteRate();
 
     case MINORS:
       return getMinors();
@@ -727,7 +730,7 @@ import org.slf4j.LoggerFactory;
       return getScans();
 
     case SCAN_RATE:
      return Double.valueOf(getScanRate());
      return getScanRate();
 
     }
     throw new IllegalStateException();
@@ -894,7 +897,69 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_recs = true;
    list.add(present_recs);
    if (present_recs)
      list.add(recs);

    boolean present_recsInMemory = true;
    list.add(present_recsInMemory);
    if (present_recsInMemory)
      list.add(recsInMemory);

    boolean present_tablets = true;
    list.add(present_tablets);
    if (present_tablets)
      list.add(tablets);

    boolean present_onlineTablets = true;
    list.add(present_onlineTablets);
    if (present_onlineTablets)
      list.add(onlineTablets);

    boolean present_ingestRate = true;
    list.add(present_ingestRate);
    if (present_ingestRate)
      list.add(ingestRate);

    boolean present_ingestByteRate = true;
    list.add(present_ingestByteRate);
    if (present_ingestByteRate)
      list.add(ingestByteRate);

    boolean present_queryRate = true;
    list.add(present_queryRate);
    if (present_queryRate)
      list.add(queryRate);

    boolean present_queryByteRate = true;
    list.add(present_queryByteRate);
    if (present_queryByteRate)
      list.add(queryByteRate);

    boolean present_minors = true &amp;&amp; (isSetMinors());
    list.add(present_minors);
    if (present_minors)
      list.add(minors);

    boolean present_majors = true &amp;&amp; (isSetMajors());
    list.add(present_majors);
    if (present_majors)
      list.add(majors);

    boolean present_scans = true &amp;&amp; (isSetScans());
    list.add(present_scans);
    if (present_scans)
      list.add(scans);

    boolean present_scanRate = true;
    list.add(present_scanRate);
    if (present_scanRate)
      list.add(scanRate);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletLoadState.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletLoadState.java
index 97338cc1a..1a3a80cd4 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletLoadState.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletLoadState.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletServerStatus.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletServerStatus.java
index 0c7416fb4..f88a569bc 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletServerStatus.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletServerStatus.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TabletServerStatus implements org.apache.thrift.TBase&lt;TabletServerStatus, TabletServerStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TabletServerStatus&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TabletServerStatus implements org.apache.thrift.TBase&lt;TabletServerStatus, TabletServerStatus._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TabletServerStatus&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TabletServerStatus");
 
   private static final org.apache.thrift.protocol.TField TABLE_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("tableMap", org.apache.thrift.protocol.TType.MAP, (short)1);
@@ -852,40 +855,40 @@ import org.slf4j.LoggerFactory;
       return getTableMap();
 
     case LAST_CONTACT:
      return Long.valueOf(getLastContact());
      return getLastContact();
 
     case NAME:
       return getName();
 
     case OS_LOAD:
      return Double.valueOf(getOsLoad());
      return getOsLoad();
 
     case HOLD_TIME:
      return Long.valueOf(getHoldTime());
      return getHoldTime();
 
     case LOOKUPS:
      return Long.valueOf(getLookups());
      return getLookups();
 
     case INDEX_CACHE_HITS:
      return Long.valueOf(getIndexCacheHits());
      return getIndexCacheHits();
 
     case INDEX_CACHE_REQUEST:
      return Long.valueOf(getIndexCacheRequest());
      return getIndexCacheRequest();
 
     case DATA_CACHE_HITS:
      return Long.valueOf(getDataCacheHits());
      return getDataCacheHits();
 
     case DATA_CACHE_REQUEST:
      return Long.valueOf(getDataCacheRequest());
      return getDataCacheRequest();
 
     case LOG_SORTS:
       return getLogSorts();
 
     case FLUSHS:
      return Long.valueOf(getFlushs());
      return getFlushs();
 
     case SYNCS:
      return Long.valueOf(getSyncs());
      return getSyncs();
 
     case BULK_IMPORTS:
       return getBulkImports();
@@ -1077,7 +1080,79 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_tableMap = true &amp;&amp; (isSetTableMap());
    list.add(present_tableMap);
    if (present_tableMap)
      list.add(tableMap);

    boolean present_lastContact = true;
    list.add(present_lastContact);
    if (present_lastContact)
      list.add(lastContact);

    boolean present_name = true &amp;&amp; (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_osLoad = true;
    list.add(present_osLoad);
    if (present_osLoad)
      list.add(osLoad);

    boolean present_holdTime = true;
    list.add(present_holdTime);
    if (present_holdTime)
      list.add(holdTime);

    boolean present_lookups = true;
    list.add(present_lookups);
    if (present_lookups)
      list.add(lookups);

    boolean present_indexCacheHits = true;
    list.add(present_indexCacheHits);
    if (present_indexCacheHits)
      list.add(indexCacheHits);

    boolean present_indexCacheRequest = true;
    list.add(present_indexCacheRequest);
    if (present_indexCacheRequest)
      list.add(indexCacheRequest);

    boolean present_dataCacheHits = true;
    list.add(present_dataCacheHits);
    if (present_dataCacheHits)
      list.add(dataCacheHits);

    boolean present_dataCacheRequest = true;
    list.add(present_dataCacheRequest);
    if (present_dataCacheRequest)
      list.add(dataCacheRequest);

    boolean present_logSorts = true &amp;&amp; (isSetLogSorts());
    list.add(present_logSorts);
    if (present_logSorts)
      list.add(logSorts);

    boolean present_flushs = true;
    list.add(present_flushs);
    if (present_flushs)
      list.add(flushs);

    boolean present_syncs = true;
    list.add(present_syncs);
    if (present_syncs)
      list.add(syncs);

    boolean present_bulkImports = true &amp;&amp; (isSetBulkImports());
    list.add(present_bulkImports);
    if (present_bulkImports)
      list.add(bulkImports);

    return list.hashCode();
   }
 
   @Override
@@ -1369,14 +1444,14 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                 struct.tableMap = new HashMap&lt;String,TableInfo&gt;(2*_map0.size);
                for (int _i1 = 0; _i1 &lt; _map0.size; ++_i1)
                String _key1;
                TableInfo _val2;
                for (int _i3 = 0; _i3 &lt; _map0.size; ++_i3)
                 {
                  String _key2;
                  TableInfo _val3;
                  _key2 = iprot.readString();
                  _val3 = new TableInfo();
                  _val3.read(iprot);
                  struct.tableMap.put(_key2, _val3);
                  _key1 = iprot.readString();
                  _val2 = new TableInfo();
                  _val2.read(iprot);
                  struct.tableMap.put(_key1, _val2);
                 }
                 iprot.readMapEnd();
               }
@@ -1462,12 +1537,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
                 struct.logSorts = new ArrayList&lt;RecoveryStatus&gt;(_list4.size);
                for (int _i5 = 0; _i5 &lt; _list4.size; ++_i5)
                RecoveryStatus _elem5;
                for (int _i6 = 0; _i6 &lt; _list4.size; ++_i6)
                 {
                  RecoveryStatus _elem6;
                  _elem6 = new RecoveryStatus();
                  _elem6.read(iprot);
                  struct.logSorts.add(_elem6);
                  _elem5 = new RecoveryStatus();
                  _elem5.read(iprot);
                  struct.logSorts.add(_elem5);
                 }
                 iprot.readListEnd();
               }
@@ -1497,12 +1572,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list7 = iprot.readListBegin();
                 struct.bulkImports = new ArrayList&lt;BulkImportStatus&gt;(_list7.size);
                for (int _i8 = 0; _i8 &lt; _list7.size; ++_i8)
                BulkImportStatus _elem8;
                for (int _i9 = 0; _i9 &lt; _list7.size; ++_i9)
                 {
                  BulkImportStatus _elem9;
                  _elem9 = new BulkImportStatus();
                  _elem9.read(iprot);
                  struct.bulkImports.add(_elem9);
                  _elem8 = new BulkImportStatus();
                  _elem8.read(iprot);
                  struct.bulkImports.add(_elem8);
                 }
                 iprot.readListEnd();
               }
@@ -1730,14 +1805,14 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map16 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.tableMap = new HashMap&lt;String,TableInfo&gt;(2*_map16.size);
          for (int _i17 = 0; _i17 &lt; _map16.size; ++_i17)
          String _key17;
          TableInfo _val18;
          for (int _i19 = 0; _i19 &lt; _map16.size; ++_i19)
           {
            String _key18;
            TableInfo _val19;
            _key18 = iprot.readString();
            _val19 = new TableInfo();
            _val19.read(iprot);
            struct.tableMap.put(_key18, _val19);
            _key17 = iprot.readString();
            _val18 = new TableInfo();
            _val18.read(iprot);
            struct.tableMap.put(_key17, _val18);
           }
         }
         struct.setTableMapIsSet(true);
@@ -1782,12 +1857,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list20 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.logSorts = new ArrayList&lt;RecoveryStatus&gt;(_list20.size);
          for (int _i21 = 0; _i21 &lt; _list20.size; ++_i21)
          RecoveryStatus _elem21;
          for (int _i22 = 0; _i22 &lt; _list20.size; ++_i22)
           {
            RecoveryStatus _elem22;
            _elem22 = new RecoveryStatus();
            _elem22.read(iprot);
            struct.logSorts.add(_elem22);
            _elem21 = new RecoveryStatus();
            _elem21.read(iprot);
            struct.logSorts.add(_elem21);
           }
         }
         struct.setLogSortsIsSet(true);
@@ -1804,12 +1879,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list23 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.bulkImports = new ArrayList&lt;BulkImportStatus&gt;(_list23.size);
          for (int _i24 = 0; _i24 &lt; _list23.size; ++_i24)
          BulkImportStatus _elem24;
          for (int _i25 = 0; _i25 &lt; _list23.size; ++_i25)
           {
            BulkImportStatus _elem25;
            _elem25 = new BulkImportStatus();
            _elem25.read(iprot);
            struct.bulkImports.add(_elem25);
            _elem24 = new BulkImportStatus();
            _elem24.read(iprot);
            struct.bulkImports.add(_elem24);
           }
         }
         struct.setBulkImportsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletSplit.java b/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletSplit.java
index 6c26129f3..d0eb6f206 100644
-- a/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletSplit.java
++ b/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletSplit.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TabletSplit implements org.apache.thrift.TBase&lt;TabletSplit, TabletSplit._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TabletSplit&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TabletSplit implements org.apache.thrift.TBase&lt;TabletSplit, TabletSplit._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TabletSplit&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TabletSplit");
 
   private static final org.apache.thrift.protocol.TField OLD_TABLET_FIELD_DESC = new org.apache.thrift.protocol.TField("oldTablet", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -322,7 +325,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_oldTablet = true &amp;&amp; (isSetOldTablet());
    list.add(present_oldTablet);
    if (present_oldTablet)
      list.add(oldTablet);

    boolean present_newTablets = true &amp;&amp; (isSetNewTablets());
    list.add(present_newTablets);
    if (present_newTablets)
      list.add(newTablets);

    return list.hashCode();
   }
 
   @Override
@@ -448,12 +463,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list78 = iprot.readListBegin();
                 struct.newTablets = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TKeyExtent&gt;(_list78.size);
                for (int _i79 = 0; _i79 &lt; _list78.size; ++_i79)
                org.apache.accumulo.core.data.thrift.TKeyExtent _elem79;
                for (int _i80 = 0; _i80 &lt; _list78.size; ++_i80)
                 {
                  org.apache.accumulo.core.data.thrift.TKeyExtent _elem80;
                  _elem80 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                  _elem80.read(iprot);
                  struct.newTablets.add(_elem80);
                  _elem79 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                  _elem79.read(iprot);
                  struct.newTablets.add(_elem79);
                 }
                 iprot.readListEnd();
               }
@@ -546,12 +561,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list83 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.newTablets = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TKeyExtent&gt;(_list83.size);
          for (int _i84 = 0; _i84 &lt; _list83.size; ++_i84)
          org.apache.accumulo.core.data.thrift.TKeyExtent _elem84;
          for (int _i85 = 0; _i85 &lt; _list83.size; ++_i85)
           {
            org.apache.accumulo.core.data.thrift.TKeyExtent _elem85;
            _elem85 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
            _elem85.read(iprot);
            struct.newTablets.add(_elem85);
            _elem84 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
            _elem84.read(iprot);
            struct.newTablets.add(_elem84);
           }
         }
         struct.setNewTabletsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/KeyValues.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/KeyValues.java
index 3c6f6ed99..7a083fae1 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/KeyValues.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/KeyValues.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class KeyValues implements org.apache.thrift.TBase&lt;KeyValues, KeyValues._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyValues&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class KeyValues implements org.apache.thrift.TBase&lt;KeyValues, KeyValues._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyValues&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("KeyValues");
 
   private static final org.apache.thrift.protocol.TField KEY_VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("keyValues", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -263,7 +266,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_keyValues = true &amp;&amp; (isSetKeyValues());
    list.add(present_keyValues);
    if (present_keyValues)
      list.add(keyValues);

    return list.hashCode();
   }
 
   @Override
@@ -359,12 +369,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                 struct.keyValues = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TKeyValue&gt;(_list8.size);
                for (int _i9 = 0; _i9 &lt; _list8.size; ++_i9)
                org.apache.accumulo.core.data.thrift.TKeyValue _elem9;
                for (int _i10 = 0; _i10 &lt; _list8.size; ++_i10)
                 {
                  org.apache.accumulo.core.data.thrift.TKeyValue _elem10;
                  _elem10 = new org.apache.accumulo.core.data.thrift.TKeyValue();
                  _elem10.read(iprot);
                  struct.keyValues.add(_elem10);
                  _elem9 = new org.apache.accumulo.core.data.thrift.TKeyValue();
                  _elem9.read(iprot);
                  struct.keyValues.add(_elem9);
                 }
                 iprot.readListEnd();
               }
@@ -441,12 +451,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.keyValues = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TKeyValue&gt;(_list13.size);
          for (int _i14 = 0; _i14 &lt; _list13.size; ++_i14)
          org.apache.accumulo.core.data.thrift.TKeyValue _elem14;
          for (int _i15 = 0; _i15 &lt; _list13.size; ++_i15)
           {
            org.apache.accumulo.core.data.thrift.TKeyValue _elem15;
            _elem15 = new org.apache.accumulo.core.data.thrift.TKeyValue();
            _elem15.read(iprot);
            struct.keyValues.add(_elem15);
            _elem14 = new org.apache.accumulo.core.data.thrift.TKeyValue();
            _elem14.read(iprot);
            struct.keyValues.add(_elem14);
           }
         }
         struct.setKeyValuesIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationErrorCode.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationErrorCode.java
index 75dd28c32..2ec6a1514 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationErrorCode.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationErrorCode.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationException.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationException.java
index 331d7671b..18e21551a 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationException.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/RemoteReplicationException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class RemoteReplicationException extends TException implements org.apache.thrift.TBase&lt;RemoteReplicationException, RemoteReplicationException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RemoteReplicationException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class RemoteReplicationException extends TException implements org.apache.thrift.TBase&lt;RemoteReplicationException, RemoteReplicationException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RemoteReplicationException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RemoteReplicationException");
 
   private static final org.apache.thrift.protocol.TField CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("code", org.apache.thrift.protocol.TType.I32, (short)1);
@@ -318,7 +321,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_code = true &amp;&amp; (isSetCode());
    list.add(present_code);
    if (present_code)
      list.add(code.getValue());

    boolean present_reason = true &amp;&amp; (isSetReason());
    list.add(present_reason);
    if (present_reason)
      list.add(reason);

    return list.hashCode();
   }
 
   @Override
@@ -429,7 +444,7 @@ import org.slf4j.LoggerFactory;
         switch (schemeField.id) {
           case 1: // CODE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.code = RemoteReplicationErrorCode.findByValue(iprot.readI32());
              struct.code = org.apache.accumulo.core.replication.thrift.RemoteReplicationErrorCode.findByValue(iprot.readI32());
               struct.setCodeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -506,7 +521,7 @@ import org.slf4j.LoggerFactory;
       TTupleProtocol iprot = (TTupleProtocol) prot;
       BitSet incoming = iprot.readBitSet(2);
       if (incoming.get(0)) {
        struct.code = RemoteReplicationErrorCode.findByValue(iprot.readI32());
        struct.code = org.apache.accumulo.core.replication.thrift.RemoteReplicationErrorCode.findByValue(iprot.readI32());
         struct.setCodeIsSet(true);
       }
       if (incoming.get(1)) {
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinator.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinator.java
index 1314802e3..38385bac4 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinator.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinator.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ReplicationCoordinator {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ReplicationCoordinator {
 
   public interface Iface {
 
@@ -533,7 +536,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_remoteTableId = true &amp;&amp; (isSetRemoteTableId());
      list.add(present_remoteTableId);
      if (present_remoteTableId)
        list.add(remoteTableId);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -992,7 +1007,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true &amp;&amp; (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
     }
 
     @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorErrorCode.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorErrorCode.java
index 8c56d618c..545656bd0 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorErrorCode.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorErrorCode.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorException.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorException.java
index 5e1feae7c..f7536c4da 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorException.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationCoordinatorException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ReplicationCoordinatorException extends TException implements org.apache.thrift.TBase&lt;ReplicationCoordinatorException, ReplicationCoordinatorException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ReplicationCoordinatorException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ReplicationCoordinatorException extends TException implements org.apache.thrift.TBase&lt;ReplicationCoordinatorException, ReplicationCoordinatorException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ReplicationCoordinatorException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReplicationCoordinatorException");
 
   private static final org.apache.thrift.protocol.TField CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("code", org.apache.thrift.protocol.TType.I32, (short)1);
@@ -318,7 +321,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_code = true &amp;&amp; (isSetCode());
    list.add(present_code);
    if (present_code)
      list.add(code.getValue());

    boolean present_reason = true &amp;&amp; (isSetReason());
    list.add(present_reason);
    if (present_reason)
      list.add(reason);

    return list.hashCode();
   }
 
   @Override
@@ -429,7 +444,7 @@ import org.slf4j.LoggerFactory;
         switch (schemeField.id) {
           case 1: // CODE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.code = ReplicationCoordinatorErrorCode.findByValue(iprot.readI32());
              struct.code = org.apache.accumulo.core.replication.thrift.ReplicationCoordinatorErrorCode.findByValue(iprot.readI32());
               struct.setCodeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -506,7 +521,7 @@ import org.slf4j.LoggerFactory;
       TTupleProtocol iprot = (TTupleProtocol) prot;
       BitSet incoming = iprot.readBitSet(2);
       if (incoming.get(0)) {
        struct.code = ReplicationCoordinatorErrorCode.findByValue(iprot.readI32());
        struct.code = org.apache.accumulo.core.replication.thrift.ReplicationCoordinatorErrorCode.findByValue(iprot.readI32());
         struct.setCodeIsSet(true);
       }
       if (incoming.get(1)) {
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationServicer.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationServicer.java
index d2ff11b53..853e9d4aa 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationServicer.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/ReplicationServicer.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ReplicationServicer {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ReplicationServicer {
 
   public interface Iface {
 
@@ -753,7 +756,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_remoteTableId = true &amp;&amp; (isSetRemoteTableId());
      list.add(present_remoteTableId);
      if (present_remoteTableId)
        list.add(remoteTableId);

      boolean present_data = true &amp;&amp; (isSetData());
      list.add(present_data);
      if (present_data)
        list.add(data);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -1200,7 +1220,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Long.valueOf(getSuccess());
        return getSuccess();
 
       case E:
         return getE();
@@ -1260,7 +1280,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true &amp;&amp; (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
     }
 
     @Override
@@ -1773,7 +1805,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_remoteTableId = true &amp;&amp; (isSetRemoteTableId());
      list.add(present_remoteTableId);
      if (present_remoteTableId)
        list.add(remoteTableId);

      boolean present_data = true &amp;&amp; (isSetData());
      list.add(present_data);
      if (present_data)
        list.add(data);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -2220,7 +2269,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Long.valueOf(getSuccess());
        return getSuccess();
 
       case E:
         return getE();
@@ -2280,7 +2329,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true &amp;&amp; (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
     }
 
     @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/replication/thrift/WalEdits.java b/core/src/main/java/org/apache/accumulo/core/replication/thrift/WalEdits.java
index 4459dcd43..3d0b2e36b 100644
-- a/core/src/main/java/org/apache/accumulo/core/replication/thrift/WalEdits.java
++ b/core/src/main/java/org/apache/accumulo/core/replication/thrift/WalEdits.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class WalEdits implements org.apache.thrift.TBase&lt;WalEdits, WalEdits._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;WalEdits&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class WalEdits implements org.apache.thrift.TBase&lt;WalEdits, WalEdits._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;WalEdits&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WalEdits");
 
   private static final org.apache.thrift.protocol.TField EDITS_FIELD_DESC = new org.apache.thrift.protocol.TField("edits", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -260,7 +263,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_edits = true &amp;&amp; (isSetEdits());
    list.add(present_edits);
    if (present_edits)
      list.add(edits);

    return list.hashCode();
   }
 
   @Override
@@ -305,7 +315,7 @@ import org.slf4j.LoggerFactory;
     if (this.edits == null) {
       sb.append("null");
     } else {
      sb.append(this.edits);
      org.apache.thrift.TBaseHelper.toString(this.edits, sb);
     }
     first = false;
     sb.append(")");
@@ -356,11 +366,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                 struct.edits = new ArrayList&lt;ByteBuffer&gt;(_list0.size);
                for (int _i1 = 0; _i1 &lt; _list0.size; ++_i1)
                ByteBuffer _elem1;
                for (int _i2 = 0; _i2 &lt; _list0.size; ++_i2)
                 {
                  ByteBuffer _elem2;
                  _elem2 = iprot.readBinary();
                  struct.edits.add(_elem2);
                  _elem1 = iprot.readBinary();
                  struct.edits.add(_elem1);
                 }
                 iprot.readListEnd();
               }
@@ -437,11 +447,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.edits = new ArrayList&lt;ByteBuffer&gt;(_list5.size);
          for (int _i6 = 0; _i6 &lt; _list5.size; ++_i6)
          ByteBuffer _elem6;
          for (int _i7 = 0; _i7 &lt; _list5.size; ++_i7)
           {
            ByteBuffer _elem7;
            _elem7 = iprot.readBinary();
            struct.edits.add(_elem7);
            _elem6 = iprot.readBinary();
            struct.edits.add(_elem6);
           }
         }
         struct.setEditsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationKey.java b/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationKey.java
index 4da2bb2dc..f9b82a513 100644
-- a/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationKey.java
++ b/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationKey.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TAuthenticationKey implements org.apache.thrift.TBase&lt;TAuthenticationKey, TAuthenticationKey._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TAuthenticationKey&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TAuthenticationKey implements org.apache.thrift.TBase&lt;TAuthenticationKey, TAuthenticationKey._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TAuthenticationKey&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAuthenticationKey");
 
   private static final org.apache.thrift.protocol.TField SECRET_FIELD_DESC = new org.apache.thrift.protocol.TField("secret", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -139,7 +142,7 @@ import org.slf4j.LoggerFactory;
   private static final int __EXPIRATIONDATE_ISSET_ID = 1;
   private static final int __CREATIONDATE_ISSET_ID = 2;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.KEY_ID,_Fields.EXPIRATION_DATE,_Fields.CREATION_DATE};
  private static final _Fields optionals[] = {_Fields.KEY_ID,_Fields.EXPIRATION_DATE,_Fields.CREATION_DATE};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -162,7 +165,7 @@ import org.slf4j.LoggerFactory;
     ByteBuffer secret)
   {
     this();
    this.secret = secret;
    this.secret = org.apache.thrift.TBaseHelper.copyBinary(secret);
   }
 
   /**
@@ -172,7 +175,6 @@ import org.slf4j.LoggerFactory;
     __isset_bitfield = other.__isset_bitfield;
     if (other.isSetSecret()) {
       this.secret = org.apache.thrift.TBaseHelper.copyBinary(other.secret);
;
     }
     this.keyId = other.keyId;
     this.expirationDate = other.expirationDate;
@@ -200,16 +202,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForSecret() {
    return secret;
    return org.apache.thrift.TBaseHelper.copyBinary(secret);
   }
 
   public TAuthenticationKey setSecret(byte[] secret) {
    setSecret(secret == null ? (ByteBuffer)null : ByteBuffer.wrap(secret));
    this.secret = secret == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(secret, secret.length));
     return this;
   }
 
   public TAuthenticationKey setSecret(ByteBuffer secret) {
    this.secret = secret;
    this.secret = org.apache.thrift.TBaseHelper.copyBinary(secret);
     return this;
   }
 
@@ -340,13 +342,13 @@ import org.slf4j.LoggerFactory;
       return getSecret();
 
     case KEY_ID:
      return Integer.valueOf(getKeyId());
      return getKeyId();
 
     case EXPIRATION_DATE:
      return Long.valueOf(getExpirationDate());
      return getExpirationDate();
 
     case CREATION_DATE:
      return Long.valueOf(getCreationDate());
      return getCreationDate();
 
     }
     throw new IllegalStateException();
@@ -425,7 +427,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_secret = true &amp;&amp; (isSetSecret());
    list.add(present_secret);
    if (present_secret)
      list.add(secret);

    boolean present_keyId = true &amp;&amp; (isSetKeyId());
    list.add(present_keyId);
    if (present_keyId)
      list.add(keyId);

    boolean present_expirationDate = true &amp;&amp; (isSetExpirationDate());
    list.add(present_expirationDate);
    if (present_expirationDate)
      list.add(expirationDate);

    boolean present_creationDate = true &amp;&amp; (isSetCreationDate());
    list.add(present_creationDate);
    if (present_creationDate)
      list.add(creationDate);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationTokenIdentifier.java b/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationTokenIdentifier.java
index d4e75f097..e84c492b5 100644
-- a/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationTokenIdentifier.java
++ b/core/src/main/java/org/apache/accumulo/core/security/thrift/TAuthenticationTokenIdentifier.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TAuthenticationTokenIdentifier implements org.apache.thrift.TBase&lt;TAuthenticationTokenIdentifier, TAuthenticationTokenIdentifier._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TAuthenticationTokenIdentifier&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TAuthenticationTokenIdentifier implements org.apache.thrift.TBase&lt;TAuthenticationTokenIdentifier, TAuthenticationTokenIdentifier._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TAuthenticationTokenIdentifier&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAuthenticationTokenIdentifier");
 
   private static final org.apache.thrift.protocol.TField PRINCIPAL_FIELD_DESC = new org.apache.thrift.protocol.TField("principal", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -144,7 +147,7 @@ import org.slf4j.LoggerFactory;
   private static final int __ISSUEDATE_ISSET_ID = 1;
   private static final int __EXPIRATIONDATE_ISSET_ID = 2;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.KEY_ID,_Fields.ISSUE_DATE,_Fields.EXPIRATION_DATE,_Fields.INSTANCE_ID};
  private static final _Fields optionals[] = {_Fields.KEY_ID,_Fields.ISSUE_DATE,_Fields.EXPIRATION_DATE,_Fields.INSTANCE_ID};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -372,13 +375,13 @@ import org.slf4j.LoggerFactory;
       return getPrincipal();
 
     case KEY_ID:
      return Integer.valueOf(getKeyId());
      return getKeyId();
 
     case ISSUE_DATE:
      return Long.valueOf(getIssueDate());
      return getIssueDate();
 
     case EXPIRATION_DATE:
      return Long.valueOf(getExpirationDate());
      return getExpirationDate();
 
     case INSTANCE_ID:
       return getInstanceId();
@@ -471,7 +474,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_principal = true &amp;&amp; (isSetPrincipal());
    list.add(present_principal);
    if (present_principal)
      list.add(principal);

    boolean present_keyId = true &amp;&amp; (isSetKeyId());
    list.add(present_keyId);
    if (present_keyId)
      list.add(keyId);

    boolean present_issueDate = true &amp;&amp; (isSetIssueDate());
    list.add(present_issueDate);
    if (present_issueDate)
      list.add(issueDate);

    boolean present_expirationDate = true &amp;&amp; (isSetExpirationDate());
    list.add(present_expirationDate);
    if (present_expirationDate)
      list.add(expirationDate);

    boolean present_instanceId = true &amp;&amp; (isSetInstanceId());
    list.add(present_instanceId);
    if (present_instanceId)
      list.add(instanceId);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/security/thrift/TCredentials.java b/core/src/main/java/org/apache/accumulo/core/security/thrift/TCredentials.java
index 0bbd2413e..ba0567b63 100644
-- a/core/src/main/java/org/apache/accumulo/core/security/thrift/TCredentials.java
++ b/core/src/main/java/org/apache/accumulo/core/security/thrift/TCredentials.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TCredentials implements org.apache.thrift.TBase&lt;TCredentials, TCredentials._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TCredentials&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TCredentials implements org.apache.thrift.TBase&lt;TCredentials, TCredentials._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TCredentials&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TCredentials");
 
   private static final org.apache.thrift.protocol.TField PRINCIPAL_FIELD_DESC = new org.apache.thrift.protocol.TField("principal", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -162,7 +165,7 @@ import org.slf4j.LoggerFactory;
     this();
     this.principal = principal;
     this.tokenClassName = tokenClassName;
    this.token = token;
    this.token = org.apache.thrift.TBaseHelper.copyBinary(token);
     this.instanceId = instanceId;
   }
 
@@ -178,7 +181,6 @@ import org.slf4j.LoggerFactory;
     }
     if (other.isSetToken()) {
       this.token = org.apache.thrift.TBaseHelper.copyBinary(other.token);
;
     }
     if (other.isSetInstanceId()) {
       this.instanceId = other.instanceId;
@@ -251,16 +253,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForToken() {
    return token;
    return org.apache.thrift.TBaseHelper.copyBinary(token);
   }
 
   public TCredentials setToken(byte[] token) {
    setToken(token == null ? (ByteBuffer)null : ByteBuffer.wrap(token));
    this.token = token == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(token, token.length));
     return this;
   }
 
   public TCredentials setToken(ByteBuffer token) {
    this.token = token;
    this.token = org.apache.thrift.TBaseHelper.copyBinary(token);
     return this;
   }
 
@@ -431,7 +433,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_principal = true &amp;&amp; (isSetPrincipal());
    list.add(present_principal);
    if (present_principal)
      list.add(principal);

    boolean present_tokenClassName = true &amp;&amp; (isSetTokenClassName());
    list.add(present_tokenClassName);
    if (present_tokenClassName)
      list.add(tokenClassName);

    boolean present_token = true &amp;&amp; (isSetToken());
    list.add(present_token);
    if (present_token)
      list.add(token);

    boolean present_instanceId = true &amp;&amp; (isSetInstanceId());
    list.add(present_instanceId);
    if (present_instanceId)
      list.add(instanceId);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationToken.java b/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationToken.java
index 904d19567..9efa4f503 100644
-- a/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationToken.java
++ b/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationToken.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TDelegationToken implements org.apache.thrift.TBase&lt;TDelegationToken, TDelegationToken._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TDelegationToken&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TDelegationToken implements org.apache.thrift.TBase&lt;TDelegationToken, TDelegationToken._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TDelegationToken&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDelegationToken");
 
   private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -144,7 +147,7 @@ import org.slf4j.LoggerFactory;
     TAuthenticationTokenIdentifier identifier)
   {
     this();
    this.password = password;
    this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
     this.identifier = identifier;
   }
 
@@ -154,7 +157,6 @@ import org.slf4j.LoggerFactory;
   public TDelegationToken(TDelegationToken other) {
     if (other.isSetPassword()) {
       this.password = org.apache.thrift.TBaseHelper.copyBinary(other.password);
;
     }
     if (other.isSetIdentifier()) {
       this.identifier = new TAuthenticationTokenIdentifier(other.identifier);
@@ -177,16 +179,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForPassword() {
    return password;
    return org.apache.thrift.TBaseHelper.copyBinary(password);
   }
 
   public TDelegationToken setPassword(byte[] password) {
    setPassword(password == null ? (ByteBuffer)null : ByteBuffer.wrap(password));
    this.password = password == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(password, password.length));
     return this;
   }
 
   public TDelegationToken setPassword(ByteBuffer password) {
    this.password = password;
    this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
     return this;
   }
 
@@ -313,7 +315,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_password = true &amp;&amp; (isSetPassword());
    list.add(present_password);
    if (present_password)
      list.add(password);

    boolean present_identifier = true &amp;&amp; (isSetIdentifier());
    list.add(present_identifier);
    if (present_identifier)
      list.add(identifier);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationTokenConfig.java b/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationTokenConfig.java
index cdde83ef6..3d4a25429 100644
-- a/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationTokenConfig.java
++ b/core/src/main/java/org/apache/accumulo/core/security/thrift/TDelegationTokenConfig.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TDelegationTokenConfig implements org.apache.thrift.TBase&lt;TDelegationTokenConfig, TDelegationTokenConfig._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TDelegationTokenConfig&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TDelegationTokenConfig implements org.apache.thrift.TBase&lt;TDelegationTokenConfig, TDelegationTokenConfig._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TDelegationTokenConfig&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDelegationTokenConfig");
 
   private static final org.apache.thrift.protocol.TField LIFETIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lifetime", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -122,7 +125,7 @@ import org.slf4j.LoggerFactory;
   // isset id assignments
   private static final int __LIFETIME_ISSET_ID = 0;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.LIFETIME};
  private static final _Fields optionals[] = {_Fields.LIFETIME};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -192,7 +195,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case LIFETIME:
      return Long.valueOf(getLifetime());
      return getLifetime();
 
     }
     throw new IllegalStateException();
@@ -238,7 +241,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_lifetime = true &amp;&amp; (isSetLifetime());
    list.add(present_lifetime);
    if (present_lifetime)
      list.add(lifetime);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActionStats.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActionStats.java
index 86a502ba8..f26a58149 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActionStats.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActionStats.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ActionStats implements org.apache.thrift.TBase&lt;ActionStats, ActionStats._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActionStats&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ActionStats implements org.apache.thrift.TBase&lt;ActionStats, ActionStats._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActionStats&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ActionStats");
 
   private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)1);
@@ -514,28 +517,28 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case STATUS:
      return Integer.valueOf(getStatus());
      return getStatus();
 
     case ELAPSED:
      return Double.valueOf(getElapsed());
      return getElapsed();
 
     case NUM:
      return Integer.valueOf(getNum());
      return getNum();
 
     case COUNT:
      return Long.valueOf(getCount());
      return getCount();
 
     case SUM_DEV:
      return Double.valueOf(getSumDev());
      return getSumDev();
 
     case FAIL:
      return Integer.valueOf(getFail());
      return getFail();
 
     case QUEUE_TIME:
      return Double.valueOf(getQueueTime());
      return getQueueTime();
 
     case QUEUE_SUM_DEV:
      return Double.valueOf(getQueueSumDev());
      return getQueueSumDev();
 
     }
     throw new IllegalStateException();
@@ -658,7 +661,49 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_elapsed = true;
    list.add(present_elapsed);
    if (present_elapsed)
      list.add(elapsed);

    boolean present_num = true;
    list.add(present_num);
    if (present_num)
      list.add(num);

    boolean present_count = true;
    list.add(present_count);
    if (present_count)
      list.add(count);

    boolean present_sumDev = true;
    list.add(present_sumDev);
    if (present_sumDev)
      list.add(sumDev);

    boolean present_fail = true;
    list.add(present_fail);
    if (present_fail)
      list.add(fail);

    boolean present_queueTime = true;
    list.add(present_queueTime);
    if (present_queueTime)
      list.add(queueTime);

    boolean present_queueSumDev = true;
    list.add(present_queueSumDev);
    if (present_queueSumDev)
      list.add(queueSumDev);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveCompaction.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveCompaction.java
index 9c1977d2c..b32b38e1b 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveCompaction.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveCompaction.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ActiveCompaction implements org.apache.thrift.TBase&lt;ActiveCompaction, ActiveCompaction._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveCompaction&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ActiveCompaction implements org.apache.thrift.TBase&lt;ActiveCompaction, ActiveCompaction._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveCompaction&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ActiveCompaction");
 
   private static final org.apache.thrift.protocol.TField EXTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("extent", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -748,7 +751,7 @@ import org.slf4j.LoggerFactory;
       return getExtent();
 
     case AGE:
      return Long.valueOf(getAge());
      return getAge();
 
     case INPUT_FILES:
       return getInputFiles();
@@ -766,10 +769,10 @@ import org.slf4j.LoggerFactory;
       return getLocalityGroup();
 
     case ENTRIES_READ:
      return Long.valueOf(getEntriesRead());
      return getEntriesRead();
 
     case ENTRIES_WRITTEN:
      return Long.valueOf(getEntriesWritten());
      return getEntriesWritten();
 
     case SSI_LIST:
       return getSsiList();
@@ -931,7 +934,64 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    boolean present_age = true;
    list.add(present_age);
    if (present_age)
      list.add(age);

    boolean present_inputFiles = true &amp;&amp; (isSetInputFiles());
    list.add(present_inputFiles);
    if (present_inputFiles)
      list.add(inputFiles);

    boolean present_outputFile = true &amp;&amp; (isSetOutputFile());
    list.add(present_outputFile);
    if (present_outputFile)
      list.add(outputFile);

    boolean present_type = true &amp;&amp; (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type.getValue());

    boolean present_reason = true &amp;&amp; (isSetReason());
    list.add(present_reason);
    if (present_reason)
      list.add(reason.getValue());

    boolean present_localityGroup = true &amp;&amp; (isSetLocalityGroup());
    list.add(present_localityGroup);
    if (present_localityGroup)
      list.add(localityGroup);

    boolean present_entriesRead = true;
    list.add(present_entriesRead);
    if (present_entriesRead)
      list.add(entriesRead);

    boolean present_entriesWritten = true;
    list.add(present_entriesWritten);
    if (present_entriesWritten)
      list.add(entriesWritten);

    boolean present_ssiList = true &amp;&amp; (isSetSsiList());
    list.add(present_ssiList);
    if (present_ssiList)
      list.add(ssiList);

    boolean present_ssio = true &amp;&amp; (isSetSsio());
    list.add(present_ssio);
    if (present_ssio)
      list.add(ssio);

    return list.hashCode();
   }
 
   @Override
@@ -1217,11 +1277,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list52 = iprot.readListBegin();
                 struct.inputFiles = new ArrayList&lt;String&gt;(_list52.size);
                for (int _i53 = 0; _i53 &lt; _list52.size; ++_i53)
                String _elem53;
                for (int _i54 = 0; _i54 &lt; _list52.size; ++_i54)
                 {
                  String _elem54;
                  _elem54 = iprot.readString();
                  struct.inputFiles.add(_elem54);
                  _elem53 = iprot.readString();
                  struct.inputFiles.add(_elem53);
                 }
                 iprot.readListEnd();
               }
@@ -1240,7 +1300,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 5: // TYPE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = CompactionType.findByValue(iprot.readI32());
              struct.type = org.apache.accumulo.core.tabletserver.thrift.CompactionType.findByValue(iprot.readI32());
               struct.setTypeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1248,7 +1308,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 6: // REASON
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reason = CompactionReason.findByValue(iprot.readI32());
              struct.reason = org.apache.accumulo.core.tabletserver.thrift.CompactionReason.findByValue(iprot.readI32());
               struct.setReasonIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1283,12 +1343,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list55 = iprot.readListBegin();
                 struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list55.size);
                for (int _i56 = 0; _i56 &lt; _list55.size; ++_i56)
                org.apache.accumulo.core.data.thrift.IterInfo _elem56;
                for (int _i57 = 0; _i57 &lt; _list55.size; ++_i57)
                 {
                  org.apache.accumulo.core.data.thrift.IterInfo _elem57;
                  _elem57 = new org.apache.accumulo.core.data.thrift.IterInfo();
                  _elem57.read(iprot);
                  struct.ssiList.add(_elem57);
                  _elem56 = new org.apache.accumulo.core.data.thrift.IterInfo();
                  _elem56.read(iprot);
                  struct.ssiList.add(_elem56);
                 }
                 iprot.readListEnd();
               }
@@ -1302,25 +1362,25 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map58 = iprot.readMapBegin();
                 struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map58.size);
                for (int _i59 = 0; _i59 &lt; _map58.size; ++_i59)
                String _key59;
                Map&lt;String,String&gt; _val60;
                for (int _i61 = 0; _i61 &lt; _map58.size; ++_i61)
                 {
                  String _key60;
                  Map&lt;String,String&gt; _val61;
                  _key60 = iprot.readString();
                  _key59 = iprot.readString();
                   {
                     org.apache.thrift.protocol.TMap _map62 = iprot.readMapBegin();
                    _val61 = new HashMap&lt;String,String&gt;(2*_map62.size);
                    for (int _i63 = 0; _i63 &lt; _map62.size; ++_i63)
                    _val60 = new HashMap&lt;String,String&gt;(2*_map62.size);
                    String _key63;
                    String _val64;
                    for (int _i65 = 0; _i65 &lt; _map62.size; ++_i65)
                     {
                      String _key64;
                      String _val65;
                      _key64 = iprot.readString();
                      _val65 = iprot.readString();
                      _val61.put(_key64, _val65);
                      _key63 = iprot.readString();
                      _val64 = iprot.readString();
                      _val60.put(_key63, _val64);
                     }
                     iprot.readMapEnd();
                   }
                  struct.ssio.put(_key60, _val61);
                  struct.ssio.put(_key59, _val60);
                 }
                 iprot.readMapEnd();
               }
@@ -1553,11 +1613,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list74 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.inputFiles = new ArrayList&lt;String&gt;(_list74.size);
          for (int _i75 = 0; _i75 &lt; _list74.size; ++_i75)
          String _elem75;
          for (int _i76 = 0; _i76 &lt; _list74.size; ++_i76)
           {
            String _elem76;
            _elem76 = iprot.readString();
            struct.inputFiles.add(_elem76);
            _elem75 = iprot.readString();
            struct.inputFiles.add(_elem75);
           }
         }
         struct.setInputFilesIsSet(true);
@@ -1567,11 +1627,11 @@ import org.slf4j.LoggerFactory;
         struct.setOutputFileIsSet(true);
       }
       if (incoming.get(4)) {
        struct.type = CompactionType.findByValue(iprot.readI32());
        struct.type = org.apache.accumulo.core.tabletserver.thrift.CompactionType.findByValue(iprot.readI32());
         struct.setTypeIsSet(true);
       }
       if (incoming.get(5)) {
        struct.reason = CompactionReason.findByValue(iprot.readI32());
        struct.reason = org.apache.accumulo.core.tabletserver.thrift.CompactionReason.findByValue(iprot.readI32());
         struct.setReasonIsSet(true);
       }
       if (incoming.get(6)) {
@@ -1590,12 +1650,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list77 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list77.size);
          for (int _i78 = 0; _i78 &lt; _list77.size; ++_i78)
          org.apache.accumulo.core.data.thrift.IterInfo _elem78;
          for (int _i79 = 0; _i79 &lt; _list77.size; ++_i79)
           {
            org.apache.accumulo.core.data.thrift.IterInfo _elem79;
            _elem79 = new org.apache.accumulo.core.data.thrift.IterInfo();
            _elem79.read(iprot);
            struct.ssiList.add(_elem79);
            _elem78 = new org.apache.accumulo.core.data.thrift.IterInfo();
            _elem78.read(iprot);
            struct.ssiList.add(_elem78);
           }
         }
         struct.setSsiListIsSet(true);
@@ -1604,24 +1664,24 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map80 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
           struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map80.size);
          for (int _i81 = 0; _i81 &lt; _map80.size; ++_i81)
          String _key81;
          Map&lt;String,String&gt; _val82;
          for (int _i83 = 0; _i83 &lt; _map80.size; ++_i83)
           {
            String _key82;
            Map&lt;String,String&gt; _val83;
            _key82 = iprot.readString();
            _key81 = iprot.readString();
             {
               org.apache.thrift.protocol.TMap _map84 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _val83 = new HashMap&lt;String,String&gt;(2*_map84.size);
              for (int _i85 = 0; _i85 &lt; _map84.size; ++_i85)
              _val82 = new HashMap&lt;String,String&gt;(2*_map84.size);
              String _key85;
              String _val86;
              for (int _i87 = 0; _i87 &lt; _map84.size; ++_i87)
               {
                String _key86;
                String _val87;
                _key86 = iprot.readString();
                _val87 = iprot.readString();
                _val83.put(_key86, _val87);
                _key85 = iprot.readString();
                _val86 = iprot.readString();
                _val82.put(_key85, _val86);
               }
             }
            struct.ssio.put(_key82, _val83);
            struct.ssio.put(_key81, _val82);
           }
         }
         struct.setSsioIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java
index e46c39783..fe899db3a 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ActiveScan implements org.apache.thrift.TBase&lt;ActiveScan, ActiveScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveScan&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ActiveScan implements org.apache.thrift.TBase&lt;ActiveScan, ActiveScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveScan&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ActiveScan");
 
   private static final org.apache.thrift.protocol.TField CLIENT_FIELD_DESC = new org.apache.thrift.protocol.TField("client", org.apache.thrift.protocol.TType.STRING, (short)2);
@@ -205,7 +208,7 @@ import org.slf4j.LoggerFactory;
   private static final int __IDLETIME_ISSET_ID = 1;
   private static final int __SCANID_ISSET_ID = 2;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.SCAN_ID};
  private static final _Fields optionals[] = {_Fields.SCAN_ID};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -907,10 +910,10 @@ import org.slf4j.LoggerFactory;
       return getTableId();
 
     case AGE:
      return Long.valueOf(getAge());
      return getAge();
 
     case IDLE_TIME:
      return Long.valueOf(getIdleTime());
      return getIdleTime();
 
     case TYPE:
       return getType();
@@ -934,7 +937,7 @@ import org.slf4j.LoggerFactory;
       return getAuthorizations();
 
     case SCAN_ID:
      return Long.valueOf(getScanId());
      return getScanId();
 
     case CLASS_LOADER_CONTEXT:
       return getClassLoaderContext();
@@ -1126,7 +1129,79 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_client = true &amp;&amp; (isSetClient());
    list.add(present_client);
    if (present_client)
      list.add(client);

    boolean present_user = true &amp;&amp; (isSetUser());
    list.add(present_user);
    if (present_user)
      list.add(user);

    boolean present_tableId = true &amp;&amp; (isSetTableId());
    list.add(present_tableId);
    if (present_tableId)
      list.add(tableId);

    boolean present_age = true;
    list.add(present_age);
    if (present_age)
      list.add(age);

    boolean present_idleTime = true;
    list.add(present_idleTime);
    if (present_idleTime)
      list.add(idleTime);

    boolean present_type = true &amp;&amp; (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type.getValue());

    boolean present_state = true &amp;&amp; (isSetState());
    list.add(present_state);
    if (present_state)
      list.add(state.getValue());

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    boolean present_columns = true &amp;&amp; (isSetColumns());
    list.add(present_columns);
    if (present_columns)
      list.add(columns);

    boolean present_ssiList = true &amp;&amp; (isSetSsiList());
    list.add(present_ssiList);
    if (present_ssiList)
      list.add(ssiList);

    boolean present_ssio = true &amp;&amp; (isSetSsio());
    list.add(present_ssio);
    if (present_ssio)
      list.add(ssio);

    boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
    list.add(present_authorizations);
    if (present_authorizations)
      list.add(authorizations);

    boolean present_scanId = true &amp;&amp; (isSetScanId());
    list.add(present_scanId);
    if (present_scanId)
      list.add(scanId);

    boolean present_classLoaderContext = true &amp;&amp; (isSetClassLoaderContext());
    list.add(present_classLoaderContext);
    if (present_classLoaderContext)
      list.add(classLoaderContext);

    return list.hashCode();
   }
 
   @Override
@@ -1381,7 +1456,7 @@ import org.slf4j.LoggerFactory;
     if (this.authorizations == null) {
       sb.append("null");
     } else {
      sb.append(this.authorizations);
      org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
     }
     first = false;
     if (isSetScanId()) {
@@ -1488,7 +1563,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 7: // TYPE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = ScanType.findByValue(iprot.readI32());
              struct.type = org.apache.accumulo.core.tabletserver.thrift.ScanType.findByValue(iprot.readI32());
               struct.setTypeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1496,7 +1571,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 8: // STATE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = ScanState.findByValue(iprot.readI32());
              struct.state = org.apache.accumulo.core.tabletserver.thrift.ScanState.findByValue(iprot.readI32());
               struct.setStateIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1516,12 +1591,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                 struct.columns = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TColumn&gt;(_list8.size);
                for (int _i9 = 0; _i9 &lt; _list8.size; ++_i9)
                org.apache.accumulo.core.data.thrift.TColumn _elem9;
                for (int _i10 = 0; _i10 &lt; _list8.size; ++_i10)
                 {
                  org.apache.accumulo.core.data.thrift.TColumn _elem10;
                  _elem10 = new org.apache.accumulo.core.data.thrift.TColumn();
                  _elem10.read(iprot);
                  struct.columns.add(_elem10);
                  _elem9 = new org.apache.accumulo.core.data.thrift.TColumn();
                  _elem9.read(iprot);
                  struct.columns.add(_elem9);
                 }
                 iprot.readListEnd();
               }
@@ -1535,12 +1610,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list11 = iprot.readListBegin();
                 struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list11.size);
                for (int _i12 = 0; _i12 &lt; _list11.size; ++_i12)
                org.apache.accumulo.core.data.thrift.IterInfo _elem12;
                for (int _i13 = 0; _i13 &lt; _list11.size; ++_i13)
                 {
                  org.apache.accumulo.core.data.thrift.IterInfo _elem13;
                  _elem13 = new org.apache.accumulo.core.data.thrift.IterInfo();
                  _elem13.read(iprot);
                  struct.ssiList.add(_elem13);
                  _elem12 = new org.apache.accumulo.core.data.thrift.IterInfo();
                  _elem12.read(iprot);
                  struct.ssiList.add(_elem12);
                 }
                 iprot.readListEnd();
               }
@@ -1554,25 +1629,25 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map14 = iprot.readMapBegin();
                 struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map14.size);
                for (int _i15 = 0; _i15 &lt; _map14.size; ++_i15)
                String _key15;
                Map&lt;String,String&gt; _val16;
                for (int _i17 = 0; _i17 &lt; _map14.size; ++_i17)
                 {
                  String _key16;
                  Map&lt;String,String&gt; _val17;
                  _key16 = iprot.readString();
                  _key15 = iprot.readString();
                   {
                     org.apache.thrift.protocol.TMap _map18 = iprot.readMapBegin();
                    _val17 = new HashMap&lt;String,String&gt;(2*_map18.size);
                    for (int _i19 = 0; _i19 &lt; _map18.size; ++_i19)
                    _val16 = new HashMap&lt;String,String&gt;(2*_map18.size);
                    String _key19;
                    String _val20;
                    for (int _i21 = 0; _i21 &lt; _map18.size; ++_i21)
                     {
                      String _key20;
                      String _val21;
                      _key20 = iprot.readString();
                      _val21 = iprot.readString();
                      _val17.put(_key20, _val21);
                      _key19 = iprot.readString();
                      _val20 = iprot.readString();
                      _val16.put(_key19, _val20);
                     }
                     iprot.readMapEnd();
                   }
                  struct.ssio.put(_key16, _val17);
                  struct.ssio.put(_key15, _val16);
                 }
                 iprot.readMapEnd();
               }
@@ -1586,11 +1661,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list22 = iprot.readListBegin();
                 struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list22.size);
                for (int _i23 = 0; _i23 &lt; _list22.size; ++_i23)
                ByteBuffer _elem23;
                for (int _i24 = 0; _i24 &lt; _list22.size; ++_i24)
                 {
                  ByteBuffer _elem24;
                  _elem24 = iprot.readBinary();
                  struct.authorizations.add(_elem24);
                  _elem23 = iprot.readBinary();
                  struct.authorizations.add(_elem23);
                 }
                 iprot.readListEnd();
               }
@@ -1895,11 +1970,11 @@ import org.slf4j.LoggerFactory;
         struct.setIdleTimeIsSet(true);
       }
       if (incoming.get(5)) {
        struct.type = ScanType.findByValue(iprot.readI32());
        struct.type = org.apache.accumulo.core.tabletserver.thrift.ScanType.findByValue(iprot.readI32());
         struct.setTypeIsSet(true);
       }
       if (incoming.get(6)) {
        struct.state = ScanState.findByValue(iprot.readI32());
        struct.state = org.apache.accumulo.core.tabletserver.thrift.ScanState.findByValue(iprot.readI32());
         struct.setStateIsSet(true);
       }
       if (incoming.get(7)) {
@@ -1911,12 +1986,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list35 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.columns = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TColumn&gt;(_list35.size);
          for (int _i36 = 0; _i36 &lt; _list35.size; ++_i36)
          org.apache.accumulo.core.data.thrift.TColumn _elem36;
          for (int _i37 = 0; _i37 &lt; _list35.size; ++_i37)
           {
            org.apache.accumulo.core.data.thrift.TColumn _elem37;
            _elem37 = new org.apache.accumulo.core.data.thrift.TColumn();
            _elem37.read(iprot);
            struct.columns.add(_elem37);
            _elem36 = new org.apache.accumulo.core.data.thrift.TColumn();
            _elem36.read(iprot);
            struct.columns.add(_elem36);
           }
         }
         struct.setColumnsIsSet(true);
@@ -1925,12 +2000,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list38 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list38.size);
          for (int _i39 = 0; _i39 &lt; _list38.size; ++_i39)
          org.apache.accumulo.core.data.thrift.IterInfo _elem39;
          for (int _i40 = 0; _i40 &lt; _list38.size; ++_i40)
           {
            org.apache.accumulo.core.data.thrift.IterInfo _elem40;
            _elem40 = new org.apache.accumulo.core.data.thrift.IterInfo();
            _elem40.read(iprot);
            struct.ssiList.add(_elem40);
            _elem39 = new org.apache.accumulo.core.data.thrift.IterInfo();
            _elem39.read(iprot);
            struct.ssiList.add(_elem39);
           }
         }
         struct.setSsiListIsSet(true);
@@ -1939,24 +2014,24 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map41 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
           struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map41.size);
          for (int _i42 = 0; _i42 &lt; _map41.size; ++_i42)
          String _key42;
          Map&lt;String,String&gt; _val43;
          for (int _i44 = 0; _i44 &lt; _map41.size; ++_i44)
           {
            String _key43;
            Map&lt;String,String&gt; _val44;
            _key43 = iprot.readString();
            _key42 = iprot.readString();
             {
               org.apache.thrift.protocol.TMap _map45 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _val44 = new HashMap&lt;String,String&gt;(2*_map45.size);
              for (int _i46 = 0; _i46 &lt; _map45.size; ++_i46)
              _val43 = new HashMap&lt;String,String&gt;(2*_map45.size);
              String _key46;
              String _val47;
              for (int _i48 = 0; _i48 &lt; _map45.size; ++_i48)
               {
                String _key47;
                String _val48;
                _key47 = iprot.readString();
                _val48 = iprot.readString();
                _val44.put(_key47, _val48);
                _key46 = iprot.readString();
                _val47 = iprot.readString();
                _val43.put(_key46, _val47);
               }
             }
            struct.ssio.put(_key43, _val44);
            struct.ssio.put(_key42, _val43);
           }
         }
         struct.setSsioIsSet(true);
@@ -1965,11 +2040,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list49 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list49.size);
          for (int _i50 = 0; _i50 &lt; _list49.size; ++_i50)
          ByteBuffer _elem50;
          for (int _i51 = 0; _i51 &lt; _list49.size; ++_i51)
           {
            ByteBuffer _elem51;
            _elem51 = iprot.readBinary();
            struct.authorizations.add(_elem51);
            _elem50 = iprot.readBinary();
            struct.authorizations.add(_elem50);
           }
         }
         struct.setAuthorizationsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionReason.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionReason.java
index 591dffdfe..387908bf4 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionReason.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionReason.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionType.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionType.java
index f2f2cd647..9252e3d26 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionType.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/CompactionType.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ConstraintViolationException.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ConstraintViolationException.java
index 7a9415949..37ebe4fb9 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ConstraintViolationException.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ConstraintViolationException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ConstraintViolationException extends TException implements org.apache.thrift.TBase&lt;ConstraintViolationException, ConstraintViolationException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ConstraintViolationException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ConstraintViolationException extends TException implements org.apache.thrift.TBase&lt;ConstraintViolationException, ConstraintViolationException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ConstraintViolationException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ConstraintViolationException");
 
   private static final org.apache.thrift.protocol.TField VIOLATION_SUMMARIES_FIELD_DESC = new org.apache.thrift.protocol.TField("violationSummaries", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -263,7 +266,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_violationSummaries = true &amp;&amp; (isSetViolationSummaries());
    list.add(present_violationSummaries);
    if (present_violationSummaries)
      list.add(violationSummaries);

    return list.hashCode();
   }
 
   @Override
@@ -359,12 +369,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                 struct.violationSummaries = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TConstraintViolationSummary&gt;(_list0.size);
                for (int _i1 = 0; _i1 &lt; _list0.size; ++_i1)
                org.apache.accumulo.core.data.thrift.TConstraintViolationSummary _elem1;
                for (int _i2 = 0; _i2 &lt; _list0.size; ++_i2)
                 {
                  org.apache.accumulo.core.data.thrift.TConstraintViolationSummary _elem2;
                  _elem2 = new org.apache.accumulo.core.data.thrift.TConstraintViolationSummary();
                  _elem2.read(iprot);
                  struct.violationSummaries.add(_elem2);
                  _elem1 = new org.apache.accumulo.core.data.thrift.TConstraintViolationSummary();
                  _elem1.read(iprot);
                  struct.violationSummaries.add(_elem1);
                 }
                 iprot.readListEnd();
               }
@@ -441,12 +451,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.violationSummaries = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TConstraintViolationSummary&gt;(_list5.size);
          for (int _i6 = 0; _i6 &lt; _list5.size; ++_i6)
          org.apache.accumulo.core.data.thrift.TConstraintViolationSummary _elem6;
          for (int _i7 = 0; _i7 &lt; _list5.size; ++_i7)
           {
            org.apache.accumulo.core.data.thrift.TConstraintViolationSummary _elem7;
            _elem7 = new org.apache.accumulo.core.data.thrift.TConstraintViolationSummary();
            _elem7.read(iprot);
            struct.violationSummaries.add(_elem7);
            _elem6 = new org.apache.accumulo.core.data.thrift.TConstraintViolationSummary();
            _elem6.read(iprot);
            struct.violationSummaries.add(_elem6);
           }
         }
         struct.setViolationSummariesIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/IteratorConfig.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/IteratorConfig.java
index 9db0608c4..2ad12a9d9 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/IteratorConfig.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/IteratorConfig.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class IteratorConfig implements org.apache.thrift.TBase&lt;IteratorConfig, IteratorConfig._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;IteratorConfig&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class IteratorConfig implements org.apache.thrift.TBase&lt;IteratorConfig, IteratorConfig._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;IteratorConfig&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IteratorConfig");
 
   private static final org.apache.thrift.protocol.TField ITERATORS_FIELD_DESC = new org.apache.thrift.protocol.TField("iterators", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -263,7 +266,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_iterators = true &amp;&amp; (isSetIterators());
    list.add(present_iterators);
    if (present_iterators)
      list.add(iterators);

    return list.hashCode();
   }
 
   @Override
@@ -359,12 +369,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list98 = iprot.readListBegin();
                 struct.iterators = new ArrayList&lt;TIteratorSetting&gt;(_list98.size);
                for (int _i99 = 0; _i99 &lt; _list98.size; ++_i99)
                TIteratorSetting _elem99;
                for (int _i100 = 0; _i100 &lt; _list98.size; ++_i100)
                 {
                  TIteratorSetting _elem100;
                  _elem100 = new TIteratorSetting();
                  _elem100.read(iprot);
                  struct.iterators.add(_elem100);
                  _elem99 = new TIteratorSetting();
                  _elem99.read(iprot);
                  struct.iterators.add(_elem99);
                 }
                 iprot.readListEnd();
               }
@@ -441,12 +451,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list103 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.iterators = new ArrayList&lt;TIteratorSetting&gt;(_list103.size);
          for (int _i104 = 0; _i104 &lt; _list103.size; ++_i104)
          TIteratorSetting _elem104;
          for (int _i105 = 0; _i105 &lt; _list103.size; ++_i105)
           {
            TIteratorSetting _elem105;
            _elem105 = new TIteratorSetting();
            _elem105.read(iprot);
            struct.iterators.add(_elem105);
            _elem104 = new TIteratorSetting();
            _elem104.read(iprot);
            struct.iterators.add(_elem104);
           }
         }
         struct.setIteratorsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NoSuchScanIDException.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NoSuchScanIDException.java
index c0dc02bdd..348ccf3fb 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NoSuchScanIDException.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NoSuchScanIDException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class NoSuchScanIDException extends TException implements org.apache.thrift.TBase&lt;NoSuchScanIDException, NoSuchScanIDException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;NoSuchScanIDException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class NoSuchScanIDException extends TException implements org.apache.thrift.TBase&lt;NoSuchScanIDException, NoSuchScanIDException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;NoSuchScanIDException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("NoSuchScanIDException");
 
 
@@ -178,7 +181,9 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NotServingTabletException.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NotServingTabletException.java
index ef87937cf..b3b6848dd 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NotServingTabletException.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NotServingTabletException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class NotServingTabletException extends TException implements org.apache.thrift.TBase&lt;NotServingTabletException, NotServingTabletException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;NotServingTabletException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class NotServingTabletException extends TException implements org.apache.thrift.TBase&lt;NotServingTabletException, NotServingTabletException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;NotServingTabletException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("NotServingTabletException");
 
   private static final org.apache.thrift.protocol.TField EXTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("extent", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanState.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanState.java
index 5bb685794..b1178906d 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanState.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanState.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanType.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanType.java
index 34d7ac5a9..25d741d25 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanType.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanType.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TDurability.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TDurability.java
index 629b7705a..b8c7cff64 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TDurability.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TDurability.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TIteratorSetting.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TIteratorSetting.java
index 8eddaba40..31770c3a1 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TIteratorSetting.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TIteratorSetting.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TIteratorSetting implements org.apache.thrift.TBase&lt;TIteratorSetting, TIteratorSetting._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TIteratorSetting&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TIteratorSetting implements org.apache.thrift.TBase&lt;TIteratorSetting, TIteratorSetting._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TIteratorSetting&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TIteratorSetting");
 
   private static final org.apache.thrift.protocol.TField PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("priority", org.apache.thrift.protocol.TType.I32, (short)1);
@@ -348,7 +351,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case PRIORITY:
      return Integer.valueOf(getPriority());
      return getPriority();
 
     case NAME:
       return getName();
@@ -436,7 +439,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_priority = true;
    list.add(present_priority);
    if (present_priority)
      list.add(priority);

    boolean present_name = true &amp;&amp; (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_iteratorClass = true &amp;&amp; (isSetIteratorClass());
    list.add(present_iteratorClass);
    if (present_iteratorClass)
      list.add(iteratorClass);

    boolean present_properties = true &amp;&amp; (isSetProperties());
    list.add(present_properties);
    if (present_properties)
      list.add(properties);

    return list.hashCode();
   }
 
   @Override
@@ -608,13 +633,13 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map88 = iprot.readMapBegin();
                 struct.properties = new HashMap&lt;String,String&gt;(2*_map88.size);
                for (int _i89 = 0; _i89 &lt; _map88.size; ++_i89)
                String _key89;
                String _val90;
                for (int _i91 = 0; _i91 &lt; _map88.size; ++_i91)
                 {
                  String _key90;
                  String _val91;
                  _key90 = iprot.readString();
                  _val91 = iprot.readString();
                  struct.properties.put(_key90, _val91);
                  _key89 = iprot.readString();
                  _val90 = iprot.readString();
                  struct.properties.put(_key89, _val90);
                 }
                 iprot.readMapEnd();
               }
@@ -736,13 +761,13 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map94 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.properties = new HashMap&lt;String,String&gt;(2*_map94.size);
          for (int _i95 = 0; _i95 &lt; _map94.size; ++_i95)
          String _key95;
          String _val96;
          for (int _i97 = 0; _i97 &lt; _map94.size; ++_i97)
           {
            String _key96;
            String _val97;
            _key96 = iprot.readString();
            _val97 = iprot.readString();
            struct.properties.put(_key96, _val97);
            _key95 = iprot.readString();
            _val96 = iprot.readString();
            struct.properties.put(_key95, _val96);
           }
         }
         struct.setPropertiesIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSampleNotPresentException.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSampleNotPresentException.java
index c4ef7f361..8e5f43a49 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSampleNotPresentException.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSampleNotPresentException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TSampleNotPresentException extends TException implements org.apache.thrift.TBase&lt;TSampleNotPresentException, TSampleNotPresentException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TSampleNotPresentException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TSampleNotPresentException extends TException implements org.apache.thrift.TBase&lt;TSampleNotPresentException, TSampleNotPresentException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TSampleNotPresentException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TSampleNotPresentException");
 
   private static final org.apache.thrift.protocol.TField EXTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("extent", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSamplerConfiguration.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSamplerConfiguration.java
index 2d2b2d525..2c17b9e62 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSamplerConfiguration.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TSamplerConfiguration.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TSamplerConfiguration implements org.apache.thrift.TBase&lt;TSamplerConfiguration, TSamplerConfiguration._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TSamplerConfiguration&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TSamplerConfiguration implements org.apache.thrift.TBase&lt;TSamplerConfiguration, TSamplerConfiguration._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TSamplerConfiguration&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TSamplerConfiguration");
 
   private static final org.apache.thrift.protocol.TField CLASS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("className", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -316,7 +319,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_className = true &amp;&amp; (isSetClassName());
    list.add(present_className);
    if (present_className)
      list.add(className);

    boolean present_options = true &amp;&amp; (isSetOptions());
    list.add(present_options);
    if (present_options)
      list.add(options);

    return list.hashCode();
   }
 
   @Override
@@ -438,13 +453,13 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map106 = iprot.readMapBegin();
                 struct.options = new HashMap&lt;String,String&gt;(2*_map106.size);
                for (int _i107 = 0; _i107 &lt; _map106.size; ++_i107)
                String _key107;
                String _val108;
                for (int _i109 = 0; _i109 &lt; _map106.size; ++_i109)
                 {
                  String _key108;
                  String _val109;
                  _key108 = iprot.readString();
                  _val109 = iprot.readString();
                  struct.options.put(_key108, _val109);
                  _key107 = iprot.readString();
                  _val108 = iprot.readString();
                  struct.options.put(_key107, _val108);
                 }
                 iprot.readMapEnd();
               }
@@ -538,13 +553,13 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map112 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.options = new HashMap&lt;String,String&gt;(2*_map112.size);
          for (int _i113 = 0; _i113 &lt; _map112.size; ++_i113)
          String _key113;
          String _val114;
          for (int _i115 = 0; _i115 &lt; _map112.size; ++_i115)
           {
            String _key114;
            String _val115;
            _key114 = iprot.readString();
            _val115 = iprot.readString();
            struct.options.put(_key114, _val115);
            _key113 = iprot.readString();
            _val114 = iprot.readString();
            struct.options.put(_key113, _val114);
           }
         }
         struct.setOptionsIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletClientService.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletClientService.java
index dc964b908..3d4b0c898 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletClientService.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletClientService.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TabletClientService {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TabletClientService {
 
   public interface Iface extends org.apache.accumulo.core.client.impl.thrift.ClientService.Iface {
 
@@ -297,7 +300,7 @@ import org.slf4j.LoggerFactory;
       closeScan_args args = new closeScan_args();
       args.setTinfo(tinfo);
       args.setScanID(scanID);
      sendBase("closeScan", args);
      sendBaseOneway("closeScan", args);
     }
 
     public org.apache.accumulo.core.data.thrift.InitialMultiScan startMultiScan(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, Map&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,List&lt;org.apache.accumulo.core.data.thrift.TRange&gt;&gt; batch, List&lt;org.apache.accumulo.core.data.thrift.TColumn&gt; columns, List&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt; ssiList, Map&lt;String,Map&lt;String,String&gt;&gt; ssio, List&lt;ByteBuffer&gt; authorizations, boolean waitForWrites, TSamplerConfiguration samplerConfig, long batchTimeOut, String classLoaderContext) throws org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException, TSampleNotPresentException, org.apache.thrift.TException
@@ -433,7 +436,7 @@ import org.slf4j.LoggerFactory;
       args.setUpdateID(updateID);
       args.setKeyExtent(keyExtent);
       args.setMutations(mutations);
      sendBase("applyUpdates", args);
      sendBaseOneway("applyUpdates", args);
     }
 
     public org.apache.accumulo.core.data.thrift.UpdateErrors closeUpdate(org.apache.accumulo.core.trace.thrift.TInfo tinfo, long updateID) throws NoSuchScanIDException, org.apache.thrift.TException
@@ -587,7 +590,7 @@ import org.slf4j.LoggerFactory;
       closeConditionalUpdate_args args = new closeConditionalUpdate_args();
       args.setTinfo(tinfo);
       args.setSessID(sessID);
      sendBase("closeConditionalUpdate", args);
      sendBaseOneway("closeConditionalUpdate", args);
     }
 
     public List&lt;org.apache.accumulo.core.data.thrift.TKeyExtent&gt; bulkImport(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, long tid, Map&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,Map&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt;&gt; files, boolean setTime) throws org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException, org.apache.thrift.TException
@@ -661,7 +664,7 @@ import org.slf4j.LoggerFactory;
       args.setCredentials(credentials);
       args.setLock(lock);
       args.setExtent(extent);
      sendBase("loadTablet", args);
      sendBaseOneway("loadTablet", args);
     }
 
     public void unloadTablet(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, String lock, org.apache.accumulo.core.data.thrift.TKeyExtent extent, boolean save) throws org.apache.thrift.TException
@@ -677,7 +680,7 @@ import org.slf4j.LoggerFactory;
       args.setLock(lock);
       args.setExtent(extent);
       args.setSave(save);
      sendBase("unloadTablet", args);
      sendBaseOneway("unloadTablet", args);
     }
 
     public void flush(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, String lock, String tableId, ByteBuffer startRow, ByteBuffer endRow) throws org.apache.thrift.TException
@@ -694,7 +697,7 @@ import org.slf4j.LoggerFactory;
       args.setTableId(tableId);
       args.setStartRow(startRow);
       args.setEndRow(endRow);
      sendBase("flush", args);
      sendBaseOneway("flush", args);
     }
 
     public void flushTablet(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, String lock, org.apache.accumulo.core.data.thrift.TKeyExtent extent) throws org.apache.thrift.TException
@@ -709,7 +712,7 @@ import org.slf4j.LoggerFactory;
       args.setCredentials(credentials);
       args.setLock(lock);
       args.setExtent(extent);
      sendBase("flushTablet", args);
      sendBaseOneway("flushTablet", args);
     }
 
     public void chop(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, String lock, org.apache.accumulo.core.data.thrift.TKeyExtent extent) throws org.apache.thrift.TException
@@ -724,7 +727,7 @@ import org.slf4j.LoggerFactory;
       args.setCredentials(credentials);
       args.setLock(lock);
       args.setExtent(extent);
      sendBase("chop", args);
      sendBaseOneway("chop", args);
     }
 
     public void compact(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials, String lock, String tableId, ByteBuffer startRow, ByteBuffer endRow) throws org.apache.thrift.TException
@@ -741,7 +744,7 @@ import org.slf4j.LoggerFactory;
       args.setTableId(tableId);
       args.setStartRow(startRow);
       args.setEndRow(endRow);
      sendBase("compact", args);
      sendBaseOneway("compact", args);
     }
 
     public org.apache.accumulo.core.master.thrift.TabletServerStatus getTabletServerStatus(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials) throws org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException, org.apache.thrift.TException
@@ -862,7 +865,7 @@ import org.slf4j.LoggerFactory;
       args.setTinfo(tinfo);
       args.setCredentials(credentials);
       args.setLock(lock);
      sendBase("fastHalt", args);
      sendBaseOneway("fastHalt", args);
     }
 
     public List&lt;ActiveScan&gt; getActiveScans(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials) throws org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException, org.apache.thrift.TException
@@ -930,7 +933,7 @@ import org.slf4j.LoggerFactory;
       args.setTinfo(tinfo);
       args.setCredentials(credentials);
       args.setFilenames(filenames);
      sendBase("removeLogs", args);
      sendBaseOneway("removeLogs", args);
     }
 
     public List&lt;String&gt; getActiveLogs(org.apache.accumulo.core.trace.thrift.TInfo tinfo, org.apache.accumulo.core.security.thrift.TCredentials credentials) throws org.apache.thrift.TException
@@ -1101,7 +1104,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("closeScan", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("closeScan", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         closeScan_args args = new closeScan_args();
         args.setTinfo(tinfo);
         args.setScanID(scanID);
@@ -1309,7 +1312,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("applyUpdates", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("applyUpdates", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         applyUpdates_args args = new applyUpdates_args();
         args.setTinfo(tinfo);
         args.setUpdateID(updateID);
@@ -1547,7 +1550,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("closeConditionalUpdate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("closeConditionalUpdate", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         closeConditionalUpdate_args args = new closeConditionalUpdate_args();
         args.setTinfo(tinfo);
         args.setSessID(sessID);
@@ -1670,7 +1673,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("loadTablet", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("loadTablet", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         loadTablet_args args = new loadTablet_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -1712,7 +1715,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("unloadTablet", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("unloadTablet", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         unloadTablet_args args = new unloadTablet_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -1757,7 +1760,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("flush", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("flush", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         flush_args args = new flush_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -1799,7 +1802,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("flushTablet", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("flushTablet", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         flushTablet_args args = new flushTablet_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -1839,7 +1842,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("chop", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("chop", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         chop_args args = new chop_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -1883,7 +1886,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("compact", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("compact", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         compact_args args = new compact_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -2069,7 +2072,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("fastHalt", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("fastHalt", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         fastHalt_args args = new fastHalt_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -2176,7 +2179,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("removeLogs", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("removeLogs", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         removeLogs_args args = new removeLogs_args();
         args.setTinfo(tinfo);
         args.setCredentials(credentials);
@@ -5396,7 +5399,7 @@ import org.slf4j.LoggerFactory;
         return getColumns();
 
       case BATCH_SIZE:
        return Integer.valueOf(getBatchSize());
        return getBatchSize();
 
       case SSI_LIST:
         return getSsiList();
@@ -5408,19 +5411,19 @@ import org.slf4j.LoggerFactory;
         return getAuthorizations();
 
       case WAIT_FOR_WRITES:
        return Boolean.valueOf(isWaitForWrites());
        return isWaitForWrites();
 
       case ISOLATED:
        return Boolean.valueOf(isIsolated());
        return isIsolated();
 
       case READAHEAD_THRESHOLD:
        return Long.valueOf(getReadaheadThreshold());
        return getReadaheadThreshold();
 
       case SAMPLER_CONFIG:
         return getSamplerConfig();
 
       case BATCH_TIME_OUT:
        return Long.valueOf(getBatchTimeOut());
        return getBatchTimeOut();
 
       case CLASS_LOADER_CONTEXT:
         return getClassLoaderContext();
@@ -5623,7 +5626,84 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_extent = true &amp;&amp; (isSetExtent());
      list.add(present_extent);
      if (present_extent)
        list.add(extent);

      boolean present_range = true &amp;&amp; (isSetRange());
      list.add(present_range);
      if (present_range)
        list.add(range);

      boolean present_columns = true &amp;&amp; (isSetColumns());
      list.add(present_columns);
      if (present_columns)
        list.add(columns);

      boolean present_batchSize = true;
      list.add(present_batchSize);
      if (present_batchSize)
        list.add(batchSize);

      boolean present_ssiList = true &amp;&amp; (isSetSsiList());
      list.add(present_ssiList);
      if (present_ssiList)
        list.add(ssiList);

      boolean present_ssio = true &amp;&amp; (isSetSsio());
      list.add(present_ssio);
      if (present_ssio)
        list.add(ssio);

      boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
      list.add(present_authorizations);
      if (present_authorizations)
        list.add(authorizations);

      boolean present_waitForWrites = true;
      list.add(present_waitForWrites);
      if (present_waitForWrites)
        list.add(waitForWrites);

      boolean present_isolated = true;
      list.add(present_isolated);
      if (present_isolated)
        list.add(isolated);

      boolean present_readaheadThreshold = true;
      list.add(present_readaheadThreshold);
      if (present_readaheadThreshold)
        list.add(readaheadThreshold);

      boolean present_samplerConfig = true &amp;&amp; (isSetSamplerConfig());
      list.add(present_samplerConfig);
      if (present_samplerConfig)
        list.add(samplerConfig);

      boolean present_batchTimeOut = true;
      list.add(present_batchTimeOut);
      if (present_batchTimeOut)
        list.add(batchTimeOut);

      boolean present_classLoaderContext = true &amp;&amp; (isSetClassLoaderContext());
      list.add(present_classLoaderContext);
      if (present_classLoaderContext)
        list.add(classLoaderContext);

      return list.hashCode();
     }
 
     @Override
@@ -5868,7 +5948,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -6004,12 +6084,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list116 = iprot.readListBegin();
                   struct.columns = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TColumn&gt;(_list116.size);
                  for (int _i117 = 0; _i117 &lt; _list116.size; ++_i117)
                  org.apache.accumulo.core.data.thrift.TColumn _elem117;
                  for (int _i118 = 0; _i118 &lt; _list116.size; ++_i118)
                   {
                    org.apache.accumulo.core.data.thrift.TColumn _elem118;
                    _elem118 = new org.apache.accumulo.core.data.thrift.TColumn();
                    _elem118.read(iprot);
                    struct.columns.add(_elem118);
                    _elem117 = new org.apache.accumulo.core.data.thrift.TColumn();
                    _elem117.read(iprot);
                    struct.columns.add(_elem117);
                   }
                   iprot.readListEnd();
                 }
@@ -6031,12 +6111,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list119 = iprot.readListBegin();
                   struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list119.size);
                  for (int _i120 = 0; _i120 &lt; _list119.size; ++_i120)
                  org.apache.accumulo.core.data.thrift.IterInfo _elem120;
                  for (int _i121 = 0; _i121 &lt; _list119.size; ++_i121)
                   {
                    org.apache.accumulo.core.data.thrift.IterInfo _elem121;
                    _elem121 = new org.apache.accumulo.core.data.thrift.IterInfo();
                    _elem121.read(iprot);
                    struct.ssiList.add(_elem121);
                    _elem120 = new org.apache.accumulo.core.data.thrift.IterInfo();
                    _elem120.read(iprot);
                    struct.ssiList.add(_elem120);
                   }
                   iprot.readListEnd();
                 }
@@ -6050,25 +6130,25 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map122 = iprot.readMapBegin();
                   struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map122.size);
                  for (int _i123 = 0; _i123 &lt; _map122.size; ++_i123)
                  String _key123;
                  Map&lt;String,String&gt; _val124;
                  for (int _i125 = 0; _i125 &lt; _map122.size; ++_i125)
                   {
                    String _key124;
                    Map&lt;String,String&gt; _val125;
                    _key124 = iprot.readString();
                    _key123 = iprot.readString();
                     {
                       org.apache.thrift.protocol.TMap _map126 = iprot.readMapBegin();
                      _val125 = new HashMap&lt;String,String&gt;(2*_map126.size);
                      for (int _i127 = 0; _i127 &lt; _map126.size; ++_i127)
                      _val124 = new HashMap&lt;String,String&gt;(2*_map126.size);
                      String _key127;
                      String _val128;
                      for (int _i129 = 0; _i129 &lt; _map126.size; ++_i129)
                       {
                        String _key128;
                        String _val129;
                        _key128 = iprot.readString();
                        _val129 = iprot.readString();
                        _val125.put(_key128, _val129);
                        _key127 = iprot.readString();
                        _val128 = iprot.readString();
                        _val124.put(_key127, _val128);
                       }
                       iprot.readMapEnd();
                     }
                    struct.ssio.put(_key124, _val125);
                    struct.ssio.put(_key123, _val124);
                   }
                   iprot.readMapEnd();
                 }
@@ -6082,11 +6162,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list130 = iprot.readListBegin();
                   struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list130.size);
                  for (int _i131 = 0; _i131 &lt; _list130.size; ++_i131)
                  ByteBuffer _elem131;
                  for (int _i132 = 0; _i132 &lt; _list130.size; ++_i132)
                   {
                    ByteBuffer _elem132;
                    _elem132 = iprot.readBinary();
                    struct.authorizations.add(_elem132);
                    _elem131 = iprot.readBinary();
                    struct.authorizations.add(_elem131);
                   }
                   iprot.readListEnd();
                 }
@@ -6432,12 +6512,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list143 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.columns = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TColumn&gt;(_list143.size);
            for (int _i144 = 0; _i144 &lt; _list143.size; ++_i144)
            org.apache.accumulo.core.data.thrift.TColumn _elem144;
            for (int _i145 = 0; _i145 &lt; _list143.size; ++_i145)
             {
              org.apache.accumulo.core.data.thrift.TColumn _elem145;
              _elem145 = new org.apache.accumulo.core.data.thrift.TColumn();
              _elem145.read(iprot);
              struct.columns.add(_elem145);
              _elem144 = new org.apache.accumulo.core.data.thrift.TColumn();
              _elem144.read(iprot);
              struct.columns.add(_elem144);
             }
           }
           struct.setColumnsIsSet(true);
@@ -6450,12 +6530,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list146 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list146.size);
            for (int _i147 = 0; _i147 &lt; _list146.size; ++_i147)
            org.apache.accumulo.core.data.thrift.IterInfo _elem147;
            for (int _i148 = 0; _i148 &lt; _list146.size; ++_i148)
             {
              org.apache.accumulo.core.data.thrift.IterInfo _elem148;
              _elem148 = new org.apache.accumulo.core.data.thrift.IterInfo();
              _elem148.read(iprot);
              struct.ssiList.add(_elem148);
              _elem147 = new org.apache.accumulo.core.data.thrift.IterInfo();
              _elem147.read(iprot);
              struct.ssiList.add(_elem147);
             }
           }
           struct.setSsiListIsSet(true);
@@ -6464,24 +6544,24 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map149 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
             struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map149.size);
            for (int _i150 = 0; _i150 &lt; _map149.size; ++_i150)
            String _key150;
            Map&lt;String,String&gt; _val151;
            for (int _i152 = 0; _i152 &lt; _map149.size; ++_i152)
             {
              String _key151;
              Map&lt;String,String&gt; _val152;
              _key151 = iprot.readString();
              _key150 = iprot.readString();
               {
                 org.apache.thrift.protocol.TMap _map153 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
                _val152 = new HashMap&lt;String,String&gt;(2*_map153.size);
                for (int _i154 = 0; _i154 &lt; _map153.size; ++_i154)
                _val151 = new HashMap&lt;String,String&gt;(2*_map153.size);
                String _key154;
                String _val155;
                for (int _i156 = 0; _i156 &lt; _map153.size; ++_i156)
                 {
                  String _key155;
                  String _val156;
                  _key155 = iprot.readString();
                  _val156 = iprot.readString();
                  _val152.put(_key155, _val156);
                  _key154 = iprot.readString();
                  _val155 = iprot.readString();
                  _val151.put(_key154, _val155);
                 }
               }
              struct.ssio.put(_key151, _val152);
              struct.ssio.put(_key150, _val151);
             }
           }
           struct.setSsioIsSet(true);
@@ -6490,11 +6570,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list157 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list157.size);
            for (int _i158 = 0; _i158 &lt; _list157.size; ++_i158)
            ByteBuffer _elem158;
            for (int _i159 = 0; _i159 &lt; _list157.size; ++_i159)
             {
              ByteBuffer _elem159;
              _elem159 = iprot.readBinary();
              struct.authorizations.add(_elem159);
              _elem158 = iprot.readBinary();
              struct.authorizations.add(_elem158);
             }
           }
           struct.setAuthorizationsIsSet(true);
@@ -6960,7 +7040,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_nste = true &amp;&amp; (isSetNste());
      list.add(present_nste);
      if (present_nste)
        list.add(nste);

      boolean present_tmfe = true &amp;&amp; (isSetTmfe());
      list.add(present_tmfe);
      if (present_tmfe)
        list.add(tmfe);

      boolean present_tsnpe = true &amp;&amp; (isSetTsnpe());
      list.add(present_tsnpe);
      if (present_tsnpe)
        list.add(tsnpe);

      return list.hashCode();
     }
 
     @Override
@@ -7495,7 +7602,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case SCAN_ID:
        return Long.valueOf(getScanID());
        return getScanID();
 
       }
       throw new IllegalStateException();
@@ -7552,7 +7659,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_scanID = true;
      list.add(present_scanID);
      if (present_scanID)
        list.add(scanID);

      return list.hashCode();
     }
 
     @Override
@@ -8184,7 +8303,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_nssi = true &amp;&amp; (isSetNssi());
      list.add(present_nssi);
      if (present_nssi)
        list.add(nssi);

      boolean present_nste = true &amp;&amp; (isSetNste());
      list.add(present_nste);
      if (present_nste)
        list.add(nste);

      boolean present_tmfe = true &amp;&amp; (isSetTmfe());
      list.add(present_tmfe);
      if (present_tmfe)
        list.add(tmfe);

      boolean present_tsnpe = true &amp;&amp; (isSetTsnpe());
      list.add(present_tsnpe);
      if (present_tsnpe)
        list.add(tsnpe);

      return list.hashCode();
     }
 
     @Override
@@ -8719,7 +8865,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case SCAN_ID:
        return Long.valueOf(getScanID());
        return getScanID();
 
       }
       throw new IllegalStateException();
@@ -8776,7 +8922,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_scanID = true;
      list.add(present_scanID);
      if (present_scanID)
        list.add(scanID);

      return list.hashCode();
     }
 
     @Override
@@ -9694,13 +9852,13 @@ import org.slf4j.LoggerFactory;
         return getAuthorizations();
 
       case WAIT_FOR_WRITES:
        return Boolean.valueOf(isWaitForWrites());
        return isWaitForWrites();
 
       case SAMPLER_CONFIG:
         return getSamplerConfig();
 
       case BATCH_TIME_OUT:
        return Long.valueOf(getBatchTimeOut());
        return getBatchTimeOut();
 
       case CLASS_LOADER_CONTEXT:
         return getClassLoaderContext();
@@ -9859,7 +10017,64 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_batch = true &amp;&amp; (isSetBatch());
      list.add(present_batch);
      if (present_batch)
        list.add(batch);

      boolean present_columns = true &amp;&amp; (isSetColumns());
      list.add(present_columns);
      if (present_columns)
        list.add(columns);

      boolean present_ssiList = true &amp;&amp; (isSetSsiList());
      list.add(present_ssiList);
      if (present_ssiList)
        list.add(ssiList);

      boolean present_ssio = true &amp;&amp; (isSetSsio());
      list.add(present_ssio);
      if (present_ssio)
        list.add(ssio);

      boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
      list.add(present_authorizations);
      if (present_authorizations)
        list.add(authorizations);

      boolean present_waitForWrites = true;
      list.add(present_waitForWrites);
      if (present_waitForWrites)
        list.add(waitForWrites);

      boolean present_samplerConfig = true &amp;&amp; (isSetSamplerConfig());
      list.add(present_samplerConfig);
      if (present_samplerConfig)
        list.add(samplerConfig);

      boolean present_batchTimeOut = true;
      list.add(present_batchTimeOut);
      if (present_batchTimeOut)
        list.add(batchTimeOut);

      boolean present_classLoaderContext = true &amp;&amp; (isSetClassLoaderContext());
      list.add(present_classLoaderContext);
      if (present_classLoaderContext)
        list.add(classLoaderContext);

      return list.hashCode();
     }
 
     @Override
@@ -10052,7 +10267,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -10156,25 +10371,25 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map160 = iprot.readMapBegin();
                   struct.batch = new HashMap&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,List&lt;org.apache.accumulo.core.data.thrift.TRange&gt;&gt;(2*_map160.size);
                  for (int _i161 = 0; _i161 &lt; _map160.size; ++_i161)
                  org.apache.accumulo.core.data.thrift.TKeyExtent _key161;
                  List&lt;org.apache.accumulo.core.data.thrift.TRange&gt; _val162;
                  for (int _i163 = 0; _i163 &lt; _map160.size; ++_i163)
                   {
                    org.apache.accumulo.core.data.thrift.TKeyExtent _key162;
                    List&lt;org.apache.accumulo.core.data.thrift.TRange&gt; _val163;
                    _key162 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _key162.read(iprot);
                    _key161 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _key161.read(iprot);
                     {
                       org.apache.thrift.protocol.TList _list164 = iprot.readListBegin();
                      _val163 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TRange&gt;(_list164.size);
                      for (int _i165 = 0; _i165 &lt; _list164.size; ++_i165)
                      _val162 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TRange&gt;(_list164.size);
                      org.apache.accumulo.core.data.thrift.TRange _elem165;
                      for (int _i166 = 0; _i166 &lt; _list164.size; ++_i166)
                       {
                        org.apache.accumulo.core.data.thrift.TRange _elem166;
                        _elem166 = new org.apache.accumulo.core.data.thrift.TRange();
                        _elem166.read(iprot);
                        _val163.add(_elem166);
                        _elem165 = new org.apache.accumulo.core.data.thrift.TRange();
                        _elem165.read(iprot);
                        _val162.add(_elem165);
                       }
                       iprot.readListEnd();
                     }
                    struct.batch.put(_key162, _val163);
                    struct.batch.put(_key161, _val162);
                   }
                   iprot.readMapEnd();
                 }
@@ -10188,12 +10403,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list167 = iprot.readListBegin();
                   struct.columns = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TColumn&gt;(_list167.size);
                  for (int _i168 = 0; _i168 &lt; _list167.size; ++_i168)
                  org.apache.accumulo.core.data.thrift.TColumn _elem168;
                  for (int _i169 = 0; _i169 &lt; _list167.size; ++_i169)
                   {
                    org.apache.accumulo.core.data.thrift.TColumn _elem169;
                    _elem169 = new org.apache.accumulo.core.data.thrift.TColumn();
                    _elem169.read(iprot);
                    struct.columns.add(_elem169);
                    _elem168 = new org.apache.accumulo.core.data.thrift.TColumn();
                    _elem168.read(iprot);
                    struct.columns.add(_elem168);
                   }
                   iprot.readListEnd();
                 }
@@ -10207,12 +10422,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list170 = iprot.readListBegin();
                   struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list170.size);
                  for (int _i171 = 0; _i171 &lt; _list170.size; ++_i171)
                  org.apache.accumulo.core.data.thrift.IterInfo _elem171;
                  for (int _i172 = 0; _i172 &lt; _list170.size; ++_i172)
                   {
                    org.apache.accumulo.core.data.thrift.IterInfo _elem172;
                    _elem172 = new org.apache.accumulo.core.data.thrift.IterInfo();
                    _elem172.read(iprot);
                    struct.ssiList.add(_elem172);
                    _elem171 = new org.apache.accumulo.core.data.thrift.IterInfo();
                    _elem171.read(iprot);
                    struct.ssiList.add(_elem171);
                   }
                   iprot.readListEnd();
                 }
@@ -10226,25 +10441,25 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map173 = iprot.readMapBegin();
                   struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map173.size);
                  for (int _i174 = 0; _i174 &lt; _map173.size; ++_i174)
                  String _key174;
                  Map&lt;String,String&gt; _val175;
                  for (int _i176 = 0; _i176 &lt; _map173.size; ++_i176)
                   {
                    String _key175;
                    Map&lt;String,String&gt; _val176;
                    _key175 = iprot.readString();
                    _key174 = iprot.readString();
                     {
                       org.apache.thrift.protocol.TMap _map177 = iprot.readMapBegin();
                      _val176 = new HashMap&lt;String,String&gt;(2*_map177.size);
                      for (int _i178 = 0; _i178 &lt; _map177.size; ++_i178)
                      _val175 = new HashMap&lt;String,String&gt;(2*_map177.size);
                      String _key178;
                      String _val179;
                      for (int _i180 = 0; _i180 &lt; _map177.size; ++_i180)
                       {
                        String _key179;
                        String _val180;
                        _key179 = iprot.readString();
                        _val180 = iprot.readString();
                        _val176.put(_key179, _val180);
                        _key178 = iprot.readString();
                        _val179 = iprot.readString();
                        _val175.put(_key178, _val179);
                       }
                       iprot.readMapEnd();
                     }
                    struct.ssio.put(_key175, _val176);
                    struct.ssio.put(_key174, _val175);
                   }
                   iprot.readMapEnd();
                 }
@@ -10258,11 +10473,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list181 = iprot.readListBegin();
                   struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list181.size);
                  for (int _i182 = 0; _i182 &lt; _list181.size; ++_i182)
                  ByteBuffer _elem182;
                  for (int _i183 = 0; _i183 &lt; _list181.size; ++_i183)
                   {
                    ByteBuffer _elem183;
                    _elem183 = iprot.readBinary();
                    struct.authorizations.add(_elem183);
                    _elem182 = iprot.readBinary();
                    struct.authorizations.add(_elem182);
                   }
                   iprot.readListEnd();
                 }
@@ -10572,24 +10787,24 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map198 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
             struct.batch = new HashMap&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,List&lt;org.apache.accumulo.core.data.thrift.TRange&gt;&gt;(2*_map198.size);
            for (int _i199 = 0; _i199 &lt; _map198.size; ++_i199)
            org.apache.accumulo.core.data.thrift.TKeyExtent _key199;
            List&lt;org.apache.accumulo.core.data.thrift.TRange&gt; _val200;
            for (int _i201 = 0; _i201 &lt; _map198.size; ++_i201)
             {
              org.apache.accumulo.core.data.thrift.TKeyExtent _key200;
              List&lt;org.apache.accumulo.core.data.thrift.TRange&gt; _val201;
              _key200 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _key200.read(iprot);
              _key199 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _key199.read(iprot);
               {
                 org.apache.thrift.protocol.TList _list202 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                _val201 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TRange&gt;(_list202.size);
                for (int _i203 = 0; _i203 &lt; _list202.size; ++_i203)
                _val200 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TRange&gt;(_list202.size);
                org.apache.accumulo.core.data.thrift.TRange _elem203;
                for (int _i204 = 0; _i204 &lt; _list202.size; ++_i204)
                 {
                  org.apache.accumulo.core.data.thrift.TRange _elem204;
                  _elem204 = new org.apache.accumulo.core.data.thrift.TRange();
                  _elem204.read(iprot);
                  _val201.add(_elem204);
                  _elem203 = new org.apache.accumulo.core.data.thrift.TRange();
                  _elem203.read(iprot);
                  _val200.add(_elem203);
                 }
               }
              struct.batch.put(_key200, _val201);
              struct.batch.put(_key199, _val200);
             }
           }
           struct.setBatchIsSet(true);
@@ -10598,12 +10813,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list205 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.columns = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TColumn&gt;(_list205.size);
            for (int _i206 = 0; _i206 &lt; _list205.size; ++_i206)
            org.apache.accumulo.core.data.thrift.TColumn _elem206;
            for (int _i207 = 0; _i207 &lt; _list205.size; ++_i207)
             {
              org.apache.accumulo.core.data.thrift.TColumn _elem207;
              _elem207 = new org.apache.accumulo.core.data.thrift.TColumn();
              _elem207.read(iprot);
              struct.columns.add(_elem207);
              _elem206 = new org.apache.accumulo.core.data.thrift.TColumn();
              _elem206.read(iprot);
              struct.columns.add(_elem206);
             }
           }
           struct.setColumnsIsSet(true);
@@ -10612,12 +10827,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list208 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.ssiList = new ArrayList&lt;org.apache.accumulo.core.data.thrift.IterInfo&gt;(_list208.size);
            for (int _i209 = 0; _i209 &lt; _list208.size; ++_i209)
            org.apache.accumulo.core.data.thrift.IterInfo _elem209;
            for (int _i210 = 0; _i210 &lt; _list208.size; ++_i210)
             {
              org.apache.accumulo.core.data.thrift.IterInfo _elem210;
              _elem210 = new org.apache.accumulo.core.data.thrift.IterInfo();
              _elem210.read(iprot);
              struct.ssiList.add(_elem210);
              _elem209 = new org.apache.accumulo.core.data.thrift.IterInfo();
              _elem209.read(iprot);
              struct.ssiList.add(_elem209);
             }
           }
           struct.setSsiListIsSet(true);
@@ -10626,24 +10841,24 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map211 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
             struct.ssio = new HashMap&lt;String,Map&lt;String,String&gt;&gt;(2*_map211.size);
            for (int _i212 = 0; _i212 &lt; _map211.size; ++_i212)
            String _key212;
            Map&lt;String,String&gt; _val213;
            for (int _i214 = 0; _i214 &lt; _map211.size; ++_i214)
             {
              String _key213;
              Map&lt;String,String&gt; _val214;
              _key213 = iprot.readString();
              _key212 = iprot.readString();
               {
                 org.apache.thrift.protocol.TMap _map215 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
                _val214 = new HashMap&lt;String,String&gt;(2*_map215.size);
                for (int _i216 = 0; _i216 &lt; _map215.size; ++_i216)
                _val213 = new HashMap&lt;String,String&gt;(2*_map215.size);
                String _key216;
                String _val217;
                for (int _i218 = 0; _i218 &lt; _map215.size; ++_i218)
                 {
                  String _key217;
                  String _val218;
                  _key217 = iprot.readString();
                  _val218 = iprot.readString();
                  _val214.put(_key217, _val218);
                  _key216 = iprot.readString();
                  _val217 = iprot.readString();
                  _val213.put(_key216, _val217);
                 }
               }
              struct.ssio.put(_key213, _val214);
              struct.ssio.put(_key212, _val213);
             }
           }
           struct.setSsioIsSet(true);
@@ -10652,11 +10867,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list219 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list219.size);
            for (int _i220 = 0; _i220 &lt; _list219.size; ++_i220)
            ByteBuffer _elem220;
            for (int _i221 = 0; _i221 &lt; _list219.size; ++_i221)
             {
              ByteBuffer _elem221;
              _elem221 = iprot.readBinary();
              struct.authorizations.add(_elem221);
              _elem220 = iprot.readBinary();
              struct.authorizations.add(_elem220);
             }
           }
           struct.setAuthorizationsIsSet(true);
@@ -10996,7 +11211,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_tsnpe = true &amp;&amp; (isSetTsnpe());
      list.add(present_tsnpe);
      if (present_tsnpe)
        list.add(tsnpe);

      return list.hashCode();
     }
 
     @Override
@@ -11445,7 +11677,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case SCAN_ID:
        return Long.valueOf(getScanID());
        return getScanID();
 
       }
       throw new IllegalStateException();
@@ -11502,7 +11734,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_scanID = true;
      list.add(present_scanID);
      if (present_scanID)
        list.add(scanID);

      return list.hashCode();
     }
 
     @Override
@@ -12016,7 +12260,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_nssi = true &amp;&amp; (isSetNssi());
      list.add(present_nssi);
      if (present_nssi)
        list.add(nssi);

      boolean present_tsnpe = true &amp;&amp; (isSetTsnpe());
      list.add(present_tsnpe);
      if (present_tsnpe)
        list.add(tsnpe);

      return list.hashCode();
     }
 
     @Override
@@ -12465,7 +12726,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case SCAN_ID:
        return Long.valueOf(getScanID());
        return getScanID();
 
       }
       throw new IllegalStateException();
@@ -12522,7 +12783,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_scanID = true;
      list.add(present_scanID);
      if (present_scanID)
        list.add(scanID);

      return list.hashCode();
     }
 
     @Override
@@ -12918,7 +13191,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_nssi = true &amp;&amp; (isSetNssi());
      list.add(present_nssi);
      if (present_nssi)
        list.add(nssi);

      return list.hashCode();
     }
 
     @Override
@@ -13408,7 +13688,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_durability = true &amp;&amp; (isSetDurability());
      list.add(present_durability);
      if (present_durability)
        list.add(durability.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -13561,7 +13858,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 3: // DURABILITY
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.durability = TDurability.findByValue(iprot.readI32());
                struct.durability = org.apache.accumulo.core.tabletserver.thrift.TDurability.findByValue(iprot.readI32());
                 struct.setDurabilityIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -13651,7 +13948,7 @@ import org.slf4j.LoggerFactory;
           struct.setCredentialsIsSet(true);
         }
         if (incoming.get(2)) {
          struct.durability = TDurability.findByValue(iprot.readI32());
          struct.durability = org.apache.accumulo.core.tabletserver.thrift.TDurability.findByValue(iprot.readI32());
           struct.setDurabilityIsSet(true);
         }
       }
@@ -13855,7 +14152,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Long.valueOf(getSuccess());
        return getSuccess();
 
       case SEC:
         return getSec();
@@ -13915,7 +14212,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -14424,7 +14733,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case UPDATE_ID:
        return Long.valueOf(getUpdateID());
        return getUpdateID();
 
       case KEY_EXTENT:
         return getKeyExtent();
@@ -14509,7 +14818,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_updateID = true;
      list.add(present_updateID);
      if (present_updateID)
        list.add(updateID);

      boolean present_keyExtent = true &amp;&amp; (isSetKeyExtent());
      list.add(present_keyExtent);
      if (present_keyExtent)
        list.add(keyExtent);

      boolean present_mutations = true &amp;&amp; (isSetMutations());
      list.add(present_mutations);
      if (present_mutations)
        list.add(mutations);

      return list.hashCode();
     }
 
     @Override
@@ -14689,12 +15020,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list222 = iprot.readListBegin();
                   struct.mutations = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TMutation&gt;(_list222.size);
                  for (int _i223 = 0; _i223 &lt; _list222.size; ++_i223)
                  org.apache.accumulo.core.data.thrift.TMutation _elem223;
                  for (int _i224 = 0; _i224 &lt; _list222.size; ++_i224)
                   {
                    org.apache.accumulo.core.data.thrift.TMutation _elem224;
                    _elem224 = new org.apache.accumulo.core.data.thrift.TMutation();
                    _elem224.read(iprot);
                    struct.mutations.add(_elem224);
                    _elem223 = new org.apache.accumulo.core.data.thrift.TMutation();
                    _elem223.read(iprot);
                    struct.mutations.add(_elem223);
                   }
                   iprot.readListEnd();
                 }
@@ -14816,12 +15147,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list227 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.mutations = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TMutation&gt;(_list227.size);
            for (int _i228 = 0; _i228 &lt; _list227.size; ++_i228)
            org.apache.accumulo.core.data.thrift.TMutation _elem228;
            for (int _i229 = 0; _i229 &lt; _list227.size; ++_i229)
             {
              org.apache.accumulo.core.data.thrift.TMutation _elem229;
              _elem229 = new org.apache.accumulo.core.data.thrift.TMutation();
              _elem229.read(iprot);
              struct.mutations.add(_elem229);
              _elem228 = new org.apache.accumulo.core.data.thrift.TMutation();
              _elem228.read(iprot);
              struct.mutations.add(_elem228);
             }
           }
           struct.setMutationsIsSet(true);
@@ -15030,7 +15361,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case UPDATE_ID:
        return Long.valueOf(getUpdateID());
        return getUpdateID();
 
       }
       throw new IllegalStateException();
@@ -15087,7 +15418,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_updateID = true;
      list.add(present_updateID);
      if (present_updateID)
        list.add(updateID);

      return list.hashCode();
     }
 
     @Override
@@ -15542,7 +15885,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_nssi = true &amp;&amp; (isSetNssi());
      list.add(present_nssi);
      if (present_nssi)
        list.add(nssi);

      return list.hashCode();
     }
 
     @Override
@@ -16196,7 +16551,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_keyExtent = true &amp;&amp; (isSetKeyExtent());
      list.add(present_keyExtent);
      if (present_keyExtent)
        list.add(keyExtent);

      boolean present_mutation = true &amp;&amp; (isSetMutation());
      list.add(present_mutation);
      if (present_mutation)
        list.add(mutation);

      boolean present_durability = true &amp;&amp; (isSetDurability());
      list.add(present_durability);
      if (present_durability)
        list.add(durability.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -16409,7 +16791,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 5: // DURABILITY
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.durability = TDurability.findByValue(iprot.readI32());
                struct.durability = org.apache.accumulo.core.tabletserver.thrift.TDurability.findByValue(iprot.readI32());
                 struct.setDurabilityIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -16531,7 +16913,7 @@ import org.slf4j.LoggerFactory;
           struct.setMutationIsSet(true);
         }
         if (incoming.get(4)) {
          struct.durability = TDurability.findByValue(iprot.readI32());
          struct.durability = org.apache.accumulo.core.tabletserver.thrift.TDurability.findByValue(iprot.readI32());
           struct.setDurabilityIsSet(true);
         }
       }
@@ -16852,7 +17234,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_nste = true &amp;&amp; (isSetNste());
      list.add(present_nste);
      if (present_nste)
        list.add(nste);

      boolean present_cve = true &amp;&amp; (isSetCve());
      list.add(present_cve);
      if (present_cve)
        list.add(cve);

      return list.hashCode();
     }
 
     @Override
@@ -17622,7 +18021,39 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
      list.add(present_authorizations);
      if (present_authorizations)
        list.add(authorizations);

      boolean present_tableID = true &amp;&amp; (isSetTableID());
      list.add(present_tableID);
      if (present_tableID)
        list.add(tableID);

      boolean present_durability = true &amp;&amp; (isSetDurability());
      list.add(present_durability);
      if (present_durability)
        list.add(durability.getValue());

      boolean present_classLoaderContext = true &amp;&amp; (isSetClassLoaderContext());
      list.add(present_classLoaderContext);
      if (present_classLoaderContext)
        list.add(classLoaderContext);

      return list.hashCode();
     }
 
     @Override
@@ -17733,7 +18164,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -17832,11 +18263,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list230 = iprot.readListBegin();
                   struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list230.size);
                  for (int _i231 = 0; _i231 &lt; _list230.size; ++_i231)
                  ByteBuffer _elem231;
                  for (int _i232 = 0; _i232 &lt; _list230.size; ++_i232)
                   {
                    ByteBuffer _elem232;
                    _elem232 = iprot.readBinary();
                    struct.authorizations.add(_elem232);
                    _elem231 = iprot.readBinary();
                    struct.authorizations.add(_elem231);
                   }
                   iprot.readListEnd();
                 }
@@ -17855,7 +18286,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 5: // DURABILITY
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.durability = TDurability.findByValue(iprot.readI32());
                struct.durability = org.apache.accumulo.core.tabletserver.thrift.TDurability.findByValue(iprot.readI32());
                 struct.setDurabilityIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -18002,11 +18433,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list235 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list235.size);
            for (int _i236 = 0; _i236 &lt; _list235.size; ++_i236)
            ByteBuffer _elem236;
            for (int _i237 = 0; _i237 &lt; _list235.size; ++_i237)
             {
              ByteBuffer _elem237;
              _elem237 = iprot.readBinary();
              struct.authorizations.add(_elem237);
              _elem236 = iprot.readBinary();
              struct.authorizations.add(_elem236);
             }
           }
           struct.setAuthorizationsIsSet(true);
@@ -18016,7 +18447,7 @@ import org.slf4j.LoggerFactory;
           struct.setTableIDIsSet(true);
         }
         if (incoming.get(4)) {
          struct.durability = TDurability.findByValue(iprot.readI32());
          struct.durability = org.apache.accumulo.core.tabletserver.thrift.TDurability.findByValue(iprot.readI32());
           struct.setDurabilityIsSet(true);
         }
         if (incoming.get(5)) {
@@ -18282,7 +18713,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -18806,7 +19249,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case SESS_ID:
        return Long.valueOf(getSessID());
        return getSessID();
 
       case MUTATIONS:
         return getMutations();
@@ -18891,7 +19334,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_sessID = true;
      list.add(present_sessID);
      if (present_sessID)
        list.add(sessID);

      boolean present_mutations = true &amp;&amp; (isSetMutations());
      list.add(present_mutations);
      if (present_mutations)
        list.add(mutations);

      boolean present_symbols = true &amp;&amp; (isSetSymbols());
      list.add(present_symbols);
      if (present_symbols)
        list.add(symbols);

      return list.hashCode();
     }
 
     @Override
@@ -19059,25 +19524,25 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map238 = iprot.readMapBegin();
                   struct.mutations = new HashMap&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,List&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt;&gt;(2*_map238.size);
                  for (int _i239 = 0; _i239 &lt; _map238.size; ++_i239)
                  org.apache.accumulo.core.data.thrift.TKeyExtent _key239;
                  List&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt; _val240;
                  for (int _i241 = 0; _i241 &lt; _map238.size; ++_i241)
                   {
                    org.apache.accumulo.core.data.thrift.TKeyExtent _key240;
                    List&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt; _val241;
                    _key240 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _key240.read(iprot);
                    _key239 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _key239.read(iprot);
                     {
                       org.apache.thrift.protocol.TList _list242 = iprot.readListBegin();
                      _val241 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt;(_list242.size);
                      for (int _i243 = 0; _i243 &lt; _list242.size; ++_i243)
                      _val240 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt;(_list242.size);
                      org.apache.accumulo.core.data.thrift.TConditionalMutation _elem243;
                      for (int _i244 = 0; _i244 &lt; _list242.size; ++_i244)
                       {
                        org.apache.accumulo.core.data.thrift.TConditionalMutation _elem244;
                        _elem244 = new org.apache.accumulo.core.data.thrift.TConditionalMutation();
                        _elem244.read(iprot);
                        _val241.add(_elem244);
                        _elem243 = new org.apache.accumulo.core.data.thrift.TConditionalMutation();
                        _elem243.read(iprot);
                        _val240.add(_elem243);
                       }
                       iprot.readListEnd();
                     }
                    struct.mutations.put(_key240, _val241);
                    struct.mutations.put(_key239, _val240);
                   }
                   iprot.readMapEnd();
                 }
@@ -19091,11 +19556,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list245 = iprot.readListBegin();
                   struct.symbols = new ArrayList&lt;String&gt;(_list245.size);
                  for (int _i246 = 0; _i246 &lt; _list245.size; ++_i246)
                  String _elem246;
                  for (int _i247 = 0; _i247 &lt; _list245.size; ++_i247)
                   {
                    String _elem247;
                    _elem247 = iprot.readString();
                    struct.symbols.add(_elem247);
                    _elem246 = iprot.readString();
                    struct.symbols.add(_elem246);
                   }
                   iprot.readListEnd();
                 }
@@ -19240,24 +19705,24 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map254 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
             struct.mutations = new HashMap&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,List&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt;&gt;(2*_map254.size);
            for (int _i255 = 0; _i255 &lt; _map254.size; ++_i255)
            org.apache.accumulo.core.data.thrift.TKeyExtent _key255;
            List&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt; _val256;
            for (int _i257 = 0; _i257 &lt; _map254.size; ++_i257)
             {
              org.apache.accumulo.core.data.thrift.TKeyExtent _key256;
              List&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt; _val257;
              _key256 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _key256.read(iprot);
              _key255 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _key255.read(iprot);
               {
                 org.apache.thrift.protocol.TList _list258 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                _val257 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt;(_list258.size);
                for (int _i259 = 0; _i259 &lt; _list258.size; ++_i259)
                _val256 = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TConditionalMutation&gt;(_list258.size);
                org.apache.accumulo.core.data.thrift.TConditionalMutation _elem259;
                for (int _i260 = 0; _i260 &lt; _list258.size; ++_i260)
                 {
                  org.apache.accumulo.core.data.thrift.TConditionalMutation _elem260;
                  _elem260 = new org.apache.accumulo.core.data.thrift.TConditionalMutation();
                  _elem260.read(iprot);
                  _val257.add(_elem260);
                  _elem259 = new org.apache.accumulo.core.data.thrift.TConditionalMutation();
                  _elem259.read(iprot);
                  _val256.add(_elem259);
                 }
               }
              struct.mutations.put(_key256, _val257);
              struct.mutations.put(_key255, _val256);
             }
           }
           struct.setMutationsIsSet(true);
@@ -19266,11 +19731,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list261 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.symbols = new ArrayList&lt;String&gt;(_list261.size);
            for (int _i262 = 0; _i262 &lt; _list261.size; ++_i262)
            String _elem262;
            for (int _i263 = 0; _i263 &lt; _list261.size; ++_i263)
             {
              String _elem263;
              _elem263 = iprot.readString();
              struct.symbols.add(_elem263);
              _elem262 = iprot.readString();
              struct.symbols.add(_elem262);
             }
           }
           struct.setSymbolsIsSet(true);
@@ -19554,7 +20019,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_nssi = true &amp;&amp; (isSetNssi());
      list.add(present_nssi);
      if (present_nssi)
        list.add(nssi);

      return list.hashCode();
     }
 
     @Override
@@ -19668,12 +20145,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list264 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TCMResult&gt;(_list264.size);
                  for (int _i265 = 0; _i265 &lt; _list264.size; ++_i265)
                  org.apache.accumulo.core.data.thrift.TCMResult _elem265;
                  for (int _i266 = 0; _i266 &lt; _list264.size; ++_i266)
                   {
                    org.apache.accumulo.core.data.thrift.TCMResult _elem266;
                    _elem266 = new org.apache.accumulo.core.data.thrift.TCMResult();
                    _elem266.read(iprot);
                    struct.success.add(_elem266);
                    _elem265 = new org.apache.accumulo.core.data.thrift.TCMResult();
                    _elem265.read(iprot);
                    struct.success.add(_elem265);
                   }
                   iprot.readListEnd();
                 }
@@ -19770,12 +20247,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list269 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TCMResult&gt;(_list269.size);
            for (int _i270 = 0; _i270 &lt; _list269.size; ++_i270)
            org.apache.accumulo.core.data.thrift.TCMResult _elem270;
            for (int _i271 = 0; _i271 &lt; _list269.size; ++_i271)
             {
              org.apache.accumulo.core.data.thrift.TCMResult _elem271;
              _elem271 = new org.apache.accumulo.core.data.thrift.TCMResult();
              _elem271.read(iprot);
              struct.success.add(_elem271);
              _elem270 = new org.apache.accumulo.core.data.thrift.TCMResult();
              _elem270.read(iprot);
              struct.success.add(_elem270);
             }
           }
           struct.setSuccessIsSet(true);
@@ -19989,7 +20466,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case SESS_ID:
        return Long.valueOf(getSessID());
        return getSessID();
 
       }
       throw new IllegalStateException();
@@ -20046,7 +20523,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_sessID = true;
      list.add(present_sessID);
      if (present_sessID)
        list.add(sessID);

      return list.hashCode();
     }
 
     @Override
@@ -20377,7 +20866,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -20692,7 +21183,7 @@ import org.slf4j.LoggerFactory;
         return getTinfo();
 
       case SESS_ID:
        return Long.valueOf(getSessID());
        return getSessID();
 
       }
       throw new IllegalStateException();
@@ -20749,7 +21240,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_sessID = true;
      list.add(present_sessID);
      if (present_sessID)
        list.add(sessID);

      return list.hashCode();
     }
 
     @Override
@@ -21298,13 +21801,13 @@ import org.slf4j.LoggerFactory;
         return getCredentials();
 
       case TID:
        return Long.valueOf(getTid());
        return getTid();
 
       case FILES:
         return getFiles();
 
       case SET_TIME:
        return Boolean.valueOf(isSetTime());
        return isSetTime();
 
       }
       throw new IllegalStateException();
@@ -21394,7 +21897,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tid = true;
      list.add(present_tid);
      if (present_tid)
        list.add(tid);

      boolean present_files = true &amp;&amp; (isSetFiles());
      list.add(present_files);
      if (present_files)
        list.add(files);

      boolean present_setTime = true;
      list.add(present_setTime);
      if (present_setTime)
        list.add(setTime);

      return list.hashCode();
     }
 
     @Override
@@ -21588,27 +22118,27 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map272 = iprot.readMapBegin();
                   struct.files = new HashMap&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,Map&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt;&gt;(2*_map272.size);
                  for (int _i273 = 0; _i273 &lt; _map272.size; ++_i273)
                  org.apache.accumulo.core.data.thrift.TKeyExtent _key273;
                  Map&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt; _val274;
                  for (int _i275 = 0; _i275 &lt; _map272.size; ++_i275)
                   {
                    org.apache.accumulo.core.data.thrift.TKeyExtent _key274;
                    Map&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt; _val275;
                    _key274 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _key274.read(iprot);
                    _key273 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _key273.read(iprot);
                     {
                       org.apache.thrift.protocol.TMap _map276 = iprot.readMapBegin();
                      _val275 = new HashMap&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt;(2*_map276.size);
                      for (int _i277 = 0; _i277 &lt; _map276.size; ++_i277)
                      _val274 = new HashMap&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt;(2*_map276.size);
                      String _key277;
                      org.apache.accumulo.core.data.thrift.MapFileInfo _val278;
                      for (int _i279 = 0; _i279 &lt; _map276.size; ++_i279)
                       {
                        String _key278;
                        org.apache.accumulo.core.data.thrift.MapFileInfo _val279;
                        _key278 = iprot.readString();
                        _val279 = new org.apache.accumulo.core.data.thrift.MapFileInfo();
                        _val279.read(iprot);
                        _val275.put(_key278, _val279);
                        _key277 = iprot.readString();
                        _val278 = new org.apache.accumulo.core.data.thrift.MapFileInfo();
                        _val278.read(iprot);
                        _val274.put(_key277, _val278);
                       }
                       iprot.readMapEnd();
                     }
                    struct.files.put(_key274, _val275);
                    struct.files.put(_key273, _val274);
                   }
                   iprot.readMapEnd();
                 }
@@ -21764,26 +22294,26 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map284 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
             struct.files = new HashMap&lt;org.apache.accumulo.core.data.thrift.TKeyExtent,Map&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt;&gt;(2*_map284.size);
            for (int _i285 = 0; _i285 &lt; _map284.size; ++_i285)
            org.apache.accumulo.core.data.thrift.TKeyExtent _key285;
            Map&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt; _val286;
            for (int _i287 = 0; _i287 &lt; _map284.size; ++_i287)
             {
              org.apache.accumulo.core.data.thrift.TKeyExtent _key286;
              Map&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt; _val287;
              _key286 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _key286.read(iprot);
              _key285 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _key285.read(iprot);
               {
                 org.apache.thrift.protocol.TMap _map288 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                _val287 = new HashMap&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt;(2*_map288.size);
                for (int _i289 = 0; _i289 &lt; _map288.size; ++_i289)
                _val286 = new HashMap&lt;String,org.apache.accumulo.core.data.thrift.MapFileInfo&gt;(2*_map288.size);
                String _key289;
                org.apache.accumulo.core.data.thrift.MapFileInfo _val290;
                for (int _i291 = 0; _i291 &lt; _map288.size; ++_i291)
                 {
                  String _key290;
                  org.apache.accumulo.core.data.thrift.MapFileInfo _val291;
                  _key290 = iprot.readString();
                  _val291 = new org.apache.accumulo.core.data.thrift.MapFileInfo();
                  _val291.read(iprot);
                  _val287.put(_key290, _val291);
                  _key289 = iprot.readString();
                  _val290 = new org.apache.accumulo.core.data.thrift.MapFileInfo();
                  _val290.read(iprot);
                  _val286.put(_key289, _val290);
                 }
               }
              struct.files.put(_key286, _val287);
              struct.files.put(_key285, _val286);
             }
           }
           struct.setFilesIsSet(true);
@@ -22071,7 +22601,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -22185,12 +22727,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list292 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TKeyExtent&gt;(_list292.size);
                  for (int _i293 = 0; _i293 &lt; _list292.size; ++_i293)
                  org.apache.accumulo.core.data.thrift.TKeyExtent _elem293;
                  for (int _i294 = 0; _i294 &lt; _list292.size; ++_i294)
                   {
                    org.apache.accumulo.core.data.thrift.TKeyExtent _elem294;
                    _elem294 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _elem294.read(iprot);
                    struct.success.add(_elem294);
                    _elem293 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
                    _elem293.read(iprot);
                    struct.success.add(_elem293);
                   }
                   iprot.readListEnd();
                 }
@@ -22287,12 +22829,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list297 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;org.apache.accumulo.core.data.thrift.TKeyExtent&gt;(_list297.size);
            for (int _i298 = 0; _i298 &lt; _list297.size; ++_i298)
            org.apache.accumulo.core.data.thrift.TKeyExtent _elem298;
            for (int _i299 = 0; _i299 &lt; _list297.size; ++_i299)
             {
              org.apache.accumulo.core.data.thrift.TKeyExtent _elem299;
              _elem299 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _elem299.read(iprot);
              struct.success.add(_elem299);
              _elem298 = new org.apache.accumulo.core.data.thrift.TKeyExtent();
              _elem298.read(iprot);
              struct.success.add(_elem298);
             }
           }
           struct.setSuccessIsSet(true);
@@ -22422,7 +22964,7 @@ import org.slf4j.LoggerFactory;
       this.tinfo = tinfo;
       this.credentials = credentials;
       this.extent = extent;
      this.splitPoint = splitPoint;
      this.splitPoint = org.apache.thrift.TBaseHelper.copyBinary(splitPoint);
     }
 
     /**
@@ -22440,7 +22982,6 @@ import org.slf4j.LoggerFactory;
       }
       if (other.isSetSplitPoint()) {
         this.splitPoint = org.apache.thrift.TBaseHelper.copyBinary(other.splitPoint);
;
       }
     }
 
@@ -22534,16 +23075,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForSplitPoint() {
      return splitPoint;
      return org.apache.thrift.TBaseHelper.copyBinary(splitPoint);
     }
 
     public splitTablet_args setSplitPoint(byte[] splitPoint) {
      setSplitPoint(splitPoint == null ? (ByteBuffer)null : ByteBuffer.wrap(splitPoint));
      this.splitPoint = splitPoint == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(splitPoint, splitPoint.length));
       return this;
     }
 
     public splitTablet_args setSplitPoint(ByteBuffer splitPoint) {
      this.splitPoint = splitPoint;
      this.splitPoint = org.apache.thrift.TBaseHelper.copyBinary(splitPoint);
       return this;
     }
 
@@ -22690,7 +23231,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_extent = true &amp;&amp; (isSetExtent());
      list.add(present_extent);
      if (present_extent)
        list.add(extent);

      boolean present_splitPoint = true &amp;&amp; (isSetSplitPoint());
      list.add(present_splitPoint);
      if (present_splitPoint)
        list.add(splitPoint);

      return list.hashCode();
     }
 
     @Override
@@ -23241,7 +23804,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      boolean present_nste = true &amp;&amp; (isSetNste());
      list.add(present_nste);
      if (present_nste)
        list.add(nste);

      return list.hashCode();
     }
 
     @Override
@@ -23817,7 +24392,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      boolean present_extent = true &amp;&amp; (isSetExtent());
      list.add(present_extent);
      if (present_extent)
        list.add(extent);

      return list.hashCode();
     }
 
     @Override
@@ -24457,7 +25054,7 @@ import org.slf4j.LoggerFactory;
         return getExtent();
 
       case SAVE:
        return Boolean.valueOf(isSave());
        return isSave();
 
       }
       throw new IllegalStateException();
@@ -24547,7 +25144,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      boolean present_extent = true &amp;&amp; (isSetExtent());
      list.add(present_extent);
      if (present_extent)
        list.add(extent);

      boolean present_save = true;
      list.add(present_save);
      if (present_save)
        list.add(save);

      return list.hashCode();
     }
 
     @Override
@@ -25013,8 +25637,8 @@ import org.slf4j.LoggerFactory;
       this.credentials = credentials;
       this.lock = lock;
       this.tableId = tableId;
      this.startRow = startRow;
      this.endRow = endRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     /**
@@ -25035,11 +25659,9 @@ import org.slf4j.LoggerFactory;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
     }
 
@@ -25159,16 +25781,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public flush_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public flush_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -25193,16 +25815,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public flush_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public flush_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -25393,7 +26015,39 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      boolean present_tableId = true &amp;&amp; (isSetTableId());
      list.add(present_tableId);
      if (present_tableId)
        list.add(tableId);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      return list.hashCode();
     }
 
     @Override
@@ -26139,7 +26793,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      boolean present_extent = true &amp;&amp; (isSetExtent());
      list.add(present_extent);
      if (present_extent)
        list.add(extent);

      return list.hashCode();
     }
 
     @Override
@@ -26808,7 +27484,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      boolean present_extent = true &amp;&amp; (isSetExtent());
      list.add(present_extent);
      if (present_extent)
        list.add(extent);

      return list.hashCode();
     }
 
     @Override
@@ -27237,8 +27935,8 @@ import org.slf4j.LoggerFactory;
       this.credentials = credentials;
       this.lock = lock;
       this.tableId = tableId;
      this.startRow = startRow;
      this.endRow = endRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     /**
@@ -27259,11 +27957,9 @@ import org.slf4j.LoggerFactory;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
     }
 
@@ -27383,16 +28079,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public compact_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public compact_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -27417,16 +28113,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public compact_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public compact_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -27617,7 +28313,39 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      boolean present_tableId = true &amp;&amp; (isSetTableId());
      list.add(present_tableId);
      if (present_tableId)
        list.add(tableId);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      return list.hashCode();
     }
 
     @Override
@@ -28245,7 +28973,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -28709,7 +29449,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -29229,7 +29981,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_tableId = true &amp;&amp; (isSetTableId());
      list.add(present_tableId);
      if (present_tableId)
        list.add(tableId);

      return list.hashCode();
     }
 
     @Override
@@ -29754,7 +30523,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -29868,12 +30649,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list300 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;TabletStats&gt;(_list300.size);
                  for (int _i301 = 0; _i301 &lt; _list300.size; ++_i301)
                  TabletStats _elem301;
                  for (int _i302 = 0; _i302 &lt; _list300.size; ++_i302)
                   {
                    TabletStats _elem302;
                    _elem302 = new TabletStats();
                    _elem302.read(iprot);
                    struct.success.add(_elem302);
                    _elem301 = new TabletStats();
                    _elem301.read(iprot);
                    struct.success.add(_elem301);
                   }
                   iprot.readListEnd();
                 }
@@ -29970,12 +30751,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list305 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;TabletStats&gt;(_list305.size);
            for (int _i306 = 0; _i306 &lt; _list305.size; ++_i306)
            TabletStats _elem306;
            for (int _i307 = 0; _i307 &lt; _list305.size; ++_i307)
             {
              TabletStats _elem307;
              _elem307 = new TabletStats();
              _elem307.read(iprot);
              struct.success.add(_elem307);
              _elem306 = new TabletStats();
              _elem306.read(iprot);
              struct.success.add(_elem306);
             }
           }
           struct.setSuccessIsSet(true);
@@ -30244,7 +31025,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -30708,7 +31501,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -31228,7 +32033,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      return list.hashCode();
     }
 
     @Override
@@ -31674,7 +32496,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -32148,7 +32977,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_lock = true &amp;&amp; (isSetLock());
      list.add(present_lock);
      if (present_lock)
        list.add(lock);

      return list.hashCode();
     }
 
     @Override
@@ -32653,7 +33499,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -33137,7 +33995,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -33251,12 +34121,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list308 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;ActiveScan&gt;(_list308.size);
                  for (int _i309 = 0; _i309 &lt; _list308.size; ++_i309)
                  ActiveScan _elem309;
                  for (int _i310 = 0; _i310 &lt; _list308.size; ++_i310)
                   {
                    ActiveScan _elem310;
                    _elem310 = new ActiveScan();
                    _elem310.read(iprot);
                    struct.success.add(_elem310);
                    _elem309 = new ActiveScan();
                    _elem309.read(iprot);
                    struct.success.add(_elem309);
                   }
                   iprot.readListEnd();
                 }
@@ -33353,12 +34223,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list313 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;ActiveScan&gt;(_list313.size);
            for (int _i314 = 0; _i314 &lt; _list313.size; ++_i314)
            ActiveScan _elem314;
            for (int _i315 = 0; _i315 &lt; _list313.size; ++_i315)
             {
              ActiveScan _elem315;
              _elem315 = new ActiveScan();
              _elem315.read(iprot);
              struct.success.add(_elem315);
              _elem314 = new ActiveScan();
              _elem314.read(iprot);
              struct.success.add(_elem314);
             }
           }
           struct.setSuccessIsSet(true);
@@ -33627,7 +34497,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -34111,7 +34993,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_sec = true &amp;&amp; (isSetSec());
      list.add(present_sec);
      if (present_sec)
        list.add(sec);

      return list.hashCode();
     }
 
     @Override
@@ -34225,12 +35119,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list316 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;ActiveCompaction&gt;(_list316.size);
                  for (int _i317 = 0; _i317 &lt; _list316.size; ++_i317)
                  ActiveCompaction _elem317;
                  for (int _i318 = 0; _i318 &lt; _list316.size; ++_i318)
                   {
                    ActiveCompaction _elem318;
                    _elem318 = new ActiveCompaction();
                    _elem318.read(iprot);
                    struct.success.add(_elem318);
                    _elem317 = new ActiveCompaction();
                    _elem317.read(iprot);
                    struct.success.add(_elem317);
                   }
                   iprot.readListEnd();
                 }
@@ -34327,12 +35221,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list321 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;ActiveCompaction&gt;(_list321.size);
            for (int _i322 = 0; _i322 &lt; _list321.size; ++_i322)
            ActiveCompaction _elem322;
            for (int _i323 = 0; _i323 &lt; _list321.size; ++_i323)
             {
              ActiveCompaction _elem323;
              _elem323 = new ActiveCompaction();
              _elem323.read(iprot);
              struct.success.add(_elem323);
              _elem322 = new ActiveCompaction();
              _elem322.read(iprot);
              struct.success.add(_elem322);
             }
           }
           struct.setSuccessIsSet(true);
@@ -34677,7 +35571,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      boolean present_filenames = true &amp;&amp; (isSetFilenames());
      list.add(present_filenames);
      if (present_filenames)
        list.add(filenames);

      return list.hashCode();
     }
 
     @Override
@@ -34833,11 +35744,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list324 = iprot.readListBegin();
                   struct.filenames = new ArrayList&lt;String&gt;(_list324.size);
                  for (int _i325 = 0; _i325 &lt; _list324.size; ++_i325)
                  String _elem325;
                  for (int _i326 = 0; _i326 &lt; _list324.size; ++_i326)
                   {
                    String _elem326;
                    _elem326 = iprot.readString();
                    struct.filenames.add(_elem326);
                    _elem325 = iprot.readString();
                    struct.filenames.add(_elem325);
                   }
                   iprot.readListEnd();
                 }
@@ -34946,11 +35857,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list329 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.filenames = new ArrayList&lt;String&gt;(_list329.size);
            for (int _i330 = 0; _i330 &lt; _list329.size; ++_i330)
            String _elem330;
            for (int _i331 = 0; _i331 &lt; _list329.size; ++_i331)
             {
              String _elem331;
              _elem331 = iprot.readString();
              struct.filenames.add(_elem331);
              _elem330 = iprot.readString();
              struct.filenames.add(_elem330);
             }
           }
           struct.setFilenamesIsSet(true);
@@ -35214,7 +36125,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_credentials = true &amp;&amp; (isSetCredentials());
      list.add(present_credentials);
      if (present_credentials)
        list.add(credentials);

      return list.hashCode();
     }
 
     @Override
@@ -35636,7 +36559,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -35732,11 +36662,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list332 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;String&gt;(_list332.size);
                  for (int _i333 = 0; _i333 &lt; _list332.size; ++_i333)
                  String _elem333;
                  for (int _i334 = 0; _i334 &lt; _list332.size; ++_i334)
                   {
                    String _elem334;
                    _elem334 = iprot.readString();
                    struct.success.add(_elem334);
                    _elem333 = iprot.readString();
                    struct.success.add(_elem333);
                   }
                   iprot.readListEnd();
                 }
@@ -35813,11 +36743,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list337 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new ArrayList&lt;String&gt;(_list337.size);
            for (int _i338 = 0; _i338 &lt; _list337.size; ++_i338)
            String _elem338;
            for (int _i339 = 0; _i339 &lt; _list337.size; ++_i339)
             {
              String _elem339;
              _elem339 = iprot.readString();
              struct.success.add(_elem339);
              _elem338 = iprot.readString();
              struct.success.add(_elem338);
             }
           }
           struct.setSuccessIsSet(true);
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletStats.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletStats.java
index 310d3b629..ee819ad84 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletStats.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletStats.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TabletStats implements org.apache.thrift.TBase&lt;TabletStats, TabletStats._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TabletStats&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TabletStats implements org.apache.thrift.TBase&lt;TabletStats, TabletStats._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TabletStats&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TabletStats");
 
   private static final org.apache.thrift.protocol.TField EXTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("extent", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -526,16 +529,16 @@ import org.slf4j.LoggerFactory;
       return getSplits();
 
     case NUM_ENTRIES:
      return Long.valueOf(getNumEntries());
      return getNumEntries();
 
     case INGEST_RATE:
      return Double.valueOf(getIngestRate());
      return getIngestRate();
 
     case QUERY_RATE:
      return Double.valueOf(getQueryRate());
      return getQueryRate();
 
     case SPLIT_CREATION_TIME:
      return Long.valueOf(getSplitCreationTime());
      return getSplitCreationTime();
 
     }
     throw new IllegalStateException();
@@ -658,7 +661,49 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    boolean present_majors = true &amp;&amp; (isSetMajors());
    list.add(present_majors);
    if (present_majors)
      list.add(majors);

    boolean present_minors = true &amp;&amp; (isSetMinors());
    list.add(present_minors);
    if (present_minors)
      list.add(minors);

    boolean present_splits = true &amp;&amp; (isSetSplits());
    list.add(present_splits);
    if (present_splits)
      list.add(splits);

    boolean present_numEntries = true;
    list.add(present_numEntries);
    if (present_numEntries)
      list.add(numEntries);

    boolean present_ingestRate = true;
    list.add(present_ingestRate);
    if (present_ingestRate)
      list.add(ingestRate);

    boolean present_queryRate = true;
    list.add(present_queryRate);
    if (present_queryRate)
      list.add(queryRate);

    boolean present_splitCreationTime = true;
    list.add(present_splitCreationTime);
    if (present_splitCreationTime)
      list.add(splitCreationTime);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TooManyFilesException.java b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TooManyFilesException.java
index 203597a10..30399cb84 100644
-- a/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TooManyFilesException.java
++ b/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TooManyFilesException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TooManyFilesException extends TException implements org.apache.thrift.TBase&lt;TooManyFilesException, TooManyFilesException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TooManyFilesException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TooManyFilesException extends TException implements org.apache.thrift.TBase&lt;TooManyFilesException, TooManyFilesException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TooManyFilesException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TooManyFilesException");
 
   private static final org.apache.thrift.protocol.TField EXTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("extent", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/java/org/apache/accumulo/core/trace/thrift/TInfo.java b/core/src/main/java/org/apache/accumulo/core/trace/thrift/TInfo.java
index fa7933b6b..7a3c9e481 100644
-- a/core/src/main/java/org/apache/accumulo/core/trace/thrift/TInfo.java
++ b/core/src/main/java/org/apache/accumulo/core/trace/thrift/TInfo.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TInfo implements org.apache.thrift.TBase&lt;TInfo, TInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TInfo&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TInfo implements org.apache.thrift.TBase&lt;TInfo, TInfo._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TInfo&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TInfo");
 
   private static final org.apache.thrift.protocol.TField TRACE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("traceId", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -244,10 +247,10 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case TRACE_ID:
      return Long.valueOf(getTraceId());
      return getTraceId();
 
     case PARENT_ID:
      return Long.valueOf(getParentId());
      return getParentId();
 
     }
     throw new IllegalStateException();
@@ -304,7 +307,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_traceId = true;
    list.add(present_traceId);
    if (present_traceId)
      list.add(traceId);

    boolean present_parentId = true;
    list.add(present_parentId);
    if (present_parentId)
      list.add(parentId);

    return list.hashCode();
   }
 
   @Override
diff --git a/core/src/main/scripts/generate-thrift.sh b/core/src/main/scripts/generate-thrift.sh
index b9f99628c..bc9b33308 100755
-- a/core/src/main/scripts/generate-thrift.sh
++ b/core/src/main/scripts/generate-thrift.sh
@@ -26,7 +26,7 @@
 #   INCLUDED_MODULES should be an array that includes other Maven modules with src/main/thrift directories
 #   Use INCLUDED_MODULES=(-) in calling scripts that require no other modules
 # ========================================================================================================================
[[ -z $REQUIRED_THRIFT_VERSION ]] &amp;&amp; REQUIRED_THRIFT_VERSION='0.9.1'
[[ -z $REQUIRED_THRIFT_VERSION ]] &amp;&amp; REQUIRED_THRIFT_VERSION='0.9.3'
 [[ -z $INCLUDED_MODULES ]]        &amp;&amp; INCLUDED_MODULES=(../server/tracer)
 [[ -z $BASE_OUTPUT_PACKAGE ]]     &amp;&amp; BASE_OUTPUT_PACKAGE='org.apache.accumulo.core'
 [[ -z $PACKAGES_TO_GENERATE ]]    &amp;&amp; PACKAGES_TO_GENERATE=(gc master tabletserver security client.impl data replication trace)
@@ -74,7 +74,7 @@ done
 # For all generated thrift code, suppress all warnings and add the LICENSE header
 cs='@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"})'
 es='@SuppressWarnings({"unused"})'
find $BUILD_DIR/gen-java -name '*.java' -print0 | xargs -0 sed -i.orig -e 's/\(public class [A-Z]\)/'"$cs"' \1/'
find $BUILD_DIR/gen-java -name '*.java' -print0 | xargs -0 sed -i.orig -e 's/"unchecked"/"unchecked", "unused"/'
 find $BUILD_DIR/gen-java -name '*.java' -print0 | xargs -0 sed -i.orig -e 's/\(public enum [A-Z]\)/'"$es"' \1/'
 
 for lang in "${LANGUAGES_TO_GENERATE[@]}"; do
diff --git a/pom.xml b/pom.xml
index d16e90c27..2c9f0d8e4 100644
-- a/pom.xml
++ b/pom.xml
@@ -150,7 +150,7 @@
     &lt;slf4j.version&gt;1.7.5&lt;/slf4j.version&gt;
     &lt;sourceReleaseAssemblyDescriptor&gt;source-release-tar&lt;/sourceReleaseAssemblyDescriptor&gt;
     &lt;!-- Thrift version --&gt;
    &lt;thrift.version&gt;0.9.1&lt;/thrift.version&gt;
    &lt;thrift.version&gt;0.9.3&lt;/thrift.version&gt;
     &lt;!-- ZooKeeper version --&gt;
     &lt;zookeeper.version&gt;3.4.6&lt;/zookeeper.version&gt;
   &lt;/properties&gt;
@@ -361,6 +361,11 @@
         &lt;artifactId&gt;commons-jci-fam&lt;/artifactId&gt;
         &lt;version&gt;1.0&lt;/version&gt;
       &lt;/dependency&gt;
      &lt;dependency&gt;
        &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
        &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;
        &lt;version&gt;3.1&lt;/version&gt;
      &lt;/dependency&gt;
       &lt;dependency&gt;
         &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
         &lt;artifactId&gt;commons-math&lt;/artifactId&gt;
@@ -937,12 +942,6 @@
                 &lt;regexMessage&gt;You should specify the Hadoop profile by major Hadoop generation, i.e. 1 or 2, not by a version number.
   Use hadoop.version to use a particular Hadoop version within that generation. See README for more details.&lt;/regexMessage&gt;
               &lt;/requireProperty&gt;
              &lt;requireProperty&gt;
                &lt;property&gt;thrift.version&lt;/property&gt;
                &lt;regex&gt;0[.]9[.]1&lt;/regex&gt;
                &lt;regexMessage&gt;Thrift version must be 0.9.1; Any alteration requires a review of ACCUMULO-1691
                  (See server/base/src/main/java/org/apache/accumulo/server/util/CustomNonBlockingServer.java)&lt;/regexMessage&gt;
              &lt;/requireProperty&gt;
             &lt;/rules&gt;
           &lt;/configuration&gt;
         &lt;/plugin&gt;
diff --git a/proxy/src/main/cpp/AccumuloProxy.cpp b/proxy/src/main/cpp/AccumuloProxy.cpp
index b220dcb16..d74ad958f 100644
-- a/proxy/src/main/cpp/AccumuloProxy.cpp
++ b/proxy/src/main/cpp/AccumuloProxy.cpp
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -24,8 +24,14 @@
 
 namespace accumulo {
 

AccumuloProxy_login_args::~AccumuloProxy_login_args() throw() {
}


 uint32_t AccumuloProxy_login_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -56,17 +62,17 @@ uint32_t AccumuloProxy_login_args::read(::apache::thrift::protocol::TProtocol* i
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;loginProperties.clear();
            uint32_t _size133;
            ::apache::thrift::protocol::TType _ktype134;
            ::apache::thrift::protocol::TType _vtype135;
            xfer += iprot-&gt;readMapBegin(_ktype134, _vtype135, _size133);
            uint32_t _i137;
            for (_i137 = 0; _i137 &lt; _size133; ++_i137)
            uint32_t _size189;
            ::apache::thrift::protocol::TType _ktype190;
            ::apache::thrift::protocol::TType _vtype191;
            xfer += iprot-&gt;readMapBegin(_ktype190, _vtype191, _size189);
            uint32_t _i193;
            for (_i193 = 0; _i193 &lt; _size189; ++_i193)
             {
              std::string _key138;
              xfer += iprot-&gt;readString(_key138);
              std::string&amp; _val139 = this-&gt;loginProperties[_key138];
              xfer += iprot-&gt;readString(_val139);
              std::string _key194;
              xfer += iprot-&gt;readString(_key194);
              std::string&amp; _val195 = this-&gt;loginProperties[_key194];
              xfer += iprot-&gt;readString(_val195);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -89,6 +95,7 @@ uint32_t AccumuloProxy_login_args::read(::apache::thrift::protocol::TProtocol* i
 
 uint32_t AccumuloProxy_login_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_login_args");
 
   xfer += oprot-&gt;writeFieldBegin("principal", ::apache::thrift::protocol::T_STRING, 1);
@@ -98,11 +105,11 @@ uint32_t AccumuloProxy_login_args::write(::apache::thrift::protocol::TProtocol*
   xfer += oprot-&gt;writeFieldBegin("loginProperties", ::apache::thrift::protocol::T_MAP, 2);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;loginProperties.size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter140;
    for (_iter140 = this-&gt;loginProperties.begin(); _iter140 != this-&gt;loginProperties.end(); ++_iter140)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter196;
    for (_iter196 = this-&gt;loginProperties.begin(); _iter196 != this-&gt;loginProperties.end(); ++_iter196)
     {
      xfer += oprot-&gt;writeString(_iter140-&gt;first);
      xfer += oprot-&gt;writeString(_iter140-&gt;second);
      xfer += oprot-&gt;writeString(_iter196-&gt;first);
      xfer += oprot-&gt;writeString(_iter196-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -113,8 +120,14 @@ uint32_t AccumuloProxy_login_args::write(::apache::thrift::protocol::TProtocol*
   return xfer;
 }
 

AccumuloProxy_login_pargs::~AccumuloProxy_login_pargs() throw() {
}


 uint32_t AccumuloProxy_login_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_login_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("principal", ::apache::thrift::protocol::T_STRING, 1);
@@ -124,11 +137,11 @@ uint32_t AccumuloProxy_login_pargs::write(::apache::thrift::protocol::TProtocol*
   xfer += oprot-&gt;writeFieldBegin("loginProperties", ::apache::thrift::protocol::T_MAP, 2);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;loginProperties)).size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter141;
    for (_iter141 = (*(this-&gt;loginProperties)).begin(); _iter141 != (*(this-&gt;loginProperties)).end(); ++_iter141)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter197;
    for (_iter197 = (*(this-&gt;loginProperties)).begin(); _iter197 != (*(this-&gt;loginProperties)).end(); ++_iter197)
     {
      xfer += oprot-&gt;writeString(_iter141-&gt;first);
      xfer += oprot-&gt;writeString(_iter141-&gt;second);
      xfer += oprot-&gt;writeString(_iter197-&gt;first);
      xfer += oprot-&gt;writeString(_iter197-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -139,8 +152,14 @@ uint32_t AccumuloProxy_login_pargs::write(::apache::thrift::protocol::TProtocol*
   return xfer;
 }
 

AccumuloProxy_login_result::~AccumuloProxy_login_result() throw() {
}


 uint32_t AccumuloProxy_login_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -207,8 +226,14 @@ uint32_t AccumuloProxy_login_result::write(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_login_presult::~AccumuloProxy_login_presult() throw() {
}


 uint32_t AccumuloProxy_login_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -255,8 +280,14 @@ uint32_t AccumuloProxy_login_presult::read(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_addConstraint_args::~AccumuloProxy_addConstraint_args() throw() {
}


 uint32_t AccumuloProxy_addConstraint_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -313,6 +344,7 @@ uint32_t AccumuloProxy_addConstraint_args::read(::apache::thrift::protocol::TPro
 
 uint32_t AccumuloProxy_addConstraint_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_addConstraint_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -332,8 +364,14 @@ uint32_t AccumuloProxy_addConstraint_args::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_addConstraint_pargs::~AccumuloProxy_addConstraint_pargs() throw() {
}


 uint32_t AccumuloProxy_addConstraint_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_addConstraint_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -353,8 +391,14 @@ uint32_t AccumuloProxy_addConstraint_pargs::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_addConstraint_result::~AccumuloProxy_addConstraint_result() throw() {
}


 uint32_t AccumuloProxy_addConstraint_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -445,8 +489,14 @@ uint32_t AccumuloProxy_addConstraint_result::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_addConstraint_presult::~AccumuloProxy_addConstraint_presult() throw() {
}


 uint32_t AccumuloProxy_addConstraint_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -509,8 +559,14 @@ uint32_t AccumuloProxy_addConstraint_presult::read(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_addSplits_args::~AccumuloProxy_addSplits_args() throw() {
}


 uint32_t AccumuloProxy_addSplits_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -549,15 +605,15 @@ uint32_t AccumuloProxy_addSplits_args::read(::apache::thrift::protocol::TProtoco
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;splits.clear();
            uint32_t _size142;
            ::apache::thrift::protocol::TType _etype145;
            xfer += iprot-&gt;readSetBegin(_etype145, _size142);
            uint32_t _i146;
            for (_i146 = 0; _i146 &lt; _size142; ++_i146)
            uint32_t _size198;
            ::apache::thrift::protocol::TType _etype201;
            xfer += iprot-&gt;readSetBegin(_etype201, _size198);
            uint32_t _i202;
            for (_i202 = 0; _i202 &lt; _size198; ++_i202)
             {
              std::string _elem147;
              xfer += iprot-&gt;readBinary(_elem147);
              this-&gt;splits.insert(_elem147);
              std::string _elem203;
              xfer += iprot-&gt;readBinary(_elem203);
              this-&gt;splits.insert(_elem203);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -580,6 +636,7 @@ uint32_t AccumuloProxy_addSplits_args::read(::apache::thrift::protocol::TProtoco
 
 uint32_t AccumuloProxy_addSplits_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_addSplits_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -593,10 +650,10 @@ uint32_t AccumuloProxy_addSplits_args::write(::apache::thrift::protocol::TProtoc
   xfer += oprot-&gt;writeFieldBegin("splits", ::apache::thrift::protocol::T_SET, 3);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;splits.size()));
    std::set&lt;std::string&gt; ::const_iterator _iter148;
    for (_iter148 = this-&gt;splits.begin(); _iter148 != this-&gt;splits.end(); ++_iter148)
    std::set&lt;std::string&gt; ::const_iterator _iter204;
    for (_iter204 = this-&gt;splits.begin(); _iter204 != this-&gt;splits.end(); ++_iter204)
     {
      xfer += oprot-&gt;writeBinary((*_iter148));
      xfer += oprot-&gt;writeBinary((*_iter204));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -607,8 +664,14 @@ uint32_t AccumuloProxy_addSplits_args::write(::apache::thrift::protocol::TProtoc
   return xfer;
 }
 

AccumuloProxy_addSplits_pargs::~AccumuloProxy_addSplits_pargs() throw() {
}


 uint32_t AccumuloProxy_addSplits_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_addSplits_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -622,10 +685,10 @@ uint32_t AccumuloProxy_addSplits_pargs::write(::apache::thrift::protocol::TProto
   xfer += oprot-&gt;writeFieldBegin("splits", ::apache::thrift::protocol::T_SET, 3);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;splits)).size()));
    std::set&lt;std::string&gt; ::const_iterator _iter149;
    for (_iter149 = (*(this-&gt;splits)).begin(); _iter149 != (*(this-&gt;splits)).end(); ++_iter149)
    std::set&lt;std::string&gt; ::const_iterator _iter205;
    for (_iter205 = (*(this-&gt;splits)).begin(); _iter205 != (*(this-&gt;splits)).end(); ++_iter205)
     {
      xfer += oprot-&gt;writeBinary((*_iter149));
      xfer += oprot-&gt;writeBinary((*_iter205));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -636,8 +699,14 @@ uint32_t AccumuloProxy_addSplits_pargs::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_addSplits_result::~AccumuloProxy_addSplits_result() throw() {
}


 uint32_t AccumuloProxy_addSplits_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -716,8 +785,14 @@ uint32_t AccumuloProxy_addSplits_result::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_addSplits_presult::~AccumuloProxy_addSplits_presult() throw() {
}


 uint32_t AccumuloProxy_addSplits_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -772,8 +847,14 @@ uint32_t AccumuloProxy_addSplits_presult::read(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_attachIterator_args::~AccumuloProxy_attachIterator_args() throw() {
}


 uint32_t AccumuloProxy_attachIterator_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -820,17 +901,17 @@ uint32_t AccumuloProxy_attachIterator_args::read(::apache::thrift::protocol::TPr
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;scopes.clear();
            uint32_t _size150;
            ::apache::thrift::protocol::TType _etype153;
            xfer += iprot-&gt;readSetBegin(_etype153, _size150);
            uint32_t _i154;
            for (_i154 = 0; _i154 &lt; _size150; ++_i154)
            uint32_t _size206;
            ::apache::thrift::protocol::TType _etype209;
            xfer += iprot-&gt;readSetBegin(_etype209, _size206);
            uint32_t _i210;
            for (_i210 = 0; _i210 &lt; _size206; ++_i210)
             {
              IteratorScope::type _elem155;
              int32_t ecast156;
              xfer += iprot-&gt;readI32(ecast156);
              _elem155 = (IteratorScope::type)ecast156;
              this-&gt;scopes.insert(_elem155);
              IteratorScope::type _elem211;
              int32_t ecast212;
              xfer += iprot-&gt;readI32(ecast212);
              _elem211 = (IteratorScope::type)ecast212;
              this-&gt;scopes.insert(_elem211);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -853,6 +934,7 @@ uint32_t AccumuloProxy_attachIterator_args::read(::apache::thrift::protocol::TPr
 
 uint32_t AccumuloProxy_attachIterator_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_attachIterator_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -870,10 +952,10 @@ uint32_t AccumuloProxy_attachIterator_args::write(::apache::thrift::protocol::TP
   xfer += oprot-&gt;writeFieldBegin("scopes", ::apache::thrift::protocol::T_SET, 4);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;(this-&gt;scopes.size()));
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter157;
    for (_iter157 = this-&gt;scopes.begin(); _iter157 != this-&gt;scopes.end(); ++_iter157)
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter213;
    for (_iter213 = this-&gt;scopes.begin(); _iter213 != this-&gt;scopes.end(); ++_iter213)
     {
      xfer += oprot-&gt;writeI32((int32_t)(*_iter157));
      xfer += oprot-&gt;writeI32((int32_t)(*_iter213));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -884,8 +966,14 @@ uint32_t AccumuloProxy_attachIterator_args::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_attachIterator_pargs::~AccumuloProxy_attachIterator_pargs() throw() {
}


 uint32_t AccumuloProxy_attachIterator_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_attachIterator_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -903,10 +991,10 @@ uint32_t AccumuloProxy_attachIterator_pargs::write(::apache::thrift::protocol::T
   xfer += oprot-&gt;writeFieldBegin("scopes", ::apache::thrift::protocol::T_SET, 4);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;((*(this-&gt;scopes)).size()));
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter158;
    for (_iter158 = (*(this-&gt;scopes)).begin(); _iter158 != (*(this-&gt;scopes)).end(); ++_iter158)
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter214;
    for (_iter214 = (*(this-&gt;scopes)).begin(); _iter214 != (*(this-&gt;scopes)).end(); ++_iter214)
     {
      xfer += oprot-&gt;writeI32((int32_t)(*_iter158));
      xfer += oprot-&gt;writeI32((int32_t)(*_iter214));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -917,8 +1005,14 @@ uint32_t AccumuloProxy_attachIterator_pargs::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_attachIterator_result::~AccumuloProxy_attachIterator_result() throw() {
}


 uint32_t AccumuloProxy_attachIterator_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -997,8 +1091,14 @@ uint32_t AccumuloProxy_attachIterator_result::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_attachIterator_presult::~AccumuloProxy_attachIterator_presult() throw() {
}


 uint32_t AccumuloProxy_attachIterator_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1053,8 +1153,14 @@ uint32_t AccumuloProxy_attachIterator_presult::read(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_checkIteratorConflicts_args::~AccumuloProxy_checkIteratorConflicts_args() throw() {
}


 uint32_t AccumuloProxy_checkIteratorConflicts_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1101,17 +1207,17 @@ uint32_t AccumuloProxy_checkIteratorConflicts_args::read(::apache::thrift::proto
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;scopes.clear();
            uint32_t _size159;
            ::apache::thrift::protocol::TType _etype162;
            xfer += iprot-&gt;readSetBegin(_etype162, _size159);
            uint32_t _i163;
            for (_i163 = 0; _i163 &lt; _size159; ++_i163)
            uint32_t _size215;
            ::apache::thrift::protocol::TType _etype218;
            xfer += iprot-&gt;readSetBegin(_etype218, _size215);
            uint32_t _i219;
            for (_i219 = 0; _i219 &lt; _size215; ++_i219)
             {
              IteratorScope::type _elem164;
              int32_t ecast165;
              xfer += iprot-&gt;readI32(ecast165);
              _elem164 = (IteratorScope::type)ecast165;
              this-&gt;scopes.insert(_elem164);
              IteratorScope::type _elem220;
              int32_t ecast221;
              xfer += iprot-&gt;readI32(ecast221);
              _elem220 = (IteratorScope::type)ecast221;
              this-&gt;scopes.insert(_elem220);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -1134,6 +1240,7 @@ uint32_t AccumuloProxy_checkIteratorConflicts_args::read(::apache::thrift::proto
 
 uint32_t AccumuloProxy_checkIteratorConflicts_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_checkIteratorConflicts_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -1151,10 +1258,10 @@ uint32_t AccumuloProxy_checkIteratorConflicts_args::write(::apache::thrift::prot
   xfer += oprot-&gt;writeFieldBegin("scopes", ::apache::thrift::protocol::T_SET, 4);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;(this-&gt;scopes.size()));
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter166;
    for (_iter166 = this-&gt;scopes.begin(); _iter166 != this-&gt;scopes.end(); ++_iter166)
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter222;
    for (_iter222 = this-&gt;scopes.begin(); _iter222 != this-&gt;scopes.end(); ++_iter222)
     {
      xfer += oprot-&gt;writeI32((int32_t)(*_iter166));
      xfer += oprot-&gt;writeI32((int32_t)(*_iter222));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -1165,8 +1272,14 @@ uint32_t AccumuloProxy_checkIteratorConflicts_args::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_checkIteratorConflicts_pargs::~AccumuloProxy_checkIteratorConflicts_pargs() throw() {
}


 uint32_t AccumuloProxy_checkIteratorConflicts_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_checkIteratorConflicts_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -1184,10 +1297,10 @@ uint32_t AccumuloProxy_checkIteratorConflicts_pargs::write(::apache::thrift::pro
   xfer += oprot-&gt;writeFieldBegin("scopes", ::apache::thrift::protocol::T_SET, 4);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;((*(this-&gt;scopes)).size()));
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter167;
    for (_iter167 = (*(this-&gt;scopes)).begin(); _iter167 != (*(this-&gt;scopes)).end(); ++_iter167)
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter223;
    for (_iter223 = (*(this-&gt;scopes)).begin(); _iter223 != (*(this-&gt;scopes)).end(); ++_iter223)
     {
      xfer += oprot-&gt;writeI32((int32_t)(*_iter167));
      xfer += oprot-&gt;writeI32((int32_t)(*_iter223));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -1198,8 +1311,14 @@ uint32_t AccumuloProxy_checkIteratorConflicts_pargs::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_checkIteratorConflicts_result::~AccumuloProxy_checkIteratorConflicts_result() throw() {
}


 uint32_t AccumuloProxy_checkIteratorConflicts_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1278,8 +1397,14 @@ uint32_t AccumuloProxy_checkIteratorConflicts_result::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_checkIteratorConflicts_presult::~AccumuloProxy_checkIteratorConflicts_presult() throw() {
}


 uint32_t AccumuloProxy_checkIteratorConflicts_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1334,8 +1459,14 @@ uint32_t AccumuloProxy_checkIteratorConflicts_presult::read(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_clearLocatorCache_args::~AccumuloProxy_clearLocatorCache_args() throw() {
}


 uint32_t AccumuloProxy_clearLocatorCache_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1384,6 +1515,7 @@ uint32_t AccumuloProxy_clearLocatorCache_args::read(::apache::thrift::protocol::
 
 uint32_t AccumuloProxy_clearLocatorCache_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_clearLocatorCache_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -1399,8 +1531,14 @@ uint32_t AccumuloProxy_clearLocatorCache_args::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_clearLocatorCache_pargs::~AccumuloProxy_clearLocatorCache_pargs() throw() {
}


 uint32_t AccumuloProxy_clearLocatorCache_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_clearLocatorCache_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -1416,8 +1554,14 @@ uint32_t AccumuloProxy_clearLocatorCache_pargs::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_clearLocatorCache_result::~AccumuloProxy_clearLocatorCache_result() throw() {
}


 uint32_t AccumuloProxy_clearLocatorCache_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1472,8 +1616,14 @@ uint32_t AccumuloProxy_clearLocatorCache_result::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_clearLocatorCache_presult::~AccumuloProxy_clearLocatorCache_presult() throw() {
}


 uint32_t AccumuloProxy_clearLocatorCache_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1512,8 +1662,14 @@ uint32_t AccumuloProxy_clearLocatorCache_presult::read(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_cloneTable_args::~AccumuloProxy_cloneTable_args() throw() {
}


 uint32_t AccumuloProxy_cloneTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1568,17 +1724,17 @@ uint32_t AccumuloProxy_cloneTable_args::read(::apache::thrift::protocol::TProtoc
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;propertiesToSet.clear();
            uint32_t _size168;
            ::apache::thrift::protocol::TType _ktype169;
            ::apache::thrift::protocol::TType _vtype170;
            xfer += iprot-&gt;readMapBegin(_ktype169, _vtype170, _size168);
            uint32_t _i172;
            for (_i172 = 0; _i172 &lt; _size168; ++_i172)
            uint32_t _size224;
            ::apache::thrift::protocol::TType _ktype225;
            ::apache::thrift::protocol::TType _vtype226;
            xfer += iprot-&gt;readMapBegin(_ktype225, _vtype226, _size224);
            uint32_t _i228;
            for (_i228 = 0; _i228 &lt; _size224; ++_i228)
             {
              std::string _key173;
              xfer += iprot-&gt;readString(_key173);
              std::string&amp; _val174 = this-&gt;propertiesToSet[_key173];
              xfer += iprot-&gt;readString(_val174);
              std::string _key229;
              xfer += iprot-&gt;readString(_key229);
              std::string&amp; _val230 = this-&gt;propertiesToSet[_key229];
              xfer += iprot-&gt;readString(_val230);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -1591,15 +1747,15 @@ uint32_t AccumuloProxy_cloneTable_args::read(::apache::thrift::protocol::TProtoc
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;propertiesToExclude.clear();
            uint32_t _size175;
            ::apache::thrift::protocol::TType _etype178;
            xfer += iprot-&gt;readSetBegin(_etype178, _size175);
            uint32_t _i179;
            for (_i179 = 0; _i179 &lt; _size175; ++_i179)
            uint32_t _size231;
            ::apache::thrift::protocol::TType _etype234;
            xfer += iprot-&gt;readSetBegin(_etype234, _size231);
            uint32_t _i235;
            for (_i235 = 0; _i235 &lt; _size231; ++_i235)
             {
              std::string _elem180;
              xfer += iprot-&gt;readString(_elem180);
              this-&gt;propertiesToExclude.insert(_elem180);
              std::string _elem236;
              xfer += iprot-&gt;readString(_elem236);
              this-&gt;propertiesToExclude.insert(_elem236);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -1622,6 +1778,7 @@ uint32_t AccumuloProxy_cloneTable_args::read(::apache::thrift::protocol::TProtoc
 
 uint32_t AccumuloProxy_cloneTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_cloneTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -1643,11 +1800,11 @@ uint32_t AccumuloProxy_cloneTable_args::write(::apache::thrift::protocol::TProto
   xfer += oprot-&gt;writeFieldBegin("propertiesToSet", ::apache::thrift::protocol::T_MAP, 5);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;propertiesToSet.size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter181;
    for (_iter181 = this-&gt;propertiesToSet.begin(); _iter181 != this-&gt;propertiesToSet.end(); ++_iter181)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter237;
    for (_iter237 = this-&gt;propertiesToSet.begin(); _iter237 != this-&gt;propertiesToSet.end(); ++_iter237)
     {
      xfer += oprot-&gt;writeString(_iter181-&gt;first);
      xfer += oprot-&gt;writeString(_iter181-&gt;second);
      xfer += oprot-&gt;writeString(_iter237-&gt;first);
      xfer += oprot-&gt;writeString(_iter237-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -1656,10 +1813,10 @@ uint32_t AccumuloProxy_cloneTable_args::write(::apache::thrift::protocol::TProto
   xfer += oprot-&gt;writeFieldBegin("propertiesToExclude", ::apache::thrift::protocol::T_SET, 6);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;propertiesToExclude.size()));
    std::set&lt;std::string&gt; ::const_iterator _iter182;
    for (_iter182 = this-&gt;propertiesToExclude.begin(); _iter182 != this-&gt;propertiesToExclude.end(); ++_iter182)
    std::set&lt;std::string&gt; ::const_iterator _iter238;
    for (_iter238 = this-&gt;propertiesToExclude.begin(); _iter238 != this-&gt;propertiesToExclude.end(); ++_iter238)
     {
      xfer += oprot-&gt;writeString((*_iter182));
      xfer += oprot-&gt;writeString((*_iter238));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -1670,8 +1827,14 @@ uint32_t AccumuloProxy_cloneTable_args::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_cloneTable_pargs::~AccumuloProxy_cloneTable_pargs() throw() {
}


 uint32_t AccumuloProxy_cloneTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_cloneTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -1693,11 +1856,11 @@ uint32_t AccumuloProxy_cloneTable_pargs::write(::apache::thrift::protocol::TProt
   xfer += oprot-&gt;writeFieldBegin("propertiesToSet", ::apache::thrift::protocol::T_MAP, 5);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;propertiesToSet)).size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter183;
    for (_iter183 = (*(this-&gt;propertiesToSet)).begin(); _iter183 != (*(this-&gt;propertiesToSet)).end(); ++_iter183)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter239;
    for (_iter239 = (*(this-&gt;propertiesToSet)).begin(); _iter239 != (*(this-&gt;propertiesToSet)).end(); ++_iter239)
     {
      xfer += oprot-&gt;writeString(_iter183-&gt;first);
      xfer += oprot-&gt;writeString(_iter183-&gt;second);
      xfer += oprot-&gt;writeString(_iter239-&gt;first);
      xfer += oprot-&gt;writeString(_iter239-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -1706,10 +1869,10 @@ uint32_t AccumuloProxy_cloneTable_pargs::write(::apache::thrift::protocol::TProt
   xfer += oprot-&gt;writeFieldBegin("propertiesToExclude", ::apache::thrift::protocol::T_SET, 6);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;propertiesToExclude)).size()));
    std::set&lt;std::string&gt; ::const_iterator _iter184;
    for (_iter184 = (*(this-&gt;propertiesToExclude)).begin(); _iter184 != (*(this-&gt;propertiesToExclude)).end(); ++_iter184)
    std::set&lt;std::string&gt; ::const_iterator _iter240;
    for (_iter240 = (*(this-&gt;propertiesToExclude)).begin(); _iter240 != (*(this-&gt;propertiesToExclude)).end(); ++_iter240)
     {
      xfer += oprot-&gt;writeString((*_iter184));
      xfer += oprot-&gt;writeString((*_iter240));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -1720,8 +1883,14 @@ uint32_t AccumuloProxy_cloneTable_pargs::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_cloneTable_result::~AccumuloProxy_cloneTable_result() throw() {
}


 uint32_t AccumuloProxy_cloneTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1812,8 +1981,14 @@ uint32_t AccumuloProxy_cloneTable_result::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_cloneTable_presult::~AccumuloProxy_cloneTable_presult() throw() {
}


 uint32_t AccumuloProxy_cloneTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1876,8 +2051,14 @@ uint32_t AccumuloProxy_cloneTable_presult::read(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_compactTable_args::~AccumuloProxy_compactTable_args() throw() {
}


 uint32_t AccumuloProxy_compactTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1932,14 +2113,14 @@ uint32_t AccumuloProxy_compactTable_args::read(::apache::thrift::protocol::TProt
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;iterators.clear();
            uint32_t _size185;
            ::apache::thrift::protocol::TType _etype188;
            xfer += iprot-&gt;readListBegin(_etype188, _size185);
            this-&gt;iterators.resize(_size185);
            uint32_t _i189;
            for (_i189 = 0; _i189 &lt; _size185; ++_i189)
            uint32_t _size241;
            ::apache::thrift::protocol::TType _etype244;
            xfer += iprot-&gt;readListBegin(_etype244, _size241);
            this-&gt;iterators.resize(_size241);
            uint32_t _i245;
            for (_i245 = 0; _i245 &lt; _size241; ++_i245)
             {
              xfer += this-&gt;iterators[_i189].read(iprot);
              xfer += this-&gt;iterators[_i245].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1986,6 +2167,7 @@ uint32_t AccumuloProxy_compactTable_args::read(::apache::thrift::protocol::TProt
 
 uint32_t AccumuloProxy_compactTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_compactTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2007,10 +2189,10 @@ uint32_t AccumuloProxy_compactTable_args::write(::apache::thrift::protocol::TPro
   xfer += oprot-&gt;writeFieldBegin("iterators", ::apache::thrift::protocol::T_LIST, 5);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;iterators.size()));
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter190;
    for (_iter190 = this-&gt;iterators.begin(); _iter190 != this-&gt;iterators.end(); ++_iter190)
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter246;
    for (_iter246 = this-&gt;iterators.begin(); _iter246 != this-&gt;iterators.end(); ++_iter246)
     {
      xfer += (*_iter190).write(oprot);
      xfer += (*_iter246).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -2033,8 +2215,14 @@ uint32_t AccumuloProxy_compactTable_args::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_compactTable_pargs::~AccumuloProxy_compactTable_pargs() throw() {
}


 uint32_t AccumuloProxy_compactTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_compactTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2056,10 +2244,10 @@ uint32_t AccumuloProxy_compactTable_pargs::write(::apache::thrift::protocol::TPr
   xfer += oprot-&gt;writeFieldBegin("iterators", ::apache::thrift::protocol::T_LIST, 5);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;((*(this-&gt;iterators)).size()));
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter191;
    for (_iter191 = (*(this-&gt;iterators)).begin(); _iter191 != (*(this-&gt;iterators)).end(); ++_iter191)
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter247;
    for (_iter247 = (*(this-&gt;iterators)).begin(); _iter247 != (*(this-&gt;iterators)).end(); ++_iter247)
     {
      xfer += (*_iter191).write(oprot);
      xfer += (*_iter247).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -2082,8 +2270,14 @@ uint32_t AccumuloProxy_compactTable_pargs::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_compactTable_result::~AccumuloProxy_compactTable_result() throw() {
}


 uint32_t AccumuloProxy_compactTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2162,8 +2356,14 @@ uint32_t AccumuloProxy_compactTable_result::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_compactTable_presult::~AccumuloProxy_compactTable_presult() throw() {
}


 uint32_t AccumuloProxy_compactTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2218,8 +2418,14 @@ uint32_t AccumuloProxy_compactTable_presult::read(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_cancelCompaction_args::~AccumuloProxy_cancelCompaction_args() throw() {
}


 uint32_t AccumuloProxy_cancelCompaction_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2268,6 +2474,7 @@ uint32_t AccumuloProxy_cancelCompaction_args::read(::apache::thrift::protocol::T
 
 uint32_t AccumuloProxy_cancelCompaction_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_cancelCompaction_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2283,8 +2490,14 @@ uint32_t AccumuloProxy_cancelCompaction_args::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_cancelCompaction_pargs::~AccumuloProxy_cancelCompaction_pargs() throw() {
}


 uint32_t AccumuloProxy_cancelCompaction_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_cancelCompaction_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2300,8 +2513,14 @@ uint32_t AccumuloProxy_cancelCompaction_pargs::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_cancelCompaction_result::~AccumuloProxy_cancelCompaction_result() throw() {
}


 uint32_t AccumuloProxy_cancelCompaction_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2380,8 +2599,14 @@ uint32_t AccumuloProxy_cancelCompaction_result::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_cancelCompaction_presult::~AccumuloProxy_cancelCompaction_presult() throw() {
}


 uint32_t AccumuloProxy_cancelCompaction_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2436,8 +2661,14 @@ uint32_t AccumuloProxy_cancelCompaction_presult::read(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_createTable_args::~AccumuloProxy_createTable_args() throw() {
}


 uint32_t AccumuloProxy_createTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2482,9 +2713,9 @@ uint32_t AccumuloProxy_createTable_args::read(::apache::thrift::protocol::TProto
         break;
       case 4:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast192;
          xfer += iprot-&gt;readI32(ecast192);
          this-&gt;type = (TimeType::type)ecast192;
          int32_t ecast248;
          xfer += iprot-&gt;readI32(ecast248);
          this-&gt;type = (TimeType::type)ecast248;
           this-&gt;__isset.type = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -2504,6 +2735,7 @@ uint32_t AccumuloProxy_createTable_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_createTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2527,8 +2759,14 @@ uint32_t AccumuloProxy_createTable_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_createTable_pargs::~AccumuloProxy_createTable_pargs() throw() {
}


 uint32_t AccumuloProxy_createTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2552,8 +2790,14 @@ uint32_t AccumuloProxy_createTable_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_createTable_result::~AccumuloProxy_createTable_result() throw() {
}


 uint32_t AccumuloProxy_createTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2632,8 +2876,14 @@ uint32_t AccumuloProxy_createTable_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_createTable_presult::~AccumuloProxy_createTable_presult() throw() {
}


 uint32_t AccumuloProxy_createTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2688,8 +2938,14 @@ uint32_t AccumuloProxy_createTable_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_deleteTable_args::~AccumuloProxy_deleteTable_args() throw() {
}


 uint32_t AccumuloProxy_deleteTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2738,6 +2994,7 @@ uint32_t AccumuloProxy_deleteTable_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_deleteTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_deleteTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2753,8 +3010,14 @@ uint32_t AccumuloProxy_deleteTable_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_deleteTable_pargs::~AccumuloProxy_deleteTable_pargs() throw() {
}


 uint32_t AccumuloProxy_deleteTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_deleteTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2770,8 +3033,14 @@ uint32_t AccumuloProxy_deleteTable_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_deleteTable_result::~AccumuloProxy_deleteTable_result() throw() {
}


 uint32_t AccumuloProxy_deleteTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2850,8 +3119,14 @@ uint32_t AccumuloProxy_deleteTable_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_deleteTable_presult::~AccumuloProxy_deleteTable_presult() throw() {
}


 uint32_t AccumuloProxy_deleteTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2906,8 +3181,14 @@ uint32_t AccumuloProxy_deleteTable_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_deleteRows_args::~AccumuloProxy_deleteRows_args() throw() {
}


 uint32_t AccumuloProxy_deleteRows_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2972,6 +3253,7 @@ uint32_t AccumuloProxy_deleteRows_args::read(::apache::thrift::protocol::TProtoc
 
 uint32_t AccumuloProxy_deleteRows_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_deleteRows_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -2995,8 +3277,14 @@ uint32_t AccumuloProxy_deleteRows_args::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_deleteRows_pargs::~AccumuloProxy_deleteRows_pargs() throw() {
}


 uint32_t AccumuloProxy_deleteRows_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_deleteRows_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -3020,8 +3308,14 @@ uint32_t AccumuloProxy_deleteRows_pargs::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_deleteRows_result::~AccumuloProxy_deleteRows_result() throw() {
}


 uint32_t AccumuloProxy_deleteRows_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3100,8 +3394,14 @@ uint32_t AccumuloProxy_deleteRows_result::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_deleteRows_presult::~AccumuloProxy_deleteRows_presult() throw() {
}


 uint32_t AccumuloProxy_deleteRows_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3156,8 +3456,14 @@ uint32_t AccumuloProxy_deleteRows_presult::read(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_exportTable_args::~AccumuloProxy_exportTable_args() throw() {
}


 uint32_t AccumuloProxy_exportTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3214,6 +3520,7 @@ uint32_t AccumuloProxy_exportTable_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_exportTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_exportTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -3233,8 +3540,14 @@ uint32_t AccumuloProxy_exportTable_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_exportTable_pargs::~AccumuloProxy_exportTable_pargs() throw() {
}


 uint32_t AccumuloProxy_exportTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_exportTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -3254,8 +3567,14 @@ uint32_t AccumuloProxy_exportTable_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_exportTable_result::~AccumuloProxy_exportTable_result() throw() {
}


 uint32_t AccumuloProxy_exportTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3334,8 +3653,14 @@ uint32_t AccumuloProxy_exportTable_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_exportTable_presult::~AccumuloProxy_exportTable_presult() throw() {
}


 uint32_t AccumuloProxy_exportTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3390,8 +3715,14 @@ uint32_t AccumuloProxy_exportTable_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_flushTable_args::~AccumuloProxy_flushTable_args() throw() {
}


 uint32_t AccumuloProxy_flushTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3464,6 +3795,7 @@ uint32_t AccumuloProxy_flushTable_args::read(::apache::thrift::protocol::TProtoc
 
 uint32_t AccumuloProxy_flushTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_flushTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -3491,8 +3823,14 @@ uint32_t AccumuloProxy_flushTable_args::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_flushTable_pargs::~AccumuloProxy_flushTable_pargs() throw() {
}


 uint32_t AccumuloProxy_flushTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_flushTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -3520,8 +3858,14 @@ uint32_t AccumuloProxy_flushTable_pargs::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_flushTable_result::~AccumuloProxy_flushTable_result() throw() {
}


 uint32_t AccumuloProxy_flushTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3600,8 +3944,14 @@ uint32_t AccumuloProxy_flushTable_result::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_flushTable_presult::~AccumuloProxy_flushTable_presult() throw() {
}


 uint32_t AccumuloProxy_flushTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3656,8 +4006,14 @@ uint32_t AccumuloProxy_flushTable_presult::read(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_getDiskUsage_args::~AccumuloProxy_getDiskUsage_args() throw() {
}


 uint32_t AccumuloProxy_getDiskUsage_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3688,15 +4044,15 @@ uint32_t AccumuloProxy_getDiskUsage_args::read(::apache::thrift::protocol::TProt
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;tables.clear();
            uint32_t _size193;
            ::apache::thrift::protocol::TType _etype196;
            xfer += iprot-&gt;readSetBegin(_etype196, _size193);
            uint32_t _i197;
            for (_i197 = 0; _i197 &lt; _size193; ++_i197)
            uint32_t _size249;
            ::apache::thrift::protocol::TType _etype252;
            xfer += iprot-&gt;readSetBegin(_etype252, _size249);
            uint32_t _i253;
            for (_i253 = 0; _i253 &lt; _size249; ++_i253)
             {
              std::string _elem198;
              xfer += iprot-&gt;readString(_elem198);
              this-&gt;tables.insert(_elem198);
              std::string _elem254;
              xfer += iprot-&gt;readString(_elem254);
              this-&gt;tables.insert(_elem254);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -3719,6 +4075,7 @@ uint32_t AccumuloProxy_getDiskUsage_args::read(::apache::thrift::protocol::TProt
 
 uint32_t AccumuloProxy_getDiskUsage_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getDiskUsage_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -3728,10 +4085,10 @@ uint32_t AccumuloProxy_getDiskUsage_args::write(::apache::thrift::protocol::TPro
   xfer += oprot-&gt;writeFieldBegin("tables", ::apache::thrift::protocol::T_SET, 2);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;tables.size()));
    std::set&lt;std::string&gt; ::const_iterator _iter199;
    for (_iter199 = this-&gt;tables.begin(); _iter199 != this-&gt;tables.end(); ++_iter199)
    std::set&lt;std::string&gt; ::const_iterator _iter255;
    for (_iter255 = this-&gt;tables.begin(); _iter255 != this-&gt;tables.end(); ++_iter255)
     {
      xfer += oprot-&gt;writeString((*_iter199));
      xfer += oprot-&gt;writeString((*_iter255));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -3742,8 +4099,14 @@ uint32_t AccumuloProxy_getDiskUsage_args::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_getDiskUsage_pargs::~AccumuloProxy_getDiskUsage_pargs() throw() {
}


 uint32_t AccumuloProxy_getDiskUsage_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getDiskUsage_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -3753,10 +4116,10 @@ uint32_t AccumuloProxy_getDiskUsage_pargs::write(::apache::thrift::protocol::TPr
   xfer += oprot-&gt;writeFieldBegin("tables", ::apache::thrift::protocol::T_SET, 2);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;tables)).size()));
    std::set&lt;std::string&gt; ::const_iterator _iter200;
    for (_iter200 = (*(this-&gt;tables)).begin(); _iter200 != (*(this-&gt;tables)).end(); ++_iter200)
    std::set&lt;std::string&gt; ::const_iterator _iter256;
    for (_iter256 = (*(this-&gt;tables)).begin(); _iter256 != (*(this-&gt;tables)).end(); ++_iter256)
     {
      xfer += oprot-&gt;writeString((*_iter200));
      xfer += oprot-&gt;writeString((*_iter256));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -3767,8 +4130,14 @@ uint32_t AccumuloProxy_getDiskUsage_pargs::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_getDiskUsage_result::~AccumuloProxy_getDiskUsage_result() throw() {
}


 uint32_t AccumuloProxy_getDiskUsage_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3791,14 +4160,14 @@ uint32_t AccumuloProxy_getDiskUsage_result::read(::apache::thrift::protocol::TPr
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;success.clear();
            uint32_t _size201;
            ::apache::thrift::protocol::TType _etype204;
            xfer += iprot-&gt;readListBegin(_etype204, _size201);
            this-&gt;success.resize(_size201);
            uint32_t _i205;
            for (_i205 = 0; _i205 &lt; _size201; ++_i205)
            uint32_t _size257;
            ::apache::thrift::protocol::TType _etype260;
            xfer += iprot-&gt;readListBegin(_etype260, _size257);
            this-&gt;success.resize(_size257);
            uint32_t _i261;
            for (_i261 = 0; _i261 &lt; _size257; ++_i261)
             {
              xfer += this-&gt;success[_i205].read(iprot);
              xfer += this-&gt;success[_i261].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -3853,10 +4222,10 @@ uint32_t AccumuloProxy_getDiskUsage_result::write(::apache::thrift::protocol::TP
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_LIST, 0);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::vector&lt;DiskUsage&gt; ::const_iterator _iter206;
      for (_iter206 = this-&gt;success.begin(); _iter206 != this-&gt;success.end(); ++_iter206)
      std::vector&lt;DiskUsage&gt; ::const_iterator _iter262;
      for (_iter262 = this-&gt;success.begin(); _iter262 != this-&gt;success.end(); ++_iter262)
       {
        xfer += (*_iter206).write(oprot);
        xfer += (*_iter262).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -3879,8 +4248,14 @@ uint32_t AccumuloProxy_getDiskUsage_result::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_getDiskUsage_presult::~AccumuloProxy_getDiskUsage_presult() throw() {
}


 uint32_t AccumuloProxy_getDiskUsage_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3903,14 +4278,14 @@ uint32_t AccumuloProxy_getDiskUsage_presult::read(::apache::thrift::protocol::TP
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size207;
            ::apache::thrift::protocol::TType _etype210;
            xfer += iprot-&gt;readListBegin(_etype210, _size207);
            (*(this-&gt;success)).resize(_size207);
            uint32_t _i211;
            for (_i211 = 0; _i211 &lt; _size207; ++_i211)
            uint32_t _size263;
            ::apache::thrift::protocol::TType _etype266;
            xfer += iprot-&gt;readListBegin(_etype266, _size263);
            (*(this-&gt;success)).resize(_size263);
            uint32_t _i267;
            for (_i267 = 0; _i267 &lt; _size263; ++_i267)
             {
              xfer += (*(this-&gt;success))[_i211].read(iprot);
              xfer += (*(this-&gt;success))[_i267].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -3955,8 +4330,14 @@ uint32_t AccumuloProxy_getDiskUsage_presult::read(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_getLocalityGroups_args::~AccumuloProxy_getLocalityGroups_args() throw() {
}


 uint32_t AccumuloProxy_getLocalityGroups_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4005,6 +4386,7 @@ uint32_t AccumuloProxy_getLocalityGroups_args::read(::apache::thrift::protocol::
 
 uint32_t AccumuloProxy_getLocalityGroups_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getLocalityGroups_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4020,8 +4402,14 @@ uint32_t AccumuloProxy_getLocalityGroups_args::write(::apache::thrift::protocol:
   return xfer;
 }
 
uint32_t AccumuloProxy_getLocalityGroups_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
  uint32_t xfer = 0;

AccumuloProxy_getLocalityGroups_pargs::~AccumuloProxy_getLocalityGroups_pargs() throw() {
}


uint32_t AccumuloProxy_getLocalityGroups_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
  uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getLocalityGroups_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4037,8 +4425,14 @@ uint32_t AccumuloProxy_getLocalityGroups_pargs::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_getLocalityGroups_result::~AccumuloProxy_getLocalityGroups_result() throw() {
}


 uint32_t AccumuloProxy_getLocalityGroups_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4061,27 +4455,27 @@ uint32_t AccumuloProxy_getLocalityGroups_result::read(::apache::thrift::protocol
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size212;
            ::apache::thrift::protocol::TType _ktype213;
            ::apache::thrift::protocol::TType _vtype214;
            xfer += iprot-&gt;readMapBegin(_ktype213, _vtype214, _size212);
            uint32_t _i216;
            for (_i216 = 0; _i216 &lt; _size212; ++_i216)
            uint32_t _size268;
            ::apache::thrift::protocol::TType _ktype269;
            ::apache::thrift::protocol::TType _vtype270;
            xfer += iprot-&gt;readMapBegin(_ktype269, _vtype270, _size268);
            uint32_t _i272;
            for (_i272 = 0; _i272 &lt; _size268; ++_i272)
             {
              std::string _key217;
              xfer += iprot-&gt;readString(_key217);
              std::set&lt;std::string&gt; &amp; _val218 = this-&gt;success[_key217];
              std::string _key273;
              xfer += iprot-&gt;readString(_key273);
              std::set&lt;std::string&gt; &amp; _val274 = this-&gt;success[_key273];
               {
                _val218.clear();
                uint32_t _size219;
                ::apache::thrift::protocol::TType _etype222;
                xfer += iprot-&gt;readSetBegin(_etype222, _size219);
                uint32_t _i223;
                for (_i223 = 0; _i223 &lt; _size219; ++_i223)
                _val274.clear();
                uint32_t _size275;
                ::apache::thrift::protocol::TType _etype278;
                xfer += iprot-&gt;readSetBegin(_etype278, _size275);
                uint32_t _i279;
                for (_i279 = 0; _i279 &lt; _size275; ++_i279)
                 {
                  std::string _elem224;
                  xfer += iprot-&gt;readString(_elem224);
                  _val218.insert(_elem224);
                  std::string _elem280;
                  xfer += iprot-&gt;readString(_elem280);
                  _val274.insert(_elem280);
                 }
                 xfer += iprot-&gt;readSetEnd();
               }
@@ -4139,16 +4533,16 @@ uint32_t AccumuloProxy_getLocalityGroups_result::write(::apache::thrift::protoco
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_SET, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, std::set&lt;std::string&gt; &gt; ::const_iterator _iter225;
      for (_iter225 = this-&gt;success.begin(); _iter225 != this-&gt;success.end(); ++_iter225)
      std::map&lt;std::string, std::set&lt;std::string&gt; &gt; ::const_iterator _iter281;
      for (_iter281 = this-&gt;success.begin(); _iter281 != this-&gt;success.end(); ++_iter281)
       {
        xfer += oprot-&gt;writeString(_iter225-&gt;first);
        xfer += oprot-&gt;writeString(_iter281-&gt;first);
         {
          xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(_iter225-&gt;second.size()));
          std::set&lt;std::string&gt; ::const_iterator _iter226;
          for (_iter226 = _iter225-&gt;second.begin(); _iter226 != _iter225-&gt;second.end(); ++_iter226)
          xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(_iter281-&gt;second.size()));
          std::set&lt;std::string&gt; ::const_iterator _iter282;
          for (_iter282 = _iter281-&gt;second.begin(); _iter282 != _iter281-&gt;second.end(); ++_iter282)
           {
            xfer += oprot-&gt;writeString((*_iter226));
            xfer += oprot-&gt;writeString((*_iter282));
           }
           xfer += oprot-&gt;writeSetEnd();
         }
@@ -4174,8 +4568,14 @@ uint32_t AccumuloProxy_getLocalityGroups_result::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_getLocalityGroups_presult::~AccumuloProxy_getLocalityGroups_presult() throw() {
}


 uint32_t AccumuloProxy_getLocalityGroups_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4198,27 +4598,27 @@ uint32_t AccumuloProxy_getLocalityGroups_presult::read(::apache::thrift::protoco
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size227;
            ::apache::thrift::protocol::TType _ktype228;
            ::apache::thrift::protocol::TType _vtype229;
            xfer += iprot-&gt;readMapBegin(_ktype228, _vtype229, _size227);
            uint32_t _i231;
            for (_i231 = 0; _i231 &lt; _size227; ++_i231)
            uint32_t _size283;
            ::apache::thrift::protocol::TType _ktype284;
            ::apache::thrift::protocol::TType _vtype285;
            xfer += iprot-&gt;readMapBegin(_ktype284, _vtype285, _size283);
            uint32_t _i287;
            for (_i287 = 0; _i287 &lt; _size283; ++_i287)
             {
              std::string _key232;
              xfer += iprot-&gt;readString(_key232);
              std::set&lt;std::string&gt; &amp; _val233 = (*(this-&gt;success))[_key232];
              std::string _key288;
              xfer += iprot-&gt;readString(_key288);
              std::set&lt;std::string&gt; &amp; _val289 = (*(this-&gt;success))[_key288];
               {
                _val233.clear();
                uint32_t _size234;
                ::apache::thrift::protocol::TType _etype237;
                xfer += iprot-&gt;readSetBegin(_etype237, _size234);
                uint32_t _i238;
                for (_i238 = 0; _i238 &lt; _size234; ++_i238)
                _val289.clear();
                uint32_t _size290;
                ::apache::thrift::protocol::TType _etype293;
                xfer += iprot-&gt;readSetBegin(_etype293, _size290);
                uint32_t _i294;
                for (_i294 = 0; _i294 &lt; _size290; ++_i294)
                 {
                  std::string _elem239;
                  xfer += iprot-&gt;readString(_elem239);
                  _val233.insert(_elem239);
                  std::string _elem295;
                  xfer += iprot-&gt;readString(_elem295);
                  _val289.insert(_elem295);
                 }
                 xfer += iprot-&gt;readSetEnd();
               }
@@ -4266,8 +4666,14 @@ uint32_t AccumuloProxy_getLocalityGroups_presult::read(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_getIteratorSetting_args::~AccumuloProxy_getIteratorSetting_args() throw() {
}


 uint32_t AccumuloProxy_getIteratorSetting_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4312,9 +4718,9 @@ uint32_t AccumuloProxy_getIteratorSetting_args::read(::apache::thrift::protocol:
         break;
       case 4:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast240;
          xfer += iprot-&gt;readI32(ecast240);
          this-&gt;scope = (IteratorScope::type)ecast240;
          int32_t ecast296;
          xfer += iprot-&gt;readI32(ecast296);
          this-&gt;scope = (IteratorScope::type)ecast296;
           this-&gt;__isset.scope = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -4334,6 +4740,7 @@ uint32_t AccumuloProxy_getIteratorSetting_args::read(::apache::thrift::protocol:
 
 uint32_t AccumuloProxy_getIteratorSetting_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getIteratorSetting_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4357,8 +4764,14 @@ uint32_t AccumuloProxy_getIteratorSetting_args::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_getIteratorSetting_pargs::~AccumuloProxy_getIteratorSetting_pargs() throw() {
}


 uint32_t AccumuloProxy_getIteratorSetting_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getIteratorSetting_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4382,8 +4795,14 @@ uint32_t AccumuloProxy_getIteratorSetting_pargs::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_getIteratorSetting_result::~AccumuloProxy_getIteratorSetting_result() throw() {
}


 uint32_t AccumuloProxy_getIteratorSetting_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4474,8 +4893,14 @@ uint32_t AccumuloProxy_getIteratorSetting_result::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_getIteratorSetting_presult::~AccumuloProxy_getIteratorSetting_presult() throw() {
}


 uint32_t AccumuloProxy_getIteratorSetting_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4538,8 +4963,14 @@ uint32_t AccumuloProxy_getIteratorSetting_presult::read(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_getMaxRow_args::~AccumuloProxy_getMaxRow_args() throw() {
}


 uint32_t AccumuloProxy_getMaxRow_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4578,15 +5009,15 @@ uint32_t AccumuloProxy_getMaxRow_args::read(::apache::thrift::protocol::TProtoco
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;auths.clear();
            uint32_t _size241;
            ::apache::thrift::protocol::TType _etype244;
            xfer += iprot-&gt;readSetBegin(_etype244, _size241);
            uint32_t _i245;
            for (_i245 = 0; _i245 &lt; _size241; ++_i245)
            uint32_t _size297;
            ::apache::thrift::protocol::TType _etype300;
            xfer += iprot-&gt;readSetBegin(_etype300, _size297);
            uint32_t _i301;
            for (_i301 = 0; _i301 &lt; _size297; ++_i301)
             {
              std::string _elem246;
              xfer += iprot-&gt;readBinary(_elem246);
              this-&gt;auths.insert(_elem246);
              std::string _elem302;
              xfer += iprot-&gt;readBinary(_elem302);
              this-&gt;auths.insert(_elem302);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -4641,6 +5072,7 @@ uint32_t AccumuloProxy_getMaxRow_args::read(::apache::thrift::protocol::TProtoco
 
 uint32_t AccumuloProxy_getMaxRow_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getMaxRow_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4654,10 +5086,10 @@ uint32_t AccumuloProxy_getMaxRow_args::write(::apache::thrift::protocol::TProtoc
   xfer += oprot-&gt;writeFieldBegin("auths", ::apache::thrift::protocol::T_SET, 3);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;auths.size()));
    std::set&lt;std::string&gt; ::const_iterator _iter247;
    for (_iter247 = this-&gt;auths.begin(); _iter247 != this-&gt;auths.end(); ++_iter247)
    std::set&lt;std::string&gt; ::const_iterator _iter303;
    for (_iter303 = this-&gt;auths.begin(); _iter303 != this-&gt;auths.end(); ++_iter303)
     {
      xfer += oprot-&gt;writeBinary((*_iter247));
      xfer += oprot-&gt;writeBinary((*_iter303));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -4684,8 +5116,14 @@ uint32_t AccumuloProxy_getMaxRow_args::write(::apache::thrift::protocol::TProtoc
   return xfer;
 }
 

AccumuloProxy_getMaxRow_pargs::~AccumuloProxy_getMaxRow_pargs() throw() {
}


 uint32_t AccumuloProxy_getMaxRow_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getMaxRow_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4699,10 +5137,10 @@ uint32_t AccumuloProxy_getMaxRow_pargs::write(::apache::thrift::protocol::TProto
   xfer += oprot-&gt;writeFieldBegin("auths", ::apache::thrift::protocol::T_SET, 3);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;auths)).size()));
    std::set&lt;std::string&gt; ::const_iterator _iter248;
    for (_iter248 = (*(this-&gt;auths)).begin(); _iter248 != (*(this-&gt;auths)).end(); ++_iter248)
    std::set&lt;std::string&gt; ::const_iterator _iter304;
    for (_iter304 = (*(this-&gt;auths)).begin(); _iter304 != (*(this-&gt;auths)).end(); ++_iter304)
     {
      xfer += oprot-&gt;writeBinary((*_iter248));
      xfer += oprot-&gt;writeBinary((*_iter304));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -4729,8 +5167,14 @@ uint32_t AccumuloProxy_getMaxRow_pargs::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_getMaxRow_result::~AccumuloProxy_getMaxRow_result() throw() {
}


 uint32_t AccumuloProxy_getMaxRow_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4821,8 +5265,14 @@ uint32_t AccumuloProxy_getMaxRow_result::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_getMaxRow_presult::~AccumuloProxy_getMaxRow_presult() throw() {
}


 uint32_t AccumuloProxy_getMaxRow_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4885,8 +5335,14 @@ uint32_t AccumuloProxy_getMaxRow_presult::read(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_getTableProperties_args::~AccumuloProxy_getTableProperties_args() throw() {
}


 uint32_t AccumuloProxy_getTableProperties_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4935,6 +5391,7 @@ uint32_t AccumuloProxy_getTableProperties_args::read(::apache::thrift::protocol:
 
 uint32_t AccumuloProxy_getTableProperties_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getTableProperties_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4950,8 +5407,14 @@ uint32_t AccumuloProxy_getTableProperties_args::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_getTableProperties_pargs::~AccumuloProxy_getTableProperties_pargs() throw() {
}


 uint32_t AccumuloProxy_getTableProperties_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getTableProperties_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -4967,8 +5430,14 @@ uint32_t AccumuloProxy_getTableProperties_pargs::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_getTableProperties_result::~AccumuloProxy_getTableProperties_result() throw() {
}


 uint32_t AccumuloProxy_getTableProperties_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -4991,17 +5460,17 @@ uint32_t AccumuloProxy_getTableProperties_result::read(::apache::thrift::protoco
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size249;
            ::apache::thrift::protocol::TType _ktype250;
            ::apache::thrift::protocol::TType _vtype251;
            xfer += iprot-&gt;readMapBegin(_ktype250, _vtype251, _size249);
            uint32_t _i253;
            for (_i253 = 0; _i253 &lt; _size249; ++_i253)
            uint32_t _size305;
            ::apache::thrift::protocol::TType _ktype306;
            ::apache::thrift::protocol::TType _vtype307;
            xfer += iprot-&gt;readMapBegin(_ktype306, _vtype307, _size305);
            uint32_t _i309;
            for (_i309 = 0; _i309 &lt; _size305; ++_i309)
             {
              std::string _key254;
              xfer += iprot-&gt;readString(_key254);
              std::string&amp; _val255 = this-&gt;success[_key254];
              xfer += iprot-&gt;readString(_val255);
              std::string _key310;
              xfer += iprot-&gt;readString(_key310);
              std::string&amp; _val311 = this-&gt;success[_key310];
              xfer += iprot-&gt;readString(_val311);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -5056,11 +5525,11 @@ uint32_t AccumuloProxy_getTableProperties_result::write(::apache::thrift::protoc
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter256;
      for (_iter256 = this-&gt;success.begin(); _iter256 != this-&gt;success.end(); ++_iter256)
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter312;
      for (_iter312 = this-&gt;success.begin(); _iter312 != this-&gt;success.end(); ++_iter312)
       {
        xfer += oprot-&gt;writeString(_iter256-&gt;first);
        xfer += oprot-&gt;writeString(_iter256-&gt;second);
        xfer += oprot-&gt;writeString(_iter312-&gt;first);
        xfer += oprot-&gt;writeString(_iter312-&gt;second);
       }
       xfer += oprot-&gt;writeMapEnd();
     }
@@ -5083,8 +5552,14 @@ uint32_t AccumuloProxy_getTableProperties_result::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_getTableProperties_presult::~AccumuloProxy_getTableProperties_presult() throw() {
}


 uint32_t AccumuloProxy_getTableProperties_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5107,17 +5582,17 @@ uint32_t AccumuloProxy_getTableProperties_presult::read(::apache::thrift::protoc
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size257;
            ::apache::thrift::protocol::TType _ktype258;
            ::apache::thrift::protocol::TType _vtype259;
            xfer += iprot-&gt;readMapBegin(_ktype258, _vtype259, _size257);
            uint32_t _i261;
            for (_i261 = 0; _i261 &lt; _size257; ++_i261)
            uint32_t _size313;
            ::apache::thrift::protocol::TType _ktype314;
            ::apache::thrift::protocol::TType _vtype315;
            xfer += iprot-&gt;readMapBegin(_ktype314, _vtype315, _size313);
            uint32_t _i317;
            for (_i317 = 0; _i317 &lt; _size313; ++_i317)
             {
              std::string _key262;
              xfer += iprot-&gt;readString(_key262);
              std::string&amp; _val263 = (*(this-&gt;success))[_key262];
              xfer += iprot-&gt;readString(_val263);
              std::string _key318;
              xfer += iprot-&gt;readString(_key318);
              std::string&amp; _val319 = (*(this-&gt;success))[_key318];
              xfer += iprot-&gt;readString(_val319);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -5162,8 +5637,14 @@ uint32_t AccumuloProxy_getTableProperties_presult::read(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_importDirectory_args::~AccumuloProxy_importDirectory_args() throw() {
}


 uint32_t AccumuloProxy_importDirectory_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5236,6 +5717,7 @@ uint32_t AccumuloProxy_importDirectory_args::read(::apache::thrift::protocol::TP
 
 uint32_t AccumuloProxy_importDirectory_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_importDirectory_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -5263,8 +5745,14 @@ uint32_t AccumuloProxy_importDirectory_args::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_importDirectory_pargs::~AccumuloProxy_importDirectory_pargs() throw() {
}


 uint32_t AccumuloProxy_importDirectory_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_importDirectory_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -5292,8 +5780,14 @@ uint32_t AccumuloProxy_importDirectory_pargs::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_importDirectory_result::~AccumuloProxy_importDirectory_result() throw() {
}


 uint32_t AccumuloProxy_importDirectory_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5372,8 +5866,14 @@ uint32_t AccumuloProxy_importDirectory_result::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_importDirectory_presult::~AccumuloProxy_importDirectory_presult() throw() {
}


 uint32_t AccumuloProxy_importDirectory_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5428,8 +5928,14 @@ uint32_t AccumuloProxy_importDirectory_presult::read(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_importTable_args::~AccumuloProxy_importTable_args() throw() {
}


 uint32_t AccumuloProxy_importTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5486,6 +5992,7 @@ uint32_t AccumuloProxy_importTable_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_importTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_importTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -5505,8 +6012,14 @@ uint32_t AccumuloProxy_importTable_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_importTable_pargs::~AccumuloProxy_importTable_pargs() throw() {
}


 uint32_t AccumuloProxy_importTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_importTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -5526,8 +6039,14 @@ uint32_t AccumuloProxy_importTable_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_importTable_result::~AccumuloProxy_importTable_result() throw() {
}


 uint32_t AccumuloProxy_importTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5606,8 +6125,14 @@ uint32_t AccumuloProxy_importTable_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_importTable_presult::~AccumuloProxy_importTable_presult() throw() {
}


 uint32_t AccumuloProxy_importTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5662,8 +6187,14 @@ uint32_t AccumuloProxy_importTable_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_listSplits_args::~AccumuloProxy_listSplits_args() throw() {
}


 uint32_t AccumuloProxy_listSplits_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5720,6 +6251,7 @@ uint32_t AccumuloProxy_listSplits_args::read(::apache::thrift::protocol::TProtoc
 
 uint32_t AccumuloProxy_listSplits_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listSplits_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -5739,8 +6271,14 @@ uint32_t AccumuloProxy_listSplits_args::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_listSplits_pargs::~AccumuloProxy_listSplits_pargs() throw() {
}


 uint32_t AccumuloProxy_listSplits_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listSplits_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -5760,8 +6298,14 @@ uint32_t AccumuloProxy_listSplits_pargs::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_listSplits_result::~AccumuloProxy_listSplits_result() throw() {
}


 uint32_t AccumuloProxy_listSplits_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5784,14 +6328,14 @@ uint32_t AccumuloProxy_listSplits_result::read(::apache::thrift::protocol::TProt
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;success.clear();
            uint32_t _size264;
            ::apache::thrift::protocol::TType _etype267;
            xfer += iprot-&gt;readListBegin(_etype267, _size264);
            this-&gt;success.resize(_size264);
            uint32_t _i268;
            for (_i268 = 0; _i268 &lt; _size264; ++_i268)
            uint32_t _size320;
            ::apache::thrift::protocol::TType _etype323;
            xfer += iprot-&gt;readListBegin(_etype323, _size320);
            this-&gt;success.resize(_size320);
            uint32_t _i324;
            for (_i324 = 0; _i324 &lt; _size320; ++_i324)
             {
              xfer += iprot-&gt;readBinary(this-&gt;success[_i268]);
              xfer += iprot-&gt;readBinary(this-&gt;success[_i324]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -5846,10 +6390,10 @@ uint32_t AccumuloProxy_listSplits_result::write(::apache::thrift::protocol::TPro
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_LIST, 0);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::vector&lt;std::string&gt; ::const_iterator _iter269;
      for (_iter269 = this-&gt;success.begin(); _iter269 != this-&gt;success.end(); ++_iter269)
      std::vector&lt;std::string&gt; ::const_iterator _iter325;
      for (_iter325 = this-&gt;success.begin(); _iter325 != this-&gt;success.end(); ++_iter325)
       {
        xfer += oprot-&gt;writeBinary((*_iter269));
        xfer += oprot-&gt;writeBinary((*_iter325));
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -5872,8 +6416,14 @@ uint32_t AccumuloProxy_listSplits_result::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_listSplits_presult::~AccumuloProxy_listSplits_presult() throw() {
}


 uint32_t AccumuloProxy_listSplits_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5896,14 +6446,14 @@ uint32_t AccumuloProxy_listSplits_presult::read(::apache::thrift::protocol::TPro
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size270;
            ::apache::thrift::protocol::TType _etype273;
            xfer += iprot-&gt;readListBegin(_etype273, _size270);
            (*(this-&gt;success)).resize(_size270);
            uint32_t _i274;
            for (_i274 = 0; _i274 &lt; _size270; ++_i274)
            uint32_t _size326;
            ::apache::thrift::protocol::TType _etype329;
            xfer += iprot-&gt;readListBegin(_etype329, _size326);
            (*(this-&gt;success)).resize(_size326);
            uint32_t _i330;
            for (_i330 = 0; _i330 &lt; _size326; ++_i330)
             {
              xfer += iprot-&gt;readBinary((*(this-&gt;success))[_i274]);
              xfer += iprot-&gt;readBinary((*(this-&gt;success))[_i330]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -5948,8 +6498,14 @@ uint32_t AccumuloProxy_listSplits_presult::read(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_listTables_args::~AccumuloProxy_listTables_args() throw() {
}


 uint32_t AccumuloProxy_listTables_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -5990,6 +6546,7 @@ uint32_t AccumuloProxy_listTables_args::read(::apache::thrift::protocol::TProtoc
 
 uint32_t AccumuloProxy_listTables_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listTables_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6001,8 +6558,14 @@ uint32_t AccumuloProxy_listTables_args::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_listTables_pargs::~AccumuloProxy_listTables_pargs() throw() {
}


 uint32_t AccumuloProxy_listTables_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listTables_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6014,8 +6577,14 @@ uint32_t AccumuloProxy_listTables_pargs::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_listTables_result::~AccumuloProxy_listTables_result() throw() {
}


 uint32_t AccumuloProxy_listTables_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6038,15 +6607,15 @@ uint32_t AccumuloProxy_listTables_result::read(::apache::thrift::protocol::TProt
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;success.clear();
            uint32_t _size275;
            ::apache::thrift::protocol::TType _etype278;
            xfer += iprot-&gt;readSetBegin(_etype278, _size275);
            uint32_t _i279;
            for (_i279 = 0; _i279 &lt; _size275; ++_i279)
            uint32_t _size331;
            ::apache::thrift::protocol::TType _etype334;
            xfer += iprot-&gt;readSetBegin(_etype334, _size331);
            uint32_t _i335;
            for (_i335 = 0; _i335 &lt; _size331; ++_i335)
             {
              std::string _elem280;
              xfer += iprot-&gt;readString(_elem280);
              this-&gt;success.insert(_elem280);
              std::string _elem336;
              xfer += iprot-&gt;readString(_elem336);
              this-&gt;success.insert(_elem336);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -6077,10 +6646,10 @@ uint32_t AccumuloProxy_listTables_result::write(::apache::thrift::protocol::TPro
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_SET, 0);
     {
       xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::set&lt;std::string&gt; ::const_iterator _iter281;
      for (_iter281 = this-&gt;success.begin(); _iter281 != this-&gt;success.end(); ++_iter281)
      std::set&lt;std::string&gt; ::const_iterator _iter337;
      for (_iter337 = this-&gt;success.begin(); _iter337 != this-&gt;success.end(); ++_iter337)
       {
        xfer += oprot-&gt;writeString((*_iter281));
        xfer += oprot-&gt;writeString((*_iter337));
       }
       xfer += oprot-&gt;writeSetEnd();
     }
@@ -6091,8 +6660,14 @@ uint32_t AccumuloProxy_listTables_result::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_listTables_presult::~AccumuloProxy_listTables_presult() throw() {
}


 uint32_t AccumuloProxy_listTables_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6115,15 +6690,15 @@ uint32_t AccumuloProxy_listTables_presult::read(::apache::thrift::protocol::TPro
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size282;
            ::apache::thrift::protocol::TType _etype285;
            xfer += iprot-&gt;readSetBegin(_etype285, _size282);
            uint32_t _i286;
            for (_i286 = 0; _i286 &lt; _size282; ++_i286)
            uint32_t _size338;
            ::apache::thrift::protocol::TType _etype341;
            xfer += iprot-&gt;readSetBegin(_etype341, _size338);
            uint32_t _i342;
            for (_i342 = 0; _i342 &lt; _size338; ++_i342)
             {
              std::string _elem287;
              xfer += iprot-&gt;readString(_elem287);
              (*(this-&gt;success)).insert(_elem287);
              std::string _elem343;
              xfer += iprot-&gt;readString(_elem343);
              (*(this-&gt;success)).insert(_elem343);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -6144,8 +6719,14 @@ uint32_t AccumuloProxy_listTables_presult::read(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_listIterators_args::~AccumuloProxy_listIterators_args() throw() {
}


 uint32_t AccumuloProxy_listIterators_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6194,6 +6775,7 @@ uint32_t AccumuloProxy_listIterators_args::read(::apache::thrift::protocol::TPro
 
 uint32_t AccumuloProxy_listIterators_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listIterators_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6209,8 +6791,14 @@ uint32_t AccumuloProxy_listIterators_args::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_listIterators_pargs::~AccumuloProxy_listIterators_pargs() throw() {
}


 uint32_t AccumuloProxy_listIterators_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listIterators_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6226,8 +6814,14 @@ uint32_t AccumuloProxy_listIterators_pargs::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_listIterators_result::~AccumuloProxy_listIterators_result() throw() {
}


 uint32_t AccumuloProxy_listIterators_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6250,29 +6844,29 @@ uint32_t AccumuloProxy_listIterators_result::read(::apache::thrift::protocol::TP
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size288;
            ::apache::thrift::protocol::TType _ktype289;
            ::apache::thrift::protocol::TType _vtype290;
            xfer += iprot-&gt;readMapBegin(_ktype289, _vtype290, _size288);
            uint32_t _i292;
            for (_i292 = 0; _i292 &lt; _size288; ++_i292)
            uint32_t _size344;
            ::apache::thrift::protocol::TType _ktype345;
            ::apache::thrift::protocol::TType _vtype346;
            xfer += iprot-&gt;readMapBegin(_ktype345, _vtype346, _size344);
            uint32_t _i348;
            for (_i348 = 0; _i348 &lt; _size344; ++_i348)
             {
              std::string _key293;
              xfer += iprot-&gt;readString(_key293);
              std::set&lt;IteratorScope::type&gt; &amp; _val294 = this-&gt;success[_key293];
              std::string _key349;
              xfer += iprot-&gt;readString(_key349);
              std::set&lt;IteratorScope::type&gt; &amp; _val350 = this-&gt;success[_key349];
               {
                _val294.clear();
                uint32_t _size295;
                ::apache::thrift::protocol::TType _etype298;
                xfer += iprot-&gt;readSetBegin(_etype298, _size295);
                uint32_t _i299;
                for (_i299 = 0; _i299 &lt; _size295; ++_i299)
                _val350.clear();
                uint32_t _size351;
                ::apache::thrift::protocol::TType _etype354;
                xfer += iprot-&gt;readSetBegin(_etype354, _size351);
                uint32_t _i355;
                for (_i355 = 0; _i355 &lt; _size351; ++_i355)
                 {
                  IteratorScope::type _elem300;
                  int32_t ecast301;
                  xfer += iprot-&gt;readI32(ecast301);
                  _elem300 = (IteratorScope::type)ecast301;
                  _val294.insert(_elem300);
                  IteratorScope::type _elem356;
                  int32_t ecast357;
                  xfer += iprot-&gt;readI32(ecast357);
                  _elem356 = (IteratorScope::type)ecast357;
                  _val350.insert(_elem356);
                 }
                 xfer += iprot-&gt;readSetEnd();
               }
@@ -6330,16 +6924,16 @@ uint32_t AccumuloProxy_listIterators_result::write(::apache::thrift::protocol::T
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_SET, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt; ::const_iterator _iter302;
      for (_iter302 = this-&gt;success.begin(); _iter302 != this-&gt;success.end(); ++_iter302)
      std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt; ::const_iterator _iter358;
      for (_iter358 = this-&gt;success.begin(); _iter358 != this-&gt;success.end(); ++_iter358)
       {
        xfer += oprot-&gt;writeString(_iter302-&gt;first);
        xfer += oprot-&gt;writeString(_iter358-&gt;first);
         {
          xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;(_iter302-&gt;second.size()));
          std::set&lt;IteratorScope::type&gt; ::const_iterator _iter303;
          for (_iter303 = _iter302-&gt;second.begin(); _iter303 != _iter302-&gt;second.end(); ++_iter303)
          xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;(_iter358-&gt;second.size()));
          std::set&lt;IteratorScope::type&gt; ::const_iterator _iter359;
          for (_iter359 = _iter358-&gt;second.begin(); _iter359 != _iter358-&gt;second.end(); ++_iter359)
           {
            xfer += oprot-&gt;writeI32((int32_t)(*_iter303));
            xfer += oprot-&gt;writeI32((int32_t)(*_iter359));
           }
           xfer += oprot-&gt;writeSetEnd();
         }
@@ -6365,8 +6959,14 @@ uint32_t AccumuloProxy_listIterators_result::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_listIterators_presult::~AccumuloProxy_listIterators_presult() throw() {
}


 uint32_t AccumuloProxy_listIterators_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6389,29 +6989,29 @@ uint32_t AccumuloProxy_listIterators_presult::read(::apache::thrift::protocol::T
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size304;
            ::apache::thrift::protocol::TType _ktype305;
            ::apache::thrift::protocol::TType _vtype306;
            xfer += iprot-&gt;readMapBegin(_ktype305, _vtype306, _size304);
            uint32_t _i308;
            for (_i308 = 0; _i308 &lt; _size304; ++_i308)
            uint32_t _size360;
            ::apache::thrift::protocol::TType _ktype361;
            ::apache::thrift::protocol::TType _vtype362;
            xfer += iprot-&gt;readMapBegin(_ktype361, _vtype362, _size360);
            uint32_t _i364;
            for (_i364 = 0; _i364 &lt; _size360; ++_i364)
             {
              std::string _key309;
              xfer += iprot-&gt;readString(_key309);
              std::set&lt;IteratorScope::type&gt; &amp; _val310 = (*(this-&gt;success))[_key309];
              std::string _key365;
              xfer += iprot-&gt;readString(_key365);
              std::set&lt;IteratorScope::type&gt; &amp; _val366 = (*(this-&gt;success))[_key365];
               {
                _val310.clear();
                uint32_t _size311;
                ::apache::thrift::protocol::TType _etype314;
                xfer += iprot-&gt;readSetBegin(_etype314, _size311);
                uint32_t _i315;
                for (_i315 = 0; _i315 &lt; _size311; ++_i315)
                _val366.clear();
                uint32_t _size367;
                ::apache::thrift::protocol::TType _etype370;
                xfer += iprot-&gt;readSetBegin(_etype370, _size367);
                uint32_t _i371;
                for (_i371 = 0; _i371 &lt; _size367; ++_i371)
                 {
                  IteratorScope::type _elem316;
                  int32_t ecast317;
                  xfer += iprot-&gt;readI32(ecast317);
                  _elem316 = (IteratorScope::type)ecast317;
                  _val310.insert(_elem316);
                  IteratorScope::type _elem372;
                  int32_t ecast373;
                  xfer += iprot-&gt;readI32(ecast373);
                  _elem372 = (IteratorScope::type)ecast373;
                  _val366.insert(_elem372);
                 }
                 xfer += iprot-&gt;readSetEnd();
               }
@@ -6459,8 +7059,14 @@ uint32_t AccumuloProxy_listIterators_presult::read(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_listConstraints_args::~AccumuloProxy_listConstraints_args() throw() {
}


 uint32_t AccumuloProxy_listConstraints_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6509,6 +7115,7 @@ uint32_t AccumuloProxy_listConstraints_args::read(::apache::thrift::protocol::TP
 
 uint32_t AccumuloProxy_listConstraints_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listConstraints_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6524,8 +7131,14 @@ uint32_t AccumuloProxy_listConstraints_args::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_listConstraints_pargs::~AccumuloProxy_listConstraints_pargs() throw() {
}


 uint32_t AccumuloProxy_listConstraints_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listConstraints_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6541,8 +7154,14 @@ uint32_t AccumuloProxy_listConstraints_pargs::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_listConstraints_result::~AccumuloProxy_listConstraints_result() throw() {
}


 uint32_t AccumuloProxy_listConstraints_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6565,17 +7184,17 @@ uint32_t AccumuloProxy_listConstraints_result::read(::apache::thrift::protocol::
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size318;
            ::apache::thrift::protocol::TType _ktype319;
            ::apache::thrift::protocol::TType _vtype320;
            xfer += iprot-&gt;readMapBegin(_ktype319, _vtype320, _size318);
            uint32_t _i322;
            for (_i322 = 0; _i322 &lt; _size318; ++_i322)
            uint32_t _size374;
            ::apache::thrift::protocol::TType _ktype375;
            ::apache::thrift::protocol::TType _vtype376;
            xfer += iprot-&gt;readMapBegin(_ktype375, _vtype376, _size374);
            uint32_t _i378;
            for (_i378 = 0; _i378 &lt; _size374; ++_i378)
             {
              std::string _key323;
              xfer += iprot-&gt;readString(_key323);
              int32_t&amp; _val324 = this-&gt;success[_key323];
              xfer += iprot-&gt;readI32(_val324);
              std::string _key379;
              xfer += iprot-&gt;readString(_key379);
              int32_t&amp; _val380 = this-&gt;success[_key379];
              xfer += iprot-&gt;readI32(_val380);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -6630,11 +7249,11 @@ uint32_t AccumuloProxy_listConstraints_result::write(::apache::thrift::protocol:
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, int32_t&gt; ::const_iterator _iter325;
      for (_iter325 = this-&gt;success.begin(); _iter325 != this-&gt;success.end(); ++_iter325)
      std::map&lt;std::string, int32_t&gt; ::const_iterator _iter381;
      for (_iter381 = this-&gt;success.begin(); _iter381 != this-&gt;success.end(); ++_iter381)
       {
        xfer += oprot-&gt;writeString(_iter325-&gt;first);
        xfer += oprot-&gt;writeI32(_iter325-&gt;second);
        xfer += oprot-&gt;writeString(_iter381-&gt;first);
        xfer += oprot-&gt;writeI32(_iter381-&gt;second);
       }
       xfer += oprot-&gt;writeMapEnd();
     }
@@ -6657,8 +7276,14 @@ uint32_t AccumuloProxy_listConstraints_result::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_listConstraints_presult::~AccumuloProxy_listConstraints_presult() throw() {
}


 uint32_t AccumuloProxy_listConstraints_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6681,17 +7306,17 @@ uint32_t AccumuloProxy_listConstraints_presult::read(::apache::thrift::protocol:
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size326;
            ::apache::thrift::protocol::TType _ktype327;
            ::apache::thrift::protocol::TType _vtype328;
            xfer += iprot-&gt;readMapBegin(_ktype327, _vtype328, _size326);
            uint32_t _i330;
            for (_i330 = 0; _i330 &lt; _size326; ++_i330)
            uint32_t _size382;
            ::apache::thrift::protocol::TType _ktype383;
            ::apache::thrift::protocol::TType _vtype384;
            xfer += iprot-&gt;readMapBegin(_ktype383, _vtype384, _size382);
            uint32_t _i386;
            for (_i386 = 0; _i386 &lt; _size382; ++_i386)
             {
              std::string _key331;
              xfer += iprot-&gt;readString(_key331);
              int32_t&amp; _val332 = (*(this-&gt;success))[_key331];
              xfer += iprot-&gt;readI32(_val332);
              std::string _key387;
              xfer += iprot-&gt;readString(_key387);
              int32_t&amp; _val388 = (*(this-&gt;success))[_key387];
              xfer += iprot-&gt;readI32(_val388);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -6736,8 +7361,14 @@ uint32_t AccumuloProxy_listConstraints_presult::read(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_mergeTablets_args::~AccumuloProxy_mergeTablets_args() throw() {
}


 uint32_t AccumuloProxy_mergeTablets_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6802,6 +7433,7 @@ uint32_t AccumuloProxy_mergeTablets_args::read(::apache::thrift::protocol::TProt
 
 uint32_t AccumuloProxy_mergeTablets_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_mergeTablets_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6825,8 +7457,14 @@ uint32_t AccumuloProxy_mergeTablets_args::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_mergeTablets_pargs::~AccumuloProxy_mergeTablets_pargs() throw() {
}


 uint32_t AccumuloProxy_mergeTablets_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_mergeTablets_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -6850,8 +7488,14 @@ uint32_t AccumuloProxy_mergeTablets_pargs::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_mergeTablets_result::~AccumuloProxy_mergeTablets_result() throw() {
}


 uint32_t AccumuloProxy_mergeTablets_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6930,8 +7574,14 @@ uint32_t AccumuloProxy_mergeTablets_result::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_mergeTablets_presult::~AccumuloProxy_mergeTablets_presult() throw() {
}


 uint32_t AccumuloProxy_mergeTablets_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -6986,8 +7636,14 @@ uint32_t AccumuloProxy_mergeTablets_presult::read(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_offlineTable_args::~AccumuloProxy_offlineTable_args() throw() {
}


 uint32_t AccumuloProxy_offlineTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7044,6 +7700,7 @@ uint32_t AccumuloProxy_offlineTable_args::read(::apache::thrift::protocol::TProt
 
 uint32_t AccumuloProxy_offlineTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_offlineTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7063,8 +7720,14 @@ uint32_t AccumuloProxy_offlineTable_args::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_offlineTable_pargs::~AccumuloProxy_offlineTable_pargs() throw() {
}


 uint32_t AccumuloProxy_offlineTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_offlineTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7084,8 +7747,14 @@ uint32_t AccumuloProxy_offlineTable_pargs::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_offlineTable_result::~AccumuloProxy_offlineTable_result() throw() {
}


 uint32_t AccumuloProxy_offlineTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7164,8 +7833,14 @@ uint32_t AccumuloProxy_offlineTable_result::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_offlineTable_presult::~AccumuloProxy_offlineTable_presult() throw() {
}


 uint32_t AccumuloProxy_offlineTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7220,8 +7895,14 @@ uint32_t AccumuloProxy_offlineTable_presult::read(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_onlineTable_args::~AccumuloProxy_onlineTable_args() throw() {
}


 uint32_t AccumuloProxy_onlineTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7278,6 +7959,7 @@ uint32_t AccumuloProxy_onlineTable_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_onlineTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_onlineTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7297,8 +7979,14 @@ uint32_t AccumuloProxy_onlineTable_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_onlineTable_pargs::~AccumuloProxy_onlineTable_pargs() throw() {
}


 uint32_t AccumuloProxy_onlineTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_onlineTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7318,8 +8006,14 @@ uint32_t AccumuloProxy_onlineTable_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_onlineTable_result::~AccumuloProxy_onlineTable_result() throw() {
}


 uint32_t AccumuloProxy_onlineTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7398,8 +8092,14 @@ uint32_t AccumuloProxy_onlineTable_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_onlineTable_presult::~AccumuloProxy_onlineTable_presult() throw() {
}


 uint32_t AccumuloProxy_onlineTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7454,8 +8154,14 @@ uint32_t AccumuloProxy_onlineTable_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_removeConstraint_args::~AccumuloProxy_removeConstraint_args() throw() {
}


 uint32_t AccumuloProxy_removeConstraint_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7512,6 +8218,7 @@ uint32_t AccumuloProxy_removeConstraint_args::read(::apache::thrift::protocol::T
 
 uint32_t AccumuloProxy_removeConstraint_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeConstraint_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7531,8 +8238,14 @@ uint32_t AccumuloProxy_removeConstraint_args::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_removeConstraint_pargs::~AccumuloProxy_removeConstraint_pargs() throw() {
}


 uint32_t AccumuloProxy_removeConstraint_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeConstraint_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7552,8 +8265,14 @@ uint32_t AccumuloProxy_removeConstraint_pargs::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_removeConstraint_result::~AccumuloProxy_removeConstraint_result() throw() {
}


 uint32_t AccumuloProxy_removeConstraint_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7632,8 +8351,14 @@ uint32_t AccumuloProxy_removeConstraint_result::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_removeConstraint_presult::~AccumuloProxy_removeConstraint_presult() throw() {
}


 uint32_t AccumuloProxy_removeConstraint_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7688,8 +8413,14 @@ uint32_t AccumuloProxy_removeConstraint_presult::read(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_removeIterator_args::~AccumuloProxy_removeIterator_args() throw() {
}


 uint32_t AccumuloProxy_removeIterator_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7736,17 +8467,17 @@ uint32_t AccumuloProxy_removeIterator_args::read(::apache::thrift::protocol::TPr
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;scopes.clear();
            uint32_t _size333;
            ::apache::thrift::protocol::TType _etype336;
            xfer += iprot-&gt;readSetBegin(_etype336, _size333);
            uint32_t _i337;
            for (_i337 = 0; _i337 &lt; _size333; ++_i337)
            uint32_t _size389;
            ::apache::thrift::protocol::TType _etype392;
            xfer += iprot-&gt;readSetBegin(_etype392, _size389);
            uint32_t _i393;
            for (_i393 = 0; _i393 &lt; _size389; ++_i393)
             {
              IteratorScope::type _elem338;
              int32_t ecast339;
              xfer += iprot-&gt;readI32(ecast339);
              _elem338 = (IteratorScope::type)ecast339;
              this-&gt;scopes.insert(_elem338);
              IteratorScope::type _elem394;
              int32_t ecast395;
              xfer += iprot-&gt;readI32(ecast395);
              _elem394 = (IteratorScope::type)ecast395;
              this-&gt;scopes.insert(_elem394);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -7769,6 +8500,7 @@ uint32_t AccumuloProxy_removeIterator_args::read(::apache::thrift::protocol::TPr
 
 uint32_t AccumuloProxy_removeIterator_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeIterator_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7786,10 +8518,10 @@ uint32_t AccumuloProxy_removeIterator_args::write(::apache::thrift::protocol::TP
   xfer += oprot-&gt;writeFieldBegin("scopes", ::apache::thrift::protocol::T_SET, 4);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;(this-&gt;scopes.size()));
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter340;
    for (_iter340 = this-&gt;scopes.begin(); _iter340 != this-&gt;scopes.end(); ++_iter340)
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter396;
    for (_iter396 = this-&gt;scopes.begin(); _iter396 != this-&gt;scopes.end(); ++_iter396)
     {
      xfer += oprot-&gt;writeI32((int32_t)(*_iter340));
      xfer += oprot-&gt;writeI32((int32_t)(*_iter396));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -7800,8 +8532,14 @@ uint32_t AccumuloProxy_removeIterator_args::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_removeIterator_pargs::~AccumuloProxy_removeIterator_pargs() throw() {
}


 uint32_t AccumuloProxy_removeIterator_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeIterator_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -7819,10 +8557,10 @@ uint32_t AccumuloProxy_removeIterator_pargs::write(::apache::thrift::protocol::T
   xfer += oprot-&gt;writeFieldBegin("scopes", ::apache::thrift::protocol::T_SET, 4);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;((*(this-&gt;scopes)).size()));
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter341;
    for (_iter341 = (*(this-&gt;scopes)).begin(); _iter341 != (*(this-&gt;scopes)).end(); ++_iter341)
    std::set&lt;IteratorScope::type&gt; ::const_iterator _iter397;
    for (_iter397 = (*(this-&gt;scopes)).begin(); _iter397 != (*(this-&gt;scopes)).end(); ++_iter397)
     {
      xfer += oprot-&gt;writeI32((int32_t)(*_iter341));
      xfer += oprot-&gt;writeI32((int32_t)(*_iter397));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -7833,8 +8571,14 @@ uint32_t AccumuloProxy_removeIterator_pargs::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_removeIterator_result::~AccumuloProxy_removeIterator_result() throw() {
}


 uint32_t AccumuloProxy_removeIterator_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -7913,9 +8657,15 @@ uint32_t AccumuloProxy_removeIterator_result::write(::apache::thrift::protocol::
   return xfer;
 }
 
uint32_t AccumuloProxy_removeIterator_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  uint32_t xfer = 0;
AccumuloProxy_removeIterator_presult::~AccumuloProxy_removeIterator_presult() throw() {
}


uint32_t AccumuloProxy_removeIterator_presult::read(::apache::thrift::protocol::TProtocol* iprot) {

  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
  uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
   int16_t fid;
@@ -7969,8 +8719,14 @@ uint32_t AccumuloProxy_removeIterator_presult::read(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_removeTableProperty_args::~AccumuloProxy_removeTableProperty_args() throw() {
}


 uint32_t AccumuloProxy_removeTableProperty_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8027,6 +8783,7 @@ uint32_t AccumuloProxy_removeTableProperty_args::read(::apache::thrift::protocol
 
 uint32_t AccumuloProxy_removeTableProperty_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeTableProperty_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8046,8 +8803,14 @@ uint32_t AccumuloProxy_removeTableProperty_args::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_removeTableProperty_pargs::~AccumuloProxy_removeTableProperty_pargs() throw() {
}


 uint32_t AccumuloProxy_removeTableProperty_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeTableProperty_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8067,8 +8830,14 @@ uint32_t AccumuloProxy_removeTableProperty_pargs::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_removeTableProperty_result::~AccumuloProxy_removeTableProperty_result() throw() {
}


 uint32_t AccumuloProxy_removeTableProperty_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8147,8 +8916,14 @@ uint32_t AccumuloProxy_removeTableProperty_result::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_removeTableProperty_presult::~AccumuloProxy_removeTableProperty_presult() throw() {
}


 uint32_t AccumuloProxy_removeTableProperty_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8203,8 +8978,14 @@ uint32_t AccumuloProxy_removeTableProperty_presult::read(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_renameTable_args::~AccumuloProxy_renameTable_args() throw() {
}


 uint32_t AccumuloProxy_renameTable_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8261,6 +9042,7 @@ uint32_t AccumuloProxy_renameTable_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_renameTable_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_renameTable_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8280,8 +9062,14 @@ uint32_t AccumuloProxy_renameTable_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_renameTable_pargs::~AccumuloProxy_renameTable_pargs() throw() {
}


 uint32_t AccumuloProxy_renameTable_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_renameTable_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8301,8 +9089,14 @@ uint32_t AccumuloProxy_renameTable_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_renameTable_result::~AccumuloProxy_renameTable_result() throw() {
}


 uint32_t AccumuloProxy_renameTable_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8393,8 +9187,14 @@ uint32_t AccumuloProxy_renameTable_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_renameTable_presult::~AccumuloProxy_renameTable_presult() throw() {
}


 uint32_t AccumuloProxy_renameTable_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8457,8 +9257,14 @@ uint32_t AccumuloProxy_renameTable_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_setLocalityGroups_args::~AccumuloProxy_setLocalityGroups_args() throw() {
}


 uint32_t AccumuloProxy_setLocalityGroups_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8497,27 +9303,27 @@ uint32_t AccumuloProxy_setLocalityGroups_args::read(::apache::thrift::protocol::
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;groups.clear();
            uint32_t _size342;
            ::apache::thrift::protocol::TType _ktype343;
            ::apache::thrift::protocol::TType _vtype344;
            xfer += iprot-&gt;readMapBegin(_ktype343, _vtype344, _size342);
            uint32_t _i346;
            for (_i346 = 0; _i346 &lt; _size342; ++_i346)
            uint32_t _size398;
            ::apache::thrift::protocol::TType _ktype399;
            ::apache::thrift::protocol::TType _vtype400;
            xfer += iprot-&gt;readMapBegin(_ktype399, _vtype400, _size398);
            uint32_t _i402;
            for (_i402 = 0; _i402 &lt; _size398; ++_i402)
             {
              std::string _key347;
              xfer += iprot-&gt;readString(_key347);
              std::set&lt;std::string&gt; &amp; _val348 = this-&gt;groups[_key347];
              std::string _key403;
              xfer += iprot-&gt;readString(_key403);
              std::set&lt;std::string&gt; &amp; _val404 = this-&gt;groups[_key403];
               {
                _val348.clear();
                uint32_t _size349;
                ::apache::thrift::protocol::TType _etype352;
                xfer += iprot-&gt;readSetBegin(_etype352, _size349);
                uint32_t _i353;
                for (_i353 = 0; _i353 &lt; _size349; ++_i353)
                _val404.clear();
                uint32_t _size405;
                ::apache::thrift::protocol::TType _etype408;
                xfer += iprot-&gt;readSetBegin(_etype408, _size405);
                uint32_t _i409;
                for (_i409 = 0; _i409 &lt; _size405; ++_i409)
                 {
                  std::string _elem354;
                  xfer += iprot-&gt;readString(_elem354);
                  _val348.insert(_elem354);
                  std::string _elem410;
                  xfer += iprot-&gt;readString(_elem410);
                  _val404.insert(_elem410);
                 }
                 xfer += iprot-&gt;readSetEnd();
               }
@@ -8543,6 +9349,7 @@ uint32_t AccumuloProxy_setLocalityGroups_args::read(::apache::thrift::protocol::
 
 uint32_t AccumuloProxy_setLocalityGroups_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_setLocalityGroups_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8556,16 +9363,16 @@ uint32_t AccumuloProxy_setLocalityGroups_args::write(::apache::thrift::protocol:
   xfer += oprot-&gt;writeFieldBegin("groups", ::apache::thrift::protocol::T_MAP, 3);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_SET, static_cast&lt;uint32_t&gt;(this-&gt;groups.size()));
    std::map&lt;std::string, std::set&lt;std::string&gt; &gt; ::const_iterator _iter355;
    for (_iter355 = this-&gt;groups.begin(); _iter355 != this-&gt;groups.end(); ++_iter355)
    std::map&lt;std::string, std::set&lt;std::string&gt; &gt; ::const_iterator _iter411;
    for (_iter411 = this-&gt;groups.begin(); _iter411 != this-&gt;groups.end(); ++_iter411)
     {
      xfer += oprot-&gt;writeString(_iter355-&gt;first);
      xfer += oprot-&gt;writeString(_iter411-&gt;first);
       {
        xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(_iter355-&gt;second.size()));
        std::set&lt;std::string&gt; ::const_iterator _iter356;
        for (_iter356 = _iter355-&gt;second.begin(); _iter356 != _iter355-&gt;second.end(); ++_iter356)
        xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(_iter411-&gt;second.size()));
        std::set&lt;std::string&gt; ::const_iterator _iter412;
        for (_iter412 = _iter411-&gt;second.begin(); _iter412 != _iter411-&gt;second.end(); ++_iter412)
         {
          xfer += oprot-&gt;writeString((*_iter356));
          xfer += oprot-&gt;writeString((*_iter412));
         }
         xfer += oprot-&gt;writeSetEnd();
       }
@@ -8579,8 +9386,14 @@ uint32_t AccumuloProxy_setLocalityGroups_args::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_setLocalityGroups_pargs::~AccumuloProxy_setLocalityGroups_pargs() throw() {
}


 uint32_t AccumuloProxy_setLocalityGroups_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_setLocalityGroups_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8594,16 +9407,16 @@ uint32_t AccumuloProxy_setLocalityGroups_pargs::write(::apache::thrift::protocol
   xfer += oprot-&gt;writeFieldBegin("groups", ::apache::thrift::protocol::T_MAP, 3);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_SET, static_cast&lt;uint32_t&gt;((*(this-&gt;groups)).size()));
    std::map&lt;std::string, std::set&lt;std::string&gt; &gt; ::const_iterator _iter357;
    for (_iter357 = (*(this-&gt;groups)).begin(); _iter357 != (*(this-&gt;groups)).end(); ++_iter357)
    std::map&lt;std::string, std::set&lt;std::string&gt; &gt; ::const_iterator _iter413;
    for (_iter413 = (*(this-&gt;groups)).begin(); _iter413 != (*(this-&gt;groups)).end(); ++_iter413)
     {
      xfer += oprot-&gt;writeString(_iter357-&gt;first);
      xfer += oprot-&gt;writeString(_iter413-&gt;first);
       {
        xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(_iter357-&gt;second.size()));
        std::set&lt;std::string&gt; ::const_iterator _iter358;
        for (_iter358 = _iter357-&gt;second.begin(); _iter358 != _iter357-&gt;second.end(); ++_iter358)
        xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(_iter413-&gt;second.size()));
        std::set&lt;std::string&gt; ::const_iterator _iter414;
        for (_iter414 = _iter413-&gt;second.begin(); _iter414 != _iter413-&gt;second.end(); ++_iter414)
         {
          xfer += oprot-&gt;writeString((*_iter358));
          xfer += oprot-&gt;writeString((*_iter414));
         }
         xfer += oprot-&gt;writeSetEnd();
       }
@@ -8617,8 +9430,14 @@ uint32_t AccumuloProxy_setLocalityGroups_pargs::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_setLocalityGroups_result::~AccumuloProxy_setLocalityGroups_result() throw() {
}


 uint32_t AccumuloProxy_setLocalityGroups_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8697,8 +9516,14 @@ uint32_t AccumuloProxy_setLocalityGroups_result::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_setLocalityGroups_presult::~AccumuloProxy_setLocalityGroups_presult() throw() {
}


 uint32_t AccumuloProxy_setLocalityGroups_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8753,8 +9578,14 @@ uint32_t AccumuloProxy_setLocalityGroups_presult::read(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_setTableProperty_args::~AccumuloProxy_setTableProperty_args() throw() {
}


 uint32_t AccumuloProxy_setTableProperty_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8819,6 +9650,7 @@ uint32_t AccumuloProxy_setTableProperty_args::read(::apache::thrift::protocol::T
 
 uint32_t AccumuloProxy_setTableProperty_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_setTableProperty_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8842,8 +9674,14 @@ uint32_t AccumuloProxy_setTableProperty_args::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_setTableProperty_pargs::~AccumuloProxy_setTableProperty_pargs() throw() {
}


 uint32_t AccumuloProxy_setTableProperty_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_setTableProperty_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -8867,8 +9705,14 @@ uint32_t AccumuloProxy_setTableProperty_pargs::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_setTableProperty_result::~AccumuloProxy_setTableProperty_result() throw() {
}


 uint32_t AccumuloProxy_setTableProperty_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -8947,8 +9791,14 @@ uint32_t AccumuloProxy_setTableProperty_result::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_setTableProperty_presult::~AccumuloProxy_setTableProperty_presult() throw() {
}


 uint32_t AccumuloProxy_setTableProperty_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9003,8 +9853,14 @@ uint32_t AccumuloProxy_setTableProperty_presult::read(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_splitRangeByTablets_args::~AccumuloProxy_splitRangeByTablets_args() throw() {
}


 uint32_t AccumuloProxy_splitRangeByTablets_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9069,6 +9925,7 @@ uint32_t AccumuloProxy_splitRangeByTablets_args::read(::apache::thrift::protocol
 
 uint32_t AccumuloProxy_splitRangeByTablets_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_splitRangeByTablets_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9092,8 +9949,14 @@ uint32_t AccumuloProxy_splitRangeByTablets_args::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_splitRangeByTablets_pargs::~AccumuloProxy_splitRangeByTablets_pargs() throw() {
}


 uint32_t AccumuloProxy_splitRangeByTablets_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_splitRangeByTablets_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9117,8 +9980,14 @@ uint32_t AccumuloProxy_splitRangeByTablets_pargs::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_splitRangeByTablets_result::~AccumuloProxy_splitRangeByTablets_result() throw() {
}


 uint32_t AccumuloProxy_splitRangeByTablets_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9141,15 +10010,15 @@ uint32_t AccumuloProxy_splitRangeByTablets_result::read(::apache::thrift::protoc
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;success.clear();
            uint32_t _size359;
            ::apache::thrift::protocol::TType _etype362;
            xfer += iprot-&gt;readSetBegin(_etype362, _size359);
            uint32_t _i363;
            for (_i363 = 0; _i363 &lt; _size359; ++_i363)
            uint32_t _size415;
            ::apache::thrift::protocol::TType _etype418;
            xfer += iprot-&gt;readSetBegin(_etype418, _size415);
            uint32_t _i419;
            for (_i419 = 0; _i419 &lt; _size415; ++_i419)
             {
              Range _elem364;
              xfer += _elem364.read(iprot);
              this-&gt;success.insert(_elem364);
              Range _elem420;
              xfer += _elem420.read(iprot);
              this-&gt;success.insert(_elem420);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -9204,10 +10073,10 @@ uint32_t AccumuloProxy_splitRangeByTablets_result::write(::apache::thrift::proto
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_SET, 0);
     {
       xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::set&lt;Range&gt; ::const_iterator _iter365;
      for (_iter365 = this-&gt;success.begin(); _iter365 != this-&gt;success.end(); ++_iter365)
      std::set&lt;Range&gt; ::const_iterator _iter421;
      for (_iter421 = this-&gt;success.begin(); _iter421 != this-&gt;success.end(); ++_iter421)
       {
        xfer += (*_iter365).write(oprot);
        xfer += (*_iter421).write(oprot);
       }
       xfer += oprot-&gt;writeSetEnd();
     }
@@ -9230,8 +10099,14 @@ uint32_t AccumuloProxy_splitRangeByTablets_result::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_splitRangeByTablets_presult::~AccumuloProxy_splitRangeByTablets_presult() throw() {
}


 uint32_t AccumuloProxy_splitRangeByTablets_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9254,15 +10129,15 @@ uint32_t AccumuloProxy_splitRangeByTablets_presult::read(::apache::thrift::proto
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size366;
            ::apache::thrift::protocol::TType _etype369;
            xfer += iprot-&gt;readSetBegin(_etype369, _size366);
            uint32_t _i370;
            for (_i370 = 0; _i370 &lt; _size366; ++_i370)
            uint32_t _size422;
            ::apache::thrift::protocol::TType _etype425;
            xfer += iprot-&gt;readSetBegin(_etype425, _size422);
            uint32_t _i426;
            for (_i426 = 0; _i426 &lt; _size422; ++_i426)
             {
              Range _elem371;
              xfer += _elem371.read(iprot);
              (*(this-&gt;success)).insert(_elem371);
              Range _elem427;
              xfer += _elem427.read(iprot);
              (*(this-&gt;success)).insert(_elem427);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -9307,8 +10182,14 @@ uint32_t AccumuloProxy_splitRangeByTablets_presult::read(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_tableExists_args::~AccumuloProxy_tableExists_args() throw() {
}


 uint32_t AccumuloProxy_tableExists_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9357,6 +10238,7 @@ uint32_t AccumuloProxy_tableExists_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_tableExists_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_tableExists_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9372,8 +10254,14 @@ uint32_t AccumuloProxy_tableExists_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_tableExists_pargs::~AccumuloProxy_tableExists_pargs() throw() {
}


 uint32_t AccumuloProxy_tableExists_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_tableExists_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9389,8 +10277,14 @@ uint32_t AccumuloProxy_tableExists_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_tableExists_result::~AccumuloProxy_tableExists_result() throw() {
}


 uint32_t AccumuloProxy_tableExists_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9445,8 +10339,14 @@ uint32_t AccumuloProxy_tableExists_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_tableExists_presult::~AccumuloProxy_tableExists_presult() throw() {
}


 uint32_t AccumuloProxy_tableExists_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9485,8 +10385,14 @@ uint32_t AccumuloProxy_tableExists_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_tableIdMap_args::~AccumuloProxy_tableIdMap_args() throw() {
}


 uint32_t AccumuloProxy_tableIdMap_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9527,6 +10433,7 @@ uint32_t AccumuloProxy_tableIdMap_args::read(::apache::thrift::protocol::TProtoc
 
 uint32_t AccumuloProxy_tableIdMap_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_tableIdMap_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9538,8 +10445,14 @@ uint32_t AccumuloProxy_tableIdMap_args::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_tableIdMap_pargs::~AccumuloProxy_tableIdMap_pargs() throw() {
}


 uint32_t AccumuloProxy_tableIdMap_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_tableIdMap_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9551,8 +10464,14 @@ uint32_t AccumuloProxy_tableIdMap_pargs::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_tableIdMap_result::~AccumuloProxy_tableIdMap_result() throw() {
}


 uint32_t AccumuloProxy_tableIdMap_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9575,17 +10494,17 @@ uint32_t AccumuloProxy_tableIdMap_result::read(::apache::thrift::protocol::TProt
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size372;
            ::apache::thrift::protocol::TType _ktype373;
            ::apache::thrift::protocol::TType _vtype374;
            xfer += iprot-&gt;readMapBegin(_ktype373, _vtype374, _size372);
            uint32_t _i376;
            for (_i376 = 0; _i376 &lt; _size372; ++_i376)
            uint32_t _size428;
            ::apache::thrift::protocol::TType _ktype429;
            ::apache::thrift::protocol::TType _vtype430;
            xfer += iprot-&gt;readMapBegin(_ktype429, _vtype430, _size428);
            uint32_t _i432;
            for (_i432 = 0; _i432 &lt; _size428; ++_i432)
             {
              std::string _key377;
              xfer += iprot-&gt;readString(_key377);
              std::string&amp; _val378 = this-&gt;success[_key377];
              xfer += iprot-&gt;readString(_val378);
              std::string _key433;
              xfer += iprot-&gt;readString(_key433);
              std::string&amp; _val434 = this-&gt;success[_key433];
              xfer += iprot-&gt;readString(_val434);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -9616,11 +10535,11 @@ uint32_t AccumuloProxy_tableIdMap_result::write(::apache::thrift::protocol::TPro
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter379;
      for (_iter379 = this-&gt;success.begin(); _iter379 != this-&gt;success.end(); ++_iter379)
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter435;
      for (_iter435 = this-&gt;success.begin(); _iter435 != this-&gt;success.end(); ++_iter435)
       {
        xfer += oprot-&gt;writeString(_iter379-&gt;first);
        xfer += oprot-&gt;writeString(_iter379-&gt;second);
        xfer += oprot-&gt;writeString(_iter435-&gt;first);
        xfer += oprot-&gt;writeString(_iter435-&gt;second);
       }
       xfer += oprot-&gt;writeMapEnd();
     }
@@ -9631,8 +10550,14 @@ uint32_t AccumuloProxy_tableIdMap_result::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_tableIdMap_presult::~AccumuloProxy_tableIdMap_presult() throw() {
}


 uint32_t AccumuloProxy_tableIdMap_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9655,17 +10580,17 @@ uint32_t AccumuloProxy_tableIdMap_presult::read(::apache::thrift::protocol::TPro
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size380;
            ::apache::thrift::protocol::TType _ktype381;
            ::apache::thrift::protocol::TType _vtype382;
            xfer += iprot-&gt;readMapBegin(_ktype381, _vtype382, _size380);
            uint32_t _i384;
            for (_i384 = 0; _i384 &lt; _size380; ++_i384)
            uint32_t _size436;
            ::apache::thrift::protocol::TType _ktype437;
            ::apache::thrift::protocol::TType _vtype438;
            xfer += iprot-&gt;readMapBegin(_ktype437, _vtype438, _size436);
            uint32_t _i440;
            for (_i440 = 0; _i440 &lt; _size436; ++_i440)
             {
              std::string _key385;
              xfer += iprot-&gt;readString(_key385);
              std::string&amp; _val386 = (*(this-&gt;success))[_key385];
              xfer += iprot-&gt;readString(_val386);
              std::string _key441;
              xfer += iprot-&gt;readString(_key441);
              std::string&amp; _val442 = (*(this-&gt;success))[_key441];
              xfer += iprot-&gt;readString(_val442);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -9686,8 +10611,14 @@ uint32_t AccumuloProxy_tableIdMap_presult::read(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_testTableClassLoad_args::~AccumuloProxy_testTableClassLoad_args() throw() {
}


 uint32_t AccumuloProxy_testTableClassLoad_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9752,6 +10683,7 @@ uint32_t AccumuloProxy_testTableClassLoad_args::read(::apache::thrift::protocol:
 
 uint32_t AccumuloProxy_testTableClassLoad_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_testTableClassLoad_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9775,8 +10707,14 @@ uint32_t AccumuloProxy_testTableClassLoad_args::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_testTableClassLoad_pargs::~AccumuloProxy_testTableClassLoad_pargs() throw() {
}


 uint32_t AccumuloProxy_testTableClassLoad_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_testTableClassLoad_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -9800,8 +10738,14 @@ uint32_t AccumuloProxy_testTableClassLoad_pargs::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_testTableClassLoad_result::~AccumuloProxy_testTableClassLoad_result() throw() {
}


 uint32_t AccumuloProxy_testTableClassLoad_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9892,8 +10836,14 @@ uint32_t AccumuloProxy_testTableClassLoad_result::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_testTableClassLoad_presult::~AccumuloProxy_testTableClassLoad_presult() throw() {
}


 uint32_t AccumuloProxy_testTableClassLoad_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -9956,8 +10906,14 @@ uint32_t AccumuloProxy_testTableClassLoad_presult::read(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_pingTabletServer_args::~AccumuloProxy_pingTabletServer_args() throw() {
}


 uint32_t AccumuloProxy_pingTabletServer_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10006,6 +10962,7 @@ uint32_t AccumuloProxy_pingTabletServer_args::read(::apache::thrift::protocol::T
 
 uint32_t AccumuloProxy_pingTabletServer_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_pingTabletServer_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10021,8 +10978,14 @@ uint32_t AccumuloProxy_pingTabletServer_args::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_pingTabletServer_pargs::~AccumuloProxy_pingTabletServer_pargs() throw() {
}


 uint32_t AccumuloProxy_pingTabletServer_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_pingTabletServer_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10038,8 +11001,14 @@ uint32_t AccumuloProxy_pingTabletServer_pargs::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_pingTabletServer_result::~AccumuloProxy_pingTabletServer_result() throw() {
}


 uint32_t AccumuloProxy_pingTabletServer_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10106,8 +11075,14 @@ uint32_t AccumuloProxy_pingTabletServer_result::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_pingTabletServer_presult::~AccumuloProxy_pingTabletServer_presult() throw() {
}


 uint32_t AccumuloProxy_pingTabletServer_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10154,8 +11129,14 @@ uint32_t AccumuloProxy_pingTabletServer_presult::read(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_getActiveScans_args::~AccumuloProxy_getActiveScans_args() throw() {
}


 uint32_t AccumuloProxy_getActiveScans_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10204,6 +11185,7 @@ uint32_t AccumuloProxy_getActiveScans_args::read(::apache::thrift::protocol::TPr
 
 uint32_t AccumuloProxy_getActiveScans_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getActiveScans_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10219,8 +11201,14 @@ uint32_t AccumuloProxy_getActiveScans_args::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_getActiveScans_pargs::~AccumuloProxy_getActiveScans_pargs() throw() {
}


 uint32_t AccumuloProxy_getActiveScans_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getActiveScans_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10236,8 +11224,14 @@ uint32_t AccumuloProxy_getActiveScans_pargs::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_getActiveScans_result::~AccumuloProxy_getActiveScans_result() throw() {
}


 uint32_t AccumuloProxy_getActiveScans_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10260,14 +11254,14 @@ uint32_t AccumuloProxy_getActiveScans_result::read(::apache::thrift::protocol::T
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;success.clear();
            uint32_t _size387;
            ::apache::thrift::protocol::TType _etype390;
            xfer += iprot-&gt;readListBegin(_etype390, _size387);
            this-&gt;success.resize(_size387);
            uint32_t _i391;
            for (_i391 = 0; _i391 &lt; _size387; ++_i391)
            uint32_t _size443;
            ::apache::thrift::protocol::TType _etype446;
            xfer += iprot-&gt;readListBegin(_etype446, _size443);
            this-&gt;success.resize(_size443);
            uint32_t _i447;
            for (_i447 = 0; _i447 &lt; _size443; ++_i447)
             {
              xfer += this-&gt;success[_i391].read(iprot);
              xfer += this-&gt;success[_i447].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -10314,10 +11308,10 @@ uint32_t AccumuloProxy_getActiveScans_result::write(::apache::thrift::protocol::
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_LIST, 0);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::vector&lt;ActiveScan&gt; ::const_iterator _iter392;
      for (_iter392 = this-&gt;success.begin(); _iter392 != this-&gt;success.end(); ++_iter392)
      std::vector&lt;ActiveScan&gt; ::const_iterator _iter448;
      for (_iter448 = this-&gt;success.begin(); _iter448 != this-&gt;success.end(); ++_iter448)
       {
        xfer += (*_iter392).write(oprot);
        xfer += (*_iter448).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -10336,8 +11330,14 @@ uint32_t AccumuloProxy_getActiveScans_result::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_getActiveScans_presult::~AccumuloProxy_getActiveScans_presult() throw() {
}


 uint32_t AccumuloProxy_getActiveScans_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10360,14 +11360,14 @@ uint32_t AccumuloProxy_getActiveScans_presult::read(::apache::thrift::protocol::
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size393;
            ::apache::thrift::protocol::TType _etype396;
            xfer += iprot-&gt;readListBegin(_etype396, _size393);
            (*(this-&gt;success)).resize(_size393);
            uint32_t _i397;
            for (_i397 = 0; _i397 &lt; _size393; ++_i397)
            uint32_t _size449;
            ::apache::thrift::protocol::TType _etype452;
            xfer += iprot-&gt;readListBegin(_etype452, _size449);
            (*(this-&gt;success)).resize(_size449);
            uint32_t _i453;
            for (_i453 = 0; _i453 &lt; _size449; ++_i453)
             {
              xfer += (*(this-&gt;success))[_i397].read(iprot);
              xfer += (*(this-&gt;success))[_i453].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -10404,8 +11404,14 @@ uint32_t AccumuloProxy_getActiveScans_presult::read(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_getActiveCompactions_args::~AccumuloProxy_getActiveCompactions_args() throw() {
}


 uint32_t AccumuloProxy_getActiveCompactions_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10454,6 +11460,7 @@ uint32_t AccumuloProxy_getActiveCompactions_args::read(::apache::thrift::protoco
 
 uint32_t AccumuloProxy_getActiveCompactions_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getActiveCompactions_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10469,8 +11476,14 @@ uint32_t AccumuloProxy_getActiveCompactions_args::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_getActiveCompactions_pargs::~AccumuloProxy_getActiveCompactions_pargs() throw() {
}


 uint32_t AccumuloProxy_getActiveCompactions_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getActiveCompactions_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10486,8 +11499,14 @@ uint32_t AccumuloProxy_getActiveCompactions_pargs::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_getActiveCompactions_result::~AccumuloProxy_getActiveCompactions_result() throw() {
}


 uint32_t AccumuloProxy_getActiveCompactions_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10510,14 +11529,14 @@ uint32_t AccumuloProxy_getActiveCompactions_result::read(::apache::thrift::proto
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;success.clear();
            uint32_t _size398;
            ::apache::thrift::protocol::TType _etype401;
            xfer += iprot-&gt;readListBegin(_etype401, _size398);
            this-&gt;success.resize(_size398);
            uint32_t _i402;
            for (_i402 = 0; _i402 &lt; _size398; ++_i402)
            uint32_t _size454;
            ::apache::thrift::protocol::TType _etype457;
            xfer += iprot-&gt;readListBegin(_etype457, _size454);
            this-&gt;success.resize(_size454);
            uint32_t _i458;
            for (_i458 = 0; _i458 &lt; _size454; ++_i458)
             {
              xfer += this-&gt;success[_i402].read(iprot);
              xfer += this-&gt;success[_i458].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -10564,10 +11583,10 @@ uint32_t AccumuloProxy_getActiveCompactions_result::write(::apache::thrift::prot
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_LIST, 0);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::vector&lt;ActiveCompaction&gt; ::const_iterator _iter403;
      for (_iter403 = this-&gt;success.begin(); _iter403 != this-&gt;success.end(); ++_iter403)
      std::vector&lt;ActiveCompaction&gt; ::const_iterator _iter459;
      for (_iter459 = this-&gt;success.begin(); _iter459 != this-&gt;success.end(); ++_iter459)
       {
        xfer += (*_iter403).write(oprot);
        xfer += (*_iter459).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -10586,8 +11605,14 @@ uint32_t AccumuloProxy_getActiveCompactions_result::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_getActiveCompactions_presult::~AccumuloProxy_getActiveCompactions_presult() throw() {
}


 uint32_t AccumuloProxy_getActiveCompactions_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10610,14 +11635,14 @@ uint32_t AccumuloProxy_getActiveCompactions_presult::read(::apache::thrift::prot
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size404;
            ::apache::thrift::protocol::TType _etype407;
            xfer += iprot-&gt;readListBegin(_etype407, _size404);
            (*(this-&gt;success)).resize(_size404);
            uint32_t _i408;
            for (_i408 = 0; _i408 &lt; _size404; ++_i408)
            uint32_t _size460;
            ::apache::thrift::protocol::TType _etype463;
            xfer += iprot-&gt;readListBegin(_etype463, _size460);
            (*(this-&gt;success)).resize(_size460);
            uint32_t _i464;
            for (_i464 = 0; _i464 &lt; _size460; ++_i464)
             {
              xfer += (*(this-&gt;success))[_i408].read(iprot);
              xfer += (*(this-&gt;success))[_i464].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -10654,8 +11679,14 @@ uint32_t AccumuloProxy_getActiveCompactions_presult::read(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_getSiteConfiguration_args::~AccumuloProxy_getSiteConfiguration_args() throw() {
}


 uint32_t AccumuloProxy_getSiteConfiguration_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10696,6 +11727,7 @@ uint32_t AccumuloProxy_getSiteConfiguration_args::read(::apache::thrift::protoco
 
 uint32_t AccumuloProxy_getSiteConfiguration_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getSiteConfiguration_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10707,8 +11739,14 @@ uint32_t AccumuloProxy_getSiteConfiguration_args::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_getSiteConfiguration_pargs::~AccumuloProxy_getSiteConfiguration_pargs() throw() {
}


 uint32_t AccumuloProxy_getSiteConfiguration_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getSiteConfiguration_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10720,8 +11758,14 @@ uint32_t AccumuloProxy_getSiteConfiguration_pargs::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_getSiteConfiguration_result::~AccumuloProxy_getSiteConfiguration_result() throw() {
}


 uint32_t AccumuloProxy_getSiteConfiguration_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10744,17 +11788,17 @@ uint32_t AccumuloProxy_getSiteConfiguration_result::read(::apache::thrift::proto
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size409;
            ::apache::thrift::protocol::TType _ktype410;
            ::apache::thrift::protocol::TType _vtype411;
            xfer += iprot-&gt;readMapBegin(_ktype410, _vtype411, _size409);
            uint32_t _i413;
            for (_i413 = 0; _i413 &lt; _size409; ++_i413)
            uint32_t _size465;
            ::apache::thrift::protocol::TType _ktype466;
            ::apache::thrift::protocol::TType _vtype467;
            xfer += iprot-&gt;readMapBegin(_ktype466, _vtype467, _size465);
            uint32_t _i469;
            for (_i469 = 0; _i469 &lt; _size465; ++_i469)
             {
              std::string _key414;
              xfer += iprot-&gt;readString(_key414);
              std::string&amp; _val415 = this-&gt;success[_key414];
              xfer += iprot-&gt;readString(_val415);
              std::string _key470;
              xfer += iprot-&gt;readString(_key470);
              std::string&amp; _val471 = this-&gt;success[_key470];
              xfer += iprot-&gt;readString(_val471);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -10801,11 +11845,11 @@ uint32_t AccumuloProxy_getSiteConfiguration_result::write(::apache::thrift::prot
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter416;
      for (_iter416 = this-&gt;success.begin(); _iter416 != this-&gt;success.end(); ++_iter416)
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter472;
      for (_iter472 = this-&gt;success.begin(); _iter472 != this-&gt;success.end(); ++_iter472)
       {
        xfer += oprot-&gt;writeString(_iter416-&gt;first);
        xfer += oprot-&gt;writeString(_iter416-&gt;second);
        xfer += oprot-&gt;writeString(_iter472-&gt;first);
        xfer += oprot-&gt;writeString(_iter472-&gt;second);
       }
       xfer += oprot-&gt;writeMapEnd();
     }
@@ -10824,8 +11868,14 @@ uint32_t AccumuloProxy_getSiteConfiguration_result::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_getSiteConfiguration_presult::~AccumuloProxy_getSiteConfiguration_presult() throw() {
}


 uint32_t AccumuloProxy_getSiteConfiguration_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10848,17 +11898,17 @@ uint32_t AccumuloProxy_getSiteConfiguration_presult::read(::apache::thrift::prot
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size417;
            ::apache::thrift::protocol::TType _ktype418;
            ::apache::thrift::protocol::TType _vtype419;
            xfer += iprot-&gt;readMapBegin(_ktype418, _vtype419, _size417);
            uint32_t _i421;
            for (_i421 = 0; _i421 &lt; _size417; ++_i421)
            uint32_t _size473;
            ::apache::thrift::protocol::TType _ktype474;
            ::apache::thrift::protocol::TType _vtype475;
            xfer += iprot-&gt;readMapBegin(_ktype474, _vtype475, _size473);
            uint32_t _i477;
            for (_i477 = 0; _i477 &lt; _size473; ++_i477)
             {
              std::string _key422;
              xfer += iprot-&gt;readString(_key422);
              std::string&amp; _val423 = (*(this-&gt;success))[_key422];
              xfer += iprot-&gt;readString(_val423);
              std::string _key478;
              xfer += iprot-&gt;readString(_key478);
              std::string&amp; _val479 = (*(this-&gt;success))[_key478];
              xfer += iprot-&gt;readString(_val479);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -10895,8 +11945,14 @@ uint32_t AccumuloProxy_getSiteConfiguration_presult::read(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_getSystemConfiguration_args::~AccumuloProxy_getSystemConfiguration_args() throw() {
}


 uint32_t AccumuloProxy_getSystemConfiguration_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10937,6 +11993,7 @@ uint32_t AccumuloProxy_getSystemConfiguration_args::read(::apache::thrift::proto
 
 uint32_t AccumuloProxy_getSystemConfiguration_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getSystemConfiguration_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10948,8 +12005,14 @@ uint32_t AccumuloProxy_getSystemConfiguration_args::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_getSystemConfiguration_pargs::~AccumuloProxy_getSystemConfiguration_pargs() throw() {
}


 uint32_t AccumuloProxy_getSystemConfiguration_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getSystemConfiguration_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -10961,8 +12024,14 @@ uint32_t AccumuloProxy_getSystemConfiguration_pargs::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_getSystemConfiguration_result::~AccumuloProxy_getSystemConfiguration_result() throw() {
}


 uint32_t AccumuloProxy_getSystemConfiguration_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -10985,17 +12054,17 @@ uint32_t AccumuloProxy_getSystemConfiguration_result::read(::apache::thrift::pro
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size424;
            ::apache::thrift::protocol::TType _ktype425;
            ::apache::thrift::protocol::TType _vtype426;
            xfer += iprot-&gt;readMapBegin(_ktype425, _vtype426, _size424);
            uint32_t _i428;
            for (_i428 = 0; _i428 &lt; _size424; ++_i428)
            uint32_t _size480;
            ::apache::thrift::protocol::TType _ktype481;
            ::apache::thrift::protocol::TType _vtype482;
            xfer += iprot-&gt;readMapBegin(_ktype481, _vtype482, _size480);
            uint32_t _i484;
            for (_i484 = 0; _i484 &lt; _size480; ++_i484)
             {
              std::string _key429;
              xfer += iprot-&gt;readString(_key429);
              std::string&amp; _val430 = this-&gt;success[_key429];
              xfer += iprot-&gt;readString(_val430);
              std::string _key485;
              xfer += iprot-&gt;readString(_key485);
              std::string&amp; _val486 = this-&gt;success[_key485];
              xfer += iprot-&gt;readString(_val486);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -11042,11 +12111,11 @@ uint32_t AccumuloProxy_getSystemConfiguration_result::write(::apache::thrift::pr
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter431;
      for (_iter431 = this-&gt;success.begin(); _iter431 != this-&gt;success.end(); ++_iter431)
      std::map&lt;std::string, std::string&gt; ::const_iterator _iter487;
      for (_iter487 = this-&gt;success.begin(); _iter487 != this-&gt;success.end(); ++_iter487)
       {
        xfer += oprot-&gt;writeString(_iter431-&gt;first);
        xfer += oprot-&gt;writeString(_iter431-&gt;second);
        xfer += oprot-&gt;writeString(_iter487-&gt;first);
        xfer += oprot-&gt;writeString(_iter487-&gt;second);
       }
       xfer += oprot-&gt;writeMapEnd();
     }
@@ -11065,8 +12134,14 @@ uint32_t AccumuloProxy_getSystemConfiguration_result::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_getSystemConfiguration_presult::~AccumuloProxy_getSystemConfiguration_presult() throw() {
}


 uint32_t AccumuloProxy_getSystemConfiguration_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11089,17 +12164,17 @@ uint32_t AccumuloProxy_getSystemConfiguration_presult::read(::apache::thrift::pr
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size432;
            ::apache::thrift::protocol::TType _ktype433;
            ::apache::thrift::protocol::TType _vtype434;
            xfer += iprot-&gt;readMapBegin(_ktype433, _vtype434, _size432);
            uint32_t _i436;
            for (_i436 = 0; _i436 &lt; _size432; ++_i436)
            uint32_t _size488;
            ::apache::thrift::protocol::TType _ktype489;
            ::apache::thrift::protocol::TType _vtype490;
            xfer += iprot-&gt;readMapBegin(_ktype489, _vtype490, _size488);
            uint32_t _i492;
            for (_i492 = 0; _i492 &lt; _size488; ++_i492)
             {
              std::string _key437;
              xfer += iprot-&gt;readString(_key437);
              std::string&amp; _val438 = (*(this-&gt;success))[_key437];
              xfer += iprot-&gt;readString(_val438);
              std::string _key493;
              xfer += iprot-&gt;readString(_key493);
              std::string&amp; _val494 = (*(this-&gt;success))[_key493];
              xfer += iprot-&gt;readString(_val494);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -11136,8 +12211,14 @@ uint32_t AccumuloProxy_getSystemConfiguration_presult::read(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_getTabletServers_args::~AccumuloProxy_getTabletServers_args() throw() {
}


 uint32_t AccumuloProxy_getTabletServers_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11178,6 +12259,7 @@ uint32_t AccumuloProxy_getTabletServers_args::read(::apache::thrift::protocol::T
 
 uint32_t AccumuloProxy_getTabletServers_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getTabletServers_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11189,8 +12271,14 @@ uint32_t AccumuloProxy_getTabletServers_args::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_getTabletServers_pargs::~AccumuloProxy_getTabletServers_pargs() throw() {
}


 uint32_t AccumuloProxy_getTabletServers_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getTabletServers_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11202,8 +12290,14 @@ uint32_t AccumuloProxy_getTabletServers_pargs::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_getTabletServers_result::~AccumuloProxy_getTabletServers_result() throw() {
}


 uint32_t AccumuloProxy_getTabletServers_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11226,14 +12320,14 @@ uint32_t AccumuloProxy_getTabletServers_result::read(::apache::thrift::protocol:
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;success.clear();
            uint32_t _size439;
            ::apache::thrift::protocol::TType _etype442;
            xfer += iprot-&gt;readListBegin(_etype442, _size439);
            this-&gt;success.resize(_size439);
            uint32_t _i443;
            for (_i443 = 0; _i443 &lt; _size439; ++_i443)
            uint32_t _size495;
            ::apache::thrift::protocol::TType _etype498;
            xfer += iprot-&gt;readListBegin(_etype498, _size495);
            this-&gt;success.resize(_size495);
            uint32_t _i499;
            for (_i499 = 0; _i499 &lt; _size495; ++_i499)
             {
              xfer += iprot-&gt;readString(this-&gt;success[_i443]);
              xfer += iprot-&gt;readString(this-&gt;success[_i499]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -11264,10 +12358,10 @@ uint32_t AccumuloProxy_getTabletServers_result::write(::apache::thrift::protocol
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_LIST, 0);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::vector&lt;std::string&gt; ::const_iterator _iter444;
      for (_iter444 = this-&gt;success.begin(); _iter444 != this-&gt;success.end(); ++_iter444)
      std::vector&lt;std::string&gt; ::const_iterator _iter500;
      for (_iter500 = this-&gt;success.begin(); _iter500 != this-&gt;success.end(); ++_iter500)
       {
        xfer += oprot-&gt;writeString((*_iter444));
        xfer += oprot-&gt;writeString((*_iter500));
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -11278,8 +12372,14 @@ uint32_t AccumuloProxy_getTabletServers_result::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_getTabletServers_presult::~AccumuloProxy_getTabletServers_presult() throw() {
}


 uint32_t AccumuloProxy_getTabletServers_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11302,14 +12402,14 @@ uint32_t AccumuloProxy_getTabletServers_presult::read(::apache::thrift::protocol
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size445;
            ::apache::thrift::protocol::TType _etype448;
            xfer += iprot-&gt;readListBegin(_etype448, _size445);
            (*(this-&gt;success)).resize(_size445);
            uint32_t _i449;
            for (_i449 = 0; _i449 &lt; _size445; ++_i449)
            uint32_t _size501;
            ::apache::thrift::protocol::TType _etype504;
            xfer += iprot-&gt;readListBegin(_etype504, _size501);
            (*(this-&gt;success)).resize(_size501);
            uint32_t _i505;
            for (_i505 = 0; _i505 &lt; _size501; ++_i505)
             {
              xfer += iprot-&gt;readString((*(this-&gt;success))[_i449]);
              xfer += iprot-&gt;readString((*(this-&gt;success))[_i505]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -11330,8 +12430,14 @@ uint32_t AccumuloProxy_getTabletServers_presult::read(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_removeProperty_args::~AccumuloProxy_removeProperty_args() throw() {
}


 uint32_t AccumuloProxy_removeProperty_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11380,6 +12486,7 @@ uint32_t AccumuloProxy_removeProperty_args::read(::apache::thrift::protocol::TPr
 
 uint32_t AccumuloProxy_removeProperty_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeProperty_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11395,8 +12502,14 @@ uint32_t AccumuloProxy_removeProperty_args::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_removeProperty_pargs::~AccumuloProxy_removeProperty_pargs() throw() {
}


 uint32_t AccumuloProxy_removeProperty_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_removeProperty_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11412,8 +12525,14 @@ uint32_t AccumuloProxy_removeProperty_pargs::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_removeProperty_result::~AccumuloProxy_removeProperty_result() throw() {
}


 uint32_t AccumuloProxy_removeProperty_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11480,8 +12599,14 @@ uint32_t AccumuloProxy_removeProperty_result::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_removeProperty_presult::~AccumuloProxy_removeProperty_presult() throw() {
}


 uint32_t AccumuloProxy_removeProperty_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11528,8 +12653,14 @@ uint32_t AccumuloProxy_removeProperty_presult::read(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_setProperty_args::~AccumuloProxy_setProperty_args() throw() {
}


 uint32_t AccumuloProxy_setProperty_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11586,6 +12717,7 @@ uint32_t AccumuloProxy_setProperty_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_setProperty_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_setProperty_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11605,8 +12737,14 @@ uint32_t AccumuloProxy_setProperty_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_setProperty_pargs::~AccumuloProxy_setProperty_pargs() throw() {
}


 uint32_t AccumuloProxy_setProperty_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_setProperty_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11626,8 +12764,14 @@ uint32_t AccumuloProxy_setProperty_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_setProperty_result::~AccumuloProxy_setProperty_result() throw() {
}


 uint32_t AccumuloProxy_setProperty_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11694,8 +12838,14 @@ uint32_t AccumuloProxy_setProperty_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_setProperty_presult::~AccumuloProxy_setProperty_presult() throw() {
}


 uint32_t AccumuloProxy_setProperty_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11742,8 +12892,14 @@ uint32_t AccumuloProxy_setProperty_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_testClassLoad_args::~AccumuloProxy_testClassLoad_args() throw() {
}


 uint32_t AccumuloProxy_testClassLoad_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11800,6 +12956,7 @@ uint32_t AccumuloProxy_testClassLoad_args::read(::apache::thrift::protocol::TPro
 
 uint32_t AccumuloProxy_testClassLoad_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_testClassLoad_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11819,8 +12976,14 @@ uint32_t AccumuloProxy_testClassLoad_args::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_testClassLoad_pargs::~AccumuloProxy_testClassLoad_pargs() throw() {
}


 uint32_t AccumuloProxy_testClassLoad_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_testClassLoad_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -11840,8 +13003,14 @@ uint32_t AccumuloProxy_testClassLoad_pargs::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_testClassLoad_result::~AccumuloProxy_testClassLoad_result() throw() {
}


 uint32_t AccumuloProxy_testClassLoad_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11920,8 +13089,14 @@ uint32_t AccumuloProxy_testClassLoad_result::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_testClassLoad_presult::~AccumuloProxy_testClassLoad_presult() throw() {
}


 uint32_t AccumuloProxy_testClassLoad_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -11976,8 +13151,14 @@ uint32_t AccumuloProxy_testClassLoad_presult::read(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_authenticateUser_args::~AccumuloProxy_authenticateUser_args() throw() {
}


 uint32_t AccumuloProxy_authenticateUser_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12016,17 +13197,17 @@ uint32_t AccumuloProxy_authenticateUser_args::read(::apache::thrift::protocol::T
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;properties.clear();
            uint32_t _size450;
            ::apache::thrift::protocol::TType _ktype451;
            ::apache::thrift::protocol::TType _vtype452;
            xfer += iprot-&gt;readMapBegin(_ktype451, _vtype452, _size450);
            uint32_t _i454;
            for (_i454 = 0; _i454 &lt; _size450; ++_i454)
            uint32_t _size506;
            ::apache::thrift::protocol::TType _ktype507;
            ::apache::thrift::protocol::TType _vtype508;
            xfer += iprot-&gt;readMapBegin(_ktype507, _vtype508, _size506);
            uint32_t _i510;
            for (_i510 = 0; _i510 &lt; _size506; ++_i510)
             {
              std::string _key455;
              xfer += iprot-&gt;readString(_key455);
              std::string&amp; _val456 = this-&gt;properties[_key455];
              xfer += iprot-&gt;readString(_val456);
              std::string _key511;
              xfer += iprot-&gt;readString(_key511);
              std::string&amp; _val512 = this-&gt;properties[_key511];
              xfer += iprot-&gt;readString(_val512);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -12049,6 +13230,7 @@ uint32_t AccumuloProxy_authenticateUser_args::read(::apache::thrift::protocol::T
 
 uint32_t AccumuloProxy_authenticateUser_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_authenticateUser_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12062,11 +13244,11 @@ uint32_t AccumuloProxy_authenticateUser_args::write(::apache::thrift::protocol::
   xfer += oprot-&gt;writeFieldBegin("properties", ::apache::thrift::protocol::T_MAP, 3);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;properties.size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter457;
    for (_iter457 = this-&gt;properties.begin(); _iter457 != this-&gt;properties.end(); ++_iter457)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter513;
    for (_iter513 = this-&gt;properties.begin(); _iter513 != this-&gt;properties.end(); ++_iter513)
     {
      xfer += oprot-&gt;writeString(_iter457-&gt;first);
      xfer += oprot-&gt;writeString(_iter457-&gt;second);
      xfer += oprot-&gt;writeString(_iter513-&gt;first);
      xfer += oprot-&gt;writeString(_iter513-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -12077,8 +13259,14 @@ uint32_t AccumuloProxy_authenticateUser_args::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_authenticateUser_pargs::~AccumuloProxy_authenticateUser_pargs() throw() {
}


 uint32_t AccumuloProxy_authenticateUser_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_authenticateUser_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12092,11 +13280,11 @@ uint32_t AccumuloProxy_authenticateUser_pargs::write(::apache::thrift::protocol:
   xfer += oprot-&gt;writeFieldBegin("properties", ::apache::thrift::protocol::T_MAP, 3);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;properties)).size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter458;
    for (_iter458 = (*(this-&gt;properties)).begin(); _iter458 != (*(this-&gt;properties)).end(); ++_iter458)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter514;
    for (_iter514 = (*(this-&gt;properties)).begin(); _iter514 != (*(this-&gt;properties)).end(); ++_iter514)
     {
      xfer += oprot-&gt;writeString(_iter458-&gt;first);
      xfer += oprot-&gt;writeString(_iter458-&gt;second);
      xfer += oprot-&gt;writeString(_iter514-&gt;first);
      xfer += oprot-&gt;writeString(_iter514-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -12107,8 +13295,14 @@ uint32_t AccumuloProxy_authenticateUser_pargs::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_authenticateUser_result::~AccumuloProxy_authenticateUser_result() throw() {
}


 uint32_t AccumuloProxy_authenticateUser_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12187,8 +13381,14 @@ uint32_t AccumuloProxy_authenticateUser_result::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_authenticateUser_presult::~AccumuloProxy_authenticateUser_presult() throw() {
}


 uint32_t AccumuloProxy_authenticateUser_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12243,8 +13443,14 @@ uint32_t AccumuloProxy_authenticateUser_presult::read(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_changeUserAuthorizations_args::~AccumuloProxy_changeUserAuthorizations_args() throw() {
}


 uint32_t AccumuloProxy_changeUserAuthorizations_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12283,15 +13489,15 @@ uint32_t AccumuloProxy_changeUserAuthorizations_args::read(::apache::thrift::pro
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;authorizations.clear();
            uint32_t _size459;
            ::apache::thrift::protocol::TType _etype462;
            xfer += iprot-&gt;readSetBegin(_etype462, _size459);
            uint32_t _i463;
            for (_i463 = 0; _i463 &lt; _size459; ++_i463)
            uint32_t _size515;
            ::apache::thrift::protocol::TType _etype518;
            xfer += iprot-&gt;readSetBegin(_etype518, _size515);
            uint32_t _i519;
            for (_i519 = 0; _i519 &lt; _size515; ++_i519)
             {
              std::string _elem464;
              xfer += iprot-&gt;readBinary(_elem464);
              this-&gt;authorizations.insert(_elem464);
              std::string _elem520;
              xfer += iprot-&gt;readBinary(_elem520);
              this-&gt;authorizations.insert(_elem520);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -12314,6 +13520,7 @@ uint32_t AccumuloProxy_changeUserAuthorizations_args::read(::apache::thrift::pro
 
 uint32_t AccumuloProxy_changeUserAuthorizations_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_changeUserAuthorizations_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12327,10 +13534,10 @@ uint32_t AccumuloProxy_changeUserAuthorizations_args::write(::apache::thrift::pr
   xfer += oprot-&gt;writeFieldBegin("authorizations", ::apache::thrift::protocol::T_SET, 3);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;authorizations.size()));
    std::set&lt;std::string&gt; ::const_iterator _iter465;
    for (_iter465 = this-&gt;authorizations.begin(); _iter465 != this-&gt;authorizations.end(); ++_iter465)
    std::set&lt;std::string&gt; ::const_iterator _iter521;
    for (_iter521 = this-&gt;authorizations.begin(); _iter521 != this-&gt;authorizations.end(); ++_iter521)
     {
      xfer += oprot-&gt;writeBinary((*_iter465));
      xfer += oprot-&gt;writeBinary((*_iter521));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -12341,8 +13548,14 @@ uint32_t AccumuloProxy_changeUserAuthorizations_args::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_changeUserAuthorizations_pargs::~AccumuloProxy_changeUserAuthorizations_pargs() throw() {
}


 uint32_t AccumuloProxy_changeUserAuthorizations_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_changeUserAuthorizations_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12356,10 +13569,10 @@ uint32_t AccumuloProxy_changeUserAuthorizations_pargs::write(::apache::thrift::p
   xfer += oprot-&gt;writeFieldBegin("authorizations", ::apache::thrift::protocol::T_SET, 3);
   {
     xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;((*(this-&gt;authorizations)).size()));
    std::set&lt;std::string&gt; ::const_iterator _iter466;
    for (_iter466 = (*(this-&gt;authorizations)).begin(); _iter466 != (*(this-&gt;authorizations)).end(); ++_iter466)
    std::set&lt;std::string&gt; ::const_iterator _iter522;
    for (_iter522 = (*(this-&gt;authorizations)).begin(); _iter522 != (*(this-&gt;authorizations)).end(); ++_iter522)
     {
      xfer += oprot-&gt;writeBinary((*_iter466));
      xfer += oprot-&gt;writeBinary((*_iter522));
     }
     xfer += oprot-&gt;writeSetEnd();
   }
@@ -12370,8 +13583,14 @@ uint32_t AccumuloProxy_changeUserAuthorizations_pargs::write(::apache::thrift::p
   return xfer;
 }
 

AccumuloProxy_changeUserAuthorizations_result::~AccumuloProxy_changeUserAuthorizations_result() throw() {
}


 uint32_t AccumuloProxy_changeUserAuthorizations_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12438,8 +13657,14 @@ uint32_t AccumuloProxy_changeUserAuthorizations_result::write(::apache::thrift::
   return xfer;
 }
 

AccumuloProxy_changeUserAuthorizations_presult::~AccumuloProxy_changeUserAuthorizations_presult() throw() {
}


 uint32_t AccumuloProxy_changeUserAuthorizations_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12486,8 +13711,14 @@ uint32_t AccumuloProxy_changeUserAuthorizations_presult::read(::apache::thrift::
   return xfer;
 }
 

AccumuloProxy_changeLocalUserPassword_args::~AccumuloProxy_changeLocalUserPassword_args() throw() {
}


 uint32_t AccumuloProxy_changeLocalUserPassword_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12544,6 +13775,7 @@ uint32_t AccumuloProxy_changeLocalUserPassword_args::read(::apache::thrift::prot
 
 uint32_t AccumuloProxy_changeLocalUserPassword_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_changeLocalUserPassword_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12563,8 +13795,14 @@ uint32_t AccumuloProxy_changeLocalUserPassword_args::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_changeLocalUserPassword_pargs::~AccumuloProxy_changeLocalUserPassword_pargs() throw() {
}


 uint32_t AccumuloProxy_changeLocalUserPassword_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_changeLocalUserPassword_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12584,8 +13822,14 @@ uint32_t AccumuloProxy_changeLocalUserPassword_pargs::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_changeLocalUserPassword_result::~AccumuloProxy_changeLocalUserPassword_result() throw() {
}


 uint32_t AccumuloProxy_changeLocalUserPassword_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12652,8 +13896,14 @@ uint32_t AccumuloProxy_changeLocalUserPassword_result::write(::apache::thrift::p
   return xfer;
 }
 

AccumuloProxy_changeLocalUserPassword_presult::~AccumuloProxy_changeLocalUserPassword_presult() throw() {
}


 uint32_t AccumuloProxy_changeLocalUserPassword_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12700,8 +13950,14 @@ uint32_t AccumuloProxy_changeLocalUserPassword_presult::read(::apache::thrift::p
   return xfer;
 }
 

AccumuloProxy_createLocalUser_args::~AccumuloProxy_createLocalUser_args() throw() {
}


 uint32_t AccumuloProxy_createLocalUser_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12758,6 +14014,7 @@ uint32_t AccumuloProxy_createLocalUser_args::read(::apache::thrift::protocol::TP
 
 uint32_t AccumuloProxy_createLocalUser_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createLocalUser_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12777,8 +14034,14 @@ uint32_t AccumuloProxy_createLocalUser_args::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_createLocalUser_pargs::~AccumuloProxy_createLocalUser_pargs() throw() {
}


 uint32_t AccumuloProxy_createLocalUser_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createLocalUser_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12798,8 +14061,14 @@ uint32_t AccumuloProxy_createLocalUser_pargs::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_createLocalUser_result::~AccumuloProxy_createLocalUser_result() throw() {
}


 uint32_t AccumuloProxy_createLocalUser_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12866,8 +14135,14 @@ uint32_t AccumuloProxy_createLocalUser_result::write(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_createLocalUser_presult::~AccumuloProxy_createLocalUser_presult() throw() {
}


 uint32_t AccumuloProxy_createLocalUser_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12914,8 +14189,14 @@ uint32_t AccumuloProxy_createLocalUser_presult::read(::apache::thrift::protocol:
   return xfer;
 }
 

AccumuloProxy_dropLocalUser_args::~AccumuloProxy_dropLocalUser_args() throw() {
}


 uint32_t AccumuloProxy_dropLocalUser_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -12964,6 +14245,7 @@ uint32_t AccumuloProxy_dropLocalUser_args::read(::apache::thrift::protocol::TPro
 
 uint32_t AccumuloProxy_dropLocalUser_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_dropLocalUser_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12979,8 +14261,14 @@ uint32_t AccumuloProxy_dropLocalUser_args::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_dropLocalUser_pargs::~AccumuloProxy_dropLocalUser_pargs() throw() {
}


 uint32_t AccumuloProxy_dropLocalUser_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_dropLocalUser_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -12996,8 +14284,14 @@ uint32_t AccumuloProxy_dropLocalUser_pargs::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_dropLocalUser_result::~AccumuloProxy_dropLocalUser_result() throw() {
}


 uint32_t AccumuloProxy_dropLocalUser_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13064,8 +14358,14 @@ uint32_t AccumuloProxy_dropLocalUser_result::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_dropLocalUser_presult::~AccumuloProxy_dropLocalUser_presult() throw() {
}


 uint32_t AccumuloProxy_dropLocalUser_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13112,8 +14412,14 @@ uint32_t AccumuloProxy_dropLocalUser_presult::read(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_getUserAuthorizations_args::~AccumuloProxy_getUserAuthorizations_args() throw() {
}


 uint32_t AccumuloProxy_getUserAuthorizations_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13162,6 +14468,7 @@ uint32_t AccumuloProxy_getUserAuthorizations_args::read(::apache::thrift::protoc
 
 uint32_t AccumuloProxy_getUserAuthorizations_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getUserAuthorizations_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13177,8 +14484,14 @@ uint32_t AccumuloProxy_getUserAuthorizations_args::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_getUserAuthorizations_pargs::~AccumuloProxy_getUserAuthorizations_pargs() throw() {
}


 uint32_t AccumuloProxy_getUserAuthorizations_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getUserAuthorizations_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13194,8 +14507,14 @@ uint32_t AccumuloProxy_getUserAuthorizations_pargs::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_getUserAuthorizations_result::~AccumuloProxy_getUserAuthorizations_result() throw() {
}


 uint32_t AccumuloProxy_getUserAuthorizations_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13218,14 +14537,14 @@ uint32_t AccumuloProxy_getUserAuthorizations_result::read(::apache::thrift::prot
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;success.clear();
            uint32_t _size467;
            ::apache::thrift::protocol::TType _etype470;
            xfer += iprot-&gt;readListBegin(_etype470, _size467);
            this-&gt;success.resize(_size467);
            uint32_t _i471;
            for (_i471 = 0; _i471 &lt; _size467; ++_i471)
            uint32_t _size523;
            ::apache::thrift::protocol::TType _etype526;
            xfer += iprot-&gt;readListBegin(_etype526, _size523);
            this-&gt;success.resize(_size523);
            uint32_t _i527;
            for (_i527 = 0; _i527 &lt; _size523; ++_i527)
             {
              xfer += iprot-&gt;readBinary(this-&gt;success[_i471]);
              xfer += iprot-&gt;readBinary(this-&gt;success[_i527]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -13272,10 +14591,10 @@ uint32_t AccumuloProxy_getUserAuthorizations_result::write(::apache::thrift::pro
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_LIST, 0);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::vector&lt;std::string&gt; ::const_iterator _iter472;
      for (_iter472 = this-&gt;success.begin(); _iter472 != this-&gt;success.end(); ++_iter472)
      std::vector&lt;std::string&gt; ::const_iterator _iter528;
      for (_iter528 = this-&gt;success.begin(); _iter528 != this-&gt;success.end(); ++_iter528)
       {
        xfer += oprot-&gt;writeBinary((*_iter472));
        xfer += oprot-&gt;writeBinary((*_iter528));
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -13294,8 +14613,14 @@ uint32_t AccumuloProxy_getUserAuthorizations_result::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_getUserAuthorizations_presult::~AccumuloProxy_getUserAuthorizations_presult() throw() {
}


 uint32_t AccumuloProxy_getUserAuthorizations_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13318,14 +14643,14 @@ uint32_t AccumuloProxy_getUserAuthorizations_presult::read(::apache::thrift::pro
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size473;
            ::apache::thrift::protocol::TType _etype476;
            xfer += iprot-&gt;readListBegin(_etype476, _size473);
            (*(this-&gt;success)).resize(_size473);
            uint32_t _i477;
            for (_i477 = 0; _i477 &lt; _size473; ++_i477)
            uint32_t _size529;
            ::apache::thrift::protocol::TType _etype532;
            xfer += iprot-&gt;readListBegin(_etype532, _size529);
            (*(this-&gt;success)).resize(_size529);
            uint32_t _i533;
            for (_i533 = 0; _i533 &lt; _size529; ++_i533)
             {
              xfer += iprot-&gt;readBinary((*(this-&gt;success))[_i477]);
              xfer += iprot-&gt;readBinary((*(this-&gt;success))[_i533]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -13362,8 +14687,14 @@ uint32_t AccumuloProxy_getUserAuthorizations_presult::read(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_grantSystemPermission_args::~AccumuloProxy_grantSystemPermission_args() throw() {
}


 uint32_t AccumuloProxy_grantSystemPermission_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13400,9 +14731,9 @@ uint32_t AccumuloProxy_grantSystemPermission_args::read(::apache::thrift::protoc
         break;
       case 3:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast478;
          xfer += iprot-&gt;readI32(ecast478);
          this-&gt;perm = (SystemPermission::type)ecast478;
          int32_t ecast534;
          xfer += iprot-&gt;readI32(ecast534);
          this-&gt;perm = (SystemPermission::type)ecast534;
           this-&gt;__isset.perm = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -13422,6 +14753,7 @@ uint32_t AccumuloProxy_grantSystemPermission_args::read(::apache::thrift::protoc
 
 uint32_t AccumuloProxy_grantSystemPermission_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_grantSystemPermission_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13441,8 +14773,14 @@ uint32_t AccumuloProxy_grantSystemPermission_args::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_grantSystemPermission_pargs::~AccumuloProxy_grantSystemPermission_pargs() throw() {
}


 uint32_t AccumuloProxy_grantSystemPermission_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_grantSystemPermission_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13462,8 +14800,14 @@ uint32_t AccumuloProxy_grantSystemPermission_pargs::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_grantSystemPermission_result::~AccumuloProxy_grantSystemPermission_result() throw() {
}


 uint32_t AccumuloProxy_grantSystemPermission_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13530,8 +14874,14 @@ uint32_t AccumuloProxy_grantSystemPermission_result::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_grantSystemPermission_presult::~AccumuloProxy_grantSystemPermission_presult() throw() {
}


 uint32_t AccumuloProxy_grantSystemPermission_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13578,8 +14928,14 @@ uint32_t AccumuloProxy_grantSystemPermission_presult::read(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_grantTablePermission_args::~AccumuloProxy_grantTablePermission_args() throw() {
}


 uint32_t AccumuloProxy_grantTablePermission_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13624,9 +14980,9 @@ uint32_t AccumuloProxy_grantTablePermission_args::read(::apache::thrift::protoco
         break;
       case 4:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast479;
          xfer += iprot-&gt;readI32(ecast479);
          this-&gt;perm = (TablePermission::type)ecast479;
          int32_t ecast535;
          xfer += iprot-&gt;readI32(ecast535);
          this-&gt;perm = (TablePermission::type)ecast535;
           this-&gt;__isset.perm = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -13646,6 +15002,7 @@ uint32_t AccumuloProxy_grantTablePermission_args::read(::apache::thrift::protoco
 
 uint32_t AccumuloProxy_grantTablePermission_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_grantTablePermission_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13669,8 +15026,14 @@ uint32_t AccumuloProxy_grantTablePermission_args::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_grantTablePermission_pargs::~AccumuloProxy_grantTablePermission_pargs() throw() {
}


 uint32_t AccumuloProxy_grantTablePermission_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_grantTablePermission_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13694,8 +15057,14 @@ uint32_t AccumuloProxy_grantTablePermission_pargs::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_grantTablePermission_result::~AccumuloProxy_grantTablePermission_result() throw() {
}


 uint32_t AccumuloProxy_grantTablePermission_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13774,8 +15143,14 @@ uint32_t AccumuloProxy_grantTablePermission_result::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_grantTablePermission_presult::~AccumuloProxy_grantTablePermission_presult() throw() {
}


 uint32_t AccumuloProxy_grantTablePermission_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13830,8 +15205,14 @@ uint32_t AccumuloProxy_grantTablePermission_presult::read(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_hasSystemPermission_args::~AccumuloProxy_hasSystemPermission_args() throw() {
}


 uint32_t AccumuloProxy_hasSystemPermission_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -13868,9 +15249,9 @@ uint32_t AccumuloProxy_hasSystemPermission_args::read(::apache::thrift::protocol
         break;
       case 3:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast480;
          xfer += iprot-&gt;readI32(ecast480);
          this-&gt;perm = (SystemPermission::type)ecast480;
          int32_t ecast536;
          xfer += iprot-&gt;readI32(ecast536);
          this-&gt;perm = (SystemPermission::type)ecast536;
           this-&gt;__isset.perm = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -13890,6 +15271,7 @@ uint32_t AccumuloProxy_hasSystemPermission_args::read(::apache::thrift::protocol
 
 uint32_t AccumuloProxy_hasSystemPermission_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_hasSystemPermission_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13909,8 +15291,14 @@ uint32_t AccumuloProxy_hasSystemPermission_args::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_hasSystemPermission_pargs::~AccumuloProxy_hasSystemPermission_pargs() throw() {
}


 uint32_t AccumuloProxy_hasSystemPermission_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_hasSystemPermission_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -13930,8 +15318,14 @@ uint32_t AccumuloProxy_hasSystemPermission_pargs::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_hasSystemPermission_result::~AccumuloProxy_hasSystemPermission_result() throw() {
}


 uint32_t AccumuloProxy_hasSystemPermission_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14010,8 +15404,14 @@ uint32_t AccumuloProxy_hasSystemPermission_result::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_hasSystemPermission_presult::~AccumuloProxy_hasSystemPermission_presult() throw() {
}


 uint32_t AccumuloProxy_hasSystemPermission_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14066,8 +15466,14 @@ uint32_t AccumuloProxy_hasSystemPermission_presult::read(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_hasTablePermission_args::~AccumuloProxy_hasTablePermission_args() throw() {
}


 uint32_t AccumuloProxy_hasTablePermission_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14112,9 +15518,9 @@ uint32_t AccumuloProxy_hasTablePermission_args::read(::apache::thrift::protocol:
         break;
       case 4:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast481;
          xfer += iprot-&gt;readI32(ecast481);
          this-&gt;perm = (TablePermission::type)ecast481;
          int32_t ecast537;
          xfer += iprot-&gt;readI32(ecast537);
          this-&gt;perm = (TablePermission::type)ecast537;
           this-&gt;__isset.perm = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -14134,6 +15540,7 @@ uint32_t AccumuloProxy_hasTablePermission_args::read(::apache::thrift::protocol:
 
 uint32_t AccumuloProxy_hasTablePermission_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_hasTablePermission_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14157,8 +15564,14 @@ uint32_t AccumuloProxy_hasTablePermission_args::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_hasTablePermission_pargs::~AccumuloProxy_hasTablePermission_pargs() throw() {
}


 uint32_t AccumuloProxy_hasTablePermission_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_hasTablePermission_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14182,8 +15595,14 @@ uint32_t AccumuloProxy_hasTablePermission_pargs::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_hasTablePermission_result::~AccumuloProxy_hasTablePermission_result() throw() {
}


 uint32_t AccumuloProxy_hasTablePermission_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14274,8 +15693,14 @@ uint32_t AccumuloProxy_hasTablePermission_result::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_hasTablePermission_presult::~AccumuloProxy_hasTablePermission_presult() throw() {
}


 uint32_t AccumuloProxy_hasTablePermission_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14338,8 +15763,14 @@ uint32_t AccumuloProxy_hasTablePermission_presult::read(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_listLocalUsers_args::~AccumuloProxy_listLocalUsers_args() throw() {
}


 uint32_t AccumuloProxy_listLocalUsers_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14380,6 +15811,7 @@ uint32_t AccumuloProxy_listLocalUsers_args::read(::apache::thrift::protocol::TPr
 
 uint32_t AccumuloProxy_listLocalUsers_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listLocalUsers_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14391,8 +15823,14 @@ uint32_t AccumuloProxy_listLocalUsers_args::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_listLocalUsers_pargs::~AccumuloProxy_listLocalUsers_pargs() throw() {
}


 uint32_t AccumuloProxy_listLocalUsers_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_listLocalUsers_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14404,8 +15842,14 @@ uint32_t AccumuloProxy_listLocalUsers_pargs::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_listLocalUsers_result::~AccumuloProxy_listLocalUsers_result() throw() {
}


 uint32_t AccumuloProxy_listLocalUsers_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14428,15 +15872,15 @@ uint32_t AccumuloProxy_listLocalUsers_result::read(::apache::thrift::protocol::T
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;success.clear();
            uint32_t _size482;
            ::apache::thrift::protocol::TType _etype485;
            xfer += iprot-&gt;readSetBegin(_etype485, _size482);
            uint32_t _i486;
            for (_i486 = 0; _i486 &lt; _size482; ++_i486)
            uint32_t _size538;
            ::apache::thrift::protocol::TType _etype541;
            xfer += iprot-&gt;readSetBegin(_etype541, _size538);
            uint32_t _i542;
            for (_i542 = 0; _i542 &lt; _size538; ++_i542)
             {
              std::string _elem487;
              xfer += iprot-&gt;readString(_elem487);
              this-&gt;success.insert(_elem487);
              std::string _elem543;
              xfer += iprot-&gt;readString(_elem543);
              this-&gt;success.insert(_elem543);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -14491,10 +15935,10 @@ uint32_t AccumuloProxy_listLocalUsers_result::write(::apache::thrift::protocol::
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_SET, 0);
     {
       xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::set&lt;std::string&gt; ::const_iterator _iter488;
      for (_iter488 = this-&gt;success.begin(); _iter488 != this-&gt;success.end(); ++_iter488)
      std::set&lt;std::string&gt; ::const_iterator _iter544;
      for (_iter544 = this-&gt;success.begin(); _iter544 != this-&gt;success.end(); ++_iter544)
       {
        xfer += oprot-&gt;writeString((*_iter488));
        xfer += oprot-&gt;writeString((*_iter544));
       }
       xfer += oprot-&gt;writeSetEnd();
     }
@@ -14517,8 +15961,14 @@ uint32_t AccumuloProxy_listLocalUsers_result::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_listLocalUsers_presult::~AccumuloProxy_listLocalUsers_presult() throw() {
}


 uint32_t AccumuloProxy_listLocalUsers_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14541,15 +15991,15 @@ uint32_t AccumuloProxy_listLocalUsers_presult::read(::apache::thrift::protocol::
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size489;
            ::apache::thrift::protocol::TType _etype492;
            xfer += iprot-&gt;readSetBegin(_etype492, _size489);
            uint32_t _i493;
            for (_i493 = 0; _i493 &lt; _size489; ++_i493)
            uint32_t _size545;
            ::apache::thrift::protocol::TType _etype548;
            xfer += iprot-&gt;readSetBegin(_etype548, _size545);
            uint32_t _i549;
            for (_i549 = 0; _i549 &lt; _size545; ++_i549)
             {
              std::string _elem494;
              xfer += iprot-&gt;readString(_elem494);
              (*(this-&gt;success)).insert(_elem494);
              std::string _elem550;
              xfer += iprot-&gt;readString(_elem550);
              (*(this-&gt;success)).insert(_elem550);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -14594,8 +16044,14 @@ uint32_t AccumuloProxy_listLocalUsers_presult::read(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_revokeSystemPermission_args::~AccumuloProxy_revokeSystemPermission_args() throw() {
}


 uint32_t AccumuloProxy_revokeSystemPermission_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14632,9 +16088,9 @@ uint32_t AccumuloProxy_revokeSystemPermission_args::read(::apache::thrift::proto
         break;
       case 3:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast495;
          xfer += iprot-&gt;readI32(ecast495);
          this-&gt;perm = (SystemPermission::type)ecast495;
          int32_t ecast551;
          xfer += iprot-&gt;readI32(ecast551);
          this-&gt;perm = (SystemPermission::type)ecast551;
           this-&gt;__isset.perm = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -14654,6 +16110,7 @@ uint32_t AccumuloProxy_revokeSystemPermission_args::read(::apache::thrift::proto
 
 uint32_t AccumuloProxy_revokeSystemPermission_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_revokeSystemPermission_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14673,8 +16130,14 @@ uint32_t AccumuloProxy_revokeSystemPermission_args::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_revokeSystemPermission_pargs::~AccumuloProxy_revokeSystemPermission_pargs() throw() {
}


 uint32_t AccumuloProxy_revokeSystemPermission_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_revokeSystemPermission_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14694,8 +16157,14 @@ uint32_t AccumuloProxy_revokeSystemPermission_pargs::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_revokeSystemPermission_result::~AccumuloProxy_revokeSystemPermission_result() throw() {
}


 uint32_t AccumuloProxy_revokeSystemPermission_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14762,8 +16231,14 @@ uint32_t AccumuloProxy_revokeSystemPermission_result::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_revokeSystemPermission_presult::~AccumuloProxy_revokeSystemPermission_presult() throw() {
}


 uint32_t AccumuloProxy_revokeSystemPermission_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14810,8 +16285,14 @@ uint32_t AccumuloProxy_revokeSystemPermission_presult::read(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_revokeTablePermission_args::~AccumuloProxy_revokeTablePermission_args() throw() {
}


 uint32_t AccumuloProxy_revokeTablePermission_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -14856,9 +16337,9 @@ uint32_t AccumuloProxy_revokeTablePermission_args::read(::apache::thrift::protoc
         break;
       case 4:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast496;
          xfer += iprot-&gt;readI32(ecast496);
          this-&gt;perm = (TablePermission::type)ecast496;
          int32_t ecast552;
          xfer += iprot-&gt;readI32(ecast552);
          this-&gt;perm = (TablePermission::type)ecast552;
           this-&gt;__isset.perm = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -14878,6 +16359,7 @@ uint32_t AccumuloProxy_revokeTablePermission_args::read(::apache::thrift::protoc
 
 uint32_t AccumuloProxy_revokeTablePermission_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_revokeTablePermission_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14901,8 +16383,14 @@ uint32_t AccumuloProxy_revokeTablePermission_args::write(::apache::thrift::proto
   return xfer;
 }
 

AccumuloProxy_revokeTablePermission_pargs::~AccumuloProxy_revokeTablePermission_pargs() throw() {
}


 uint32_t AccumuloProxy_revokeTablePermission_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_revokeTablePermission_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -14926,8 +16414,14 @@ uint32_t AccumuloProxy_revokeTablePermission_pargs::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_revokeTablePermission_result::~AccumuloProxy_revokeTablePermission_result() throw() {
}


 uint32_t AccumuloProxy_revokeTablePermission_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15006,8 +16500,14 @@ uint32_t AccumuloProxy_revokeTablePermission_result::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_revokeTablePermission_presult::~AccumuloProxy_revokeTablePermission_presult() throw() {
}


 uint32_t AccumuloProxy_revokeTablePermission_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15062,8 +16562,14 @@ uint32_t AccumuloProxy_revokeTablePermission_presult::read(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_createBatchScanner_args::~AccumuloProxy_createBatchScanner_args() throw() {
}


 uint32_t AccumuloProxy_createBatchScanner_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15120,6 +16626,7 @@ uint32_t AccumuloProxy_createBatchScanner_args::read(::apache::thrift::protocol:
 
 uint32_t AccumuloProxy_createBatchScanner_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createBatchScanner_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -15139,8 +16646,14 @@ uint32_t AccumuloProxy_createBatchScanner_args::write(::apache::thrift::protocol
   return xfer;
 }
 

AccumuloProxy_createBatchScanner_pargs::~AccumuloProxy_createBatchScanner_pargs() throw() {
}


 uint32_t AccumuloProxy_createBatchScanner_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createBatchScanner_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -15160,8 +16673,14 @@ uint32_t AccumuloProxy_createBatchScanner_pargs::write(::apache::thrift::protoco
   return xfer;
 }
 

AccumuloProxy_createBatchScanner_result::~AccumuloProxy_createBatchScanner_result() throw() {
}


 uint32_t AccumuloProxy_createBatchScanner_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15252,8 +16771,14 @@ uint32_t AccumuloProxy_createBatchScanner_result::write(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_createBatchScanner_presult::~AccumuloProxy_createBatchScanner_presult() throw() {
}


 uint32_t AccumuloProxy_createBatchScanner_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15316,8 +16841,14 @@ uint32_t AccumuloProxy_createBatchScanner_presult::read(::apache::thrift::protoc
   return xfer;
 }
 

AccumuloProxy_createScanner_args::~AccumuloProxy_createScanner_args() throw() {
}


 uint32_t AccumuloProxy_createScanner_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15374,6 +16905,7 @@ uint32_t AccumuloProxy_createScanner_args::read(::apache::thrift::protocol::TPro
 
 uint32_t AccumuloProxy_createScanner_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createScanner_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -15393,8 +16925,14 @@ uint32_t AccumuloProxy_createScanner_args::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_createScanner_pargs::~AccumuloProxy_createScanner_pargs() throw() {
}


 uint32_t AccumuloProxy_createScanner_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createScanner_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -15414,8 +16952,14 @@ uint32_t AccumuloProxy_createScanner_pargs::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_createScanner_result::~AccumuloProxy_createScanner_result() throw() {
}


 uint32_t AccumuloProxy_createScanner_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15506,8 +17050,14 @@ uint32_t AccumuloProxy_createScanner_result::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_createScanner_presult::~AccumuloProxy_createScanner_presult() throw() {
}


 uint32_t AccumuloProxy_createScanner_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15570,8 +17120,14 @@ uint32_t AccumuloProxy_createScanner_presult::read(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_hasNext_args::~AccumuloProxy_hasNext_args() throw() {
}


 uint32_t AccumuloProxy_hasNext_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15612,6 +17168,7 @@ uint32_t AccumuloProxy_hasNext_args::read(::apache::thrift::protocol::TProtocol*
 
 uint32_t AccumuloProxy_hasNext_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_hasNext_args");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -15623,8 +17180,14 @@ uint32_t AccumuloProxy_hasNext_args::write(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_hasNext_pargs::~AccumuloProxy_hasNext_pargs() throw() {
}


 uint32_t AccumuloProxy_hasNext_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_hasNext_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -15636,8 +17199,14 @@ uint32_t AccumuloProxy_hasNext_pargs::write(::apache::thrift::protocol::TProtoco
   return xfer;
 }
 

AccumuloProxy_hasNext_result::~AccumuloProxy_hasNext_result() throw() {
}


 uint32_t AccumuloProxy_hasNext_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15704,8 +17273,14 @@ uint32_t AccumuloProxy_hasNext_result::write(::apache::thrift::protocol::TProtoc
   return xfer;
 }
 

AccumuloProxy_hasNext_presult::~AccumuloProxy_hasNext_presult() throw() {
}


 uint32_t AccumuloProxy_hasNext_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15752,8 +17327,14 @@ uint32_t AccumuloProxy_hasNext_presult::read(::apache::thrift::protocol::TProtoc
   return xfer;
 }
 

AccumuloProxy_nextEntry_args::~AccumuloProxy_nextEntry_args() throw() {
}


 uint32_t AccumuloProxy_nextEntry_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15794,6 +17375,7 @@ uint32_t AccumuloProxy_nextEntry_args::read(::apache::thrift::protocol::TProtoco
 
 uint32_t AccumuloProxy_nextEntry_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_nextEntry_args");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -15805,8 +17387,14 @@ uint32_t AccumuloProxy_nextEntry_args::write(::apache::thrift::protocol::TProtoc
   return xfer;
 }
 

AccumuloProxy_nextEntry_pargs::~AccumuloProxy_nextEntry_pargs() throw() {
}


 uint32_t AccumuloProxy_nextEntry_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_nextEntry_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -15818,8 +17406,14 @@ uint32_t AccumuloProxy_nextEntry_pargs::write(::apache::thrift::protocol::TProto
   return xfer;
 }
 

AccumuloProxy_nextEntry_result::~AccumuloProxy_nextEntry_result() throw() {
}


 uint32_t AccumuloProxy_nextEntry_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15910,8 +17504,14 @@ uint32_t AccumuloProxy_nextEntry_result::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_nextEntry_presult::~AccumuloProxy_nextEntry_presult() throw() {
}


 uint32_t AccumuloProxy_nextEntry_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -15974,8 +17574,14 @@ uint32_t AccumuloProxy_nextEntry_presult::read(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_nextK_args::~AccumuloProxy_nextK_args() throw() {
}


 uint32_t AccumuloProxy_nextK_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16024,6 +17630,7 @@ uint32_t AccumuloProxy_nextK_args::read(::apache::thrift::protocol::TProtocol* i
 
 uint32_t AccumuloProxy_nextK_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_nextK_args");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -16039,8 +17646,14 @@ uint32_t AccumuloProxy_nextK_args::write(::apache::thrift::protocol::TProtocol*
   return xfer;
 }
 

AccumuloProxy_nextK_pargs::~AccumuloProxy_nextK_pargs() throw() {
}


 uint32_t AccumuloProxy_nextK_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_nextK_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -16056,8 +17669,14 @@ uint32_t AccumuloProxy_nextK_pargs::write(::apache::thrift::protocol::TProtocol*
   return xfer;
 }
 

AccumuloProxy_nextK_result::~AccumuloProxy_nextK_result() throw() {
}


 uint32_t AccumuloProxy_nextK_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16148,8 +17767,14 @@ uint32_t AccumuloProxy_nextK_result::write(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_nextK_presult::~AccumuloProxy_nextK_presult() throw() {
}


 uint32_t AccumuloProxy_nextK_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16212,8 +17837,14 @@ uint32_t AccumuloProxy_nextK_presult::read(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_closeScanner_args::~AccumuloProxy_closeScanner_args() throw() {
}


 uint32_t AccumuloProxy_closeScanner_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16254,6 +17885,7 @@ uint32_t AccumuloProxy_closeScanner_args::read(::apache::thrift::protocol::TProt
 
 uint32_t AccumuloProxy_closeScanner_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_closeScanner_args");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -16265,8 +17897,14 @@ uint32_t AccumuloProxy_closeScanner_args::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_closeScanner_pargs::~AccumuloProxy_closeScanner_pargs() throw() {
}


 uint32_t AccumuloProxy_closeScanner_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_closeScanner_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("scanner", ::apache::thrift::protocol::T_STRING, 1);
@@ -16278,8 +17916,14 @@ uint32_t AccumuloProxy_closeScanner_pargs::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_closeScanner_result::~AccumuloProxy_closeScanner_result() throw() {
}


 uint32_t AccumuloProxy_closeScanner_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16334,8 +17978,14 @@ uint32_t AccumuloProxy_closeScanner_result::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_closeScanner_presult::~AccumuloProxy_closeScanner_presult() throw() {
}


 uint32_t AccumuloProxy_closeScanner_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16374,8 +18024,14 @@ uint32_t AccumuloProxy_closeScanner_presult::read(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_updateAndFlush_args::~AccumuloProxy_updateAndFlush_args() throw() {
}


 uint32_t AccumuloProxy_updateAndFlush_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16414,26 +18070,26 @@ uint32_t AccumuloProxy_updateAndFlush_args::read(::apache::thrift::protocol::TPr
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;cells.clear();
            uint32_t _size497;
            ::apache::thrift::protocol::TType _ktype498;
            ::apache::thrift::protocol::TType _vtype499;
            xfer += iprot-&gt;readMapBegin(_ktype498, _vtype499, _size497);
            uint32_t _i501;
            for (_i501 = 0; _i501 &lt; _size497; ++_i501)
            uint32_t _size553;
            ::apache::thrift::protocol::TType _ktype554;
            ::apache::thrift::protocol::TType _vtype555;
            xfer += iprot-&gt;readMapBegin(_ktype554, _vtype555, _size553);
            uint32_t _i557;
            for (_i557 = 0; _i557 &lt; _size553; ++_i557)
             {
              std::string _key502;
              xfer += iprot-&gt;readBinary(_key502);
              std::vector&lt;ColumnUpdate&gt; &amp; _val503 = this-&gt;cells[_key502];
              std::string _key558;
              xfer += iprot-&gt;readBinary(_key558);
              std::vector&lt;ColumnUpdate&gt; &amp; _val559 = this-&gt;cells[_key558];
               {
                _val503.clear();
                uint32_t _size504;
                ::apache::thrift::protocol::TType _etype507;
                xfer += iprot-&gt;readListBegin(_etype507, _size504);
                _val503.resize(_size504);
                uint32_t _i508;
                for (_i508 = 0; _i508 &lt; _size504; ++_i508)
                _val559.clear();
                uint32_t _size560;
                ::apache::thrift::protocol::TType _etype563;
                xfer += iprot-&gt;readListBegin(_etype563, _size560);
                _val559.resize(_size560);
                uint32_t _i564;
                for (_i564 = 0; _i564 &lt; _size560; ++_i564)
                 {
                  xfer += _val503[_i508].read(iprot);
                  xfer += _val559[_i564].read(iprot);
                 }
                 xfer += iprot-&gt;readListEnd();
               }
@@ -16459,6 +18115,7 @@ uint32_t AccumuloProxy_updateAndFlush_args::read(::apache::thrift::protocol::TPr
 
 uint32_t AccumuloProxy_updateAndFlush_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_updateAndFlush_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -16472,16 +18129,16 @@ uint32_t AccumuloProxy_updateAndFlush_args::write(::apache::thrift::protocol::TP
   xfer += oprot-&gt;writeFieldBegin("cells", ::apache::thrift::protocol::T_MAP, 3);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_LIST, static_cast&lt;uint32_t&gt;(this-&gt;cells.size()));
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter509;
    for (_iter509 = this-&gt;cells.begin(); _iter509 != this-&gt;cells.end(); ++_iter509)
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter565;
    for (_iter565 = this-&gt;cells.begin(); _iter565 != this-&gt;cells.end(); ++_iter565)
     {
      xfer += oprot-&gt;writeBinary(_iter509-&gt;first);
      xfer += oprot-&gt;writeBinary(_iter565-&gt;first);
       {
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter509-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter510;
        for (_iter510 = _iter509-&gt;second.begin(); _iter510 != _iter509-&gt;second.end(); ++_iter510)
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter565-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter566;
        for (_iter566 = _iter565-&gt;second.begin(); _iter566 != _iter565-&gt;second.end(); ++_iter566)
         {
          xfer += (*_iter510).write(oprot);
          xfer += (*_iter566).write(oprot);
         }
         xfer += oprot-&gt;writeListEnd();
       }
@@ -16495,8 +18152,14 @@ uint32_t AccumuloProxy_updateAndFlush_args::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_updateAndFlush_pargs::~AccumuloProxy_updateAndFlush_pargs() throw() {
}


 uint32_t AccumuloProxy_updateAndFlush_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_updateAndFlush_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -16510,16 +18173,16 @@ uint32_t AccumuloProxy_updateAndFlush_pargs::write(::apache::thrift::protocol::T
   xfer += oprot-&gt;writeFieldBegin("cells", ::apache::thrift::protocol::T_MAP, 3);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_LIST, static_cast&lt;uint32_t&gt;((*(this-&gt;cells)).size()));
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter511;
    for (_iter511 = (*(this-&gt;cells)).begin(); _iter511 != (*(this-&gt;cells)).end(); ++_iter511)
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter567;
    for (_iter567 = (*(this-&gt;cells)).begin(); _iter567 != (*(this-&gt;cells)).end(); ++_iter567)
     {
      xfer += oprot-&gt;writeBinary(_iter511-&gt;first);
      xfer += oprot-&gt;writeBinary(_iter567-&gt;first);
       {
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter511-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter512;
        for (_iter512 = _iter511-&gt;second.begin(); _iter512 != _iter511-&gt;second.end(); ++_iter512)
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter567-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter568;
        for (_iter568 = _iter567-&gt;second.begin(); _iter568 != _iter567-&gt;second.end(); ++_iter568)
         {
          xfer += (*_iter512).write(oprot);
          xfer += (*_iter568).write(oprot);
         }
         xfer += oprot-&gt;writeListEnd();
       }
@@ -16533,8 +18196,14 @@ uint32_t AccumuloProxy_updateAndFlush_pargs::write(::apache::thrift::protocol::T
   return xfer;
 }
 

AccumuloProxy_updateAndFlush_result::~AccumuloProxy_updateAndFlush_result() throw() {
}


 uint32_t AccumuloProxy_updateAndFlush_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16625,8 +18294,14 @@ uint32_t AccumuloProxy_updateAndFlush_result::write(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_updateAndFlush_presult::~AccumuloProxy_updateAndFlush_presult() throw() {
}


 uint32_t AccumuloProxy_updateAndFlush_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16689,8 +18364,14 @@ uint32_t AccumuloProxy_updateAndFlush_presult::read(::apache::thrift::protocol::
   return xfer;
 }
 

AccumuloProxy_createWriter_args::~AccumuloProxy_createWriter_args() throw() {
}


 uint32_t AccumuloProxy_createWriter_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16747,6 +18428,7 @@ uint32_t AccumuloProxy_createWriter_args::read(::apache::thrift::protocol::TProt
 
 uint32_t AccumuloProxy_createWriter_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createWriter_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -16766,8 +18448,14 @@ uint32_t AccumuloProxy_createWriter_args::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_createWriter_pargs::~AccumuloProxy_createWriter_pargs() throw() {
}


 uint32_t AccumuloProxy_createWriter_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createWriter_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -16787,8 +18475,14 @@ uint32_t AccumuloProxy_createWriter_pargs::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_createWriter_result::~AccumuloProxy_createWriter_result() throw() {
}


 uint32_t AccumuloProxy_createWriter_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16879,8 +18573,14 @@ uint32_t AccumuloProxy_createWriter_result::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_createWriter_presult::~AccumuloProxy_createWriter_presult() throw() {
}


 uint32_t AccumuloProxy_createWriter_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16943,8 +18643,14 @@ uint32_t AccumuloProxy_createWriter_presult::read(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_update_args::~AccumuloProxy_update_args() throw() {
}


 uint32_t AccumuloProxy_update_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -16975,26 +18681,26 @@ uint32_t AccumuloProxy_update_args::read(::apache::thrift::protocol::TProtocol*
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;cells.clear();
            uint32_t _size513;
            ::apache::thrift::protocol::TType _ktype514;
            ::apache::thrift::protocol::TType _vtype515;
            xfer += iprot-&gt;readMapBegin(_ktype514, _vtype515, _size513);
            uint32_t _i517;
            for (_i517 = 0; _i517 &lt; _size513; ++_i517)
            uint32_t _size569;
            ::apache::thrift::protocol::TType _ktype570;
            ::apache::thrift::protocol::TType _vtype571;
            xfer += iprot-&gt;readMapBegin(_ktype570, _vtype571, _size569);
            uint32_t _i573;
            for (_i573 = 0; _i573 &lt; _size569; ++_i573)
             {
              std::string _key518;
              xfer += iprot-&gt;readBinary(_key518);
              std::vector&lt;ColumnUpdate&gt; &amp; _val519 = this-&gt;cells[_key518];
              std::string _key574;
              xfer += iprot-&gt;readBinary(_key574);
              std::vector&lt;ColumnUpdate&gt; &amp; _val575 = this-&gt;cells[_key574];
               {
                _val519.clear();
                uint32_t _size520;
                ::apache::thrift::protocol::TType _etype523;
                xfer += iprot-&gt;readListBegin(_etype523, _size520);
                _val519.resize(_size520);
                uint32_t _i524;
                for (_i524 = 0; _i524 &lt; _size520; ++_i524)
                _val575.clear();
                uint32_t _size576;
                ::apache::thrift::protocol::TType _etype579;
                xfer += iprot-&gt;readListBegin(_etype579, _size576);
                _val575.resize(_size576);
                uint32_t _i580;
                for (_i580 = 0; _i580 &lt; _size576; ++_i580)
                 {
                  xfer += _val519[_i524].read(iprot);
                  xfer += _val575[_i580].read(iprot);
                 }
                 xfer += iprot-&gt;readListEnd();
               }
@@ -17020,6 +18726,7 @@ uint32_t AccumuloProxy_update_args::read(::apache::thrift::protocol::TProtocol*
 
 uint32_t AccumuloProxy_update_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_update_args");
 
   xfer += oprot-&gt;writeFieldBegin("writer", ::apache::thrift::protocol::T_STRING, 1);
@@ -17029,16 +18736,16 @@ uint32_t AccumuloProxy_update_args::write(::apache::thrift::protocol::TProtocol*
   xfer += oprot-&gt;writeFieldBegin("cells", ::apache::thrift::protocol::T_MAP, 2);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_LIST, static_cast&lt;uint32_t&gt;(this-&gt;cells.size()));
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter525;
    for (_iter525 = this-&gt;cells.begin(); _iter525 != this-&gt;cells.end(); ++_iter525)
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter581;
    for (_iter581 = this-&gt;cells.begin(); _iter581 != this-&gt;cells.end(); ++_iter581)
     {
      xfer += oprot-&gt;writeBinary(_iter525-&gt;first);
      xfer += oprot-&gt;writeBinary(_iter581-&gt;first);
       {
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter525-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter526;
        for (_iter526 = _iter525-&gt;second.begin(); _iter526 != _iter525-&gt;second.end(); ++_iter526)
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter581-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter582;
        for (_iter582 = _iter581-&gt;second.begin(); _iter582 != _iter581-&gt;second.end(); ++_iter582)
         {
          xfer += (*_iter526).write(oprot);
          xfer += (*_iter582).write(oprot);
         }
         xfer += oprot-&gt;writeListEnd();
       }
@@ -17052,8 +18759,14 @@ uint32_t AccumuloProxy_update_args::write(::apache::thrift::protocol::TProtocol*
   return xfer;
 }
 

AccumuloProxy_update_pargs::~AccumuloProxy_update_pargs() throw() {
}


 uint32_t AccumuloProxy_update_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_update_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("writer", ::apache::thrift::protocol::T_STRING, 1);
@@ -17063,16 +18776,16 @@ uint32_t AccumuloProxy_update_pargs::write(::apache::thrift::protocol::TProtocol
   xfer += oprot-&gt;writeFieldBegin("cells", ::apache::thrift::protocol::T_MAP, 2);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_LIST, static_cast&lt;uint32_t&gt;((*(this-&gt;cells)).size()));
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter527;
    for (_iter527 = (*(this-&gt;cells)).begin(); _iter527 != (*(this-&gt;cells)).end(); ++_iter527)
    std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; ::const_iterator _iter583;
    for (_iter583 = (*(this-&gt;cells)).begin(); _iter583 != (*(this-&gt;cells)).end(); ++_iter583)
     {
      xfer += oprot-&gt;writeBinary(_iter527-&gt;first);
      xfer += oprot-&gt;writeBinary(_iter583-&gt;first);
       {
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter527-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter528;
        for (_iter528 = _iter527-&gt;second.begin(); _iter528 != _iter527-&gt;second.end(); ++_iter528)
        xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(_iter583-&gt;second.size()));
        std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter584;
        for (_iter584 = _iter583-&gt;second.begin(); _iter584 != _iter583-&gt;second.end(); ++_iter584)
         {
          xfer += (*_iter528).write(oprot);
          xfer += (*_iter584).write(oprot);
         }
         xfer += oprot-&gt;writeListEnd();
       }
@@ -17086,8 +18799,14 @@ uint32_t AccumuloProxy_update_pargs::write(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_flush_args::~AccumuloProxy_flush_args() throw() {
}


 uint32_t AccumuloProxy_flush_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17128,6 +18847,7 @@ uint32_t AccumuloProxy_flush_args::read(::apache::thrift::protocol::TProtocol* i
 
 uint32_t AccumuloProxy_flush_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_flush_args");
 
   xfer += oprot-&gt;writeFieldBegin("writer", ::apache::thrift::protocol::T_STRING, 1);
@@ -17139,8 +18859,14 @@ uint32_t AccumuloProxy_flush_args::write(::apache::thrift::protocol::TProtocol*
   return xfer;
 }
 

AccumuloProxy_flush_pargs::~AccumuloProxy_flush_pargs() throw() {
}


 uint32_t AccumuloProxy_flush_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_flush_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("writer", ::apache::thrift::protocol::T_STRING, 1);
@@ -17152,8 +18878,14 @@ uint32_t AccumuloProxy_flush_pargs::write(::apache::thrift::protocol::TProtocol*
   return xfer;
 }
 

AccumuloProxy_flush_result::~AccumuloProxy_flush_result() throw() {
}


 uint32_t AccumuloProxy_flush_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17220,8 +18952,14 @@ uint32_t AccumuloProxy_flush_result::write(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_flush_presult::~AccumuloProxy_flush_presult() throw() {
}


 uint32_t AccumuloProxy_flush_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17268,8 +19006,14 @@ uint32_t AccumuloProxy_flush_presult::read(::apache::thrift::protocol::TProtocol
   return xfer;
 }
 

AccumuloProxy_closeWriter_args::~AccumuloProxy_closeWriter_args() throw() {
}


 uint32_t AccumuloProxy_closeWriter_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17310,6 +19054,7 @@ uint32_t AccumuloProxy_closeWriter_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_closeWriter_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_closeWriter_args");
 
   xfer += oprot-&gt;writeFieldBegin("writer", ::apache::thrift::protocol::T_STRING, 1);
@@ -17321,8 +19066,14 @@ uint32_t AccumuloProxy_closeWriter_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_closeWriter_pargs::~AccumuloProxy_closeWriter_pargs() throw() {
}


 uint32_t AccumuloProxy_closeWriter_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_closeWriter_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("writer", ::apache::thrift::protocol::T_STRING, 1);
@@ -17334,8 +19085,14 @@ uint32_t AccumuloProxy_closeWriter_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_closeWriter_result::~AccumuloProxy_closeWriter_result() throw() {
}


 uint32_t AccumuloProxy_closeWriter_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17402,8 +19159,14 @@ uint32_t AccumuloProxy_closeWriter_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_closeWriter_presult::~AccumuloProxy_closeWriter_presult() throw() {
}


 uint32_t AccumuloProxy_closeWriter_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17450,8 +19213,14 @@ uint32_t AccumuloProxy_closeWriter_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_updateRowConditionally_args::~AccumuloProxy_updateRowConditionally_args() throw() {
}


 uint32_t AccumuloProxy_updateRowConditionally_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17516,6 +19285,7 @@ uint32_t AccumuloProxy_updateRowConditionally_args::read(::apache::thrift::proto
 
 uint32_t AccumuloProxy_updateRowConditionally_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_updateRowConditionally_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -17539,8 +19309,14 @@ uint32_t AccumuloProxy_updateRowConditionally_args::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_updateRowConditionally_pargs::~AccumuloProxy_updateRowConditionally_pargs() throw() {
}


 uint32_t AccumuloProxy_updateRowConditionally_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_updateRowConditionally_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -17564,8 +19340,14 @@ uint32_t AccumuloProxy_updateRowConditionally_pargs::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_updateRowConditionally_result::~AccumuloProxy_updateRowConditionally_result() throw() {
}


 uint32_t AccumuloProxy_updateRowConditionally_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17586,9 +19368,9 @@ uint32_t AccumuloProxy_updateRowConditionally_result::read(::apache::thrift::pro
     {
       case 0:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast529;
          xfer += iprot-&gt;readI32(ecast529);
          this-&gt;success = (ConditionalStatus::type)ecast529;
          int32_t ecast585;
          xfer += iprot-&gt;readI32(ecast585);
          this-&gt;success = (ConditionalStatus::type)ecast585;
           this-&gt;__isset.success = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -17658,8 +19440,14 @@ uint32_t AccumuloProxy_updateRowConditionally_result::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_updateRowConditionally_presult::~AccumuloProxy_updateRowConditionally_presult() throw() {
}


 uint32_t AccumuloProxy_updateRowConditionally_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17680,9 +19468,9 @@ uint32_t AccumuloProxy_updateRowConditionally_presult::read(::apache::thrift::pr
     {
       case 0:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast530;
          xfer += iprot-&gt;readI32(ecast530);
          (*(this-&gt;success)) = (ConditionalStatus::type)ecast530;
          int32_t ecast586;
          xfer += iprot-&gt;readI32(ecast586);
          (*(this-&gt;success)) = (ConditionalStatus::type)ecast586;
           this-&gt;__isset.success = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -17724,8 +19512,14 @@ uint32_t AccumuloProxy_updateRowConditionally_presult::read(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_createConditionalWriter_args::~AccumuloProxy_createConditionalWriter_args() throw() {
}


 uint32_t AccumuloProxy_createConditionalWriter_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17782,6 +19576,7 @@ uint32_t AccumuloProxy_createConditionalWriter_args::read(::apache::thrift::prot
 
 uint32_t AccumuloProxy_createConditionalWriter_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createConditionalWriter_args");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -17801,8 +19596,14 @@ uint32_t AccumuloProxy_createConditionalWriter_args::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_createConditionalWriter_pargs::~AccumuloProxy_createConditionalWriter_pargs() throw() {
}


 uint32_t AccumuloProxy_createConditionalWriter_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_createConditionalWriter_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("login", ::apache::thrift::protocol::T_STRING, 1);
@@ -17822,8 +19623,14 @@ uint32_t AccumuloProxy_createConditionalWriter_pargs::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_createConditionalWriter_result::~AccumuloProxy_createConditionalWriter_result() throw() {
}


 uint32_t AccumuloProxy_createConditionalWriter_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17914,8 +19721,14 @@ uint32_t AccumuloProxy_createConditionalWriter_result::write(::apache::thrift::p
   return xfer;
 }
 

AccumuloProxy_createConditionalWriter_presult::~AccumuloProxy_createConditionalWriter_presult() throw() {
}


 uint32_t AccumuloProxy_createConditionalWriter_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -17978,8 +19791,14 @@ uint32_t AccumuloProxy_createConditionalWriter_presult::read(::apache::thrift::p
   return xfer;
 }
 

AccumuloProxy_updateRowsConditionally_args::~AccumuloProxy_updateRowsConditionally_args() throw() {
}


 uint32_t AccumuloProxy_updateRowsConditionally_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18010,17 +19829,17 @@ uint32_t AccumuloProxy_updateRowsConditionally_args::read(::apache::thrift::prot
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;updates.clear();
            uint32_t _size531;
            ::apache::thrift::protocol::TType _ktype532;
            ::apache::thrift::protocol::TType _vtype533;
            xfer += iprot-&gt;readMapBegin(_ktype532, _vtype533, _size531);
            uint32_t _i535;
            for (_i535 = 0; _i535 &lt; _size531; ++_i535)
            uint32_t _size587;
            ::apache::thrift::protocol::TType _ktype588;
            ::apache::thrift::protocol::TType _vtype589;
            xfer += iprot-&gt;readMapBegin(_ktype588, _vtype589, _size587);
            uint32_t _i591;
            for (_i591 = 0; _i591 &lt; _size587; ++_i591)
             {
              std::string _key536;
              xfer += iprot-&gt;readBinary(_key536);
              ConditionalUpdates&amp; _val537 = this-&gt;updates[_key536];
              xfer += _val537.read(iprot);
              std::string _key592;
              xfer += iprot-&gt;readBinary(_key592);
              ConditionalUpdates&amp; _val593 = this-&gt;updates[_key592];
              xfer += _val593.read(iprot);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -18043,6 +19862,7 @@ uint32_t AccumuloProxy_updateRowsConditionally_args::read(::apache::thrift::prot
 
 uint32_t AccumuloProxy_updateRowsConditionally_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_updateRowsConditionally_args");
 
   xfer += oprot-&gt;writeFieldBegin("conditionalWriter", ::apache::thrift::protocol::T_STRING, 1);
@@ -18052,11 +19872,11 @@ uint32_t AccumuloProxy_updateRowsConditionally_args::write(::apache::thrift::pro
   xfer += oprot-&gt;writeFieldBegin("updates", ::apache::thrift::protocol::T_MAP, 2);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;updates.size()));
    std::map&lt;std::string, ConditionalUpdates&gt; ::const_iterator _iter538;
    for (_iter538 = this-&gt;updates.begin(); _iter538 != this-&gt;updates.end(); ++_iter538)
    std::map&lt;std::string, ConditionalUpdates&gt; ::const_iterator _iter594;
    for (_iter594 = this-&gt;updates.begin(); _iter594 != this-&gt;updates.end(); ++_iter594)
     {
      xfer += oprot-&gt;writeBinary(_iter538-&gt;first);
      xfer += _iter538-&gt;second.write(oprot);
      xfer += oprot-&gt;writeBinary(_iter594-&gt;first);
      xfer += _iter594-&gt;second.write(oprot);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -18067,8 +19887,14 @@ uint32_t AccumuloProxy_updateRowsConditionally_args::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_updateRowsConditionally_pargs::~AccumuloProxy_updateRowsConditionally_pargs() throw() {
}


 uint32_t AccumuloProxy_updateRowsConditionally_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_updateRowsConditionally_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("conditionalWriter", ::apache::thrift::protocol::T_STRING, 1);
@@ -18078,11 +19904,11 @@ uint32_t AccumuloProxy_updateRowsConditionally_pargs::write(::apache::thrift::pr
   xfer += oprot-&gt;writeFieldBegin("updates", ::apache::thrift::protocol::T_MAP, 2);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;((*(this-&gt;updates)).size()));
    std::map&lt;std::string, ConditionalUpdates&gt; ::const_iterator _iter539;
    for (_iter539 = (*(this-&gt;updates)).begin(); _iter539 != (*(this-&gt;updates)).end(); ++_iter539)
    std::map&lt;std::string, ConditionalUpdates&gt; ::const_iterator _iter595;
    for (_iter595 = (*(this-&gt;updates)).begin(); _iter595 != (*(this-&gt;updates)).end(); ++_iter595)
     {
      xfer += oprot-&gt;writeBinary(_iter539-&gt;first);
      xfer += _iter539-&gt;second.write(oprot);
      xfer += oprot-&gt;writeBinary(_iter595-&gt;first);
      xfer += _iter595-&gt;second.write(oprot);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -18093,8 +19919,14 @@ uint32_t AccumuloProxy_updateRowsConditionally_pargs::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_updateRowsConditionally_result::~AccumuloProxy_updateRowsConditionally_result() throw() {
}


 uint32_t AccumuloProxy_updateRowsConditionally_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18117,19 +19949,19 @@ uint32_t AccumuloProxy_updateRowsConditionally_result::read(::apache::thrift::pr
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;success.clear();
            uint32_t _size540;
            ::apache::thrift::protocol::TType _ktype541;
            ::apache::thrift::protocol::TType _vtype542;
            xfer += iprot-&gt;readMapBegin(_ktype541, _vtype542, _size540);
            uint32_t _i544;
            for (_i544 = 0; _i544 &lt; _size540; ++_i544)
            uint32_t _size596;
            ::apache::thrift::protocol::TType _ktype597;
            ::apache::thrift::protocol::TType _vtype598;
            xfer += iprot-&gt;readMapBegin(_ktype597, _vtype598, _size596);
            uint32_t _i600;
            for (_i600 = 0; _i600 &lt; _size596; ++_i600)
             {
              std::string _key545;
              xfer += iprot-&gt;readBinary(_key545);
              ConditionalStatus::type&amp; _val546 = this-&gt;success[_key545];
              int32_t ecast547;
              xfer += iprot-&gt;readI32(ecast547);
              _val546 = (ConditionalStatus::type)ecast547;
              std::string _key601;
              xfer += iprot-&gt;readBinary(_key601);
              ConditionalStatus::type&amp; _val602 = this-&gt;success[_key601];
              int32_t ecast603;
              xfer += iprot-&gt;readI32(ecast603);
              _val602 = (ConditionalStatus::type)ecast603;
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -18184,11 +20016,11 @@ uint32_t AccumuloProxy_updateRowsConditionally_result::write(::apache::thrift::p
     xfer += oprot-&gt;writeFieldBegin("success", ::apache::thrift::protocol::T_MAP, 0);
     {
       xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_I32, static_cast&lt;uint32_t&gt;(this-&gt;success.size()));
      std::map&lt;std::string, ConditionalStatus::type&gt; ::const_iterator _iter548;
      for (_iter548 = this-&gt;success.begin(); _iter548 != this-&gt;success.end(); ++_iter548)
      std::map&lt;std::string, ConditionalStatus::type&gt; ::const_iterator _iter604;
      for (_iter604 = this-&gt;success.begin(); _iter604 != this-&gt;success.end(); ++_iter604)
       {
        xfer += oprot-&gt;writeBinary(_iter548-&gt;first);
        xfer += oprot-&gt;writeI32((int32_t)_iter548-&gt;second);
        xfer += oprot-&gt;writeBinary(_iter604-&gt;first);
        xfer += oprot-&gt;writeI32((int32_t)_iter604-&gt;second);
       }
       xfer += oprot-&gt;writeMapEnd();
     }
@@ -18211,8 +20043,14 @@ uint32_t AccumuloProxy_updateRowsConditionally_result::write(::apache::thrift::p
   return xfer;
 }
 

AccumuloProxy_updateRowsConditionally_presult::~AccumuloProxy_updateRowsConditionally_presult() throw() {
}


 uint32_t AccumuloProxy_updateRowsConditionally_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18235,19 +20073,19 @@ uint32_t AccumuloProxy_updateRowsConditionally_presult::read(::apache::thrift::p
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             (*(this-&gt;success)).clear();
            uint32_t _size549;
            ::apache::thrift::protocol::TType _ktype550;
            ::apache::thrift::protocol::TType _vtype551;
            xfer += iprot-&gt;readMapBegin(_ktype550, _vtype551, _size549);
            uint32_t _i553;
            for (_i553 = 0; _i553 &lt; _size549; ++_i553)
            uint32_t _size605;
            ::apache::thrift::protocol::TType _ktype606;
            ::apache::thrift::protocol::TType _vtype607;
            xfer += iprot-&gt;readMapBegin(_ktype606, _vtype607, _size605);
            uint32_t _i609;
            for (_i609 = 0; _i609 &lt; _size605; ++_i609)
             {
              std::string _key554;
              xfer += iprot-&gt;readBinary(_key554);
              ConditionalStatus::type&amp; _val555 = (*(this-&gt;success))[_key554];
              int32_t ecast556;
              xfer += iprot-&gt;readI32(ecast556);
              _val555 = (ConditionalStatus::type)ecast556;
              std::string _key610;
              xfer += iprot-&gt;readBinary(_key610);
              ConditionalStatus::type&amp; _val611 = (*(this-&gt;success))[_key610];
              int32_t ecast612;
              xfer += iprot-&gt;readI32(ecast612);
              _val611 = (ConditionalStatus::type)ecast612;
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -18292,8 +20130,14 @@ uint32_t AccumuloProxy_updateRowsConditionally_presult::read(::apache::thrift::p
   return xfer;
 }
 

AccumuloProxy_closeConditionalWriter_args::~AccumuloProxy_closeConditionalWriter_args() throw() {
}


 uint32_t AccumuloProxy_closeConditionalWriter_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18334,6 +20178,7 @@ uint32_t AccumuloProxy_closeConditionalWriter_args::read(::apache::thrift::proto
 
 uint32_t AccumuloProxy_closeConditionalWriter_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_closeConditionalWriter_args");
 
   xfer += oprot-&gt;writeFieldBegin("conditionalWriter", ::apache::thrift::protocol::T_STRING, 1);
@@ -18345,8 +20190,14 @@ uint32_t AccumuloProxy_closeConditionalWriter_args::write(::apache::thrift::prot
   return xfer;
 }
 

AccumuloProxy_closeConditionalWriter_pargs::~AccumuloProxy_closeConditionalWriter_pargs() throw() {
}


 uint32_t AccumuloProxy_closeConditionalWriter_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_closeConditionalWriter_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("conditionalWriter", ::apache::thrift::protocol::T_STRING, 1);
@@ -18358,8 +20209,14 @@ uint32_t AccumuloProxy_closeConditionalWriter_pargs::write(::apache::thrift::pro
   return xfer;
 }
 

AccumuloProxy_closeConditionalWriter_result::~AccumuloProxy_closeConditionalWriter_result() throw() {
}


 uint32_t AccumuloProxy_closeConditionalWriter_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18396,8 +20253,14 @@ uint32_t AccumuloProxy_closeConditionalWriter_result::write(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_closeConditionalWriter_presult::~AccumuloProxy_closeConditionalWriter_presult() throw() {
}


 uint32_t AccumuloProxy_closeConditionalWriter_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18423,8 +20286,14 @@ uint32_t AccumuloProxy_closeConditionalWriter_presult::read(::apache::thrift::pr
   return xfer;
 }
 

AccumuloProxy_getRowRange_args::~AccumuloProxy_getRowRange_args() throw() {
}


 uint32_t AccumuloProxy_getRowRange_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18465,6 +20334,7 @@ uint32_t AccumuloProxy_getRowRange_args::read(::apache::thrift::protocol::TProto
 
 uint32_t AccumuloProxy_getRowRange_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getRowRange_args");
 
   xfer += oprot-&gt;writeFieldBegin("row", ::apache::thrift::protocol::T_STRING, 1);
@@ -18476,8 +20346,14 @@ uint32_t AccumuloProxy_getRowRange_args::write(::apache::thrift::protocol::TProt
   return xfer;
 }
 

AccumuloProxy_getRowRange_pargs::~AccumuloProxy_getRowRange_pargs() throw() {
}


 uint32_t AccumuloProxy_getRowRange_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getRowRange_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("row", ::apache::thrift::protocol::T_STRING, 1);
@@ -18489,8 +20365,14 @@ uint32_t AccumuloProxy_getRowRange_pargs::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_getRowRange_result::~AccumuloProxy_getRowRange_result() throw() {
}


 uint32_t AccumuloProxy_getRowRange_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18545,8 +20427,14 @@ uint32_t AccumuloProxy_getRowRange_result::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_getRowRange_presult::~AccumuloProxy_getRowRange_presult() throw() {
}


 uint32_t AccumuloProxy_getRowRange_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18585,8 +20473,14 @@ uint32_t AccumuloProxy_getRowRange_presult::read(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_getFollowing_args::~AccumuloProxy_getFollowing_args() throw() {
}


 uint32_t AccumuloProxy_getFollowing_args::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18615,9 +20509,9 @@ uint32_t AccumuloProxy_getFollowing_args::read(::apache::thrift::protocol::TProt
         break;
       case 2:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast557;
          xfer += iprot-&gt;readI32(ecast557);
          this-&gt;part = (PartialKey::type)ecast557;
          int32_t ecast613;
          xfer += iprot-&gt;readI32(ecast613);
          this-&gt;part = (PartialKey::type)ecast613;
           this-&gt;__isset.part = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -18637,6 +20531,7 @@ uint32_t AccumuloProxy_getFollowing_args::read(::apache::thrift::protocol::TProt
 
 uint32_t AccumuloProxy_getFollowing_args::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getFollowing_args");
 
   xfer += oprot-&gt;writeFieldBegin("key", ::apache::thrift::protocol::T_STRUCT, 1);
@@ -18652,8 +20547,14 @@ uint32_t AccumuloProxy_getFollowing_args::write(::apache::thrift::protocol::TPro
   return xfer;
 }
 

AccumuloProxy_getFollowing_pargs::~AccumuloProxy_getFollowing_pargs() throw() {
}


 uint32_t AccumuloProxy_getFollowing_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloProxy_getFollowing_pargs");
 
   xfer += oprot-&gt;writeFieldBegin("key", ::apache::thrift::protocol::T_STRUCT, 1);
@@ -18669,8 +20570,14 @@ uint32_t AccumuloProxy_getFollowing_pargs::write(::apache::thrift::protocol::TPr
   return xfer;
 }
 

AccumuloProxy_getFollowing_result::~AccumuloProxy_getFollowing_result() throw() {
}


 uint32_t AccumuloProxy_getFollowing_result::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -18725,8 +20632,14 @@ uint32_t AccumuloProxy_getFollowing_result::write(::apache::thrift::protocol::TP
   return xfer;
 }
 

AccumuloProxy_getFollowing_presult::~AccumuloProxy_getFollowing_presult() throw() {
}


 uint32_t AccumuloProxy_getFollowing_presult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -23177,7 +25090,7 @@ void AccumuloProxyClient::update(const std::string&amp; writer, const std::map&lt;std::
 void AccumuloProxyClient::send_update(const std::string&amp; writer, const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; cells)
 {
   int32_t cseqid = 0;
  oprot_-&gt;writeMessageBegin("update", ::apache::thrift::protocol::T_CALL, cseqid);
  oprot_-&gt;writeMessageBegin("update", ::apache::thrift::protocol::T_ONEWAY, cseqid);
 
   AccumuloProxy_update_pargs args;
   args.writer = &amp;writer;
@@ -27872,7 +29785,7 @@ void AccumuloProxyProcessor::process_update(int32_t, ::apache::thrift::protocol:
 
   try {
     iface_-&gt;update(args.writer, args.cells);
  } catch (const std::exception&amp; e) {
  } catch (const std::exception&amp;) {
     if (this-&gt;eventHandler_.get() != NULL) {
       this-&gt;eventHandler_-&gt;handlerError(ctx, "AccumuloProxy.update");
     }
@@ -28360,5 +30273,7048 @@ void AccumuloProxyProcessor::process_getFollowing(int32_t seqid, ::apache::thrif
   ::boost::shared_ptr&lt; ::apache::thrift::TProcessor &gt; processor(new AccumuloProxyProcessor(handler));
   return processor;
 }

void AccumuloProxyConcurrentClient::login(std::string&amp; _return, const std::string&amp; principal, const std::map&lt;std::string, std::string&gt; &amp; loginProperties)
{
  int32_t seqid = send_login(principal, loginProperties);
  recv_login(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_login(const std::string&amp; principal, const std::map&lt;std::string, std::string&gt; &amp; loginProperties)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("login", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_login_pargs args;
  args.principal = &amp;principal;
  args.loginProperties = &amp;loginProperties;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_login(std::string&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("login") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_login_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "login failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

int32_t AccumuloProxyConcurrentClient::addConstraint(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; constraintClassName)
{
  int32_t seqid = send_addConstraint(login, tableName, constraintClassName);
  return recv_addConstraint(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_addConstraint(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; constraintClassName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("addConstraint", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_addConstraint_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.constraintClassName = &amp;constraintClassName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

int32_t AccumuloProxyConcurrentClient::recv_addConstraint(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("addConstraint") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      int32_t _return;
      AccumuloProxy_addConstraint_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "addConstraint failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::addSplits(const std::string&amp; login, const std::string&amp; tableName, const std::set&lt;std::string&gt; &amp; splits)
{
  int32_t seqid = send_addSplits(login, tableName, splits);
  recv_addSplits(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_addSplits(const std::string&amp; login, const std::string&amp; tableName, const std::set&lt;std::string&gt; &amp; splits)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("addSplits", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_addSplits_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.splits = &amp;splits;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_addSplits(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("addSplits") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_addSplits_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::attachIterator(const std::string&amp; login, const std::string&amp; tableName, const IteratorSetting&amp; setting, const std::set&lt;IteratorScope::type&gt; &amp; scopes)
{
  int32_t seqid = send_attachIterator(login, tableName, setting, scopes);
  recv_attachIterator(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_attachIterator(const std::string&amp; login, const std::string&amp; tableName, const IteratorSetting&amp; setting, const std::set&lt;IteratorScope::type&gt; &amp; scopes)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("attachIterator", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_attachIterator_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.setting = &amp;setting;
  args.scopes = &amp;scopes;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_attachIterator(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("attachIterator") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_attachIterator_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::checkIteratorConflicts(const std::string&amp; login, const std::string&amp; tableName, const IteratorSetting&amp; setting, const std::set&lt;IteratorScope::type&gt; &amp; scopes)
{
  int32_t seqid = send_checkIteratorConflicts(login, tableName, setting, scopes);
  recv_checkIteratorConflicts(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_checkIteratorConflicts(const std::string&amp; login, const std::string&amp; tableName, const IteratorSetting&amp; setting, const std::set&lt;IteratorScope::type&gt; &amp; scopes)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("checkIteratorConflicts", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_checkIteratorConflicts_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.setting = &amp;setting;
  args.scopes = &amp;scopes;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_checkIteratorConflicts(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("checkIteratorConflicts") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_checkIteratorConflicts_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::clearLocatorCache(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_clearLocatorCache(login, tableName);
  recv_clearLocatorCache(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_clearLocatorCache(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("clearLocatorCache", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_clearLocatorCache_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_clearLocatorCache(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("clearLocatorCache") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_clearLocatorCache_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::cloneTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; newTableName, const bool flush, const std::map&lt;std::string, std::string&gt; &amp; propertiesToSet, const std::set&lt;std::string&gt; &amp; propertiesToExclude)
{
  int32_t seqid = send_cloneTable(login, tableName, newTableName, flush, propertiesToSet, propertiesToExclude);
  recv_cloneTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_cloneTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; newTableName, const bool flush, const std::map&lt;std::string, std::string&gt; &amp; propertiesToSet, const std::set&lt;std::string&gt; &amp; propertiesToExclude)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("cloneTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_cloneTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.newTableName = &amp;newTableName;
  args.flush = &amp;flush;
  args.propertiesToSet = &amp;propertiesToSet;
  args.propertiesToExclude = &amp;propertiesToExclude;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_cloneTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("cloneTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_cloneTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      if (result.__isset.ouch4) {
        sentry.commit();
        throw result.ouch4;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::compactTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow, const std::vector&lt;IteratorSetting&gt; &amp; iterators, const bool flush, const bool wait, const CompactionStrategyConfig&amp; compactionStrategy)
{
  int32_t seqid = send_compactTable(login, tableName, startRow, endRow, iterators, flush, wait, compactionStrategy);
  recv_compactTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_compactTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow, const std::vector&lt;IteratorSetting&gt; &amp; iterators, const bool flush, const bool wait, const CompactionStrategyConfig&amp; compactionStrategy)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("compactTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_compactTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.startRow = &amp;startRow;
  args.endRow = &amp;endRow;
  args.iterators = &amp;iterators;
  args.flush = &amp;flush;
  args.wait = &amp;wait;
  args.compactionStrategy = &amp;compactionStrategy;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_compactTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("compactTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_compactTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::cancelCompaction(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_cancelCompaction(login, tableName);
  recv_cancelCompaction(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_cancelCompaction(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("cancelCompaction", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_cancelCompaction_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_cancelCompaction(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("cancelCompaction") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_cancelCompaction_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::createTable(const std::string&amp; login, const std::string&amp; tableName, const bool versioningIter, const TimeType::type type)
{
  int32_t seqid = send_createTable(login, tableName, versioningIter, type);
  recv_createTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_createTable(const std::string&amp; login, const std::string&amp; tableName, const bool versioningIter, const TimeType::type type)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("createTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_createTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.versioningIter = &amp;versioningIter;
  args.type = &amp;type;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_createTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("createTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_createTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::deleteTable(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_deleteTable(login, tableName);
  recv_deleteTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_deleteTable(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("deleteTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_deleteTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_deleteTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("deleteTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_deleteTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::deleteRows(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow)
{
  int32_t seqid = send_deleteRows(login, tableName, startRow, endRow);
  recv_deleteRows(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_deleteRows(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("deleteRows", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_deleteRows_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.startRow = &amp;startRow;
  args.endRow = &amp;endRow;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_deleteRows(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("deleteRows") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_deleteRows_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::exportTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; exportDir)
{
  int32_t seqid = send_exportTable(login, tableName, exportDir);
  recv_exportTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_exportTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; exportDir)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("exportTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_exportTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.exportDir = &amp;exportDir;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_exportTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("exportTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_exportTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::flushTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow, const bool wait)
{
  int32_t seqid = send_flushTable(login, tableName, startRow, endRow, wait);
  recv_flushTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_flushTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow, const bool wait)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("flushTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_flushTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.startRow = &amp;startRow;
  args.endRow = &amp;endRow;
  args.wait = &amp;wait;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_flushTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("flushTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_flushTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getDiskUsage(std::vector&lt;DiskUsage&gt; &amp; _return, const std::string&amp; login, const std::set&lt;std::string&gt; &amp; tables)
{
  int32_t seqid = send_getDiskUsage(login, tables);
  recv_getDiskUsage(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getDiskUsage(const std::string&amp; login, const std::set&lt;std::string&gt; &amp; tables)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getDiskUsage", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getDiskUsage_pargs args;
  args.login = &amp;login;
  args.tables = &amp;tables;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getDiskUsage(std::vector&lt;DiskUsage&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getDiskUsage") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getDiskUsage_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getDiskUsage failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getLocalityGroups(std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; _return, const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_getLocalityGroups(login, tableName);
  recv_getLocalityGroups(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getLocalityGroups(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getLocalityGroups", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getLocalityGroups_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getLocalityGroups(std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getLocalityGroups") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getLocalityGroups_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getLocalityGroups failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getIteratorSetting(IteratorSetting&amp; _return, const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; iteratorName, const IteratorScope::type scope)
{
  int32_t seqid = send_getIteratorSetting(login, tableName, iteratorName, scope);
  recv_getIteratorSetting(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getIteratorSetting(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; iteratorName, const IteratorScope::type scope)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getIteratorSetting", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getIteratorSetting_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.iteratorName = &amp;iteratorName;
  args.scope = &amp;scope;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getIteratorSetting(IteratorSetting&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getIteratorSetting") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getIteratorSetting_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getIteratorSetting failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getMaxRow(std::string&amp; _return, const std::string&amp; login, const std::string&amp; tableName, const std::set&lt;std::string&gt; &amp; auths, const std::string&amp; startRow, const bool startInclusive, const std::string&amp; endRow, const bool endInclusive)
{
  int32_t seqid = send_getMaxRow(login, tableName, auths, startRow, startInclusive, endRow, endInclusive);
  recv_getMaxRow(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getMaxRow(const std::string&amp; login, const std::string&amp; tableName, const std::set&lt;std::string&gt; &amp; auths, const std::string&amp; startRow, const bool startInclusive, const std::string&amp; endRow, const bool endInclusive)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getMaxRow", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getMaxRow_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.auths = &amp;auths;
  args.startRow = &amp;startRow;
  args.startInclusive = &amp;startInclusive;
  args.endRow = &amp;endRow;
  args.endInclusive = &amp;endInclusive;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getMaxRow(std::string&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getMaxRow") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getMaxRow_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getMaxRow failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getTableProperties(std::map&lt;std::string, std::string&gt; &amp; _return, const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_getTableProperties(login, tableName);
  recv_getTableProperties(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getTableProperties(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getTableProperties", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getTableProperties_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getTableProperties(std::map&lt;std::string, std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getTableProperties") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getTableProperties_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getTableProperties failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::importDirectory(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; importDir, const std::string&amp; failureDir, const bool setTime)
{
  int32_t seqid = send_importDirectory(login, tableName, importDir, failureDir, setTime);
  recv_importDirectory(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_importDirectory(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; importDir, const std::string&amp; failureDir, const bool setTime)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("importDirectory", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_importDirectory_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.importDir = &amp;importDir;
  args.failureDir = &amp;failureDir;
  args.setTime = &amp;setTime;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_importDirectory(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("importDirectory") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_importDirectory_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      if (result.__isset.ouch4) {
        sentry.commit();
        throw result.ouch4;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::importTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; importDir)
{
  int32_t seqid = send_importTable(login, tableName, importDir);
  recv_importTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_importTable(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; importDir)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("importTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_importTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.importDir = &amp;importDir;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_importTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("importTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_importTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::listSplits(std::vector&lt;std::string&gt; &amp; _return, const std::string&amp; login, const std::string&amp; tableName, const int32_t maxSplits)
{
  int32_t seqid = send_listSplits(login, tableName, maxSplits);
  recv_listSplits(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_listSplits(const std::string&amp; login, const std::string&amp; tableName, const int32_t maxSplits)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("listSplits", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_listSplits_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.maxSplits = &amp;maxSplits;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_listSplits(std::vector&lt;std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("listSplits") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_listSplits_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "listSplits failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::listTables(std::set&lt;std::string&gt; &amp; _return, const std::string&amp; login)
{
  int32_t seqid = send_listTables(login);
  recv_listTables(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_listTables(const std::string&amp; login)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("listTables", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_listTables_pargs args;
  args.login = &amp;login;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_listTables(std::set&lt;std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("listTables") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_listTables_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "listTables failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::listIterators(std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt; &amp; _return, const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_listIterators(login, tableName);
  recv_listIterators(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_listIterators(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("listIterators", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_listIterators_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_listIterators(std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("listIterators") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_listIterators_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "listIterators failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::listConstraints(std::map&lt;std::string, int32_t&gt; &amp; _return, const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_listConstraints(login, tableName);
  recv_listConstraints(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_listConstraints(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("listConstraints", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_listConstraints_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_listConstraints(std::map&lt;std::string, int32_t&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("listConstraints") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_listConstraints_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "listConstraints failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::mergeTablets(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow)
{
  int32_t seqid = send_mergeTablets(login, tableName, startRow, endRow);
  recv_mergeTablets(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_mergeTablets(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; startRow, const std::string&amp; endRow)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("mergeTablets", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_mergeTablets_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.startRow = &amp;startRow;
  args.endRow = &amp;endRow;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_mergeTablets(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("mergeTablets") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_mergeTablets_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::offlineTable(const std::string&amp; login, const std::string&amp; tableName, const bool wait)
{
  int32_t seqid = send_offlineTable(login, tableName, wait);
  recv_offlineTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_offlineTable(const std::string&amp; login, const std::string&amp; tableName, const bool wait)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("offlineTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_offlineTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.wait = &amp;wait;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_offlineTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("offlineTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_offlineTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::onlineTable(const std::string&amp; login, const std::string&amp; tableName, const bool wait)
{
  int32_t seqid = send_onlineTable(login, tableName, wait);
  recv_onlineTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_onlineTable(const std::string&amp; login, const std::string&amp; tableName, const bool wait)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("onlineTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_onlineTable_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.wait = &amp;wait;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_onlineTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("onlineTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_onlineTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::removeConstraint(const std::string&amp; login, const std::string&amp; tableName, const int32_t constraint)
{
  int32_t seqid = send_removeConstraint(login, tableName, constraint);
  recv_removeConstraint(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_removeConstraint(const std::string&amp; login, const std::string&amp; tableName, const int32_t constraint)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("removeConstraint", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_removeConstraint_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.constraint = &amp;constraint;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_removeConstraint(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("removeConstraint") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_removeConstraint_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::removeIterator(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; iterName, const std::set&lt;IteratorScope::type&gt; &amp; scopes)
{
  int32_t seqid = send_removeIterator(login, tableName, iterName, scopes);
  recv_removeIterator(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_removeIterator(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; iterName, const std::set&lt;IteratorScope::type&gt; &amp; scopes)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("removeIterator", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_removeIterator_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.iterName = &amp;iterName;
  args.scopes = &amp;scopes;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_removeIterator(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("removeIterator") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_removeIterator_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::removeTableProperty(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; property)
{
  int32_t seqid = send_removeTableProperty(login, tableName, property);
  recv_removeTableProperty(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_removeTableProperty(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; property)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("removeTableProperty", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_removeTableProperty_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.property = &amp;property;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_removeTableProperty(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("removeTableProperty") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_removeTableProperty_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::renameTable(const std::string&amp; login, const std::string&amp; oldTableName, const std::string&amp; newTableName)
{
  int32_t seqid = send_renameTable(login, oldTableName, newTableName);
  recv_renameTable(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_renameTable(const std::string&amp; login, const std::string&amp; oldTableName, const std::string&amp; newTableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("renameTable", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_renameTable_pargs args;
  args.login = &amp;login;
  args.oldTableName = &amp;oldTableName;
  args.newTableName = &amp;newTableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_renameTable(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("renameTable") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_renameTable_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      if (result.__isset.ouch4) {
        sentry.commit();
        throw result.ouch4;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::setLocalityGroups(const std::string&amp; login, const std::string&amp; tableName, const std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; groups)
{
  int32_t seqid = send_setLocalityGroups(login, tableName, groups);
  recv_setLocalityGroups(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_setLocalityGroups(const std::string&amp; login, const std::string&amp; tableName, const std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; groups)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("setLocalityGroups", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_setLocalityGroups_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.groups = &amp;groups;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_setLocalityGroups(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("setLocalityGroups") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_setLocalityGroups_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::setTableProperty(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; property, const std::string&amp; value)
{
  int32_t seqid = send_setTableProperty(login, tableName, property, value);
  recv_setTableProperty(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_setTableProperty(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; property, const std::string&amp; value)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("setTableProperty", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_setTableProperty_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.property = &amp;property;
  args.value = &amp;value;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_setTableProperty(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("setTableProperty") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_setTableProperty_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::splitRangeByTablets(std::set&lt;Range&gt; &amp; _return, const std::string&amp; login, const std::string&amp; tableName, const Range&amp; range, const int32_t maxSplits)
{
  int32_t seqid = send_splitRangeByTablets(login, tableName, range, maxSplits);
  recv_splitRangeByTablets(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_splitRangeByTablets(const std::string&amp; login, const std::string&amp; tableName, const Range&amp; range, const int32_t maxSplits)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("splitRangeByTablets", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_splitRangeByTablets_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.range = &amp;range;
  args.maxSplits = &amp;maxSplits;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_splitRangeByTablets(std::set&lt;Range&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("splitRangeByTablets") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_splitRangeByTablets_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "splitRangeByTablets failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

bool AccumuloProxyConcurrentClient::tableExists(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t seqid = send_tableExists(login, tableName);
  return recv_tableExists(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_tableExists(const std::string&amp; login, const std::string&amp; tableName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("tableExists", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_tableExists_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

bool AccumuloProxyConcurrentClient::recv_tableExists(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("tableExists") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      bool _return;
      AccumuloProxy_tableExists_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "tableExists failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::tableIdMap(std::map&lt;std::string, std::string&gt; &amp; _return, const std::string&amp; login)
{
  int32_t seqid = send_tableIdMap(login);
  recv_tableIdMap(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_tableIdMap(const std::string&amp; login)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("tableIdMap", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_tableIdMap_pargs args;
  args.login = &amp;login;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_tableIdMap(std::map&lt;std::string, std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("tableIdMap") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_tableIdMap_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "tableIdMap failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

bool AccumuloProxyConcurrentClient::testTableClassLoad(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; className, const std::string&amp; asTypeName)
{
  int32_t seqid = send_testTableClassLoad(login, tableName, className, asTypeName);
  return recv_testTableClassLoad(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_testTableClassLoad(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; className, const std::string&amp; asTypeName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("testTableClassLoad", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_testTableClassLoad_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.className = &amp;className;
  args.asTypeName = &amp;asTypeName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

bool AccumuloProxyConcurrentClient::recv_testTableClassLoad(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("testTableClassLoad") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      bool _return;
      AccumuloProxy_testTableClassLoad_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "testTableClassLoad failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::pingTabletServer(const std::string&amp; login, const std::string&amp; tserver)
{
  int32_t seqid = send_pingTabletServer(login, tserver);
  recv_pingTabletServer(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_pingTabletServer(const std::string&amp; login, const std::string&amp; tserver)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("pingTabletServer", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_pingTabletServer_pargs args;
  args.login = &amp;login;
  args.tserver = &amp;tserver;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_pingTabletServer(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("pingTabletServer") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_pingTabletServer_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getActiveScans(std::vector&lt;ActiveScan&gt; &amp; _return, const std::string&amp; login, const std::string&amp; tserver)
{
  int32_t seqid = send_getActiveScans(login, tserver);
  recv_getActiveScans(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getActiveScans(const std::string&amp; login, const std::string&amp; tserver)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getActiveScans", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getActiveScans_pargs args;
  args.login = &amp;login;
  args.tserver = &amp;tserver;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getActiveScans(std::vector&lt;ActiveScan&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getActiveScans") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getActiveScans_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getActiveScans failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getActiveCompactions(std::vector&lt;ActiveCompaction&gt; &amp; _return, const std::string&amp; login, const std::string&amp; tserver)
{
  int32_t seqid = send_getActiveCompactions(login, tserver);
  recv_getActiveCompactions(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getActiveCompactions(const std::string&amp; login, const std::string&amp; tserver)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getActiveCompactions", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getActiveCompactions_pargs args;
  args.login = &amp;login;
  args.tserver = &amp;tserver;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getActiveCompactions(std::vector&lt;ActiveCompaction&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getActiveCompactions") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getActiveCompactions_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getActiveCompactions failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getSiteConfiguration(std::map&lt;std::string, std::string&gt; &amp; _return, const std::string&amp; login)
{
  int32_t seqid = send_getSiteConfiguration(login);
  recv_getSiteConfiguration(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getSiteConfiguration(const std::string&amp; login)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getSiteConfiguration", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getSiteConfiguration_pargs args;
  args.login = &amp;login;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getSiteConfiguration(std::map&lt;std::string, std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getSiteConfiguration") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getSiteConfiguration_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getSiteConfiguration failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getSystemConfiguration(std::map&lt;std::string, std::string&gt; &amp; _return, const std::string&amp; login)
{
  int32_t seqid = send_getSystemConfiguration(login);
  recv_getSystemConfiguration(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getSystemConfiguration(const std::string&amp; login)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getSystemConfiguration", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getSystemConfiguration_pargs args;
  args.login = &amp;login;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getSystemConfiguration(std::map&lt;std::string, std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getSystemConfiguration") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getSystemConfiguration_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getSystemConfiguration failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getTabletServers(std::vector&lt;std::string&gt; &amp; _return, const std::string&amp; login)
{
  int32_t seqid = send_getTabletServers(login);
  recv_getTabletServers(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getTabletServers(const std::string&amp; login)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getTabletServers", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getTabletServers_pargs args;
  args.login = &amp;login;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getTabletServers(std::vector&lt;std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getTabletServers") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getTabletServers_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getTabletServers failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::removeProperty(const std::string&amp; login, const std::string&amp; property)
{
  int32_t seqid = send_removeProperty(login, property);
  recv_removeProperty(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_removeProperty(const std::string&amp; login, const std::string&amp; property)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("removeProperty", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_removeProperty_pargs args;
  args.login = &amp;login;
  args.property = &amp;property;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_removeProperty(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("removeProperty") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_removeProperty_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::setProperty(const std::string&amp; login, const std::string&amp; property, const std::string&amp; value)
{
  int32_t seqid = send_setProperty(login, property, value);
  recv_setProperty(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_setProperty(const std::string&amp; login, const std::string&amp; property, const std::string&amp; value)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("setProperty", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_setProperty_pargs args;
  args.login = &amp;login;
  args.property = &amp;property;
  args.value = &amp;value;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_setProperty(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("setProperty") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_setProperty_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

bool AccumuloProxyConcurrentClient::testClassLoad(const std::string&amp; login, const std::string&amp; className, const std::string&amp; asTypeName)
{
  int32_t seqid = send_testClassLoad(login, className, asTypeName);
  return recv_testClassLoad(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_testClassLoad(const std::string&amp; login, const std::string&amp; className, const std::string&amp; asTypeName)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("testClassLoad", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_testClassLoad_pargs args;
  args.login = &amp;login;
  args.className = &amp;className;
  args.asTypeName = &amp;asTypeName;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

bool AccumuloProxyConcurrentClient::recv_testClassLoad(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("testClassLoad") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      bool _return;
      AccumuloProxy_testClassLoad_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "testClassLoad failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

bool AccumuloProxyConcurrentClient::authenticateUser(const std::string&amp; login, const std::string&amp; user, const std::map&lt;std::string, std::string&gt; &amp; properties)
{
  int32_t seqid = send_authenticateUser(login, user, properties);
  return recv_authenticateUser(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_authenticateUser(const std::string&amp; login, const std::string&amp; user, const std::map&lt;std::string, std::string&gt; &amp; properties)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("authenticateUser", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_authenticateUser_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.properties = &amp;properties;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

bool AccumuloProxyConcurrentClient::recv_authenticateUser(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("authenticateUser") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      bool _return;
      AccumuloProxy_authenticateUser_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "authenticateUser failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::changeUserAuthorizations(const std::string&amp; login, const std::string&amp; user, const std::set&lt;std::string&gt; &amp; authorizations)
{
  int32_t seqid = send_changeUserAuthorizations(login, user, authorizations);
  recv_changeUserAuthorizations(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_changeUserAuthorizations(const std::string&amp; login, const std::string&amp; user, const std::set&lt;std::string&gt; &amp; authorizations)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("changeUserAuthorizations", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_changeUserAuthorizations_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.authorizations = &amp;authorizations;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_changeUserAuthorizations(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("changeUserAuthorizations") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_changeUserAuthorizations_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::changeLocalUserPassword(const std::string&amp; login, const std::string&amp; user, const std::string&amp; password)
{
  int32_t seqid = send_changeLocalUserPassword(login, user, password);
  recv_changeLocalUserPassword(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_changeLocalUserPassword(const std::string&amp; login, const std::string&amp; user, const std::string&amp; password)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("changeLocalUserPassword", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_changeLocalUserPassword_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.password = &amp;password;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_changeLocalUserPassword(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("changeLocalUserPassword") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_changeLocalUserPassword_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::createLocalUser(const std::string&amp; login, const std::string&amp; user, const std::string&amp; password)
{
  int32_t seqid = send_createLocalUser(login, user, password);
  recv_createLocalUser(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_createLocalUser(const std::string&amp; login, const std::string&amp; user, const std::string&amp; password)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("createLocalUser", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_createLocalUser_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.password = &amp;password;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_createLocalUser(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("createLocalUser") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_createLocalUser_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::dropLocalUser(const std::string&amp; login, const std::string&amp; user)
{
  int32_t seqid = send_dropLocalUser(login, user);
  recv_dropLocalUser(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_dropLocalUser(const std::string&amp; login, const std::string&amp; user)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("dropLocalUser", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_dropLocalUser_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_dropLocalUser(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("dropLocalUser") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_dropLocalUser_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getUserAuthorizations(std::vector&lt;std::string&gt; &amp; _return, const std::string&amp; login, const std::string&amp; user)
{
  int32_t seqid = send_getUserAuthorizations(login, user);
  recv_getUserAuthorizations(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getUserAuthorizations(const std::string&amp; login, const std::string&amp; user)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getUserAuthorizations", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getUserAuthorizations_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getUserAuthorizations(std::vector&lt;std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getUserAuthorizations") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getUserAuthorizations_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getUserAuthorizations failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::grantSystemPermission(const std::string&amp; login, const std::string&amp; user, const SystemPermission::type perm)
{
  int32_t seqid = send_grantSystemPermission(login, user, perm);
  recv_grantSystemPermission(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_grantSystemPermission(const std::string&amp; login, const std::string&amp; user, const SystemPermission::type perm)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("grantSystemPermission", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_grantSystemPermission_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.perm = &amp;perm;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_grantSystemPermission(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("grantSystemPermission") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_grantSystemPermission_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::grantTablePermission(const std::string&amp; login, const std::string&amp; user, const std::string&amp; table, const TablePermission::type perm)
{
  int32_t seqid = send_grantTablePermission(login, user, table, perm);
  recv_grantTablePermission(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_grantTablePermission(const std::string&amp; login, const std::string&amp; user, const std::string&amp; table, const TablePermission::type perm)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("grantTablePermission", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_grantTablePermission_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.table = &amp;table;
  args.perm = &amp;perm;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_grantTablePermission(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("grantTablePermission") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_grantTablePermission_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

bool AccumuloProxyConcurrentClient::hasSystemPermission(const std::string&amp; login, const std::string&amp; user, const SystemPermission::type perm)
{
  int32_t seqid = send_hasSystemPermission(login, user, perm);
  return recv_hasSystemPermission(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_hasSystemPermission(const std::string&amp; login, const std::string&amp; user, const SystemPermission::type perm)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("hasSystemPermission", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_hasSystemPermission_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.perm = &amp;perm;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

bool AccumuloProxyConcurrentClient::recv_hasSystemPermission(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("hasSystemPermission") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      bool _return;
      AccumuloProxy_hasSystemPermission_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "hasSystemPermission failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

bool AccumuloProxyConcurrentClient::hasTablePermission(const std::string&amp; login, const std::string&amp; user, const std::string&amp; table, const TablePermission::type perm)
{
  int32_t seqid = send_hasTablePermission(login, user, table, perm);
  return recv_hasTablePermission(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_hasTablePermission(const std::string&amp; login, const std::string&amp; user, const std::string&amp; table, const TablePermission::type perm)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("hasTablePermission", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_hasTablePermission_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.table = &amp;table;
  args.perm = &amp;perm;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

bool AccumuloProxyConcurrentClient::recv_hasTablePermission(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("hasTablePermission") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      bool _return;
      AccumuloProxy_hasTablePermission_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "hasTablePermission failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::listLocalUsers(std::set&lt;std::string&gt; &amp; _return, const std::string&amp; login)
{
  int32_t seqid = send_listLocalUsers(login);
  recv_listLocalUsers(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_listLocalUsers(const std::string&amp; login)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("listLocalUsers", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_listLocalUsers_pargs args;
  args.login = &amp;login;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_listLocalUsers(std::set&lt;std::string&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("listLocalUsers") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_listLocalUsers_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "listLocalUsers failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::revokeSystemPermission(const std::string&amp; login, const std::string&amp; user, const SystemPermission::type perm)
{
  int32_t seqid = send_revokeSystemPermission(login, user, perm);
  recv_revokeSystemPermission(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_revokeSystemPermission(const std::string&amp; login, const std::string&amp; user, const SystemPermission::type perm)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("revokeSystemPermission", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_revokeSystemPermission_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.perm = &amp;perm;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_revokeSystemPermission(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("revokeSystemPermission") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_revokeSystemPermission_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::revokeTablePermission(const std::string&amp; login, const std::string&amp; user, const std::string&amp; table, const TablePermission::type perm)
{
  int32_t seqid = send_revokeTablePermission(login, user, table, perm);
  recv_revokeTablePermission(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_revokeTablePermission(const std::string&amp; login, const std::string&amp; user, const std::string&amp; table, const TablePermission::type perm)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("revokeTablePermission", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_revokeTablePermission_pargs args;
  args.login = &amp;login;
  args.user = &amp;user;
  args.table = &amp;table;
  args.perm = &amp;perm;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_revokeTablePermission(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("revokeTablePermission") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_revokeTablePermission_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::createBatchScanner(std::string&amp; _return, const std::string&amp; login, const std::string&amp; tableName, const BatchScanOptions&amp; options)
{
  int32_t seqid = send_createBatchScanner(login, tableName, options);
  recv_createBatchScanner(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_createBatchScanner(const std::string&amp; login, const std::string&amp; tableName, const BatchScanOptions&amp; options)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("createBatchScanner", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_createBatchScanner_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.options = &amp;options;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_createBatchScanner(std::string&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("createBatchScanner") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_createBatchScanner_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "createBatchScanner failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::createScanner(std::string&amp; _return, const std::string&amp; login, const std::string&amp; tableName, const ScanOptions&amp; options)
{
  int32_t seqid = send_createScanner(login, tableName, options);
  recv_createScanner(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_createScanner(const std::string&amp; login, const std::string&amp; tableName, const ScanOptions&amp; options)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("createScanner", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_createScanner_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.options = &amp;options;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_createScanner(std::string&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("createScanner") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_createScanner_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "createScanner failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

bool AccumuloProxyConcurrentClient::hasNext(const std::string&amp; scanner)
{
  int32_t seqid = send_hasNext(scanner);
  return recv_hasNext(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_hasNext(const std::string&amp; scanner)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("hasNext", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_hasNext_pargs args;
  args.scanner = &amp;scanner;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

bool AccumuloProxyConcurrentClient::recv_hasNext(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("hasNext") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      bool _return;
      AccumuloProxy_hasNext_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "hasNext failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::nextEntry(KeyValueAndPeek&amp; _return, const std::string&amp; scanner)
{
  int32_t seqid = send_nextEntry(scanner);
  recv_nextEntry(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_nextEntry(const std::string&amp; scanner)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("nextEntry", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_nextEntry_pargs args;
  args.scanner = &amp;scanner;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_nextEntry(KeyValueAndPeek&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("nextEntry") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_nextEntry_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "nextEntry failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::nextK(ScanResult&amp; _return, const std::string&amp; scanner, const int32_t k)
{
  int32_t seqid = send_nextK(scanner, k);
  recv_nextK(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_nextK(const std::string&amp; scanner, const int32_t k)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("nextK", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_nextK_pargs args;
  args.scanner = &amp;scanner;
  args.k = &amp;k;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_nextK(ScanResult&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("nextK") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_nextK_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "nextK failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::closeScanner(const std::string&amp; scanner)
{
  int32_t seqid = send_closeScanner(scanner);
  recv_closeScanner(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_closeScanner(const std::string&amp; scanner)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("closeScanner", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_closeScanner_pargs args;
  args.scanner = &amp;scanner;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_closeScanner(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("closeScanner") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_closeScanner_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::updateAndFlush(const std::string&amp; login, const std::string&amp; tableName, const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; cells)
{
  int32_t seqid = send_updateAndFlush(login, tableName, cells);
  recv_updateAndFlush(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_updateAndFlush(const std::string&amp; login, const std::string&amp; tableName, const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; cells)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("updateAndFlush", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_updateAndFlush_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.cells = &amp;cells;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_updateAndFlush(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("updateAndFlush") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_updateAndFlush_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.outch1) {
        sentry.commit();
        throw result.outch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      if (result.__isset.ouch4) {
        sentry.commit();
        throw result.ouch4;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::createWriter(std::string&amp; _return, const std::string&amp; login, const std::string&amp; tableName, const WriterOptions&amp; opts)
{
  int32_t seqid = send_createWriter(login, tableName, opts);
  recv_createWriter(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_createWriter(const std::string&amp; login, const std::string&amp; tableName, const WriterOptions&amp; opts)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("createWriter", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_createWriter_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.opts = &amp;opts;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_createWriter(std::string&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("createWriter") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_createWriter_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.outch1) {
        sentry.commit();
        throw result.outch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "createWriter failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::update(const std::string&amp; writer, const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; cells)
{
  send_update(writer, cells);
}

void AccumuloProxyConcurrentClient::send_update(const std::string&amp; writer, const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; cells)
{
  int32_t cseqid = 0;
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("update", ::apache::thrift::protocol::T_ONEWAY, cseqid);

  AccumuloProxy_update_pargs args;
  args.writer = &amp;writer;
  args.cells = &amp;cells;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
}

void AccumuloProxyConcurrentClient::flush(const std::string&amp; writer)
{
  int32_t seqid = send_flush(writer);
  recv_flush(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_flush(const std::string&amp; writer)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("flush", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_flush_pargs args;
  args.writer = &amp;writer;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_flush(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("flush") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_flush_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::closeWriter(const std::string&amp; writer)
{
  int32_t seqid = send_closeWriter(writer);
  recv_closeWriter(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_closeWriter(const std::string&amp; writer)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("closeWriter", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_closeWriter_pargs args;
  args.writer = &amp;writer;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_closeWriter(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("closeWriter") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_closeWriter_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

ConditionalStatus::type AccumuloProxyConcurrentClient::updateRowConditionally(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; row, const ConditionalUpdates&amp; updates)
{
  int32_t seqid = send_updateRowConditionally(login, tableName, row, updates);
  return recv_updateRowConditionally(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_updateRowConditionally(const std::string&amp; login, const std::string&amp; tableName, const std::string&amp; row, const ConditionalUpdates&amp; updates)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("updateRowConditionally", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_updateRowConditionally_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.row = &amp;row;
  args.updates = &amp;updates;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

ConditionalStatus::type AccumuloProxyConcurrentClient::recv_updateRowConditionally(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("updateRowConditionally") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      ConditionalStatus::type _return;
      AccumuloProxy_updateRowConditionally_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        sentry.commit();
        return _return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "updateRowConditionally failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::createConditionalWriter(std::string&amp; _return, const std::string&amp; login, const std::string&amp; tableName, const ConditionalWriterOptions&amp; options)
{
  int32_t seqid = send_createConditionalWriter(login, tableName, options);
  recv_createConditionalWriter(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_createConditionalWriter(const std::string&amp; login, const std::string&amp; tableName, const ConditionalWriterOptions&amp; options)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("createConditionalWriter", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_createConditionalWriter_pargs args;
  args.login = &amp;login;
  args.tableName = &amp;tableName;
  args.options = &amp;options;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_createConditionalWriter(std::string&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("createConditionalWriter") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_createConditionalWriter_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "createConditionalWriter failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::updateRowsConditionally(std::map&lt;std::string, ConditionalStatus::type&gt; &amp; _return, const std::string&amp; conditionalWriter, const std::map&lt;std::string, ConditionalUpdates&gt; &amp; updates)
{
  int32_t seqid = send_updateRowsConditionally(conditionalWriter, updates);
  recv_updateRowsConditionally(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_updateRowsConditionally(const std::string&amp; conditionalWriter, const std::map&lt;std::string, ConditionalUpdates&gt; &amp; updates)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("updateRowsConditionally", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_updateRowsConditionally_pargs args;
  args.conditionalWriter = &amp;conditionalWriter;
  args.updates = &amp;updates;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_updateRowsConditionally(std::map&lt;std::string, ConditionalStatus::type&gt; &amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("updateRowsConditionally") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_updateRowsConditionally_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      if (result.__isset.ouch1) {
        sentry.commit();
        throw result.ouch1;
      }
      if (result.__isset.ouch2) {
        sentry.commit();
        throw result.ouch2;
      }
      if (result.__isset.ouch3) {
        sentry.commit();
        throw result.ouch3;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "updateRowsConditionally failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::closeConditionalWriter(const std::string&amp; conditionalWriter)
{
  int32_t seqid = send_closeConditionalWriter(conditionalWriter);
  recv_closeConditionalWriter(seqid);
}

int32_t AccumuloProxyConcurrentClient::send_closeConditionalWriter(const std::string&amp; conditionalWriter)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("closeConditionalWriter", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_closeConditionalWriter_pargs args;
  args.conditionalWriter = &amp;conditionalWriter;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_closeConditionalWriter(const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("closeConditionalWriter") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_closeConditionalWriter_presult result;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      sentry.commit();
      return;
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getRowRange(Range&amp; _return, const std::string&amp; row)
{
  int32_t seqid = send_getRowRange(row);
  recv_getRowRange(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getRowRange(const std::string&amp; row)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getRowRange", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getRowRange_pargs args;
  args.row = &amp;row;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getRowRange(Range&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getRowRange") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getRowRange_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getRowRange failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

void AccumuloProxyConcurrentClient::getFollowing(Key&amp; _return, const Key&amp; key, const PartialKey::type part)
{
  int32_t seqid = send_getFollowing(key, part);
  recv_getFollowing(_return, seqid);
}

int32_t AccumuloProxyConcurrentClient::send_getFollowing(const Key&amp; key, const PartialKey::type part)
{
  int32_t cseqid = this-&gt;sync_.generateSeqId();
  ::apache::thrift::async::TConcurrentSendSentry sentry(&amp;this-&gt;sync_);
  oprot_-&gt;writeMessageBegin("getFollowing", ::apache::thrift::protocol::T_CALL, cseqid);

  AccumuloProxy_getFollowing_pargs args;
  args.key = &amp;key;
  args.part = &amp;part;
  args.write(oprot_);

  oprot_-&gt;writeMessageEnd();
  oprot_-&gt;getTransport()-&gt;writeEnd();
  oprot_-&gt;getTransport()-&gt;flush();

  sentry.commit();
  return cseqid;
}

void AccumuloProxyConcurrentClient::recv_getFollowing(Key&amp; _return, const int32_t seqid)
{

  int32_t rseqid = 0;
  std::string fname;
  ::apache::thrift::protocol::TMessageType mtype;

  // the read mutex gets dropped and reacquired as part of waitForWork()
  // The destructor of this sentry wakes up other clients
  ::apache::thrift::async::TConcurrentRecvSentry sentry(&amp;this-&gt;sync_, seqid);

  while(true) {
    if(!this-&gt;sync_.getPending(fname, mtype, rseqid)) {
      iprot_-&gt;readMessageBegin(fname, mtype, rseqid);
    }
    if(seqid == rseqid) {
      if (mtype == ::apache::thrift::protocol::T_EXCEPTION) {
        ::apache::thrift::TApplicationException x;
        x.read(iprot_);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
        sentry.commit();
        throw x;
      }
      if (mtype != ::apache::thrift::protocol::T_REPLY) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();
      }
      if (fname.compare("getFollowing") != 0) {
        iprot_-&gt;skip(::apache::thrift::protocol::T_STRUCT);
        iprot_-&gt;readMessageEnd();
        iprot_-&gt;getTransport()-&gt;readEnd();

        // in a bad state, don't commit
        using ::apache::thrift::protocol::TProtocolException;
        throw TProtocolException(TProtocolException::INVALID_DATA);
      }
      AccumuloProxy_getFollowing_presult result;
      result.success = &amp;_return;
      result.read(iprot_);
      iprot_-&gt;readMessageEnd();
      iprot_-&gt;getTransport()-&gt;readEnd();

      if (result.__isset.success) {
        // _return pointer has now been filled
        sentry.commit();
        return;
      }
      // in a bad state, don't commit
      throw ::apache::thrift::TApplicationException(::apache::thrift::TApplicationException::MISSING_RESULT, "getFollowing failed: unknown result");
    }
    // seqid != rseqid
    this-&gt;sync_.updatePending(fname, mtype, rseqid);

    // this will temporarily unlock the readMutex, and let other clients get work done
    this-&gt;sync_.waitForWork(seqid);
  } // end while(true)
}

 } // namespace
 
diff --git a/proxy/src/main/cpp/AccumuloProxy.h b/proxy/src/main/cpp/AccumuloProxy.h
index 269884f98..a14fda91e 100644
-- a/proxy/src/main/cpp/AccumuloProxy.h
++ b/proxy/src/main/cpp/AccumuloProxy.h
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -24,10 +24,16 @@
 #define AccumuloProxy_H
 
 #include &lt;thrift/TDispatchProcessor.h&gt;
#include &lt;thrift/async/TConcurrentClientSyncInfo.h&gt;
 #include "proxy_types.h"
 
 namespace accumulo {
 
#ifdef _WIN32
  #pragma warning( push )
  #pragma warning (disable : 4250 ) //inheriting methods via dominance 
#endif

 class AccumuloProxyIf {
  public:
   virtual ~AccumuloProxyIf() {}
@@ -381,30 +387,27 @@ class AccumuloProxyNull : virtual public AccumuloProxyIf {
 
 typedef struct _AccumuloProxy_login_args__isset {
   _AccumuloProxy_login_args__isset() : principal(false), loginProperties(false) {}
  bool principal;
  bool loginProperties;
  bool principal :1;
  bool loginProperties :1;
 } _AccumuloProxy_login_args__isset;
 
 class AccumuloProxy_login_args {
  public:
 
  AccumuloProxy_login_args(const AccumuloProxy_login_args&amp;);
  AccumuloProxy_login_args&amp; operator=(const AccumuloProxy_login_args&amp;);
   AccumuloProxy_login_args() : principal() {
   }
 
  virtual ~AccumuloProxy_login_args() throw() {}

  virtual ~AccumuloProxy_login_args() throw();
   std::string principal;
   std::map&lt;std::string, std::string&gt;  loginProperties;
 
   _AccumuloProxy_login_args__isset __isset;
 
  void __set_principal(const std::string&amp; val) {
    principal = val;
  }
  void __set_principal(const std::string&amp; val);
 
  void __set_loginProperties(const std::map&lt;std::string, std::string&gt; &amp; val) {
    loginProperties = val;
  }
  void __set_loginProperties(const std::map&lt;std::string, std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_login_args &amp; rhs) const
   {
@@ -430,8 +433,7 @@ class AccumuloProxy_login_pargs {
  public:
 
 
  virtual ~AccumuloProxy_login_pargs() throw() {}

  virtual ~AccumuloProxy_login_pargs() throw();
   const std::string* principal;
   const std::map&lt;std::string, std::string&gt; * loginProperties;
 
@@ -441,30 +443,27 @@ class AccumuloProxy_login_pargs {
 
 typedef struct _AccumuloProxy_login_result__isset {
   _AccumuloProxy_login_result__isset() : success(false), ouch2(false) {}
  bool success;
  bool ouch2;
  bool success :1;
  bool ouch2 :1;
 } _AccumuloProxy_login_result__isset;
 
 class AccumuloProxy_login_result {
  public:
 
  AccumuloProxy_login_result(const AccumuloProxy_login_result&amp;);
  AccumuloProxy_login_result&amp; operator=(const AccumuloProxy_login_result&amp;);
   AccumuloProxy_login_result() : success() {
   }
 
  virtual ~AccumuloProxy_login_result() throw() {}

  virtual ~AccumuloProxy_login_result() throw();
   std::string success;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_login_result__isset __isset;
 
  void __set_success(const std::string&amp; val) {
    success = val;
  }
  void __set_success(const std::string&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_login_result &amp; rhs) const
   {
@@ -487,16 +486,15 @@ class AccumuloProxy_login_result {
 
 typedef struct _AccumuloProxy_login_presult__isset {
   _AccumuloProxy_login_presult__isset() : success(false), ouch2(false) {}
  bool success;
  bool ouch2;
  bool success :1;
  bool ouch2 :1;
 } _AccumuloProxy_login_presult__isset;
 
 class AccumuloProxy_login_presult {
  public:
 
 
  virtual ~AccumuloProxy_login_presult() throw() {}

  virtual ~AccumuloProxy_login_presult() throw();
   std::string* success;
   AccumuloSecurityException ouch2;
 
@@ -508,36 +506,31 @@ class AccumuloProxy_login_presult {
 
 typedef struct _AccumuloProxy_addConstraint_args__isset {
   _AccumuloProxy_addConstraint_args__isset() : login(false), tableName(false), constraintClassName(false) {}
  bool login;
  bool tableName;
  bool constraintClassName;
  bool login :1;
  bool tableName :1;
  bool constraintClassName :1;
 } _AccumuloProxy_addConstraint_args__isset;
 
 class AccumuloProxy_addConstraint_args {
  public:
 
  AccumuloProxy_addConstraint_args(const AccumuloProxy_addConstraint_args&amp;);
  AccumuloProxy_addConstraint_args&amp; operator=(const AccumuloProxy_addConstraint_args&amp;);
   AccumuloProxy_addConstraint_args() : login(), tableName(), constraintClassName() {
   }
 
  virtual ~AccumuloProxy_addConstraint_args() throw() {}

  virtual ~AccumuloProxy_addConstraint_args() throw();
   std::string login;
   std::string tableName;
   std::string constraintClassName;
 
   _AccumuloProxy_addConstraint_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_constraintClassName(const std::string&amp; val) {
    constraintClassName = val;
  }
  void __set_constraintClassName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_addConstraint_args &amp; rhs) const
   {
@@ -565,8 +558,7 @@ class AccumuloProxy_addConstraint_pargs {
  public:
 
 
  virtual ~AccumuloProxy_addConstraint_pargs() throw() {}

  virtual ~AccumuloProxy_addConstraint_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* constraintClassName;
@@ -577,20 +569,21 @@ class AccumuloProxy_addConstraint_pargs {
 
 typedef struct _AccumuloProxy_addConstraint_result__isset {
   _AccumuloProxy_addConstraint_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_addConstraint_result__isset;
 
 class AccumuloProxy_addConstraint_result {
  public:
 
  AccumuloProxy_addConstraint_result(const AccumuloProxy_addConstraint_result&amp;);
  AccumuloProxy_addConstraint_result&amp; operator=(const AccumuloProxy_addConstraint_result&amp;);
   AccumuloProxy_addConstraint_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_addConstraint_result() throw() {}

  virtual ~AccumuloProxy_addConstraint_result() throw();
   int32_t success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -598,21 +591,13 @@ class AccumuloProxy_addConstraint_result {
 
   _AccumuloProxy_addConstraint_result__isset __isset;
 
  void __set_success(const int32_t val) {
    success = val;
  }
  void __set_success(const int32_t val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_addConstraint_result &amp; rhs) const
   {
@@ -639,18 +624,17 @@ class AccumuloProxy_addConstraint_result {
 
 typedef struct _AccumuloProxy_addConstraint_presult__isset {
   _AccumuloProxy_addConstraint_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_addConstraint_presult__isset;
 
 class AccumuloProxy_addConstraint_presult {
  public:
 
 
  virtual ~AccumuloProxy_addConstraint_presult() throw() {}

  virtual ~AccumuloProxy_addConstraint_presult() throw();
   int32_t* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -664,36 +648,31 @@ class AccumuloProxy_addConstraint_presult {
 
 typedef struct _AccumuloProxy_addSplits_args__isset {
   _AccumuloProxy_addSplits_args__isset() : login(false), tableName(false), splits(false) {}
  bool login;
  bool tableName;
  bool splits;
  bool login :1;
  bool tableName :1;
  bool splits :1;
 } _AccumuloProxy_addSplits_args__isset;
 
 class AccumuloProxy_addSplits_args {
  public:
 
  AccumuloProxy_addSplits_args(const AccumuloProxy_addSplits_args&amp;);
  AccumuloProxy_addSplits_args&amp; operator=(const AccumuloProxy_addSplits_args&amp;);
   AccumuloProxy_addSplits_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_addSplits_args() throw() {}

  virtual ~AccumuloProxy_addSplits_args() throw();
   std::string login;
   std::string tableName;
   std::set&lt;std::string&gt;  splits;
 
   _AccumuloProxy_addSplits_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_splits(const std::set&lt;std::string&gt; &amp; val) {
    splits = val;
  }
  void __set_splits(const std::set&lt;std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_addSplits_args &amp; rhs) const
   {
@@ -721,8 +700,7 @@ class AccumuloProxy_addSplits_pargs {
  public:
 
 
  virtual ~AccumuloProxy_addSplits_pargs() throw() {}

  virtual ~AccumuloProxy_addSplits_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::set&lt;std::string&gt; * splits;
@@ -733,36 +711,31 @@ class AccumuloProxy_addSplits_pargs {
 
 typedef struct _AccumuloProxy_addSplits_result__isset {
   _AccumuloProxy_addSplits_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_addSplits_result__isset;
 
 class AccumuloProxy_addSplits_result {
  public:
 
  AccumuloProxy_addSplits_result(const AccumuloProxy_addSplits_result&amp;);
  AccumuloProxy_addSplits_result&amp; operator=(const AccumuloProxy_addSplits_result&amp;);
   AccumuloProxy_addSplits_result() {
   }
 
  virtual ~AccumuloProxy_addSplits_result() throw() {}

  virtual ~AccumuloProxy_addSplits_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_addSplits_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_addSplits_result &amp; rhs) const
   {
@@ -787,17 +760,16 @@ class AccumuloProxy_addSplits_result {
 
 typedef struct _AccumuloProxy_addSplits_presult__isset {
   _AccumuloProxy_addSplits_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_addSplits_presult__isset;
 
 class AccumuloProxy_addSplits_presult {
  public:
 
 
  virtual ~AccumuloProxy_addSplits_presult() throw() {}

  virtual ~AccumuloProxy_addSplits_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -810,20 +782,21 @@ class AccumuloProxy_addSplits_presult {
 
 typedef struct _AccumuloProxy_attachIterator_args__isset {
   _AccumuloProxy_attachIterator_args__isset() : login(false), tableName(false), setting(false), scopes(false) {}
  bool login;
  bool tableName;
  bool setting;
  bool scopes;
  bool login :1;
  bool tableName :1;
  bool setting :1;
  bool scopes :1;
 } _AccumuloProxy_attachIterator_args__isset;
 
 class AccumuloProxy_attachIterator_args {
  public:
 
  AccumuloProxy_attachIterator_args(const AccumuloProxy_attachIterator_args&amp;);
  AccumuloProxy_attachIterator_args&amp; operator=(const AccumuloProxy_attachIterator_args&amp;);
   AccumuloProxy_attachIterator_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_attachIterator_args() throw() {}

  virtual ~AccumuloProxy_attachIterator_args() throw();
   std::string login;
   std::string tableName;
   IteratorSetting setting;
@@ -831,21 +804,13 @@ class AccumuloProxy_attachIterator_args {
 
   _AccumuloProxy_attachIterator_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_setting(const IteratorSetting&amp; val) {
    setting = val;
  }
  void __set_setting(const IteratorSetting&amp; val);
 
  void __set_scopes(const std::set&lt;IteratorScope::type&gt; &amp; val) {
    scopes = val;
  }
  void __set_scopes(const std::set&lt;IteratorScope::type&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_attachIterator_args &amp; rhs) const
   {
@@ -875,8 +840,7 @@ class AccumuloProxy_attachIterator_pargs {
  public:
 
 
  virtual ~AccumuloProxy_attachIterator_pargs() throw() {}

  virtual ~AccumuloProxy_attachIterator_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const IteratorSetting* setting;
@@ -888,36 +852,31 @@ class AccumuloProxy_attachIterator_pargs {
 
 typedef struct _AccumuloProxy_attachIterator_result__isset {
   _AccumuloProxy_attachIterator_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_attachIterator_result__isset;
 
 class AccumuloProxy_attachIterator_result {
  public:
 
  AccumuloProxy_attachIterator_result(const AccumuloProxy_attachIterator_result&amp;);
  AccumuloProxy_attachIterator_result&amp; operator=(const AccumuloProxy_attachIterator_result&amp;);
   AccumuloProxy_attachIterator_result() {
   }
 
  virtual ~AccumuloProxy_attachIterator_result() throw() {}

  virtual ~AccumuloProxy_attachIterator_result() throw();
   AccumuloSecurityException ouch1;
   AccumuloException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_attachIterator_result__isset __isset;
 
  void __set_ouch1(const AccumuloSecurityException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloSecurityException&amp; val);
 
  void __set_ouch2(const AccumuloException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_attachIterator_result &amp; rhs) const
   {
@@ -942,17 +901,16 @@ class AccumuloProxy_attachIterator_result {
 
 typedef struct _AccumuloProxy_attachIterator_presult__isset {
   _AccumuloProxy_attachIterator_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_attachIterator_presult__isset;
 
 class AccumuloProxy_attachIterator_presult {
  public:
 
 
  virtual ~AccumuloProxy_attachIterator_presult() throw() {}

  virtual ~AccumuloProxy_attachIterator_presult() throw();
   AccumuloSecurityException ouch1;
   AccumuloException ouch2;
   TableNotFoundException ouch3;
@@ -965,20 +923,21 @@ class AccumuloProxy_attachIterator_presult {
 
 typedef struct _AccumuloProxy_checkIteratorConflicts_args__isset {
   _AccumuloProxy_checkIteratorConflicts_args__isset() : login(false), tableName(false), setting(false), scopes(false) {}
  bool login;
  bool tableName;
  bool setting;
  bool scopes;
  bool login :1;
  bool tableName :1;
  bool setting :1;
  bool scopes :1;
 } _AccumuloProxy_checkIteratorConflicts_args__isset;
 
 class AccumuloProxy_checkIteratorConflicts_args {
  public:
 
  AccumuloProxy_checkIteratorConflicts_args(const AccumuloProxy_checkIteratorConflicts_args&amp;);
  AccumuloProxy_checkIteratorConflicts_args&amp; operator=(const AccumuloProxy_checkIteratorConflicts_args&amp;);
   AccumuloProxy_checkIteratorConflicts_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_checkIteratorConflicts_args() throw() {}

  virtual ~AccumuloProxy_checkIteratorConflicts_args() throw();
   std::string login;
   std::string tableName;
   IteratorSetting setting;
@@ -986,21 +945,13 @@ class AccumuloProxy_checkIteratorConflicts_args {
 
   _AccumuloProxy_checkIteratorConflicts_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_setting(const IteratorSetting&amp; val) {
    setting = val;
  }
  void __set_setting(const IteratorSetting&amp; val);
 
  void __set_scopes(const std::set&lt;IteratorScope::type&gt; &amp; val) {
    scopes = val;
  }
  void __set_scopes(const std::set&lt;IteratorScope::type&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_checkIteratorConflicts_args &amp; rhs) const
   {
@@ -1030,8 +981,7 @@ class AccumuloProxy_checkIteratorConflicts_pargs {
  public:
 
 
  virtual ~AccumuloProxy_checkIteratorConflicts_pargs() throw() {}

  virtual ~AccumuloProxy_checkIteratorConflicts_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const IteratorSetting* setting;
@@ -1043,36 +993,31 @@ class AccumuloProxy_checkIteratorConflicts_pargs {
 
 typedef struct _AccumuloProxy_checkIteratorConflicts_result__isset {
   _AccumuloProxy_checkIteratorConflicts_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_checkIteratorConflicts_result__isset;
 
 class AccumuloProxy_checkIteratorConflicts_result {
  public:
 
  AccumuloProxy_checkIteratorConflicts_result(const AccumuloProxy_checkIteratorConflicts_result&amp;);
  AccumuloProxy_checkIteratorConflicts_result&amp; operator=(const AccumuloProxy_checkIteratorConflicts_result&amp;);
   AccumuloProxy_checkIteratorConflicts_result() {
   }
 
  virtual ~AccumuloProxy_checkIteratorConflicts_result() throw() {}

  virtual ~AccumuloProxy_checkIteratorConflicts_result() throw();
   AccumuloSecurityException ouch1;
   AccumuloException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_checkIteratorConflicts_result__isset __isset;
 
  void __set_ouch1(const AccumuloSecurityException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloSecurityException&amp; val);
 
  void __set_ouch2(const AccumuloException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_checkIteratorConflicts_result &amp; rhs) const
   {
@@ -1097,17 +1042,16 @@ class AccumuloProxy_checkIteratorConflicts_result {
 
 typedef struct _AccumuloProxy_checkIteratorConflicts_presult__isset {
   _AccumuloProxy_checkIteratorConflicts_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_checkIteratorConflicts_presult__isset;
 
 class AccumuloProxy_checkIteratorConflicts_presult {
  public:
 
 
  virtual ~AccumuloProxy_checkIteratorConflicts_presult() throw() {}

  virtual ~AccumuloProxy_checkIteratorConflicts_presult() throw();
   AccumuloSecurityException ouch1;
   AccumuloException ouch2;
   TableNotFoundException ouch3;
@@ -1120,30 +1064,27 @@ class AccumuloProxy_checkIteratorConflicts_presult {
 
 typedef struct _AccumuloProxy_clearLocatorCache_args__isset {
   _AccumuloProxy_clearLocatorCache_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_clearLocatorCache_args__isset;
 
 class AccumuloProxy_clearLocatorCache_args {
  public:
 
  AccumuloProxy_clearLocatorCache_args(const AccumuloProxy_clearLocatorCache_args&amp;);
  AccumuloProxy_clearLocatorCache_args&amp; operator=(const AccumuloProxy_clearLocatorCache_args&amp;);
   AccumuloProxy_clearLocatorCache_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_clearLocatorCache_args() throw() {}

  virtual ~AccumuloProxy_clearLocatorCache_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_clearLocatorCache_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_clearLocatorCache_args &amp; rhs) const
   {
@@ -1169,8 +1110,7 @@ class AccumuloProxy_clearLocatorCache_pargs {
  public:
 
 
  virtual ~AccumuloProxy_clearLocatorCache_pargs() throw() {}

  virtual ~AccumuloProxy_clearLocatorCache_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -1180,24 +1120,23 @@ class AccumuloProxy_clearLocatorCache_pargs {
 
 typedef struct _AccumuloProxy_clearLocatorCache_result__isset {
   _AccumuloProxy_clearLocatorCache_result__isset() : ouch1(false) {}
  bool ouch1;
  bool ouch1 :1;
 } _AccumuloProxy_clearLocatorCache_result__isset;
 
 class AccumuloProxy_clearLocatorCache_result {
  public:
 
  AccumuloProxy_clearLocatorCache_result(const AccumuloProxy_clearLocatorCache_result&amp;);
  AccumuloProxy_clearLocatorCache_result&amp; operator=(const AccumuloProxy_clearLocatorCache_result&amp;);
   AccumuloProxy_clearLocatorCache_result() {
   }
 
  virtual ~AccumuloProxy_clearLocatorCache_result() throw() {}

  virtual ~AccumuloProxy_clearLocatorCache_result() throw();
   TableNotFoundException ouch1;
 
   _AccumuloProxy_clearLocatorCache_result__isset __isset;
 
  void __set_ouch1(const TableNotFoundException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_clearLocatorCache_result &amp; rhs) const
   {
@@ -1218,15 +1157,14 @@ class AccumuloProxy_clearLocatorCache_result {
 
 typedef struct _AccumuloProxy_clearLocatorCache_presult__isset {
   _AccumuloProxy_clearLocatorCache_presult__isset() : ouch1(false) {}
  bool ouch1;
  bool ouch1 :1;
 } _AccumuloProxy_clearLocatorCache_presult__isset;
 
 class AccumuloProxy_clearLocatorCache_presult {
  public:
 
 
  virtual ~AccumuloProxy_clearLocatorCache_presult() throw() {}

  virtual ~AccumuloProxy_clearLocatorCache_presult() throw();
   TableNotFoundException ouch1;
 
   _AccumuloProxy_clearLocatorCache_presult__isset __isset;
@@ -1237,22 +1175,23 @@ class AccumuloProxy_clearLocatorCache_presult {
 
 typedef struct _AccumuloProxy_cloneTable_args__isset {
   _AccumuloProxy_cloneTable_args__isset() : login(false), tableName(false), newTableName(false), flush(false), propertiesToSet(false), propertiesToExclude(false) {}
  bool login;
  bool tableName;
  bool newTableName;
  bool flush;
  bool propertiesToSet;
  bool propertiesToExclude;
  bool login :1;
  bool tableName :1;
  bool newTableName :1;
  bool flush :1;
  bool propertiesToSet :1;
  bool propertiesToExclude :1;
 } _AccumuloProxy_cloneTable_args__isset;
 
 class AccumuloProxy_cloneTable_args {
  public:
 
  AccumuloProxy_cloneTable_args(const AccumuloProxy_cloneTable_args&amp;);
  AccumuloProxy_cloneTable_args&amp; operator=(const AccumuloProxy_cloneTable_args&amp;);
   AccumuloProxy_cloneTable_args() : login(), tableName(), newTableName(), flush(0) {
   }
 
  virtual ~AccumuloProxy_cloneTable_args() throw() {}

  virtual ~AccumuloProxy_cloneTable_args() throw();
   std::string login;
   std::string tableName;
   std::string newTableName;
@@ -1262,29 +1201,17 @@ class AccumuloProxy_cloneTable_args {
 
   _AccumuloProxy_cloneTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_newTableName(const std::string&amp; val) {
    newTableName = val;
  }
  void __set_newTableName(const std::string&amp; val);
 
  void __set_flush(const bool val) {
    flush = val;
  }
  void __set_flush(const bool val);
 
  void __set_propertiesToSet(const std::map&lt;std::string, std::string&gt; &amp; val) {
    propertiesToSet = val;
  }
  void __set_propertiesToSet(const std::map&lt;std::string, std::string&gt; &amp; val);
 
  void __set_propertiesToExclude(const std::set&lt;std::string&gt; &amp; val) {
    propertiesToExclude = val;
  }
  void __set_propertiesToExclude(const std::set&lt;std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_cloneTable_args &amp; rhs) const
   {
@@ -1318,8 +1245,7 @@ class AccumuloProxy_cloneTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_cloneTable_pargs() throw() {}

  virtual ~AccumuloProxy_cloneTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* newTableName;
@@ -1333,20 +1259,21 @@ class AccumuloProxy_cloneTable_pargs {
 
 typedef struct _AccumuloProxy_cloneTable_result__isset {
   _AccumuloProxy_cloneTable_result__isset() : ouch1(false), ouch2(false), ouch3(false), ouch4(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch4;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_cloneTable_result__isset;
 
 class AccumuloProxy_cloneTable_result {
  public:
 
  AccumuloProxy_cloneTable_result(const AccumuloProxy_cloneTable_result&amp;);
  AccumuloProxy_cloneTable_result&amp; operator=(const AccumuloProxy_cloneTable_result&amp;);
   AccumuloProxy_cloneTable_result() {
   }
 
  virtual ~AccumuloProxy_cloneTable_result() throw() {}

  virtual ~AccumuloProxy_cloneTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -1354,21 +1281,13 @@ class AccumuloProxy_cloneTable_result {
 
   _AccumuloProxy_cloneTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
  void __set_ouch4(const TableExistsException&amp; val) {
    ouch4 = val;
  }
  void __set_ouch4(const TableExistsException&amp; val);
 
   bool operator == (const AccumuloProxy_cloneTable_result &amp; rhs) const
   {
@@ -1395,18 +1314,17 @@ class AccumuloProxy_cloneTable_result {
 
 typedef struct _AccumuloProxy_cloneTable_presult__isset {
   _AccumuloProxy_cloneTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false), ouch4(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch4;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_cloneTable_presult__isset;
 
 class AccumuloProxy_cloneTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_cloneTable_presult() throw() {}

  virtual ~AccumuloProxy_cloneTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -1420,24 +1338,25 @@ class AccumuloProxy_cloneTable_presult {
 
 typedef struct _AccumuloProxy_compactTable_args__isset {
   _AccumuloProxy_compactTable_args__isset() : login(false), tableName(false), startRow(false), endRow(false), iterators(false), flush(false), wait(false), compactionStrategy(false) {}
  bool login;
  bool tableName;
  bool startRow;
  bool endRow;
  bool iterators;
  bool flush;
  bool wait;
  bool compactionStrategy;
  bool login :1;
  bool tableName :1;
  bool startRow :1;
  bool endRow :1;
  bool iterators :1;
  bool flush :1;
  bool wait :1;
  bool compactionStrategy :1;
 } _AccumuloProxy_compactTable_args__isset;
 
 class AccumuloProxy_compactTable_args {
  public:
 
  AccumuloProxy_compactTable_args(const AccumuloProxy_compactTable_args&amp;);
  AccumuloProxy_compactTable_args&amp; operator=(const AccumuloProxy_compactTable_args&amp;);
   AccumuloProxy_compactTable_args() : login(), tableName(), startRow(), endRow(), flush(0), wait(0) {
   }
 
  virtual ~AccumuloProxy_compactTable_args() throw() {}

  virtual ~AccumuloProxy_compactTable_args() throw();
   std::string login;
   std::string tableName;
   std::string startRow;
@@ -1449,37 +1368,21 @@ class AccumuloProxy_compactTable_args {
 
   _AccumuloProxy_compactTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_startRow(const std::string&amp; val) {
    startRow = val;
  }
  void __set_startRow(const std::string&amp; val);
 
  void __set_endRow(const std::string&amp; val) {
    endRow = val;
  }
  void __set_endRow(const std::string&amp; val);
 
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
    iterators = val;
  }
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val);
 
  void __set_flush(const bool val) {
    flush = val;
  }
  void __set_flush(const bool val);
 
  void __set_wait(const bool val) {
    wait = val;
  }
  void __set_wait(const bool val);
 
  void __set_compactionStrategy(const CompactionStrategyConfig&amp; val) {
    compactionStrategy = val;
  }
  void __set_compactionStrategy(const CompactionStrategyConfig&amp; val);
 
   bool operator == (const AccumuloProxy_compactTable_args &amp; rhs) const
   {
@@ -1517,8 +1420,7 @@ class AccumuloProxy_compactTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_compactTable_pargs() throw() {}

  virtual ~AccumuloProxy_compactTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* startRow;
@@ -1534,36 +1436,31 @@ class AccumuloProxy_compactTable_pargs {
 
 typedef struct _AccumuloProxy_compactTable_result__isset {
   _AccumuloProxy_compactTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_compactTable_result__isset;
 
 class AccumuloProxy_compactTable_result {
  public:
 
  AccumuloProxy_compactTable_result(const AccumuloProxy_compactTable_result&amp;);
  AccumuloProxy_compactTable_result&amp; operator=(const AccumuloProxy_compactTable_result&amp;);
   AccumuloProxy_compactTable_result() {
   }
 
  virtual ~AccumuloProxy_compactTable_result() throw() {}

  virtual ~AccumuloProxy_compactTable_result() throw();
   AccumuloSecurityException ouch1;
   TableNotFoundException ouch2;
   AccumuloException ouch3;
 
   _AccumuloProxy_compactTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloSecurityException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloSecurityException&amp; val);
 
  void __set_ouch2(const TableNotFoundException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const TableNotFoundException&amp; val);
 
  void __set_ouch3(const AccumuloException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const AccumuloException&amp; val);
 
   bool operator == (const AccumuloProxy_compactTable_result &amp; rhs) const
   {
@@ -1588,17 +1485,16 @@ class AccumuloProxy_compactTable_result {
 
 typedef struct _AccumuloProxy_compactTable_presult__isset {
   _AccumuloProxy_compactTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_compactTable_presult__isset;
 
 class AccumuloProxy_compactTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_compactTable_presult() throw() {}

  virtual ~AccumuloProxy_compactTable_presult() throw();
   AccumuloSecurityException ouch1;
   TableNotFoundException ouch2;
   AccumuloException ouch3;
@@ -1611,30 +1507,27 @@ class AccumuloProxy_compactTable_presult {
 
 typedef struct _AccumuloProxy_cancelCompaction_args__isset {
   _AccumuloProxy_cancelCompaction_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_cancelCompaction_args__isset;
 
 class AccumuloProxy_cancelCompaction_args {
  public:
 
  AccumuloProxy_cancelCompaction_args(const AccumuloProxy_cancelCompaction_args&amp;);
  AccumuloProxy_cancelCompaction_args&amp; operator=(const AccumuloProxy_cancelCompaction_args&amp;);
   AccumuloProxy_cancelCompaction_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_cancelCompaction_args() throw() {}

  virtual ~AccumuloProxy_cancelCompaction_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_cancelCompaction_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_cancelCompaction_args &amp; rhs) const
   {
@@ -1660,8 +1553,7 @@ class AccumuloProxy_cancelCompaction_pargs {
  public:
 
 
  virtual ~AccumuloProxy_cancelCompaction_pargs() throw() {}

  virtual ~AccumuloProxy_cancelCompaction_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -1671,36 +1563,31 @@ class AccumuloProxy_cancelCompaction_pargs {
 
 typedef struct _AccumuloProxy_cancelCompaction_result__isset {
   _AccumuloProxy_cancelCompaction_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_cancelCompaction_result__isset;
 
 class AccumuloProxy_cancelCompaction_result {
  public:
 
  AccumuloProxy_cancelCompaction_result(const AccumuloProxy_cancelCompaction_result&amp;);
  AccumuloProxy_cancelCompaction_result&amp; operator=(const AccumuloProxy_cancelCompaction_result&amp;);
   AccumuloProxy_cancelCompaction_result() {
   }
 
  virtual ~AccumuloProxy_cancelCompaction_result() throw() {}

  virtual ~AccumuloProxy_cancelCompaction_result() throw();
   AccumuloSecurityException ouch1;
   TableNotFoundException ouch2;
   AccumuloException ouch3;
 
   _AccumuloProxy_cancelCompaction_result__isset __isset;
 
  void __set_ouch1(const AccumuloSecurityException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloSecurityException&amp; val);
 
  void __set_ouch2(const TableNotFoundException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const TableNotFoundException&amp; val);
 
  void __set_ouch3(const AccumuloException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const AccumuloException&amp; val);
 
   bool operator == (const AccumuloProxy_cancelCompaction_result &amp; rhs) const
   {
@@ -1725,17 +1612,16 @@ class AccumuloProxy_cancelCompaction_result {
 
 typedef struct _AccumuloProxy_cancelCompaction_presult__isset {
   _AccumuloProxy_cancelCompaction_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_cancelCompaction_presult__isset;
 
 class AccumuloProxy_cancelCompaction_presult {
  public:
 
 
  virtual ~AccumuloProxy_cancelCompaction_presult() throw() {}

  virtual ~AccumuloProxy_cancelCompaction_presult() throw();
   AccumuloSecurityException ouch1;
   TableNotFoundException ouch2;
   AccumuloException ouch3;
@@ -1748,20 +1634,21 @@ class AccumuloProxy_cancelCompaction_presult {
 
 typedef struct _AccumuloProxy_createTable_args__isset {
   _AccumuloProxy_createTable_args__isset() : login(false), tableName(false), versioningIter(false), type(false) {}
  bool login;
  bool tableName;
  bool versioningIter;
  bool type;
  bool login :1;
  bool tableName :1;
  bool versioningIter :1;
  bool type :1;
 } _AccumuloProxy_createTable_args__isset;
 
 class AccumuloProxy_createTable_args {
  public:
 
  AccumuloProxy_createTable_args(const AccumuloProxy_createTable_args&amp;);
  AccumuloProxy_createTable_args&amp; operator=(const AccumuloProxy_createTable_args&amp;);
   AccumuloProxy_createTable_args() : login(), tableName(), versioningIter(0), type((TimeType::type)0) {
   }
 
  virtual ~AccumuloProxy_createTable_args() throw() {}

  virtual ~AccumuloProxy_createTable_args() throw();
   std::string login;
   std::string tableName;
   bool versioningIter;
@@ -1769,21 +1656,13 @@ class AccumuloProxy_createTable_args {
 
   _AccumuloProxy_createTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_versioningIter(const bool val) {
    versioningIter = val;
  }
  void __set_versioningIter(const bool val);
 
  void __set_type(const TimeType::type val) {
    type = val;
  }
  void __set_type(const TimeType::type val);
 
   bool operator == (const AccumuloProxy_createTable_args &amp; rhs) const
   {
@@ -1813,8 +1692,7 @@ class AccumuloProxy_createTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_createTable_pargs() throw() {}

  virtual ~AccumuloProxy_createTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const bool* versioningIter;
@@ -1826,36 +1704,31 @@ class AccumuloProxy_createTable_pargs {
 
 typedef struct _AccumuloProxy_createTable_result__isset {
   _AccumuloProxy_createTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createTable_result__isset;
 
 class AccumuloProxy_createTable_result {
  public:
 
  AccumuloProxy_createTable_result(const AccumuloProxy_createTable_result&amp;);
  AccumuloProxy_createTable_result&amp; operator=(const AccumuloProxy_createTable_result&amp;);
   AccumuloProxy_createTable_result() {
   }
 
  virtual ~AccumuloProxy_createTable_result() throw() {}

  virtual ~AccumuloProxy_createTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableExistsException ouch3;
 
   _AccumuloProxy_createTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableExistsException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableExistsException&amp; val);
 
   bool operator == (const AccumuloProxy_createTable_result &amp; rhs) const
   {
@@ -1880,17 +1753,16 @@ class AccumuloProxy_createTable_result {
 
 typedef struct _AccumuloProxy_createTable_presult__isset {
   _AccumuloProxy_createTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createTable_presult__isset;
 
 class AccumuloProxy_createTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_createTable_presult() throw() {}

  virtual ~AccumuloProxy_createTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableExistsException ouch3;
@@ -1903,30 +1775,27 @@ class AccumuloProxy_createTable_presult {
 
 typedef struct _AccumuloProxy_deleteTable_args__isset {
   _AccumuloProxy_deleteTable_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_deleteTable_args__isset;
 
 class AccumuloProxy_deleteTable_args {
  public:
 
  AccumuloProxy_deleteTable_args(const AccumuloProxy_deleteTable_args&amp;);
  AccumuloProxy_deleteTable_args&amp; operator=(const AccumuloProxy_deleteTable_args&amp;);
   AccumuloProxy_deleteTable_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_deleteTable_args() throw() {}

  virtual ~AccumuloProxy_deleteTable_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_deleteTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_deleteTable_args &amp; rhs) const
   {
@@ -1952,8 +1821,7 @@ class AccumuloProxy_deleteTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_deleteTable_pargs() throw() {}

  virtual ~AccumuloProxy_deleteTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -1963,36 +1831,31 @@ class AccumuloProxy_deleteTable_pargs {
 
 typedef struct _AccumuloProxy_deleteTable_result__isset {
   _AccumuloProxy_deleteTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_deleteTable_result__isset;
 
 class AccumuloProxy_deleteTable_result {
  public:
 
  AccumuloProxy_deleteTable_result(const AccumuloProxy_deleteTable_result&amp;);
  AccumuloProxy_deleteTable_result&amp; operator=(const AccumuloProxy_deleteTable_result&amp;);
   AccumuloProxy_deleteTable_result() {
   }
 
  virtual ~AccumuloProxy_deleteTable_result() throw() {}

  virtual ~AccumuloProxy_deleteTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_deleteTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_deleteTable_result &amp; rhs) const
   {
@@ -2017,17 +1880,16 @@ class AccumuloProxy_deleteTable_result {
 
 typedef struct _AccumuloProxy_deleteTable_presult__isset {
   _AccumuloProxy_deleteTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_deleteTable_presult__isset;
 
 class AccumuloProxy_deleteTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_deleteTable_presult() throw() {}

  virtual ~AccumuloProxy_deleteTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -2040,20 +1902,21 @@ class AccumuloProxy_deleteTable_presult {
 
 typedef struct _AccumuloProxy_deleteRows_args__isset {
   _AccumuloProxy_deleteRows_args__isset() : login(false), tableName(false), startRow(false), endRow(false) {}
  bool login;
  bool tableName;
  bool startRow;
  bool endRow;
  bool login :1;
  bool tableName :1;
  bool startRow :1;
  bool endRow :1;
 } _AccumuloProxy_deleteRows_args__isset;
 
 class AccumuloProxy_deleteRows_args {
  public:
 
  AccumuloProxy_deleteRows_args(const AccumuloProxy_deleteRows_args&amp;);
  AccumuloProxy_deleteRows_args&amp; operator=(const AccumuloProxy_deleteRows_args&amp;);
   AccumuloProxy_deleteRows_args() : login(), tableName(), startRow(), endRow() {
   }
 
  virtual ~AccumuloProxy_deleteRows_args() throw() {}

  virtual ~AccumuloProxy_deleteRows_args() throw();
   std::string login;
   std::string tableName;
   std::string startRow;
@@ -2061,21 +1924,13 @@ class AccumuloProxy_deleteRows_args {
 
   _AccumuloProxy_deleteRows_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_startRow(const std::string&amp; val) {
    startRow = val;
  }
  void __set_startRow(const std::string&amp; val);
 
  void __set_endRow(const std::string&amp; val) {
    endRow = val;
  }
  void __set_endRow(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_deleteRows_args &amp; rhs) const
   {
@@ -2105,8 +1960,7 @@ class AccumuloProxy_deleteRows_pargs {
  public:
 
 
  virtual ~AccumuloProxy_deleteRows_pargs() throw() {}

  virtual ~AccumuloProxy_deleteRows_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* startRow;
@@ -2118,36 +1972,31 @@ class AccumuloProxy_deleteRows_pargs {
 
 typedef struct _AccumuloProxy_deleteRows_result__isset {
   _AccumuloProxy_deleteRows_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_deleteRows_result__isset;
 
 class AccumuloProxy_deleteRows_result {
  public:
 
  AccumuloProxy_deleteRows_result(const AccumuloProxy_deleteRows_result&amp;);
  AccumuloProxy_deleteRows_result&amp; operator=(const AccumuloProxy_deleteRows_result&amp;);
   AccumuloProxy_deleteRows_result() {
   }
 
  virtual ~AccumuloProxy_deleteRows_result() throw() {}

  virtual ~AccumuloProxy_deleteRows_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_deleteRows_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_deleteRows_result &amp; rhs) const
   {
@@ -2172,17 +2021,16 @@ class AccumuloProxy_deleteRows_result {
 
 typedef struct _AccumuloProxy_deleteRows_presult__isset {
   _AccumuloProxy_deleteRows_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_deleteRows_presult__isset;
 
 class AccumuloProxy_deleteRows_presult {
  public:
 
 
  virtual ~AccumuloProxy_deleteRows_presult() throw() {}

  virtual ~AccumuloProxy_deleteRows_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -2195,36 +2043,31 @@ class AccumuloProxy_deleteRows_presult {
 
 typedef struct _AccumuloProxy_exportTable_args__isset {
   _AccumuloProxy_exportTable_args__isset() : login(false), tableName(false), exportDir(false) {}
  bool login;
  bool tableName;
  bool exportDir;
  bool login :1;
  bool tableName :1;
  bool exportDir :1;
 } _AccumuloProxy_exportTable_args__isset;
 
 class AccumuloProxy_exportTable_args {
  public:
 
  AccumuloProxy_exportTable_args(const AccumuloProxy_exportTable_args&amp;);
  AccumuloProxy_exportTable_args&amp; operator=(const AccumuloProxy_exportTable_args&amp;);
   AccumuloProxy_exportTable_args() : login(), tableName(), exportDir() {
   }
 
  virtual ~AccumuloProxy_exportTable_args() throw() {}

  virtual ~AccumuloProxy_exportTable_args() throw();
   std::string login;
   std::string tableName;
   std::string exportDir;
 
   _AccumuloProxy_exportTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_exportDir(const std::string&amp; val) {
    exportDir = val;
  }
  void __set_exportDir(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_exportTable_args &amp; rhs) const
   {
@@ -2252,8 +2095,7 @@ class AccumuloProxy_exportTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_exportTable_pargs() throw() {}

  virtual ~AccumuloProxy_exportTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* exportDir;
@@ -2264,36 +2106,31 @@ class AccumuloProxy_exportTable_pargs {
 
 typedef struct _AccumuloProxy_exportTable_result__isset {
   _AccumuloProxy_exportTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_exportTable_result__isset;
 
 class AccumuloProxy_exportTable_result {
  public:
 
  AccumuloProxy_exportTable_result(const AccumuloProxy_exportTable_result&amp;);
  AccumuloProxy_exportTable_result&amp; operator=(const AccumuloProxy_exportTable_result&amp;);
   AccumuloProxy_exportTable_result() {
   }
 
  virtual ~AccumuloProxy_exportTable_result() throw() {}

  virtual ~AccumuloProxy_exportTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_exportTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_exportTable_result &amp; rhs) const
   {
@@ -2318,17 +2155,16 @@ class AccumuloProxy_exportTable_result {
 
 typedef struct _AccumuloProxy_exportTable_presult__isset {
   _AccumuloProxy_exportTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_exportTable_presult__isset;
 
 class AccumuloProxy_exportTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_exportTable_presult() throw() {}

  virtual ~AccumuloProxy_exportTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -2341,21 +2177,22 @@ class AccumuloProxy_exportTable_presult {
 
 typedef struct _AccumuloProxy_flushTable_args__isset {
   _AccumuloProxy_flushTable_args__isset() : login(false), tableName(false), startRow(false), endRow(false), wait(false) {}
  bool login;
  bool tableName;
  bool startRow;
  bool endRow;
  bool wait;
  bool login :1;
  bool tableName :1;
  bool startRow :1;
  bool endRow :1;
  bool wait :1;
 } _AccumuloProxy_flushTable_args__isset;
 
 class AccumuloProxy_flushTable_args {
  public:
 
  AccumuloProxy_flushTable_args(const AccumuloProxy_flushTable_args&amp;);
  AccumuloProxy_flushTable_args&amp; operator=(const AccumuloProxy_flushTable_args&amp;);
   AccumuloProxy_flushTable_args() : login(), tableName(), startRow(), endRow(), wait(0) {
   }
 
  virtual ~AccumuloProxy_flushTable_args() throw() {}

  virtual ~AccumuloProxy_flushTable_args() throw();
   std::string login;
   std::string tableName;
   std::string startRow;
@@ -2364,25 +2201,15 @@ class AccumuloProxy_flushTable_args {
 
   _AccumuloProxy_flushTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_startRow(const std::string&amp; val) {
    startRow = val;
  }
  void __set_startRow(const std::string&amp; val);
 
  void __set_endRow(const std::string&amp; val) {
    endRow = val;
  }
  void __set_endRow(const std::string&amp; val);
 
  void __set_wait(const bool val) {
    wait = val;
  }
  void __set_wait(const bool val);
 
   bool operator == (const AccumuloProxy_flushTable_args &amp; rhs) const
   {
@@ -2414,8 +2241,7 @@ class AccumuloProxy_flushTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_flushTable_pargs() throw() {}

  virtual ~AccumuloProxy_flushTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* startRow;
@@ -2428,36 +2254,31 @@ class AccumuloProxy_flushTable_pargs {
 
 typedef struct _AccumuloProxy_flushTable_result__isset {
   _AccumuloProxy_flushTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_flushTable_result__isset;
 
 class AccumuloProxy_flushTable_result {
  public:
 
  AccumuloProxy_flushTable_result(const AccumuloProxy_flushTable_result&amp;);
  AccumuloProxy_flushTable_result&amp; operator=(const AccumuloProxy_flushTable_result&amp;);
   AccumuloProxy_flushTable_result() {
   }
 
  virtual ~AccumuloProxy_flushTable_result() throw() {}

  virtual ~AccumuloProxy_flushTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_flushTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_flushTable_result &amp; rhs) const
   {
@@ -2482,17 +2303,16 @@ class AccumuloProxy_flushTable_result {
 
 typedef struct _AccumuloProxy_flushTable_presult__isset {
   _AccumuloProxy_flushTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_flushTable_presult__isset;
 
 class AccumuloProxy_flushTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_flushTable_presult() throw() {}

  virtual ~AccumuloProxy_flushTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -2505,30 +2325,27 @@ class AccumuloProxy_flushTable_presult {
 
 typedef struct _AccumuloProxy_getDiskUsage_args__isset {
   _AccumuloProxy_getDiskUsage_args__isset() : login(false), tables(false) {}
  bool login;
  bool tables;
  bool login :1;
  bool tables :1;
 } _AccumuloProxy_getDiskUsage_args__isset;
 
 class AccumuloProxy_getDiskUsage_args {
  public:
 
  AccumuloProxy_getDiskUsage_args(const AccumuloProxy_getDiskUsage_args&amp;);
  AccumuloProxy_getDiskUsage_args&amp; operator=(const AccumuloProxy_getDiskUsage_args&amp;);
   AccumuloProxy_getDiskUsage_args() : login() {
   }
 
  virtual ~AccumuloProxy_getDiskUsage_args() throw() {}

  virtual ~AccumuloProxy_getDiskUsage_args() throw();
   std::string login;
   std::set&lt;std::string&gt;  tables;
 
   _AccumuloProxy_getDiskUsage_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tables(const std::set&lt;std::string&gt; &amp; val) {
    tables = val;
  }
  void __set_tables(const std::set&lt;std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_getDiskUsage_args &amp; rhs) const
   {
@@ -2554,8 +2371,7 @@ class AccumuloProxy_getDiskUsage_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getDiskUsage_pargs() throw() {}

  virtual ~AccumuloProxy_getDiskUsage_pargs() throw();
   const std::string* login;
   const std::set&lt;std::string&gt; * tables;
 
@@ -2565,20 +2381,21 @@ class AccumuloProxy_getDiskUsage_pargs {
 
 typedef struct _AccumuloProxy_getDiskUsage_result__isset {
   _AccumuloProxy_getDiskUsage_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getDiskUsage_result__isset;
 
 class AccumuloProxy_getDiskUsage_result {
  public:
 
  AccumuloProxy_getDiskUsage_result(const AccumuloProxy_getDiskUsage_result&amp;);
  AccumuloProxy_getDiskUsage_result&amp; operator=(const AccumuloProxy_getDiskUsage_result&amp;);
   AccumuloProxy_getDiskUsage_result() {
   }
 
  virtual ~AccumuloProxy_getDiskUsage_result() throw() {}

  virtual ~AccumuloProxy_getDiskUsage_result() throw();
   std::vector&lt;DiskUsage&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -2586,21 +2403,13 @@ class AccumuloProxy_getDiskUsage_result {
 
   _AccumuloProxy_getDiskUsage_result__isset __isset;
 
  void __set_success(const std::vector&lt;DiskUsage&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::vector&lt;DiskUsage&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_getDiskUsage_result &amp; rhs) const
   {
@@ -2627,18 +2436,17 @@ class AccumuloProxy_getDiskUsage_result {
 
 typedef struct _AccumuloProxy_getDiskUsage_presult__isset {
   _AccumuloProxy_getDiskUsage_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getDiskUsage_presult__isset;
 
 class AccumuloProxy_getDiskUsage_presult {
  public:
 
 
  virtual ~AccumuloProxy_getDiskUsage_presult() throw() {}

  virtual ~AccumuloProxy_getDiskUsage_presult() throw();
   std::vector&lt;DiskUsage&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -2652,30 +2460,27 @@ class AccumuloProxy_getDiskUsage_presult {
 
 typedef struct _AccumuloProxy_getLocalityGroups_args__isset {
   _AccumuloProxy_getLocalityGroups_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_getLocalityGroups_args__isset;
 
 class AccumuloProxy_getLocalityGroups_args {
  public:
 
  AccumuloProxy_getLocalityGroups_args(const AccumuloProxy_getLocalityGroups_args&amp;);
  AccumuloProxy_getLocalityGroups_args&amp; operator=(const AccumuloProxy_getLocalityGroups_args&amp;);
   AccumuloProxy_getLocalityGroups_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_getLocalityGroups_args() throw() {}

  virtual ~AccumuloProxy_getLocalityGroups_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_getLocalityGroups_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getLocalityGroups_args &amp; rhs) const
   {
@@ -2701,8 +2506,7 @@ class AccumuloProxy_getLocalityGroups_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getLocalityGroups_pargs() throw() {}

  virtual ~AccumuloProxy_getLocalityGroups_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -2712,20 +2516,21 @@ class AccumuloProxy_getLocalityGroups_pargs {
 
 typedef struct _AccumuloProxy_getLocalityGroups_result__isset {
   _AccumuloProxy_getLocalityGroups_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getLocalityGroups_result__isset;
 
 class AccumuloProxy_getLocalityGroups_result {
  public:
 
  AccumuloProxy_getLocalityGroups_result(const AccumuloProxy_getLocalityGroups_result&amp;);
  AccumuloProxy_getLocalityGroups_result&amp; operator=(const AccumuloProxy_getLocalityGroups_result&amp;);
   AccumuloProxy_getLocalityGroups_result() {
   }
 
  virtual ~AccumuloProxy_getLocalityGroups_result() throw() {}

  virtual ~AccumuloProxy_getLocalityGroups_result() throw();
   std::map&lt;std::string, std::set&lt;std::string&gt; &gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -2733,21 +2538,13 @@ class AccumuloProxy_getLocalityGroups_result {
 
   _AccumuloProxy_getLocalityGroups_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_getLocalityGroups_result &amp; rhs) const
   {
@@ -2774,18 +2571,17 @@ class AccumuloProxy_getLocalityGroups_result {
 
 typedef struct _AccumuloProxy_getLocalityGroups_presult__isset {
   _AccumuloProxy_getLocalityGroups_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getLocalityGroups_presult__isset;
 
 class AccumuloProxy_getLocalityGroups_presult {
  public:
 
 
  virtual ~AccumuloProxy_getLocalityGroups_presult() throw() {}

  virtual ~AccumuloProxy_getLocalityGroups_presult() throw();
   std::map&lt;std::string, std::set&lt;std::string&gt; &gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -2799,20 +2595,21 @@ class AccumuloProxy_getLocalityGroups_presult {
 
 typedef struct _AccumuloProxy_getIteratorSetting_args__isset {
   _AccumuloProxy_getIteratorSetting_args__isset() : login(false), tableName(false), iteratorName(false), scope(false) {}
  bool login;
  bool tableName;
  bool iteratorName;
  bool scope;
  bool login :1;
  bool tableName :1;
  bool iteratorName :1;
  bool scope :1;
 } _AccumuloProxy_getIteratorSetting_args__isset;
 
 class AccumuloProxy_getIteratorSetting_args {
  public:
 
  AccumuloProxy_getIteratorSetting_args(const AccumuloProxy_getIteratorSetting_args&amp;);
  AccumuloProxy_getIteratorSetting_args&amp; operator=(const AccumuloProxy_getIteratorSetting_args&amp;);
   AccumuloProxy_getIteratorSetting_args() : login(), tableName(), iteratorName(), scope((IteratorScope::type)0) {
   }
 
  virtual ~AccumuloProxy_getIteratorSetting_args() throw() {}

  virtual ~AccumuloProxy_getIteratorSetting_args() throw();
   std::string login;
   std::string tableName;
   std::string iteratorName;
@@ -2820,21 +2617,13 @@ class AccumuloProxy_getIteratorSetting_args {
 
   _AccumuloProxy_getIteratorSetting_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_iteratorName(const std::string&amp; val) {
    iteratorName = val;
  }
  void __set_iteratorName(const std::string&amp; val);
 
  void __set_scope(const IteratorScope::type val) {
    scope = val;
  }
  void __set_scope(const IteratorScope::type val);
 
   bool operator == (const AccumuloProxy_getIteratorSetting_args &amp; rhs) const
   {
@@ -2864,8 +2653,7 @@ class AccumuloProxy_getIteratorSetting_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getIteratorSetting_pargs() throw() {}

  virtual ~AccumuloProxy_getIteratorSetting_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* iteratorName;
@@ -2877,20 +2665,21 @@ class AccumuloProxy_getIteratorSetting_pargs {
 
 typedef struct _AccumuloProxy_getIteratorSetting_result__isset {
   _AccumuloProxy_getIteratorSetting_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getIteratorSetting_result__isset;
 
 class AccumuloProxy_getIteratorSetting_result {
  public:
 
  AccumuloProxy_getIteratorSetting_result(const AccumuloProxy_getIteratorSetting_result&amp;);
  AccumuloProxy_getIteratorSetting_result&amp; operator=(const AccumuloProxy_getIteratorSetting_result&amp;);
   AccumuloProxy_getIteratorSetting_result() {
   }
 
  virtual ~AccumuloProxy_getIteratorSetting_result() throw() {}

  virtual ~AccumuloProxy_getIteratorSetting_result() throw();
   IteratorSetting success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -2898,21 +2687,13 @@ class AccumuloProxy_getIteratorSetting_result {
 
   _AccumuloProxy_getIteratorSetting_result__isset __isset;
 
  void __set_success(const IteratorSetting&amp; val) {
    success = val;
  }
  void __set_success(const IteratorSetting&amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_getIteratorSetting_result &amp; rhs) const
   {
@@ -2939,18 +2720,17 @@ class AccumuloProxy_getIteratorSetting_result {
 
 typedef struct _AccumuloProxy_getIteratorSetting_presult__isset {
   _AccumuloProxy_getIteratorSetting_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getIteratorSetting_presult__isset;
 
 class AccumuloProxy_getIteratorSetting_presult {
  public:
 
 
  virtual ~AccumuloProxy_getIteratorSetting_presult() throw() {}

  virtual ~AccumuloProxy_getIteratorSetting_presult() throw();
   IteratorSetting* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -2964,23 +2744,24 @@ class AccumuloProxy_getIteratorSetting_presult {
 
 typedef struct _AccumuloProxy_getMaxRow_args__isset {
   _AccumuloProxy_getMaxRow_args__isset() : login(false), tableName(false), auths(false), startRow(false), startInclusive(false), endRow(false), endInclusive(false) {}
  bool login;
  bool tableName;
  bool auths;
  bool startRow;
  bool startInclusive;
  bool endRow;
  bool endInclusive;
  bool login :1;
  bool tableName :1;
  bool auths :1;
  bool startRow :1;
  bool startInclusive :1;
  bool endRow :1;
  bool endInclusive :1;
 } _AccumuloProxy_getMaxRow_args__isset;
 
 class AccumuloProxy_getMaxRow_args {
  public:
 
  AccumuloProxy_getMaxRow_args(const AccumuloProxy_getMaxRow_args&amp;);
  AccumuloProxy_getMaxRow_args&amp; operator=(const AccumuloProxy_getMaxRow_args&amp;);
   AccumuloProxy_getMaxRow_args() : login(), tableName(), startRow(), startInclusive(0), endRow(), endInclusive(0) {
   }
 
  virtual ~AccumuloProxy_getMaxRow_args() throw() {}

  virtual ~AccumuloProxy_getMaxRow_args() throw();
   std::string login;
   std::string tableName;
   std::set&lt;std::string&gt;  auths;
@@ -2991,33 +2772,19 @@ class AccumuloProxy_getMaxRow_args {
 
   _AccumuloProxy_getMaxRow_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_auths(const std::set&lt;std::string&gt; &amp; val) {
    auths = val;
  }
  void __set_auths(const std::set&lt;std::string&gt; &amp; val);
 
  void __set_startRow(const std::string&amp; val) {
    startRow = val;
  }
  void __set_startRow(const std::string&amp; val);
 
  void __set_startInclusive(const bool val) {
    startInclusive = val;
  }
  void __set_startInclusive(const bool val);
 
  void __set_endRow(const std::string&amp; val) {
    endRow = val;
  }
  void __set_endRow(const std::string&amp; val);
 
  void __set_endInclusive(const bool val) {
    endInclusive = val;
  }
  void __set_endInclusive(const bool val);
 
   bool operator == (const AccumuloProxy_getMaxRow_args &amp; rhs) const
   {
@@ -3053,8 +2820,7 @@ class AccumuloProxy_getMaxRow_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getMaxRow_pargs() throw() {}

  virtual ~AccumuloProxy_getMaxRow_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::set&lt;std::string&gt; * auths;
@@ -3069,20 +2835,21 @@ class AccumuloProxy_getMaxRow_pargs {
 
 typedef struct _AccumuloProxy_getMaxRow_result__isset {
   _AccumuloProxy_getMaxRow_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getMaxRow_result__isset;
 
 class AccumuloProxy_getMaxRow_result {
  public:
 
  AccumuloProxy_getMaxRow_result(const AccumuloProxy_getMaxRow_result&amp;);
  AccumuloProxy_getMaxRow_result&amp; operator=(const AccumuloProxy_getMaxRow_result&amp;);
   AccumuloProxy_getMaxRow_result() : success() {
   }
 
  virtual ~AccumuloProxy_getMaxRow_result() throw() {}

  virtual ~AccumuloProxy_getMaxRow_result() throw();
   std::string success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -3090,21 +2857,13 @@ class AccumuloProxy_getMaxRow_result {
 
   _AccumuloProxy_getMaxRow_result__isset __isset;
 
  void __set_success(const std::string&amp; val) {
    success = val;
  }
  void __set_success(const std::string&amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_getMaxRow_result &amp; rhs) const
   {
@@ -3131,18 +2890,17 @@ class AccumuloProxy_getMaxRow_result {
 
 typedef struct _AccumuloProxy_getMaxRow_presult__isset {
   _AccumuloProxy_getMaxRow_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getMaxRow_presult__isset;
 
 class AccumuloProxy_getMaxRow_presult {
  public:
 
 
  virtual ~AccumuloProxy_getMaxRow_presult() throw() {}

  virtual ~AccumuloProxy_getMaxRow_presult() throw();
   std::string* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -3156,30 +2914,27 @@ class AccumuloProxy_getMaxRow_presult {
 
 typedef struct _AccumuloProxy_getTableProperties_args__isset {
   _AccumuloProxy_getTableProperties_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_getTableProperties_args__isset;
 
 class AccumuloProxy_getTableProperties_args {
  public:
 
  AccumuloProxy_getTableProperties_args(const AccumuloProxy_getTableProperties_args&amp;);
  AccumuloProxy_getTableProperties_args&amp; operator=(const AccumuloProxy_getTableProperties_args&amp;);
   AccumuloProxy_getTableProperties_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_getTableProperties_args() throw() {}

  virtual ~AccumuloProxy_getTableProperties_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_getTableProperties_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getTableProperties_args &amp; rhs) const
   {
@@ -3205,8 +2960,7 @@ class AccumuloProxy_getTableProperties_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getTableProperties_pargs() throw() {}

  virtual ~AccumuloProxy_getTableProperties_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -3216,20 +2970,21 @@ class AccumuloProxy_getTableProperties_pargs {
 
 typedef struct _AccumuloProxy_getTableProperties_result__isset {
   _AccumuloProxy_getTableProperties_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getTableProperties_result__isset;
 
 class AccumuloProxy_getTableProperties_result {
  public:
 
  AccumuloProxy_getTableProperties_result(const AccumuloProxy_getTableProperties_result&amp;);
  AccumuloProxy_getTableProperties_result&amp; operator=(const AccumuloProxy_getTableProperties_result&amp;);
   AccumuloProxy_getTableProperties_result() {
   }
 
  virtual ~AccumuloProxy_getTableProperties_result() throw() {}

  virtual ~AccumuloProxy_getTableProperties_result() throw();
   std::map&lt;std::string, std::string&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -3237,21 +2992,13 @@ class AccumuloProxy_getTableProperties_result {
 
   _AccumuloProxy_getTableProperties_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_getTableProperties_result &amp; rhs) const
   {
@@ -3278,18 +3025,17 @@ class AccumuloProxy_getTableProperties_result {
 
 typedef struct _AccumuloProxy_getTableProperties_presult__isset {
   _AccumuloProxy_getTableProperties_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_getTableProperties_presult__isset;
 
 class AccumuloProxy_getTableProperties_presult {
  public:
 
 
  virtual ~AccumuloProxy_getTableProperties_presult() throw() {}

  virtual ~AccumuloProxy_getTableProperties_presult() throw();
   std::map&lt;std::string, std::string&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -3303,21 +3049,22 @@ class AccumuloProxy_getTableProperties_presult {
 
 typedef struct _AccumuloProxy_importDirectory_args__isset {
   _AccumuloProxy_importDirectory_args__isset() : login(false), tableName(false), importDir(false), failureDir(false), setTime(false) {}
  bool login;
  bool tableName;
  bool importDir;
  bool failureDir;
  bool setTime;
  bool login :1;
  bool tableName :1;
  bool importDir :1;
  bool failureDir :1;
  bool setTime :1;
 } _AccumuloProxy_importDirectory_args__isset;
 
 class AccumuloProxy_importDirectory_args {
  public:
 
  AccumuloProxy_importDirectory_args(const AccumuloProxy_importDirectory_args&amp;);
  AccumuloProxy_importDirectory_args&amp; operator=(const AccumuloProxy_importDirectory_args&amp;);
   AccumuloProxy_importDirectory_args() : login(), tableName(), importDir(), failureDir(), setTime(0) {
   }
 
  virtual ~AccumuloProxy_importDirectory_args() throw() {}

  virtual ~AccumuloProxy_importDirectory_args() throw();
   std::string login;
   std::string tableName;
   std::string importDir;
@@ -3326,25 +3073,15 @@ class AccumuloProxy_importDirectory_args {
 
   _AccumuloProxy_importDirectory_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_importDir(const std::string&amp; val) {
    importDir = val;
  }
  void __set_importDir(const std::string&amp; val);
 
  void __set_failureDir(const std::string&amp; val) {
    failureDir = val;
  }
  void __set_failureDir(const std::string&amp; val);
 
  void __set_setTime(const bool val) {
    setTime = val;
  }
  void __set_setTime(const bool val);
 
   bool operator == (const AccumuloProxy_importDirectory_args &amp; rhs) const
   {
@@ -3376,8 +3113,7 @@ class AccumuloProxy_importDirectory_pargs {
  public:
 
 
  virtual ~AccumuloProxy_importDirectory_pargs() throw() {}

  virtual ~AccumuloProxy_importDirectory_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* importDir;
@@ -3390,36 +3126,31 @@ class AccumuloProxy_importDirectory_pargs {
 
 typedef struct _AccumuloProxy_importDirectory_result__isset {
   _AccumuloProxy_importDirectory_result__isset() : ouch1(false), ouch3(false), ouch4(false) {}
  bool ouch1;
  bool ouch3;
  bool ouch4;
  bool ouch1 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_importDirectory_result__isset;
 
 class AccumuloProxy_importDirectory_result {
  public:
 
  AccumuloProxy_importDirectory_result(const AccumuloProxy_importDirectory_result&amp;);
  AccumuloProxy_importDirectory_result&amp; operator=(const AccumuloProxy_importDirectory_result&amp;);
   AccumuloProxy_importDirectory_result() {
   }
 
  virtual ~AccumuloProxy_importDirectory_result() throw() {}

  virtual ~AccumuloProxy_importDirectory_result() throw();
   TableNotFoundException ouch1;
   AccumuloException ouch3;
   AccumuloSecurityException ouch4;
 
   _AccumuloProxy_importDirectory_result__isset __isset;
 
  void __set_ouch1(const TableNotFoundException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const TableNotFoundException&amp; val);
 
  void __set_ouch3(const AccumuloException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const AccumuloException&amp; val);
 
  void __set_ouch4(const AccumuloSecurityException&amp; val) {
    ouch4 = val;
  }
  void __set_ouch4(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_importDirectory_result &amp; rhs) const
   {
@@ -3444,17 +3175,16 @@ class AccumuloProxy_importDirectory_result {
 
 typedef struct _AccumuloProxy_importDirectory_presult__isset {
   _AccumuloProxy_importDirectory_presult__isset() : ouch1(false), ouch3(false), ouch4(false) {}
  bool ouch1;
  bool ouch3;
  bool ouch4;
  bool ouch1 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_importDirectory_presult__isset;
 
 class AccumuloProxy_importDirectory_presult {
  public:
 
 
  virtual ~AccumuloProxy_importDirectory_presult() throw() {}

  virtual ~AccumuloProxy_importDirectory_presult() throw();
   TableNotFoundException ouch1;
   AccumuloException ouch3;
   AccumuloSecurityException ouch4;
@@ -3467,36 +3197,31 @@ class AccumuloProxy_importDirectory_presult {
 
 typedef struct _AccumuloProxy_importTable_args__isset {
   _AccumuloProxy_importTable_args__isset() : login(false), tableName(false), importDir(false) {}
  bool login;
  bool tableName;
  bool importDir;
  bool login :1;
  bool tableName :1;
  bool importDir :1;
 } _AccumuloProxy_importTable_args__isset;
 
 class AccumuloProxy_importTable_args {
  public:
 
  AccumuloProxy_importTable_args(const AccumuloProxy_importTable_args&amp;);
  AccumuloProxy_importTable_args&amp; operator=(const AccumuloProxy_importTable_args&amp;);
   AccumuloProxy_importTable_args() : login(), tableName(), importDir() {
   }
 
  virtual ~AccumuloProxy_importTable_args() throw() {}

  virtual ~AccumuloProxy_importTable_args() throw();
   std::string login;
   std::string tableName;
   std::string importDir;
 
   _AccumuloProxy_importTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_importDir(const std::string&amp; val) {
    importDir = val;
  }
  void __set_importDir(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_importTable_args &amp; rhs) const
   {
@@ -3524,8 +3249,7 @@ class AccumuloProxy_importTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_importTable_pargs() throw() {}

  virtual ~AccumuloProxy_importTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* importDir;
@@ -3536,36 +3260,31 @@ class AccumuloProxy_importTable_pargs {
 
 typedef struct _AccumuloProxy_importTable_result__isset {
   _AccumuloProxy_importTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_importTable_result__isset;
 
 class AccumuloProxy_importTable_result {
  public:
 
  AccumuloProxy_importTable_result(const AccumuloProxy_importTable_result&amp;);
  AccumuloProxy_importTable_result&amp; operator=(const AccumuloProxy_importTable_result&amp;);
   AccumuloProxy_importTable_result() {
   }
 
  virtual ~AccumuloProxy_importTable_result() throw() {}

  virtual ~AccumuloProxy_importTable_result() throw();
   TableExistsException ouch1;
   AccumuloException ouch2;
   AccumuloSecurityException ouch3;
 
   _AccumuloProxy_importTable_result__isset __isset;
 
  void __set_ouch1(const TableExistsException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const TableExistsException&amp; val);
 
  void __set_ouch2(const AccumuloException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloException&amp; val);
 
  void __set_ouch3(const AccumuloSecurityException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_importTable_result &amp; rhs) const
   {
@@ -3590,17 +3309,16 @@ class AccumuloProxy_importTable_result {
 
 typedef struct _AccumuloProxy_importTable_presult__isset {
   _AccumuloProxy_importTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_importTable_presult__isset;
 
 class AccumuloProxy_importTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_importTable_presult() throw() {}

  virtual ~AccumuloProxy_importTable_presult() throw();
   TableExistsException ouch1;
   AccumuloException ouch2;
   AccumuloSecurityException ouch3;
@@ -3613,36 +3331,31 @@ class AccumuloProxy_importTable_presult {
 
 typedef struct _AccumuloProxy_listSplits_args__isset {
   _AccumuloProxy_listSplits_args__isset() : login(false), tableName(false), maxSplits(false) {}
  bool login;
  bool tableName;
  bool maxSplits;
  bool login :1;
  bool tableName :1;
  bool maxSplits :1;
 } _AccumuloProxy_listSplits_args__isset;
 
 class AccumuloProxy_listSplits_args {
  public:
 
  AccumuloProxy_listSplits_args(const AccumuloProxy_listSplits_args&amp;);
  AccumuloProxy_listSplits_args&amp; operator=(const AccumuloProxy_listSplits_args&amp;);
   AccumuloProxy_listSplits_args() : login(), tableName(), maxSplits(0) {
   }
 
  virtual ~AccumuloProxy_listSplits_args() throw() {}

  virtual ~AccumuloProxy_listSplits_args() throw();
   std::string login;
   std::string tableName;
   int32_t maxSplits;
 
   _AccumuloProxy_listSplits_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_maxSplits(const int32_t val) {
    maxSplits = val;
  }
  void __set_maxSplits(const int32_t val);
 
   bool operator == (const AccumuloProxy_listSplits_args &amp; rhs) const
   {
@@ -3670,8 +3383,7 @@ class AccumuloProxy_listSplits_pargs {
  public:
 
 
  virtual ~AccumuloProxy_listSplits_pargs() throw() {}

  virtual ~AccumuloProxy_listSplits_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const int32_t* maxSplits;
@@ -3682,20 +3394,21 @@ class AccumuloProxy_listSplits_pargs {
 
 typedef struct _AccumuloProxy_listSplits_result__isset {
   _AccumuloProxy_listSplits_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listSplits_result__isset;
 
 class AccumuloProxy_listSplits_result {
  public:
 
  AccumuloProxy_listSplits_result(const AccumuloProxy_listSplits_result&amp;);
  AccumuloProxy_listSplits_result&amp; operator=(const AccumuloProxy_listSplits_result&amp;);
   AccumuloProxy_listSplits_result() {
   }
 
  virtual ~AccumuloProxy_listSplits_result() throw() {}

  virtual ~AccumuloProxy_listSplits_result() throw();
   std::vector&lt;std::string&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -3703,21 +3416,13 @@ class AccumuloProxy_listSplits_result {
 
   _AccumuloProxy_listSplits_result__isset __isset;
 
  void __set_success(const std::vector&lt;std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::vector&lt;std::string&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_listSplits_result &amp; rhs) const
   {
@@ -3744,18 +3449,17 @@ class AccumuloProxy_listSplits_result {
 
 typedef struct _AccumuloProxy_listSplits_presult__isset {
   _AccumuloProxy_listSplits_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listSplits_presult__isset;
 
 class AccumuloProxy_listSplits_presult {
  public:
 
 
  virtual ~AccumuloProxy_listSplits_presult() throw() {}

  virtual ~AccumuloProxy_listSplits_presult() throw();
   std::vector&lt;std::string&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -3769,24 +3473,23 @@ class AccumuloProxy_listSplits_presult {
 
 typedef struct _AccumuloProxy_listTables_args__isset {
   _AccumuloProxy_listTables_args__isset() : login(false) {}
  bool login;
  bool login :1;
 } _AccumuloProxy_listTables_args__isset;
 
 class AccumuloProxy_listTables_args {
  public:
 
  AccumuloProxy_listTables_args(const AccumuloProxy_listTables_args&amp;);
  AccumuloProxy_listTables_args&amp; operator=(const AccumuloProxy_listTables_args&amp;);
   AccumuloProxy_listTables_args() : login() {
   }
 
  virtual ~AccumuloProxy_listTables_args() throw() {}

  virtual ~AccumuloProxy_listTables_args() throw();
   std::string login;
 
   _AccumuloProxy_listTables_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_listTables_args &amp; rhs) const
   {
@@ -3810,8 +3513,7 @@ class AccumuloProxy_listTables_pargs {
  public:
 
 
  virtual ~AccumuloProxy_listTables_pargs() throw() {}

  virtual ~AccumuloProxy_listTables_pargs() throw();
   const std::string* login;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -3820,24 +3522,23 @@ class AccumuloProxy_listTables_pargs {
 
 typedef struct _AccumuloProxy_listTables_result__isset {
   _AccumuloProxy_listTables_result__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_listTables_result__isset;
 
 class AccumuloProxy_listTables_result {
  public:
 
  AccumuloProxy_listTables_result(const AccumuloProxy_listTables_result&amp;);
  AccumuloProxy_listTables_result&amp; operator=(const AccumuloProxy_listTables_result&amp;);
   AccumuloProxy_listTables_result() {
   }
 
  virtual ~AccumuloProxy_listTables_result() throw() {}

  virtual ~AccumuloProxy_listTables_result() throw();
   std::set&lt;std::string&gt;  success;
 
   _AccumuloProxy_listTables_result__isset __isset;
 
  void __set_success(const std::set&lt;std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::set&lt;std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_listTables_result &amp; rhs) const
   {
@@ -3858,15 +3559,14 @@ class AccumuloProxy_listTables_result {
 
 typedef struct _AccumuloProxy_listTables_presult__isset {
   _AccumuloProxy_listTables_presult__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_listTables_presult__isset;
 
 class AccumuloProxy_listTables_presult {
  public:
 
 
  virtual ~AccumuloProxy_listTables_presult() throw() {}

  virtual ~AccumuloProxy_listTables_presult() throw();
   std::set&lt;std::string&gt; * success;
 
   _AccumuloProxy_listTables_presult__isset __isset;
@@ -3877,30 +3577,27 @@ class AccumuloProxy_listTables_presult {
 
 typedef struct _AccumuloProxy_listIterators_args__isset {
   _AccumuloProxy_listIterators_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_listIterators_args__isset;
 
 class AccumuloProxy_listIterators_args {
  public:
 
  AccumuloProxy_listIterators_args(const AccumuloProxy_listIterators_args&amp;);
  AccumuloProxy_listIterators_args&amp; operator=(const AccumuloProxy_listIterators_args&amp;);
   AccumuloProxy_listIterators_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_listIterators_args() throw() {}

  virtual ~AccumuloProxy_listIterators_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_listIterators_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_listIterators_args &amp; rhs) const
   {
@@ -3926,8 +3623,7 @@ class AccumuloProxy_listIterators_pargs {
  public:
 
 
  virtual ~AccumuloProxy_listIterators_pargs() throw() {}

  virtual ~AccumuloProxy_listIterators_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -3937,20 +3633,21 @@ class AccumuloProxy_listIterators_pargs {
 
 typedef struct _AccumuloProxy_listIterators_result__isset {
   _AccumuloProxy_listIterators_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listIterators_result__isset;
 
 class AccumuloProxy_listIterators_result {
  public:
 
  AccumuloProxy_listIterators_result(const AccumuloProxy_listIterators_result&amp;);
  AccumuloProxy_listIterators_result&amp; operator=(const AccumuloProxy_listIterators_result&amp;);
   AccumuloProxy_listIterators_result() {
   }
 
  virtual ~AccumuloProxy_listIterators_result() throw() {}

  virtual ~AccumuloProxy_listIterators_result() throw();
   std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -3958,21 +3655,13 @@ class AccumuloProxy_listIterators_result {
 
   _AccumuloProxy_listIterators_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_listIterators_result &amp; rhs) const
   {
@@ -3999,18 +3688,17 @@ class AccumuloProxy_listIterators_result {
 
 typedef struct _AccumuloProxy_listIterators_presult__isset {
   _AccumuloProxy_listIterators_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listIterators_presult__isset;
 
 class AccumuloProxy_listIterators_presult {
  public:
 
 
  virtual ~AccumuloProxy_listIterators_presult() throw() {}

  virtual ~AccumuloProxy_listIterators_presult() throw();
   std::map&lt;std::string, std::set&lt;IteratorScope::type&gt; &gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -4024,30 +3712,27 @@ class AccumuloProxy_listIterators_presult {
 
 typedef struct _AccumuloProxy_listConstraints_args__isset {
   _AccumuloProxy_listConstraints_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_listConstraints_args__isset;
 
 class AccumuloProxy_listConstraints_args {
  public:
 
  AccumuloProxy_listConstraints_args(const AccumuloProxy_listConstraints_args&amp;);
  AccumuloProxy_listConstraints_args&amp; operator=(const AccumuloProxy_listConstraints_args&amp;);
   AccumuloProxy_listConstraints_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_listConstraints_args() throw() {}

  virtual ~AccumuloProxy_listConstraints_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_listConstraints_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_listConstraints_args &amp; rhs) const
   {
@@ -4073,8 +3758,7 @@ class AccumuloProxy_listConstraints_pargs {
  public:
 
 
  virtual ~AccumuloProxy_listConstraints_pargs() throw() {}

  virtual ~AccumuloProxy_listConstraints_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -4084,20 +3768,21 @@ class AccumuloProxy_listConstraints_pargs {
 
 typedef struct _AccumuloProxy_listConstraints_result__isset {
   _AccumuloProxy_listConstraints_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listConstraints_result__isset;
 
 class AccumuloProxy_listConstraints_result {
  public:
 
  AccumuloProxy_listConstraints_result(const AccumuloProxy_listConstraints_result&amp;);
  AccumuloProxy_listConstraints_result&amp; operator=(const AccumuloProxy_listConstraints_result&amp;);
   AccumuloProxy_listConstraints_result() {
   }
 
  virtual ~AccumuloProxy_listConstraints_result() throw() {}

  virtual ~AccumuloProxy_listConstraints_result() throw();
   std::map&lt;std::string, int32_t&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -4105,21 +3790,13 @@ class AccumuloProxy_listConstraints_result {
 
   _AccumuloProxy_listConstraints_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, int32_t&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, int32_t&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_listConstraints_result &amp; rhs) const
   {
@@ -4146,18 +3823,17 @@ class AccumuloProxy_listConstraints_result {
 
 typedef struct _AccumuloProxy_listConstraints_presult__isset {
   _AccumuloProxy_listConstraints_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listConstraints_presult__isset;
 
 class AccumuloProxy_listConstraints_presult {
  public:
 
 
  virtual ~AccumuloProxy_listConstraints_presult() throw() {}

  virtual ~AccumuloProxy_listConstraints_presult() throw();
   std::map&lt;std::string, int32_t&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -4171,20 +3847,21 @@ class AccumuloProxy_listConstraints_presult {
 
 typedef struct _AccumuloProxy_mergeTablets_args__isset {
   _AccumuloProxy_mergeTablets_args__isset() : login(false), tableName(false), startRow(false), endRow(false) {}
  bool login;
  bool tableName;
  bool startRow;
  bool endRow;
  bool login :1;
  bool tableName :1;
  bool startRow :1;
  bool endRow :1;
 } _AccumuloProxy_mergeTablets_args__isset;
 
 class AccumuloProxy_mergeTablets_args {
  public:
 
  AccumuloProxy_mergeTablets_args(const AccumuloProxy_mergeTablets_args&amp;);
  AccumuloProxy_mergeTablets_args&amp; operator=(const AccumuloProxy_mergeTablets_args&amp;);
   AccumuloProxy_mergeTablets_args() : login(), tableName(), startRow(), endRow() {
   }
 
  virtual ~AccumuloProxy_mergeTablets_args() throw() {}

  virtual ~AccumuloProxy_mergeTablets_args() throw();
   std::string login;
   std::string tableName;
   std::string startRow;
@@ -4192,21 +3869,13 @@ class AccumuloProxy_mergeTablets_args {
 
   _AccumuloProxy_mergeTablets_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_startRow(const std::string&amp; val) {
    startRow = val;
  }
  void __set_startRow(const std::string&amp; val);
 
  void __set_endRow(const std::string&amp; val) {
    endRow = val;
  }
  void __set_endRow(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_mergeTablets_args &amp; rhs) const
   {
@@ -4236,8 +3905,7 @@ class AccumuloProxy_mergeTablets_pargs {
  public:
 
 
  virtual ~AccumuloProxy_mergeTablets_pargs() throw() {}

  virtual ~AccumuloProxy_mergeTablets_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* startRow;
@@ -4249,36 +3917,31 @@ class AccumuloProxy_mergeTablets_pargs {
 
 typedef struct _AccumuloProxy_mergeTablets_result__isset {
   _AccumuloProxy_mergeTablets_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_mergeTablets_result__isset;
 
 class AccumuloProxy_mergeTablets_result {
  public:
 
  AccumuloProxy_mergeTablets_result(const AccumuloProxy_mergeTablets_result&amp;);
  AccumuloProxy_mergeTablets_result&amp; operator=(const AccumuloProxy_mergeTablets_result&amp;);
   AccumuloProxy_mergeTablets_result() {
   }
 
  virtual ~AccumuloProxy_mergeTablets_result() throw() {}

  virtual ~AccumuloProxy_mergeTablets_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_mergeTablets_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_mergeTablets_result &amp; rhs) const
   {
@@ -4303,17 +3966,16 @@ class AccumuloProxy_mergeTablets_result {
 
 typedef struct _AccumuloProxy_mergeTablets_presult__isset {
   _AccumuloProxy_mergeTablets_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_mergeTablets_presult__isset;
 
 class AccumuloProxy_mergeTablets_presult {
  public:
 
 
  virtual ~AccumuloProxy_mergeTablets_presult() throw() {}

  virtual ~AccumuloProxy_mergeTablets_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -4326,36 +3988,31 @@ class AccumuloProxy_mergeTablets_presult {
 
 typedef struct _AccumuloProxy_offlineTable_args__isset {
   _AccumuloProxy_offlineTable_args__isset() : login(false), tableName(false), wait(true) {}
  bool login;
  bool tableName;
  bool wait;
  bool login :1;
  bool tableName :1;
  bool wait :1;
 } _AccumuloProxy_offlineTable_args__isset;
 
 class AccumuloProxy_offlineTable_args {
  public:
 
  AccumuloProxy_offlineTable_args(const AccumuloProxy_offlineTable_args&amp;);
  AccumuloProxy_offlineTable_args&amp; operator=(const AccumuloProxy_offlineTable_args&amp;);
   AccumuloProxy_offlineTable_args() : login(), tableName(), wait(false) {
   }
 
  virtual ~AccumuloProxy_offlineTable_args() throw() {}

  virtual ~AccumuloProxy_offlineTable_args() throw();
   std::string login;
   std::string tableName;
   bool wait;
 
   _AccumuloProxy_offlineTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_wait(const bool val) {
    wait = val;
  }
  void __set_wait(const bool val);
 
   bool operator == (const AccumuloProxy_offlineTable_args &amp; rhs) const
   {
@@ -4383,8 +4040,7 @@ class AccumuloProxy_offlineTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_offlineTable_pargs() throw() {}

  virtual ~AccumuloProxy_offlineTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const bool* wait;
@@ -4395,36 +4051,31 @@ class AccumuloProxy_offlineTable_pargs {
 
 typedef struct _AccumuloProxy_offlineTable_result__isset {
   _AccumuloProxy_offlineTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_offlineTable_result__isset;
 
 class AccumuloProxy_offlineTable_result {
  public:
 
  AccumuloProxy_offlineTable_result(const AccumuloProxy_offlineTable_result&amp;);
  AccumuloProxy_offlineTable_result&amp; operator=(const AccumuloProxy_offlineTable_result&amp;);
   AccumuloProxy_offlineTable_result() {
   }
 
  virtual ~AccumuloProxy_offlineTable_result() throw() {}

  virtual ~AccumuloProxy_offlineTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_offlineTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_offlineTable_result &amp; rhs) const
   {
@@ -4449,17 +4100,16 @@ class AccumuloProxy_offlineTable_result {
 
 typedef struct _AccumuloProxy_offlineTable_presult__isset {
   _AccumuloProxy_offlineTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_offlineTable_presult__isset;
 
 class AccumuloProxy_offlineTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_offlineTable_presult() throw() {}

  virtual ~AccumuloProxy_offlineTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -4472,36 +4122,31 @@ class AccumuloProxy_offlineTable_presult {
 
 typedef struct _AccumuloProxy_onlineTable_args__isset {
   _AccumuloProxy_onlineTable_args__isset() : login(false), tableName(false), wait(true) {}
  bool login;
  bool tableName;
  bool wait;
  bool login :1;
  bool tableName :1;
  bool wait :1;
 } _AccumuloProxy_onlineTable_args__isset;
 
 class AccumuloProxy_onlineTable_args {
  public:
 
  AccumuloProxy_onlineTable_args(const AccumuloProxy_onlineTable_args&amp;);
  AccumuloProxy_onlineTable_args&amp; operator=(const AccumuloProxy_onlineTable_args&amp;);
   AccumuloProxy_onlineTable_args() : login(), tableName(), wait(false) {
   }
 
  virtual ~AccumuloProxy_onlineTable_args() throw() {}

  virtual ~AccumuloProxy_onlineTable_args() throw();
   std::string login;
   std::string tableName;
   bool wait;
 
   _AccumuloProxy_onlineTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_wait(const bool val) {
    wait = val;
  }
  void __set_wait(const bool val);
 
   bool operator == (const AccumuloProxy_onlineTable_args &amp; rhs) const
   {
@@ -4529,8 +4174,7 @@ class AccumuloProxy_onlineTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_onlineTable_pargs() throw() {}

  virtual ~AccumuloProxy_onlineTable_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const bool* wait;
@@ -4541,36 +4185,31 @@ class AccumuloProxy_onlineTable_pargs {
 
 typedef struct _AccumuloProxy_onlineTable_result__isset {
   _AccumuloProxy_onlineTable_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_onlineTable_result__isset;
 
 class AccumuloProxy_onlineTable_result {
  public:
 
  AccumuloProxy_onlineTable_result(const AccumuloProxy_onlineTable_result&amp;);
  AccumuloProxy_onlineTable_result&amp; operator=(const AccumuloProxy_onlineTable_result&amp;);
   AccumuloProxy_onlineTable_result() {
   }
 
  virtual ~AccumuloProxy_onlineTable_result() throw() {}

  virtual ~AccumuloProxy_onlineTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_onlineTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_onlineTable_result &amp; rhs) const
   {
@@ -4595,17 +4234,16 @@ class AccumuloProxy_onlineTable_result {
 
 typedef struct _AccumuloProxy_onlineTable_presult__isset {
   _AccumuloProxy_onlineTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_onlineTable_presult__isset;
 
 class AccumuloProxy_onlineTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_onlineTable_presult() throw() {}

  virtual ~AccumuloProxy_onlineTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -4618,36 +4256,31 @@ class AccumuloProxy_onlineTable_presult {
 
 typedef struct _AccumuloProxy_removeConstraint_args__isset {
   _AccumuloProxy_removeConstraint_args__isset() : login(false), tableName(false), constraint(false) {}
  bool login;
  bool tableName;
  bool constraint;
  bool login :1;
  bool tableName :1;
  bool constraint :1;
 } _AccumuloProxy_removeConstraint_args__isset;
 
 class AccumuloProxy_removeConstraint_args {
  public:
 
  AccumuloProxy_removeConstraint_args(const AccumuloProxy_removeConstraint_args&amp;);
  AccumuloProxy_removeConstraint_args&amp; operator=(const AccumuloProxy_removeConstraint_args&amp;);
   AccumuloProxy_removeConstraint_args() : login(), tableName(), constraint(0) {
   }
 
  virtual ~AccumuloProxy_removeConstraint_args() throw() {}

  virtual ~AccumuloProxy_removeConstraint_args() throw();
   std::string login;
   std::string tableName;
   int32_t constraint;
 
   _AccumuloProxy_removeConstraint_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_constraint(const int32_t val) {
    constraint = val;
  }
  void __set_constraint(const int32_t val);
 
   bool operator == (const AccumuloProxy_removeConstraint_args &amp; rhs) const
   {
@@ -4675,8 +4308,7 @@ class AccumuloProxy_removeConstraint_pargs {
  public:
 
 
  virtual ~AccumuloProxy_removeConstraint_pargs() throw() {}

  virtual ~AccumuloProxy_removeConstraint_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const int32_t* constraint;
@@ -4687,36 +4319,31 @@ class AccumuloProxy_removeConstraint_pargs {
 
 typedef struct _AccumuloProxy_removeConstraint_result__isset {
   _AccumuloProxy_removeConstraint_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_removeConstraint_result__isset;
 
 class AccumuloProxy_removeConstraint_result {
  public:
 
  AccumuloProxy_removeConstraint_result(const AccumuloProxy_removeConstraint_result&amp;);
  AccumuloProxy_removeConstraint_result&amp; operator=(const AccumuloProxy_removeConstraint_result&amp;);
   AccumuloProxy_removeConstraint_result() {
   }
 
  virtual ~AccumuloProxy_removeConstraint_result() throw() {}

  virtual ~AccumuloProxy_removeConstraint_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_removeConstraint_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_removeConstraint_result &amp; rhs) const
   {
@@ -4741,17 +4368,16 @@ class AccumuloProxy_removeConstraint_result {
 
 typedef struct _AccumuloProxy_removeConstraint_presult__isset {
   _AccumuloProxy_removeConstraint_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_removeConstraint_presult__isset;
 
 class AccumuloProxy_removeConstraint_presult {
  public:
 
 
  virtual ~AccumuloProxy_removeConstraint_presult() throw() {}

  virtual ~AccumuloProxy_removeConstraint_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -4764,20 +4390,21 @@ class AccumuloProxy_removeConstraint_presult {
 
 typedef struct _AccumuloProxy_removeIterator_args__isset {
   _AccumuloProxy_removeIterator_args__isset() : login(false), tableName(false), iterName(false), scopes(false) {}
  bool login;
  bool tableName;
  bool iterName;
  bool scopes;
  bool login :1;
  bool tableName :1;
  bool iterName :1;
  bool scopes :1;
 } _AccumuloProxy_removeIterator_args__isset;
 
 class AccumuloProxy_removeIterator_args {
  public:
 
  AccumuloProxy_removeIterator_args(const AccumuloProxy_removeIterator_args&amp;);
  AccumuloProxy_removeIterator_args&amp; operator=(const AccumuloProxy_removeIterator_args&amp;);
   AccumuloProxy_removeIterator_args() : login(), tableName(), iterName() {
   }
 
  virtual ~AccumuloProxy_removeIterator_args() throw() {}

  virtual ~AccumuloProxy_removeIterator_args() throw();
   std::string login;
   std::string tableName;
   std::string iterName;
@@ -4785,21 +4412,13 @@ class AccumuloProxy_removeIterator_args {
 
   _AccumuloProxy_removeIterator_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_iterName(const std::string&amp; val) {
    iterName = val;
  }
  void __set_iterName(const std::string&amp; val);
 
  void __set_scopes(const std::set&lt;IteratorScope::type&gt; &amp; val) {
    scopes = val;
  }
  void __set_scopes(const std::set&lt;IteratorScope::type&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_removeIterator_args &amp; rhs) const
   {
@@ -4829,8 +4448,7 @@ class AccumuloProxy_removeIterator_pargs {
  public:
 
 
  virtual ~AccumuloProxy_removeIterator_pargs() throw() {}

  virtual ~AccumuloProxy_removeIterator_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* iterName;
@@ -4842,36 +4460,31 @@ class AccumuloProxy_removeIterator_pargs {
 
 typedef struct _AccumuloProxy_removeIterator_result__isset {
   _AccumuloProxy_removeIterator_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_removeIterator_result__isset;
 
 class AccumuloProxy_removeIterator_result {
  public:
 
  AccumuloProxy_removeIterator_result(const AccumuloProxy_removeIterator_result&amp;);
  AccumuloProxy_removeIterator_result&amp; operator=(const AccumuloProxy_removeIterator_result&amp;);
   AccumuloProxy_removeIterator_result() {
   }
 
  virtual ~AccumuloProxy_removeIterator_result() throw() {}

  virtual ~AccumuloProxy_removeIterator_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_removeIterator_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_removeIterator_result &amp; rhs) const
   {
@@ -4896,17 +4509,16 @@ class AccumuloProxy_removeIterator_result {
 
 typedef struct _AccumuloProxy_removeIterator_presult__isset {
   _AccumuloProxy_removeIterator_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_removeIterator_presult__isset;
 
 class AccumuloProxy_removeIterator_presult {
  public:
 
 
  virtual ~AccumuloProxy_removeIterator_presult() throw() {}

  virtual ~AccumuloProxy_removeIterator_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -4919,36 +4531,31 @@ class AccumuloProxy_removeIterator_presult {
 
 typedef struct _AccumuloProxy_removeTableProperty_args__isset {
   _AccumuloProxy_removeTableProperty_args__isset() : login(false), tableName(false), property(false) {}
  bool login;
  bool tableName;
  bool property;
  bool login :1;
  bool tableName :1;
  bool property :1;
 } _AccumuloProxy_removeTableProperty_args__isset;
 
 class AccumuloProxy_removeTableProperty_args {
  public:
 
  AccumuloProxy_removeTableProperty_args(const AccumuloProxy_removeTableProperty_args&amp;);
  AccumuloProxy_removeTableProperty_args&amp; operator=(const AccumuloProxy_removeTableProperty_args&amp;);
   AccumuloProxy_removeTableProperty_args() : login(), tableName(), property() {
   }
 
  virtual ~AccumuloProxy_removeTableProperty_args() throw() {}

  virtual ~AccumuloProxy_removeTableProperty_args() throw();
   std::string login;
   std::string tableName;
   std::string property;
 
   _AccumuloProxy_removeTableProperty_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_property(const std::string&amp; val) {
    property = val;
  }
  void __set_property(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_removeTableProperty_args &amp; rhs) const
   {
@@ -4976,8 +4583,7 @@ class AccumuloProxy_removeTableProperty_pargs {
  public:
 
 
  virtual ~AccumuloProxy_removeTableProperty_pargs() throw() {}

  virtual ~AccumuloProxy_removeTableProperty_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* property;
@@ -4988,36 +4594,31 @@ class AccumuloProxy_removeTableProperty_pargs {
 
 typedef struct _AccumuloProxy_removeTableProperty_result__isset {
   _AccumuloProxy_removeTableProperty_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_removeTableProperty_result__isset;
 
 class AccumuloProxy_removeTableProperty_result {
  public:
 
  AccumuloProxy_removeTableProperty_result(const AccumuloProxy_removeTableProperty_result&amp;);
  AccumuloProxy_removeTableProperty_result&amp; operator=(const AccumuloProxy_removeTableProperty_result&amp;);
   AccumuloProxy_removeTableProperty_result() {
   }
 
  virtual ~AccumuloProxy_removeTableProperty_result() throw() {}

  virtual ~AccumuloProxy_removeTableProperty_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_removeTableProperty_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_removeTableProperty_result &amp; rhs) const
   {
@@ -5042,17 +4643,16 @@ class AccumuloProxy_removeTableProperty_result {
 
 typedef struct _AccumuloProxy_removeTableProperty_presult__isset {
   _AccumuloProxy_removeTableProperty_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_removeTableProperty_presult__isset;
 
 class AccumuloProxy_removeTableProperty_presult {
  public:
 
 
  virtual ~AccumuloProxy_removeTableProperty_presult() throw() {}

  virtual ~AccumuloProxy_removeTableProperty_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -5065,36 +4665,31 @@ class AccumuloProxy_removeTableProperty_presult {
 
 typedef struct _AccumuloProxy_renameTable_args__isset {
   _AccumuloProxy_renameTable_args__isset() : login(false), oldTableName(false), newTableName(false) {}
  bool login;
  bool oldTableName;
  bool newTableName;
  bool login :1;
  bool oldTableName :1;
  bool newTableName :1;
 } _AccumuloProxy_renameTable_args__isset;
 
 class AccumuloProxy_renameTable_args {
  public:
 
  AccumuloProxy_renameTable_args(const AccumuloProxy_renameTable_args&amp;);
  AccumuloProxy_renameTable_args&amp; operator=(const AccumuloProxy_renameTable_args&amp;);
   AccumuloProxy_renameTable_args() : login(), oldTableName(), newTableName() {
   }
 
  virtual ~AccumuloProxy_renameTable_args() throw() {}

  virtual ~AccumuloProxy_renameTable_args() throw();
   std::string login;
   std::string oldTableName;
   std::string newTableName;
 
   _AccumuloProxy_renameTable_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_oldTableName(const std::string&amp; val) {
    oldTableName = val;
  }
  void __set_oldTableName(const std::string&amp; val);
 
  void __set_newTableName(const std::string&amp; val) {
    newTableName = val;
  }
  void __set_newTableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_renameTable_args &amp; rhs) const
   {
@@ -5122,8 +4717,7 @@ class AccumuloProxy_renameTable_pargs {
  public:
 
 
  virtual ~AccumuloProxy_renameTable_pargs() throw() {}

  virtual ~AccumuloProxy_renameTable_pargs() throw();
   const std::string* login;
   const std::string* oldTableName;
   const std::string* newTableName;
@@ -5134,20 +4728,21 @@ class AccumuloProxy_renameTable_pargs {
 
 typedef struct _AccumuloProxy_renameTable_result__isset {
   _AccumuloProxy_renameTable_result__isset() : ouch1(false), ouch2(false), ouch3(false), ouch4(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch4;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_renameTable_result__isset;
 
 class AccumuloProxy_renameTable_result {
  public:
 
  AccumuloProxy_renameTable_result(const AccumuloProxy_renameTable_result&amp;);
  AccumuloProxy_renameTable_result&amp; operator=(const AccumuloProxy_renameTable_result&amp;);
   AccumuloProxy_renameTable_result() {
   }
 
  virtual ~AccumuloProxy_renameTable_result() throw() {}

  virtual ~AccumuloProxy_renameTable_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -5155,21 +4750,13 @@ class AccumuloProxy_renameTable_result {
 
   _AccumuloProxy_renameTable_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
  void __set_ouch4(const TableExistsException&amp; val) {
    ouch4 = val;
  }
  void __set_ouch4(const TableExistsException&amp; val);
 
   bool operator == (const AccumuloProxy_renameTable_result &amp; rhs) const
   {
@@ -5196,18 +4783,17 @@ class AccumuloProxy_renameTable_result {
 
 typedef struct _AccumuloProxy_renameTable_presult__isset {
   _AccumuloProxy_renameTable_presult__isset() : ouch1(false), ouch2(false), ouch3(false), ouch4(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch4;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_renameTable_presult__isset;
 
 class AccumuloProxy_renameTable_presult {
  public:
 
 
  virtual ~AccumuloProxy_renameTable_presult() throw() {}

  virtual ~AccumuloProxy_renameTable_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -5221,36 +4807,31 @@ class AccumuloProxy_renameTable_presult {
 
 typedef struct _AccumuloProxy_setLocalityGroups_args__isset {
   _AccumuloProxy_setLocalityGroups_args__isset() : login(false), tableName(false), groups(false) {}
  bool login;
  bool tableName;
  bool groups;
  bool login :1;
  bool tableName :1;
  bool groups :1;
 } _AccumuloProxy_setLocalityGroups_args__isset;
 
 class AccumuloProxy_setLocalityGroups_args {
  public:
 
  AccumuloProxy_setLocalityGroups_args(const AccumuloProxy_setLocalityGroups_args&amp;);
  AccumuloProxy_setLocalityGroups_args&amp; operator=(const AccumuloProxy_setLocalityGroups_args&amp;);
   AccumuloProxy_setLocalityGroups_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_setLocalityGroups_args() throw() {}

  virtual ~AccumuloProxy_setLocalityGroups_args() throw();
   std::string login;
   std::string tableName;
   std::map&lt;std::string, std::set&lt;std::string&gt; &gt;  groups;
 
   _AccumuloProxy_setLocalityGroups_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_groups(const std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; val) {
    groups = val;
  }
  void __set_groups(const std::map&lt;std::string, std::set&lt;std::string&gt; &gt; &amp; val);
 
   bool operator == (const AccumuloProxy_setLocalityGroups_args &amp; rhs) const
   {
@@ -5278,8 +4859,7 @@ class AccumuloProxy_setLocalityGroups_pargs {
  public:
 
 
  virtual ~AccumuloProxy_setLocalityGroups_pargs() throw() {}

  virtual ~AccumuloProxy_setLocalityGroups_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::map&lt;std::string, std::set&lt;std::string&gt; &gt; * groups;
@@ -5290,36 +4870,31 @@ class AccumuloProxy_setLocalityGroups_pargs {
 
 typedef struct _AccumuloProxy_setLocalityGroups_result__isset {
   _AccumuloProxy_setLocalityGroups_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_setLocalityGroups_result__isset;
 
 class AccumuloProxy_setLocalityGroups_result {
  public:
 
  AccumuloProxy_setLocalityGroups_result(const AccumuloProxy_setLocalityGroups_result&amp;);
  AccumuloProxy_setLocalityGroups_result&amp; operator=(const AccumuloProxy_setLocalityGroups_result&amp;);
   AccumuloProxy_setLocalityGroups_result() {
   }
 
  virtual ~AccumuloProxy_setLocalityGroups_result() throw() {}

  virtual ~AccumuloProxy_setLocalityGroups_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_setLocalityGroups_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_setLocalityGroups_result &amp; rhs) const
   {
@@ -5344,17 +4919,16 @@ class AccumuloProxy_setLocalityGroups_result {
 
 typedef struct _AccumuloProxy_setLocalityGroups_presult__isset {
   _AccumuloProxy_setLocalityGroups_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_setLocalityGroups_presult__isset;
 
 class AccumuloProxy_setLocalityGroups_presult {
  public:
 
 
  virtual ~AccumuloProxy_setLocalityGroups_presult() throw() {}

  virtual ~AccumuloProxy_setLocalityGroups_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -5367,20 +4941,21 @@ class AccumuloProxy_setLocalityGroups_presult {
 
 typedef struct _AccumuloProxy_setTableProperty_args__isset {
   _AccumuloProxy_setTableProperty_args__isset() : login(false), tableName(false), property(false), value(false) {}
  bool login;
  bool tableName;
  bool property;
  bool value;
  bool login :1;
  bool tableName :1;
  bool property :1;
  bool value :1;
 } _AccumuloProxy_setTableProperty_args__isset;
 
 class AccumuloProxy_setTableProperty_args {
  public:
 
  AccumuloProxy_setTableProperty_args(const AccumuloProxy_setTableProperty_args&amp;);
  AccumuloProxy_setTableProperty_args&amp; operator=(const AccumuloProxy_setTableProperty_args&amp;);
   AccumuloProxy_setTableProperty_args() : login(), tableName(), property(), value() {
   }
 
  virtual ~AccumuloProxy_setTableProperty_args() throw() {}

  virtual ~AccumuloProxy_setTableProperty_args() throw();
   std::string login;
   std::string tableName;
   std::string property;
@@ -5388,21 +4963,13 @@ class AccumuloProxy_setTableProperty_args {
 
   _AccumuloProxy_setTableProperty_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_property(const std::string&amp; val) {
    property = val;
  }
  void __set_property(const std::string&amp; val);
 
  void __set_value(const std::string&amp; val) {
    value = val;
  }
  void __set_value(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_setTableProperty_args &amp; rhs) const
   {
@@ -5432,8 +4999,7 @@ class AccumuloProxy_setTableProperty_pargs {
  public:
 
 
  virtual ~AccumuloProxy_setTableProperty_pargs() throw() {}

  virtual ~AccumuloProxy_setTableProperty_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* property;
@@ -5445,36 +5011,31 @@ class AccumuloProxy_setTableProperty_pargs {
 
 typedef struct _AccumuloProxy_setTableProperty_result__isset {
   _AccumuloProxy_setTableProperty_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_setTableProperty_result__isset;
 
 class AccumuloProxy_setTableProperty_result {
  public:
 
  AccumuloProxy_setTableProperty_result(const AccumuloProxy_setTableProperty_result&amp;);
  AccumuloProxy_setTableProperty_result&amp; operator=(const AccumuloProxy_setTableProperty_result&amp;);
   AccumuloProxy_setTableProperty_result() {
   }
 
  virtual ~AccumuloProxy_setTableProperty_result() throw() {}

  virtual ~AccumuloProxy_setTableProperty_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_setTableProperty_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_setTableProperty_result &amp; rhs) const
   {
@@ -5499,17 +5060,16 @@ class AccumuloProxy_setTableProperty_result {
 
 typedef struct _AccumuloProxy_setTableProperty_presult__isset {
   _AccumuloProxy_setTableProperty_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_setTableProperty_presult__isset;
 
 class AccumuloProxy_setTableProperty_presult {
  public:
 
 
  virtual ~AccumuloProxy_setTableProperty_presult() throw() {}

  virtual ~AccumuloProxy_setTableProperty_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -5522,20 +5082,21 @@ class AccumuloProxy_setTableProperty_presult {
 
 typedef struct _AccumuloProxy_splitRangeByTablets_args__isset {
   _AccumuloProxy_splitRangeByTablets_args__isset() : login(false), tableName(false), range(false), maxSplits(false) {}
  bool login;
  bool tableName;
  bool range;
  bool maxSplits;
  bool login :1;
  bool tableName :1;
  bool range :1;
  bool maxSplits :1;
 } _AccumuloProxy_splitRangeByTablets_args__isset;
 
 class AccumuloProxy_splitRangeByTablets_args {
  public:
 
  AccumuloProxy_splitRangeByTablets_args(const AccumuloProxy_splitRangeByTablets_args&amp;);
  AccumuloProxy_splitRangeByTablets_args&amp; operator=(const AccumuloProxy_splitRangeByTablets_args&amp;);
   AccumuloProxy_splitRangeByTablets_args() : login(), tableName(), maxSplits(0) {
   }
 
  virtual ~AccumuloProxy_splitRangeByTablets_args() throw() {}

  virtual ~AccumuloProxy_splitRangeByTablets_args() throw();
   std::string login;
   std::string tableName;
   Range range;
@@ -5543,21 +5104,13 @@ class AccumuloProxy_splitRangeByTablets_args {
 
   _AccumuloProxy_splitRangeByTablets_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_range(const Range&amp; val) {
    range = val;
  }
  void __set_range(const Range&amp; val);
 
  void __set_maxSplits(const int32_t val) {
    maxSplits = val;
  }
  void __set_maxSplits(const int32_t val);
 
   bool operator == (const AccumuloProxy_splitRangeByTablets_args &amp; rhs) const
   {
@@ -5587,8 +5140,7 @@ class AccumuloProxy_splitRangeByTablets_pargs {
  public:
 
 
  virtual ~AccumuloProxy_splitRangeByTablets_pargs() throw() {}

  virtual ~AccumuloProxy_splitRangeByTablets_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const Range* range;
@@ -5600,20 +5152,21 @@ class AccumuloProxy_splitRangeByTablets_pargs {
 
 typedef struct _AccumuloProxy_splitRangeByTablets_result__isset {
   _AccumuloProxy_splitRangeByTablets_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_splitRangeByTablets_result__isset;
 
 class AccumuloProxy_splitRangeByTablets_result {
  public:
 
  AccumuloProxy_splitRangeByTablets_result(const AccumuloProxy_splitRangeByTablets_result&amp;);
  AccumuloProxy_splitRangeByTablets_result&amp; operator=(const AccumuloProxy_splitRangeByTablets_result&amp;);
   AccumuloProxy_splitRangeByTablets_result() {
   }
 
  virtual ~AccumuloProxy_splitRangeByTablets_result() throw() {}

  virtual ~AccumuloProxy_splitRangeByTablets_result() throw();
   std::set&lt;Range&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -5621,21 +5174,13 @@ class AccumuloProxy_splitRangeByTablets_result {
 
   _AccumuloProxy_splitRangeByTablets_result__isset __isset;
 
  void __set_success(const std::set&lt;Range&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::set&lt;Range&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_splitRangeByTablets_result &amp; rhs) const
   {
@@ -5662,18 +5207,17 @@ class AccumuloProxy_splitRangeByTablets_result {
 
 typedef struct _AccumuloProxy_splitRangeByTablets_presult__isset {
   _AccumuloProxy_splitRangeByTablets_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_splitRangeByTablets_presult__isset;
 
 class AccumuloProxy_splitRangeByTablets_presult {
  public:
 
 
  virtual ~AccumuloProxy_splitRangeByTablets_presult() throw() {}

  virtual ~AccumuloProxy_splitRangeByTablets_presult() throw();
   std::set&lt;Range&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -5687,30 +5231,27 @@ class AccumuloProxy_splitRangeByTablets_presult {
 
 typedef struct _AccumuloProxy_tableExists_args__isset {
   _AccumuloProxy_tableExists_args__isset() : login(false), tableName(false) {}
  bool login;
  bool tableName;
  bool login :1;
  bool tableName :1;
 } _AccumuloProxy_tableExists_args__isset;
 
 class AccumuloProxy_tableExists_args {
  public:
 
  AccumuloProxy_tableExists_args(const AccumuloProxy_tableExists_args&amp;);
  AccumuloProxy_tableExists_args&amp; operator=(const AccumuloProxy_tableExists_args&amp;);
   AccumuloProxy_tableExists_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_tableExists_args() throw() {}

  virtual ~AccumuloProxy_tableExists_args() throw();
   std::string login;
   std::string tableName;
 
   _AccumuloProxy_tableExists_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_tableExists_args &amp; rhs) const
   {
@@ -5736,8 +5277,7 @@ class AccumuloProxy_tableExists_pargs {
  public:
 
 
  virtual ~AccumuloProxy_tableExists_pargs() throw() {}

  virtual ~AccumuloProxy_tableExists_pargs() throw();
   const std::string* login;
   const std::string* tableName;
 
@@ -5747,24 +5287,23 @@ class AccumuloProxy_tableExists_pargs {
 
 typedef struct _AccumuloProxy_tableExists_result__isset {
   _AccumuloProxy_tableExists_result__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_tableExists_result__isset;
 
 class AccumuloProxy_tableExists_result {
  public:
 
  AccumuloProxy_tableExists_result(const AccumuloProxy_tableExists_result&amp;);
  AccumuloProxy_tableExists_result&amp; operator=(const AccumuloProxy_tableExists_result&amp;);
   AccumuloProxy_tableExists_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_tableExists_result() throw() {}

  virtual ~AccumuloProxy_tableExists_result() throw();
   bool success;
 
   _AccumuloProxy_tableExists_result__isset __isset;
 
  void __set_success(const bool val) {
    success = val;
  }
  void __set_success(const bool val);
 
   bool operator == (const AccumuloProxy_tableExists_result &amp; rhs) const
   {
@@ -5785,15 +5324,14 @@ class AccumuloProxy_tableExists_result {
 
 typedef struct _AccumuloProxy_tableExists_presult__isset {
   _AccumuloProxy_tableExists_presult__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_tableExists_presult__isset;
 
 class AccumuloProxy_tableExists_presult {
  public:
 
 
  virtual ~AccumuloProxy_tableExists_presult() throw() {}

  virtual ~AccumuloProxy_tableExists_presult() throw();
   bool* success;
 
   _AccumuloProxy_tableExists_presult__isset __isset;
@@ -5804,24 +5342,23 @@ class AccumuloProxy_tableExists_presult {
 
 typedef struct _AccumuloProxy_tableIdMap_args__isset {
   _AccumuloProxy_tableIdMap_args__isset() : login(false) {}
  bool login;
  bool login :1;
 } _AccumuloProxy_tableIdMap_args__isset;
 
 class AccumuloProxy_tableIdMap_args {
  public:
 
  AccumuloProxy_tableIdMap_args(const AccumuloProxy_tableIdMap_args&amp;);
  AccumuloProxy_tableIdMap_args&amp; operator=(const AccumuloProxy_tableIdMap_args&amp;);
   AccumuloProxy_tableIdMap_args() : login() {
   }
 
  virtual ~AccumuloProxy_tableIdMap_args() throw() {}

  virtual ~AccumuloProxy_tableIdMap_args() throw();
   std::string login;
 
   _AccumuloProxy_tableIdMap_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_tableIdMap_args &amp; rhs) const
   {
@@ -5845,8 +5382,7 @@ class AccumuloProxy_tableIdMap_pargs {
  public:
 
 
  virtual ~AccumuloProxy_tableIdMap_pargs() throw() {}

  virtual ~AccumuloProxy_tableIdMap_pargs() throw();
   const std::string* login;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -5855,24 +5391,23 @@ class AccumuloProxy_tableIdMap_pargs {
 
 typedef struct _AccumuloProxy_tableIdMap_result__isset {
   _AccumuloProxy_tableIdMap_result__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_tableIdMap_result__isset;
 
 class AccumuloProxy_tableIdMap_result {
  public:
 
  AccumuloProxy_tableIdMap_result(const AccumuloProxy_tableIdMap_result&amp;);
  AccumuloProxy_tableIdMap_result&amp; operator=(const AccumuloProxy_tableIdMap_result&amp;);
   AccumuloProxy_tableIdMap_result() {
   }
 
  virtual ~AccumuloProxy_tableIdMap_result() throw() {}

  virtual ~AccumuloProxy_tableIdMap_result() throw();
   std::map&lt;std::string, std::string&gt;  success;
 
   _AccumuloProxy_tableIdMap_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_tableIdMap_result &amp; rhs) const
   {
@@ -5893,15 +5428,14 @@ class AccumuloProxy_tableIdMap_result {
 
 typedef struct _AccumuloProxy_tableIdMap_presult__isset {
   _AccumuloProxy_tableIdMap_presult__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_tableIdMap_presult__isset;
 
 class AccumuloProxy_tableIdMap_presult {
  public:
 
 
  virtual ~AccumuloProxy_tableIdMap_presult() throw() {}

  virtual ~AccumuloProxy_tableIdMap_presult() throw();
   std::map&lt;std::string, std::string&gt; * success;
 
   _AccumuloProxy_tableIdMap_presult__isset __isset;
@@ -5912,20 +5446,21 @@ class AccumuloProxy_tableIdMap_presult {
 
 typedef struct _AccumuloProxy_testTableClassLoad_args__isset {
   _AccumuloProxy_testTableClassLoad_args__isset() : login(false), tableName(false), className(false), asTypeName(false) {}
  bool login;
  bool tableName;
  bool className;
  bool asTypeName;
  bool login :1;
  bool tableName :1;
  bool className :1;
  bool asTypeName :1;
 } _AccumuloProxy_testTableClassLoad_args__isset;
 
 class AccumuloProxy_testTableClassLoad_args {
  public:
 
  AccumuloProxy_testTableClassLoad_args(const AccumuloProxy_testTableClassLoad_args&amp;);
  AccumuloProxy_testTableClassLoad_args&amp; operator=(const AccumuloProxy_testTableClassLoad_args&amp;);
   AccumuloProxy_testTableClassLoad_args() : login(), tableName(), className(), asTypeName() {
   }
 
  virtual ~AccumuloProxy_testTableClassLoad_args() throw() {}

  virtual ~AccumuloProxy_testTableClassLoad_args() throw();
   std::string login;
   std::string tableName;
   std::string className;
@@ -5933,21 +5468,13 @@ class AccumuloProxy_testTableClassLoad_args {
 
   _AccumuloProxy_testTableClassLoad_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_className(const std::string&amp; val) {
    className = val;
  }
  void __set_className(const std::string&amp; val);
 
  void __set_asTypeName(const std::string&amp; val) {
    asTypeName = val;
  }
  void __set_asTypeName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_testTableClassLoad_args &amp; rhs) const
   {
@@ -5977,8 +5504,7 @@ class AccumuloProxy_testTableClassLoad_pargs {
  public:
 
 
  virtual ~AccumuloProxy_testTableClassLoad_pargs() throw() {}

  virtual ~AccumuloProxy_testTableClassLoad_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* className;
@@ -5990,20 +5516,21 @@ class AccumuloProxy_testTableClassLoad_pargs {
 
 typedef struct _AccumuloProxy_testTableClassLoad_result__isset {
   _AccumuloProxy_testTableClassLoad_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_testTableClassLoad_result__isset;
 
 class AccumuloProxy_testTableClassLoad_result {
  public:
 
  AccumuloProxy_testTableClassLoad_result(const AccumuloProxy_testTableClassLoad_result&amp;);
  AccumuloProxy_testTableClassLoad_result&amp; operator=(const AccumuloProxy_testTableClassLoad_result&amp;);
   AccumuloProxy_testTableClassLoad_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_testTableClassLoad_result() throw() {}

  virtual ~AccumuloProxy_testTableClassLoad_result() throw();
   bool success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -6011,21 +5538,13 @@ class AccumuloProxy_testTableClassLoad_result {
 
   _AccumuloProxy_testTableClassLoad_result__isset __isset;
 
  void __set_success(const bool val) {
    success = val;
  }
  void __set_success(const bool val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_testTableClassLoad_result &amp; rhs) const
   {
@@ -6052,18 +5571,17 @@ class AccumuloProxy_testTableClassLoad_result {
 
 typedef struct _AccumuloProxy_testTableClassLoad_presult__isset {
   _AccumuloProxy_testTableClassLoad_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_testTableClassLoad_presult__isset;
 
 class AccumuloProxy_testTableClassLoad_presult {
  public:
 
 
  virtual ~AccumuloProxy_testTableClassLoad_presult() throw() {}

  virtual ~AccumuloProxy_testTableClassLoad_presult() throw();
   bool* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -6077,30 +5595,27 @@ class AccumuloProxy_testTableClassLoad_presult {
 
 typedef struct _AccumuloProxy_pingTabletServer_args__isset {
   _AccumuloProxy_pingTabletServer_args__isset() : login(false), tserver(false) {}
  bool login;
  bool tserver;
  bool login :1;
  bool tserver :1;
 } _AccumuloProxy_pingTabletServer_args__isset;
 
 class AccumuloProxy_pingTabletServer_args {
  public:
 
  AccumuloProxy_pingTabletServer_args(const AccumuloProxy_pingTabletServer_args&amp;);
  AccumuloProxy_pingTabletServer_args&amp; operator=(const AccumuloProxy_pingTabletServer_args&amp;);
   AccumuloProxy_pingTabletServer_args() : login(), tserver() {
   }
 
  virtual ~AccumuloProxy_pingTabletServer_args() throw() {}

  virtual ~AccumuloProxy_pingTabletServer_args() throw();
   std::string login;
   std::string tserver;
 
   _AccumuloProxy_pingTabletServer_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tserver(const std::string&amp; val) {
    tserver = val;
  }
  void __set_tserver(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_pingTabletServer_args &amp; rhs) const
   {
@@ -6126,8 +5641,7 @@ class AccumuloProxy_pingTabletServer_pargs {
  public:
 
 
  virtual ~AccumuloProxy_pingTabletServer_pargs() throw() {}

  virtual ~AccumuloProxy_pingTabletServer_pargs() throw();
   const std::string* login;
   const std::string* tserver;
 
@@ -6137,30 +5651,27 @@ class AccumuloProxy_pingTabletServer_pargs {
 
 typedef struct _AccumuloProxy_pingTabletServer_result__isset {
   _AccumuloProxy_pingTabletServer_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_pingTabletServer_result__isset;
 
 class AccumuloProxy_pingTabletServer_result {
  public:
 
  AccumuloProxy_pingTabletServer_result(const AccumuloProxy_pingTabletServer_result&amp;);
  AccumuloProxy_pingTabletServer_result&amp; operator=(const AccumuloProxy_pingTabletServer_result&amp;);
   AccumuloProxy_pingTabletServer_result() {
   }
 
  virtual ~AccumuloProxy_pingTabletServer_result() throw() {}

  virtual ~AccumuloProxy_pingTabletServer_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_pingTabletServer_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_pingTabletServer_result &amp; rhs) const
   {
@@ -6183,16 +5694,15 @@ class AccumuloProxy_pingTabletServer_result {
 
 typedef struct _AccumuloProxy_pingTabletServer_presult__isset {
   _AccumuloProxy_pingTabletServer_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_pingTabletServer_presult__isset;
 
 class AccumuloProxy_pingTabletServer_presult {
  public:
 
 
  virtual ~AccumuloProxy_pingTabletServer_presult() throw() {}

  virtual ~AccumuloProxy_pingTabletServer_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -6204,30 +5714,27 @@ class AccumuloProxy_pingTabletServer_presult {
 
 typedef struct _AccumuloProxy_getActiveScans_args__isset {
   _AccumuloProxy_getActiveScans_args__isset() : login(false), tserver(false) {}
  bool login;
  bool tserver;
  bool login :1;
  bool tserver :1;
 } _AccumuloProxy_getActiveScans_args__isset;
 
 class AccumuloProxy_getActiveScans_args {
  public:
 
  AccumuloProxy_getActiveScans_args(const AccumuloProxy_getActiveScans_args&amp;);
  AccumuloProxy_getActiveScans_args&amp; operator=(const AccumuloProxy_getActiveScans_args&amp;);
   AccumuloProxy_getActiveScans_args() : login(), tserver() {
   }
 
  virtual ~AccumuloProxy_getActiveScans_args() throw() {}

  virtual ~AccumuloProxy_getActiveScans_args() throw();
   std::string login;
   std::string tserver;
 
   _AccumuloProxy_getActiveScans_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tserver(const std::string&amp; val) {
    tserver = val;
  }
  void __set_tserver(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getActiveScans_args &amp; rhs) const
   {
@@ -6253,8 +5760,7 @@ class AccumuloProxy_getActiveScans_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getActiveScans_pargs() throw() {}

  virtual ~AccumuloProxy_getActiveScans_pargs() throw();
   const std::string* login;
   const std::string* tserver;
 
@@ -6264,36 +5770,31 @@ class AccumuloProxy_getActiveScans_pargs {
 
 typedef struct _AccumuloProxy_getActiveScans_result__isset {
   _AccumuloProxy_getActiveScans_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getActiveScans_result__isset;
 
 class AccumuloProxy_getActiveScans_result {
  public:
 
  AccumuloProxy_getActiveScans_result(const AccumuloProxy_getActiveScans_result&amp;);
  AccumuloProxy_getActiveScans_result&amp; operator=(const AccumuloProxy_getActiveScans_result&amp;);
   AccumuloProxy_getActiveScans_result() {
   }
 
  virtual ~AccumuloProxy_getActiveScans_result() throw() {}

  virtual ~AccumuloProxy_getActiveScans_result() throw();
   std::vector&lt;ActiveScan&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_getActiveScans_result__isset __isset;
 
  void __set_success(const std::vector&lt;ActiveScan&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::vector&lt;ActiveScan&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_getActiveScans_result &amp; rhs) const
   {
@@ -6318,17 +5819,16 @@ class AccumuloProxy_getActiveScans_result {
 
 typedef struct _AccumuloProxy_getActiveScans_presult__isset {
   _AccumuloProxy_getActiveScans_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getActiveScans_presult__isset;
 
 class AccumuloProxy_getActiveScans_presult {
  public:
 
 
  virtual ~AccumuloProxy_getActiveScans_presult() throw() {}

  virtual ~AccumuloProxy_getActiveScans_presult() throw();
   std::vector&lt;ActiveScan&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -6341,30 +5841,27 @@ class AccumuloProxy_getActiveScans_presult {
 
 typedef struct _AccumuloProxy_getActiveCompactions_args__isset {
   _AccumuloProxy_getActiveCompactions_args__isset() : login(false), tserver(false) {}
  bool login;
  bool tserver;
  bool login :1;
  bool tserver :1;
 } _AccumuloProxy_getActiveCompactions_args__isset;
 
 class AccumuloProxy_getActiveCompactions_args {
  public:
 
  AccumuloProxy_getActiveCompactions_args(const AccumuloProxy_getActiveCompactions_args&amp;);
  AccumuloProxy_getActiveCompactions_args&amp; operator=(const AccumuloProxy_getActiveCompactions_args&amp;);
   AccumuloProxy_getActiveCompactions_args() : login(), tserver() {
   }
 
  virtual ~AccumuloProxy_getActiveCompactions_args() throw() {}

  virtual ~AccumuloProxy_getActiveCompactions_args() throw();
   std::string login;
   std::string tserver;
 
   _AccumuloProxy_getActiveCompactions_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tserver(const std::string&amp; val) {
    tserver = val;
  }
  void __set_tserver(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getActiveCompactions_args &amp; rhs) const
   {
@@ -6390,8 +5887,7 @@ class AccumuloProxy_getActiveCompactions_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getActiveCompactions_pargs() throw() {}

  virtual ~AccumuloProxy_getActiveCompactions_pargs() throw();
   const std::string* login;
   const std::string* tserver;
 
@@ -6401,36 +5897,31 @@ class AccumuloProxy_getActiveCompactions_pargs {
 
 typedef struct _AccumuloProxy_getActiveCompactions_result__isset {
   _AccumuloProxy_getActiveCompactions_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getActiveCompactions_result__isset;
 
 class AccumuloProxy_getActiveCompactions_result {
  public:
 
  AccumuloProxy_getActiveCompactions_result(const AccumuloProxy_getActiveCompactions_result&amp;);
  AccumuloProxy_getActiveCompactions_result&amp; operator=(const AccumuloProxy_getActiveCompactions_result&amp;);
   AccumuloProxy_getActiveCompactions_result() {
   }
 
  virtual ~AccumuloProxy_getActiveCompactions_result() throw() {}

  virtual ~AccumuloProxy_getActiveCompactions_result() throw();
   std::vector&lt;ActiveCompaction&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_getActiveCompactions_result__isset __isset;
 
  void __set_success(const std::vector&lt;ActiveCompaction&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::vector&lt;ActiveCompaction&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_getActiveCompactions_result &amp; rhs) const
   {
@@ -6455,17 +5946,16 @@ class AccumuloProxy_getActiveCompactions_result {
 
 typedef struct _AccumuloProxy_getActiveCompactions_presult__isset {
   _AccumuloProxy_getActiveCompactions_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getActiveCompactions_presult__isset;
 
 class AccumuloProxy_getActiveCompactions_presult {
  public:
 
 
  virtual ~AccumuloProxy_getActiveCompactions_presult() throw() {}

  virtual ~AccumuloProxy_getActiveCompactions_presult() throw();
   std::vector&lt;ActiveCompaction&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -6478,24 +5968,23 @@ class AccumuloProxy_getActiveCompactions_presult {
 
 typedef struct _AccumuloProxy_getSiteConfiguration_args__isset {
   _AccumuloProxy_getSiteConfiguration_args__isset() : login(false) {}
  bool login;
  bool login :1;
 } _AccumuloProxy_getSiteConfiguration_args__isset;
 
 class AccumuloProxy_getSiteConfiguration_args {
  public:
 
  AccumuloProxy_getSiteConfiguration_args(const AccumuloProxy_getSiteConfiguration_args&amp;);
  AccumuloProxy_getSiteConfiguration_args&amp; operator=(const AccumuloProxy_getSiteConfiguration_args&amp;);
   AccumuloProxy_getSiteConfiguration_args() : login() {
   }
 
  virtual ~AccumuloProxy_getSiteConfiguration_args() throw() {}

  virtual ~AccumuloProxy_getSiteConfiguration_args() throw();
   std::string login;
 
   _AccumuloProxy_getSiteConfiguration_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getSiteConfiguration_args &amp; rhs) const
   {
@@ -6519,8 +6008,7 @@ class AccumuloProxy_getSiteConfiguration_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getSiteConfiguration_pargs() throw() {}

  virtual ~AccumuloProxy_getSiteConfiguration_pargs() throw();
   const std::string* login;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -6529,36 +6017,31 @@ class AccumuloProxy_getSiteConfiguration_pargs {
 
 typedef struct _AccumuloProxy_getSiteConfiguration_result__isset {
   _AccumuloProxy_getSiteConfiguration_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getSiteConfiguration_result__isset;
 
 class AccumuloProxy_getSiteConfiguration_result {
  public:
 
  AccumuloProxy_getSiteConfiguration_result(const AccumuloProxy_getSiteConfiguration_result&amp;);
  AccumuloProxy_getSiteConfiguration_result&amp; operator=(const AccumuloProxy_getSiteConfiguration_result&amp;);
   AccumuloProxy_getSiteConfiguration_result() {
   }
 
  virtual ~AccumuloProxy_getSiteConfiguration_result() throw() {}

  virtual ~AccumuloProxy_getSiteConfiguration_result() throw();
   std::map&lt;std::string, std::string&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_getSiteConfiguration_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_getSiteConfiguration_result &amp; rhs) const
   {
@@ -6583,17 +6066,16 @@ class AccumuloProxy_getSiteConfiguration_result {
 
 typedef struct _AccumuloProxy_getSiteConfiguration_presult__isset {
   _AccumuloProxy_getSiteConfiguration_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getSiteConfiguration_presult__isset;
 
 class AccumuloProxy_getSiteConfiguration_presult {
  public:
 
 
  virtual ~AccumuloProxy_getSiteConfiguration_presult() throw() {}

  virtual ~AccumuloProxy_getSiteConfiguration_presult() throw();
   std::map&lt;std::string, std::string&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -6606,24 +6088,23 @@ class AccumuloProxy_getSiteConfiguration_presult {
 
 typedef struct _AccumuloProxy_getSystemConfiguration_args__isset {
   _AccumuloProxy_getSystemConfiguration_args__isset() : login(false) {}
  bool login;
  bool login :1;
 } _AccumuloProxy_getSystemConfiguration_args__isset;
 
 class AccumuloProxy_getSystemConfiguration_args {
  public:
 
  AccumuloProxy_getSystemConfiguration_args(const AccumuloProxy_getSystemConfiguration_args&amp;);
  AccumuloProxy_getSystemConfiguration_args&amp; operator=(const AccumuloProxy_getSystemConfiguration_args&amp;);
   AccumuloProxy_getSystemConfiguration_args() : login() {
   }
 
  virtual ~AccumuloProxy_getSystemConfiguration_args() throw() {}

  virtual ~AccumuloProxy_getSystemConfiguration_args() throw();
   std::string login;
 
   _AccumuloProxy_getSystemConfiguration_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getSystemConfiguration_args &amp; rhs) const
   {
@@ -6647,8 +6128,7 @@ class AccumuloProxy_getSystemConfiguration_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getSystemConfiguration_pargs() throw() {}

  virtual ~AccumuloProxy_getSystemConfiguration_pargs() throw();
   const std::string* login;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -6657,36 +6137,31 @@ class AccumuloProxy_getSystemConfiguration_pargs {
 
 typedef struct _AccumuloProxy_getSystemConfiguration_result__isset {
   _AccumuloProxy_getSystemConfiguration_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getSystemConfiguration_result__isset;
 
 class AccumuloProxy_getSystemConfiguration_result {
  public:
 
  AccumuloProxy_getSystemConfiguration_result(const AccumuloProxy_getSystemConfiguration_result&amp;);
  AccumuloProxy_getSystemConfiguration_result&amp; operator=(const AccumuloProxy_getSystemConfiguration_result&amp;);
   AccumuloProxy_getSystemConfiguration_result() {
   }
 
  virtual ~AccumuloProxy_getSystemConfiguration_result() throw() {}

  virtual ~AccumuloProxy_getSystemConfiguration_result() throw();
   std::map&lt;std::string, std::string&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_getSystemConfiguration_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, std::string&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_getSystemConfiguration_result &amp; rhs) const
   {
@@ -6711,17 +6186,16 @@ class AccumuloProxy_getSystemConfiguration_result {
 
 typedef struct _AccumuloProxy_getSystemConfiguration_presult__isset {
   _AccumuloProxy_getSystemConfiguration_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getSystemConfiguration_presult__isset;
 
 class AccumuloProxy_getSystemConfiguration_presult {
  public:
 
 
  virtual ~AccumuloProxy_getSystemConfiguration_presult() throw() {}

  virtual ~AccumuloProxy_getSystemConfiguration_presult() throw();
   std::map&lt;std::string, std::string&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -6734,24 +6208,23 @@ class AccumuloProxy_getSystemConfiguration_presult {
 
 typedef struct _AccumuloProxy_getTabletServers_args__isset {
   _AccumuloProxy_getTabletServers_args__isset() : login(false) {}
  bool login;
  bool login :1;
 } _AccumuloProxy_getTabletServers_args__isset;
 
 class AccumuloProxy_getTabletServers_args {
  public:
 
  AccumuloProxy_getTabletServers_args(const AccumuloProxy_getTabletServers_args&amp;);
  AccumuloProxy_getTabletServers_args&amp; operator=(const AccumuloProxy_getTabletServers_args&amp;);
   AccumuloProxy_getTabletServers_args() : login() {
   }
 
  virtual ~AccumuloProxy_getTabletServers_args() throw() {}

  virtual ~AccumuloProxy_getTabletServers_args() throw();
   std::string login;
 
   _AccumuloProxy_getTabletServers_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getTabletServers_args &amp; rhs) const
   {
@@ -6775,8 +6248,7 @@ class AccumuloProxy_getTabletServers_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getTabletServers_pargs() throw() {}

  virtual ~AccumuloProxy_getTabletServers_pargs() throw();
   const std::string* login;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -6785,24 +6257,23 @@ class AccumuloProxy_getTabletServers_pargs {
 
 typedef struct _AccumuloProxy_getTabletServers_result__isset {
   _AccumuloProxy_getTabletServers_result__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_getTabletServers_result__isset;
 
 class AccumuloProxy_getTabletServers_result {
  public:
 
  AccumuloProxy_getTabletServers_result(const AccumuloProxy_getTabletServers_result&amp;);
  AccumuloProxy_getTabletServers_result&amp; operator=(const AccumuloProxy_getTabletServers_result&amp;);
   AccumuloProxy_getTabletServers_result() {
   }
 
  virtual ~AccumuloProxy_getTabletServers_result() throw() {}

  virtual ~AccumuloProxy_getTabletServers_result() throw();
   std::vector&lt;std::string&gt;  success;
 
   _AccumuloProxy_getTabletServers_result__isset __isset;
 
  void __set_success(const std::vector&lt;std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::vector&lt;std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_getTabletServers_result &amp; rhs) const
   {
@@ -6823,15 +6294,14 @@ class AccumuloProxy_getTabletServers_result {
 
 typedef struct _AccumuloProxy_getTabletServers_presult__isset {
   _AccumuloProxy_getTabletServers_presult__isset() : success(false) {}
  bool success;
  bool success :1;
 } _AccumuloProxy_getTabletServers_presult__isset;
 
 class AccumuloProxy_getTabletServers_presult {
  public:
 
 
  virtual ~AccumuloProxy_getTabletServers_presult() throw() {}

  virtual ~AccumuloProxy_getTabletServers_presult() throw();
   std::vector&lt;std::string&gt; * success;
 
   _AccumuloProxy_getTabletServers_presult__isset __isset;
@@ -6842,30 +6312,27 @@ class AccumuloProxy_getTabletServers_presult {
 
 typedef struct _AccumuloProxy_removeProperty_args__isset {
   _AccumuloProxy_removeProperty_args__isset() : login(false), property(false) {}
  bool login;
  bool property;
  bool login :1;
  bool property :1;
 } _AccumuloProxy_removeProperty_args__isset;
 
 class AccumuloProxy_removeProperty_args {
  public:
 
  AccumuloProxy_removeProperty_args(const AccumuloProxy_removeProperty_args&amp;);
  AccumuloProxy_removeProperty_args&amp; operator=(const AccumuloProxy_removeProperty_args&amp;);
   AccumuloProxy_removeProperty_args() : login(), property() {
   }
 
  virtual ~AccumuloProxy_removeProperty_args() throw() {}

  virtual ~AccumuloProxy_removeProperty_args() throw();
   std::string login;
   std::string property;
 
   _AccumuloProxy_removeProperty_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_property(const std::string&amp; val) {
    property = val;
  }
  void __set_property(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_removeProperty_args &amp; rhs) const
   {
@@ -6891,8 +6358,7 @@ class AccumuloProxy_removeProperty_pargs {
  public:
 
 
  virtual ~AccumuloProxy_removeProperty_pargs() throw() {}

  virtual ~AccumuloProxy_removeProperty_pargs() throw();
   const std::string* login;
   const std::string* property;
 
@@ -6902,30 +6368,27 @@ class AccumuloProxy_removeProperty_pargs {
 
 typedef struct _AccumuloProxy_removeProperty_result__isset {
   _AccumuloProxy_removeProperty_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_removeProperty_result__isset;
 
 class AccumuloProxy_removeProperty_result {
  public:
 
  AccumuloProxy_removeProperty_result(const AccumuloProxy_removeProperty_result&amp;);
  AccumuloProxy_removeProperty_result&amp; operator=(const AccumuloProxy_removeProperty_result&amp;);
   AccumuloProxy_removeProperty_result() {
   }
 
  virtual ~AccumuloProxy_removeProperty_result() throw() {}

  virtual ~AccumuloProxy_removeProperty_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_removeProperty_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_removeProperty_result &amp; rhs) const
   {
@@ -6948,16 +6411,15 @@ class AccumuloProxy_removeProperty_result {
 
 typedef struct _AccumuloProxy_removeProperty_presult__isset {
   _AccumuloProxy_removeProperty_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_removeProperty_presult__isset;
 
 class AccumuloProxy_removeProperty_presult {
  public:
 
 
  virtual ~AccumuloProxy_removeProperty_presult() throw() {}

  virtual ~AccumuloProxy_removeProperty_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -6969,36 +6431,31 @@ class AccumuloProxy_removeProperty_presult {
 
 typedef struct _AccumuloProxy_setProperty_args__isset {
   _AccumuloProxy_setProperty_args__isset() : login(false), property(false), value(false) {}
  bool login;
  bool property;
  bool value;
  bool login :1;
  bool property :1;
  bool value :1;
 } _AccumuloProxy_setProperty_args__isset;
 
 class AccumuloProxy_setProperty_args {
  public:
 
  AccumuloProxy_setProperty_args(const AccumuloProxy_setProperty_args&amp;);
  AccumuloProxy_setProperty_args&amp; operator=(const AccumuloProxy_setProperty_args&amp;);
   AccumuloProxy_setProperty_args() : login(), property(), value() {
   }
 
  virtual ~AccumuloProxy_setProperty_args() throw() {}

  virtual ~AccumuloProxy_setProperty_args() throw();
   std::string login;
   std::string property;
   std::string value;
 
   _AccumuloProxy_setProperty_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_property(const std::string&amp; val) {
    property = val;
  }
  void __set_property(const std::string&amp; val);
 
  void __set_value(const std::string&amp; val) {
    value = val;
  }
  void __set_value(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_setProperty_args &amp; rhs) const
   {
@@ -7026,8 +6483,7 @@ class AccumuloProxy_setProperty_pargs {
  public:
 
 
  virtual ~AccumuloProxy_setProperty_pargs() throw() {}

  virtual ~AccumuloProxy_setProperty_pargs() throw();
   const std::string* login;
   const std::string* property;
   const std::string* value;
@@ -7038,30 +6494,27 @@ class AccumuloProxy_setProperty_pargs {
 
 typedef struct _AccumuloProxy_setProperty_result__isset {
   _AccumuloProxy_setProperty_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_setProperty_result__isset;
 
 class AccumuloProxy_setProperty_result {
  public:
 
  AccumuloProxy_setProperty_result(const AccumuloProxy_setProperty_result&amp;);
  AccumuloProxy_setProperty_result&amp; operator=(const AccumuloProxy_setProperty_result&amp;);
   AccumuloProxy_setProperty_result() {
   }
 
  virtual ~AccumuloProxy_setProperty_result() throw() {}

  virtual ~AccumuloProxy_setProperty_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_setProperty_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_setProperty_result &amp; rhs) const
   {
@@ -7084,16 +6537,15 @@ class AccumuloProxy_setProperty_result {
 
 typedef struct _AccumuloProxy_setProperty_presult__isset {
   _AccumuloProxy_setProperty_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_setProperty_presult__isset;
 
 class AccumuloProxy_setProperty_presult {
  public:
 
 
  virtual ~AccumuloProxy_setProperty_presult() throw() {}

  virtual ~AccumuloProxy_setProperty_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -7105,36 +6557,31 @@ class AccumuloProxy_setProperty_presult {
 
 typedef struct _AccumuloProxy_testClassLoad_args__isset {
   _AccumuloProxy_testClassLoad_args__isset() : login(false), className(false), asTypeName(false) {}
  bool login;
  bool className;
  bool asTypeName;
  bool login :1;
  bool className :1;
  bool asTypeName :1;
 } _AccumuloProxy_testClassLoad_args__isset;
 
 class AccumuloProxy_testClassLoad_args {
  public:
 
  AccumuloProxy_testClassLoad_args(const AccumuloProxy_testClassLoad_args&amp;);
  AccumuloProxy_testClassLoad_args&amp; operator=(const AccumuloProxy_testClassLoad_args&amp;);
   AccumuloProxy_testClassLoad_args() : login(), className(), asTypeName() {
   }
 
  virtual ~AccumuloProxy_testClassLoad_args() throw() {}

  virtual ~AccumuloProxy_testClassLoad_args() throw();
   std::string login;
   std::string className;
   std::string asTypeName;
 
   _AccumuloProxy_testClassLoad_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_className(const std::string&amp; val) {
    className = val;
  }
  void __set_className(const std::string&amp; val);
 
  void __set_asTypeName(const std::string&amp; val) {
    asTypeName = val;
  }
  void __set_asTypeName(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_testClassLoad_args &amp; rhs) const
   {
@@ -7162,8 +6609,7 @@ class AccumuloProxy_testClassLoad_pargs {
  public:
 
 
  virtual ~AccumuloProxy_testClassLoad_pargs() throw() {}

  virtual ~AccumuloProxy_testClassLoad_pargs() throw();
   const std::string* login;
   const std::string* className;
   const std::string* asTypeName;
@@ -7174,36 +6620,31 @@ class AccumuloProxy_testClassLoad_pargs {
 
 typedef struct _AccumuloProxy_testClassLoad_result__isset {
   _AccumuloProxy_testClassLoad_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_testClassLoad_result__isset;
 
 class AccumuloProxy_testClassLoad_result {
  public:
 
  AccumuloProxy_testClassLoad_result(const AccumuloProxy_testClassLoad_result&amp;);
  AccumuloProxy_testClassLoad_result&amp; operator=(const AccumuloProxy_testClassLoad_result&amp;);
   AccumuloProxy_testClassLoad_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_testClassLoad_result() throw() {}

  virtual ~AccumuloProxy_testClassLoad_result() throw();
   bool success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_testClassLoad_result__isset __isset;
 
  void __set_success(const bool val) {
    success = val;
  }
  void __set_success(const bool val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_testClassLoad_result &amp; rhs) const
   {
@@ -7228,17 +6669,16 @@ class AccumuloProxy_testClassLoad_result {
 
 typedef struct _AccumuloProxy_testClassLoad_presult__isset {
   _AccumuloProxy_testClassLoad_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_testClassLoad_presult__isset;
 
 class AccumuloProxy_testClassLoad_presult {
  public:
 
 
  virtual ~AccumuloProxy_testClassLoad_presult() throw() {}

  virtual ~AccumuloProxy_testClassLoad_presult() throw();
   bool* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -7251,36 +6691,31 @@ class AccumuloProxy_testClassLoad_presult {
 
 typedef struct _AccumuloProxy_authenticateUser_args__isset {
   _AccumuloProxy_authenticateUser_args__isset() : login(false), user(false), properties(false) {}
  bool login;
  bool user;
  bool properties;
  bool login :1;
  bool user :1;
  bool properties :1;
 } _AccumuloProxy_authenticateUser_args__isset;
 
 class AccumuloProxy_authenticateUser_args {
  public:
 
  AccumuloProxy_authenticateUser_args(const AccumuloProxy_authenticateUser_args&amp;);
  AccumuloProxy_authenticateUser_args&amp; operator=(const AccumuloProxy_authenticateUser_args&amp;);
   AccumuloProxy_authenticateUser_args() : login(), user() {
   }
 
  virtual ~AccumuloProxy_authenticateUser_args() throw() {}

  virtual ~AccumuloProxy_authenticateUser_args() throw();
   std::string login;
   std::string user;
   std::map&lt;std::string, std::string&gt;  properties;
 
   _AccumuloProxy_authenticateUser_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_properties(const std::map&lt;std::string, std::string&gt; &amp; val) {
    properties = val;
  }
  void __set_properties(const std::map&lt;std::string, std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_authenticateUser_args &amp; rhs) const
   {
@@ -7308,8 +6743,7 @@ class AccumuloProxy_authenticateUser_pargs {
  public:
 
 
  virtual ~AccumuloProxy_authenticateUser_pargs() throw() {}

  virtual ~AccumuloProxy_authenticateUser_pargs() throw();
   const std::string* login;
   const std::string* user;
   const std::map&lt;std::string, std::string&gt; * properties;
@@ -7320,36 +6754,31 @@ class AccumuloProxy_authenticateUser_pargs {
 
 typedef struct _AccumuloProxy_authenticateUser_result__isset {
   _AccumuloProxy_authenticateUser_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_authenticateUser_result__isset;
 
 class AccumuloProxy_authenticateUser_result {
  public:
 
  AccumuloProxy_authenticateUser_result(const AccumuloProxy_authenticateUser_result&amp;);
  AccumuloProxy_authenticateUser_result&amp; operator=(const AccumuloProxy_authenticateUser_result&amp;);
   AccumuloProxy_authenticateUser_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_authenticateUser_result() throw() {}

  virtual ~AccumuloProxy_authenticateUser_result() throw();
   bool success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_authenticateUser_result__isset __isset;
 
  void __set_success(const bool val) {
    success = val;
  }
  void __set_success(const bool val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_authenticateUser_result &amp; rhs) const
   {
@@ -7374,17 +6803,16 @@ class AccumuloProxy_authenticateUser_result {
 
 typedef struct _AccumuloProxy_authenticateUser_presult__isset {
   _AccumuloProxy_authenticateUser_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_authenticateUser_presult__isset;
 
 class AccumuloProxy_authenticateUser_presult {
  public:
 
 
  virtual ~AccumuloProxy_authenticateUser_presult() throw() {}

  virtual ~AccumuloProxy_authenticateUser_presult() throw();
   bool* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -7397,36 +6825,31 @@ class AccumuloProxy_authenticateUser_presult {
 
 typedef struct _AccumuloProxy_changeUserAuthorizations_args__isset {
   _AccumuloProxy_changeUserAuthorizations_args__isset() : login(false), user(false), authorizations(false) {}
  bool login;
  bool user;
  bool authorizations;
  bool login :1;
  bool user :1;
  bool authorizations :1;
 } _AccumuloProxy_changeUserAuthorizations_args__isset;
 
 class AccumuloProxy_changeUserAuthorizations_args {
  public:
 
  AccumuloProxy_changeUserAuthorizations_args(const AccumuloProxy_changeUserAuthorizations_args&amp;);
  AccumuloProxy_changeUserAuthorizations_args&amp; operator=(const AccumuloProxy_changeUserAuthorizations_args&amp;);
   AccumuloProxy_changeUserAuthorizations_args() : login(), user() {
   }
 
  virtual ~AccumuloProxy_changeUserAuthorizations_args() throw() {}

  virtual ~AccumuloProxy_changeUserAuthorizations_args() throw();
   std::string login;
   std::string user;
   std::set&lt;std::string&gt;  authorizations;
 
   _AccumuloProxy_changeUserAuthorizations_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val) {
    authorizations = val;
  }
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_changeUserAuthorizations_args &amp; rhs) const
   {
@@ -7454,8 +6877,7 @@ class AccumuloProxy_changeUserAuthorizations_pargs {
  public:
 
 
  virtual ~AccumuloProxy_changeUserAuthorizations_pargs() throw() {}

  virtual ~AccumuloProxy_changeUserAuthorizations_pargs() throw();
   const std::string* login;
   const std::string* user;
   const std::set&lt;std::string&gt; * authorizations;
@@ -7466,30 +6888,27 @@ class AccumuloProxy_changeUserAuthorizations_pargs {
 
 typedef struct _AccumuloProxy_changeUserAuthorizations_result__isset {
   _AccumuloProxy_changeUserAuthorizations_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_changeUserAuthorizations_result__isset;
 
 class AccumuloProxy_changeUserAuthorizations_result {
  public:
 
  AccumuloProxy_changeUserAuthorizations_result(const AccumuloProxy_changeUserAuthorizations_result&amp;);
  AccumuloProxy_changeUserAuthorizations_result&amp; operator=(const AccumuloProxy_changeUserAuthorizations_result&amp;);
   AccumuloProxy_changeUserAuthorizations_result() {
   }
 
  virtual ~AccumuloProxy_changeUserAuthorizations_result() throw() {}

  virtual ~AccumuloProxy_changeUserAuthorizations_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_changeUserAuthorizations_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_changeUserAuthorizations_result &amp; rhs) const
   {
@@ -7512,16 +6931,15 @@ class AccumuloProxy_changeUserAuthorizations_result {
 
 typedef struct _AccumuloProxy_changeUserAuthorizations_presult__isset {
   _AccumuloProxy_changeUserAuthorizations_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_changeUserAuthorizations_presult__isset;
 
 class AccumuloProxy_changeUserAuthorizations_presult {
  public:
 
 
  virtual ~AccumuloProxy_changeUserAuthorizations_presult() throw() {}

  virtual ~AccumuloProxy_changeUserAuthorizations_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -7533,36 +6951,31 @@ class AccumuloProxy_changeUserAuthorizations_presult {
 
 typedef struct _AccumuloProxy_changeLocalUserPassword_args__isset {
   _AccumuloProxy_changeLocalUserPassword_args__isset() : login(false), user(false), password(false) {}
  bool login;
  bool user;
  bool password;
  bool login :1;
  bool user :1;
  bool password :1;
 } _AccumuloProxy_changeLocalUserPassword_args__isset;
 
 class AccumuloProxy_changeLocalUserPassword_args {
  public:
 
  AccumuloProxy_changeLocalUserPassword_args(const AccumuloProxy_changeLocalUserPassword_args&amp;);
  AccumuloProxy_changeLocalUserPassword_args&amp; operator=(const AccumuloProxy_changeLocalUserPassword_args&amp;);
   AccumuloProxy_changeLocalUserPassword_args() : login(), user(), password() {
   }
 
  virtual ~AccumuloProxy_changeLocalUserPassword_args() throw() {}

  virtual ~AccumuloProxy_changeLocalUserPassword_args() throw();
   std::string login;
   std::string user;
   std::string password;
 
   _AccumuloProxy_changeLocalUserPassword_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_password(const std::string&amp; val) {
    password = val;
  }
  void __set_password(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_changeLocalUserPassword_args &amp; rhs) const
   {
@@ -7590,8 +7003,7 @@ class AccumuloProxy_changeLocalUserPassword_pargs {
  public:
 
 
  virtual ~AccumuloProxy_changeLocalUserPassword_pargs() throw() {}

  virtual ~AccumuloProxy_changeLocalUserPassword_pargs() throw();
   const std::string* login;
   const std::string* user;
   const std::string* password;
@@ -7602,30 +7014,27 @@ class AccumuloProxy_changeLocalUserPassword_pargs {
 
 typedef struct _AccumuloProxy_changeLocalUserPassword_result__isset {
   _AccumuloProxy_changeLocalUserPassword_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_changeLocalUserPassword_result__isset;
 
 class AccumuloProxy_changeLocalUserPassword_result {
  public:
 
  AccumuloProxy_changeLocalUserPassword_result(const AccumuloProxy_changeLocalUserPassword_result&amp;);
  AccumuloProxy_changeLocalUserPassword_result&amp; operator=(const AccumuloProxy_changeLocalUserPassword_result&amp;);
   AccumuloProxy_changeLocalUserPassword_result() {
   }
 
  virtual ~AccumuloProxy_changeLocalUserPassword_result() throw() {}

  virtual ~AccumuloProxy_changeLocalUserPassword_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_changeLocalUserPassword_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_changeLocalUserPassword_result &amp; rhs) const
   {
@@ -7648,16 +7057,15 @@ class AccumuloProxy_changeLocalUserPassword_result {
 
 typedef struct _AccumuloProxy_changeLocalUserPassword_presult__isset {
   _AccumuloProxy_changeLocalUserPassword_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_changeLocalUserPassword_presult__isset;
 
 class AccumuloProxy_changeLocalUserPassword_presult {
  public:
 
 
  virtual ~AccumuloProxy_changeLocalUserPassword_presult() throw() {}

  virtual ~AccumuloProxy_changeLocalUserPassword_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -7669,36 +7077,31 @@ class AccumuloProxy_changeLocalUserPassword_presult {
 
 typedef struct _AccumuloProxy_createLocalUser_args__isset {
   _AccumuloProxy_createLocalUser_args__isset() : login(false), user(false), password(false) {}
  bool login;
  bool user;
  bool password;
  bool login :1;
  bool user :1;
  bool password :1;
 } _AccumuloProxy_createLocalUser_args__isset;
 
 class AccumuloProxy_createLocalUser_args {
  public:
 
  AccumuloProxy_createLocalUser_args(const AccumuloProxy_createLocalUser_args&amp;);
  AccumuloProxy_createLocalUser_args&amp; operator=(const AccumuloProxy_createLocalUser_args&amp;);
   AccumuloProxy_createLocalUser_args() : login(), user(), password() {
   }
 
  virtual ~AccumuloProxy_createLocalUser_args() throw() {}

  virtual ~AccumuloProxy_createLocalUser_args() throw();
   std::string login;
   std::string user;
   std::string password;
 
   _AccumuloProxy_createLocalUser_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_password(const std::string&amp; val) {
    password = val;
  }
  void __set_password(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_createLocalUser_args &amp; rhs) const
   {
@@ -7726,8 +7129,7 @@ class AccumuloProxy_createLocalUser_pargs {
  public:
 
 
  virtual ~AccumuloProxy_createLocalUser_pargs() throw() {}

  virtual ~AccumuloProxy_createLocalUser_pargs() throw();
   const std::string* login;
   const std::string* user;
   const std::string* password;
@@ -7738,30 +7140,27 @@ class AccumuloProxy_createLocalUser_pargs {
 
 typedef struct _AccumuloProxy_createLocalUser_result__isset {
   _AccumuloProxy_createLocalUser_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_createLocalUser_result__isset;
 
 class AccumuloProxy_createLocalUser_result {
  public:
 
  AccumuloProxy_createLocalUser_result(const AccumuloProxy_createLocalUser_result&amp;);
  AccumuloProxy_createLocalUser_result&amp; operator=(const AccumuloProxy_createLocalUser_result&amp;);
   AccumuloProxy_createLocalUser_result() {
   }
 
  virtual ~AccumuloProxy_createLocalUser_result() throw() {}

  virtual ~AccumuloProxy_createLocalUser_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_createLocalUser_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_createLocalUser_result &amp; rhs) const
   {
@@ -7784,16 +7183,15 @@ class AccumuloProxy_createLocalUser_result {
 
 typedef struct _AccumuloProxy_createLocalUser_presult__isset {
   _AccumuloProxy_createLocalUser_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_createLocalUser_presult__isset;
 
 class AccumuloProxy_createLocalUser_presult {
  public:
 
 
  virtual ~AccumuloProxy_createLocalUser_presult() throw() {}

  virtual ~AccumuloProxy_createLocalUser_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -7805,30 +7203,27 @@ class AccumuloProxy_createLocalUser_presult {
 
 typedef struct _AccumuloProxy_dropLocalUser_args__isset {
   _AccumuloProxy_dropLocalUser_args__isset() : login(false), user(false) {}
  bool login;
  bool user;
  bool login :1;
  bool user :1;
 } _AccumuloProxy_dropLocalUser_args__isset;
 
 class AccumuloProxy_dropLocalUser_args {
  public:
 
  AccumuloProxy_dropLocalUser_args(const AccumuloProxy_dropLocalUser_args&amp;);
  AccumuloProxy_dropLocalUser_args&amp; operator=(const AccumuloProxy_dropLocalUser_args&amp;);
   AccumuloProxy_dropLocalUser_args() : login(), user() {
   }
 
  virtual ~AccumuloProxy_dropLocalUser_args() throw() {}

  virtual ~AccumuloProxy_dropLocalUser_args() throw();
   std::string login;
   std::string user;
 
   _AccumuloProxy_dropLocalUser_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_dropLocalUser_args &amp; rhs) const
   {
@@ -7854,8 +7249,7 @@ class AccumuloProxy_dropLocalUser_pargs {
  public:
 
 
  virtual ~AccumuloProxy_dropLocalUser_pargs() throw() {}

  virtual ~AccumuloProxy_dropLocalUser_pargs() throw();
   const std::string* login;
   const std::string* user;
 
@@ -7865,30 +7259,27 @@ class AccumuloProxy_dropLocalUser_pargs {
 
 typedef struct _AccumuloProxy_dropLocalUser_result__isset {
   _AccumuloProxy_dropLocalUser_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_dropLocalUser_result__isset;
 
 class AccumuloProxy_dropLocalUser_result {
  public:
 
  AccumuloProxy_dropLocalUser_result(const AccumuloProxy_dropLocalUser_result&amp;);
  AccumuloProxy_dropLocalUser_result&amp; operator=(const AccumuloProxy_dropLocalUser_result&amp;);
   AccumuloProxy_dropLocalUser_result() {
   }
 
  virtual ~AccumuloProxy_dropLocalUser_result() throw() {}

  virtual ~AccumuloProxy_dropLocalUser_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_dropLocalUser_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_dropLocalUser_result &amp; rhs) const
   {
@@ -7911,16 +7302,15 @@ class AccumuloProxy_dropLocalUser_result {
 
 typedef struct _AccumuloProxy_dropLocalUser_presult__isset {
   _AccumuloProxy_dropLocalUser_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_dropLocalUser_presult__isset;
 
 class AccumuloProxy_dropLocalUser_presult {
  public:
 
 
  virtual ~AccumuloProxy_dropLocalUser_presult() throw() {}

  virtual ~AccumuloProxy_dropLocalUser_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -7932,30 +7322,27 @@ class AccumuloProxy_dropLocalUser_presult {
 
 typedef struct _AccumuloProxy_getUserAuthorizations_args__isset {
   _AccumuloProxy_getUserAuthorizations_args__isset() : login(false), user(false) {}
  bool login;
  bool user;
  bool login :1;
  bool user :1;
 } _AccumuloProxy_getUserAuthorizations_args__isset;
 
 class AccumuloProxy_getUserAuthorizations_args {
  public:
 
  AccumuloProxy_getUserAuthorizations_args(const AccumuloProxy_getUserAuthorizations_args&amp;);
  AccumuloProxy_getUserAuthorizations_args&amp; operator=(const AccumuloProxy_getUserAuthorizations_args&amp;);
   AccumuloProxy_getUserAuthorizations_args() : login(), user() {
   }
 
  virtual ~AccumuloProxy_getUserAuthorizations_args() throw() {}

  virtual ~AccumuloProxy_getUserAuthorizations_args() throw();
   std::string login;
   std::string user;
 
   _AccumuloProxy_getUserAuthorizations_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_getUserAuthorizations_args &amp; rhs) const
   {
@@ -7981,8 +7368,7 @@ class AccumuloProxy_getUserAuthorizations_pargs {
  public:
 
 
  virtual ~AccumuloProxy_getUserAuthorizations_pargs() throw() {}

  virtual ~AccumuloProxy_getUserAuthorizations_pargs() throw();
   const std::string* login;
   const std::string* user;
 
@@ -7992,36 +7378,31 @@ class AccumuloProxy_getUserAuthorizations_pargs {
 
 typedef struct _AccumuloProxy_getUserAuthorizations_result__isset {
   _AccumuloProxy_getUserAuthorizations_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getUserAuthorizations_result__isset;
 
 class AccumuloProxy_getUserAuthorizations_result {
  public:
 
  AccumuloProxy_getUserAuthorizations_result(const AccumuloProxy_getUserAuthorizations_result&amp;);
  AccumuloProxy_getUserAuthorizations_result&amp; operator=(const AccumuloProxy_getUserAuthorizations_result&amp;);
   AccumuloProxy_getUserAuthorizations_result() {
   }
 
  virtual ~AccumuloProxy_getUserAuthorizations_result() throw() {}

  virtual ~AccumuloProxy_getUserAuthorizations_result() throw();
   std::vector&lt;std::string&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_getUserAuthorizations_result__isset __isset;
 
  void __set_success(const std::vector&lt;std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::vector&lt;std::string&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_getUserAuthorizations_result &amp; rhs) const
   {
@@ -8046,17 +7427,16 @@ class AccumuloProxy_getUserAuthorizations_result {
 
 typedef struct _AccumuloProxy_getUserAuthorizations_presult__isset {
   _AccumuloProxy_getUserAuthorizations_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_getUserAuthorizations_presult__isset;
 
 class AccumuloProxy_getUserAuthorizations_presult {
  public:
 
 
  virtual ~AccumuloProxy_getUserAuthorizations_presult() throw() {}

  virtual ~AccumuloProxy_getUserAuthorizations_presult() throw();
   std::vector&lt;std::string&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -8069,36 +7449,31 @@ class AccumuloProxy_getUserAuthorizations_presult {
 
 typedef struct _AccumuloProxy_grantSystemPermission_args__isset {
   _AccumuloProxy_grantSystemPermission_args__isset() : login(false), user(false), perm(false) {}
  bool login;
  bool user;
  bool perm;
  bool login :1;
  bool user :1;
  bool perm :1;
 } _AccumuloProxy_grantSystemPermission_args__isset;
 
 class AccumuloProxy_grantSystemPermission_args {
  public:
 
  AccumuloProxy_grantSystemPermission_args(const AccumuloProxy_grantSystemPermission_args&amp;);
  AccumuloProxy_grantSystemPermission_args&amp; operator=(const AccumuloProxy_grantSystemPermission_args&amp;);
   AccumuloProxy_grantSystemPermission_args() : login(), user(), perm((SystemPermission::type)0) {
   }
 
  virtual ~AccumuloProxy_grantSystemPermission_args() throw() {}

  virtual ~AccumuloProxy_grantSystemPermission_args() throw();
   std::string login;
   std::string user;
   SystemPermission::type perm;
 
   _AccumuloProxy_grantSystemPermission_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_perm(const SystemPermission::type val) {
    perm = val;
  }
  void __set_perm(const SystemPermission::type val);
 
   bool operator == (const AccumuloProxy_grantSystemPermission_args &amp; rhs) const
   {
@@ -8126,8 +7501,7 @@ class AccumuloProxy_grantSystemPermission_pargs {
  public:
 
 
  virtual ~AccumuloProxy_grantSystemPermission_pargs() throw() {}

  virtual ~AccumuloProxy_grantSystemPermission_pargs() throw();
   const std::string* login;
   const std::string* user;
   const SystemPermission::type* perm;
@@ -8138,30 +7512,27 @@ class AccumuloProxy_grantSystemPermission_pargs {
 
 typedef struct _AccumuloProxy_grantSystemPermission_result__isset {
   _AccumuloProxy_grantSystemPermission_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_grantSystemPermission_result__isset;
 
 class AccumuloProxy_grantSystemPermission_result {
  public:
 
  AccumuloProxy_grantSystemPermission_result(const AccumuloProxy_grantSystemPermission_result&amp;);
  AccumuloProxy_grantSystemPermission_result&amp; operator=(const AccumuloProxy_grantSystemPermission_result&amp;);
   AccumuloProxy_grantSystemPermission_result() {
   }
 
  virtual ~AccumuloProxy_grantSystemPermission_result() throw() {}

  virtual ~AccumuloProxy_grantSystemPermission_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_grantSystemPermission_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_grantSystemPermission_result &amp; rhs) const
   {
@@ -8184,16 +7555,15 @@ class AccumuloProxy_grantSystemPermission_result {
 
 typedef struct _AccumuloProxy_grantSystemPermission_presult__isset {
   _AccumuloProxy_grantSystemPermission_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_grantSystemPermission_presult__isset;
 
 class AccumuloProxy_grantSystemPermission_presult {
  public:
 
 
  virtual ~AccumuloProxy_grantSystemPermission_presult() throw() {}

  virtual ~AccumuloProxy_grantSystemPermission_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -8205,20 +7575,21 @@ class AccumuloProxy_grantSystemPermission_presult {
 
 typedef struct _AccumuloProxy_grantTablePermission_args__isset {
   _AccumuloProxy_grantTablePermission_args__isset() : login(false), user(false), table(false), perm(false) {}
  bool login;
  bool user;
  bool table;
  bool perm;
  bool login :1;
  bool user :1;
  bool table :1;
  bool perm :1;
 } _AccumuloProxy_grantTablePermission_args__isset;
 
 class AccumuloProxy_grantTablePermission_args {
  public:
 
  AccumuloProxy_grantTablePermission_args(const AccumuloProxy_grantTablePermission_args&amp;);
  AccumuloProxy_grantTablePermission_args&amp; operator=(const AccumuloProxy_grantTablePermission_args&amp;);
   AccumuloProxy_grantTablePermission_args() : login(), user(), table(), perm((TablePermission::type)0) {
   }
 
  virtual ~AccumuloProxy_grantTablePermission_args() throw() {}

  virtual ~AccumuloProxy_grantTablePermission_args() throw();
   std::string login;
   std::string user;
   std::string table;
@@ -8226,21 +7597,13 @@ class AccumuloProxy_grantTablePermission_args {
 
   _AccumuloProxy_grantTablePermission_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_table(const std::string&amp; val) {
    table = val;
  }
  void __set_table(const std::string&amp; val);
 
  void __set_perm(const TablePermission::type val) {
    perm = val;
  }
  void __set_perm(const TablePermission::type val);
 
   bool operator == (const AccumuloProxy_grantTablePermission_args &amp; rhs) const
   {
@@ -8270,8 +7633,7 @@ class AccumuloProxy_grantTablePermission_pargs {
  public:
 
 
  virtual ~AccumuloProxy_grantTablePermission_pargs() throw() {}

  virtual ~AccumuloProxy_grantTablePermission_pargs() throw();
   const std::string* login;
   const std::string* user;
   const std::string* table;
@@ -8283,36 +7645,31 @@ class AccumuloProxy_grantTablePermission_pargs {
 
 typedef struct _AccumuloProxy_grantTablePermission_result__isset {
   _AccumuloProxy_grantTablePermission_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_grantTablePermission_result__isset;
 
 class AccumuloProxy_grantTablePermission_result {
  public:
 
  AccumuloProxy_grantTablePermission_result(const AccumuloProxy_grantTablePermission_result&amp;);
  AccumuloProxy_grantTablePermission_result&amp; operator=(const AccumuloProxy_grantTablePermission_result&amp;);
   AccumuloProxy_grantTablePermission_result() {
   }
 
  virtual ~AccumuloProxy_grantTablePermission_result() throw() {}

  virtual ~AccumuloProxy_grantTablePermission_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_grantTablePermission_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_grantTablePermission_result &amp; rhs) const
   {
@@ -8337,17 +7694,16 @@ class AccumuloProxy_grantTablePermission_result {
 
 typedef struct _AccumuloProxy_grantTablePermission_presult__isset {
   _AccumuloProxy_grantTablePermission_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_grantTablePermission_presult__isset;
 
 class AccumuloProxy_grantTablePermission_presult {
  public:
 
 
  virtual ~AccumuloProxy_grantTablePermission_presult() throw() {}

  virtual ~AccumuloProxy_grantTablePermission_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -8360,36 +7716,31 @@ class AccumuloProxy_grantTablePermission_presult {
 
 typedef struct _AccumuloProxy_hasSystemPermission_args__isset {
   _AccumuloProxy_hasSystemPermission_args__isset() : login(false), user(false), perm(false) {}
  bool login;
  bool user;
  bool perm;
  bool login :1;
  bool user :1;
  bool perm :1;
 } _AccumuloProxy_hasSystemPermission_args__isset;
 
 class AccumuloProxy_hasSystemPermission_args {
  public:
 
  AccumuloProxy_hasSystemPermission_args(const AccumuloProxy_hasSystemPermission_args&amp;);
  AccumuloProxy_hasSystemPermission_args&amp; operator=(const AccumuloProxy_hasSystemPermission_args&amp;);
   AccumuloProxy_hasSystemPermission_args() : login(), user(), perm((SystemPermission::type)0) {
   }
 
  virtual ~AccumuloProxy_hasSystemPermission_args() throw() {}

  virtual ~AccumuloProxy_hasSystemPermission_args() throw();
   std::string login;
   std::string user;
   SystemPermission::type perm;
 
   _AccumuloProxy_hasSystemPermission_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_perm(const SystemPermission::type val) {
    perm = val;
  }
  void __set_perm(const SystemPermission::type val);
 
   bool operator == (const AccumuloProxy_hasSystemPermission_args &amp; rhs) const
   {
@@ -8417,8 +7768,7 @@ class AccumuloProxy_hasSystemPermission_pargs {
  public:
 
 
  virtual ~AccumuloProxy_hasSystemPermission_pargs() throw() {}

  virtual ~AccumuloProxy_hasSystemPermission_pargs() throw();
   const std::string* login;
   const std::string* user;
   const SystemPermission::type* perm;
@@ -8429,36 +7779,31 @@ class AccumuloProxy_hasSystemPermission_pargs {
 
 typedef struct _AccumuloProxy_hasSystemPermission_result__isset {
   _AccumuloProxy_hasSystemPermission_result__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_hasSystemPermission_result__isset;
 
 class AccumuloProxy_hasSystemPermission_result {
  public:
 
  AccumuloProxy_hasSystemPermission_result(const AccumuloProxy_hasSystemPermission_result&amp;);
  AccumuloProxy_hasSystemPermission_result&amp; operator=(const AccumuloProxy_hasSystemPermission_result&amp;);
   AccumuloProxy_hasSystemPermission_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_hasSystemPermission_result() throw() {}

  virtual ~AccumuloProxy_hasSystemPermission_result() throw();
   bool success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_hasSystemPermission_result__isset __isset;
 
  void __set_success(const bool val) {
    success = val;
  }
  void __set_success(const bool val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_hasSystemPermission_result &amp; rhs) const
   {
@@ -8483,17 +7828,16 @@ class AccumuloProxy_hasSystemPermission_result {
 
 typedef struct _AccumuloProxy_hasSystemPermission_presult__isset {
   _AccumuloProxy_hasSystemPermission_presult__isset() : success(false), ouch1(false), ouch2(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_hasSystemPermission_presult__isset;
 
 class AccumuloProxy_hasSystemPermission_presult {
  public:
 
 
  virtual ~AccumuloProxy_hasSystemPermission_presult() throw() {}

  virtual ~AccumuloProxy_hasSystemPermission_presult() throw();
   bool* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -8506,20 +7850,21 @@ class AccumuloProxy_hasSystemPermission_presult {
 
 typedef struct _AccumuloProxy_hasTablePermission_args__isset {
   _AccumuloProxy_hasTablePermission_args__isset() : login(false), user(false), table(false), perm(false) {}
  bool login;
  bool user;
  bool table;
  bool perm;
  bool login :1;
  bool user :1;
  bool table :1;
  bool perm :1;
 } _AccumuloProxy_hasTablePermission_args__isset;
 
 class AccumuloProxy_hasTablePermission_args {
  public:
 
  AccumuloProxy_hasTablePermission_args(const AccumuloProxy_hasTablePermission_args&amp;);
  AccumuloProxy_hasTablePermission_args&amp; operator=(const AccumuloProxy_hasTablePermission_args&amp;);
   AccumuloProxy_hasTablePermission_args() : login(), user(), table(), perm((TablePermission::type)0) {
   }
 
  virtual ~AccumuloProxy_hasTablePermission_args() throw() {}

  virtual ~AccumuloProxy_hasTablePermission_args() throw();
   std::string login;
   std::string user;
   std::string table;
@@ -8527,21 +7872,13 @@ class AccumuloProxy_hasTablePermission_args {
 
   _AccumuloProxy_hasTablePermission_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_table(const std::string&amp; val) {
    table = val;
  }
  void __set_table(const std::string&amp; val);
 
  void __set_perm(const TablePermission::type val) {
    perm = val;
  }
  void __set_perm(const TablePermission::type val);
 
   bool operator == (const AccumuloProxy_hasTablePermission_args &amp; rhs) const
   {
@@ -8571,8 +7908,7 @@ class AccumuloProxy_hasTablePermission_pargs {
  public:
 
 
  virtual ~AccumuloProxy_hasTablePermission_pargs() throw() {}

  virtual ~AccumuloProxy_hasTablePermission_pargs() throw();
   const std::string* login;
   const std::string* user;
   const std::string* table;
@@ -8584,20 +7920,21 @@ class AccumuloProxy_hasTablePermission_pargs {
 
 typedef struct _AccumuloProxy_hasTablePermission_result__isset {
   _AccumuloProxy_hasTablePermission_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_hasTablePermission_result__isset;
 
 class AccumuloProxy_hasTablePermission_result {
  public:
 
  AccumuloProxy_hasTablePermission_result(const AccumuloProxy_hasTablePermission_result&amp;);
  AccumuloProxy_hasTablePermission_result&amp; operator=(const AccumuloProxy_hasTablePermission_result&amp;);
   AccumuloProxy_hasTablePermission_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_hasTablePermission_result() throw() {}

  virtual ~AccumuloProxy_hasTablePermission_result() throw();
   bool success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -8605,21 +7942,13 @@ class AccumuloProxy_hasTablePermission_result {
 
   _AccumuloProxy_hasTablePermission_result__isset __isset;
 
  void __set_success(const bool val) {
    success = val;
  }
  void __set_success(const bool val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_hasTablePermission_result &amp; rhs) const
   {
@@ -8646,18 +7975,17 @@ class AccumuloProxy_hasTablePermission_result {
 
 typedef struct _AccumuloProxy_hasTablePermission_presult__isset {
   _AccumuloProxy_hasTablePermission_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_hasTablePermission_presult__isset;
 
 class AccumuloProxy_hasTablePermission_presult {
  public:
 
 
  virtual ~AccumuloProxy_hasTablePermission_presult() throw() {}

  virtual ~AccumuloProxy_hasTablePermission_presult() throw();
   bool* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -8671,24 +7999,23 @@ class AccumuloProxy_hasTablePermission_presult {
 
 typedef struct _AccumuloProxy_listLocalUsers_args__isset {
   _AccumuloProxy_listLocalUsers_args__isset() : login(false) {}
  bool login;
  bool login :1;
 } _AccumuloProxy_listLocalUsers_args__isset;
 
 class AccumuloProxy_listLocalUsers_args {
  public:
 
  AccumuloProxy_listLocalUsers_args(const AccumuloProxy_listLocalUsers_args&amp;);
  AccumuloProxy_listLocalUsers_args&amp; operator=(const AccumuloProxy_listLocalUsers_args&amp;);
   AccumuloProxy_listLocalUsers_args() : login() {
   }
 
  virtual ~AccumuloProxy_listLocalUsers_args() throw() {}

  virtual ~AccumuloProxy_listLocalUsers_args() throw();
   std::string login;
 
   _AccumuloProxy_listLocalUsers_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_listLocalUsers_args &amp; rhs) const
   {
@@ -8712,8 +8039,7 @@ class AccumuloProxy_listLocalUsers_pargs {
  public:
 
 
  virtual ~AccumuloProxy_listLocalUsers_pargs() throw() {}

  virtual ~AccumuloProxy_listLocalUsers_pargs() throw();
   const std::string* login;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -8722,20 +8048,21 @@ class AccumuloProxy_listLocalUsers_pargs {
 
 typedef struct _AccumuloProxy_listLocalUsers_result__isset {
   _AccumuloProxy_listLocalUsers_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listLocalUsers_result__isset;
 
 class AccumuloProxy_listLocalUsers_result {
  public:
 
  AccumuloProxy_listLocalUsers_result(const AccumuloProxy_listLocalUsers_result&amp;);
  AccumuloProxy_listLocalUsers_result&amp; operator=(const AccumuloProxy_listLocalUsers_result&amp;);
   AccumuloProxy_listLocalUsers_result() {
   }
 
  virtual ~AccumuloProxy_listLocalUsers_result() throw() {}

  virtual ~AccumuloProxy_listLocalUsers_result() throw();
   std::set&lt;std::string&gt;  success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -8743,21 +8070,13 @@ class AccumuloProxy_listLocalUsers_result {
 
   _AccumuloProxy_listLocalUsers_result__isset __isset;
 
  void __set_success(const std::set&lt;std::string&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::set&lt;std::string&gt; &amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_listLocalUsers_result &amp; rhs) const
   {
@@ -8784,18 +8103,17 @@ class AccumuloProxy_listLocalUsers_result {
 
 typedef struct _AccumuloProxy_listLocalUsers_presult__isset {
   _AccumuloProxy_listLocalUsers_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_listLocalUsers_presult__isset;
 
 class AccumuloProxy_listLocalUsers_presult {
  public:
 
 
  virtual ~AccumuloProxy_listLocalUsers_presult() throw() {}

  virtual ~AccumuloProxy_listLocalUsers_presult() throw();
   std::set&lt;std::string&gt; * success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -8809,36 +8127,31 @@ class AccumuloProxy_listLocalUsers_presult {
 
 typedef struct _AccumuloProxy_revokeSystemPermission_args__isset {
   _AccumuloProxy_revokeSystemPermission_args__isset() : login(false), user(false), perm(false) {}
  bool login;
  bool user;
  bool perm;
  bool login :1;
  bool user :1;
  bool perm :1;
 } _AccumuloProxy_revokeSystemPermission_args__isset;
 
 class AccumuloProxy_revokeSystemPermission_args {
  public:
 
  AccumuloProxy_revokeSystemPermission_args(const AccumuloProxy_revokeSystemPermission_args&amp;);
  AccumuloProxy_revokeSystemPermission_args&amp; operator=(const AccumuloProxy_revokeSystemPermission_args&amp;);
   AccumuloProxy_revokeSystemPermission_args() : login(), user(), perm((SystemPermission::type)0) {
   }
 
  virtual ~AccumuloProxy_revokeSystemPermission_args() throw() {}

  virtual ~AccumuloProxy_revokeSystemPermission_args() throw();
   std::string login;
   std::string user;
   SystemPermission::type perm;
 
   _AccumuloProxy_revokeSystemPermission_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_perm(const SystemPermission::type val) {
    perm = val;
  }
  void __set_perm(const SystemPermission::type val);
 
   bool operator == (const AccumuloProxy_revokeSystemPermission_args &amp; rhs) const
   {
@@ -8866,8 +8179,7 @@ class AccumuloProxy_revokeSystemPermission_pargs {
  public:
 
 
  virtual ~AccumuloProxy_revokeSystemPermission_pargs() throw() {}

  virtual ~AccumuloProxy_revokeSystemPermission_pargs() throw();
   const std::string* login;
   const std::string* user;
   const SystemPermission::type* perm;
@@ -8878,30 +8190,27 @@ class AccumuloProxy_revokeSystemPermission_pargs {
 
 typedef struct _AccumuloProxy_revokeSystemPermission_result__isset {
   _AccumuloProxy_revokeSystemPermission_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_revokeSystemPermission_result__isset;
 
 class AccumuloProxy_revokeSystemPermission_result {
  public:
 
  AccumuloProxy_revokeSystemPermission_result(const AccumuloProxy_revokeSystemPermission_result&amp;);
  AccumuloProxy_revokeSystemPermission_result&amp; operator=(const AccumuloProxy_revokeSystemPermission_result&amp;);
   AccumuloProxy_revokeSystemPermission_result() {
   }
 
  virtual ~AccumuloProxy_revokeSystemPermission_result() throw() {}

  virtual ~AccumuloProxy_revokeSystemPermission_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
   _AccumuloProxy_revokeSystemPermission_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_revokeSystemPermission_result &amp; rhs) const
   {
@@ -8924,16 +8233,15 @@ class AccumuloProxy_revokeSystemPermission_result {
 
 typedef struct _AccumuloProxy_revokeSystemPermission_presult__isset {
   _AccumuloProxy_revokeSystemPermission_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_revokeSystemPermission_presult__isset;
 
 class AccumuloProxy_revokeSystemPermission_presult {
  public:
 
 
  virtual ~AccumuloProxy_revokeSystemPermission_presult() throw() {}

  virtual ~AccumuloProxy_revokeSystemPermission_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
 
@@ -8945,20 +8253,21 @@ class AccumuloProxy_revokeSystemPermission_presult {
 
 typedef struct _AccumuloProxy_revokeTablePermission_args__isset {
   _AccumuloProxy_revokeTablePermission_args__isset() : login(false), user(false), table(false), perm(false) {}
  bool login;
  bool user;
  bool table;
  bool perm;
  bool login :1;
  bool user :1;
  bool table :1;
  bool perm :1;
 } _AccumuloProxy_revokeTablePermission_args__isset;
 
 class AccumuloProxy_revokeTablePermission_args {
  public:
 
  AccumuloProxy_revokeTablePermission_args(const AccumuloProxy_revokeTablePermission_args&amp;);
  AccumuloProxy_revokeTablePermission_args&amp; operator=(const AccumuloProxy_revokeTablePermission_args&amp;);
   AccumuloProxy_revokeTablePermission_args() : login(), user(), table(), perm((TablePermission::type)0) {
   }
 
  virtual ~AccumuloProxy_revokeTablePermission_args() throw() {}

  virtual ~AccumuloProxy_revokeTablePermission_args() throw();
   std::string login;
   std::string user;
   std::string table;
@@ -8966,21 +8275,13 @@ class AccumuloProxy_revokeTablePermission_args {
 
   _AccumuloProxy_revokeTablePermission_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_table(const std::string&amp; val) {
    table = val;
  }
  void __set_table(const std::string&amp; val);
 
  void __set_perm(const TablePermission::type val) {
    perm = val;
  }
  void __set_perm(const TablePermission::type val);
 
   bool operator == (const AccumuloProxy_revokeTablePermission_args &amp; rhs) const
   {
@@ -9010,8 +8311,7 @@ class AccumuloProxy_revokeTablePermission_pargs {
  public:
 
 
  virtual ~AccumuloProxy_revokeTablePermission_pargs() throw() {}

  virtual ~AccumuloProxy_revokeTablePermission_pargs() throw();
   const std::string* login;
   const std::string* user;
   const std::string* table;
@@ -9023,36 +8323,31 @@ class AccumuloProxy_revokeTablePermission_pargs {
 
 typedef struct _AccumuloProxy_revokeTablePermission_result__isset {
   _AccumuloProxy_revokeTablePermission_result__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_revokeTablePermission_result__isset;
 
 class AccumuloProxy_revokeTablePermission_result {
  public:
 
  AccumuloProxy_revokeTablePermission_result(const AccumuloProxy_revokeTablePermission_result&amp;);
  AccumuloProxy_revokeTablePermission_result&amp; operator=(const AccumuloProxy_revokeTablePermission_result&amp;);
   AccumuloProxy_revokeTablePermission_result() {
   }
 
  virtual ~AccumuloProxy_revokeTablePermission_result() throw() {}

  virtual ~AccumuloProxy_revokeTablePermission_result() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
 
   _AccumuloProxy_revokeTablePermission_result__isset __isset;
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_revokeTablePermission_result &amp; rhs) const
   {
@@ -9077,17 +8372,16 @@ class AccumuloProxy_revokeTablePermission_result {
 
 typedef struct _AccumuloProxy_revokeTablePermission_presult__isset {
   _AccumuloProxy_revokeTablePermission_presult__isset() : ouch1(false), ouch2(false), ouch3(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_revokeTablePermission_presult__isset;
 
 class AccumuloProxy_revokeTablePermission_presult {
  public:
 
 
  virtual ~AccumuloProxy_revokeTablePermission_presult() throw() {}

  virtual ~AccumuloProxy_revokeTablePermission_presult() throw();
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -9100,36 +8394,31 @@ class AccumuloProxy_revokeTablePermission_presult {
 
 typedef struct _AccumuloProxy_createBatchScanner_args__isset {
   _AccumuloProxy_createBatchScanner_args__isset() : login(false), tableName(false), options(false) {}
  bool login;
  bool tableName;
  bool options;
  bool login :1;
  bool tableName :1;
  bool options :1;
 } _AccumuloProxy_createBatchScanner_args__isset;
 
 class AccumuloProxy_createBatchScanner_args {
  public:
 
  AccumuloProxy_createBatchScanner_args(const AccumuloProxy_createBatchScanner_args&amp;);
  AccumuloProxy_createBatchScanner_args&amp; operator=(const AccumuloProxy_createBatchScanner_args&amp;);
   AccumuloProxy_createBatchScanner_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_createBatchScanner_args() throw() {}

  virtual ~AccumuloProxy_createBatchScanner_args() throw();
   std::string login;
   std::string tableName;
   BatchScanOptions options;
 
   _AccumuloProxy_createBatchScanner_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_options(const BatchScanOptions&amp; val) {
    options = val;
  }
  void __set_options(const BatchScanOptions&amp; val);
 
   bool operator == (const AccumuloProxy_createBatchScanner_args &amp; rhs) const
   {
@@ -9157,8 +8446,7 @@ class AccumuloProxy_createBatchScanner_pargs {
  public:
 
 
  virtual ~AccumuloProxy_createBatchScanner_pargs() throw() {}

  virtual ~AccumuloProxy_createBatchScanner_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const BatchScanOptions* options;
@@ -9169,20 +8457,21 @@ class AccumuloProxy_createBatchScanner_pargs {
 
 typedef struct _AccumuloProxy_createBatchScanner_result__isset {
   _AccumuloProxy_createBatchScanner_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createBatchScanner_result__isset;
 
 class AccumuloProxy_createBatchScanner_result {
  public:
 
  AccumuloProxy_createBatchScanner_result(const AccumuloProxy_createBatchScanner_result&amp;);
  AccumuloProxy_createBatchScanner_result&amp; operator=(const AccumuloProxy_createBatchScanner_result&amp;);
   AccumuloProxy_createBatchScanner_result() : success() {
   }
 
  virtual ~AccumuloProxy_createBatchScanner_result() throw() {}

  virtual ~AccumuloProxy_createBatchScanner_result() throw();
   std::string success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -9190,21 +8479,13 @@ class AccumuloProxy_createBatchScanner_result {
 
   _AccumuloProxy_createBatchScanner_result__isset __isset;
 
  void __set_success(const std::string&amp; val) {
    success = val;
  }
  void __set_success(const std::string&amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_createBatchScanner_result &amp; rhs) const
   {
@@ -9231,18 +8512,17 @@ class AccumuloProxy_createBatchScanner_result {
 
 typedef struct _AccumuloProxy_createBatchScanner_presult__isset {
   _AccumuloProxy_createBatchScanner_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createBatchScanner_presult__isset;
 
 class AccumuloProxy_createBatchScanner_presult {
  public:
 
 
  virtual ~AccumuloProxy_createBatchScanner_presult() throw() {}

  virtual ~AccumuloProxy_createBatchScanner_presult() throw();
   std::string* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -9256,36 +8536,31 @@ class AccumuloProxy_createBatchScanner_presult {
 
 typedef struct _AccumuloProxy_createScanner_args__isset {
   _AccumuloProxy_createScanner_args__isset() : login(false), tableName(false), options(false) {}
  bool login;
  bool tableName;
  bool options;
  bool login :1;
  bool tableName :1;
  bool options :1;
 } _AccumuloProxy_createScanner_args__isset;
 
 class AccumuloProxy_createScanner_args {
  public:
 
  AccumuloProxy_createScanner_args(const AccumuloProxy_createScanner_args&amp;);
  AccumuloProxy_createScanner_args&amp; operator=(const AccumuloProxy_createScanner_args&amp;);
   AccumuloProxy_createScanner_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_createScanner_args() throw() {}

  virtual ~AccumuloProxy_createScanner_args() throw();
   std::string login;
   std::string tableName;
   ScanOptions options;
 
   _AccumuloProxy_createScanner_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_options(const ScanOptions&amp; val) {
    options = val;
  }
  void __set_options(const ScanOptions&amp; val);
 
   bool operator == (const AccumuloProxy_createScanner_args &amp; rhs) const
   {
@@ -9313,8 +8588,7 @@ class AccumuloProxy_createScanner_pargs {
  public:
 
 
  virtual ~AccumuloProxy_createScanner_pargs() throw() {}

  virtual ~AccumuloProxy_createScanner_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const ScanOptions* options;
@@ -9325,20 +8599,21 @@ class AccumuloProxy_createScanner_pargs {
 
 typedef struct _AccumuloProxy_createScanner_result__isset {
   _AccumuloProxy_createScanner_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createScanner_result__isset;
 
 class AccumuloProxy_createScanner_result {
  public:
 
  AccumuloProxy_createScanner_result(const AccumuloProxy_createScanner_result&amp;);
  AccumuloProxy_createScanner_result&amp; operator=(const AccumuloProxy_createScanner_result&amp;);
   AccumuloProxy_createScanner_result() : success() {
   }
 
  virtual ~AccumuloProxy_createScanner_result() throw() {}

  virtual ~AccumuloProxy_createScanner_result() throw();
   std::string success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -9346,21 +8621,13 @@ class AccumuloProxy_createScanner_result {
 
   _AccumuloProxy_createScanner_result__isset __isset;
 
  void __set_success(const std::string&amp; val) {
    success = val;
  }
  void __set_success(const std::string&amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_createScanner_result &amp; rhs) const
   {
@@ -9387,18 +8654,17 @@ class AccumuloProxy_createScanner_result {
 
 typedef struct _AccumuloProxy_createScanner_presult__isset {
   _AccumuloProxy_createScanner_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createScanner_presult__isset;
 
 class AccumuloProxy_createScanner_presult {
  public:
 
 
  virtual ~AccumuloProxy_createScanner_presult() throw() {}

  virtual ~AccumuloProxy_createScanner_presult() throw();
   std::string* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -9412,24 +8678,23 @@ class AccumuloProxy_createScanner_presult {
 
 typedef struct _AccumuloProxy_hasNext_args__isset {
   _AccumuloProxy_hasNext_args__isset() : scanner(false) {}
  bool scanner;
  bool scanner :1;
 } _AccumuloProxy_hasNext_args__isset;
 
 class AccumuloProxy_hasNext_args {
  public:
 
  AccumuloProxy_hasNext_args(const AccumuloProxy_hasNext_args&amp;);
  AccumuloProxy_hasNext_args&amp; operator=(const AccumuloProxy_hasNext_args&amp;);
   AccumuloProxy_hasNext_args() : scanner() {
   }
 
  virtual ~AccumuloProxy_hasNext_args() throw() {}

  virtual ~AccumuloProxy_hasNext_args() throw();
   std::string scanner;
 
   _AccumuloProxy_hasNext_args__isset __isset;
 
  void __set_scanner(const std::string&amp; val) {
    scanner = val;
  }
  void __set_scanner(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_hasNext_args &amp; rhs) const
   {
@@ -9453,8 +8718,7 @@ class AccumuloProxy_hasNext_pargs {
  public:
 
 
  virtual ~AccumuloProxy_hasNext_pargs() throw() {}

  virtual ~AccumuloProxy_hasNext_pargs() throw();
   const std::string* scanner;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -9463,30 +8727,27 @@ class AccumuloProxy_hasNext_pargs {
 
 typedef struct _AccumuloProxy_hasNext_result__isset {
   _AccumuloProxy_hasNext_result__isset() : success(false), ouch1(false) {}
  bool success;
  bool ouch1;
  bool success :1;
  bool ouch1 :1;
 } _AccumuloProxy_hasNext_result__isset;
 
 class AccumuloProxy_hasNext_result {
  public:
 
  AccumuloProxy_hasNext_result(const AccumuloProxy_hasNext_result&amp;);
  AccumuloProxy_hasNext_result&amp; operator=(const AccumuloProxy_hasNext_result&amp;);
   AccumuloProxy_hasNext_result() : success(0) {
   }
 
  virtual ~AccumuloProxy_hasNext_result() throw() {}

  virtual ~AccumuloProxy_hasNext_result() throw();
   bool success;
   UnknownScanner ouch1;
 
   _AccumuloProxy_hasNext_result__isset __isset;
 
  void __set_success(const bool val) {
    success = val;
  }
  void __set_success(const bool val);
 
  void __set_ouch1(const UnknownScanner&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const UnknownScanner&amp; val);
 
   bool operator == (const AccumuloProxy_hasNext_result &amp; rhs) const
   {
@@ -9509,16 +8770,15 @@ class AccumuloProxy_hasNext_result {
 
 typedef struct _AccumuloProxy_hasNext_presult__isset {
   _AccumuloProxy_hasNext_presult__isset() : success(false), ouch1(false) {}
  bool success;
  bool ouch1;
  bool success :1;
  bool ouch1 :1;
 } _AccumuloProxy_hasNext_presult__isset;
 
 class AccumuloProxy_hasNext_presult {
  public:
 
 
  virtual ~AccumuloProxy_hasNext_presult() throw() {}

  virtual ~AccumuloProxy_hasNext_presult() throw();
   bool* success;
   UnknownScanner ouch1;
 
@@ -9530,24 +8790,23 @@ class AccumuloProxy_hasNext_presult {
 
 typedef struct _AccumuloProxy_nextEntry_args__isset {
   _AccumuloProxy_nextEntry_args__isset() : scanner(false) {}
  bool scanner;
  bool scanner :1;
 } _AccumuloProxy_nextEntry_args__isset;
 
 class AccumuloProxy_nextEntry_args {
  public:
 
  AccumuloProxy_nextEntry_args(const AccumuloProxy_nextEntry_args&amp;);
  AccumuloProxy_nextEntry_args&amp; operator=(const AccumuloProxy_nextEntry_args&amp;);
   AccumuloProxy_nextEntry_args() : scanner() {
   }
 
  virtual ~AccumuloProxy_nextEntry_args() throw() {}

  virtual ~AccumuloProxy_nextEntry_args() throw();
   std::string scanner;
 
   _AccumuloProxy_nextEntry_args__isset __isset;
 
  void __set_scanner(const std::string&amp; val) {
    scanner = val;
  }
  void __set_scanner(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_nextEntry_args &amp; rhs) const
   {
@@ -9571,8 +8830,7 @@ class AccumuloProxy_nextEntry_pargs {
  public:
 
 
  virtual ~AccumuloProxy_nextEntry_pargs() throw() {}

  virtual ~AccumuloProxy_nextEntry_pargs() throw();
   const std::string* scanner;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -9581,20 +8839,21 @@ class AccumuloProxy_nextEntry_pargs {
 
 typedef struct _AccumuloProxy_nextEntry_result__isset {
   _AccumuloProxy_nextEntry_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_nextEntry_result__isset;
 
 class AccumuloProxy_nextEntry_result {
  public:
 
  AccumuloProxy_nextEntry_result(const AccumuloProxy_nextEntry_result&amp;);
  AccumuloProxy_nextEntry_result&amp; operator=(const AccumuloProxy_nextEntry_result&amp;);
   AccumuloProxy_nextEntry_result() {
   }
 
  virtual ~AccumuloProxy_nextEntry_result() throw() {}

  virtual ~AccumuloProxy_nextEntry_result() throw();
   KeyValueAndPeek success;
   NoMoreEntriesException ouch1;
   UnknownScanner ouch2;
@@ -9602,21 +8861,13 @@ class AccumuloProxy_nextEntry_result {
 
   _AccumuloProxy_nextEntry_result__isset __isset;
 
  void __set_success(const KeyValueAndPeek&amp; val) {
    success = val;
  }
  void __set_success(const KeyValueAndPeek&amp; val);
 
  void __set_ouch1(const NoMoreEntriesException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const NoMoreEntriesException&amp; val);
 
  void __set_ouch2(const UnknownScanner&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const UnknownScanner&amp; val);
 
  void __set_ouch3(const AccumuloSecurityException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_nextEntry_result &amp; rhs) const
   {
@@ -9643,18 +8894,17 @@ class AccumuloProxy_nextEntry_result {
 
 typedef struct _AccumuloProxy_nextEntry_presult__isset {
   _AccumuloProxy_nextEntry_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_nextEntry_presult__isset;
 
 class AccumuloProxy_nextEntry_presult {
  public:
 
 
  virtual ~AccumuloProxy_nextEntry_presult() throw() {}

  virtual ~AccumuloProxy_nextEntry_presult() throw();
   KeyValueAndPeek* success;
   NoMoreEntriesException ouch1;
   UnknownScanner ouch2;
@@ -9668,30 +8918,27 @@ class AccumuloProxy_nextEntry_presult {
 
 typedef struct _AccumuloProxy_nextK_args__isset {
   _AccumuloProxy_nextK_args__isset() : scanner(false), k(false) {}
  bool scanner;
  bool k;
  bool scanner :1;
  bool k :1;
 } _AccumuloProxy_nextK_args__isset;
 
 class AccumuloProxy_nextK_args {
  public:
 
  AccumuloProxy_nextK_args(const AccumuloProxy_nextK_args&amp;);
  AccumuloProxy_nextK_args&amp; operator=(const AccumuloProxy_nextK_args&amp;);
   AccumuloProxy_nextK_args() : scanner(), k(0) {
   }
 
  virtual ~AccumuloProxy_nextK_args() throw() {}

  virtual ~AccumuloProxy_nextK_args() throw();
   std::string scanner;
   int32_t k;
 
   _AccumuloProxy_nextK_args__isset __isset;
 
  void __set_scanner(const std::string&amp; val) {
    scanner = val;
  }
  void __set_scanner(const std::string&amp; val);
 
  void __set_k(const int32_t val) {
    k = val;
  }
  void __set_k(const int32_t val);
 
   bool operator == (const AccumuloProxy_nextK_args &amp; rhs) const
   {
@@ -9717,8 +8964,7 @@ class AccumuloProxy_nextK_pargs {
  public:
 
 
  virtual ~AccumuloProxy_nextK_pargs() throw() {}

  virtual ~AccumuloProxy_nextK_pargs() throw();
   const std::string* scanner;
   const int32_t* k;
 
@@ -9728,20 +8974,21 @@ class AccumuloProxy_nextK_pargs {
 
 typedef struct _AccumuloProxy_nextK_result__isset {
   _AccumuloProxy_nextK_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_nextK_result__isset;
 
 class AccumuloProxy_nextK_result {
  public:
 
  AccumuloProxy_nextK_result(const AccumuloProxy_nextK_result&amp;);
  AccumuloProxy_nextK_result&amp; operator=(const AccumuloProxy_nextK_result&amp;);
   AccumuloProxy_nextK_result() {
   }
 
  virtual ~AccumuloProxy_nextK_result() throw() {}

  virtual ~AccumuloProxy_nextK_result() throw();
   ScanResult success;
   NoMoreEntriesException ouch1;
   UnknownScanner ouch2;
@@ -9749,21 +8996,13 @@ class AccumuloProxy_nextK_result {
 
   _AccumuloProxy_nextK_result__isset __isset;
 
  void __set_success(const ScanResult&amp; val) {
    success = val;
  }
  void __set_success(const ScanResult&amp; val);
 
  void __set_ouch1(const NoMoreEntriesException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const NoMoreEntriesException&amp; val);
 
  void __set_ouch2(const UnknownScanner&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const UnknownScanner&amp; val);
 
  void __set_ouch3(const AccumuloSecurityException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_nextK_result &amp; rhs) const
   {
@@ -9790,18 +9029,17 @@ class AccumuloProxy_nextK_result {
 
 typedef struct _AccumuloProxy_nextK_presult__isset {
   _AccumuloProxy_nextK_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_nextK_presult__isset;
 
 class AccumuloProxy_nextK_presult {
  public:
 
 
  virtual ~AccumuloProxy_nextK_presult() throw() {}

  virtual ~AccumuloProxy_nextK_presult() throw();
   ScanResult* success;
   NoMoreEntriesException ouch1;
   UnknownScanner ouch2;
@@ -9815,24 +9053,23 @@ class AccumuloProxy_nextK_presult {
 
 typedef struct _AccumuloProxy_closeScanner_args__isset {
   _AccumuloProxy_closeScanner_args__isset() : scanner(false) {}
  bool scanner;
  bool scanner :1;
 } _AccumuloProxy_closeScanner_args__isset;
 
 class AccumuloProxy_closeScanner_args {
  public:
 
  AccumuloProxy_closeScanner_args(const AccumuloProxy_closeScanner_args&amp;);
  AccumuloProxy_closeScanner_args&amp; operator=(const AccumuloProxy_closeScanner_args&amp;);
   AccumuloProxy_closeScanner_args() : scanner() {
   }
 
  virtual ~AccumuloProxy_closeScanner_args() throw() {}

  virtual ~AccumuloProxy_closeScanner_args() throw();
   std::string scanner;
 
   _AccumuloProxy_closeScanner_args__isset __isset;
 
  void __set_scanner(const std::string&amp; val) {
    scanner = val;
  }
  void __set_scanner(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_closeScanner_args &amp; rhs) const
   {
@@ -9856,8 +9093,7 @@ class AccumuloProxy_closeScanner_pargs {
  public:
 
 
  virtual ~AccumuloProxy_closeScanner_pargs() throw() {}

  virtual ~AccumuloProxy_closeScanner_pargs() throw();
   const std::string* scanner;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -9866,24 +9102,23 @@ class AccumuloProxy_closeScanner_pargs {
 
 typedef struct _AccumuloProxy_closeScanner_result__isset {
   _AccumuloProxy_closeScanner_result__isset() : ouch1(false) {}
  bool ouch1;
  bool ouch1 :1;
 } _AccumuloProxy_closeScanner_result__isset;
 
 class AccumuloProxy_closeScanner_result {
  public:
 
  AccumuloProxy_closeScanner_result(const AccumuloProxy_closeScanner_result&amp;);
  AccumuloProxy_closeScanner_result&amp; operator=(const AccumuloProxy_closeScanner_result&amp;);
   AccumuloProxy_closeScanner_result() {
   }
 
  virtual ~AccumuloProxy_closeScanner_result() throw() {}

  virtual ~AccumuloProxy_closeScanner_result() throw();
   UnknownScanner ouch1;
 
   _AccumuloProxy_closeScanner_result__isset __isset;
 
  void __set_ouch1(const UnknownScanner&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const UnknownScanner&amp; val);
 
   bool operator == (const AccumuloProxy_closeScanner_result &amp; rhs) const
   {
@@ -9904,15 +9139,14 @@ class AccumuloProxy_closeScanner_result {
 
 typedef struct _AccumuloProxy_closeScanner_presult__isset {
   _AccumuloProxy_closeScanner_presult__isset() : ouch1(false) {}
  bool ouch1;
  bool ouch1 :1;
 } _AccumuloProxy_closeScanner_presult__isset;
 
 class AccumuloProxy_closeScanner_presult {
  public:
 
 
  virtual ~AccumuloProxy_closeScanner_presult() throw() {}

  virtual ~AccumuloProxy_closeScanner_presult() throw();
   UnknownScanner ouch1;
 
   _AccumuloProxy_closeScanner_presult__isset __isset;
@@ -9923,36 +9157,31 @@ class AccumuloProxy_closeScanner_presult {
 
 typedef struct _AccumuloProxy_updateAndFlush_args__isset {
   _AccumuloProxy_updateAndFlush_args__isset() : login(false), tableName(false), cells(false) {}
  bool login;
  bool tableName;
  bool cells;
  bool login :1;
  bool tableName :1;
  bool cells :1;
 } _AccumuloProxy_updateAndFlush_args__isset;
 
 class AccumuloProxy_updateAndFlush_args {
  public:
 
  AccumuloProxy_updateAndFlush_args(const AccumuloProxy_updateAndFlush_args&amp;);
  AccumuloProxy_updateAndFlush_args&amp; operator=(const AccumuloProxy_updateAndFlush_args&amp;);
   AccumuloProxy_updateAndFlush_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_updateAndFlush_args() throw() {}

  virtual ~AccumuloProxy_updateAndFlush_args() throw();
   std::string login;
   std::string tableName;
   std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt;  cells;
 
   _AccumuloProxy_updateAndFlush_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_cells(const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; val) {
    cells = val;
  }
  void __set_cells(const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; val);
 
   bool operator == (const AccumuloProxy_updateAndFlush_args &amp; rhs) const
   {
@@ -9980,8 +9209,7 @@ class AccumuloProxy_updateAndFlush_pargs {
  public:
 
 
  virtual ~AccumuloProxy_updateAndFlush_pargs() throw() {}

  virtual ~AccumuloProxy_updateAndFlush_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; * cells;
@@ -9992,20 +9220,21 @@ class AccumuloProxy_updateAndFlush_pargs {
 
 typedef struct _AccumuloProxy_updateAndFlush_result__isset {
   _AccumuloProxy_updateAndFlush_result__isset() : outch1(false), ouch2(false), ouch3(false), ouch4(false) {}
  bool outch1;
  bool ouch2;
  bool ouch3;
  bool ouch4;
  bool outch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_updateAndFlush_result__isset;
 
 class AccumuloProxy_updateAndFlush_result {
  public:
 
  AccumuloProxy_updateAndFlush_result(const AccumuloProxy_updateAndFlush_result&amp;);
  AccumuloProxy_updateAndFlush_result&amp; operator=(const AccumuloProxy_updateAndFlush_result&amp;);
   AccumuloProxy_updateAndFlush_result() {
   }
 
  virtual ~AccumuloProxy_updateAndFlush_result() throw() {}

  virtual ~AccumuloProxy_updateAndFlush_result() throw();
   AccumuloException outch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -10013,21 +9242,13 @@ class AccumuloProxy_updateAndFlush_result {
 
   _AccumuloProxy_updateAndFlush_result__isset __isset;
 
  void __set_outch1(const AccumuloException&amp; val) {
    outch1 = val;
  }
  void __set_outch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
  void __set_ouch4(const MutationsRejectedException&amp; val) {
    ouch4 = val;
  }
  void __set_ouch4(const MutationsRejectedException&amp; val);
 
   bool operator == (const AccumuloProxy_updateAndFlush_result &amp; rhs) const
   {
@@ -10054,18 +9275,17 @@ class AccumuloProxy_updateAndFlush_result {
 
 typedef struct _AccumuloProxy_updateAndFlush_presult__isset {
   _AccumuloProxy_updateAndFlush_presult__isset() : outch1(false), ouch2(false), ouch3(false), ouch4(false) {}
  bool outch1;
  bool ouch2;
  bool ouch3;
  bool ouch4;
  bool outch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
  bool ouch4 :1;
 } _AccumuloProxy_updateAndFlush_presult__isset;
 
 class AccumuloProxy_updateAndFlush_presult {
  public:
 
 
  virtual ~AccumuloProxy_updateAndFlush_presult() throw() {}

  virtual ~AccumuloProxy_updateAndFlush_presult() throw();
   AccumuloException outch1;
   AccumuloSecurityException ouch2;
   TableNotFoundException ouch3;
@@ -10079,36 +9299,31 @@ class AccumuloProxy_updateAndFlush_presult {
 
 typedef struct _AccumuloProxy_createWriter_args__isset {
   _AccumuloProxy_createWriter_args__isset() : login(false), tableName(false), opts(false) {}
  bool login;
  bool tableName;
  bool opts;
  bool login :1;
  bool tableName :1;
  bool opts :1;
 } _AccumuloProxy_createWriter_args__isset;
 
 class AccumuloProxy_createWriter_args {
  public:
 
  AccumuloProxy_createWriter_args(const AccumuloProxy_createWriter_args&amp;);
  AccumuloProxy_createWriter_args&amp; operator=(const AccumuloProxy_createWriter_args&amp;);
   AccumuloProxy_createWriter_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_createWriter_args() throw() {}

  virtual ~AccumuloProxy_createWriter_args() throw();
   std::string login;
   std::string tableName;
   WriterOptions opts;
 
   _AccumuloProxy_createWriter_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_opts(const WriterOptions&amp; val) {
    opts = val;
  }
  void __set_opts(const WriterOptions&amp; val);
 
   bool operator == (const AccumuloProxy_createWriter_args &amp; rhs) const
   {
@@ -10136,8 +9351,7 @@ class AccumuloProxy_createWriter_pargs {
  public:
 
 
  virtual ~AccumuloProxy_createWriter_pargs() throw() {}

  virtual ~AccumuloProxy_createWriter_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const WriterOptions* opts;
@@ -10148,20 +9362,21 @@ class AccumuloProxy_createWriter_pargs {
 
 typedef struct _AccumuloProxy_createWriter_result__isset {
   _AccumuloProxy_createWriter_result__isset() : success(false), outch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool outch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool outch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createWriter_result__isset;
 
 class AccumuloProxy_createWriter_result {
  public:
 
  AccumuloProxy_createWriter_result(const AccumuloProxy_createWriter_result&amp;);
  AccumuloProxy_createWriter_result&amp; operator=(const AccumuloProxy_createWriter_result&amp;);
   AccumuloProxy_createWriter_result() : success() {
   }
 
  virtual ~AccumuloProxy_createWriter_result() throw() {}

  virtual ~AccumuloProxy_createWriter_result() throw();
   std::string success;
   AccumuloException outch1;
   AccumuloSecurityException ouch2;
@@ -10169,21 +9384,13 @@ class AccumuloProxy_createWriter_result {
 
   _AccumuloProxy_createWriter_result__isset __isset;
 
  void __set_success(const std::string&amp; val) {
    success = val;
  }
  void __set_success(const std::string&amp; val);
 
  void __set_outch1(const AccumuloException&amp; val) {
    outch1 = val;
  }
  void __set_outch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_createWriter_result &amp; rhs) const
   {
@@ -10210,18 +9417,17 @@ class AccumuloProxy_createWriter_result {
 
 typedef struct _AccumuloProxy_createWriter_presult__isset {
   _AccumuloProxy_createWriter_presult__isset() : success(false), outch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool outch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool outch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createWriter_presult__isset;
 
 class AccumuloProxy_createWriter_presult {
  public:
 
 
  virtual ~AccumuloProxy_createWriter_presult() throw() {}

  virtual ~AccumuloProxy_createWriter_presult() throw();
   std::string* success;
   AccumuloException outch1;
   AccumuloSecurityException ouch2;
@@ -10235,30 +9441,27 @@ class AccumuloProxy_createWriter_presult {
 
 typedef struct _AccumuloProxy_update_args__isset {
   _AccumuloProxy_update_args__isset() : writer(false), cells(false) {}
  bool writer;
  bool cells;
  bool writer :1;
  bool cells :1;
 } _AccumuloProxy_update_args__isset;
 
 class AccumuloProxy_update_args {
  public:
 
  AccumuloProxy_update_args(const AccumuloProxy_update_args&amp;);
  AccumuloProxy_update_args&amp; operator=(const AccumuloProxy_update_args&amp;);
   AccumuloProxy_update_args() : writer() {
   }
 
  virtual ~AccumuloProxy_update_args() throw() {}

  virtual ~AccumuloProxy_update_args() throw();
   std::string writer;
   std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt;  cells;
 
   _AccumuloProxy_update_args__isset __isset;
 
  void __set_writer(const std::string&amp; val) {
    writer = val;
  }
  void __set_writer(const std::string&amp; val);
 
  void __set_cells(const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; val) {
    cells = val;
  }
  void __set_cells(const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; &amp; val);
 
   bool operator == (const AccumuloProxy_update_args &amp; rhs) const
   {
@@ -10284,8 +9487,7 @@ class AccumuloProxy_update_pargs {
  public:
 
 
  virtual ~AccumuloProxy_update_pargs() throw() {}

  virtual ~AccumuloProxy_update_pargs() throw();
   const std::string* writer;
   const std::map&lt;std::string, std::vector&lt;ColumnUpdate&gt; &gt; * cells;
 
@@ -10295,24 +9497,23 @@ class AccumuloProxy_update_pargs {
 
 typedef struct _AccumuloProxy_flush_args__isset {
   _AccumuloProxy_flush_args__isset() : writer(false) {}
  bool writer;
  bool writer :1;
 } _AccumuloProxy_flush_args__isset;
 
 class AccumuloProxy_flush_args {
  public:
 
  AccumuloProxy_flush_args(const AccumuloProxy_flush_args&amp;);
  AccumuloProxy_flush_args&amp; operator=(const AccumuloProxy_flush_args&amp;);
   AccumuloProxy_flush_args() : writer() {
   }
 
  virtual ~AccumuloProxy_flush_args() throw() {}

  virtual ~AccumuloProxy_flush_args() throw();
   std::string writer;
 
   _AccumuloProxy_flush_args__isset __isset;
 
  void __set_writer(const std::string&amp; val) {
    writer = val;
  }
  void __set_writer(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_flush_args &amp; rhs) const
   {
@@ -10336,8 +9537,7 @@ class AccumuloProxy_flush_pargs {
  public:
 
 
  virtual ~AccumuloProxy_flush_pargs() throw() {}

  virtual ~AccumuloProxy_flush_pargs() throw();
   const std::string* writer;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -10346,30 +9546,27 @@ class AccumuloProxy_flush_pargs {
 
 typedef struct _AccumuloProxy_flush_result__isset {
   _AccumuloProxy_flush_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_flush_result__isset;
 
 class AccumuloProxy_flush_result {
  public:
 
  AccumuloProxy_flush_result(const AccumuloProxy_flush_result&amp;);
  AccumuloProxy_flush_result&amp; operator=(const AccumuloProxy_flush_result&amp;);
   AccumuloProxy_flush_result() {
   }
 
  virtual ~AccumuloProxy_flush_result() throw() {}

  virtual ~AccumuloProxy_flush_result() throw();
   UnknownWriter ouch1;
   MutationsRejectedException ouch2;
 
   _AccumuloProxy_flush_result__isset __isset;
 
  void __set_ouch1(const UnknownWriter&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const UnknownWriter&amp; val);
 
  void __set_ouch2(const MutationsRejectedException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const MutationsRejectedException&amp; val);
 
   bool operator == (const AccumuloProxy_flush_result &amp; rhs) const
   {
@@ -10392,16 +9589,15 @@ class AccumuloProxy_flush_result {
 
 typedef struct _AccumuloProxy_flush_presult__isset {
   _AccumuloProxy_flush_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_flush_presult__isset;
 
 class AccumuloProxy_flush_presult {
  public:
 
 
  virtual ~AccumuloProxy_flush_presult() throw() {}

  virtual ~AccumuloProxy_flush_presult() throw();
   UnknownWriter ouch1;
   MutationsRejectedException ouch2;
 
@@ -10413,24 +9609,23 @@ class AccumuloProxy_flush_presult {
 
 typedef struct _AccumuloProxy_closeWriter_args__isset {
   _AccumuloProxy_closeWriter_args__isset() : writer(false) {}
  bool writer;
  bool writer :1;
 } _AccumuloProxy_closeWriter_args__isset;
 
 class AccumuloProxy_closeWriter_args {
  public:
 
  AccumuloProxy_closeWriter_args(const AccumuloProxy_closeWriter_args&amp;);
  AccumuloProxy_closeWriter_args&amp; operator=(const AccumuloProxy_closeWriter_args&amp;);
   AccumuloProxy_closeWriter_args() : writer() {
   }
 
  virtual ~AccumuloProxy_closeWriter_args() throw() {}

  virtual ~AccumuloProxy_closeWriter_args() throw();
   std::string writer;
 
   _AccumuloProxy_closeWriter_args__isset __isset;
 
  void __set_writer(const std::string&amp; val) {
    writer = val;
  }
  void __set_writer(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_closeWriter_args &amp; rhs) const
   {
@@ -10454,8 +9649,7 @@ class AccumuloProxy_closeWriter_pargs {
  public:
 
 
  virtual ~AccumuloProxy_closeWriter_pargs() throw() {}

  virtual ~AccumuloProxy_closeWriter_pargs() throw();
   const std::string* writer;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -10464,30 +9658,27 @@ class AccumuloProxy_closeWriter_pargs {
 
 typedef struct _AccumuloProxy_closeWriter_result__isset {
   _AccumuloProxy_closeWriter_result__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_closeWriter_result__isset;
 
 class AccumuloProxy_closeWriter_result {
  public:
 
  AccumuloProxy_closeWriter_result(const AccumuloProxy_closeWriter_result&amp;);
  AccumuloProxy_closeWriter_result&amp; operator=(const AccumuloProxy_closeWriter_result&amp;);
   AccumuloProxy_closeWriter_result() {
   }
 
  virtual ~AccumuloProxy_closeWriter_result() throw() {}

  virtual ~AccumuloProxy_closeWriter_result() throw();
   UnknownWriter ouch1;
   MutationsRejectedException ouch2;
 
   _AccumuloProxy_closeWriter_result__isset __isset;
 
  void __set_ouch1(const UnknownWriter&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const UnknownWriter&amp; val);
 
  void __set_ouch2(const MutationsRejectedException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const MutationsRejectedException&amp; val);
 
   bool operator == (const AccumuloProxy_closeWriter_result &amp; rhs) const
   {
@@ -10510,16 +9701,15 @@ class AccumuloProxy_closeWriter_result {
 
 typedef struct _AccumuloProxy_closeWriter_presult__isset {
   _AccumuloProxy_closeWriter_presult__isset() : ouch1(false), ouch2(false) {}
  bool ouch1;
  bool ouch2;
  bool ouch1 :1;
  bool ouch2 :1;
 } _AccumuloProxy_closeWriter_presult__isset;
 
 class AccumuloProxy_closeWriter_presult {
  public:
 
 
  virtual ~AccumuloProxy_closeWriter_presult() throw() {}

  virtual ~AccumuloProxy_closeWriter_presult() throw();
   UnknownWriter ouch1;
   MutationsRejectedException ouch2;
 
@@ -10531,20 +9721,21 @@ class AccumuloProxy_closeWriter_presult {
 
 typedef struct _AccumuloProxy_updateRowConditionally_args__isset {
   _AccumuloProxy_updateRowConditionally_args__isset() : login(false), tableName(false), row(false), updates(false) {}
  bool login;
  bool tableName;
  bool row;
  bool updates;
  bool login :1;
  bool tableName :1;
  bool row :1;
  bool updates :1;
 } _AccumuloProxy_updateRowConditionally_args__isset;
 
 class AccumuloProxy_updateRowConditionally_args {
  public:
 
  AccumuloProxy_updateRowConditionally_args(const AccumuloProxy_updateRowConditionally_args&amp;);
  AccumuloProxy_updateRowConditionally_args&amp; operator=(const AccumuloProxy_updateRowConditionally_args&amp;);
   AccumuloProxy_updateRowConditionally_args() : login(), tableName(), row() {
   }
 
  virtual ~AccumuloProxy_updateRowConditionally_args() throw() {}

  virtual ~AccumuloProxy_updateRowConditionally_args() throw();
   std::string login;
   std::string tableName;
   std::string row;
@@ -10552,21 +9743,13 @@ class AccumuloProxy_updateRowConditionally_args {
 
   _AccumuloProxy_updateRowConditionally_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_row(const std::string&amp; val) {
    row = val;
  }
  void __set_row(const std::string&amp; val);
 
  void __set_updates(const ConditionalUpdates&amp; val) {
    updates = val;
  }
  void __set_updates(const ConditionalUpdates&amp; val);
 
   bool operator == (const AccumuloProxy_updateRowConditionally_args &amp; rhs) const
   {
@@ -10596,8 +9779,7 @@ class AccumuloProxy_updateRowConditionally_pargs {
  public:
 
 
  virtual ~AccumuloProxy_updateRowConditionally_pargs() throw() {}

  virtual ~AccumuloProxy_updateRowConditionally_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const std::string* row;
@@ -10609,20 +9791,21 @@ class AccumuloProxy_updateRowConditionally_pargs {
 
 typedef struct _AccumuloProxy_updateRowConditionally_result__isset {
   _AccumuloProxy_updateRowConditionally_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_updateRowConditionally_result__isset;
 
 class AccumuloProxy_updateRowConditionally_result {
  public:
 
  AccumuloProxy_updateRowConditionally_result(const AccumuloProxy_updateRowConditionally_result&amp;);
  AccumuloProxy_updateRowConditionally_result&amp; operator=(const AccumuloProxy_updateRowConditionally_result&amp;);
   AccumuloProxy_updateRowConditionally_result() : success((ConditionalStatus::type)0) {
   }
 
  virtual ~AccumuloProxy_updateRowConditionally_result() throw() {}

  virtual ~AccumuloProxy_updateRowConditionally_result() throw();
   ConditionalStatus::type success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -10630,21 +9813,13 @@ class AccumuloProxy_updateRowConditionally_result {
 
   _AccumuloProxy_updateRowConditionally_result__isset __isset;
 
  void __set_success(const ConditionalStatus::type val) {
    success = val;
  }
  void __set_success(const ConditionalStatus::type val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_updateRowConditionally_result &amp; rhs) const
   {
@@ -10671,18 +9846,17 @@ class AccumuloProxy_updateRowConditionally_result {
 
 typedef struct _AccumuloProxy_updateRowConditionally_presult__isset {
   _AccumuloProxy_updateRowConditionally_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_updateRowConditionally_presult__isset;
 
 class AccumuloProxy_updateRowConditionally_presult {
  public:
 
 
  virtual ~AccumuloProxy_updateRowConditionally_presult() throw() {}

  virtual ~AccumuloProxy_updateRowConditionally_presult() throw();
   ConditionalStatus::type* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -10696,36 +9870,31 @@ class AccumuloProxy_updateRowConditionally_presult {
 
 typedef struct _AccumuloProxy_createConditionalWriter_args__isset {
   _AccumuloProxy_createConditionalWriter_args__isset() : login(false), tableName(false), options(false) {}
  bool login;
  bool tableName;
  bool options;
  bool login :1;
  bool tableName :1;
  bool options :1;
 } _AccumuloProxy_createConditionalWriter_args__isset;
 
 class AccumuloProxy_createConditionalWriter_args {
  public:
 
  AccumuloProxy_createConditionalWriter_args(const AccumuloProxy_createConditionalWriter_args&amp;);
  AccumuloProxy_createConditionalWriter_args&amp; operator=(const AccumuloProxy_createConditionalWriter_args&amp;);
   AccumuloProxy_createConditionalWriter_args() : login(), tableName() {
   }
 
  virtual ~AccumuloProxy_createConditionalWriter_args() throw() {}

  virtual ~AccumuloProxy_createConditionalWriter_args() throw();
   std::string login;
   std::string tableName;
   ConditionalWriterOptions options;
 
   _AccumuloProxy_createConditionalWriter_args__isset __isset;
 
  void __set_login(const std::string&amp; val) {
    login = val;
  }
  void __set_login(const std::string&amp; val);
 
  void __set_tableName(const std::string&amp; val) {
    tableName = val;
  }
  void __set_tableName(const std::string&amp; val);
 
  void __set_options(const ConditionalWriterOptions&amp; val) {
    options = val;
  }
  void __set_options(const ConditionalWriterOptions&amp; val);
 
   bool operator == (const AccumuloProxy_createConditionalWriter_args &amp; rhs) const
   {
@@ -10753,8 +9922,7 @@ class AccumuloProxy_createConditionalWriter_pargs {
  public:
 
 
  virtual ~AccumuloProxy_createConditionalWriter_pargs() throw() {}

  virtual ~AccumuloProxy_createConditionalWriter_pargs() throw();
   const std::string* login;
   const std::string* tableName;
   const ConditionalWriterOptions* options;
@@ -10765,20 +9933,21 @@ class AccumuloProxy_createConditionalWriter_pargs {
 
 typedef struct _AccumuloProxy_createConditionalWriter_result__isset {
   _AccumuloProxy_createConditionalWriter_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createConditionalWriter_result__isset;
 
 class AccumuloProxy_createConditionalWriter_result {
  public:
 
  AccumuloProxy_createConditionalWriter_result(const AccumuloProxy_createConditionalWriter_result&amp;);
  AccumuloProxy_createConditionalWriter_result&amp; operator=(const AccumuloProxy_createConditionalWriter_result&amp;);
   AccumuloProxy_createConditionalWriter_result() : success() {
   }
 
  virtual ~AccumuloProxy_createConditionalWriter_result() throw() {}

  virtual ~AccumuloProxy_createConditionalWriter_result() throw();
   std::string success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -10786,21 +9955,13 @@ class AccumuloProxy_createConditionalWriter_result {
 
   _AccumuloProxy_createConditionalWriter_result__isset __isset;
 
  void __set_success(const std::string&amp; val) {
    success = val;
  }
  void __set_success(const std::string&amp; val);
 
  void __set_ouch1(const AccumuloException&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const AccumuloException&amp; val);
 
  void __set_ouch2(const AccumuloSecurityException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloSecurityException&amp; val);
 
  void __set_ouch3(const TableNotFoundException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const TableNotFoundException&amp; val);
 
   bool operator == (const AccumuloProxy_createConditionalWriter_result &amp; rhs) const
   {
@@ -10827,18 +9988,17 @@ class AccumuloProxy_createConditionalWriter_result {
 
 typedef struct _AccumuloProxy_createConditionalWriter_presult__isset {
   _AccumuloProxy_createConditionalWriter_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_createConditionalWriter_presult__isset;
 
 class AccumuloProxy_createConditionalWriter_presult {
  public:
 
 
  virtual ~AccumuloProxy_createConditionalWriter_presult() throw() {}

  virtual ~AccumuloProxy_createConditionalWriter_presult() throw();
   std::string* success;
   AccumuloException ouch1;
   AccumuloSecurityException ouch2;
@@ -10852,30 +10012,27 @@ class AccumuloProxy_createConditionalWriter_presult {
 
 typedef struct _AccumuloProxy_updateRowsConditionally_args__isset {
   _AccumuloProxy_updateRowsConditionally_args__isset() : conditionalWriter(false), updates(false) {}
  bool conditionalWriter;
  bool updates;
  bool conditionalWriter :1;
  bool updates :1;
 } _AccumuloProxy_updateRowsConditionally_args__isset;
 
 class AccumuloProxy_updateRowsConditionally_args {
  public:
 
  AccumuloProxy_updateRowsConditionally_args(const AccumuloProxy_updateRowsConditionally_args&amp;);
  AccumuloProxy_updateRowsConditionally_args&amp; operator=(const AccumuloProxy_updateRowsConditionally_args&amp;);
   AccumuloProxy_updateRowsConditionally_args() : conditionalWriter() {
   }
 
  virtual ~AccumuloProxy_updateRowsConditionally_args() throw() {}

  virtual ~AccumuloProxy_updateRowsConditionally_args() throw();
   std::string conditionalWriter;
   std::map&lt;std::string, ConditionalUpdates&gt;  updates;
 
   _AccumuloProxy_updateRowsConditionally_args__isset __isset;
 
  void __set_conditionalWriter(const std::string&amp; val) {
    conditionalWriter = val;
  }
  void __set_conditionalWriter(const std::string&amp; val);
 
  void __set_updates(const std::map&lt;std::string, ConditionalUpdates&gt; &amp; val) {
    updates = val;
  }
  void __set_updates(const std::map&lt;std::string, ConditionalUpdates&gt; &amp; val);
 
   bool operator == (const AccumuloProxy_updateRowsConditionally_args &amp; rhs) const
   {
@@ -10901,8 +10058,7 @@ class AccumuloProxy_updateRowsConditionally_pargs {
  public:
 
 
  virtual ~AccumuloProxy_updateRowsConditionally_pargs() throw() {}

  virtual ~AccumuloProxy_updateRowsConditionally_pargs() throw();
   const std::string* conditionalWriter;
   const std::map&lt;std::string, ConditionalUpdates&gt; * updates;
 
@@ -10912,20 +10068,21 @@ class AccumuloProxy_updateRowsConditionally_pargs {
 
 typedef struct _AccumuloProxy_updateRowsConditionally_result__isset {
   _AccumuloProxy_updateRowsConditionally_result__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_updateRowsConditionally_result__isset;
 
 class AccumuloProxy_updateRowsConditionally_result {
  public:
 
  AccumuloProxy_updateRowsConditionally_result(const AccumuloProxy_updateRowsConditionally_result&amp;);
  AccumuloProxy_updateRowsConditionally_result&amp; operator=(const AccumuloProxy_updateRowsConditionally_result&amp;);
   AccumuloProxy_updateRowsConditionally_result() {
   }
 
  virtual ~AccumuloProxy_updateRowsConditionally_result() throw() {}

  virtual ~AccumuloProxy_updateRowsConditionally_result() throw();
   std::map&lt;std::string, ConditionalStatus::type&gt;  success;
   UnknownWriter ouch1;
   AccumuloException ouch2;
@@ -10933,21 +10090,13 @@ class AccumuloProxy_updateRowsConditionally_result {
 
   _AccumuloProxy_updateRowsConditionally_result__isset __isset;
 
  void __set_success(const std::map&lt;std::string, ConditionalStatus::type&gt; &amp; val) {
    success = val;
  }
  void __set_success(const std::map&lt;std::string, ConditionalStatus::type&gt; &amp; val);
 
  void __set_ouch1(const UnknownWriter&amp; val) {
    ouch1 = val;
  }
  void __set_ouch1(const UnknownWriter&amp; val);
 
  void __set_ouch2(const AccumuloException&amp; val) {
    ouch2 = val;
  }
  void __set_ouch2(const AccumuloException&amp; val);
 
  void __set_ouch3(const AccumuloSecurityException&amp; val) {
    ouch3 = val;
  }
  void __set_ouch3(const AccumuloSecurityException&amp; val);
 
   bool operator == (const AccumuloProxy_updateRowsConditionally_result &amp; rhs) const
   {
@@ -10974,18 +10123,17 @@ class AccumuloProxy_updateRowsConditionally_result {
 
 typedef struct _AccumuloProxy_updateRowsConditionally_presult__isset {
   _AccumuloProxy_updateRowsConditionally_presult__isset() : success(false), ouch1(false), ouch2(false), ouch3(false) {}
  bool success;
  bool ouch1;
  bool ouch2;
  bool ouch3;
  bool success :1;
  bool ouch1 :1;
  bool ouch2 :1;
  bool ouch3 :1;
 } _AccumuloProxy_updateRowsConditionally_presult__isset;
 
 class AccumuloProxy_updateRowsConditionally_presult {
  public:
 
 
  virtual ~AccumuloProxy_updateRowsConditionally_presult() throw() {}

  virtual ~AccumuloProxy_updateRowsConditionally_presult() throw();
   std::map&lt;std::string, ConditionalStatus::type&gt; * success;
   UnknownWriter ouch1;
   AccumuloException ouch2;
@@ -10999,24 +10147,23 @@ class AccumuloProxy_updateRowsConditionally_presult {
 
 typedef struct _AccumuloProxy_closeConditionalWriter_args__isset {
   _AccumuloProxy_closeConditionalWriter_args__isset() : conditionalWriter(false) {}
  bool conditionalWriter;
  bool conditionalWriter :1;
 } _AccumuloProxy_closeConditionalWriter_args__isset;
 
 class AccumuloProxy_closeConditionalWriter_args {
  public:
 
  AccumuloProxy_closeConditionalWriter_args(const AccumuloProxy_closeConditionalWriter_args&amp;);
  AccumuloProxy_closeConditionalWriter_args&amp; operator=(const AccumuloProxy_closeConditionalWriter_args&amp;);
   AccumuloProxy_closeConditionalWriter_args() : conditionalWriter() {
   }
 
  virtual ~AccumuloProxy_closeConditionalWriter_args() throw() {}

  virtual ~AccumuloProxy_closeConditionalWriter_args() throw();
   std::string conditionalWriter;
 
   _AccumuloProxy_closeConditionalWriter_args__isset __isset;
 
  void __set_conditionalWriter(const std::string&amp; val) {
    conditionalWriter = val;
  }
  void __set_conditionalWriter(const std::string&amp; val);
 
   bool operator == (const AccumuloProxy_closeConditionalWriter_args &amp; rhs) const
   {
@@ -11040,8 +10187,7 @@ class AccumuloProxy_closeConditionalWriter_pargs {
  public:
 
 
  virtual ~AccumuloProxy_closeConditionalWriter_pargs() throw() {}

  virtual ~AccumuloProxy_closeConditionalWriter_pargs() throw();
   const std::string* conditionalWriter;
 
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
@@ -11052,11 +10198,12 @@ class AccumuloProxy_closeConditionalWriter_pargs {
 class AccumuloProxy_closeConditionalWriter_result {
  public:
 
  AccumuloProxy_closeConditionalWriter_result(const AccumuloProxy_closeConditionalWriter_result&amp;);
  AccumuloProxy_closeConditionalWriter_result&amp; operator=(const AccumuloProxy_closeConditionalWriter_result&amp;);
   AccumuloProxy_closeConditionalWriter_result() {
   }
 
  virtual ~AccumuloProxy_closeConditionalWriter_result() throw() {}

  virtual ~AccumuloProxy_closeConditionalWriter_result() throw();
 
   bool operator == (const AccumuloProxy_closeConditionalWriter_result &amp; /* rhs */</comment>) <expr_stmt><expr><specifier>const</specifier>
   <block>{
@@ <expr><operator>-</operator><literal type="number">11078</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">10225</literal></expr>,<expr><literal type="number">7</literal> @@ <name>class</name> <name>AccumuloProxy_closeConditionalWriter_presult</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_closeConditionalWriter_presult</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_closeConditionalWriter_presult</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;</expr_stmt>
 
   <decl_stmt><decl><type><name>uint32_t</name></type> <name>read</name><argument_list>(<argument><expr><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name><operator>*</operator> <name>iprot</name></expr></argument>)</argument_list></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">11087</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">10233</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <name>class</name> <name>AccumuloProxy_closeConditionalWriter_presult</name> <block>{
 
 <expr><name>typedef</name> <name>struct</name> <name>_AccumuloProxy_getRowRange_args__isset</name> <block>{
   <expr><call><name>_AccumuloProxy_getRowRange_args__isset</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>row</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <block>{}</block>
  <name>bool</name> <name>row</name></expr>;
  <expr><name>bool</name> <name>row</name> <operator>:</operator><literal type="number">1</literal></expr>;
 }</block> <name>_AccumuloProxy_getRowRange_args__isset</name></expr>;
 
 <expr><name>class</name> <name>AccumuloProxy_getRowRange_args</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
  <call><name>AccumuloProxy_getRowRange_args</name><argument_list>(<argument><expr><specifier>const</specifier> <name>AccumuloProxy_getRowRange_args</name><operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;
  <expr><name>AccumuloProxy_getRowRange_args</name><operator>&amp;</operator> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getRowRange_args</name><operator>&amp;</operator><operator>)</operator></expr>;
   <expr><call><name>AccumuloProxy_getRowRange_args</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>row</name><argument_list>()</argument_list></call> <block>{
   }</block>
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_args</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_args</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;</expr_stmt>
   <expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>row</name></expr>;</expr_stmt>
 
   <decl_stmt><decl><type><name>_AccumuloProxy_getRowRange_args__isset</name></type> <name>__isset</name></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><name>void</name></type> <name>__set_row</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list> <block>{<block_content>
    <expr_stmt><expr><name>row</name> <operator>=</operator> <name>val</name></expr>;</expr_stmt>
  </block_content>}</block></decl></decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>__set_row</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list></decl>;</decl_stmt>
 
   <expr_stmt><expr><name>bool</name> <name>operator</name> <operator>==</operator> <operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getRowRange_args</name> <operator>&amp;</operator> <name>rhs</name><operator>)</operator> <specifier>const</specifier>
   <block>{
@@ <expr><operator>-</operator><literal type="number">11128</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">10273</literal></expr>,<expr><literal type="number">7</literal> @@ <name>class</name> <name>AccumuloProxy_getRowRange_pargs</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_pargs</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_pargs</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;</expr_stmt>
   <expr_stmt><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>*</operator> <name>row</name></expr>;</expr_stmt>
 
   <decl_stmt><decl><type><name>uint32_t</name></type> <name>write</name><argument_list>(<argument><expr><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name><operator>*</operator> <name>oprot</name></expr></argument>)</argument_list> const</decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">11138</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">10282</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <name>class</name> <name>AccumuloProxy_getRowRange_pargs</name> <block>{
 
 <expr><name>typedef</name> <name>struct</name> <name>_AccumuloProxy_getRowRange_result__isset</name> <block>{
   <expr><call><name>_AccumuloProxy_getRowRange_result__isset</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>success</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <block>{}</block>
  <name>bool</name> <name>success</name></expr>;
  <expr><name>bool</name> <name>success</name> <operator>:</operator><literal type="number">1</literal></expr>;
 }</block> <name>_AccumuloProxy_getRowRange_result__isset</name></expr>;
 
 <expr><name>class</name> <name>AccumuloProxy_getRowRange_result</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
  <call><name>AccumuloProxy_getRowRange_result</name><argument_list>(<argument><expr><specifier>const</specifier> <name>AccumuloProxy_getRowRange_result</name><operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;
  <expr><name>AccumuloProxy_getRowRange_result</name><operator>&amp;</operator> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getRowRange_result</name><operator>&amp;</operator><operator>)</operator></expr>;
   <expr><call><name>AccumuloProxy_getRowRange_result</name><argument_list>()</argument_list></call> <block>{
   }</block>
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_result</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_result</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><name>Range</name></type> <name>success</name></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><name>_AccumuloProxy_getRowRange_result__isset</name></type> <name>__isset</name></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><name>void</name></type> <name>__set_success</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Range</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list> <block>{<block_content>
    <expr_stmt><expr><name>success</name> <operator>=</operator> <name>val</name></expr>;</expr_stmt>
  </block_content>}</block></decl></decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>__set_success</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Range</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list></decl>;</decl_stmt>
 
   <expr_stmt><expr><name>bool</name> <name>operator</name> <operator>==</operator> <operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getRowRange_result</name> <operator>&amp;</operator> <name>rhs</name><operator>)</operator> <specifier>const</specifier>
   <block>{
@@ <expr><operator>-</operator><literal type="number">11176</literal></expr>,<expr><literal type="number">15</literal> <operator>+</operator><literal type="number">10319</literal></expr>,<expr><literal type="number">14</literal> @@ <name>class</name> <name>AccumuloProxy_getRowRange_result</name> <block>{
 
 <expr><name>typedef</name> <name>struct</name> <name>_AccumuloProxy_getRowRange_presult__isset</name> <block>{
   <expr><call><name>_AccumuloProxy_getRowRange_presult__isset</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>success</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <block>{}</block>
  <name>bool</name> <name>success</name></expr>;
  <expr><name>bool</name> <name>success</name> <operator>:</operator><literal type="number">1</literal></expr>;
 }</block> <name>_AccumuloProxy_getRowRange_presult__isset</name></expr>;
 
 <expr><name>class</name> <name>AccumuloProxy_getRowRange_presult</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_presult</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getRowRange_presult</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;
   <expr><name>Range</name><operator>*</operator> <name>success</name></expr>;
 
   <expr><name>_AccumuloProxy_getRowRange_presult__isset</name> <name>__isset</name></expr>;
@@ <expr><operator>-</operator><literal type="number">11195</literal></expr>,<expr><literal type="number">30</literal> <operator>+</operator><literal type="number">10337</literal></expr>,<expr><literal type="number">27</literal> @@ <name>class</name> <name>AccumuloProxy_getRowRange_presult</name> <block>{
 
 <expr><name>typedef</name> <name>struct</name> <name>_AccumuloProxy_getFollowing_args__isset</name> <block>{
   <expr><call><name>_AccumuloProxy_getFollowing_args__isset</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>key</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>part</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <block>{}</block>
  <name>bool</name> <name>key</name></expr>;
  <expr><name>bool</name> <name>part</name></expr>;
  <expr><name>bool</name> <name>key</name> <operator>:</operator><literal type="number">1</literal></expr>;
  <expr><name>bool</name> <name>part</name> <operator>:</operator><literal type="number">1</literal></expr>;
 }</block> <name>_AccumuloProxy_getFollowing_args__isset</name></expr>;
 
 <expr><name>class</name> <name>AccumuloProxy_getFollowing_args</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
  <call><name>AccumuloProxy_getFollowing_args</name><argument_list>(<argument><expr><specifier>const</specifier> <name>AccumuloProxy_getFollowing_args</name><operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;
  <expr><name>AccumuloProxy_getFollowing_args</name><operator>&amp;</operator> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getFollowing_args</name><operator>&amp;</operator><operator>)</operator></expr>;
   <expr><call><name>AccumuloProxy_getFollowing_args</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>part</name><argument_list>(<argument><expr><operator>(</operator><name>PartialKey</name><operator>::</operator><name>type</name><operator>)</operator><literal type="number">0</literal></expr></argument>)</argument_list></call> <block>{
   }</block>
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_args</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_args</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;
   <expr><name>Key</name> <name>key</name></expr>;
   <expr><name>PartialKey</name><operator>::</operator><name>type</name> <name>part</name></expr>;
 
   <expr><name>_AccumuloProxy_getFollowing_args__isset</name> <name>__isset</name></expr>;
 
  <expr><name>void</name> <call><name>__set_key</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Key</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>key</name> <operator>=</operator> <name>val</name></expr>;
  }</block>
  <name>void</name> <call><name>__set_key</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Key</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list></call></expr>;
 
  <expr><name>void</name> <call><name>__set_part</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PartialKey</name><operator>::</operator><name>type</name> <name>val</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>part</name> <operator>=</operator> <name>val</name></expr>;
  }</block>
  <name>void</name> <call><name>__set_part</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PartialKey</name><operator>::</operator><name>type</name> <name>val</name></expr></argument>)</argument_list></call></expr>;
 
   <expr><name>bool</name> <name>operator</name> <operator>==</operator> <operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getFollowing_args</name> <operator>&amp;</operator> <name>rhs</name><operator>)</operator> <specifier>const</specifier>
   <block>{
@@ <expr><operator>-</operator><literal type="number">11244</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">10383</literal></expr>,<expr><literal type="number">7</literal> @@ <name>class</name> <name>AccumuloProxy_getFollowing_pargs</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_pargs</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_pargs</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;
   <expr><specifier>const</specifier> <name>Key</name><operator>*</operator> <name>key</name></expr>;
   <expr><specifier>const</specifier> <name>PartialKey</name><operator>::</operator><name>type</name><operator>*</operator> <name>part</name></expr>;
 
@@ <expr><operator>-</operator><literal type="number">11255</literal></expr>,<expr><literal type="number">24</literal> <operator>+</operator><literal type="number">10393</literal></expr>,<expr><literal type="number">23</literal> @@ <name>class</name> <name>AccumuloProxy_getFollowing_pargs</name> <block>{
 
 <expr><name>typedef</name> <name>struct</name> <name>_AccumuloProxy_getFollowing_result__isset</name> <block>{
   <expr><call><name>_AccumuloProxy_getFollowing_result__isset</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>success</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <block>{}</block>
  <name>bool</name> <name>success</name></expr>;
  <expr><name>bool</name> <name>success</name> <operator>:</operator><literal type="number">1</literal></expr>;
 }</block> <name>_AccumuloProxy_getFollowing_result__isset</name></expr>;
 
 <expr><name>class</name> <name>AccumuloProxy_getFollowing_result</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
  <call><name>AccumuloProxy_getFollowing_result</name><argument_list>(<argument><expr><specifier>const</specifier> <name>AccumuloProxy_getFollowing_result</name><operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;
  <expr><name>AccumuloProxy_getFollowing_result</name><operator>&amp;</operator> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getFollowing_result</name><operator>&amp;</operator><operator>)</operator></expr>;
   <expr><call><name>AccumuloProxy_getFollowing_result</name><argument_list>()</argument_list></call> <block>{
   }</block>
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_result</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_result</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;
   <expr><name>Key</name> <name>success</name></expr>;
 
   <expr><name>_AccumuloProxy_getFollowing_result__isset</name> <name>__isset</name></expr>;
 
  <expr><name>void</name> <call><name>__set_success</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Key</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>success</name> <operator>=</operator> <name>val</name></expr>;
  }</block>
  <name>void</name> <call><name>__set_success</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Key</name><operator>&amp;</operator> <name>val</name></expr></argument>)</argument_list></call></expr>;
 
   <expr><name>bool</name> <name>operator</name> <operator>==</operator> <operator>(</operator><specifier>const</specifier> <name>AccumuloProxy_getFollowing_result</name> <operator>&amp;</operator> <name>rhs</name><operator>)</operator> <specifier>const</specifier>
   <block>{
@@ <expr><operator>-</operator><literal type="number">11293</literal></expr>,<expr><literal type="number">15</literal> <operator>+</operator><literal type="number">10430</literal></expr>,<expr><literal type="number">14</literal> @@ <name>class</name> <name>AccumuloProxy_getFollowing_result</name> <block>{
 
 <expr><name>typedef</name> <name>struct</name> <name>_AccumuloProxy_getFollowing_presult__isset</name> <block>{
   <expr><call><name>_AccumuloProxy_getFollowing_presult__isset</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>success</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <block>{}</block>
  <name>bool</name> <name>success</name></expr>;
  <expr><name>bool</name> <name>success</name> <operator>:</operator><literal type="number">1</literal></expr>;
 }</block> <name>_AccumuloProxy_getFollowing_presult__isset</name></expr>;
 
 <expr><name>class</name> <name>AccumuloProxy_getFollowing_presult</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
 
 
  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_presult</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr> <block>{}</block></block>

  <name>virtual</name> <operator>~</operator><call><name>AccumuloProxy_getFollowing_presult</name><argument_list>()</argument_list></call> <throw>throw<argument_list>()</argument_list></throw></expr></block></expr>;
   <expr><name>Key</name><operator>*</operator> <name>success</name></expr>;
 
   <expr><name>_AccumuloProxy_getFollowing_presult__isset</name> <name>__isset</name></expr>;
@@ <expr><operator>-</operator><literal type="number">11312</literal></expr>,<expr><literal type="number">18</literal> <operator>+</operator><literal type="number">10448</literal></expr>,<expr><literal type="number">23</literal> @@ <name>class</name> <name>AccumuloProxy_getFollowing_presult</name> <block>{
 
 <expr><name>class</name> <name>AccumuloProxyClient</name> <operator>:</operator> <name>virtual</name> <specifier>public</specifier> <name>AccumuloProxyIf</name> <block>{
  <expr><specifier>public</specifier><operator>:</operator>
  <call><name>AccumuloProxyClient</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>prot</name></expr></argument>)</argument_list></call> <operator>:</operator>
    <call><name>piprot_</name><argument_list>(<argument><expr><name>prot</name></expr></argument>)</argument_list></call></expr>,
    <expr><call><name>poprot_</name><argument_list>(<argument><expr><name>prot</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>iprot_</name> <operator>=</operator> <call><name><name>prot</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>oprot_</name> <operator>=</operator> <call><name><name>prot</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
  <expr><call><name>AccumuloProxyClient</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>prot</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>setProtocol</name><argument_list>(<argument><expr><name>prot</name></expr></argument>)</argument_list></call></expr>;
  }</block>
  <call><name>AccumuloProxyClient</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>iprot</name></expr></argument>, <argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>oprot</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>setProtocol</name><argument_list>(<argument><expr><name>iprot</name></expr></argument>,<argument><expr><name>oprot</name></expr></argument>)</argument_list></call></expr>;
  }</block>
 <specifier>private</specifier><operator>:</operator>
  <name>void</name> <call><name>setProtocol</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>prot</name></expr></argument>)</argument_list></call> <block>{
  <expr><call><name>setProtocol</name><argument_list>(<argument><expr><name>prot</name></expr></argument>,<argument><expr><name>prot</name></expr></argument>)</argument_list></call></expr>;
   }</block>
  <call><name>AccumuloProxyClient</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>iprot</name></expr></argument>, <argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>oprot</name></expr></argument>)</argument_list></call> <operator>:</operator>
    <call><name>piprot_</name><argument_list>(<argument><expr><name>iprot</name></expr></argument>)</argument_list></call></expr>,
    <expr><call><name>poprot_</name><argument_list>(<argument><expr><name>oprot</name></expr></argument>)</argument_list></call> <block>{
  <expr><name>void</name> <call><name>setProtocol</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>iprot</name></expr></argument>, <argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>oprot</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>piprot_</name><operator>=</operator><name>iprot</name></expr>;
    <expr><name>poprot_</name><operator>=</operator><name>oprot</name></expr>;
     <expr><name>iprot_</name> <operator>=</operator> <call><name><name>iprot</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>oprot_</name> <operator>=</operator> <call><name><name>oprot</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
 <specifier>public</specifier><operator>:</operator>
   <name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <call><name>getInputProtocol</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>piprot_</name></expr>;</return></block></expr>
   }</block>
@@ <operator>-</operator><literal type="number">12483</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">11624</literal></expr>,<expr><literal type="number">276</literal> @@ <name>class</name> <name>AccumuloProxyMultiface</name> <operator>:</operator> <name>virtual</name> <specifier>public</specifier> <name>AccumuloProxyIf</name> <block>{
 
 }</block></expr>;
 
<comment type="line">// The 'concurrent' client is a thread safe client that correctly handles</comment>
<comment type="line">// out of order responses.  It is slower than the regular client, so should</comment>
<comment type="line">// only be used when you need to share a connection among multiple threads</comment>
<expr><name>class</name> <name>AccumuloProxyConcurrentClient</name> <operator>:</operator> <name>virtual</name> <specifier>public</specifier> <name>AccumuloProxyIf</name> <block>{
 <expr><specifier>public</specifier><operator>:</operator>
  <call><name>AccumuloProxyConcurrentClient</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>prot</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>setProtocol</name><argument_list>(<argument><expr><name>prot</name></expr></argument>)</argument_list></call></expr>;
  }</block>
  <call><name>AccumuloProxyConcurrentClient</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>iprot</name></expr></argument>, <argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>oprot</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>setProtocol</name><argument_list>(<argument><expr><name>iprot</name></expr></argument>,<argument><expr><name>oprot</name></expr></argument>)</argument_list></call></expr>;
  }</block>
 <specifier>private</specifier><operator>:</operator>
  <name>void</name> <call><name>setProtocol</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>prot</name></expr></argument>)</argument_list></call> <block>{
  <expr><call><name>setProtocol</name><argument_list>(<argument><expr><name>prot</name></expr></argument>,<argument><expr><name>prot</name></expr></argument>)</argument_list></call></expr>;
  }</block>
  <name>void</name> <call><name>setProtocol</name><argument_list>(<argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>iprot</name></expr></argument>, <argument><expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>oprot</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>piprot_</name><operator>=</operator><name>iprot</name></expr>;
    <expr><name>poprot_</name><operator>=</operator><name>oprot</name></expr>;
    <expr><name>iprot_</name> <operator>=</operator> <call><name><name>iprot</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>oprot_</name> <operator>=</operator> <call><name><name>oprot</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
  }</block>
 <specifier>public</specifier><operator>:</operator>
  <name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <call><name>getInputProtocol</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>piprot_</name></expr>;</return></block></expr>
  }</block>
  <name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <call><name>getOutputProtocol</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>poprot_</name></expr>;</return></block></expr>
  }</block>
  <name>void</name> <call><name>login</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>principal</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>loginProperties</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_login</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>principal</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>loginProperties</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_login</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>addConstraint</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>constraintClassName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_addConstraint</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>constraintClassName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>recv_addConstraint</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>addSplits</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>splits</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_addSplits</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>splits</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_addSplits</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>attachIterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>IteratorSetting</name><operator>&amp;</operator> <name>setting</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>scopes</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_attachIterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>IteratorSetting</name><operator>&amp;</operator> <name>setting</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>scopes</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_attachIterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>checkIteratorConflicts</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>IteratorSetting</name><operator>&amp;</operator> <name>setting</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>scopes</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_checkIteratorConflicts</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>IteratorSetting</name><operator>&amp;</operator> <name>setting</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>scopes</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_checkIteratorConflicts</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>clearLocatorCache</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_clearLocatorCache</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_clearLocatorCache</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>cloneTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>newTableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>flush</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>propertiesToSet</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>propertiesToExclude</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_cloneTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>newTableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>flush</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>propertiesToSet</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>propertiesToExclude</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_cloneTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>compactTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>IteratorSetting</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>iterators</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>flush</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>CompactionStrategyConfig</name><operator>&amp;</operator> <name>compactionStrategy</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_compactTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>IteratorSetting</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>iterators</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>flush</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>CompactionStrategyConfig</name><operator>&amp;</operator> <name>compactionStrategy</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_compactTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>cancelCompaction</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_cancelCompaction</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_cancelCompaction</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>createTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>versioningIter</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TimeType</name><operator>::</operator><name>type</name> <name>type</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_createTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>versioningIter</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TimeType</name><operator>::</operator><name>type</name> <name>type</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_createTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>deleteTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_deleteTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_deleteTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>deleteRows</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_deleteRows</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_deleteRows</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>exportTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>exportDir</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_exportTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>exportDir</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_exportTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>flushTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_flushTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_flushTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getDiskUsage</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>DiskUsage</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>tables</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getDiskUsage</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>tables</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getDiskUsage</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>DiskUsage</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getLocalityGroups</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getLocalityGroups</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getLocalityGroups</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getIteratorSetting</name><argument_list>(<argument><expr><name>IteratorSetting</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>iteratorName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>IteratorScope</name><operator>::</operator><name>type</name> <name>scope</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getIteratorSetting</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>iteratorName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>IteratorScope</name><operator>::</operator><name>type</name> <name>scope</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getIteratorSetting</name><argument_list>(<argument><expr><name>IteratorSetting</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getMaxRow</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>auths</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>startInclusive</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>endInclusive</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getMaxRow</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>auths</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>startInclusive</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>endInclusive</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getMaxRow</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getTableProperties</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getTableProperties</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getTableProperties</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>importDirectory</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>importDir</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>failureDir</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>setTime</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_importDirectory</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>importDir</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>failureDir</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>setTime</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_importDirectory</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>importTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>importDir</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_importTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>importDir</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_importTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>listSplits</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>maxSplits</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_listSplits</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>maxSplits</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_listSplits</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>listTables</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_listTables</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_listTables</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>listIterators</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_listIterators</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_listIterators</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>listConstraints</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>int32_t</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_listConstraints</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_listConstraints</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>int32_t</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>mergeTablets</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_mergeTablets</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>startRow</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>endRow</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_mergeTablets</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>offlineTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_offlineTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_offlineTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>onlineTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_onlineTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>bool</name> <name>wait</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_onlineTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>removeConstraint</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>constraint</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_removeConstraint</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>constraint</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_removeConstraint</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>removeIterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>iterName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>scopes</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_removeIterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>iterName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>IteratorScope</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>scopes</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_removeIterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>removeTableProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_removeTableProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_removeTableProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>renameTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>oldTableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>newTableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_renameTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>oldTableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>newTableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_renameTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>setLocalityGroups</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>groups</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_setLocalityGroups</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>groups</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_setLocalityGroups</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>setTableProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>value</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_setTableProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>value</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_setTableProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>splitRangeByTablets</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>Range</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Range</name><operator>&amp;</operator> <name>range</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>maxSplits</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_splitRangeByTablets</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Range</name><operator>&amp;</operator> <name>range</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>maxSplits</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_splitRangeByTablets</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>Range</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>tableExists</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_tableExists</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>recv_tableExists</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>tableIdMap</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_tableIdMap</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_tableIdMap</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>testTableClassLoad</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>className</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>asTypeName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_testTableClassLoad</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>className</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>asTypeName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>recv_testTableClassLoad</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>pingTabletServer</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tserver</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_pingTabletServer</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tserver</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_pingTabletServer</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getActiveScans</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ActiveScan</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tserver</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getActiveScans</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tserver</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getActiveScans</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ActiveScan</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getActiveCompactions</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ActiveCompaction</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tserver</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getActiveCompactions</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tserver</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getActiveCompactions</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ActiveCompaction</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getSiteConfiguration</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getSiteConfiguration</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getSiteConfiguration</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getSystemConfiguration</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getSystemConfiguration</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getSystemConfiguration</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getTabletServers</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getTabletServers</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getTabletServers</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>removeProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_removeProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_removeProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>setProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>value</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_setProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>property</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>value</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_setProperty</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>testClassLoad</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>className</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>asTypeName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_testClassLoad</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>className</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>asTypeName</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>recv_testClassLoad</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>authenticateUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>properties</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_authenticateUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>properties</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>recv_authenticateUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>changeUserAuthorizations</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>authorizations</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_changeUserAuthorizations</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>authorizations</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_changeUserAuthorizations</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>changeLocalUserPassword</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>password</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_changeLocalUserPassword</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>password</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_changeLocalUserPassword</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>createLocalUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>password</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_createLocalUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>password</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_createLocalUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>dropLocalUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_dropLocalUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_dropLocalUser</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getUserAuthorizations</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getUserAuthorizations</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getUserAuthorizations</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>grantSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>SystemPermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_grantSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>SystemPermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_grantSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>grantTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>table</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TablePermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_grantTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>table</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TablePermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_grantTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>hasSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>SystemPermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_hasSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>SystemPermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>recv_hasSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>hasTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>table</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TablePermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_hasTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>table</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TablePermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>recv_hasTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>listLocalUsers</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_listLocalUsers</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_listLocalUsers</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>set</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>revokeSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>SystemPermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_revokeSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>SystemPermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_revokeSystemPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>revokeTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>table</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TablePermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_revokeTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>user</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>table</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>TablePermission</name><operator>::</operator><name>type</name> <name>perm</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_revokeTablePermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>createBatchScanner</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>BatchScanOptions</name><operator>&amp;</operator> <name>options</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_createBatchScanner</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>BatchScanOptions</name><operator>&amp;</operator> <name>options</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_createBatchScanner</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>createScanner</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>ScanOptions</name><operator>&amp;</operator> <name>options</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_createScanner</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>ScanOptions</name><operator>&amp;</operator> <name>options</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_createScanner</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>hasNext</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_hasNext</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>bool</name> <call><name>recv_hasNext</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>nextEntry</name><argument_list>(<argument><expr><name>KeyValueAndPeek</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_nextEntry</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_nextEntry</name><argument_list>(<argument><expr><name>KeyValueAndPeek</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>nextK</name><argument_list>(<argument><expr><name>ScanResult</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>k</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_nextK</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>k</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_nextK</name><argument_list>(<argument><expr><name>ScanResult</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>closeScanner</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_closeScanner</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>scanner</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_closeScanner</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>updateAndFlush</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ColumnUpdate</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>cells</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_updateAndFlush</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ColumnUpdate</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>cells</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_updateAndFlush</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>createWriter</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>WriterOptions</name><operator>&amp;</operator> <name>opts</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_createWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>WriterOptions</name><operator>&amp;</operator> <name>opts</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_createWriter</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>update</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>writer</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ColumnUpdate</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>cells</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>send_update</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>writer</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><name>ColumnUpdate</name></argument>&gt;</argument_list></name></argument> &gt;</argument_list></name> <operator>&amp;</operator> <name>cells</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>flush</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>writer</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_flush</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>writer</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_flush</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>closeWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>writer</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_closeWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>writer</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_closeWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>ConditionalStatus</name><operator>::</operator><name>type</name> <call><name>updateRowConditionally</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>row</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>ConditionalUpdates</name><operator>&amp;</operator> <name>updates</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_updateRowConditionally</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>row</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>ConditionalUpdates</name><operator>&amp;</operator> <name>updates</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>ConditionalStatus</name><operator>::</operator><name>type</name> <call><name>recv_updateRowConditionally</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>createConditionalWriter</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>ConditionalWriterOptions</name><operator>&amp;</operator> <name>options</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_createConditionalWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>login</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>tableName</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>ConditionalWriterOptions</name><operator>&amp;</operator> <name>options</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_createConditionalWriter</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>updateRowsConditionally</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>ConditionalStatus</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>conditionalWriter</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>ConditionalUpdates</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>updates</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_updateRowsConditionally</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>conditionalWriter</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>ConditionalUpdates</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>updates</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_updateRowsConditionally</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>std</name><operator>::</operator><name>string</name></argument>, <argument><name>ConditionalStatus</name><operator>::</operator><name>type</name></argument>&gt;</argument_list></name> <operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>closeConditionalWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>conditionalWriter</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_closeConditionalWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>conditionalWriter</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_closeConditionalWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getRowRange</name><argument_list>(<argument><expr><name>Range</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>row</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getRowRange</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>row</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getRowRange</name><argument_list>(<argument><expr><name>Range</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>getFollowing</name><argument_list>(<argument><expr><name>Key</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Key</name><operator>&amp;</operator> <name>key</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>PartialKey</name><operator>::</operator><name>type</name> <name>part</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>int32_t</name> <call><name>send_getFollowing</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Key</name><operator>&amp;</operator> <name>key</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>PartialKey</name><operator>::</operator><name>type</name> <name>part</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <call><name>recv_getFollowing</name><argument_list>(<argument><expr><name>Key</name><operator>&amp;</operator> <name>_return</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name> <name>seqid</name></expr></argument>)</argument_list></call></expr>;
 <expr><specifier>protected</specifier><operator>:</operator>
  <name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>piprot_</name></expr>;
  <expr><name>boost</name><operator>::</operator><name><name>shared_ptr</name><argument_list type="generic">&lt; <argument><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name></argument>&gt;</argument_list></name> <name>poprot_</name></expr>;
  <expr><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name><operator>*</operator> <name>iprot_</name></expr>;
  <expr><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>protocol</name><operator>::</operator><name>TProtocol</name><operator>*</operator> <name>oprot_</name></expr>;
  <expr><operator>::</operator><name>apache</name><operator>::</operator><name>thrift</name><operator>::</operator><name>async</name><operator>::</operator><name>TConcurrentClientSyncInfo</name> <name>sync_</name></expr>;
}</block></expr>;

#<expr><name>ifdef</name> <name>_WIN32</name>
  #<name>pragma</name> <call><name>warning</name><argument_list>( <argument><expr><name>pop</name></expr></argument> )</argument_list></call>
#<name>endif</name></expr>

 }</block> <comment type="line">// namespace</comment>
 
 #<name>endif</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_constants</name><operator>.</operator><name>cpp</name></name> <name>b</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_constants</name><operator>.</operator><name>cpp</name></name>
<name>index</name> <literal type="number">39a574ece</literal><operator>..</operator><name>d17786747</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_constants</name><operator>.</operator><name>cpp</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>cpp</name><operator>/</operator><name><name>proxy_constants</name><operator>.</operator><name>cpp</name></name>
@@ <operator>-</operator><literal type="number">15</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">15</literal></expr>,<expr><literal type="number">7</literal> @@
  <operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/cpp/proxy_constants.h b/proxy/src/main/cpp/proxy_constants.h
index 8f789c623..c2d6fd6ee 100644
-- a/proxy/src/main/cpp/proxy_constants.h
++ b/proxy/src/main/cpp/proxy_constants.h
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/cpp/proxy_types.cpp b/proxy/src/main/cpp/proxy_types.cpp
index a055b485d..8c443e0d8 100644
-- a/proxy/src/main/cpp/proxy_types.cpp
++ b/proxy/src/main/cpp/proxy_types.cpp
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -23,6 +23,9 @@
 #include "proxy_types.h"
 
 #include &lt;algorithm&gt;
#include &lt;ostream&gt;

#include &lt;thrift/TToString.h&gt;
 
 namespace accumulo {
 
@@ -190,11 +193,35 @@ const char* _kTimeTypeNames[] = {
 };
 const std::map&lt;int, const char*&gt; _TimeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTimeTypeValues, _kTimeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
 
const char* Key::ascii_fingerprint = "91151A432E03F5E8564877B5194B48E2";
const uint8_t Key::binary_fingerprint[16] = {0x91,0x15,0x1A,0x43,0x2E,0x03,0xF5,0xE8,0x56,0x48,0x77,0xB5,0x19,0x4B,0x48,0xE2};

Key::~Key() throw() {
}


void Key::__set_row(const std::string&amp; val) {
  this-&gt;row = val;
}

void Key::__set_colFamily(const std::string&amp; val) {
  this-&gt;colFamily = val;
}

void Key::__set_colQualifier(const std::string&amp; val) {
  this-&gt;colQualifier = val;
}

void Key::__set_colVisibility(const std::string&amp; val) {
  this-&gt;colVisibility = val;
}

void Key::__set_timestamp(const int64_t val) {
  this-&gt;timestamp = val;
__isset.timestamp = true;
}
 
 uint32_t Key::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -267,6 +294,7 @@ uint32_t Key::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t Key::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("Key");
 
   xfer += oprot-&gt;writeFieldBegin("row", ::apache::thrift::protocol::T_STRING, 1);
@@ -305,11 +333,70 @@ void swap(Key &amp;a, Key &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ColumnUpdate::ascii_fingerprint = "65CC1863F7DDC1DE75B9EAF9E2DC0D1F";
const uint8_t ColumnUpdate::binary_fingerprint[16] = {0x65,0xCC,0x18,0x63,0xF7,0xDD,0xC1,0xDE,0x75,0xB9,0xEA,0xF9,0xE2,0xDC,0x0D,0x1F};
Key::Key(const Key&amp; other0) {
  row = other0.row;
  colFamily = other0.colFamily;
  colQualifier = other0.colQualifier;
  colVisibility = other0.colVisibility;
  timestamp = other0.timestamp;
  __isset = other0.__isset;
}
Key&amp; Key::operator=(const Key&amp; other1) {
  row = other1.row;
  colFamily = other1.colFamily;
  colQualifier = other1.colQualifier;
  colVisibility = other1.colVisibility;
  timestamp = other1.timestamp;
  __isset = other1.__isset;
  return *this;
}
void Key::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "Key(";
  out &lt;&lt; "row=" &lt;&lt; to_string(row);
  out &lt;&lt; ", " &lt;&lt; "colFamily=" &lt;&lt; to_string(colFamily);
  out &lt;&lt; ", " &lt;&lt; "colQualifier=" &lt;&lt; to_string(colQualifier);
  out &lt;&lt; ", " &lt;&lt; "colVisibility=" &lt;&lt; to_string(colVisibility);
  out &lt;&lt; ", " &lt;&lt; "timestamp="; (__isset.timestamp ? (out &lt;&lt; to_string(timestamp)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


ColumnUpdate::~ColumnUpdate() throw() {
}


void ColumnUpdate::__set_colFamily(const std::string&amp; val) {
  this-&gt;colFamily = val;
}

void ColumnUpdate::__set_colQualifier(const std::string&amp; val) {
  this-&gt;colQualifier = val;
}

void ColumnUpdate::__set_colVisibility(const std::string&amp; val) {
  this-&gt;colVisibility = val;
__isset.colVisibility = true;
}

void ColumnUpdate::__set_timestamp(const int64_t val) {
  this-&gt;timestamp = val;
__isset.timestamp = true;
}

void ColumnUpdate::__set_value(const std::string&amp; val) {
  this-&gt;value = val;
__isset.value = true;
}

void ColumnUpdate::__set_deleteCell(const bool val) {
  this-&gt;deleteCell = val;
__isset.deleteCell = true;
}
 
 uint32_t ColumnUpdate::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -390,6 +477,7 @@ uint32_t ColumnUpdate::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t ColumnUpdate::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ColumnUpdate");
 
   xfer += oprot-&gt;writeFieldBegin("colFamily", ::apache::thrift::protocol::T_STRING, 1);
@@ -436,11 +524,53 @@ void swap(ColumnUpdate &amp;a, ColumnUpdate &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* DiskUsage::ascii_fingerprint = "D26F4F5E2867D41CF7E0391263932D6B";
const uint8_t DiskUsage::binary_fingerprint[16] = {0xD2,0x6F,0x4F,0x5E,0x28,0x67,0xD4,0x1C,0xF7,0xE0,0x39,0x12,0x63,0x93,0x2D,0x6B};
ColumnUpdate::ColumnUpdate(const ColumnUpdate&amp; other2) {
  colFamily = other2.colFamily;
  colQualifier = other2.colQualifier;
  colVisibility = other2.colVisibility;
  timestamp = other2.timestamp;
  value = other2.value;
  deleteCell = other2.deleteCell;
  __isset = other2.__isset;
}
ColumnUpdate&amp; ColumnUpdate::operator=(const ColumnUpdate&amp; other3) {
  colFamily = other3.colFamily;
  colQualifier = other3.colQualifier;
  colVisibility = other3.colVisibility;
  timestamp = other3.timestamp;
  value = other3.value;
  deleteCell = other3.deleteCell;
  __isset = other3.__isset;
  return *this;
}
void ColumnUpdate::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ColumnUpdate(";
  out &lt;&lt; "colFamily=" &lt;&lt; to_string(colFamily);
  out &lt;&lt; ", " &lt;&lt; "colQualifier=" &lt;&lt; to_string(colQualifier);
  out &lt;&lt; ", " &lt;&lt; "colVisibility="; (__isset.colVisibility ? (out &lt;&lt; to_string(colVisibility)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "timestamp="; (__isset.timestamp ? (out &lt;&lt; to_string(timestamp)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "value="; (__isset.value ? (out &lt;&lt; to_string(value)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "deleteCell="; (__isset.deleteCell ? (out &lt;&lt; to_string(deleteCell)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


DiskUsage::~DiskUsage() throw() {
}


void DiskUsage::__set_tables(const std::vector&lt;std::string&gt; &amp; val) {
  this-&gt;tables = val;
}

void DiskUsage::__set_usage(const int64_t val) {
  this-&gt;usage = val;
}
 
 uint32_t DiskUsage::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -463,14 +593,14 @@ uint32_t DiskUsage::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;tables.clear();
            uint32_t _size0;
            ::apache::thrift::protocol::TType _etype3;
            xfer += iprot-&gt;readListBegin(_etype3, _size0);
            this-&gt;tables.resize(_size0);
            uint32_t _i4;
            for (_i4 = 0; _i4 &lt; _size0; ++_i4)
            uint32_t _size4;
            ::apache::thrift::protocol::TType _etype7;
            xfer += iprot-&gt;readListBegin(_etype7, _size4);
            this-&gt;tables.resize(_size4);
            uint32_t _i8;
            for (_i8 = 0; _i8 &lt; _size4; ++_i8)
             {
              xfer += iprot-&gt;readString(this-&gt;tables[_i4]);
              xfer += iprot-&gt;readString(this-&gt;tables[_i8]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -501,15 +631,16 @@ uint32_t DiskUsage::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t DiskUsage::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("DiskUsage");
 
   xfer += oprot-&gt;writeFieldBegin("tables", ::apache::thrift::protocol::T_LIST, 1);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;tables.size()));
    std::vector&lt;std::string&gt; ::const_iterator _iter5;
    for (_iter5 = this-&gt;tables.begin(); _iter5 != this-&gt;tables.end(); ++_iter5)
    std::vector&lt;std::string&gt; ::const_iterator _iter9;
    for (_iter9 = this-&gt;tables.begin(); _iter9 != this-&gt;tables.end(); ++_iter9)
     {
      xfer += oprot-&gt;writeString((*_iter5));
      xfer += oprot-&gt;writeString((*_iter9));
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -531,11 +662,41 @@ void swap(DiskUsage &amp;a, DiskUsage &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* KeyValue::ascii_fingerprint = "0D0CA44F233F983E00E94228C31ABBD4";
const uint8_t KeyValue::binary_fingerprint[16] = {0x0D,0x0C,0xA4,0x4F,0x23,0x3F,0x98,0x3E,0x00,0xE9,0x42,0x28,0xC3,0x1A,0xBB,0xD4};
DiskUsage::DiskUsage(const DiskUsage&amp; other10) {
  tables = other10.tables;
  usage = other10.usage;
  __isset = other10.__isset;
}
DiskUsage&amp; DiskUsage::operator=(const DiskUsage&amp; other11) {
  tables = other11.tables;
  usage = other11.usage;
  __isset = other11.__isset;
  return *this;
}
void DiskUsage::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "DiskUsage(";
  out &lt;&lt; "tables=" &lt;&lt; to_string(tables);
  out &lt;&lt; ", " &lt;&lt; "usage=" &lt;&lt; to_string(usage);
  out &lt;&lt; ")";
}


KeyValue::~KeyValue() throw() {
}


void KeyValue::__set_key(const Key&amp; val) {
  this-&gt;key = val;
}

void KeyValue::__set_value(const std::string&amp; val) {
  this-&gt;value = val;
}
 
 uint32_t KeyValue::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -584,6 +745,7 @@ uint32_t KeyValue::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t KeyValue::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("KeyValue");
 
   xfer += oprot-&gt;writeFieldBegin("key", ::apache::thrift::protocol::T_STRUCT, 1);
@@ -606,11 +768,41 @@ void swap(KeyValue &amp;a, KeyValue &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ScanResult::ascii_fingerprint = "684A3FCA76EA202FE071A17F8B510E7A";
const uint8_t ScanResult::binary_fingerprint[16] = {0x68,0x4A,0x3F,0xCA,0x76,0xEA,0x20,0x2F,0xE0,0x71,0xA1,0x7F,0x8B,0x51,0x0E,0x7A};
KeyValue::KeyValue(const KeyValue&amp; other12) {
  key = other12.key;
  value = other12.value;
  __isset = other12.__isset;
}
KeyValue&amp; KeyValue::operator=(const KeyValue&amp; other13) {
  key = other13.key;
  value = other13.value;
  __isset = other13.__isset;
  return *this;
}
void KeyValue::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "KeyValue(";
  out &lt;&lt; "key=" &lt;&lt; to_string(key);
  out &lt;&lt; ", " &lt;&lt; "value=" &lt;&lt; to_string(value);
  out &lt;&lt; ")";
}


ScanResult::~ScanResult() throw() {
}


void ScanResult::__set_results(const std::vector&lt;KeyValue&gt; &amp; val) {
  this-&gt;results = val;
}

void ScanResult::__set_more(const bool val) {
  this-&gt;more = val;
}
 
 uint32_t ScanResult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -633,14 +825,14 @@ uint32_t ScanResult::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;results.clear();
            uint32_t _size6;
            ::apache::thrift::protocol::TType _etype9;
            xfer += iprot-&gt;readListBegin(_etype9, _size6);
            this-&gt;results.resize(_size6);
            uint32_t _i10;
            for (_i10 = 0; _i10 &lt; _size6; ++_i10)
            uint32_t _size14;
            ::apache::thrift::protocol::TType _etype17;
            xfer += iprot-&gt;readListBegin(_etype17, _size14);
            this-&gt;results.resize(_size14);
            uint32_t _i18;
            for (_i18 = 0; _i18 &lt; _size14; ++_i18)
             {
              xfer += this-&gt;results[_i10].read(iprot);
              xfer += this-&gt;results[_i18].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -671,15 +863,16 @@ uint32_t ScanResult::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t ScanResult::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ScanResult");
 
   xfer += oprot-&gt;writeFieldBegin("results", ::apache::thrift::protocol::T_LIST, 1);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;results.size()));
    std::vector&lt;KeyValue&gt; ::const_iterator _iter11;
    for (_iter11 = this-&gt;results.begin(); _iter11 != this-&gt;results.end(); ++_iter11)
    std::vector&lt;KeyValue&gt; ::const_iterator _iter19;
    for (_iter19 = this-&gt;results.begin(); _iter19 != this-&gt;results.end(); ++_iter19)
     {
      xfer += (*_iter11).write(oprot);
      xfer += (*_iter19).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -701,11 +894,49 @@ void swap(ScanResult &amp;a, ScanResult &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* Range::ascii_fingerprint = "84C5BA8DB718E60BFBF3F83867647B45";
const uint8_t Range::binary_fingerprint[16] = {0x84,0xC5,0xBA,0x8D,0xB7,0x18,0xE6,0x0B,0xFB,0xF3,0xF8,0x38,0x67,0x64,0x7B,0x45};
ScanResult::ScanResult(const ScanResult&amp; other20) {
  results = other20.results;
  more = other20.more;
  __isset = other20.__isset;
}
ScanResult&amp; ScanResult::operator=(const ScanResult&amp; other21) {
  results = other21.results;
  more = other21.more;
  __isset = other21.__isset;
  return *this;
}
void ScanResult::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ScanResult(";
  out &lt;&lt; "results=" &lt;&lt; to_string(results);
  out &lt;&lt; ", " &lt;&lt; "more=" &lt;&lt; to_string(more);
  out &lt;&lt; ")";
}


Range::~Range() throw() {
}


void Range::__set_start(const Key&amp; val) {
  this-&gt;start = val;
}

void Range::__set_startInclusive(const bool val) {
  this-&gt;startInclusive = val;
}

void Range::__set_stop(const Key&amp; val) {
  this-&gt;stop = val;
}

void Range::__set_stopInclusive(const bool val) {
  this-&gt;stopInclusive = val;
}
 
 uint32_t Range::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -770,6 +1001,7 @@ uint32_t Range::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t Range::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("Range");
 
   xfer += oprot-&gt;writeFieldBegin("start", ::apache::thrift::protocol::T_STRUCT, 1);
@@ -802,11 +1034,48 @@ void swap(Range &amp;a, Range &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ScanColumn::ascii_fingerprint = "5B708A954C550ECA9C1A49D3C5CAFAB9";
const uint8_t ScanColumn::binary_fingerprint[16] = {0x5B,0x70,0x8A,0x95,0x4C,0x55,0x0E,0xCA,0x9C,0x1A,0x49,0xD3,0xC5,0xCA,0xFA,0xB9};
Range::Range(const Range&amp; other22) {
  start = other22.start;
  startInclusive = other22.startInclusive;
  stop = other22.stop;
  stopInclusive = other22.stopInclusive;
  __isset = other22.__isset;
}
Range&amp; Range::operator=(const Range&amp; other23) {
  start = other23.start;
  startInclusive = other23.startInclusive;
  stop = other23.stop;
  stopInclusive = other23.stopInclusive;
  __isset = other23.__isset;
  return *this;
}
void Range::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "Range(";
  out &lt;&lt; "start=" &lt;&lt; to_string(start);
  out &lt;&lt; ", " &lt;&lt; "startInclusive=" &lt;&lt; to_string(startInclusive);
  out &lt;&lt; ", " &lt;&lt; "stop=" &lt;&lt; to_string(stop);
  out &lt;&lt; ", " &lt;&lt; "stopInclusive=" &lt;&lt; to_string(stopInclusive);
  out &lt;&lt; ")";
}


ScanColumn::~ScanColumn() throw() {
}


void ScanColumn::__set_colFamily(const std::string&amp; val) {
  this-&gt;colFamily = val;
}

void ScanColumn::__set_colQualifier(const std::string&amp; val) {
  this-&gt;colQualifier = val;
__isset.colQualifier = true;
}
 
 uint32_t ScanColumn::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -855,6 +1124,7 @@ uint32_t ScanColumn::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t ScanColumn::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ScanColumn");
 
   xfer += oprot-&gt;writeFieldBegin("colFamily", ::apache::thrift::protocol::T_STRING, 1);
@@ -878,11 +1148,49 @@ void swap(ScanColumn &amp;a, ScanColumn &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* IteratorSetting::ascii_fingerprint = "985C857916964E43205EAC92A157CB4E";
const uint8_t IteratorSetting::binary_fingerprint[16] = {0x98,0x5C,0x85,0x79,0x16,0x96,0x4E,0x43,0x20,0x5E,0xAC,0x92,0xA1,0x57,0xCB,0x4E};
ScanColumn::ScanColumn(const ScanColumn&amp; other24) {
  colFamily = other24.colFamily;
  colQualifier = other24.colQualifier;
  __isset = other24.__isset;
}
ScanColumn&amp; ScanColumn::operator=(const ScanColumn&amp; other25) {
  colFamily = other25.colFamily;
  colQualifier = other25.colQualifier;
  __isset = other25.__isset;
  return *this;
}
void ScanColumn::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ScanColumn(";
  out &lt;&lt; "colFamily=" &lt;&lt; to_string(colFamily);
  out &lt;&lt; ", " &lt;&lt; "colQualifier="; (__isset.colQualifier ? (out &lt;&lt; to_string(colQualifier)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


IteratorSetting::~IteratorSetting() throw() {
}


void IteratorSetting::__set_priority(const int32_t val) {
  this-&gt;priority = val;
}

void IteratorSetting::__set_name(const std::string&amp; val) {
  this-&gt;name = val;
}

void IteratorSetting::__set_iteratorClass(const std::string&amp; val) {
  this-&gt;iteratorClass = val;
}

void IteratorSetting::__set_properties(const std::map&lt;std::string, std::string&gt; &amp; val) {
  this-&gt;properties = val;
}
 
 uint32_t IteratorSetting::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -929,17 +1237,17 @@ uint32_t IteratorSetting::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;properties.clear();
            uint32_t _size12;
            ::apache::thrift::protocol::TType _ktype13;
            ::apache::thrift::protocol::TType _vtype14;
            xfer += iprot-&gt;readMapBegin(_ktype13, _vtype14, _size12);
            uint32_t _i16;
            for (_i16 = 0; _i16 &lt; _size12; ++_i16)
            uint32_t _size26;
            ::apache::thrift::protocol::TType _ktype27;
            ::apache::thrift::protocol::TType _vtype28;
            xfer += iprot-&gt;readMapBegin(_ktype27, _vtype28, _size26);
            uint32_t _i30;
            for (_i30 = 0; _i30 &lt; _size26; ++_i30)
             {
              std::string _key17;
              xfer += iprot-&gt;readString(_key17);
              std::string&amp; _val18 = this-&gt;properties[_key17];
              xfer += iprot-&gt;readString(_val18);
              std::string _key31;
              xfer += iprot-&gt;readString(_key31);
              std::string&amp; _val32 = this-&gt;properties[_key31];
              xfer += iprot-&gt;readString(_val32);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -962,6 +1270,7 @@ uint32_t IteratorSetting::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t IteratorSetting::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("IteratorSetting");
 
   xfer += oprot-&gt;writeFieldBegin("priority", ::apache::thrift::protocol::T_I32, 1);
@@ -979,11 +1288,11 @@ uint32_t IteratorSetting::write(::apache::thrift::protocol::TProtocol* oprot) co
   xfer += oprot-&gt;writeFieldBegin("properties", ::apache::thrift::protocol::T_MAP, 4);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;properties.size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter19;
    for (_iter19 = this-&gt;properties.begin(); _iter19 != this-&gt;properties.end(); ++_iter19)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter33;
    for (_iter33 = this-&gt;properties.begin(); _iter33 != this-&gt;properties.end(); ++_iter33)
     {
      xfer += oprot-&gt;writeString(_iter19-&gt;first);
      xfer += oprot-&gt;writeString(_iter19-&gt;second);
      xfer += oprot-&gt;writeString(_iter33-&gt;first);
      xfer += oprot-&gt;writeString(_iter33-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -1003,11 +1312,64 @@ void swap(IteratorSetting &amp;a, IteratorSetting &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ScanOptions::ascii_fingerprint = "3D87D0CD05FA62E15880C4D2C595907C";
const uint8_t ScanOptions::binary_fingerprint[16] = {0x3D,0x87,0xD0,0xCD,0x05,0xFA,0x62,0xE1,0x58,0x80,0xC4,0xD2,0xC5,0x95,0x90,0x7C};
IteratorSetting::IteratorSetting(const IteratorSetting&amp; other34) {
  priority = other34.priority;
  name = other34.name;
  iteratorClass = other34.iteratorClass;
  properties = other34.properties;
  __isset = other34.__isset;
}
IteratorSetting&amp; IteratorSetting::operator=(const IteratorSetting&amp; other35) {
  priority = other35.priority;
  name = other35.name;
  iteratorClass = other35.iteratorClass;
  properties = other35.properties;
  __isset = other35.__isset;
  return *this;
}
void IteratorSetting::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "IteratorSetting(";
  out &lt;&lt; "priority=" &lt;&lt; to_string(priority);
  out &lt;&lt; ", " &lt;&lt; "name=" &lt;&lt; to_string(name);
  out &lt;&lt; ", " &lt;&lt; "iteratorClass=" &lt;&lt; to_string(iteratorClass);
  out &lt;&lt; ", " &lt;&lt; "properties=" &lt;&lt; to_string(properties);
  out &lt;&lt; ")";
}


ScanOptions::~ScanOptions() throw() {
}


void ScanOptions::__set_authorizations(const std::set&lt;std::string&gt; &amp; val) {
  this-&gt;authorizations = val;
__isset.authorizations = true;
}

void ScanOptions::__set_range(const Range&amp; val) {
  this-&gt;range = val;
__isset.range = true;
}

void ScanOptions::__set_columns(const std::vector&lt;ScanColumn&gt; &amp; val) {
  this-&gt;columns = val;
__isset.columns = true;
}

void ScanOptions::__set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
  this-&gt;iterators = val;
__isset.iterators = true;
}

void ScanOptions::__set_bufferSize(const int32_t val) {
  this-&gt;bufferSize = val;
__isset.bufferSize = true;
}
 
 uint32_t ScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1030,15 +1392,15 @@ uint32_t ScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;authorizations.clear();
            uint32_t _size20;
            ::apache::thrift::protocol::TType _etype23;
            xfer += iprot-&gt;readSetBegin(_etype23, _size20);
            uint32_t _i24;
            for (_i24 = 0; _i24 &lt; _size20; ++_i24)
            uint32_t _size36;
            ::apache::thrift::protocol::TType _etype39;
            xfer += iprot-&gt;readSetBegin(_etype39, _size36);
            uint32_t _i40;
            for (_i40 = 0; _i40 &lt; _size36; ++_i40)
             {
              std::string _elem25;
              xfer += iprot-&gt;readBinary(_elem25);
              this-&gt;authorizations.insert(_elem25);
              std::string _elem41;
              xfer += iprot-&gt;readBinary(_elem41);
              this-&gt;authorizations.insert(_elem41);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -1059,14 +1421,14 @@ uint32_t ScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;columns.clear();
            uint32_t _size26;
            ::apache::thrift::protocol::TType _etype29;
            xfer += iprot-&gt;readListBegin(_etype29, _size26);
            this-&gt;columns.resize(_size26);
            uint32_t _i30;
            for (_i30 = 0; _i30 &lt; _size26; ++_i30)
            uint32_t _size42;
            ::apache::thrift::protocol::TType _etype45;
            xfer += iprot-&gt;readListBegin(_etype45, _size42);
            this-&gt;columns.resize(_size42);
            uint32_t _i46;
            for (_i46 = 0; _i46 &lt; _size42; ++_i46)
             {
              xfer += this-&gt;columns[_i30].read(iprot);
              xfer += this-&gt;columns[_i46].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1079,14 +1441,14 @@ uint32_t ScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;iterators.clear();
            uint32_t _size31;
            ::apache::thrift::protocol::TType _etype34;
            xfer += iprot-&gt;readListBegin(_etype34, _size31);
            this-&gt;iterators.resize(_size31);
            uint32_t _i35;
            for (_i35 = 0; _i35 &lt; _size31; ++_i35)
            uint32_t _size47;
            ::apache::thrift::protocol::TType _etype50;
            xfer += iprot-&gt;readListBegin(_etype50, _size47);
            this-&gt;iterators.resize(_size47);
            uint32_t _i51;
            for (_i51 = 0; _i51 &lt; _size47; ++_i51)
             {
              xfer += this-&gt;iterators[_i35].read(iprot);
              xfer += this-&gt;iterators[_i51].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1117,16 +1479,17 @@ uint32_t ScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t ScanOptions::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ScanOptions");
 
   if (this-&gt;__isset.authorizations) {
     xfer += oprot-&gt;writeFieldBegin("authorizations", ::apache::thrift::protocol::T_SET, 1);
     {
       xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;authorizations.size()));
      std::set&lt;std::string&gt; ::const_iterator _iter36;
      for (_iter36 = this-&gt;authorizations.begin(); _iter36 != this-&gt;authorizations.end(); ++_iter36)
      std::set&lt;std::string&gt; ::const_iterator _iter52;
      for (_iter52 = this-&gt;authorizations.begin(); _iter52 != this-&gt;authorizations.end(); ++_iter52)
       {
        xfer += oprot-&gt;writeBinary((*_iter36));
        xfer += oprot-&gt;writeBinary((*_iter52));
       }
       xfer += oprot-&gt;writeSetEnd();
     }
@@ -1141,10 +1504,10 @@ uint32_t ScanOptions::write(::apache::thrift::protocol::TProtocol* oprot) const
     xfer += oprot-&gt;writeFieldBegin("columns", ::apache::thrift::protocol::T_LIST, 3);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;columns.size()));
      std::vector&lt;ScanColumn&gt; ::const_iterator _iter37;
      for (_iter37 = this-&gt;columns.begin(); _iter37 != this-&gt;columns.end(); ++_iter37)
      std::vector&lt;ScanColumn&gt; ::const_iterator _iter53;
      for (_iter53 = this-&gt;columns.begin(); _iter53 != this-&gt;columns.end(); ++_iter53)
       {
        xfer += (*_iter37).write(oprot);
        xfer += (*_iter53).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -1154,10 +1517,10 @@ uint32_t ScanOptions::write(::apache::thrift::protocol::TProtocol* oprot) const
     xfer += oprot-&gt;writeFieldBegin("iterators", ::apache::thrift::protocol::T_LIST, 4);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;iterators.size()));
      std::vector&lt;IteratorSetting&gt; ::const_iterator _iter38;
      for (_iter38 = this-&gt;iterators.begin(); _iter38 != this-&gt;iterators.end(); ++_iter38)
      std::vector&lt;IteratorSetting&gt; ::const_iterator _iter54;
      for (_iter54 = this-&gt;iterators.begin(); _iter54 != this-&gt;iterators.end(); ++_iter54)
       {
        xfer += (*_iter38).write(oprot);
        xfer += (*_iter54).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -1183,11 +1546,67 @@ void swap(ScanOptions &amp;a, ScanOptions &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* BatchScanOptions::ascii_fingerprint = "6ADFA1FBE31B1220D2C103284E002308";
const uint8_t BatchScanOptions::binary_fingerprint[16] = {0x6A,0xDF,0xA1,0xFB,0xE3,0x1B,0x12,0x20,0xD2,0xC1,0x03,0x28,0x4E,0x00,0x23,0x08};
ScanOptions::ScanOptions(const ScanOptions&amp; other55) {
  authorizations = other55.authorizations;
  range = other55.range;
  columns = other55.columns;
  iterators = other55.iterators;
  bufferSize = other55.bufferSize;
  __isset = other55.__isset;
}
ScanOptions&amp; ScanOptions::operator=(const ScanOptions&amp; other56) {
  authorizations = other56.authorizations;
  range = other56.range;
  columns = other56.columns;
  iterators = other56.iterators;
  bufferSize = other56.bufferSize;
  __isset = other56.__isset;
  return *this;
}
void ScanOptions::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ScanOptions(";
  out &lt;&lt; "authorizations="; (__isset.authorizations ? (out &lt;&lt; to_string(authorizations)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "range="; (__isset.range ? (out &lt;&lt; to_string(range)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "columns="; (__isset.columns ? (out &lt;&lt; to_string(columns)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "iterators="; (__isset.iterators ? (out &lt;&lt; to_string(iterators)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "bufferSize="; (__isset.bufferSize ? (out &lt;&lt; to_string(bufferSize)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


BatchScanOptions::~BatchScanOptions() throw() {
}


void BatchScanOptions::__set_authorizations(const std::set&lt;std::string&gt; &amp; val) {
  this-&gt;authorizations = val;
__isset.authorizations = true;
}

void BatchScanOptions::__set_ranges(const std::vector&lt;Range&gt; &amp; val) {
  this-&gt;ranges = val;
__isset.ranges = true;
}

void BatchScanOptions::__set_columns(const std::vector&lt;ScanColumn&gt; &amp; val) {
  this-&gt;columns = val;
__isset.columns = true;
}

void BatchScanOptions::__set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
  this-&gt;iterators = val;
__isset.iterators = true;
}

void BatchScanOptions::__set_threads(const int32_t val) {
  this-&gt;threads = val;
__isset.threads = true;
}
 
 uint32_t BatchScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1210,15 +1629,15 @@ uint32_t BatchScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;authorizations.clear();
            uint32_t _size39;
            ::apache::thrift::protocol::TType _etype42;
            xfer += iprot-&gt;readSetBegin(_etype42, _size39);
            uint32_t _i43;
            for (_i43 = 0; _i43 &lt; _size39; ++_i43)
            uint32_t _size57;
            ::apache::thrift::protocol::TType _etype60;
            xfer += iprot-&gt;readSetBegin(_etype60, _size57);
            uint32_t _i61;
            for (_i61 = 0; _i61 &lt; _size57; ++_i61)
             {
              std::string _elem44;
              xfer += iprot-&gt;readBinary(_elem44);
              this-&gt;authorizations.insert(_elem44);
              std::string _elem62;
              xfer += iprot-&gt;readBinary(_elem62);
              this-&gt;authorizations.insert(_elem62);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -1231,14 +1650,14 @@ uint32_t BatchScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;ranges.clear();
            uint32_t _size45;
            ::apache::thrift::protocol::TType _etype48;
            xfer += iprot-&gt;readListBegin(_etype48, _size45);
            this-&gt;ranges.resize(_size45);
            uint32_t _i49;
            for (_i49 = 0; _i49 &lt; _size45; ++_i49)
            uint32_t _size63;
            ::apache::thrift::protocol::TType _etype66;
            xfer += iprot-&gt;readListBegin(_etype66, _size63);
            this-&gt;ranges.resize(_size63);
            uint32_t _i67;
            for (_i67 = 0; _i67 &lt; _size63; ++_i67)
             {
              xfer += this-&gt;ranges[_i49].read(iprot);
              xfer += this-&gt;ranges[_i67].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1251,14 +1670,14 @@ uint32_t BatchScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;columns.clear();
            uint32_t _size50;
            ::apache::thrift::protocol::TType _etype53;
            xfer += iprot-&gt;readListBegin(_etype53, _size50);
            this-&gt;columns.resize(_size50);
            uint32_t _i54;
            for (_i54 = 0; _i54 &lt; _size50; ++_i54)
            uint32_t _size68;
            ::apache::thrift::protocol::TType _etype71;
            xfer += iprot-&gt;readListBegin(_etype71, _size68);
            this-&gt;columns.resize(_size68);
            uint32_t _i72;
            for (_i72 = 0; _i72 &lt; _size68; ++_i72)
             {
              xfer += this-&gt;columns[_i54].read(iprot);
              xfer += this-&gt;columns[_i72].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1271,14 +1690,14 @@ uint32_t BatchScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;iterators.clear();
            uint32_t _size55;
            ::apache::thrift::protocol::TType _etype58;
            xfer += iprot-&gt;readListBegin(_etype58, _size55);
            this-&gt;iterators.resize(_size55);
            uint32_t _i59;
            for (_i59 = 0; _i59 &lt; _size55; ++_i59)
            uint32_t _size73;
            ::apache::thrift::protocol::TType _etype76;
            xfer += iprot-&gt;readListBegin(_etype76, _size73);
            this-&gt;iterators.resize(_size73);
            uint32_t _i77;
            for (_i77 = 0; _i77 &lt; _size73; ++_i77)
             {
              xfer += this-&gt;iterators[_i59].read(iprot);
              xfer += this-&gt;iterators[_i77].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1309,16 +1728,17 @@ uint32_t BatchScanOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t BatchScanOptions::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("BatchScanOptions");
 
   if (this-&gt;__isset.authorizations) {
     xfer += oprot-&gt;writeFieldBegin("authorizations", ::apache::thrift::protocol::T_SET, 1);
     {
       xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;authorizations.size()));
      std::set&lt;std::string&gt; ::const_iterator _iter60;
      for (_iter60 = this-&gt;authorizations.begin(); _iter60 != this-&gt;authorizations.end(); ++_iter60)
      std::set&lt;std::string&gt; ::const_iterator _iter78;
      for (_iter78 = this-&gt;authorizations.begin(); _iter78 != this-&gt;authorizations.end(); ++_iter78)
       {
        xfer += oprot-&gt;writeBinary((*_iter60));
        xfer += oprot-&gt;writeBinary((*_iter78));
       }
       xfer += oprot-&gt;writeSetEnd();
     }
@@ -1328,10 +1748,10 @@ uint32_t BatchScanOptions::write(::apache::thrift::protocol::TProtocol* oprot) c
     xfer += oprot-&gt;writeFieldBegin("ranges", ::apache::thrift::protocol::T_LIST, 2);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;ranges.size()));
      std::vector&lt;Range&gt; ::const_iterator _iter61;
      for (_iter61 = this-&gt;ranges.begin(); _iter61 != this-&gt;ranges.end(); ++_iter61)
      std::vector&lt;Range&gt; ::const_iterator _iter79;
      for (_iter79 = this-&gt;ranges.begin(); _iter79 != this-&gt;ranges.end(); ++_iter79)
       {
        xfer += (*_iter61).write(oprot);
        xfer += (*_iter79).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -1341,10 +1761,10 @@ uint32_t BatchScanOptions::write(::apache::thrift::protocol::TProtocol* oprot) c
     xfer += oprot-&gt;writeFieldBegin("columns", ::apache::thrift::protocol::T_LIST, 3);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;columns.size()));
      std::vector&lt;ScanColumn&gt; ::const_iterator _iter62;
      for (_iter62 = this-&gt;columns.begin(); _iter62 != this-&gt;columns.end(); ++_iter62)
      std::vector&lt;ScanColumn&gt; ::const_iterator _iter80;
      for (_iter80 = this-&gt;columns.begin(); _iter80 != this-&gt;columns.end(); ++_iter80)
       {
        xfer += (*_iter62).write(oprot);
        xfer += (*_iter80).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -1354,10 +1774,10 @@ uint32_t BatchScanOptions::write(::apache::thrift::protocol::TProtocol* oprot) c
     xfer += oprot-&gt;writeFieldBegin("iterators", ::apache::thrift::protocol::T_LIST, 4);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;iterators.size()));
      std::vector&lt;IteratorSetting&gt; ::const_iterator _iter63;
      for (_iter63 = this-&gt;iterators.begin(); _iter63 != this-&gt;iterators.end(); ++_iter63)
      std::vector&lt;IteratorSetting&gt; ::const_iterator _iter81;
      for (_iter81 = this-&gt;iterators.begin(); _iter81 != this-&gt;iterators.end(); ++_iter81)
       {
        xfer += (*_iter63).write(oprot);
        xfer += (*_iter81).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -1383,11 +1803,50 @@ void swap(BatchScanOptions &amp;a, BatchScanOptions &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* KeyValueAndPeek::ascii_fingerprint = "CBBC6AB9C7EA5E5E748C13F970862FAB";
const uint8_t KeyValueAndPeek::binary_fingerprint[16] = {0xCB,0xBC,0x6A,0xB9,0xC7,0xEA,0x5E,0x5E,0x74,0x8C,0x13,0xF9,0x70,0x86,0x2F,0xAB};
BatchScanOptions::BatchScanOptions(const BatchScanOptions&amp; other82) {
  authorizations = other82.authorizations;
  ranges = other82.ranges;
  columns = other82.columns;
  iterators = other82.iterators;
  threads = other82.threads;
  __isset = other82.__isset;
}
BatchScanOptions&amp; BatchScanOptions::operator=(const BatchScanOptions&amp; other83) {
  authorizations = other83.authorizations;
  ranges = other83.ranges;
  columns = other83.columns;
  iterators = other83.iterators;
  threads = other83.threads;
  __isset = other83.__isset;
  return *this;
}
void BatchScanOptions::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "BatchScanOptions(";
  out &lt;&lt; "authorizations="; (__isset.authorizations ? (out &lt;&lt; to_string(authorizations)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "ranges="; (__isset.ranges ? (out &lt;&lt; to_string(ranges)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "columns="; (__isset.columns ? (out &lt;&lt; to_string(columns)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "iterators="; (__isset.iterators ? (out &lt;&lt; to_string(iterators)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "threads="; (__isset.threads ? (out &lt;&lt; to_string(threads)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


KeyValueAndPeek::~KeyValueAndPeek() throw() {
}


void KeyValueAndPeek::__set_keyValue(const KeyValue&amp; val) {
  this-&gt;keyValue = val;
}

void KeyValueAndPeek::__set_hasNext(const bool val) {
  this-&gt;hasNext = val;
}
 
 uint32_t KeyValueAndPeek::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1436,6 +1895,7 @@ uint32_t KeyValueAndPeek::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t KeyValueAndPeek::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("KeyValueAndPeek");
 
   xfer += oprot-&gt;writeFieldBegin("keyValue", ::apache::thrift::protocol::T_STRUCT, 1);
@@ -1458,11 +1918,45 @@ void swap(KeyValueAndPeek &amp;a, KeyValueAndPeek &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* KeyExtent::ascii_fingerprint = "AB879940BD15B6B25691265F7384B271";
const uint8_t KeyExtent::binary_fingerprint[16] = {0xAB,0x87,0x99,0x40,0xBD,0x15,0xB6,0xB2,0x56,0x91,0x26,0x5F,0x73,0x84,0xB2,0x71};
KeyValueAndPeek::KeyValueAndPeek(const KeyValueAndPeek&amp; other84) {
  keyValue = other84.keyValue;
  hasNext = other84.hasNext;
  __isset = other84.__isset;
}
KeyValueAndPeek&amp; KeyValueAndPeek::operator=(const KeyValueAndPeek&amp; other85) {
  keyValue = other85.keyValue;
  hasNext = other85.hasNext;
  __isset = other85.__isset;
  return *this;
}
void KeyValueAndPeek::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "KeyValueAndPeek(";
  out &lt;&lt; "keyValue=" &lt;&lt; to_string(keyValue);
  out &lt;&lt; ", " &lt;&lt; "hasNext=" &lt;&lt; to_string(hasNext);
  out &lt;&lt; ")";
}


KeyExtent::~KeyExtent() throw() {
}


void KeyExtent::__set_tableId(const std::string&amp; val) {
  this-&gt;tableId = val;
}

void KeyExtent::__set_endRow(const std::string&amp; val) {
  this-&gt;endRow = val;
}

void KeyExtent::__set_prevEndRow(const std::string&amp; val) {
  this-&gt;prevEndRow = val;
}
 
 uint32_t KeyExtent::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1519,6 +2013,7 @@ uint32_t KeyExtent::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t KeyExtent::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("KeyExtent");
 
   xfer += oprot-&gt;writeFieldBegin("tableId", ::apache::thrift::protocol::T_STRING, 1);
@@ -1546,11 +2041,48 @@ void swap(KeyExtent &amp;a, KeyExtent &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* Column::ascii_fingerprint = "AB879940BD15B6B25691265F7384B271";
const uint8_t Column::binary_fingerprint[16] = {0xAB,0x87,0x99,0x40,0xBD,0x15,0xB6,0xB2,0x56,0x91,0x26,0x5F,0x73,0x84,0xB2,0x71};
KeyExtent::KeyExtent(const KeyExtent&amp; other86) {
  tableId = other86.tableId;
  endRow = other86.endRow;
  prevEndRow = other86.prevEndRow;
  __isset = other86.__isset;
}
KeyExtent&amp; KeyExtent::operator=(const KeyExtent&amp; other87) {
  tableId = other87.tableId;
  endRow = other87.endRow;
  prevEndRow = other87.prevEndRow;
  __isset = other87.__isset;
  return *this;
}
void KeyExtent::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "KeyExtent(";
  out &lt;&lt; "tableId=" &lt;&lt; to_string(tableId);
  out &lt;&lt; ", " &lt;&lt; "endRow=" &lt;&lt; to_string(endRow);
  out &lt;&lt; ", " &lt;&lt; "prevEndRow=" &lt;&lt; to_string(prevEndRow);
  out &lt;&lt; ")";
}


Column::~Column() throw() {
}


void Column::__set_colFamily(const std::string&amp; val) {
  this-&gt;colFamily = val;
}

void Column::__set_colQualifier(const std::string&amp; val) {
  this-&gt;colQualifier = val;
}

void Column::__set_colVisibility(const std::string&amp; val) {
  this-&gt;colVisibility = val;
}
 
 uint32_t Column::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1607,6 +2139,7 @@ uint32_t Column::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t Column::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("Column");
 
   xfer += oprot-&gt;writeFieldBegin("colFamily", ::apache::thrift::protocol::T_STRING, 1);
@@ -1634,11 +2167,55 @@ void swap(Column &amp;a, Column &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* Condition::ascii_fingerprint = "C4022914C22D89E33B1A46A7D511C58F";
const uint8_t Condition::binary_fingerprint[16] = {0xC4,0x02,0x29,0x14,0xC2,0x2D,0x89,0xE3,0x3B,0x1A,0x46,0xA7,0xD5,0x11,0xC5,0x8F};
Column::Column(const Column&amp; other88) {
  colFamily = other88.colFamily;
  colQualifier = other88.colQualifier;
  colVisibility = other88.colVisibility;
  __isset = other88.__isset;
}
Column&amp; Column::operator=(const Column&amp; other89) {
  colFamily = other89.colFamily;
  colQualifier = other89.colQualifier;
  colVisibility = other89.colVisibility;
  __isset = other89.__isset;
  return *this;
}
void Column::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "Column(";
  out &lt;&lt; "colFamily=" &lt;&lt; to_string(colFamily);
  out &lt;&lt; ", " &lt;&lt; "colQualifier=" &lt;&lt; to_string(colQualifier);
  out &lt;&lt; ", " &lt;&lt; "colVisibility=" &lt;&lt; to_string(colVisibility);
  out &lt;&lt; ")";
}


Condition::~Condition() throw() {
}


void Condition::__set_column(const Column&amp; val) {
  this-&gt;column = val;
}

void Condition::__set_timestamp(const int64_t val) {
  this-&gt;timestamp = val;
__isset.timestamp = true;
}

void Condition::__set_value(const std::string&amp; val) {
  this-&gt;value = val;
__isset.value = true;
}

void Condition::__set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
  this-&gt;iterators = val;
__isset.iterators = true;
}
 
 uint32_t Condition::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1685,14 +2262,14 @@ uint32_t Condition::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;iterators.clear();
            uint32_t _size64;
            ::apache::thrift::protocol::TType _etype67;
            xfer += iprot-&gt;readListBegin(_etype67, _size64);
            this-&gt;iterators.resize(_size64);
            uint32_t _i68;
            for (_i68 = 0; _i68 &lt; _size64; ++_i68)
            uint32_t _size90;
            ::apache::thrift::protocol::TType _etype93;
            xfer += iprot-&gt;readListBegin(_etype93, _size90);
            this-&gt;iterators.resize(_size90);
            uint32_t _i94;
            for (_i94 = 0; _i94 &lt; _size90; ++_i94)
             {
              xfer += this-&gt;iterators[_i68].read(iprot);
              xfer += this-&gt;iterators[_i94].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1715,6 +2292,7 @@ uint32_t Condition::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t Condition::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("Condition");
 
   xfer += oprot-&gt;writeFieldBegin("column", ::apache::thrift::protocol::T_STRUCT, 1);
@@ -1735,10 +2313,10 @@ uint32_t Condition::write(::apache::thrift::protocol::TProtocol* oprot) const {
     xfer += oprot-&gt;writeFieldBegin("iterators", ::apache::thrift::protocol::T_LIST, 4);
     {
       xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;iterators.size()));
      std::vector&lt;IteratorSetting&gt; ::const_iterator _iter69;
      for (_iter69 = this-&gt;iterators.begin(); _iter69 != this-&gt;iterators.end(); ++_iter69)
      std::vector&lt;IteratorSetting&gt; ::const_iterator _iter95;
      for (_iter95 = this-&gt;iterators.begin(); _iter95 != this-&gt;iterators.end(); ++_iter95)
       {
        xfer += (*_iter69).write(oprot);
        xfer += (*_iter95).write(oprot);
       }
       xfer += oprot-&gt;writeListEnd();
     }
@@ -1758,11 +2336,47 @@ void swap(Condition &amp;a, Condition &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ConditionalUpdates::ascii_fingerprint = "1C1808872D1A8E04F114974ADD77F356";
const uint8_t ConditionalUpdates::binary_fingerprint[16] = {0x1C,0x18,0x08,0x87,0x2D,0x1A,0x8E,0x04,0xF1,0x14,0x97,0x4A,0xDD,0x77,0xF3,0x56};
Condition::Condition(const Condition&amp; other96) {
  column = other96.column;
  timestamp = other96.timestamp;
  value = other96.value;
  iterators = other96.iterators;
  __isset = other96.__isset;
}
Condition&amp; Condition::operator=(const Condition&amp; other97) {
  column = other97.column;
  timestamp = other97.timestamp;
  value = other97.value;
  iterators = other97.iterators;
  __isset = other97.__isset;
  return *this;
}
void Condition::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "Condition(";
  out &lt;&lt; "column=" &lt;&lt; to_string(column);
  out &lt;&lt; ", " &lt;&lt; "timestamp="; (__isset.timestamp ? (out &lt;&lt; to_string(timestamp)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "value="; (__isset.value ? (out &lt;&lt; to_string(value)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "iterators="; (__isset.iterators ? (out &lt;&lt; to_string(iterators)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


ConditionalUpdates::~ConditionalUpdates() throw() {
}


void ConditionalUpdates::__set_conditions(const std::vector&lt;Condition&gt; &amp; val) {
  this-&gt;conditions = val;
}

void ConditionalUpdates::__set_updates(const std::vector&lt;ColumnUpdate&gt; &amp; val) {
  this-&gt;updates = val;
}
 
 uint32_t ConditionalUpdates::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1785,14 +2399,14 @@ uint32_t ConditionalUpdates::read(::apache::thrift::protocol::TProtocol* iprot)
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;conditions.clear();
            uint32_t _size70;
            ::apache::thrift::protocol::TType _etype73;
            xfer += iprot-&gt;readListBegin(_etype73, _size70);
            this-&gt;conditions.resize(_size70);
            uint32_t _i74;
            for (_i74 = 0; _i74 &lt; _size70; ++_i74)
            uint32_t _size98;
            ::apache::thrift::protocol::TType _etype101;
            xfer += iprot-&gt;readListBegin(_etype101, _size98);
            this-&gt;conditions.resize(_size98);
            uint32_t _i102;
            for (_i102 = 0; _i102 &lt; _size98; ++_i102)
             {
              xfer += this-&gt;conditions[_i74].read(iprot);
              xfer += this-&gt;conditions[_i102].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1805,14 +2419,14 @@ uint32_t ConditionalUpdates::read(::apache::thrift::protocol::TProtocol* iprot)
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;updates.clear();
            uint32_t _size75;
            ::apache::thrift::protocol::TType _etype78;
            xfer += iprot-&gt;readListBegin(_etype78, _size75);
            this-&gt;updates.resize(_size75);
            uint32_t _i79;
            for (_i79 = 0; _i79 &lt; _size75; ++_i79)
            uint32_t _size103;
            ::apache::thrift::protocol::TType _etype106;
            xfer += iprot-&gt;readListBegin(_etype106, _size103);
            this-&gt;updates.resize(_size103);
            uint32_t _i107;
            for (_i107 = 0; _i107 &lt; _size103; ++_i107)
             {
              xfer += this-&gt;updates[_i79].read(iprot);
              xfer += this-&gt;updates[_i107].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -1835,15 +2449,16 @@ uint32_t ConditionalUpdates::read(::apache::thrift::protocol::TProtocol* iprot)
 
 uint32_t ConditionalUpdates::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ConditionalUpdates");
 
   xfer += oprot-&gt;writeFieldBegin("conditions", ::apache::thrift::protocol::T_LIST, 2);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;conditions.size()));
    std::vector&lt;Condition&gt; ::const_iterator _iter80;
    for (_iter80 = this-&gt;conditions.begin(); _iter80 != this-&gt;conditions.end(); ++_iter80)
    std::vector&lt;Condition&gt; ::const_iterator _iter108;
    for (_iter108 = this-&gt;conditions.begin(); _iter108 != this-&gt;conditions.end(); ++_iter108)
     {
      xfer += (*_iter80).write(oprot);
      xfer += (*_iter108).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -1852,10 +2467,10 @@ uint32_t ConditionalUpdates::write(::apache::thrift::protocol::TProtocol* oprot)
   xfer += oprot-&gt;writeFieldBegin("updates", ::apache::thrift::protocol::T_LIST, 3);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;updates.size()));
    std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter81;
    for (_iter81 = this-&gt;updates.begin(); _iter81 != this-&gt;updates.end(); ++_iter81)
    std::vector&lt;ColumnUpdate&gt; ::const_iterator _iter109;
    for (_iter109 = this-&gt;updates.begin(); _iter109 != this-&gt;updates.end(); ++_iter109)
     {
      xfer += (*_iter81).write(oprot);
      xfer += (*_iter109).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -1873,11 +2488,58 @@ void swap(ConditionalUpdates &amp;a, ConditionalUpdates &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ConditionalWriterOptions::ascii_fingerprint = "C345C04E84A351638B6EACB741BD600E";
const uint8_t ConditionalWriterOptions::binary_fingerprint[16] = {0xC3,0x45,0xC0,0x4E,0x84,0xA3,0x51,0x63,0x8B,0x6E,0xAC,0xB7,0x41,0xBD,0x60,0x0E};
ConditionalUpdates::ConditionalUpdates(const ConditionalUpdates&amp; other110) {
  conditions = other110.conditions;
  updates = other110.updates;
  __isset = other110.__isset;
}
ConditionalUpdates&amp; ConditionalUpdates::operator=(const ConditionalUpdates&amp; other111) {
  conditions = other111.conditions;
  updates = other111.updates;
  __isset = other111.__isset;
  return *this;
}
void ConditionalUpdates::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ConditionalUpdates(";
  out &lt;&lt; "conditions=" &lt;&lt; to_string(conditions);
  out &lt;&lt; ", " &lt;&lt; "updates=" &lt;&lt; to_string(updates);
  out &lt;&lt; ")";
}


ConditionalWriterOptions::~ConditionalWriterOptions() throw() {
}


void ConditionalWriterOptions::__set_maxMemory(const int64_t val) {
  this-&gt;maxMemory = val;
__isset.maxMemory = true;
}

void ConditionalWriterOptions::__set_timeoutMs(const int64_t val) {
  this-&gt;timeoutMs = val;
__isset.timeoutMs = true;
}

void ConditionalWriterOptions::__set_threads(const int32_t val) {
  this-&gt;threads = val;
__isset.threads = true;
}

void ConditionalWriterOptions::__set_authorizations(const std::set&lt;std::string&gt; &amp; val) {
  this-&gt;authorizations = val;
__isset.authorizations = true;
}

void ConditionalWriterOptions::__set_durability(const Durability::type val) {
  this-&gt;durability = val;
__isset.durability = true;
}
 
 uint32_t ConditionalWriterOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -1924,15 +2586,15 @@ uint32_t ConditionalWriterOptions::read(::apache::thrift::protocol::TProtocol* i
         if (ftype == ::apache::thrift::protocol::T_SET) {
           {
             this-&gt;authorizations.clear();
            uint32_t _size82;
            ::apache::thrift::protocol::TType _etype85;
            xfer += iprot-&gt;readSetBegin(_etype85, _size82);
            uint32_t _i86;
            for (_i86 = 0; _i86 &lt; _size82; ++_i86)
            uint32_t _size112;
            ::apache::thrift::protocol::TType _etype115;
            xfer += iprot-&gt;readSetBegin(_etype115, _size112);
            uint32_t _i116;
            for (_i116 = 0; _i116 &lt; _size112; ++_i116)
             {
              std::string _elem87;
              xfer += iprot-&gt;readBinary(_elem87);
              this-&gt;authorizations.insert(_elem87);
              std::string _elem117;
              xfer += iprot-&gt;readBinary(_elem117);
              this-&gt;authorizations.insert(_elem117);
             }
             xfer += iprot-&gt;readSetEnd();
           }
@@ -1943,9 +2605,9 @@ uint32_t ConditionalWriterOptions::read(::apache::thrift::protocol::TProtocol* i
         break;
       case 5:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast88;
          xfer += iprot-&gt;readI32(ecast88);
          this-&gt;durability = (Durability::type)ecast88;
          int32_t ecast118;
          xfer += iprot-&gt;readI32(ecast118);
          this-&gt;durability = (Durability::type)ecast118;
           this-&gt;__isset.durability = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -1965,6 +2627,7 @@ uint32_t ConditionalWriterOptions::read(::apache::thrift::protocol::TProtocol* i
 
 uint32_t ConditionalWriterOptions::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ConditionalWriterOptions");
 
   if (this-&gt;__isset.maxMemory) {
@@ -1986,10 +2649,10 @@ uint32_t ConditionalWriterOptions::write(::apache::thrift::protocol::TProtocol*
     xfer += oprot-&gt;writeFieldBegin("authorizations", ::apache::thrift::protocol::T_SET, 4);
     {
       xfer += oprot-&gt;writeSetBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;authorizations.size()));
      std::set&lt;std::string&gt; ::const_iterator _iter89;
      for (_iter89 = this-&gt;authorizations.begin(); _iter89 != this-&gt;authorizations.end(); ++_iter89)
      std::set&lt;std::string&gt; ::const_iterator _iter119;
      for (_iter119 = this-&gt;authorizations.begin(); _iter119 != this-&gt;authorizations.end(); ++_iter119)
       {
        xfer += oprot-&gt;writeBinary((*_iter89));
        xfer += oprot-&gt;writeBinary((*_iter119));
       }
       xfer += oprot-&gt;writeSetEnd();
     }
@@ -2015,11 +2678,86 @@ void swap(ConditionalWriterOptions &amp;a, ConditionalWriterOptions &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ActiveScan::ascii_fingerprint = "1B97541CB4E900A054266BBBEE61D004";
const uint8_t ActiveScan::binary_fingerprint[16] = {0x1B,0x97,0x54,0x1C,0xB4,0xE9,0x00,0xA0,0x54,0x26,0x6B,0xBB,0xEE,0x61,0xD0,0x04};
ConditionalWriterOptions::ConditionalWriterOptions(const ConditionalWriterOptions&amp; other120) {
  maxMemory = other120.maxMemory;
  timeoutMs = other120.timeoutMs;
  threads = other120.threads;
  authorizations = other120.authorizations;
  durability = other120.durability;
  __isset = other120.__isset;
}
ConditionalWriterOptions&amp; ConditionalWriterOptions::operator=(const ConditionalWriterOptions&amp; other121) {
  maxMemory = other121.maxMemory;
  timeoutMs = other121.timeoutMs;
  threads = other121.threads;
  authorizations = other121.authorizations;
  durability = other121.durability;
  __isset = other121.__isset;
  return *this;
}
void ConditionalWriterOptions::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ConditionalWriterOptions(";
  out &lt;&lt; "maxMemory="; (__isset.maxMemory ? (out &lt;&lt; to_string(maxMemory)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "timeoutMs="; (__isset.timeoutMs ? (out &lt;&lt; to_string(timeoutMs)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "threads="; (__isset.threads ? (out &lt;&lt; to_string(threads)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "authorizations="; (__isset.authorizations ? (out &lt;&lt; to_string(authorizations)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ", " &lt;&lt; "durability="; (__isset.durability ? (out &lt;&lt; to_string(durability)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


ActiveScan::~ActiveScan() throw() {
}


void ActiveScan::__set_client(const std::string&amp; val) {
  this-&gt;client = val;
}

void ActiveScan::__set_user(const std::string&amp; val) {
  this-&gt;user = val;
}

void ActiveScan::__set_table(const std::string&amp; val) {
  this-&gt;table = val;
}

void ActiveScan::__set_age(const int64_t val) {
  this-&gt;age = val;
}

void ActiveScan::__set_idleTime(const int64_t val) {
  this-&gt;idleTime = val;
}

void ActiveScan::__set_type(const ScanType::type val) {
  this-&gt;type = val;
}

void ActiveScan::__set_state(const ScanState::type val) {
  this-&gt;state = val;
}

void ActiveScan::__set_extent(const KeyExtent&amp; val) {
  this-&gt;extent = val;
}

void ActiveScan::__set_columns(const std::vector&lt;Column&gt; &amp; val) {
  this-&gt;columns = val;
}

void ActiveScan::__set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
  this-&gt;iterators = val;
}

void ActiveScan::__set_authorizations(const std::vector&lt;std::string&gt; &amp; val) {
  this-&gt;authorizations = val;
}
 
 uint32_t ActiveScan::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2080,9 +2818,9 @@ uint32_t ActiveScan::read(::apache::thrift::protocol::TProtocol* iprot) {
         break;
       case 6:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast90;
          xfer += iprot-&gt;readI32(ecast90);
          this-&gt;type = (ScanType::type)ecast90;
          int32_t ecast122;
          xfer += iprot-&gt;readI32(ecast122);
          this-&gt;type = (ScanType::type)ecast122;
           this-&gt;__isset.type = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -2090,9 +2828,9 @@ uint32_t ActiveScan::read(::apache::thrift::protocol::TProtocol* iprot) {
         break;
       case 7:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast91;
          xfer += iprot-&gt;readI32(ecast91);
          this-&gt;state = (ScanState::type)ecast91;
          int32_t ecast123;
          xfer += iprot-&gt;readI32(ecast123);
          this-&gt;state = (ScanState::type)ecast123;
           this-&gt;__isset.state = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -2110,14 +2848,14 @@ uint32_t ActiveScan::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;columns.clear();
            uint32_t _size92;
            ::apache::thrift::protocol::TType _etype95;
            xfer += iprot-&gt;readListBegin(_etype95, _size92);
            this-&gt;columns.resize(_size92);
            uint32_t _i96;
            for (_i96 = 0; _i96 &lt; _size92; ++_i96)
            uint32_t _size124;
            ::apache::thrift::protocol::TType _etype127;
            xfer += iprot-&gt;readListBegin(_etype127, _size124);
            this-&gt;columns.resize(_size124);
            uint32_t _i128;
            for (_i128 = 0; _i128 &lt; _size124; ++_i128)
             {
              xfer += this-&gt;columns[_i96].read(iprot);
              xfer += this-&gt;columns[_i128].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -2130,14 +2868,14 @@ uint32_t ActiveScan::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;iterators.clear();
            uint32_t _size97;
            ::apache::thrift::protocol::TType _etype100;
            xfer += iprot-&gt;readListBegin(_etype100, _size97);
            this-&gt;iterators.resize(_size97);
            uint32_t _i101;
            for (_i101 = 0; _i101 &lt; _size97; ++_i101)
            uint32_t _size129;
            ::apache::thrift::protocol::TType _etype132;
            xfer += iprot-&gt;readListBegin(_etype132, _size129);
            this-&gt;iterators.resize(_size129);
            uint32_t _i133;
            for (_i133 = 0; _i133 &lt; _size129; ++_i133)
             {
              xfer += this-&gt;iterators[_i101].read(iprot);
              xfer += this-&gt;iterators[_i133].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -2150,14 +2888,14 @@ uint32_t ActiveScan::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;authorizations.clear();
            uint32_t _size102;
            ::apache::thrift::protocol::TType _etype105;
            xfer += iprot-&gt;readListBegin(_etype105, _size102);
            this-&gt;authorizations.resize(_size102);
            uint32_t _i106;
            for (_i106 = 0; _i106 &lt; _size102; ++_i106)
            uint32_t _size134;
            ::apache::thrift::protocol::TType _etype137;
            xfer += iprot-&gt;readListBegin(_etype137, _size134);
            this-&gt;authorizations.resize(_size134);
            uint32_t _i138;
            for (_i138 = 0; _i138 &lt; _size134; ++_i138)
             {
              xfer += iprot-&gt;readBinary(this-&gt;authorizations[_i106]);
              xfer += iprot-&gt;readBinary(this-&gt;authorizations[_i138]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -2180,6 +2918,7 @@ uint32_t ActiveScan::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t ActiveScan::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ActiveScan");
 
   xfer += oprot-&gt;writeFieldBegin("client", ::apache::thrift::protocol::T_STRING, 1);
@@ -2217,10 +2956,10 @@ uint32_t ActiveScan::write(::apache::thrift::protocol::TProtocol* oprot) const {
   xfer += oprot-&gt;writeFieldBegin("columns", ::apache::thrift::protocol::T_LIST, 9);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;columns.size()));
    std::vector&lt;Column&gt; ::const_iterator _iter107;
    for (_iter107 = this-&gt;columns.begin(); _iter107 != this-&gt;columns.end(); ++_iter107)
    std::vector&lt;Column&gt; ::const_iterator _iter139;
    for (_iter139 = this-&gt;columns.begin(); _iter139 != this-&gt;columns.end(); ++_iter139)
     {
      xfer += (*_iter107).write(oprot);
      xfer += (*_iter139).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -2229,10 +2968,10 @@ uint32_t ActiveScan::write(::apache::thrift::protocol::TProtocol* oprot) const {
   xfer += oprot-&gt;writeFieldBegin("iterators", ::apache::thrift::protocol::T_LIST, 10);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;iterators.size()));
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter108;
    for (_iter108 = this-&gt;iterators.begin(); _iter108 != this-&gt;iterators.end(); ++_iter108)
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter140;
    for (_iter140 = this-&gt;iterators.begin(); _iter140 != this-&gt;iterators.end(); ++_iter140)
     {
      xfer += (*_iter108).write(oprot);
      xfer += (*_iter140).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -2241,10 +2980,10 @@ uint32_t ActiveScan::write(::apache::thrift::protocol::TProtocol* oprot) const {
   xfer += oprot-&gt;writeFieldBegin("authorizations", ::apache::thrift::protocol::T_LIST, 11);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;authorizations.size()));
    std::vector&lt;std::string&gt; ::const_iterator _iter109;
    for (_iter109 = this-&gt;authorizations.begin(); _iter109 != this-&gt;authorizations.end(); ++_iter109)
    std::vector&lt;std::string&gt; ::const_iterator _iter141;
    for (_iter141 = this-&gt;authorizations.begin(); _iter141 != this-&gt;authorizations.end(); ++_iter141)
     {
      xfer += oprot-&gt;writeBinary((*_iter109));
      xfer += oprot-&gt;writeBinary((*_iter141));
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -2271,11 +3010,100 @@ void swap(ActiveScan &amp;a, ActiveScan &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* ActiveCompaction::ascii_fingerprint = "2BB155CC901109464666B6C7E6A8C1A6";
const uint8_t ActiveCompaction::binary_fingerprint[16] = {0x2B,0xB1,0x55,0xCC,0x90,0x11,0x09,0x46,0x46,0x66,0xB6,0xC7,0xE6,0xA8,0xC1,0xA6};
ActiveScan::ActiveScan(const ActiveScan&amp; other142) {
  client = other142.client;
  user = other142.user;
  table = other142.table;
  age = other142.age;
  idleTime = other142.idleTime;
  type = other142.type;
  state = other142.state;
  extent = other142.extent;
  columns = other142.columns;
  iterators = other142.iterators;
  authorizations = other142.authorizations;
  __isset = other142.__isset;
}
ActiveScan&amp; ActiveScan::operator=(const ActiveScan&amp; other143) {
  client = other143.client;
  user = other143.user;
  table = other143.table;
  age = other143.age;
  idleTime = other143.idleTime;
  type = other143.type;
  state = other143.state;
  extent = other143.extent;
  columns = other143.columns;
  iterators = other143.iterators;
  authorizations = other143.authorizations;
  __isset = other143.__isset;
  return *this;
}
void ActiveScan::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ActiveScan(";
  out &lt;&lt; "client=" &lt;&lt; to_string(client);
  out &lt;&lt; ", " &lt;&lt; "user=" &lt;&lt; to_string(user);
  out &lt;&lt; ", " &lt;&lt; "table=" &lt;&lt; to_string(table);
  out &lt;&lt; ", " &lt;&lt; "age=" &lt;&lt; to_string(age);
  out &lt;&lt; ", " &lt;&lt; "idleTime=" &lt;&lt; to_string(idleTime);
  out &lt;&lt; ", " &lt;&lt; "type=" &lt;&lt; to_string(type);
  out &lt;&lt; ", " &lt;&lt; "state=" &lt;&lt; to_string(state);
  out &lt;&lt; ", " &lt;&lt; "extent=" &lt;&lt; to_string(extent);
  out &lt;&lt; ", " &lt;&lt; "columns=" &lt;&lt; to_string(columns);
  out &lt;&lt; ", " &lt;&lt; "iterators=" &lt;&lt; to_string(iterators);
  out &lt;&lt; ", " &lt;&lt; "authorizations=" &lt;&lt; to_string(authorizations);
  out &lt;&lt; ")";
}


ActiveCompaction::~ActiveCompaction() throw() {
}


void ActiveCompaction::__set_extent(const KeyExtent&amp; val) {
  this-&gt;extent = val;
}

void ActiveCompaction::__set_age(const int64_t val) {
  this-&gt;age = val;
}

void ActiveCompaction::__set_inputFiles(const std::vector&lt;std::string&gt; &amp; val) {
  this-&gt;inputFiles = val;
}

void ActiveCompaction::__set_outputFile(const std::string&amp; val) {
  this-&gt;outputFile = val;
}

void ActiveCompaction::__set_type(const CompactionType::type val) {
  this-&gt;type = val;
}

void ActiveCompaction::__set_reason(const CompactionReason::type val) {
  this-&gt;reason = val;
}

void ActiveCompaction::__set_localityGroup(const std::string&amp; val) {
  this-&gt;localityGroup = val;
}

void ActiveCompaction::__set_entriesRead(const int64_t val) {
  this-&gt;entriesRead = val;
}

void ActiveCompaction::__set_entriesWritten(const int64_t val) {
  this-&gt;entriesWritten = val;
}

void ActiveCompaction::__set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
  this-&gt;iterators = val;
}
 
 uint32_t ActiveCompaction::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2314,14 +3142,14 @@ uint32_t ActiveCompaction::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;inputFiles.clear();
            uint32_t _size110;
            ::apache::thrift::protocol::TType _etype113;
            xfer += iprot-&gt;readListBegin(_etype113, _size110);
            this-&gt;inputFiles.resize(_size110);
            uint32_t _i114;
            for (_i114 = 0; _i114 &lt; _size110; ++_i114)
            uint32_t _size144;
            ::apache::thrift::protocol::TType _etype147;
            xfer += iprot-&gt;readListBegin(_etype147, _size144);
            this-&gt;inputFiles.resize(_size144);
            uint32_t _i148;
            for (_i148 = 0; _i148 &lt; _size144; ++_i148)
             {
              xfer += iprot-&gt;readString(this-&gt;inputFiles[_i114]);
              xfer += iprot-&gt;readString(this-&gt;inputFiles[_i148]);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -2340,9 +3168,9 @@ uint32_t ActiveCompaction::read(::apache::thrift::protocol::TProtocol* iprot) {
         break;
       case 5:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast115;
          xfer += iprot-&gt;readI32(ecast115);
          this-&gt;type = (CompactionType::type)ecast115;
          int32_t ecast149;
          xfer += iprot-&gt;readI32(ecast149);
          this-&gt;type = (CompactionType::type)ecast149;
           this-&gt;__isset.type = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -2350,9 +3178,9 @@ uint32_t ActiveCompaction::read(::apache::thrift::protocol::TProtocol* iprot) {
         break;
       case 6:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast116;
          xfer += iprot-&gt;readI32(ecast116);
          this-&gt;reason = (CompactionReason::type)ecast116;
          int32_t ecast150;
          xfer += iprot-&gt;readI32(ecast150);
          this-&gt;reason = (CompactionReason::type)ecast150;
           this-&gt;__isset.reason = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -2386,14 +3214,14 @@ uint32_t ActiveCompaction::read(::apache::thrift::protocol::TProtocol* iprot) {
         if (ftype == ::apache::thrift::protocol::T_LIST) {
           {
             this-&gt;iterators.clear();
            uint32_t _size117;
            ::apache::thrift::protocol::TType _etype120;
            xfer += iprot-&gt;readListBegin(_etype120, _size117);
            this-&gt;iterators.resize(_size117);
            uint32_t _i121;
            for (_i121 = 0; _i121 &lt; _size117; ++_i121)
            uint32_t _size151;
            ::apache::thrift::protocol::TType _etype154;
            xfer += iprot-&gt;readListBegin(_etype154, _size151);
            this-&gt;iterators.resize(_size151);
            uint32_t _i155;
            for (_i155 = 0; _i155 &lt; _size151; ++_i155)
             {
              xfer += this-&gt;iterators[_i121].read(iprot);
              xfer += this-&gt;iterators[_i155].read(iprot);
             }
             xfer += iprot-&gt;readListEnd();
           }
@@ -2416,6 +3244,7 @@ uint32_t ActiveCompaction::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t ActiveCompaction::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("ActiveCompaction");
 
   xfer += oprot-&gt;writeFieldBegin("extent", ::apache::thrift::protocol::T_STRUCT, 1);
@@ -2429,10 +3258,10 @@ uint32_t ActiveCompaction::write(::apache::thrift::protocol::TProtocol* oprot) c
   xfer += oprot-&gt;writeFieldBegin("inputFiles", ::apache::thrift::protocol::T_LIST, 3);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;inputFiles.size()));
    std::vector&lt;std::string&gt; ::const_iterator _iter122;
    for (_iter122 = this-&gt;inputFiles.begin(); _iter122 != this-&gt;inputFiles.end(); ++_iter122)
    std::vector&lt;std::string&gt; ::const_iterator _iter156;
    for (_iter156 = this-&gt;inputFiles.begin(); _iter156 != this-&gt;inputFiles.end(); ++_iter156)
     {
      xfer += oprot-&gt;writeString((*_iter122));
      xfer += oprot-&gt;writeString((*_iter156));
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -2465,10 +3294,10 @@ uint32_t ActiveCompaction::write(::apache::thrift::protocol::TProtocol* oprot) c
   xfer += oprot-&gt;writeFieldBegin("iterators", ::apache::thrift::protocol::T_LIST, 10);
   {
     xfer += oprot-&gt;writeListBegin(::apache::thrift::protocol::T_STRUCT, static_cast&lt;uint32_t&gt;(this-&gt;iterators.size()));
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter123;
    for (_iter123 = this-&gt;iterators.begin(); _iter123 != this-&gt;iterators.end(); ++_iter123)
    std::vector&lt;IteratorSetting&gt; ::const_iterator _iter157;
    for (_iter157 = this-&gt;iterators.begin(); _iter157 != this-&gt;iterators.end(); ++_iter157)
     {
      xfer += (*_iter123).write(oprot);
      xfer += (*_iter157).write(oprot);
     }
     xfer += oprot-&gt;writeListEnd();
   }
@@ -2494,11 +3323,78 @@ void swap(ActiveCompaction &amp;a, ActiveCompaction &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* WriterOptions::ascii_fingerprint = "6640C55D2C0D4C8C2E7589456EA0C61A";
const uint8_t WriterOptions::binary_fingerprint[16] = {0x66,0x40,0xC5,0x5D,0x2C,0x0D,0x4C,0x8C,0x2E,0x75,0x89,0x45,0x6E,0xA0,0xC6,0x1A};
ActiveCompaction::ActiveCompaction(const ActiveCompaction&amp; other158) {
  extent = other158.extent;
  age = other158.age;
  inputFiles = other158.inputFiles;
  outputFile = other158.outputFile;
  type = other158.type;
  reason = other158.reason;
  localityGroup = other158.localityGroup;
  entriesRead = other158.entriesRead;
  entriesWritten = other158.entriesWritten;
  iterators = other158.iterators;
  __isset = other158.__isset;
}
ActiveCompaction&amp; ActiveCompaction::operator=(const ActiveCompaction&amp; other159) {
  extent = other159.extent;
  age = other159.age;
  inputFiles = other159.inputFiles;
  outputFile = other159.outputFile;
  type = other159.type;
  reason = other159.reason;
  localityGroup = other159.localityGroup;
  entriesRead = other159.entriesRead;
  entriesWritten = other159.entriesWritten;
  iterators = other159.iterators;
  __isset = other159.__isset;
  return *this;
}
void ActiveCompaction::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "ActiveCompaction(";
  out &lt;&lt; "extent=" &lt;&lt; to_string(extent);
  out &lt;&lt; ", " &lt;&lt; "age=" &lt;&lt; to_string(age);
  out &lt;&lt; ", " &lt;&lt; "inputFiles=" &lt;&lt; to_string(inputFiles);
  out &lt;&lt; ", " &lt;&lt; "outputFile=" &lt;&lt; to_string(outputFile);
  out &lt;&lt; ", " &lt;&lt; "type=" &lt;&lt; to_string(type);
  out &lt;&lt; ", " &lt;&lt; "reason=" &lt;&lt; to_string(reason);
  out &lt;&lt; ", " &lt;&lt; "localityGroup=" &lt;&lt; to_string(localityGroup);
  out &lt;&lt; ", " &lt;&lt; "entriesRead=" &lt;&lt; to_string(entriesRead);
  out &lt;&lt; ", " &lt;&lt; "entriesWritten=" &lt;&lt; to_string(entriesWritten);
  out &lt;&lt; ", " &lt;&lt; "iterators=" &lt;&lt; to_string(iterators);
  out &lt;&lt; ")";
}


WriterOptions::~WriterOptions() throw() {
}


void WriterOptions::__set_maxMemory(const int64_t val) {
  this-&gt;maxMemory = val;
}

void WriterOptions::__set_latencyMs(const int64_t val) {
  this-&gt;latencyMs = val;
}

void WriterOptions::__set_timeoutMs(const int64_t val) {
  this-&gt;timeoutMs = val;
}

void WriterOptions::__set_threads(const int32_t val) {
  this-&gt;threads = val;
}

void WriterOptions::__set_durability(const Durability::type val) {
  this-&gt;durability = val;
__isset.durability = true;
}
 
 uint32_t WriterOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2551,9 +3447,9 @@ uint32_t WriterOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
         break;
       case 5:
         if (ftype == ::apache::thrift::protocol::T_I32) {
          int32_t ecast124;
          xfer += iprot-&gt;readI32(ecast124);
          this-&gt;durability = (Durability::type)ecast124;
          int32_t ecast160;
          xfer += iprot-&gt;readI32(ecast160);
          this-&gt;durability = (Durability::type)ecast160;
           this-&gt;__isset.durability = true;
         } else {
           xfer += iprot-&gt;skip(ftype);
@@ -2573,6 +3469,7 @@ uint32_t WriterOptions::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t WriterOptions::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("WriterOptions");
 
   xfer += oprot-&gt;writeFieldBegin("maxMemory", ::apache::thrift::protocol::T_I64, 1);
@@ -2611,11 +3508,50 @@ void swap(WriterOptions &amp;a, WriterOptions &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* CompactionStrategyConfig::ascii_fingerprint = "F7C641917C22B35AE581CCD54910B00D";
const uint8_t CompactionStrategyConfig::binary_fingerprint[16] = {0xF7,0xC6,0x41,0x91,0x7C,0x22,0xB3,0x5A,0xE5,0x81,0xCC,0xD5,0x49,0x10,0xB0,0x0D};
WriterOptions::WriterOptions(const WriterOptions&amp; other161) {
  maxMemory = other161.maxMemory;
  latencyMs = other161.latencyMs;
  timeoutMs = other161.timeoutMs;
  threads = other161.threads;
  durability = other161.durability;
  __isset = other161.__isset;
}
WriterOptions&amp; WriterOptions::operator=(const WriterOptions&amp; other162) {
  maxMemory = other162.maxMemory;
  latencyMs = other162.latencyMs;
  timeoutMs = other162.timeoutMs;
  threads = other162.threads;
  durability = other162.durability;
  __isset = other162.__isset;
  return *this;
}
void WriterOptions::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "WriterOptions(";
  out &lt;&lt; "maxMemory=" &lt;&lt; to_string(maxMemory);
  out &lt;&lt; ", " &lt;&lt; "latencyMs=" &lt;&lt; to_string(latencyMs);
  out &lt;&lt; ", " &lt;&lt; "timeoutMs=" &lt;&lt; to_string(timeoutMs);
  out &lt;&lt; ", " &lt;&lt; "threads=" &lt;&lt; to_string(threads);
  out &lt;&lt; ", " &lt;&lt; "durability="; (__isset.durability ? (out &lt;&lt; to_string(durability)) : (out &lt;&lt; "&lt;null&gt;"));
  out &lt;&lt; ")";
}


CompactionStrategyConfig::~CompactionStrategyConfig() throw() {
}


void CompactionStrategyConfig::__set_className(const std::string&amp; val) {
  this-&gt;className = val;
}

void CompactionStrategyConfig::__set_options(const std::map&lt;std::string, std::string&gt; &amp; val) {
  this-&gt;options = val;
}
 
 uint32_t CompactionStrategyConfig::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2646,17 +3582,17 @@ uint32_t CompactionStrategyConfig::read(::apache::thrift::protocol::TProtocol* i
         if (ftype == ::apache::thrift::protocol::T_MAP) {
           {
             this-&gt;options.clear();
            uint32_t _size125;
            ::apache::thrift::protocol::TType _ktype126;
            ::apache::thrift::protocol::TType _vtype127;
            xfer += iprot-&gt;readMapBegin(_ktype126, _vtype127, _size125);
            uint32_t _i129;
            for (_i129 = 0; _i129 &lt; _size125; ++_i129)
            uint32_t _size163;
            ::apache::thrift::protocol::TType _ktype164;
            ::apache::thrift::protocol::TType _vtype165;
            xfer += iprot-&gt;readMapBegin(_ktype164, _vtype165, _size163);
            uint32_t _i167;
            for (_i167 = 0; _i167 &lt; _size163; ++_i167)
             {
              std::string _key130;
              xfer += iprot-&gt;readString(_key130);
              std::string&amp; _val131 = this-&gt;options[_key130];
              xfer += iprot-&gt;readString(_val131);
              std::string _key168;
              xfer += iprot-&gt;readString(_key168);
              std::string&amp; _val169 = this-&gt;options[_key168];
              xfer += iprot-&gt;readString(_val169);
             }
             xfer += iprot-&gt;readMapEnd();
           }
@@ -2679,6 +3615,7 @@ uint32_t CompactionStrategyConfig::read(::apache::thrift::protocol::TProtocol* i
 
 uint32_t CompactionStrategyConfig::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("CompactionStrategyConfig");
 
   xfer += oprot-&gt;writeFieldBegin("className", ::apache::thrift::protocol::T_STRING, 1);
@@ -2688,11 +3625,11 @@ uint32_t CompactionStrategyConfig::write(::apache::thrift::protocol::TProtocol*
   xfer += oprot-&gt;writeFieldBegin("options", ::apache::thrift::protocol::T_MAP, 2);
   {
     xfer += oprot-&gt;writeMapBegin(::apache::thrift::protocol::T_STRING, ::apache::thrift::protocol::T_STRING, static_cast&lt;uint32_t&gt;(this-&gt;options.size()));
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter132;
    for (_iter132 = this-&gt;options.begin(); _iter132 != this-&gt;options.end(); ++_iter132)
    std::map&lt;std::string, std::string&gt; ::const_iterator _iter170;
    for (_iter170 = this-&gt;options.begin(); _iter170 != this-&gt;options.end(); ++_iter170)
     {
      xfer += oprot-&gt;writeString(_iter132-&gt;first);
      xfer += oprot-&gt;writeString(_iter132-&gt;second);
      xfer += oprot-&gt;writeString(_iter170-&gt;first);
      xfer += oprot-&gt;writeString(_iter170-&gt;second);
     }
     xfer += oprot-&gt;writeMapEnd();
   }
@@ -2710,11 +3647,37 @@ void swap(CompactionStrategyConfig &amp;a, CompactionStrategyConfig &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* UnknownScanner::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t UnknownScanner::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
CompactionStrategyConfig::CompactionStrategyConfig(const CompactionStrategyConfig&amp; other171) {
  className = other171.className;
  options = other171.options;
  __isset = other171.__isset;
}
CompactionStrategyConfig&amp; CompactionStrategyConfig::operator=(const CompactionStrategyConfig&amp; other172) {
  className = other172.className;
  options = other172.options;
  __isset = other172.__isset;
  return *this;
}
void CompactionStrategyConfig::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "CompactionStrategyConfig(";
  out &lt;&lt; "className=" &lt;&lt; to_string(className);
  out &lt;&lt; ", " &lt;&lt; "options=" &lt;&lt; to_string(options);
  out &lt;&lt; ")";
}


UnknownScanner::~UnknownScanner() throw() {
}


void UnknownScanner::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t UnknownScanner::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2755,6 +3718,7 @@ uint32_t UnknownScanner::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t UnknownScanner::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("UnknownScanner");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -2772,11 +3736,45 @@ void swap(UnknownScanner &amp;a, UnknownScanner &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* UnknownWriter::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t UnknownWriter::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
UnknownScanner::UnknownScanner(const UnknownScanner&amp; other173) : TException() {
  msg = other173.msg;
  __isset = other173.__isset;
}
UnknownScanner&amp; UnknownScanner::operator=(const UnknownScanner&amp; other174) {
  msg = other174.msg;
  __isset = other174.__isset;
  return *this;
}
void UnknownScanner::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "UnknownScanner(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* UnknownScanner::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: UnknownScanner";
  }
}


UnknownWriter::~UnknownWriter() throw() {
}


void UnknownWriter::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t UnknownWriter::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2817,6 +3815,7 @@ uint32_t UnknownWriter::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t UnknownWriter::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("UnknownWriter");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -2834,11 +3833,45 @@ void swap(UnknownWriter &amp;a, UnknownWriter &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* NoMoreEntriesException::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t NoMoreEntriesException::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
UnknownWriter::UnknownWriter(const UnknownWriter&amp; other175) : TException() {
  msg = other175.msg;
  __isset = other175.__isset;
}
UnknownWriter&amp; UnknownWriter::operator=(const UnknownWriter&amp; other176) {
  msg = other176.msg;
  __isset = other176.__isset;
  return *this;
}
void UnknownWriter::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "UnknownWriter(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* UnknownWriter::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: UnknownWriter";
  }
}


NoMoreEntriesException::~NoMoreEntriesException() throw() {
}


void NoMoreEntriesException::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t NoMoreEntriesException::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2879,6 +3912,7 @@ uint32_t NoMoreEntriesException::read(::apache::thrift::protocol::TProtocol* ipr
 
 uint32_t NoMoreEntriesException::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("NoMoreEntriesException");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -2896,11 +3930,45 @@ void swap(NoMoreEntriesException &amp;a, NoMoreEntriesException &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* AccumuloException::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t AccumuloException::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
NoMoreEntriesException::NoMoreEntriesException(const NoMoreEntriesException&amp; other177) : TException() {
  msg = other177.msg;
  __isset = other177.__isset;
}
NoMoreEntriesException&amp; NoMoreEntriesException::operator=(const NoMoreEntriesException&amp; other178) {
  msg = other178.msg;
  __isset = other178.__isset;
  return *this;
}
void NoMoreEntriesException::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "NoMoreEntriesException(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* NoMoreEntriesException::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: NoMoreEntriesException";
  }
}


AccumuloException::~AccumuloException() throw() {
}


void AccumuloException::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t AccumuloException::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -2941,6 +4009,7 @@ uint32_t AccumuloException::read(::apache::thrift::protocol::TProtocol* iprot) {
 
 uint32_t AccumuloException::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloException");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -2958,11 +4027,45 @@ void swap(AccumuloException &amp;a, AccumuloException &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* AccumuloSecurityException::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t AccumuloSecurityException::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
AccumuloException::AccumuloException(const AccumuloException&amp; other179) : TException() {
  msg = other179.msg;
  __isset = other179.__isset;
}
AccumuloException&amp; AccumuloException::operator=(const AccumuloException&amp; other180) {
  msg = other180.msg;
  __isset = other180.__isset;
  return *this;
}
void AccumuloException::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "AccumuloException(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* AccumuloException::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: AccumuloException";
  }
}


AccumuloSecurityException::~AccumuloSecurityException() throw() {
}


void AccumuloSecurityException::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t AccumuloSecurityException::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3003,6 +4106,7 @@ uint32_t AccumuloSecurityException::read(::apache::thrift::protocol::TProtocol*
 
 uint32_t AccumuloSecurityException::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("AccumuloSecurityException");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -3020,11 +4124,45 @@ void swap(AccumuloSecurityException &amp;a, AccumuloSecurityException &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* TableNotFoundException::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t TableNotFoundException::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
AccumuloSecurityException::AccumuloSecurityException(const AccumuloSecurityException&amp; other181) : TException() {
  msg = other181.msg;
  __isset = other181.__isset;
}
AccumuloSecurityException&amp; AccumuloSecurityException::operator=(const AccumuloSecurityException&amp; other182) {
  msg = other182.msg;
  __isset = other182.__isset;
  return *this;
}
void AccumuloSecurityException::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "AccumuloSecurityException(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* AccumuloSecurityException::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: AccumuloSecurityException";
  }
}


TableNotFoundException::~TableNotFoundException() throw() {
}


void TableNotFoundException::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t TableNotFoundException::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3065,6 +4203,7 @@ uint32_t TableNotFoundException::read(::apache::thrift::protocol::TProtocol* ipr
 
 uint32_t TableNotFoundException::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("TableNotFoundException");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -3082,11 +4221,45 @@ void swap(TableNotFoundException &amp;a, TableNotFoundException &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* TableExistsException::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t TableExistsException::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
TableNotFoundException::TableNotFoundException(const TableNotFoundException&amp; other183) : TException() {
  msg = other183.msg;
  __isset = other183.__isset;
}
TableNotFoundException&amp; TableNotFoundException::operator=(const TableNotFoundException&amp; other184) {
  msg = other184.msg;
  __isset = other184.__isset;
  return *this;
}
void TableNotFoundException::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "TableNotFoundException(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* TableNotFoundException::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: TableNotFoundException";
  }
}


TableExistsException::~TableExistsException() throw() {
}


void TableExistsException::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t TableExistsException::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3127,6 +4300,7 @@ uint32_t TableExistsException::read(::apache::thrift::protocol::TProtocol* iprot
 
 uint32_t TableExistsException::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("TableExistsException");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -3144,11 +4318,45 @@ void swap(TableExistsException &amp;a, TableExistsException &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
const char* MutationsRejectedException::ascii_fingerprint = "EFB929595D312AC8F305D5A794CFEDA1";
const uint8_t MutationsRejectedException::binary_fingerprint[16] = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};
TableExistsException::TableExistsException(const TableExistsException&amp; other185) : TException() {
  msg = other185.msg;
  __isset = other185.__isset;
}
TableExistsException&amp; TableExistsException::operator=(const TableExistsException&amp; other186) {
  msg = other186.msg;
  __isset = other186.__isset;
  return *this;
}
void TableExistsException::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "TableExistsException(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* TableExistsException::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: TableExistsException";
  }
}


MutationsRejectedException::~MutationsRejectedException() throw() {
}


void MutationsRejectedException::__set_msg(const std::string&amp; val) {
  this-&gt;msg = val;
}
 
 uint32_t MutationsRejectedException::read(::apache::thrift::protocol::TProtocol* iprot) {
 
  apache::thrift::protocol::TInputRecursionTracker tracker(*iprot);
   uint32_t xfer = 0;
   std::string fname;
   ::apache::thrift::protocol::TType ftype;
@@ -3189,6 +4397,7 @@ uint32_t MutationsRejectedException::read(::apache::thrift::protocol::TProtocol*
 
 uint32_t MutationsRejectedException::write(::apache::thrift::protocol::TProtocol* oprot) const {
   uint32_t xfer = 0;
  apache::thrift::protocol::TOutputRecursionTracker tracker(*oprot);
   xfer += oprot-&gt;writeStructBegin("MutationsRejectedException");
 
   xfer += oprot-&gt;writeFieldBegin("msg", ::apache::thrift::protocol::T_STRING, 1);
@@ -3206,4 +4415,31 @@ void swap(MutationsRejectedException &amp;a, MutationsRejectedException &amp;b) {
   swap(a.__isset, b.__isset);
 }
 
MutationsRejectedException::MutationsRejectedException(const MutationsRejectedException&amp; other187) : TException() {
  msg = other187.msg;
  __isset = other187.__isset;
}
MutationsRejectedException&amp; MutationsRejectedException::operator=(const MutationsRejectedException&amp; other188) {
  msg = other188.msg;
  __isset = other188.__isset;
  return *this;
}
void MutationsRejectedException::printTo(std::ostream&amp; out) const {
  using ::apache::thrift::to_string;
  out &lt;&lt; "MutationsRejectedException(";
  out &lt;&lt; "msg=" &lt;&lt; to_string(msg);
  out &lt;&lt; ")";
}

const char* MutationsRejectedException::what() const throw() {
  try {
    std::stringstream ss;
    ss &lt;&lt; "TException - service has thrown: " &lt;&lt; *this;
    this-&gt;thriftTExceptionMessageHolder_ = ss.str();
    return this-&gt;thriftTExceptionMessageHolder_.c_str();
  } catch (const std::exception&amp;) {
    return "TException - service has thrown: MutationsRejectedException";
  }
}

 } // namespace
diff --git a/proxy/src/main/cpp/proxy_types.h b/proxy/src/main/cpp/proxy_types.h
index 569de8843..f7cce4c3f 100644
-- a/proxy/src/main/cpp/proxy_types.h
++ b/proxy/src/main/cpp/proxy_types.h
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -23,6 +23,8 @@
 #ifndef proxy_TYPES_H
 #define proxy_TYPES_H
 
#include &lt;iosfwd&gt;

 #include &lt;thrift/Thrift.h&gt;
 #include &lt;thrift/TApplicationException.h&gt;
 #include &lt;thrift/protocol/TProtocol.h&gt;
@@ -159,26 +161,80 @@ struct TimeType {
 
 extern const std::map&lt;int, const char*&gt; _TimeType_VALUES_TO_NAMES;
 
class Key;

class ColumnUpdate;

class DiskUsage;

class KeyValue;

class ScanResult;

class Range;

class ScanColumn;

class IteratorSetting;

class ScanOptions;

class BatchScanOptions;

class KeyValueAndPeek;

class KeyExtent;

class Column;

class Condition;

class ConditionalUpdates;

class ConditionalWriterOptions;

class ActiveScan;

class ActiveCompaction;

class WriterOptions;

class CompactionStrategyConfig;

class UnknownScanner;

class UnknownWriter;

class NoMoreEntriesException;

class AccumuloException;

class AccumuloSecurityException;

class TableNotFoundException;

class TableExistsException;

class MutationsRejectedException;

 typedef struct _Key__isset {
   _Key__isset() : row(false), colFamily(false), colQualifier(false), colVisibility(false), timestamp(true) {}
  bool row;
  bool colFamily;
  bool colQualifier;
  bool colVisibility;
  bool timestamp;
  bool row :1;
  bool colFamily :1;
  bool colQualifier :1;
  bool colVisibility :1;
  bool timestamp :1;
 } _Key__isset;
 
 class Key {
  public:
 
  static const char* ascii_fingerprint; // = "91151A432E03F5E8564877B5194B48E2";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x15,0x1A,0x43,0x2E,0x03,0xF5,0xE8,0x56,0x48,0x77,0xB5,0x19,0x4B,0x48,0xE2};

  Key(const Key&amp;);
  Key&amp; operator=(const Key&amp;);
   Key() : row(), colFamily(), colQualifier(), colVisibility(), timestamp(9223372036854775807LL) {
   }
 
  virtual ~Key() throw() {}

  virtual ~Key() throw();
   std::string row;
   std::string colFamily;
   std::string colQualifier;
@@ -187,26 +243,15 @@ class Key {
 
   _Key__isset __isset;
 
  void __set_row(const std::string&amp; val) {
    row = val;
  }
  void __set_row(const std::string&amp; val);
 
  void __set_colFamily(const std::string&amp; val) {
    colFamily = val;
  }
  void __set_colFamily(const std::string&amp; val);
 
  void __set_colQualifier(const std::string&amp; val) {
    colQualifier = val;
  }
  void __set_colQualifier(const std::string&amp; val);
 
  void __set_colVisibility(const std::string&amp; val) {
    colVisibility = val;
  }
  void __set_colVisibility(const std::string&amp; val);
 
  void __set_timestamp(const int64_t val) {
    timestamp = val;
    __isset.timestamp = true;
  }
  void __set_timestamp(const int64_t val);
 
   bool operator == (const Key &amp; rhs) const
   {
@@ -233,31 +278,36 @@ class Key {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(Key &amp;a, Key &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Key&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ColumnUpdate__isset {
   _ColumnUpdate__isset() : colFamily(false), colQualifier(false), colVisibility(false), timestamp(false), value(false), deleteCell(false) {}
  bool colFamily;
  bool colQualifier;
  bool colVisibility;
  bool timestamp;
  bool value;
  bool deleteCell;
  bool colFamily :1;
  bool colQualifier :1;
  bool colVisibility :1;
  bool timestamp :1;
  bool value :1;
  bool deleteCell :1;
 } _ColumnUpdate__isset;
 
 class ColumnUpdate {
  public:
 
  static const char* ascii_fingerprint; // = "65CC1863F7DDC1DE75B9EAF9E2DC0D1F";
  static const uint8_t binary_fingerprint[16]; // = {0x65,0xCC,0x18,0x63,0xF7,0xDD,0xC1,0xDE,0x75,0xB9,0xEA,0xF9,0xE2,0xDC,0x0D,0x1F};

  ColumnUpdate(const ColumnUpdate&amp;);
  ColumnUpdate&amp; operator=(const ColumnUpdate&amp;);
   ColumnUpdate() : colFamily(), colQualifier(), colVisibility(), timestamp(0), value(), deleteCell(0) {
   }
 
  virtual ~ColumnUpdate() throw() {}

  virtual ~ColumnUpdate() throw();
   std::string colFamily;
   std::string colQualifier;
   std::string colVisibility;
@@ -267,33 +317,17 @@ class ColumnUpdate {
 
   _ColumnUpdate__isset __isset;
 
  void __set_colFamily(const std::string&amp; val) {
    colFamily = val;
  }
  void __set_colFamily(const std::string&amp; val);
 
  void __set_colQualifier(const std::string&amp; val) {
    colQualifier = val;
  }
  void __set_colQualifier(const std::string&amp; val);
 
  void __set_colVisibility(const std::string&amp; val) {
    colVisibility = val;
    __isset.colVisibility = true;
  }
  void __set_colVisibility(const std::string&amp; val);
 
  void __set_timestamp(const int64_t val) {
    timestamp = val;
    __isset.timestamp = true;
  }
  void __set_timestamp(const int64_t val);
 
  void __set_value(const std::string&amp; val) {
    value = val;
    __isset.value = true;
  }
  void __set_value(const std::string&amp; val);
 
  void __set_deleteCell(const bool val) {
    deleteCell = val;
    __isset.deleteCell = true;
  }
  void __set_deleteCell(const bool val);
 
   bool operator == (const ColumnUpdate &amp; rhs) const
   {
@@ -328,39 +362,40 @@ class ColumnUpdate {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ColumnUpdate &amp;a, ColumnUpdate &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ColumnUpdate&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _DiskUsage__isset {
   _DiskUsage__isset() : tables(false), usage(false) {}
  bool tables;
  bool usage;
  bool tables :1;
  bool usage :1;
 } _DiskUsage__isset;
 
 class DiskUsage {
  public:
 
  static const char* ascii_fingerprint; // = "D26F4F5E2867D41CF7E0391263932D6B";
  static const uint8_t binary_fingerprint[16]; // = {0xD2,0x6F,0x4F,0x5E,0x28,0x67,0xD4,0x1C,0xF7,0xE0,0x39,0x12,0x63,0x93,0x2D,0x6B};

  DiskUsage(const DiskUsage&amp;);
  DiskUsage&amp; operator=(const DiskUsage&amp;);
   DiskUsage() : usage(0) {
   }
 
  virtual ~DiskUsage() throw() {}

  virtual ~DiskUsage() throw();
   std::vector&lt;std::string&gt;  tables;
   int64_t usage;
 
   _DiskUsage__isset __isset;
 
  void __set_tables(const std::vector&lt;std::string&gt; &amp; val) {
    tables = val;
  }
  void __set_tables(const std::vector&lt;std::string&gt; &amp; val);
 
  void __set_usage(const int64_t val) {
    usage = val;
  }
  void __set_usage(const int64_t val);
 
   bool operator == (const DiskUsage &amp; rhs) const
   {
@@ -379,39 +414,40 @@ class DiskUsage {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(DiskUsage &amp;a, DiskUsage &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const DiskUsage&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _KeyValue__isset {
   _KeyValue__isset() : key(false), value(false) {}
  bool key;
  bool value;
  bool key :1;
  bool value :1;
 } _KeyValue__isset;
 
 class KeyValue {
  public:
 
  static const char* ascii_fingerprint; // = "0D0CA44F233F983E00E94228C31ABBD4";
  static const uint8_t binary_fingerprint[16]; // = {0x0D,0x0C,0xA4,0x4F,0x23,0x3F,0x98,0x3E,0x00,0xE9,0x42,0x28,0xC3,0x1A,0xBB,0xD4};

  KeyValue(const KeyValue&amp;);
  KeyValue&amp; operator=(const KeyValue&amp;);
   KeyValue() : value() {
   }
 
  virtual ~KeyValue() throw() {}

  virtual ~KeyValue() throw();
   Key key;
   std::string value;
 
   _KeyValue__isset __isset;
 
  void __set_key(const Key&amp; val) {
    key = val;
  }
  void __set_key(const Key&amp; val);
 
  void __set_value(const std::string&amp; val) {
    value = val;
  }
  void __set_value(const std::string&amp; val);
 
   bool operator == (const KeyValue &amp; rhs) const
   {
@@ -430,39 +466,40 @@ class KeyValue {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(KeyValue &amp;a, KeyValue &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const KeyValue&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ScanResult__isset {
   _ScanResult__isset() : results(false), more(false) {}
  bool results;
  bool more;
  bool results :1;
  bool more :1;
 } _ScanResult__isset;
 
 class ScanResult {
  public:
 
  static const char* ascii_fingerprint; // = "684A3FCA76EA202FE071A17F8B510E7A";
  static const uint8_t binary_fingerprint[16]; // = {0x68,0x4A,0x3F,0xCA,0x76,0xEA,0x20,0x2F,0xE0,0x71,0xA1,0x7F,0x8B,0x51,0x0E,0x7A};

  ScanResult(const ScanResult&amp;);
  ScanResult&amp; operator=(const ScanResult&amp;);
   ScanResult() : more(0) {
   }
 
  virtual ~ScanResult() throw() {}

  virtual ~ScanResult() throw();
   std::vector&lt;KeyValue&gt;  results;
   bool more;
 
   _ScanResult__isset __isset;
 
  void __set_results(const std::vector&lt;KeyValue&gt; &amp; val) {
    results = val;
  }
  void __set_results(const std::vector&lt;KeyValue&gt; &amp; val);
 
  void __set_more(const bool val) {
    more = val;
  }
  void __set_more(const bool val);
 
   bool operator == (const ScanResult &amp; rhs) const
   {
@@ -481,29 +518,34 @@ class ScanResult {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ScanResult &amp;a, ScanResult &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ScanResult&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _Range__isset {
   _Range__isset() : start(false), startInclusive(false), stop(false), stopInclusive(false) {}
  bool start;
  bool startInclusive;
  bool stop;
  bool stopInclusive;
  bool start :1;
  bool startInclusive :1;
  bool stop :1;
  bool stopInclusive :1;
 } _Range__isset;
 
 class Range {
  public:
 
  static const char* ascii_fingerprint; // = "84C5BA8DB718E60BFBF3F83867647B45";
  static const uint8_t binary_fingerprint[16]; // = {0x84,0xC5,0xBA,0x8D,0xB7,0x18,0xE6,0x0B,0xFB,0xF3,0xF8,0x38,0x67,0x64,0x7B,0x45};

  Range(const Range&amp;);
  Range&amp; operator=(const Range&amp;);
   Range() : startInclusive(0), stopInclusive(0) {
   }
 
  virtual ~Range() throw() {}

  virtual ~Range() throw();
   Key start;
   bool startInclusive;
   Key stop;
@@ -511,21 +553,13 @@ class Range {
 
   _Range__isset __isset;
 
  void __set_start(const Key&amp; val) {
    start = val;
  }
  void __set_start(const Key&amp; val);
 
  void __set_startInclusive(const bool val) {
    startInclusive = val;
  }
  void __set_startInclusive(const bool val);
 
  void __set_stop(const Key&amp; val) {
    stop = val;
  }
  void __set_stop(const Key&amp; val);
 
  void __set_stopInclusive(const bool val) {
    stopInclusive = val;
  }
  void __set_stopInclusive(const bool val);
 
   bool operator == (const Range &amp; rhs) const
   {
@@ -548,40 +582,40 @@ class Range {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(Range &amp;a, Range &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Range&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ScanColumn__isset {
   _ScanColumn__isset() : colFamily(false), colQualifier(false) {}
  bool colFamily;
  bool colQualifier;
  bool colFamily :1;
  bool colQualifier :1;
 } _ScanColumn__isset;
 
 class ScanColumn {
  public:
 
  static const char* ascii_fingerprint; // = "5B708A954C550ECA9C1A49D3C5CAFAB9";
  static const uint8_t binary_fingerprint[16]; // = {0x5B,0x70,0x8A,0x95,0x4C,0x55,0x0E,0xCA,0x9C,0x1A,0x49,0xD3,0xC5,0xCA,0xFA,0xB9};

  ScanColumn(const ScanColumn&amp;);
  ScanColumn&amp; operator=(const ScanColumn&amp;);
   ScanColumn() : colFamily(), colQualifier() {
   }
 
  virtual ~ScanColumn() throw() {}

  virtual ~ScanColumn() throw();
   std::string colFamily;
   std::string colQualifier;
 
   _ScanColumn__isset __isset;
 
  void __set_colFamily(const std::string&amp; val) {
    colFamily = val;
  }
  void __set_colFamily(const std::string&amp; val);
 
  void __set_colQualifier(const std::string&amp; val) {
    colQualifier = val;
    __isset.colQualifier = true;
  }
  void __set_colQualifier(const std::string&amp; val);
 
   bool operator == (const ScanColumn &amp; rhs) const
   {
@@ -602,29 +636,34 @@ class ScanColumn {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ScanColumn &amp;a, ScanColumn &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ScanColumn&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _IteratorSetting__isset {
   _IteratorSetting__isset() : priority(false), name(false), iteratorClass(false), properties(false) {}
  bool priority;
  bool name;
  bool iteratorClass;
  bool properties;
  bool priority :1;
  bool name :1;
  bool iteratorClass :1;
  bool properties :1;
 } _IteratorSetting__isset;
 
 class IteratorSetting {
  public:
 
  static const char* ascii_fingerprint; // = "985C857916964E43205EAC92A157CB4E";
  static const uint8_t binary_fingerprint[16]; // = {0x98,0x5C,0x85,0x79,0x16,0x96,0x4E,0x43,0x20,0x5E,0xAC,0x92,0xA1,0x57,0xCB,0x4E};

  IteratorSetting(const IteratorSetting&amp;);
  IteratorSetting&amp; operator=(const IteratorSetting&amp;);
   IteratorSetting() : priority(0), name(), iteratorClass() {
   }
 
  virtual ~IteratorSetting() throw() {}

  virtual ~IteratorSetting() throw();
   int32_t priority;
   std::string name;
   std::string iteratorClass;
@@ -632,21 +671,13 @@ class IteratorSetting {
 
   _IteratorSetting__isset __isset;
 
  void __set_priority(const int32_t val) {
    priority = val;
  }
  void __set_priority(const int32_t val);
 
  void __set_name(const std::string&amp; val) {
    name = val;
  }
  void __set_name(const std::string&amp; val);
 
  void __set_iteratorClass(const std::string&amp; val) {
    iteratorClass = val;
  }
  void __set_iteratorClass(const std::string&amp; val);
 
  void __set_properties(const std::map&lt;std::string, std::string&gt; &amp; val) {
    properties = val;
  }
  void __set_properties(const std::map&lt;std::string, std::string&gt; &amp; val);
 
   bool operator == (const IteratorSetting &amp; rhs) const
   {
@@ -669,30 +700,35 @@ class IteratorSetting {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(IteratorSetting &amp;a, IteratorSetting &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const IteratorSetting&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ScanOptions__isset {
   _ScanOptions__isset() : authorizations(false), range(false), columns(false), iterators(false), bufferSize(false) {}
  bool authorizations;
  bool range;
  bool columns;
  bool iterators;
  bool bufferSize;
  bool authorizations :1;
  bool range :1;
  bool columns :1;
  bool iterators :1;
  bool bufferSize :1;
 } _ScanOptions__isset;
 
 class ScanOptions {
  public:
 
  static const char* ascii_fingerprint; // = "3D87D0CD05FA62E15880C4D2C595907C";
  static const uint8_t binary_fingerprint[16]; // = {0x3D,0x87,0xD0,0xCD,0x05,0xFA,0x62,0xE1,0x58,0x80,0xC4,0xD2,0xC5,0x95,0x90,0x7C};

  ScanOptions(const ScanOptions&amp;);
  ScanOptions&amp; operator=(const ScanOptions&amp;);
   ScanOptions() : bufferSize(0) {
   }
 
  virtual ~ScanOptions() throw() {}

  virtual ~ScanOptions() throw();
   std::set&lt;std::string&gt;  authorizations;
   Range range;
   std::vector&lt;ScanColumn&gt;  columns;
@@ -701,30 +737,15 @@ class ScanOptions {
 
   _ScanOptions__isset __isset;
 
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val) {
    authorizations = val;
    __isset.authorizations = true;
  }
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val);
 
  void __set_range(const Range&amp; val) {
    range = val;
    __isset.range = true;
  }
  void __set_range(const Range&amp; val);
 
  void __set_columns(const std::vector&lt;ScanColumn&gt; &amp; val) {
    columns = val;
    __isset.columns = true;
  }
  void __set_columns(const std::vector&lt;ScanColumn&gt; &amp; val);
 
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
    iterators = val;
    __isset.iterators = true;
  }
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val);
 
  void __set_bufferSize(const int32_t val) {
    bufferSize = val;
    __isset.bufferSize = true;
  }
  void __set_bufferSize(const int32_t val);
 
   bool operator == (const ScanOptions &amp; rhs) const
   {
@@ -759,30 +780,35 @@ class ScanOptions {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ScanOptions &amp;a, ScanOptions &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ScanOptions&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _BatchScanOptions__isset {
   _BatchScanOptions__isset() : authorizations(false), ranges(false), columns(false), iterators(false), threads(false) {}
  bool authorizations;
  bool ranges;
  bool columns;
  bool iterators;
  bool threads;
  bool authorizations :1;
  bool ranges :1;
  bool columns :1;
  bool iterators :1;
  bool threads :1;
 } _BatchScanOptions__isset;
 
 class BatchScanOptions {
  public:
 
  static const char* ascii_fingerprint; // = "6ADFA1FBE31B1220D2C103284E002308";
  static const uint8_t binary_fingerprint[16]; // = {0x6A,0xDF,0xA1,0xFB,0xE3,0x1B,0x12,0x20,0xD2,0xC1,0x03,0x28,0x4E,0x00,0x23,0x08};

  BatchScanOptions(const BatchScanOptions&amp;);
  BatchScanOptions&amp; operator=(const BatchScanOptions&amp;);
   BatchScanOptions() : threads(0) {
   }
 
  virtual ~BatchScanOptions() throw() {}

  virtual ~BatchScanOptions() throw();
   std::set&lt;std::string&gt;  authorizations;
   std::vector&lt;Range&gt;  ranges;
   std::vector&lt;ScanColumn&gt;  columns;
@@ -791,30 +817,15 @@ class BatchScanOptions {
 
   _BatchScanOptions__isset __isset;
 
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val) {
    authorizations = val;
    __isset.authorizations = true;
  }
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val);
 
  void __set_ranges(const std::vector&lt;Range&gt; &amp; val) {
    ranges = val;
    __isset.ranges = true;
  }
  void __set_ranges(const std::vector&lt;Range&gt; &amp; val);
 
  void __set_columns(const std::vector&lt;ScanColumn&gt; &amp; val) {
    columns = val;
    __isset.columns = true;
  }
  void __set_columns(const std::vector&lt;ScanColumn&gt; &amp; val);
 
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
    iterators = val;
    __isset.iterators = true;
  }
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val);
 
  void __set_threads(const int32_t val) {
    threads = val;
    __isset.threads = true;
  }
  void __set_threads(const int32_t val);
 
   bool operator == (const BatchScanOptions &amp; rhs) const
   {
@@ -849,39 +860,40 @@ class BatchScanOptions {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(BatchScanOptions &amp;a, BatchScanOptions &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const BatchScanOptions&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _KeyValueAndPeek__isset {
   _KeyValueAndPeek__isset() : keyValue(false), hasNext(false) {}
  bool keyValue;
  bool hasNext;
  bool keyValue :1;
  bool hasNext :1;
 } _KeyValueAndPeek__isset;
 
 class KeyValueAndPeek {
  public:
 
  static const char* ascii_fingerprint; // = "CBBC6AB9C7EA5E5E748C13F970862FAB";
  static const uint8_t binary_fingerprint[16]; // = {0xCB,0xBC,0x6A,0xB9,0xC7,0xEA,0x5E,0x5E,0x74,0x8C,0x13,0xF9,0x70,0x86,0x2F,0xAB};

  KeyValueAndPeek(const KeyValueAndPeek&amp;);
  KeyValueAndPeek&amp; operator=(const KeyValueAndPeek&amp;);
   KeyValueAndPeek() : hasNext(0) {
   }
 
  virtual ~KeyValueAndPeek() throw() {}

  virtual ~KeyValueAndPeek() throw();
   KeyValue keyValue;
   bool hasNext;
 
   _KeyValueAndPeek__isset __isset;
 
  void __set_keyValue(const KeyValue&amp; val) {
    keyValue = val;
  }
  void __set_keyValue(const KeyValue&amp; val);
 
  void __set_hasNext(const bool val) {
    hasNext = val;
  }
  void __set_hasNext(const bool val);
 
   bool operator == (const KeyValueAndPeek &amp; rhs) const
   {
@@ -900,45 +912,44 @@ class KeyValueAndPeek {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(KeyValueAndPeek &amp;a, KeyValueAndPeek &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const KeyValueAndPeek&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _KeyExtent__isset {
   _KeyExtent__isset() : tableId(false), endRow(false), prevEndRow(false) {}
  bool tableId;
  bool endRow;
  bool prevEndRow;
  bool tableId :1;
  bool endRow :1;
  bool prevEndRow :1;
 } _KeyExtent__isset;
 
 class KeyExtent {
  public:
 
  static const char* ascii_fingerprint; // = "AB879940BD15B6B25691265F7384B271";
  static const uint8_t binary_fingerprint[16]; // = {0xAB,0x87,0x99,0x40,0xBD,0x15,0xB6,0xB2,0x56,0x91,0x26,0x5F,0x73,0x84,0xB2,0x71};

  KeyExtent(const KeyExtent&amp;);
  KeyExtent&amp; operator=(const KeyExtent&amp;);
   KeyExtent() : tableId(), endRow(), prevEndRow() {
   }
 
  virtual ~KeyExtent() throw() {}

  virtual ~KeyExtent() throw();
   std::string tableId;
   std::string endRow;
   std::string prevEndRow;
 
   _KeyExtent__isset __isset;
 
  void __set_tableId(const std::string&amp; val) {
    tableId = val;
  }
  void __set_tableId(const std::string&amp; val);
 
  void __set_endRow(const std::string&amp; val) {
    endRow = val;
  }
  void __set_endRow(const std::string&amp; val);
 
  void __set_prevEndRow(const std::string&amp; val) {
    prevEndRow = val;
  }
  void __set_prevEndRow(const std::string&amp; val);
 
   bool operator == (const KeyExtent &amp; rhs) const
   {
@@ -959,45 +970,44 @@ class KeyExtent {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(KeyExtent &amp;a, KeyExtent &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const KeyExtent&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _Column__isset {
   _Column__isset() : colFamily(false), colQualifier(false), colVisibility(false) {}
  bool colFamily;
  bool colQualifier;
  bool colVisibility;
  bool colFamily :1;
  bool colQualifier :1;
  bool colVisibility :1;
 } _Column__isset;
 
 class Column {
  public:
 
  static const char* ascii_fingerprint; // = "AB879940BD15B6B25691265F7384B271";
  static const uint8_t binary_fingerprint[16]; // = {0xAB,0x87,0x99,0x40,0xBD,0x15,0xB6,0xB2,0x56,0x91,0x26,0x5F,0x73,0x84,0xB2,0x71};

  Column(const Column&amp;);
  Column&amp; operator=(const Column&amp;);
   Column() : colFamily(), colQualifier(), colVisibility() {
   }
 
  virtual ~Column() throw() {}

  virtual ~Column() throw();
   std::string colFamily;
   std::string colQualifier;
   std::string colVisibility;
 
   _Column__isset __isset;
 
  void __set_colFamily(const std::string&amp; val) {
    colFamily = val;
  }
  void __set_colFamily(const std::string&amp; val);
 
  void __set_colQualifier(const std::string&amp; val) {
    colQualifier = val;
  }
  void __set_colQualifier(const std::string&amp; val);
 
  void __set_colVisibility(const std::string&amp; val) {
    colVisibility = val;
  }
  void __set_colVisibility(const std::string&amp; val);
 
   bool operator == (const Column &amp; rhs) const
   {
@@ -1018,29 +1028,34 @@ class Column {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(Column &amp;a, Column &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Column&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _Condition__isset {
   _Condition__isset() : column(false), timestamp(false), value(false), iterators(false) {}
  bool column;
  bool timestamp;
  bool value;
  bool iterators;
  bool column :1;
  bool timestamp :1;
  bool value :1;
  bool iterators :1;
 } _Condition__isset;
 
 class Condition {
  public:
 
  static const char* ascii_fingerprint; // = "C4022914C22D89E33B1A46A7D511C58F";
  static const uint8_t binary_fingerprint[16]; // = {0xC4,0x02,0x29,0x14,0xC2,0x2D,0x89,0xE3,0x3B,0x1A,0x46,0xA7,0xD5,0x11,0xC5,0x8F};

  Condition(const Condition&amp;);
  Condition&amp; operator=(const Condition&amp;);
   Condition() : timestamp(0), value() {
   }
 
  virtual ~Condition() throw() {}

  virtual ~Condition() throw();
   Column column;
   int64_t timestamp;
   std::string value;
@@ -1048,24 +1063,13 @@ class Condition {
 
   _Condition__isset __isset;
 
  void __set_column(const Column&amp; val) {
    column = val;
  }
  void __set_column(const Column&amp; val);
 
  void __set_timestamp(const int64_t val) {
    timestamp = val;
    __isset.timestamp = true;
  }
  void __set_timestamp(const int64_t val);
 
  void __set_value(const std::string&amp; val) {
    value = val;
    __isset.value = true;
  }
  void __set_value(const std::string&amp; val);
 
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
    iterators = val;
    __isset.iterators = true;
  }
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val);
 
   bool operator == (const Condition &amp; rhs) const
   {
@@ -1094,39 +1098,40 @@ class Condition {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(Condition &amp;a, Condition &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Condition&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ConditionalUpdates__isset {
   _ConditionalUpdates__isset() : conditions(false), updates(false) {}
  bool conditions;
  bool updates;
  bool conditions :1;
  bool updates :1;
 } _ConditionalUpdates__isset;
 
 class ConditionalUpdates {
  public:
 
  static const char* ascii_fingerprint; // = "1C1808872D1A8E04F114974ADD77F356";
  static const uint8_t binary_fingerprint[16]; // = {0x1C,0x18,0x08,0x87,0x2D,0x1A,0x8E,0x04,0xF1,0x14,0x97,0x4A,0xDD,0x77,0xF3,0x56};

  ConditionalUpdates(const ConditionalUpdates&amp;);
  ConditionalUpdates&amp; operator=(const ConditionalUpdates&amp;);
   ConditionalUpdates() {
   }
 
  virtual ~ConditionalUpdates() throw() {}

  virtual ~ConditionalUpdates() throw();
   std::vector&lt;Condition&gt;  conditions;
   std::vector&lt;ColumnUpdate&gt;  updates;
 
   _ConditionalUpdates__isset __isset;
 
  void __set_conditions(const std::vector&lt;Condition&gt; &amp; val) {
    conditions = val;
  }
  void __set_conditions(const std::vector&lt;Condition&gt; &amp; val);
 
  void __set_updates(const std::vector&lt;ColumnUpdate&gt; &amp; val) {
    updates = val;
  }
  void __set_updates(const std::vector&lt;ColumnUpdate&gt; &amp; val);
 
   bool operator == (const ConditionalUpdates &amp; rhs) const
   {
@@ -1145,30 +1150,35 @@ class ConditionalUpdates {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ConditionalUpdates &amp;a, ConditionalUpdates &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ConditionalUpdates&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ConditionalWriterOptions__isset {
   _ConditionalWriterOptions__isset() : maxMemory(false), timeoutMs(false), threads(false), authorizations(false), durability(false) {}
  bool maxMemory;
  bool timeoutMs;
  bool threads;
  bool authorizations;
  bool durability;
  bool maxMemory :1;
  bool timeoutMs :1;
  bool threads :1;
  bool authorizations :1;
  bool durability :1;
 } _ConditionalWriterOptions__isset;
 
 class ConditionalWriterOptions {
  public:
 
  static const char* ascii_fingerprint; // = "C345C04E84A351638B6EACB741BD600E";
  static const uint8_t binary_fingerprint[16]; // = {0xC3,0x45,0xC0,0x4E,0x84,0xA3,0x51,0x63,0x8B,0x6E,0xAC,0xB7,0x41,0xBD,0x60,0x0E};

  ConditionalWriterOptions(const ConditionalWriterOptions&amp;);
  ConditionalWriterOptions&amp; operator=(const ConditionalWriterOptions&amp;);
   ConditionalWriterOptions() : maxMemory(0), timeoutMs(0), threads(0), durability((Durability::type)0) {
   }
 
  virtual ~ConditionalWriterOptions() throw() {}

  virtual ~ConditionalWriterOptions() throw();
   int64_t maxMemory;
   int64_t timeoutMs;
   int32_t threads;
@@ -1177,30 +1187,15 @@ class ConditionalWriterOptions {
 
   _ConditionalWriterOptions__isset __isset;
 
  void __set_maxMemory(const int64_t val) {
    maxMemory = val;
    __isset.maxMemory = true;
  }
  void __set_maxMemory(const int64_t val);
 
  void __set_timeoutMs(const int64_t val) {
    timeoutMs = val;
    __isset.timeoutMs = true;
  }
  void __set_timeoutMs(const int64_t val);
 
  void __set_threads(const int32_t val) {
    threads = val;
    __isset.threads = true;
  }
  void __set_threads(const int32_t val);
 
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val) {
    authorizations = val;
    __isset.authorizations = true;
  }
  void __set_authorizations(const std::set&lt;std::string&gt; &amp; val);
 
  void __set_durability(const Durability::type val) {
    durability = val;
    __isset.durability = true;
  }
  void __set_durability(const Durability::type val);
 
   bool operator == (const ConditionalWriterOptions &amp; rhs) const
   {
@@ -1235,36 +1230,41 @@ class ConditionalWriterOptions {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ConditionalWriterOptions &amp;a, ConditionalWriterOptions &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ConditionalWriterOptions&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ActiveScan__isset {
   _ActiveScan__isset() : client(false), user(false), table(false), age(false), idleTime(false), type(false), state(false), extent(false), columns(false), iterators(false), authorizations(false) {}
  bool client;
  bool user;
  bool table;
  bool age;
  bool idleTime;
  bool type;
  bool state;
  bool extent;
  bool columns;
  bool iterators;
  bool authorizations;
  bool client :1;
  bool user :1;
  bool table :1;
  bool age :1;
  bool idleTime :1;
  bool type :1;
  bool state :1;
  bool extent :1;
  bool columns :1;
  bool iterators :1;
  bool authorizations :1;
 } _ActiveScan__isset;
 
 class ActiveScan {
  public:
 
  static const char* ascii_fingerprint; // = "1B97541CB4E900A054266BBBEE61D004";
  static const uint8_t binary_fingerprint[16]; // = {0x1B,0x97,0x54,0x1C,0xB4,0xE9,0x00,0xA0,0x54,0x26,0x6B,0xBB,0xEE,0x61,0xD0,0x04};

  ActiveScan(const ActiveScan&amp;);
  ActiveScan&amp; operator=(const ActiveScan&amp;);
   ActiveScan() : client(), user(), table(), age(0), idleTime(0), type((ScanType::type)0), state((ScanState::type)0) {
   }
 
  virtual ~ActiveScan() throw() {}

  virtual ~ActiveScan() throw();
   std::string client;
   std::string user;
   std::string table;
@@ -1279,49 +1279,27 @@ class ActiveScan {
 
   _ActiveScan__isset __isset;
 
  void __set_client(const std::string&amp; val) {
    client = val;
  }
  void __set_client(const std::string&amp; val);
 
  void __set_user(const std::string&amp; val) {
    user = val;
  }
  void __set_user(const std::string&amp; val);
 
  void __set_table(const std::string&amp; val) {
    table = val;
  }
  void __set_table(const std::string&amp; val);
 
  void __set_age(const int64_t val) {
    age = val;
  }
  void __set_age(const int64_t val);
 
  void __set_idleTime(const int64_t val) {
    idleTime = val;
  }
  void __set_idleTime(const int64_t val);
 
  void __set_type(const ScanType::type val) {
    type = val;
  }
  void __set_type(const ScanType::type val);
 
  void __set_state(const ScanState::type val) {
    state = val;
  }
  void __set_state(const ScanState::type val);
 
  void __set_extent(const KeyExtent&amp; val) {
    extent = val;
  }
  void __set_extent(const KeyExtent&amp; val);
 
  void __set_columns(const std::vector&lt;Column&gt; &amp; val) {
    columns = val;
  }
  void __set_columns(const std::vector&lt;Column&gt; &amp; val);
 
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
    iterators = val;
  }
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val);
 
  void __set_authorizations(const std::vector&lt;std::string&gt; &amp; val) {
    authorizations = val;
  }
  void __set_authorizations(const std::vector&lt;std::string&gt; &amp; val);
 
   bool operator == (const ActiveScan &amp; rhs) const
   {
@@ -1358,35 +1336,40 @@ class ActiveScan {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ActiveScan &amp;a, ActiveScan &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ActiveScan&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _ActiveCompaction__isset {
   _ActiveCompaction__isset() : extent(false), age(false), inputFiles(false), outputFile(false), type(false), reason(false), localityGroup(false), entriesRead(false), entriesWritten(false), iterators(false) {}
  bool extent;
  bool age;
  bool inputFiles;
  bool outputFile;
  bool type;
  bool reason;
  bool localityGroup;
  bool entriesRead;
  bool entriesWritten;
  bool iterators;
  bool extent :1;
  bool age :1;
  bool inputFiles :1;
  bool outputFile :1;
  bool type :1;
  bool reason :1;
  bool localityGroup :1;
  bool entriesRead :1;
  bool entriesWritten :1;
  bool iterators :1;
 } _ActiveCompaction__isset;
 
 class ActiveCompaction {
  public:
 
  static const char* ascii_fingerprint; // = "2BB155CC901109464666B6C7E6A8C1A6";
  static const uint8_t binary_fingerprint[16]; // = {0x2B,0xB1,0x55,0xCC,0x90,0x11,0x09,0x46,0x46,0x66,0xB6,0xC7,0xE6,0xA8,0xC1,0xA6};

  ActiveCompaction(const ActiveCompaction&amp;);
  ActiveCompaction&amp; operator=(const ActiveCompaction&amp;);
   ActiveCompaction() : age(0), outputFile(), type((CompactionType::type)0), reason((CompactionReason::type)0), localityGroup(), entriesRead(0), entriesWritten(0) {
   }
 
  virtual ~ActiveCompaction() throw() {}

  virtual ~ActiveCompaction() throw();
   KeyExtent extent;
   int64_t age;
   std::vector&lt;std::string&gt;  inputFiles;
@@ -1400,45 +1383,25 @@ class ActiveCompaction {
 
   _ActiveCompaction__isset __isset;
 
  void __set_extent(const KeyExtent&amp; val) {
    extent = val;
  }
  void __set_extent(const KeyExtent&amp; val);
 
  void __set_age(const int64_t val) {
    age = val;
  }
  void __set_age(const int64_t val);
 
  void __set_inputFiles(const std::vector&lt;std::string&gt; &amp; val) {
    inputFiles = val;
  }
  void __set_inputFiles(const std::vector&lt;std::string&gt; &amp; val);
 
  void __set_outputFile(const std::string&amp; val) {
    outputFile = val;
  }
  void __set_outputFile(const std::string&amp; val);
 
  void __set_type(const CompactionType::type val) {
    type = val;
  }
  void __set_type(const CompactionType::type val);
 
  void __set_reason(const CompactionReason::type val) {
    reason = val;
  }
  void __set_reason(const CompactionReason::type val);
 
  void __set_localityGroup(const std::string&amp; val) {
    localityGroup = val;
  }
  void __set_localityGroup(const std::string&amp; val);
 
  void __set_entriesRead(const int64_t val) {
    entriesRead = val;
  }
  void __set_entriesRead(const int64_t val);
 
  void __set_entriesWritten(const int64_t val) {
    entriesWritten = val;
  }
  void __set_entriesWritten(const int64_t val);
 
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val) {
    iterators = val;
  }
  void __set_iterators(const std::vector&lt;IteratorSetting&gt; &amp; val);
 
   bool operator == (const ActiveCompaction &amp; rhs) const
   {
@@ -1473,30 +1436,35 @@ class ActiveCompaction {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(ActiveCompaction &amp;a, ActiveCompaction &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const ActiveCompaction&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _WriterOptions__isset {
   _WriterOptions__isset() : maxMemory(false), latencyMs(false), timeoutMs(false), threads(false), durability(false) {}
  bool maxMemory;
  bool latencyMs;
  bool timeoutMs;
  bool threads;
  bool durability;
  bool maxMemory :1;
  bool latencyMs :1;
  bool timeoutMs :1;
  bool threads :1;
  bool durability :1;
 } _WriterOptions__isset;
 
 class WriterOptions {
  public:
 
  static const char* ascii_fingerprint; // = "6640C55D2C0D4C8C2E7589456EA0C61A";
  static const uint8_t binary_fingerprint[16]; // = {0x66,0x40,0xC5,0x5D,0x2C,0x0D,0x4C,0x8C,0x2E,0x75,0x89,0x45,0x6E,0xA0,0xC6,0x1A};

  WriterOptions(const WriterOptions&amp;);
  WriterOptions&amp; operator=(const WriterOptions&amp;);
   WriterOptions() : maxMemory(0), latencyMs(0), timeoutMs(0), threads(0), durability((Durability::type)0) {
   }
 
  virtual ~WriterOptions() throw() {}

  virtual ~WriterOptions() throw();
   int64_t maxMemory;
   int64_t latencyMs;
   int64_t timeoutMs;
@@ -1505,26 +1473,15 @@ class WriterOptions {
 
   _WriterOptions__isset __isset;
 
  void __set_maxMemory(const int64_t val) {
    maxMemory = val;
  }
  void __set_maxMemory(const int64_t val);
 
  void __set_latencyMs(const int64_t val) {
    latencyMs = val;
  }
  void __set_latencyMs(const int64_t val);
 
  void __set_timeoutMs(const int64_t val) {
    timeoutMs = val;
  }
  void __set_timeoutMs(const int64_t val);
 
  void __set_threads(const int32_t val) {
    threads = val;
  }
  void __set_threads(const int32_t val);
 
  void __set_durability(const Durability::type val) {
    durability = val;
    __isset.durability = true;
  }
  void __set_durability(const Durability::type val);
 
   bool operator == (const WriterOptions &amp; rhs) const
   {
@@ -1551,39 +1508,40 @@ class WriterOptions {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(WriterOptions &amp;a, WriterOptions &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const WriterOptions&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _CompactionStrategyConfig__isset {
   _CompactionStrategyConfig__isset() : className(false), options(false) {}
  bool className;
  bool options;
  bool className :1;
  bool options :1;
 } _CompactionStrategyConfig__isset;
 
 class CompactionStrategyConfig {
  public:
 
  static const char* ascii_fingerprint; // = "F7C641917C22B35AE581CCD54910B00D";
  static const uint8_t binary_fingerprint[16]; // = {0xF7,0xC6,0x41,0x91,0x7C,0x22,0xB3,0x5A,0xE5,0x81,0xCC,0xD5,0x49,0x10,0xB0,0x0D};

  CompactionStrategyConfig(const CompactionStrategyConfig&amp;);
  CompactionStrategyConfig&amp; operator=(const CompactionStrategyConfig&amp;);
   CompactionStrategyConfig() : className() {
   }
 
  virtual ~CompactionStrategyConfig() throw() {}

  virtual ~CompactionStrategyConfig() throw();
   std::string className;
   std::map&lt;std::string, std::string&gt;  options;
 
   _CompactionStrategyConfig__isset __isset;
 
  void __set_className(const std::string&amp; val) {
    className = val;
  }
  void __set_className(const std::string&amp; val);
 
  void __set_options(const std::map&lt;std::string, std::string&gt; &amp; val) {
    options = val;
  }
  void __set_options(const std::map&lt;std::string, std::string&gt; &amp; val);
 
   bool operator == (const CompactionStrategyConfig &amp; rhs) const
   {
@@ -1602,33 +1560,36 @@ class CompactionStrategyConfig {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
 };
 
 void swap(CompactionStrategyConfig &amp;a, CompactionStrategyConfig &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const CompactionStrategyConfig&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _UnknownScanner__isset {
   _UnknownScanner__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _UnknownScanner__isset;
 
 class UnknownScanner : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  UnknownScanner(const UnknownScanner&amp;);
  UnknownScanner&amp; operator=(const UnknownScanner&amp;);
   UnknownScanner() : msg() {
   }
 
  virtual ~UnknownScanner() throw() {}

  virtual ~UnknownScanner() throw();
   std::string msg;
 
   _UnknownScanner__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const UnknownScanner &amp; rhs) const
   {
@@ -1645,33 +1606,38 @@ class UnknownScanner : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(UnknownScanner &amp;a, UnknownScanner &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const UnknownScanner&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _UnknownWriter__isset {
   _UnknownWriter__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _UnknownWriter__isset;
 
 class UnknownWriter : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  UnknownWriter(const UnknownWriter&amp;);
  UnknownWriter&amp; operator=(const UnknownWriter&amp;);
   UnknownWriter() : msg() {
   }
 
  virtual ~UnknownWriter() throw() {}

  virtual ~UnknownWriter() throw();
   std::string msg;
 
   _UnknownWriter__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const UnknownWriter &amp; rhs) const
   {
@@ -1688,33 +1654,38 @@ class UnknownWriter : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(UnknownWriter &amp;a, UnknownWriter &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const UnknownWriter&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _NoMoreEntriesException__isset {
   _NoMoreEntriesException__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _NoMoreEntriesException__isset;
 
 class NoMoreEntriesException : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  NoMoreEntriesException(const NoMoreEntriesException&amp;);
  NoMoreEntriesException&amp; operator=(const NoMoreEntriesException&amp;);
   NoMoreEntriesException() : msg() {
   }
 
  virtual ~NoMoreEntriesException() throw() {}

  virtual ~NoMoreEntriesException() throw();
   std::string msg;
 
   _NoMoreEntriesException__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const NoMoreEntriesException &amp; rhs) const
   {
@@ -1731,33 +1702,38 @@ class NoMoreEntriesException : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(NoMoreEntriesException &amp;a, NoMoreEntriesException &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const NoMoreEntriesException&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _AccumuloException__isset {
   _AccumuloException__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _AccumuloException__isset;
 
 class AccumuloException : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  AccumuloException(const AccumuloException&amp;);
  AccumuloException&amp; operator=(const AccumuloException&amp;);
   AccumuloException() : msg() {
   }
 
  virtual ~AccumuloException() throw() {}

  virtual ~AccumuloException() throw();
   std::string msg;
 
   _AccumuloException__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const AccumuloException &amp; rhs) const
   {
@@ -1774,33 +1750,38 @@ class AccumuloException : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(AccumuloException &amp;a, AccumuloException &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const AccumuloException&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _AccumuloSecurityException__isset {
   _AccumuloSecurityException__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _AccumuloSecurityException__isset;
 
 class AccumuloSecurityException : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  AccumuloSecurityException(const AccumuloSecurityException&amp;);
  AccumuloSecurityException&amp; operator=(const AccumuloSecurityException&amp;);
   AccumuloSecurityException() : msg() {
   }
 
  virtual ~AccumuloSecurityException() throw() {}

  virtual ~AccumuloSecurityException() throw();
   std::string msg;
 
   _AccumuloSecurityException__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const AccumuloSecurityException &amp; rhs) const
   {
@@ -1817,33 +1798,38 @@ class AccumuloSecurityException : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(AccumuloSecurityException &amp;a, AccumuloSecurityException &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const AccumuloSecurityException&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _TableNotFoundException__isset {
   _TableNotFoundException__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _TableNotFoundException__isset;
 
 class TableNotFoundException : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TableNotFoundException(const TableNotFoundException&amp;);
  TableNotFoundException&amp; operator=(const TableNotFoundException&amp;);
   TableNotFoundException() : msg() {
   }
 
  virtual ~TableNotFoundException() throw() {}

  virtual ~TableNotFoundException() throw();
   std::string msg;
 
   _TableNotFoundException__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const TableNotFoundException &amp; rhs) const
   {
@@ -1860,33 +1846,38 @@ class TableNotFoundException : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(TableNotFoundException &amp;a, TableNotFoundException &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const TableNotFoundException&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _TableExistsException__isset {
   _TableExistsException__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _TableExistsException__isset;
 
 class TableExistsException : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TableExistsException(const TableExistsException&amp;);
  TableExistsException&amp; operator=(const TableExistsException&amp;);
   TableExistsException() : msg() {
   }
 
  virtual ~TableExistsException() throw() {}

  virtual ~TableExistsException() throw();
   std::string msg;
 
   _TableExistsException__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const TableExistsException &amp; rhs) const
   {
@@ -1903,33 +1894,38 @@ class TableExistsException : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(TableExistsException &amp;a, TableExistsException &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const TableExistsException&amp; obj)
{
  obj.printTo(out);
  return out;
}

 typedef struct _MutationsRejectedException__isset {
   _MutationsRejectedException__isset() : msg(false) {}
  bool msg;
  bool msg :1;
 } _MutationsRejectedException__isset;
 
 class MutationsRejectedException : public ::apache::thrift::TException {
  public:
 
  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MutationsRejectedException(const MutationsRejectedException&amp;);
  MutationsRejectedException&amp; operator=(const MutationsRejectedException&amp;);
   MutationsRejectedException() : msg() {
   }
 
  virtual ~MutationsRejectedException() throw() {}

  virtual ~MutationsRejectedException() throw();
   std::string msg;
 
   _MutationsRejectedException__isset __isset;
 
  void __set_msg(const std::string&amp; val) {
    msg = val;
  }
  void __set_msg(const std::string&amp; val);
 
   bool operator == (const MutationsRejectedException &amp; rhs) const
   {
@@ -1946,10 +1942,19 @@ class MutationsRejectedException : public ::apache::thrift::TException {
   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
 
  virtual void printTo(std::ostream&amp; out) const;
  mutable std::string thriftTExceptionMessageHolder_;
  const char* what() const throw();
 };
 
 void swap(MutationsRejectedException &amp;a, MutationsRejectedException &amp;b);
 
inline std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const MutationsRejectedException&amp; obj)
{
  obj.printTo(out);
  return out;
}

 } // namespace
 
 #endif
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloException.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloException.java
index 724a92e03..d633427e3 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloException.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class AccumuloException extends TException implements org.apache.thrift.TBase&lt;AccumuloException, AccumuloException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;AccumuloException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class AccumuloException extends TException implements org.apache.thrift.TBase&lt;AccumuloException, AccumuloException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;AccumuloException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AccumuloException");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloProxy.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloProxy.java
index eaa49efc2..eb848c88f 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloProxy.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloProxy.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class AccumuloProxy {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class AccumuloProxy {
 
   public interface Iface {
 
@@ -2492,7 +2495,7 @@ import org.slf4j.LoggerFactory;
       update_args args = new update_args();
       args.setWriter(writer);
       args.setCells(cells);
      sendBase("update", args);
      sendBaseOneway("update", args);
     }
 
     public void flush(String writer) throws UnknownWriter, MutationsRejectedException, org.apache.thrift.TException
@@ -5317,7 +5320,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("update", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("update", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         update_args args = new update_args();
         args.setWriter(writer);
         args.setCells(cells);
@@ -12975,7 +12978,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_principal = true &amp;&amp; (isSetPrincipal());
      list.add(present_principal);
      if (present_principal)
        list.add(principal);

      boolean present_loginProperties = true &amp;&amp; (isSetLoginProperties());
      list.add(present_loginProperties);
      if (present_loginProperties)
        list.add(loginProperties);

      return list.hashCode();
     }
 
     @Override
@@ -13097,13 +13112,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map164 = iprot.readMapBegin();
                   struct.loginProperties = new HashMap&lt;String,String&gt;(2*_map164.size);
                  for (int _i165 = 0; _i165 &lt; _map164.size; ++_i165)
                  String _key165;
                  String _val166;
                  for (int _i167 = 0; _i167 &lt; _map164.size; ++_i167)
                   {
                    String _key166;
                    String _val167;
                    _key166 = iprot.readString();
                    _val167 = iprot.readString();
                    struct.loginProperties.put(_key166, _val167);
                    _key165 = iprot.readString();
                    _val166 = iprot.readString();
                    struct.loginProperties.put(_key165, _val166);
                   }
                   iprot.readMapEnd();
                 }
@@ -13197,13 +13212,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map170 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.loginProperties = new HashMap&lt;String,String&gt;(2*_map170.size);
            for (int _i171 = 0; _i171 &lt; _map170.size; ++_i171)
            String _key171;
            String _val172;
            for (int _i173 = 0; _i173 &lt; _map170.size; ++_i173)
             {
              String _key172;
              String _val173;
              _key172 = iprot.readString();
              _val173 = iprot.readString();
              struct.loginProperties.put(_key172, _val173);
              _key171 = iprot.readString();
              _val172 = iprot.readString();
              struct.loginProperties.put(_key171, _val172);
             }
           }
           struct.setLoginPropertiesIsSet(true);
@@ -13309,7 +13324,7 @@ import org.slf4j.LoggerFactory;
       AccumuloSecurityException ouch2)
     {
       this();
      this.success = success;
      this.success = org.apache.thrift.TBaseHelper.copyBinary(success);
       this.ouch2 = ouch2;
     }
 
@@ -13319,7 +13334,6 @@ import org.slf4j.LoggerFactory;
     public login_result(login_result other) {
       if (other.isSetSuccess()) {
         this.success = org.apache.thrift.TBaseHelper.copyBinary(other.success);
;
       }
       if (other.isSetOuch2()) {
         this.ouch2 = new AccumuloSecurityException(other.ouch2);
@@ -13342,16 +13356,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForSuccess() {
      return success;
      return org.apache.thrift.TBaseHelper.copyBinary(success);
     }
 
     public login_result setSuccess(byte[] success) {
      setSuccess(success == null ? (ByteBuffer)null : ByteBuffer.wrap(success));
      this.success = success == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(success, success.length));
       return this;
     }
 
     public login_result setSuccess(ByteBuffer success) {
      this.success = success;
      this.success = org.apache.thrift.TBaseHelper.copyBinary(success);
       return this;
     }
 
@@ -13478,7 +13492,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -13784,7 +13810,7 @@ import org.slf4j.LoggerFactory;
       String constraintClassName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.constraintClassName = constraintClassName;
     }
@@ -13795,7 +13821,6 @@ import org.slf4j.LoggerFactory;
     public addConstraint_args(addConstraint_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -13822,16 +13847,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public addConstraint_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public addConstraint_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -14004,7 +14029,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_constraintClassName = true &amp;&amp; (isSetConstraintClassName());
      list.add(present_constraintClassName);
      if (present_constraintClassName)
        list.add(constraintClassName);

      return list.hashCode();
     }
 
     @Override
@@ -14531,7 +14573,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Integer.valueOf(getSuccess());
        return getSuccess();
 
       case OUCH1:
         return getOuch1();
@@ -14619,7 +14661,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -15010,7 +15074,7 @@ import org.slf4j.LoggerFactory;
       Set&lt;ByteBuffer&gt; splits)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.splits = splits;
     }
@@ -15021,7 +15085,6 @@ import org.slf4j.LoggerFactory;
     public addSplits_args(addSplits_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -15049,16 +15112,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public addSplits_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public addSplits_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -15246,7 +15309,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_splits = true &amp;&amp; (isSetSplits());
      list.add(present_splits);
      if (present_splits)
        list.add(splits);

      return list.hashCode();
     }
 
     @Override
@@ -15327,7 +15407,7 @@ import org.slf4j.LoggerFactory;
       if (this.splits == null) {
         sb.append("null");
       } else {
        sb.append(this.splits);
        org.apache.thrift.TBaseHelper.toString(this.splits, sb);
       }
       first = false;
       sb.append(")");
@@ -15394,11 +15474,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set174 = iprot.readSetBegin();
                   struct.splits = new HashSet&lt;ByteBuffer&gt;(2*_set174.size);
                  for (int _i175 = 0; _i175 &lt; _set174.size; ++_i175)
                  ByteBuffer _elem175;
                  for (int _i176 = 0; _i176 &lt; _set174.size; ++_i176)
                   {
                    ByteBuffer _elem176;
                    _elem176 = iprot.readBinary();
                    struct.splits.add(_elem176);
                    _elem175 = iprot.readBinary();
                    struct.splits.add(_elem175);
                   }
                   iprot.readSetEnd();
                 }
@@ -15505,11 +15585,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set179 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.splits = new HashSet&lt;ByteBuffer&gt;(2*_set179.size);
            for (int _i180 = 0; _i180 &lt; _set179.size; ++_i180)
            ByteBuffer _elem180;
            for (int _i181 = 0; _i181 &lt; _set179.size; ++_i181)
             {
              ByteBuffer _elem181;
              _elem181 = iprot.readBinary();
              struct.splits.add(_elem181);
              _elem180 = iprot.readBinary();
              struct.splits.add(_elem180);
             }
           }
           struct.setSplitsIsSet(true);
@@ -15832,7 +15912,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -16192,7 +16289,7 @@ import org.slf4j.LoggerFactory;
       Set&lt;IteratorScope&gt; scopes)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.setting = setting;
       this.scopes = scopes;
@@ -16204,7 +16301,6 @@ import org.slf4j.LoggerFactory;
     public attachIterator_args(attachIterator_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -16239,16 +16335,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public attachIterator_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public attachIterator_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -16482,7 +16578,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_setting = true &amp;&amp; (isSetSetting());
      list.add(present_setting);
      if (present_setting)
        list.add(setting);

      boolean present_scopes = true &amp;&amp; (isSetScopes());
      list.add(present_scopes);
      if (present_scopes)
        list.add(scopes);

      return list.hashCode();
     }
 
     @Override
@@ -16660,11 +16778,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set182 = iprot.readSetBegin();
                   struct.scopes = new HashSet&lt;IteratorScope&gt;(2*_set182.size);
                  for (int _i183 = 0; _i183 &lt; _set182.size; ++_i183)
                  IteratorScope _elem183;
                  for (int _i184 = 0; _i184 &lt; _set182.size; ++_i184)
                   {
                    IteratorScope _elem184;
                    _elem184 = IteratorScope.findByValue(iprot.readI32());
                    struct.scopes.add(_elem184);
                    _elem183 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
                    struct.scopes.add(_elem183);
                   }
                   iprot.readSetEnd();
                 }
@@ -16787,11 +16905,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set187 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
             struct.scopes = new HashSet&lt;IteratorScope&gt;(2*_set187.size);
            for (int _i188 = 0; _i188 &lt; _set187.size; ++_i188)
            IteratorScope _elem188;
            for (int _i189 = 0; _i189 &lt; _set187.size; ++_i189)
             {
              IteratorScope _elem189;
              _elem189 = IteratorScope.findByValue(iprot.readI32());
              struct.scopes.add(_elem189);
              _elem188 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
              struct.scopes.add(_elem188);
             }
           }
           struct.setScopesIsSet(true);
@@ -17114,7 +17232,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -17474,7 +17609,7 @@ import org.slf4j.LoggerFactory;
       Set&lt;IteratorScope&gt; scopes)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.setting = setting;
       this.scopes = scopes;
@@ -17486,7 +17621,6 @@ import org.slf4j.LoggerFactory;
     public checkIteratorConflicts_args(checkIteratorConflicts_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -17521,16 +17655,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public checkIteratorConflicts_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public checkIteratorConflicts_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -17764,7 +17898,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_setting = true &amp;&amp; (isSetSetting());
      list.add(present_setting);
      if (present_setting)
        list.add(setting);

      boolean present_scopes = true &amp;&amp; (isSetScopes());
      list.add(present_scopes);
      if (present_scopes)
        list.add(scopes);

      return list.hashCode();
     }
 
     @Override
@@ -17942,11 +18098,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set190 = iprot.readSetBegin();
                   struct.scopes = new HashSet&lt;IteratorScope&gt;(2*_set190.size);
                  for (int _i191 = 0; _i191 &lt; _set190.size; ++_i191)
                  IteratorScope _elem191;
                  for (int _i192 = 0; _i192 &lt; _set190.size; ++_i192)
                   {
                    IteratorScope _elem192;
                    _elem192 = IteratorScope.findByValue(iprot.readI32());
                    struct.scopes.add(_elem192);
                    _elem191 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
                    struct.scopes.add(_elem191);
                   }
                   iprot.readSetEnd();
                 }
@@ -18069,11 +18225,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set195 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
             struct.scopes = new HashSet&lt;IteratorScope&gt;(2*_set195.size);
            for (int _i196 = 0; _i196 &lt; _set195.size; ++_i196)
            IteratorScope _elem196;
            for (int _i197 = 0; _i197 &lt; _set195.size; ++_i197)
             {
              IteratorScope _elem197;
              _elem197 = IteratorScope.findByValue(iprot.readI32());
              struct.scopes.add(_elem197);
              _elem196 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
              struct.scopes.add(_elem196);
             }
           }
           struct.setScopesIsSet(true);
@@ -18396,7 +18552,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -18739,7 +18912,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -18749,7 +18922,6 @@ import org.slf4j.LoggerFactory;
     public clearLocatorCache_args(clearLocatorCache_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -18772,16 +18944,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public clearLocatorCache_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public clearLocatorCache_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -18908,7 +19080,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -19303,7 +19487,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      return list.hashCode();
     }
 
     @Override
@@ -19597,7 +19788,7 @@ import org.slf4j.LoggerFactory;
       Set&lt;String&gt; propertiesToExclude)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.newTableName = newTableName;
       this.flush = flush;
@@ -19613,7 +19804,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -19653,16 +19843,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public cloneTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public cloneTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -19891,7 +20081,7 @@ import org.slf4j.LoggerFactory;
         return getNewTableName();
 
       case FLUSH:
        return Boolean.valueOf(isFlush());
        return isFlush();
 
       case PROPERTIES_TO_SET:
         return getPropertiesToSet();
@@ -19998,7 +20188,39 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_newTableName = true &amp;&amp; (isSetNewTableName());
      list.add(present_newTableName);
      if (present_newTableName)
        list.add(newTableName);

      boolean present_flush = true;
      list.add(present_flush);
      if (present_flush)
        list.add(flush);

      boolean present_propertiesToSet = true &amp;&amp; (isSetPropertiesToSet());
      list.add(present_propertiesToSet);
      if (present_propertiesToSet)
        list.add(propertiesToSet);

      boolean present_propertiesToExclude = true &amp;&amp; (isSetPropertiesToExclude());
      list.add(present_propertiesToExclude);
      if (present_propertiesToExclude)
        list.add(propertiesToExclude);

      return list.hashCode();
     }
 
     @Override
@@ -20214,13 +20436,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map198 = iprot.readMapBegin();
                   struct.propertiesToSet = new HashMap&lt;String,String&gt;(2*_map198.size);
                  for (int _i199 = 0; _i199 &lt; _map198.size; ++_i199)
                  String _key199;
                  String _val200;
                  for (int _i201 = 0; _i201 &lt; _map198.size; ++_i201)
                   {
                    String _key200;
                    String _val201;
                    _key200 = iprot.readString();
                    _val201 = iprot.readString();
                    struct.propertiesToSet.put(_key200, _val201);
                    _key199 = iprot.readString();
                    _val200 = iprot.readString();
                    struct.propertiesToSet.put(_key199, _val200);
                   }
                   iprot.readMapEnd();
                 }
@@ -20234,11 +20456,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set202 = iprot.readSetBegin();
                   struct.propertiesToExclude = new HashSet&lt;String&gt;(2*_set202.size);
                  for (int _i203 = 0; _i203 &lt; _set202.size; ++_i203)
                  String _elem203;
                  for (int _i204 = 0; _i204 &lt; _set202.size; ++_i204)
                   {
                    String _elem204;
                    _elem204 = iprot.readString();
                    struct.propertiesToExclude.add(_elem204);
                    _elem203 = iprot.readString();
                    struct.propertiesToExclude.add(_elem203);
                   }
                   iprot.readSetEnd();
                 }
@@ -20399,13 +20621,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map209 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.propertiesToSet = new HashMap&lt;String,String&gt;(2*_map209.size);
            for (int _i210 = 0; _i210 &lt; _map209.size; ++_i210)
            String _key210;
            String _val211;
            for (int _i212 = 0; _i212 &lt; _map209.size; ++_i212)
             {
              String _key211;
              String _val212;
              _key211 = iprot.readString();
              _val212 = iprot.readString();
              struct.propertiesToSet.put(_key211, _val212);
              _key210 = iprot.readString();
              _val211 = iprot.readString();
              struct.propertiesToSet.put(_key210, _val211);
             }
           }
           struct.setPropertiesToSetIsSet(true);
@@ -20414,11 +20636,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set213 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.propertiesToExclude = new HashSet&lt;String&gt;(2*_set213.size);
            for (int _i214 = 0; _i214 &lt; _set213.size; ++_i214)
            String _elem214;
            for (int _i215 = 0; _i215 &lt; _set213.size; ++_i215)
             {
              String _elem215;
              _elem215 = iprot.readString();
              struct.propertiesToExclude.add(_elem215);
              _elem214 = iprot.readString();
              struct.propertiesToExclude.add(_elem214);
             }
           }
           struct.setPropertiesToExcludeIsSet(true);
@@ -20800,7 +21022,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      boolean present_ouch4 = true &amp;&amp; (isSetOuch4());
      list.add(present_ouch4);
      if (present_ouch4)
        list.add(ouch4);

      return list.hashCode();
     }
 
     @Override
@@ -21238,10 +21482,10 @@ import org.slf4j.LoggerFactory;
       CompactionStrategyConfig compactionStrategy)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
      this.startRow = startRow;
      this.endRow = endRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       this.iterators = iterators;
       this.flush = flush;
       setFlushIsSet(true);
@@ -21257,18 +21501,15 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
       if (other.isSetIterators()) {
         List&lt;IteratorSetting&gt; __this__iterators = new ArrayList&lt;IteratorSetting&gt;(other.iterators.size());
@@ -21308,16 +21549,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public compactTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public compactTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -21366,16 +21607,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public compactTable_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public compactTable_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -21400,16 +21641,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public compactTable_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public compactTable_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -21624,10 +21865,10 @@ import org.slf4j.LoggerFactory;
         return getIterators();
 
       case FLUSH:
        return Boolean.valueOf(isFlush());
        return isFlush();
 
       case WAIT:
        return Boolean.valueOf(isWait());
        return isWait();
 
       case COMPACTION_STRATEGY:
         return getCompactionStrategy();
@@ -21753,7 +21994,49 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      boolean present_iterators = true &amp;&amp; (isSetIterators());
      list.add(present_iterators);
      if (present_iterators)
        list.add(iterators);

      boolean present_flush = true;
      list.add(present_flush);
      if (present_flush)
        list.add(flush);

      boolean present_wait = true;
      list.add(present_wait);
      if (present_wait)
        list.add(wait);

      boolean present_compactionStrategy = true &amp;&amp; (isSetCompactionStrategy());
      list.add(present_compactionStrategy);
      if (present_compactionStrategy)
        list.add(compactionStrategy);

      return list.hashCode();
     }
 
     @Override
@@ -22004,12 +22287,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list216 = iprot.readListBegin();
                   struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list216.size);
                  for (int _i217 = 0; _i217 &lt; _list216.size; ++_i217)
                  IteratorSetting _elem217;
                  for (int _i218 = 0; _i218 &lt; _list216.size; ++_i218)
                   {
                    IteratorSetting _elem218;
                    _elem218 = new IteratorSetting();
                    _elem218.read(iprot);
                    struct.iterators.add(_elem218);
                    _elem217 = new IteratorSetting();
                    _elem217.read(iprot);
                    struct.iterators.add(_elem217);
                   }
                   iprot.readListEnd();
                 }
@@ -22200,12 +22483,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list221 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list221.size);
            for (int _i222 = 0; _i222 &lt; _list221.size; ++_i222)
            IteratorSetting _elem222;
            for (int _i223 = 0; _i223 &lt; _list221.size; ++_i223)
             {
              IteratorSetting _elem223;
              _elem223 = new IteratorSetting();
              _elem223.read(iprot);
              struct.iterators.add(_elem223);
              _elem222 = new IteratorSetting();
              _elem222.read(iprot);
              struct.iterators.add(_elem222);
             }
           }
           struct.setIteratorsIsSet(true);
@@ -22541,7 +22824,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -22884,7 +23184,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -22894,7 +23194,6 @@ import org.slf4j.LoggerFactory;
     public cancelCompaction_args(cancelCompaction_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -22917,16 +23216,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public cancelCompaction_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public cancelCompaction_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -23053,7 +23352,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -23566,7 +23877,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -23935,7 +24263,7 @@ import org.slf4j.LoggerFactory;
       TimeType type)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.versioningIter = versioningIter;
       setVersioningIterIsSet(true);
@@ -23949,7 +24277,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -23979,16 +24306,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public createTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public createTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -24132,7 +24459,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case VERSIONING_ITER:
        return Boolean.valueOf(isVersioningIter());
        return isVersioningIter();
 
       case TYPE:
         return getType();
@@ -24214,7 +24541,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_versioningIter = true;
      list.add(present_versioningIter);
      if (present_versioningIter)
        list.add(versioningIter);

      boolean present_type = true &amp;&amp; (isSetType());
      list.add(present_type);
      if (present_type)
        list.add(type.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -24383,7 +24732,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 4: // TYPE
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.type = TimeType.findByValue(iprot.readI32());
                struct.type = org.apache.accumulo.proxy.thrift.TimeType.findByValue(iprot.readI32());
                 struct.setTypeIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -24484,7 +24833,7 @@ import org.slf4j.LoggerFactory;
           struct.setVersioningIterIsSet(true);
         }
         if (incoming.get(3)) {
          struct.type = TimeType.findByValue(iprot.readI32());
          struct.type = org.apache.accumulo.proxy.thrift.TimeType.findByValue(iprot.readI32());
           struct.setTypeIsSet(true);
         }
       }
@@ -24805,7 +25154,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -25148,7 +25514,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -25158,7 +25524,6 @@ import org.slf4j.LoggerFactory;
     public deleteTable_args(deleteTable_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -25181,16 +25546,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public deleteTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public deleteTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -25317,7 +25682,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -25830,7 +26207,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -26189,10 +26583,10 @@ import org.slf4j.LoggerFactory;
       ByteBuffer endRow)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
      this.startRow = startRow;
      this.endRow = endRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     /**
@@ -26201,18 +26595,15 @@ import org.slf4j.LoggerFactory;
     public deleteRows_args(deleteRows_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
     }
 
@@ -26234,16 +26625,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public deleteRows_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public deleteRows_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -26292,16 +26683,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public deleteRows_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public deleteRows_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -26326,16 +26717,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public deleteRows_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public deleteRows_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -26482,7 +26873,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      return list.hashCode();
     }
 
     @Override
@@ -27077,7 +27490,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -27428,7 +27858,7 @@ import org.slf4j.LoggerFactory;
       String exportDir)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.exportDir = exportDir;
     }
@@ -27439,7 +27869,6 @@ import org.slf4j.LoggerFactory;
     public exportTable_args(exportTable_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -27466,16 +27895,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public exportTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public exportTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -27648,7 +28077,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_exportDir = true &amp;&amp; (isSetExportDir());
      list.add(present_exportDir);
      if (present_exportDir)
        list.add(exportDir);

      return list.hashCode();
     }
 
     @Override
@@ -28202,7 +28648,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -28571,10 +29034,10 @@ import org.slf4j.LoggerFactory;
       boolean wait)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
      this.startRow = startRow;
      this.endRow = endRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       this.wait = wait;
       setWaitIsSet(true);
     }
@@ -28586,18 +29049,15 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
       this.wait = other.wait;
     }
@@ -28622,16 +29082,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public flushTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public flushTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -28680,16 +29140,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public flushTable_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public flushTable_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -28714,16 +29174,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public flushTable_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public flushTable_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -28825,7 +29285,7 @@ import org.slf4j.LoggerFactory;
         return getEndRow();
 
       case WAIT:
        return Boolean.valueOf(isWait());
        return isWait();
 
       }
       throw new IllegalStateException();
@@ -28915,7 +29375,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      boolean present_wait = true;
      list.add(present_wait);
      if (present_wait)
        list.add(wait);

      return list.hashCode();
     }
 
     @Override
@@ -29547,7 +30034,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -29891,7 +30395,7 @@ import org.slf4j.LoggerFactory;
       Set&lt;String&gt; tables)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tables = tables;
     }
 
@@ -29901,7 +30405,6 @@ import org.slf4j.LoggerFactory;
     public getDiskUsage_args(getDiskUsage_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTables()) {
         Set&lt;String&gt; __this__tables = new HashSet&lt;String&gt;(other.tables);
@@ -29925,16 +30428,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getDiskUsage_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getDiskUsage_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -30076,7 +30579,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tables = true &amp;&amp; (isSetTables());
      list.add(present_tables);
      if (present_tables)
        list.add(tables);

      return list.hashCode();
     }
 
     @Override
@@ -30198,11 +30713,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set224 = iprot.readSetBegin();
                   struct.tables = new HashSet&lt;String&gt;(2*_set224.size);
                  for (int _i225 = 0; _i225 &lt; _set224.size; ++_i225)
                  String _elem225;
                  for (int _i226 = 0; _i226 &lt; _set224.size; ++_i226)
                   {
                    String _elem226;
                    _elem226 = iprot.readString();
                    struct.tables.add(_elem226);
                    _elem225 = iprot.readString();
                    struct.tables.add(_elem225);
                   }
                   iprot.readSetEnd();
                 }
@@ -30294,11 +30809,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set229 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.tables = new HashSet&lt;String&gt;(2*_set229.size);
            for (int _i230 = 0; _i230 &lt; _set229.size; ++_i230)
            String _elem230;
            for (int _i231 = 0; _i231 &lt; _set229.size; ++_i231)
             {
              String _elem231;
              _elem231 = iprot.readString();
              struct.tables.add(_elem231);
              _elem230 = iprot.readString();
              struct.tables.add(_elem230);
             }
           }
           struct.setTablesIsSet(true);
@@ -30700,7 +31215,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -30850,12 +31387,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list232 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;DiskUsage&gt;(_list232.size);
                  for (int _i233 = 0; _i233 &lt; _list232.size; ++_i233)
                  DiskUsage _elem233;
                  for (int _i234 = 0; _i234 &lt; _list232.size; ++_i234)
                   {
                    DiskUsage _elem234;
                    _elem234 = new DiskUsage();
                    _elem234.read(iprot);
                    struct.success.add(_elem234);
                    _elem233 = new DiskUsage();
                    _elem233.read(iprot);
                    struct.success.add(_elem233);
                   }
                   iprot.readListEnd();
                 }
@@ -30992,12 +31529,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list237 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;DiskUsage&gt;(_list237.size);
            for (int _i238 = 0; _i238 &lt; _list237.size; ++_i238)
            DiskUsage _elem238;
            for (int _i239 = 0; _i239 &lt; _list237.size; ++_i239)
             {
              DiskUsage _elem239;
              _elem239 = new DiskUsage();
              _elem239.read(iprot);
              struct.success.add(_elem239);
              _elem238 = new DiskUsage();
              _elem238.read(iprot);
              struct.success.add(_elem238);
             }
           }
           struct.setSuccessIsSet(true);
@@ -31118,7 +31655,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -31128,7 +31665,6 @@ import org.slf4j.LoggerFactory;
     public getLocalityGroups_args(getLocalityGroups_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -31151,16 +31687,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getLocalityGroups_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getLocalityGroups_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -31287,7 +31823,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -31885,7 +32433,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -32035,23 +32605,23 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map240 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,Set&lt;String&gt;&gt;(2*_map240.size);
                  for (int _i241 = 0; _i241 &lt; _map240.size; ++_i241)
                  String _key241;
                  Set&lt;String&gt; _val242;
                  for (int _i243 = 0; _i243 &lt; _map240.size; ++_i243)
                   {
                    String _key242;
                    Set&lt;String&gt; _val243;
                    _key242 = iprot.readString();
                    _key241 = iprot.readString();
                     {
                       org.apache.thrift.protocol.TSet _set244 = iprot.readSetBegin();
                      _val243 = new HashSet&lt;String&gt;(2*_set244.size);
                      for (int _i245 = 0; _i245 &lt; _set244.size; ++_i245)
                      _val242 = new HashSet&lt;String&gt;(2*_set244.size);
                      String _elem245;
                      for (int _i246 = 0; _i246 &lt; _set244.size; ++_i246)
                       {
                        String _elem246;
                        _elem246 = iprot.readString();
                        _val243.add(_elem246);
                        _elem245 = iprot.readString();
                        _val242.add(_elem245);
                       }
                       iprot.readSetEnd();
                     }
                    struct.success.put(_key242, _val243);
                    struct.success.put(_key241, _val242);
                   }
                   iprot.readMapEnd();
                 }
@@ -32203,22 +32773,22 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map251 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.SET, iprot.readI32());
             struct.success = new HashMap&lt;String,Set&lt;String&gt;&gt;(2*_map251.size);
            for (int _i252 = 0; _i252 &lt; _map251.size; ++_i252)
            String _key252;
            Set&lt;String&gt; _val253;
            for (int _i254 = 0; _i254 &lt; _map251.size; ++_i254)
             {
              String _key253;
              Set&lt;String&gt; _val254;
              _key253 = iprot.readString();
              _key252 = iprot.readString();
               {
                 org.apache.thrift.protocol.TSet _set255 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
                _val254 = new HashSet&lt;String&gt;(2*_set255.size);
                for (int _i256 = 0; _i256 &lt; _set255.size; ++_i256)
                _val253 = new HashSet&lt;String&gt;(2*_set255.size);
                String _elem256;
                for (int _i257 = 0; _i257 &lt; _set255.size; ++_i257)
                 {
                  String _elem257;
                  _elem257 = iprot.readString();
                  _val254.add(_elem257);
                  _elem256 = iprot.readString();
                  _val253.add(_elem256);
                 }
               }
              struct.success.put(_key253, _val254);
              struct.success.put(_key252, _val253);
             }
           }
           struct.setSuccessIsSet(true);
@@ -32363,7 +32933,7 @@ import org.slf4j.LoggerFactory;
       IteratorScope scope)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.iteratorName = iteratorName;
       this.scope = scope;
@@ -32375,7 +32945,6 @@ import org.slf4j.LoggerFactory;
     public getIteratorSetting_args(getIteratorSetting_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -32406,16 +32975,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getIteratorSetting_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getIteratorSetting_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -32642,7 +33211,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_iteratorName = true &amp;&amp; (isSetIteratorName());
      list.add(present_iteratorName);
      if (present_iteratorName)
        list.add(iteratorName);

      boolean present_scope = true &amp;&amp; (isSetScope());
      list.add(present_scope);
      if (present_scope)
        list.add(scope.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -32813,7 +33404,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 4: // SCOPE
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.scope = IteratorScope.findByValue(iprot.readI32());
                struct.scope = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
                 struct.setScopeIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -32916,7 +33507,7 @@ import org.slf4j.LoggerFactory;
           struct.setIteratorNameIsSet(true);
         }
         if (incoming.get(3)) {
          struct.scope = IteratorScope.findByValue(iprot.readI32());
          struct.scope = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
           struct.setScopeIsSet(true);
         }
       }
@@ -33296,7 +33887,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -33729,13 +34342,13 @@ import org.slf4j.LoggerFactory;
       boolean endInclusive)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.auths = auths;
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       this.startInclusive = startInclusive;
       setStartInclusiveIsSet(true);
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       this.endInclusive = endInclusive;
       setEndInclusiveIsSet(true);
     }
@@ -33747,7 +34360,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -33758,12 +34370,10 @@ import org.slf4j.LoggerFactory;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       this.startInclusive = other.startInclusive;
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
       this.endInclusive = other.endInclusive;
     }
@@ -33791,16 +34401,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getMaxRow_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getMaxRow_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -33888,16 +34498,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public getMaxRow_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public getMaxRow_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -33945,16 +34555,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public getMaxRow_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public getMaxRow_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -34072,13 +34682,13 @@ import org.slf4j.LoggerFactory;
         return getStartRow();
 
       case START_INCLUSIVE:
        return Boolean.valueOf(isStartInclusive());
        return isStartInclusive();
 
       case END_ROW:
         return getEndRow();
 
       case END_INCLUSIVE:
        return Boolean.valueOf(isEndInclusive());
        return isEndInclusive();
 
       }
       throw new IllegalStateException();
@@ -34190,7 +34800,44 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_auths = true &amp;&amp; (isSetAuths());
      list.add(present_auths);
      if (present_auths)
        list.add(auths);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_startInclusive = true;
      list.add(present_startInclusive);
      if (present_startInclusive)
        list.add(startInclusive);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      boolean present_endInclusive = true;
      list.add(present_endInclusive);
      if (present_endInclusive)
        list.add(endInclusive);

      return list.hashCode();
     }
 
     @Override
@@ -34311,7 +34958,7 @@ import org.slf4j.LoggerFactory;
       if (this.auths == null) {
         sb.append("null");
       } else {
        sb.append(this.auths);
        org.apache.thrift.TBaseHelper.toString(this.auths, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -34404,11 +35051,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set258 = iprot.readSetBegin();
                   struct.auths = new HashSet&lt;ByteBuffer&gt;(2*_set258.size);
                  for (int _i259 = 0; _i259 &lt; _set258.size; ++_i259)
                  ByteBuffer _elem259;
                  for (int _i260 = 0; _i260 &lt; _set258.size; ++_i260)
                   {
                    ByteBuffer _elem260;
                    _elem260 = iprot.readBinary();
                    struct.auths.add(_elem260);
                    _elem259 = iprot.readBinary();
                    struct.auths.add(_elem259);
                   }
                   iprot.readSetEnd();
                 }
@@ -34587,11 +35234,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set263 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.auths = new HashSet&lt;ByteBuffer&gt;(2*_set263.size);
            for (int _i264 = 0; _i264 &lt; _set263.size; ++_i264)
            ByteBuffer _elem264;
            for (int _i265 = 0; _i265 &lt; _set263.size; ++_i265)
             {
              ByteBuffer _elem265;
              _elem265 = iprot.readBinary();
              struct.auths.add(_elem265);
              _elem264 = iprot.readBinary();
              struct.auths.add(_elem264);
             }
           }
           struct.setAuthsIsSet(true);
@@ -34729,7 +35376,7 @@ import org.slf4j.LoggerFactory;
       TableNotFoundException ouch3)
     {
       this();
      this.success = success;
      this.success = org.apache.thrift.TBaseHelper.copyBinary(success);
       this.ouch1 = ouch1;
       this.ouch2 = ouch2;
       this.ouch3 = ouch3;
@@ -34741,7 +35388,6 @@ import org.slf4j.LoggerFactory;
     public getMaxRow_result(getMaxRow_result other) {
       if (other.isSetSuccess()) {
         this.success = org.apache.thrift.TBaseHelper.copyBinary(other.success);
;
       }
       if (other.isSetOuch1()) {
         this.ouch1 = new AccumuloException(other.ouch1);
@@ -34772,16 +35418,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForSuccess() {
      return success;
      return org.apache.thrift.TBaseHelper.copyBinary(success);
     }
 
     public getMaxRow_result setSuccess(byte[] success) {
      setSuccess(success == null ? (ByteBuffer)null : ByteBuffer.wrap(success));
      this.success = success == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(success, success.length));
       return this;
     }
 
     public getMaxRow_result setSuccess(ByteBuffer success) {
      this.success = success;
      this.success = org.apache.thrift.TBaseHelper.copyBinary(success);
       return this;
     }
 
@@ -35000,7 +35646,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -35384,7 +36052,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -35394,7 +36062,6 @@ import org.slf4j.LoggerFactory;
     public getTableProperties_args(getTableProperties_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -35417,16 +36084,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getTableProperties_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getTableProperties_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -35553,7 +36220,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -36139,7 +36818,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -36289,13 +36990,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map266 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,String&gt;(2*_map266.size);
                  for (int _i267 = 0; _i267 &lt; _map266.size; ++_i267)
                  String _key267;
                  String _val268;
                  for (int _i269 = 0; _i269 &lt; _map266.size; ++_i269)
                   {
                    String _key268;
                    String _val269;
                    _key268 = iprot.readString();
                    _val269 = iprot.readString();
                    struct.success.put(_key268, _val269);
                    _key267 = iprot.readString();
                    _val268 = iprot.readString();
                    struct.success.put(_key267, _val268);
                   }
                   iprot.readMapEnd();
                 }
@@ -36434,13 +37135,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map272 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashMap&lt;String,String&gt;(2*_map272.size);
            for (int _i273 = 0; _i273 &lt; _map272.size; ++_i273)
            String _key273;
            String _val274;
            for (int _i275 = 0; _i275 &lt; _map272.size; ++_i275)
             {
              String _key274;
              String _val275;
              _key274 = iprot.readString();
              _val275 = iprot.readString();
              struct.success.put(_key274, _val275);
              _key273 = iprot.readString();
              _val274 = iprot.readString();
              struct.success.put(_key273, _val274);
             }
           }
           struct.setSuccessIsSet(true);
@@ -36587,7 +37288,7 @@ import org.slf4j.LoggerFactory;
       boolean setTime)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.importDir = importDir;
       this.failureDir = failureDir;
@@ -36602,7 +37303,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -36636,16 +37336,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public importDirectory_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public importDirectory_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -36819,7 +37519,7 @@ import org.slf4j.LoggerFactory;
         return getFailureDir();
 
       case SET_TIME:
        return Boolean.valueOf(isSetTime());
        return isSetTime();
 
       }
       throw new IllegalStateException();
@@ -36909,7 +37609,34 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_importDir = true &amp;&amp; (isSetImportDir());
      list.add(present_importDir);
      if (present_importDir)
        list.add(importDir);

      boolean present_failureDir = true &amp;&amp; (isSetFailureDir());
      list.add(present_failureDir);
      if (present_failureDir)
        list.add(failureDir);

      boolean present_setTime = true;
      list.add(present_setTime);
      if (present_setTime)
        list.add(setTime);

      return list.hashCode();
     }
 
     @Override
@@ -37541,7 +38268,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      boolean present_ouch4 = true &amp;&amp; (isSetOuch4());
      list.add(present_ouch4);
      if (present_ouch4)
        list.add(ouch4);

      return list.hashCode();
     }
 
     @Override
@@ -37892,7 +38636,7 @@ import org.slf4j.LoggerFactory;
       String importDir)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.importDir = importDir;
     }
@@ -37903,7 +38647,6 @@ import org.slf4j.LoggerFactory;
     public importTable_args(importTable_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -37930,16 +38673,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public importTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public importTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -38112,7 +38855,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_importDir = true &amp;&amp; (isSetImportDir());
      list.add(present_importDir);
      if (present_importDir)
        list.add(importDir);

      return list.hashCode();
     }
 
     @Override
@@ -38666,7 +39426,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -39019,7 +39796,7 @@ import org.slf4j.LoggerFactory;
       int maxSplits)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.maxSplits = maxSplits;
       setMaxSplitsIsSet(true);
@@ -39032,7 +39809,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -39058,16 +39834,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public listSplits_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public listSplits_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -39171,7 +39947,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case MAX_SPLITS:
        return Integer.valueOf(getMaxSplits());
        return getMaxSplits();
 
       }
       throw new IllegalStateException();
@@ -39239,7 +40015,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_maxSplits = true;
      list.add(present_maxSplits);
      if (present_maxSplits)
        list.add(maxSplits);

      return list.hashCode();
     }
 
     @Override
@@ -39865,7 +40658,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -39940,7 +40755,7 @@ import org.slf4j.LoggerFactory;
       if (this.success == null) {
         sb.append("null");
       } else {
        sb.append(this.success);
        org.apache.thrift.TBaseHelper.toString(this.success, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -40015,11 +40830,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list276 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;ByteBuffer&gt;(_list276.size);
                  for (int _i277 = 0; _i277 &lt; _list276.size; ++_i277)
                  ByteBuffer _elem277;
                  for (int _i278 = 0; _i278 &lt; _list276.size; ++_i278)
                   {
                    ByteBuffer _elem278;
                    _elem278 = iprot.readBinary();
                    struct.success.add(_elem278);
                    _elem277 = iprot.readBinary();
                    struct.success.add(_elem277);
                   }
                   iprot.readListEnd();
                 }
@@ -40156,11 +40971,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list281 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new ArrayList&lt;ByteBuffer&gt;(_list281.size);
            for (int _i282 = 0; _i282 &lt; _list281.size; ++_i282)
            ByteBuffer _elem282;
            for (int _i283 = 0; _i283 &lt; _list281.size; ++_i283)
             {
              ByteBuffer _elem283;
              _elem283 = iprot.readBinary();
              struct.success.add(_elem283);
              _elem282 = iprot.readBinary();
              struct.success.add(_elem282);
             }
           }
           struct.setSuccessIsSet(true);
@@ -40273,7 +41088,7 @@ import org.slf4j.LoggerFactory;
       ByteBuffer login)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     /**
@@ -40282,7 +41097,6 @@ import org.slf4j.LoggerFactory;
     public listTables_args(listTables_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
     }
 
@@ -40301,16 +41115,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public listTables_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public listTables_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -40391,7 +41205,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      return list.hashCode();
     }
 
     @Override
@@ -40762,7 +41583,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -40858,11 +41686,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set284 = iprot.readSetBegin();
                   struct.success = new HashSet&lt;String&gt;(2*_set284.size);
                  for (int _i285 = 0; _i285 &lt; _set284.size; ++_i285)
                  String _elem285;
                  for (int _i286 = 0; _i286 &lt; _set284.size; ++_i286)
                   {
                    String _elem286;
                    _elem286 = iprot.readString();
                    struct.success.add(_elem286);
                    _elem285 = iprot.readString();
                    struct.success.add(_elem285);
                   }
                   iprot.readSetEnd();
                 }
@@ -40939,11 +41767,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set289 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashSet&lt;String&gt;(2*_set289.size);
            for (int _i290 = 0; _i290 &lt; _set289.size; ++_i290)
            String _elem290;
            for (int _i291 = 0; _i291 &lt; _set289.size; ++_i291)
             {
              String _elem291;
              _elem291 = iprot.readString();
              struct.success.add(_elem291);
              _elem290 = iprot.readString();
              struct.success.add(_elem290);
             }
           }
           struct.setSuccessIsSet(true);
@@ -41049,7 +41877,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -41059,7 +41887,6 @@ import org.slf4j.LoggerFactory;
     public listIterators_args(listIterators_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -41082,16 +41909,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public listIterators_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public listIterators_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -41218,7 +42045,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -41819,7 +42658,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -41969,23 +42830,23 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map292 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,Set&lt;IteratorScope&gt;&gt;(2*_map292.size);
                  for (int _i293 = 0; _i293 &lt; _map292.size; ++_i293)
                  String _key293;
                  Set&lt;IteratorScope&gt; _val294;
                  for (int _i295 = 0; _i295 &lt; _map292.size; ++_i295)
                   {
                    String _key294;
                    Set&lt;IteratorScope&gt; _val295;
                    _key294 = iprot.readString();
                    _key293 = iprot.readString();
                     {
                       org.apache.thrift.protocol.TSet _set296 = iprot.readSetBegin();
                      _val295 = new HashSet&lt;IteratorScope&gt;(2*_set296.size);
                      for (int _i297 = 0; _i297 &lt; _set296.size; ++_i297)
                      _val294 = new HashSet&lt;IteratorScope&gt;(2*_set296.size);
                      IteratorScope _elem297;
                      for (int _i298 = 0; _i298 &lt; _set296.size; ++_i298)
                       {
                        IteratorScope _elem298;
                        _elem298 = IteratorScope.findByValue(iprot.readI32());
                        _val295.add(_elem298);
                        _elem297 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
                        _val294.add(_elem297);
                       }
                       iprot.readSetEnd();
                     }
                    struct.success.put(_key294, _val295);
                    struct.success.put(_key293, _val294);
                   }
                   iprot.readMapEnd();
                 }
@@ -42137,22 +42998,22 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map303 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.SET, iprot.readI32());
             struct.success = new HashMap&lt;String,Set&lt;IteratorScope&gt;&gt;(2*_map303.size);
            for (int _i304 = 0; _i304 &lt; _map303.size; ++_i304)
            String _key304;
            Set&lt;IteratorScope&gt; _val305;
            for (int _i306 = 0; _i306 &lt; _map303.size; ++_i306)
             {
              String _key305;
              Set&lt;IteratorScope&gt; _val306;
              _key305 = iprot.readString();
              _key304 = iprot.readString();
               {
                 org.apache.thrift.protocol.TSet _set307 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
                _val306 = new HashSet&lt;IteratorScope&gt;(2*_set307.size);
                for (int _i308 = 0; _i308 &lt; _set307.size; ++_i308)
                _val305 = new HashSet&lt;IteratorScope&gt;(2*_set307.size);
                IteratorScope _elem308;
                for (int _i309 = 0; _i309 &lt; _set307.size; ++_i309)
                 {
                  IteratorScope _elem309;
                  _elem309 = IteratorScope.findByValue(iprot.readI32());
                  _val306.add(_elem309);
                  _elem308 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
                  _val305.add(_elem308);
                 }
               }
              struct.success.put(_key305, _val306);
              struct.success.put(_key304, _val305);
             }
           }
           struct.setSuccessIsSet(true);
@@ -42273,7 +43134,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -42283,7 +43144,6 @@ import org.slf4j.LoggerFactory;
     public listConstraints_args(listConstraints_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -42306,16 +43166,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public listConstraints_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public listConstraints_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -42442,7 +43302,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -43028,7 +43900,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -43178,13 +44072,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map310 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,Integer&gt;(2*_map310.size);
                  for (int _i311 = 0; _i311 &lt; _map310.size; ++_i311)
                  String _key311;
                  int _val312;
                  for (int _i313 = 0; _i313 &lt; _map310.size; ++_i313)
                   {
                    String _key312;
                    int _val313;
                    _key312 = iprot.readString();
                    _val313 = iprot.readI32();
                    struct.success.put(_key312, _val313);
                    _key311 = iprot.readString();
                    _val312 = iprot.readI32();
                    struct.success.put(_key311, _val312);
                   }
                   iprot.readMapEnd();
                 }
@@ -43323,13 +44217,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map316 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I32, iprot.readI32());
             struct.success = new HashMap&lt;String,Integer&gt;(2*_map316.size);
            for (int _i317 = 0; _i317 &lt; _map316.size; ++_i317)
            String _key317;
            int _val318;
            for (int _i319 = 0; _i319 &lt; _map316.size; ++_i319)
             {
              String _key318;
              int _val319;
              _key318 = iprot.readString();
              _val319 = iprot.readI32();
              struct.success.put(_key318, _val319);
              _key317 = iprot.readString();
              _val318 = iprot.readI32();
              struct.success.put(_key317, _val318);
             }
           }
           struct.setSuccessIsSet(true);
@@ -43466,10 +44360,10 @@ import org.slf4j.LoggerFactory;
       ByteBuffer endRow)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
      this.startRow = startRow;
      this.endRow = endRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     /**
@@ -43478,18 +44372,15 @@ import org.slf4j.LoggerFactory;
     public mergeTablets_args(mergeTablets_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
       }
       if (other.isSetStartRow()) {
         this.startRow = org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
;
       }
       if (other.isSetEndRow()) {
         this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
       }
     }
 
@@ -43511,16 +44402,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public mergeTablets_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public mergeTablets_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -43569,16 +44460,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForStartRow() {
      return startRow;
      return org.apache.thrift.TBaseHelper.copyBinary(startRow);
     }
 
     public mergeTablets_args setStartRow(byte[] startRow) {
      setStartRow(startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(startRow));
      this.startRow = startRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(startRow, startRow.length));
       return this;
     }
 
     public mergeTablets_args setStartRow(ByteBuffer startRow) {
      this.startRow = startRow;
      this.startRow = org.apache.thrift.TBaseHelper.copyBinary(startRow);
       return this;
     }
 
@@ -43603,16 +44494,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForEndRow() {
      return endRow;
      return org.apache.thrift.TBaseHelper.copyBinary(endRow);
     }
 
     public mergeTablets_args setEndRow(byte[] endRow) {
      setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
      this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
       return this;
     }
 
     public mergeTablets_args setEndRow(ByteBuffer endRow) {
      this.endRow = endRow;
      this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
       return this;
     }
 
@@ -43759,7 +44650,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_startRow = true &amp;&amp; (isSetStartRow());
      list.add(present_startRow);
      if (present_startRow)
        list.add(startRow);

      boolean present_endRow = true &amp;&amp; (isSetEndRow());
      list.add(present_endRow);
      if (present_endRow)
        list.add(endRow);

      return list.hashCode();
     }
 
     @Override
@@ -44354,7 +45267,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -44709,7 +45639,7 @@ import org.slf4j.LoggerFactory;
       boolean wait)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.wait = wait;
       setWaitIsSet(true);
@@ -44722,7 +45652,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -44748,16 +45677,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public offlineTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public offlineTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -44861,7 +45790,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case WAIT:
        return Boolean.valueOf(isWait());
        return isWait();
 
       }
       throw new IllegalStateException();
@@ -44929,7 +45858,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_wait = true;
      list.add(present_wait);
      if (present_wait)
        list.add(wait);

      return list.hashCode();
     }
 
     @Override
@@ -45479,7 +46425,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -45834,7 +46797,7 @@ import org.slf4j.LoggerFactory;
       boolean wait)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.wait = wait;
       setWaitIsSet(true);
@@ -45847,7 +46810,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -45873,16 +46835,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public onlineTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public onlineTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -45986,7 +46948,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case WAIT:
        return Boolean.valueOf(isWait());
        return isWait();
 
       }
       throw new IllegalStateException();
@@ -46054,7 +47016,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_wait = true;
      list.add(present_wait);
      if (present_wait)
        list.add(wait);

      return list.hashCode();
     }
 
     @Override
@@ -46604,7 +47583,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -46957,7 +47953,7 @@ import org.slf4j.LoggerFactory;
       int constraint)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.constraint = constraint;
       setConstraintIsSet(true);
@@ -46970,7 +47966,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -46996,16 +47991,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public removeConstraint_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public removeConstraint_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -47109,7 +48104,7 @@ import org.slf4j.LoggerFactory;
         return getTableName();
 
       case CONSTRAINT:
        return Integer.valueOf(getConstraint());
        return getConstraint();
 
       }
       throw new IllegalStateException();
@@ -47177,7 +48172,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_constraint = true;
      list.add(present_constraint);
      if (present_constraint)
        list.add(constraint);

      return list.hashCode();
     }
 
     @Override
@@ -47727,7 +48739,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -48087,7 +49116,7 @@ import org.slf4j.LoggerFactory;
       Set&lt;IteratorScope&gt; scopes)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.iterName = iterName;
       this.scopes = scopes;
@@ -48099,7 +49128,6 @@ import org.slf4j.LoggerFactory;
     public removeIterator_args(removeIterator_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -48134,16 +49162,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public removeIterator_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public removeIterator_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -48377,7 +49405,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_iterName = true &amp;&amp; (isSetIterName());
      list.add(present_iterName);
      if (present_iterName)
        list.add(iterName);

      boolean present_scopes = true &amp;&amp; (isSetScopes());
      list.add(present_scopes);
      if (present_scopes)
        list.add(scopes);

      return list.hashCode();
     }
 
     @Override
@@ -48551,11 +49601,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set320 = iprot.readSetBegin();
                   struct.scopes = new HashSet&lt;IteratorScope&gt;(2*_set320.size);
                  for (int _i321 = 0; _i321 &lt; _set320.size; ++_i321)
                  IteratorScope _elem321;
                  for (int _i322 = 0; _i322 &lt; _set320.size; ++_i322)
                   {
                    IteratorScope _elem322;
                    _elem322 = IteratorScope.findByValue(iprot.readI32());
                    struct.scopes.add(_elem322);
                    _elem321 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
                    struct.scopes.add(_elem321);
                   }
                   iprot.readSetEnd();
                 }
@@ -48677,11 +49727,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set325 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
             struct.scopes = new HashSet&lt;IteratorScope&gt;(2*_set325.size);
            for (int _i326 = 0; _i326 &lt; _set325.size; ++_i326)
            IteratorScope _elem326;
            for (int _i327 = 0; _i327 &lt; _set325.size; ++_i327)
             {
              IteratorScope _elem327;
              _elem327 = IteratorScope.findByValue(iprot.readI32());
              struct.scopes.add(_elem327);
              _elem326 = org.apache.accumulo.proxy.thrift.IteratorScope.findByValue(iprot.readI32());
              struct.scopes.add(_elem326);
             }
           }
           struct.setScopesIsSet(true);
@@ -49004,7 +50054,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -49355,7 +50422,7 @@ import org.slf4j.LoggerFactory;
       String property)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.property = property;
     }
@@ -49366,7 +50433,6 @@ import org.slf4j.LoggerFactory;
     public removeTableProperty_args(removeTableProperty_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -49393,16 +50459,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public removeTableProperty_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public removeTableProperty_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -49575,7 +50641,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      return list.hashCode();
     }
 
     @Override
@@ -50129,7 +51212,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -50480,7 +51580,7 @@ import org.slf4j.LoggerFactory;
       String newTableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.oldTableName = oldTableName;
       this.newTableName = newTableName;
     }
@@ -50491,7 +51591,6 @@ import org.slf4j.LoggerFactory;
     public renameTable_args(renameTable_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetOldTableName()) {
         this.oldTableName = other.oldTableName;
@@ -50518,16 +51617,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public renameTable_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public renameTable_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -50700,7 +51799,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_oldTableName = true &amp;&amp; (isSetOldTableName());
      list.add(present_oldTableName);
      if (present_oldTableName)
        list.add(oldTableName);

      boolean present_newTableName = true &amp;&amp; (isSetNewTableName());
      list.add(present_newTableName);
      if (present_newTableName)
        list.add(newTableName);

      return list.hashCode();
     }
 
     @Override
@@ -51313,7 +52429,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      boolean present_ouch4 = true &amp;&amp; (isSetOuch4());
      list.add(present_ouch4);
      if (present_ouch4)
        list.add(ouch4);

      return list.hashCode();
     }
 
     @Override
@@ -51710,7 +52848,7 @@ import org.slf4j.LoggerFactory;
       Map&lt;String,Set&lt;String&gt;&gt; groups)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.groups = groups;
     }
@@ -51721,7 +52859,6 @@ import org.slf4j.LoggerFactory;
     public setLocalityGroups_args(setLocalityGroups_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -51760,16 +52897,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public setLocalityGroups_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public setLocalityGroups_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -51953,7 +53090,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_groups = true &amp;&amp; (isSetGroups());
      list.add(present_groups);
      if (present_groups)
        list.add(groups);

      return list.hashCode();
     }
 
     @Override
@@ -52101,23 +53255,23 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map328 = iprot.readMapBegin();
                   struct.groups = new HashMap&lt;String,Set&lt;String&gt;&gt;(2*_map328.size);
                  for (int _i329 = 0; _i329 &lt; _map328.size; ++_i329)
                  String _key329;
                  Set&lt;String&gt; _val330;
                  for (int _i331 = 0; _i331 &lt; _map328.size; ++_i331)
                   {
                    String _key330;
                    Set&lt;String&gt; _val331;
                    _key330 = iprot.readString();
                    _key329 = iprot.readString();
                     {
                       org.apache.thrift.protocol.TSet _set332 = iprot.readSetBegin();
                      _val331 = new HashSet&lt;String&gt;(2*_set332.size);
                      for (int _i333 = 0; _i333 &lt; _set332.size; ++_i333)
                      _val330 = new HashSet&lt;String&gt;(2*_set332.size);
                      String _elem333;
                      for (int _i334 = 0; _i334 &lt; _set332.size; ++_i334)
                       {
                        String _elem334;
                        _elem334 = iprot.readString();
                        _val331.add(_elem334);
                        _elem333 = iprot.readString();
                        _val330.add(_elem333);
                       }
                       iprot.readSetEnd();
                     }
                    struct.groups.put(_key330, _val331);
                    struct.groups.put(_key329, _val330);
                   }
                   iprot.readMapEnd();
                 }
@@ -52239,22 +53393,22 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map339 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.SET, iprot.readI32());
             struct.groups = new HashMap&lt;String,Set&lt;String&gt;&gt;(2*_map339.size);
            for (int _i340 = 0; _i340 &lt; _map339.size; ++_i340)
            String _key340;
            Set&lt;String&gt; _val341;
            for (int _i342 = 0; _i342 &lt; _map339.size; ++_i342)
             {
              String _key341;
              Set&lt;String&gt; _val342;
              _key341 = iprot.readString();
              _key340 = iprot.readString();
               {
                 org.apache.thrift.protocol.TSet _set343 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
                _val342 = new HashSet&lt;String&gt;(2*_set343.size);
                for (int _i344 = 0; _i344 &lt; _set343.size; ++_i344)
                _val341 = new HashSet&lt;String&gt;(2*_set343.size);
                String _elem344;
                for (int _i345 = 0; _i345 &lt; _set343.size; ++_i345)
                 {
                  String _elem345;
                  _elem345 = iprot.readString();
                  _val342.add(_elem345);
                  _elem344 = iprot.readString();
                  _val341.add(_elem344);
                 }
               }
              struct.groups.put(_key341, _val342);
              struct.groups.put(_key340, _val341);
             }
           }
           struct.setGroupsIsSet(true);
@@ -52577,7 +53731,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -52936,7 +54107,7 @@ import org.slf4j.LoggerFactory;
       String value)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.property = property;
       this.value = value;
@@ -52948,7 +54119,6 @@ import org.slf4j.LoggerFactory;
     public setTableProperty_args(setTableProperty_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -52979,16 +54149,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public setTableProperty_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public setTableProperty_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -53207,7 +54377,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      boolean present_value = true &amp;&amp; (isSetValue());
      list.add(present_value);
      if (present_value)
        list.add(value);

      return list.hashCode();
     }
 
     @Override
@@ -53802,7 +54994,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -54163,7 +55372,7 @@ import org.slf4j.LoggerFactory;
       int maxSplits)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.range = range;
       this.maxSplits = maxSplits;
@@ -54177,7 +55386,6 @@ import org.slf4j.LoggerFactory;
       __isset_bitfield = other.__isset_bitfield;
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -54207,16 +55415,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public splitRangeByTablets_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public splitRangeByTablets_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -54355,7 +55563,7 @@ import org.slf4j.LoggerFactory;
         return getRange();
 
       case MAX_SPLITS:
        return Integer.valueOf(getMaxSplits());
        return getMaxSplits();
 
       }
       throw new IllegalStateException();
@@ -54434,7 +55642,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_range = true &amp;&amp; (isSetRange());
      list.add(present_range);
      if (present_range)
        list.add(range);

      boolean present_maxSplits = true;
      list.add(present_maxSplits);
      if (present_maxSplits)
        list.add(maxSplits);

      return list.hashCode();
     }
 
     @Override
@@ -55109,7 +56339,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -55259,12 +56511,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set346 = iprot.readSetBegin();
                   struct.success = new HashSet&lt;Range&gt;(2*_set346.size);
                  for (int _i347 = 0; _i347 &lt; _set346.size; ++_i347)
                  Range _elem347;
                  for (int _i348 = 0; _i348 &lt; _set346.size; ++_i348)
                   {
                    Range _elem348;
                    _elem348 = new Range();
                    _elem348.read(iprot);
                    struct.success.add(_elem348);
                    _elem347 = new Range();
                    _elem347.read(iprot);
                    struct.success.add(_elem347);
                   }
                   iprot.readSetEnd();
                 }
@@ -55401,12 +56653,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set351 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new HashSet&lt;Range&gt;(2*_set351.size);
            for (int _i352 = 0; _i352 &lt; _set351.size; ++_i352)
            Range _elem352;
            for (int _i353 = 0; _i353 &lt; _set351.size; ++_i353)
             {
              Range _elem353;
              _elem353 = new Range();
              _elem353.read(iprot);
              struct.success.add(_elem353);
              _elem352 = new Range();
              _elem352.read(iprot);
              struct.success.add(_elem352);
             }
           }
           struct.setSuccessIsSet(true);
@@ -55527,7 +56779,7 @@ import org.slf4j.LoggerFactory;
       String tableName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
     }
 
@@ -55537,7 +56789,6 @@ import org.slf4j.LoggerFactory;
     public tableExists_args(tableExists_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -55560,16 +56811,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public tableExists_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public tableExists_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -55696,7 +56947,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      return list.hashCode();
     }
 
     @Override
@@ -56047,7 +57310,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       }
       throw new IllegalStateException();
@@ -56093,7 +57356,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -56338,7 +57608,7 @@ import org.slf4j.LoggerFactory;
       ByteBuffer login)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     /**
@@ -56347,7 +57617,6 @@ import org.slf4j.LoggerFactory;
     public tableIdMap_args(tableIdMap_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
     }
 
@@ -56366,16 +57635,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public tableIdMap_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public tableIdMap_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -56456,7 +57725,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      return list.hashCode();
     }
 
     @Override
@@ -56824,7 +58100,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -56920,13 +58203,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map354 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,String&gt;(2*_map354.size);
                  for (int _i355 = 0; _i355 &lt; _map354.size; ++_i355)
                  String _key355;
                  String _val356;
                  for (int _i357 = 0; _i357 &lt; _map354.size; ++_i357)
                   {
                    String _key356;
                    String _val357;
                    _key356 = iprot.readString();
                    _val357 = iprot.readString();
                    struct.success.put(_key356, _val357);
                    _key355 = iprot.readString();
                    _val356 = iprot.readString();
                    struct.success.put(_key355, _val356);
                   }
                   iprot.readMapEnd();
                 }
@@ -57005,13 +58288,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map360 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashMap&lt;String,String&gt;(2*_map360.size);
            for (int _i361 = 0; _i361 &lt; _map360.size; ++_i361)
            String _key361;
            String _val362;
            for (int _i363 = 0; _i363 &lt; _map360.size; ++_i363)
             {
              String _key362;
              String _val363;
              _key362 = iprot.readString();
              _val363 = iprot.readString();
              struct.success.put(_key362, _val363);
              _key361 = iprot.readString();
              _val362 = iprot.readString();
              struct.success.put(_key361, _val362);
             }
           }
           struct.setSuccessIsSet(true);
@@ -57133,7 +58416,7 @@ import org.slf4j.LoggerFactory;
       String asTypeName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.className = className;
       this.asTypeName = asTypeName;
@@ -57145,7 +58428,6 @@ import org.slf4j.LoggerFactory;
     public testTableClassLoad_args(testTableClassLoad_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -57176,16 +58458,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public testTableClassLoad_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public testTableClassLoad_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -57404,7 +58686,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_className = true &amp;&amp; (isSetClassName());
      list.add(present_className);
      if (present_className)
        list.add(className);

      boolean present_asTypeName = true &amp;&amp; (isSetAsTypeName());
      list.add(present_asTypeName);
      if (present_asTypeName)
        list.add(asTypeName);

      return list.hashCode();
     }
 
     @Override
@@ -57972,7 +59276,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case OUCH1:
         return getOuch1();
@@ -58060,7 +59364,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -58442,7 +59768,7 @@ import org.slf4j.LoggerFactory;
       String tserver)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tserver = tserver;
     }
 
@@ -58452,7 +59778,6 @@ import org.slf4j.LoggerFactory;
     public pingTabletServer_args(pingTabletServer_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTserver()) {
         this.tserver = other.tserver;
@@ -58475,16 +59800,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public pingTabletServer_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public pingTabletServer_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -58611,7 +59936,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tserver = true &amp;&amp; (isSetTserver());
      list.add(present_tserver);
      if (present_tserver)
        list.add(tserver);

      return list.hashCode();
     }
 
     @Override
@@ -59065,7 +60402,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -59365,7 +60714,7 @@ import org.slf4j.LoggerFactory;
       String tserver)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tserver = tserver;
     }
 
@@ -59375,7 +60724,6 @@ import org.slf4j.LoggerFactory;
     public getActiveScans_args(getActiveScans_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTserver()) {
         this.tserver = other.tserver;
@@ -59398,16 +60746,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getActiveScans_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getActiveScans_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -59534,7 +60882,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tserver = true &amp;&amp; (isSetTserver());
      list.add(present_tserver);
      if (present_tserver)
        list.add(tserver);

      return list.hashCode();
     }
 
     @Override
@@ -60067,7 +61427,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -60199,12 +61576,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list364 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;ActiveScan&gt;(_list364.size);
                  for (int _i365 = 0; _i365 &lt; _list364.size; ++_i365)
                  ActiveScan _elem365;
                  for (int _i366 = 0; _i366 &lt; _list364.size; ++_i366)
                   {
                    ActiveScan _elem366;
                    _elem366 = new ActiveScan();
                    _elem366.read(iprot);
                    struct.success.add(_elem366);
                    _elem365 = new ActiveScan();
                    _elem365.read(iprot);
                    struct.success.add(_elem365);
                   }
                   iprot.readListEnd();
                 }
@@ -60321,12 +61698,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list369 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;ActiveScan&gt;(_list369.size);
            for (int _i370 = 0; _i370 &lt; _list369.size; ++_i370)
            ActiveScan _elem370;
            for (int _i371 = 0; _i371 &lt; _list369.size; ++_i371)
             {
              ActiveScan _elem371;
              _elem371 = new ActiveScan();
              _elem371.read(iprot);
              struct.success.add(_elem371);
              _elem370 = new ActiveScan();
              _elem370.read(iprot);
              struct.success.add(_elem370);
             }
           }
           struct.setSuccessIsSet(true);
@@ -60442,7 +61819,7 @@ import org.slf4j.LoggerFactory;
       String tserver)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tserver = tserver;
     }
 
@@ -60452,7 +61829,6 @@ import org.slf4j.LoggerFactory;
     public getActiveCompactions_args(getActiveCompactions_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTserver()) {
         this.tserver = other.tserver;
@@ -60475,16 +61851,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getActiveCompactions_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getActiveCompactions_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -60611,7 +61987,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tserver = true &amp;&amp; (isSetTserver());
      list.add(present_tserver);
      if (present_tserver)
        list.add(tserver);

      return list.hashCode();
     }
 
     @Override
@@ -61144,7 +62532,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -61276,12 +62681,12 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list372 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;ActiveCompaction&gt;(_list372.size);
                  for (int _i373 = 0; _i373 &lt; _list372.size; ++_i373)
                  ActiveCompaction _elem373;
                  for (int _i374 = 0; _i374 &lt; _list372.size; ++_i374)
                   {
                    ActiveCompaction _elem374;
                    _elem374 = new ActiveCompaction();
                    _elem374.read(iprot);
                    struct.success.add(_elem374);
                    _elem373 = new ActiveCompaction();
                    _elem373.read(iprot);
                    struct.success.add(_elem373);
                   }
                   iprot.readListEnd();
                 }
@@ -61398,12 +62803,12 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list377 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.success = new ArrayList&lt;ActiveCompaction&gt;(_list377.size);
            for (int _i378 = 0; _i378 &lt; _list377.size; ++_i378)
            ActiveCompaction _elem378;
            for (int _i379 = 0; _i379 &lt; _list377.size; ++_i379)
             {
              ActiveCompaction _elem379;
              _elem379 = new ActiveCompaction();
              _elem379.read(iprot);
              struct.success.add(_elem379);
              _elem378 = new ActiveCompaction();
              _elem378.read(iprot);
              struct.success.add(_elem378);
             }
           }
           struct.setSuccessIsSet(true);
@@ -61511,7 +62916,7 @@ import org.slf4j.LoggerFactory;
       ByteBuffer login)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     /**
@@ -61520,7 +62925,6 @@ import org.slf4j.LoggerFactory;
     public getSiteConfiguration_args(getSiteConfiguration_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
     }
 
@@ -61539,16 +62943,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getSiteConfiguration_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getSiteConfiguration_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -61629,7 +63033,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      return list.hashCode();
     }
 
     @Override
@@ -62115,7 +63526,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -62247,13 +63675,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map380 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,String&gt;(2*_map380.size);
                  for (int _i381 = 0; _i381 &lt; _map380.size; ++_i381)
                  String _key381;
                  String _val382;
                  for (int _i383 = 0; _i383 &lt; _map380.size; ++_i383)
                   {
                    String _key382;
                    String _val383;
                    _key382 = iprot.readString();
                    _val383 = iprot.readString();
                    struct.success.put(_key382, _val383);
                    _key381 = iprot.readString();
                    _val382 = iprot.readString();
                    struct.success.put(_key381, _val382);
                   }
                   iprot.readMapEnd();
                 }
@@ -62372,13 +63800,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map386 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashMap&lt;String,String&gt;(2*_map386.size);
            for (int _i387 = 0; _i387 &lt; _map386.size; ++_i387)
            String _key387;
            String _val388;
            for (int _i389 = 0; _i389 &lt; _map386.size; ++_i389)
             {
              String _key388;
              String _val389;
              _key388 = iprot.readString();
              _val389 = iprot.readString();
              struct.success.put(_key388, _val389);
              _key387 = iprot.readString();
              _val388 = iprot.readString();
              struct.success.put(_key387, _val388);
             }
           }
           struct.setSuccessIsSet(true);
@@ -62486,7 +63914,7 @@ import org.slf4j.LoggerFactory;
       ByteBuffer login)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     /**
@@ -62495,7 +63923,6 @@ import org.slf4j.LoggerFactory;
     public getSystemConfiguration_args(getSystemConfiguration_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
     }
 
@@ -62514,16 +63941,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getSystemConfiguration_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getSystemConfiguration_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -62604,7 +64031,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      return list.hashCode();
     }
 
     @Override
@@ -63090,7 +64524,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -63222,13 +64673,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map390 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;String,String&gt;(2*_map390.size);
                  for (int _i391 = 0; _i391 &lt; _map390.size; ++_i391)
                  String _key391;
                  String _val392;
                  for (int _i393 = 0; _i393 &lt; _map390.size; ++_i393)
                   {
                    String _key392;
                    String _val393;
                    _key392 = iprot.readString();
                    _val393 = iprot.readString();
                    struct.success.put(_key392, _val393);
                    _key391 = iprot.readString();
                    _val392 = iprot.readString();
                    struct.success.put(_key391, _val392);
                   }
                   iprot.readMapEnd();
                 }
@@ -63347,13 +64798,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map396 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashMap&lt;String,String&gt;(2*_map396.size);
            for (int _i397 = 0; _i397 &lt; _map396.size; ++_i397)
            String _key397;
            String _val398;
            for (int _i399 = 0; _i399 &lt; _map396.size; ++_i399)
             {
              String _key398;
              String _val399;
              _key398 = iprot.readString();
              _val399 = iprot.readString();
              struct.success.put(_key398, _val399);
              _key397 = iprot.readString();
              _val398 = iprot.readString();
              struct.success.put(_key397, _val398);
             }
           }
           struct.setSuccessIsSet(true);
@@ -63461,7 +64912,7 @@ import org.slf4j.LoggerFactory;
       ByteBuffer login)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     /**
@@ -63470,7 +64921,6 @@ import org.slf4j.LoggerFactory;
     public getTabletServers_args(getTabletServers_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
     }
 
@@ -63489,16 +64939,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getTabletServers_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getTabletServers_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -63579,7 +65029,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      return list.hashCode();
     }
 
     @Override
@@ -63950,7 +65407,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -64046,11 +65510,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list400 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;String&gt;(_list400.size);
                  for (int _i401 = 0; _i401 &lt; _list400.size; ++_i401)
                  String _elem401;
                  for (int _i402 = 0; _i402 &lt; _list400.size; ++_i402)
                   {
                    String _elem402;
                    _elem402 = iprot.readString();
                    struct.success.add(_elem402);
                    _elem401 = iprot.readString();
                    struct.success.add(_elem401);
                   }
                   iprot.readListEnd();
                 }
@@ -64127,11 +65591,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list405 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new ArrayList&lt;String&gt;(_list405.size);
            for (int _i406 = 0; _i406 &lt; _list405.size; ++_i406)
            String _elem406;
            for (int _i407 = 0; _i407 &lt; _list405.size; ++_i407)
             {
              String _elem407;
              _elem407 = iprot.readString();
              struct.success.add(_elem407);
              _elem406 = iprot.readString();
              struct.success.add(_elem406);
             }
           }
           struct.setSuccessIsSet(true);
@@ -64237,7 +65701,7 @@ import org.slf4j.LoggerFactory;
       String property)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.property = property;
     }
 
@@ -64247,7 +65711,6 @@ import org.slf4j.LoggerFactory;
     public removeProperty_args(removeProperty_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetProperty()) {
         this.property = other.property;
@@ -64270,16 +65733,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public removeProperty_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public removeProperty_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -64406,7 +65869,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      return list.hashCode();
     }
 
     @Override
@@ -64860,7 +66335,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -65168,7 +66655,7 @@ import org.slf4j.LoggerFactory;
       String value)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.property = property;
       this.value = value;
     }
@@ -65179,7 +66666,6 @@ import org.slf4j.LoggerFactory;
     public setProperty_args(setProperty_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetProperty()) {
         this.property = other.property;
@@ -65206,16 +66692,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public setProperty_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public setProperty_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -65388,7 +66874,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_property = true &amp;&amp; (isSetProperty());
      list.add(present_property);
      if (present_property)
        list.add(property);

      boolean present_value = true &amp;&amp; (isSetValue());
      list.add(present_value);
      if (present_value)
        list.add(value);

      return list.hashCode();
     }
 
     @Override
@@ -65883,7 +67386,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -66191,7 +67706,7 @@ import org.slf4j.LoggerFactory;
       String asTypeName)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.className = className;
       this.asTypeName = asTypeName;
     }
@@ -66202,7 +67717,6 @@ import org.slf4j.LoggerFactory;
     public testClassLoad_args(testClassLoad_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetClassName()) {
         this.className = other.className;
@@ -66229,16 +67743,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public testClassLoad_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public testClassLoad_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -66411,7 +67925,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_className = true &amp;&amp; (isSetClassName());
      list.add(present_className);
      if (present_className)
        list.add(className);

      boolean present_asTypeName = true &amp;&amp; (isSetAsTypeName());
      list.add(present_asTypeName);
      if (present_asTypeName)
        list.add(asTypeName);

      return list.hashCode();
     }
 
     @Override
@@ -66893,7 +68424,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case OUCH1:
         return getOuch1();
@@ -66967,7 +68498,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -67316,7 +68864,7 @@ import org.slf4j.LoggerFactory;
       Map&lt;String,String&gt; properties)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.properties = properties;
     }
@@ -67327,7 +68875,6 @@ import org.slf4j.LoggerFactory;
     public authenticateUser_args(authenticateUser_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -67355,16 +68902,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public authenticateUser_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public authenticateUser_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -67548,7 +69095,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_properties = true &amp;&amp; (isSetProperties());
      list.add(present_properties);
      if (present_properties)
        list.add(properties);

      return list.hashCode();
     }
 
     @Override
@@ -67696,13 +69260,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map408 = iprot.readMapBegin();
                   struct.properties = new HashMap&lt;String,String&gt;(2*_map408.size);
                  for (int _i409 = 0; _i409 &lt; _map408.size; ++_i409)
                  String _key409;
                  String _val410;
                  for (int _i411 = 0; _i411 &lt; _map408.size; ++_i411)
                   {
                    String _key410;
                    String _val411;
                    _key410 = iprot.readString();
                    _val411 = iprot.readString();
                    struct.properties.put(_key410, _val411);
                    _key409 = iprot.readString();
                    _val410 = iprot.readString();
                    struct.properties.put(_key409, _val410);
                   }
                   iprot.readMapEnd();
                 }
@@ -67811,13 +69375,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map414 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.properties = new HashMap&lt;String,String&gt;(2*_map414.size);
            for (int _i415 = 0; _i415 &lt; _map414.size; ++_i415)
            String _key415;
            String _val416;
            for (int _i417 = 0; _i417 &lt; _map414.size; ++_i417)
             {
              String _key416;
              String _val417;
              _key416 = iprot.readString();
              _val417 = iprot.readString();
              struct.properties.put(_key416, _val417);
              _key415 = iprot.readString();
              _val416 = iprot.readString();
              struct.properties.put(_key415, _val416);
             }
           }
           struct.setPropertiesIsSet(true);
@@ -68068,7 +69632,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case OUCH1:
         return getOuch1();
@@ -68142,7 +69706,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -68490,7 +70071,7 @@ import org.slf4j.LoggerFactory;
       Set&lt;ByteBuffer&gt; authorizations)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.authorizations = authorizations;
     }
@@ -68501,7 +70082,6 @@ import org.slf4j.LoggerFactory;
     public changeUserAuthorizations_args(changeUserAuthorizations_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -68529,16 +70109,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public changeUserAuthorizations_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public changeUserAuthorizations_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -68726,7 +70306,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
      list.add(present_authorizations);
      if (present_authorizations)
        list.add(authorizations);

      return list.hashCode();
     }
 
     @Override
@@ -68807,7 +70404,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
       sb.append(")");
@@ -68874,11 +70471,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set418 = iprot.readSetBegin();
                   struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set418.size);
                  for (int _i419 = 0; _i419 &lt; _set418.size; ++_i419)
                  ByteBuffer _elem419;
                  for (int _i420 = 0; _i420 &lt; _set418.size; ++_i420)
                   {
                    ByteBuffer _elem420;
                    _elem420 = iprot.readBinary();
                    struct.authorizations.add(_elem420);
                    _elem419 = iprot.readBinary();
                    struct.authorizations.add(_elem419);
                   }
                   iprot.readSetEnd();
                 }
@@ -68985,11 +70582,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set423 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set423.size);
            for (int _i424 = 0; _i424 &lt; _set423.size; ++_i424)
            ByteBuffer _elem424;
            for (int _i425 = 0; _i425 &lt; _set423.size; ++_i425)
             {
              ByteBuffer _elem425;
              _elem425 = iprot.readBinary();
              struct.authorizations.add(_elem425);
              _elem424 = iprot.readBinary();
              struct.authorizations.add(_elem424);
             }
           }
           struct.setAuthorizationsIsSet(true);
@@ -69253,7 +70850,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -69561,9 +71170,9 @@ import org.slf4j.LoggerFactory;
       ByteBuffer password)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     /**
@@ -69572,14 +71181,12 @@ import org.slf4j.LoggerFactory;
     public changeLocalUserPassword_args(changeLocalUserPassword_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
       }
       if (other.isSetPassword()) {
         this.password = org.apache.thrift.TBaseHelper.copyBinary(other.password);
;
       }
     }
 
@@ -69600,16 +71207,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public changeLocalUserPassword_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public changeLocalUserPassword_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -69658,16 +71265,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForPassword() {
      return password;
      return org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     public changeLocalUserPassword_args setPassword(byte[] password) {
      setPassword(password == null ? (ByteBuffer)null : ByteBuffer.wrap(password));
      this.password = password == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(password, password.length));
       return this;
     }
 
     public changeLocalUserPassword_args setPassword(ByteBuffer password) {
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
       return this;
     }
 
@@ -69792,7 +71399,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_password = true &amp;&amp; (isSetPassword());
      list.add(present_password);
      if (present_password)
        list.add(password);

      return list.hashCode();
     }
 
     @Override
@@ -70287,7 +71911,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -70595,9 +72231,9 @@ import org.slf4j.LoggerFactory;
       ByteBuffer password)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     /**
@@ -70606,14 +72242,12 @@ import org.slf4j.LoggerFactory;
     public createLocalUser_args(createLocalUser_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
       }
       if (other.isSetPassword()) {
         this.password = org.apache.thrift.TBaseHelper.copyBinary(other.password);
;
       }
     }
 
@@ -70634,16 +72268,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public createLocalUser_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public createLocalUser_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -70692,16 +72326,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForPassword() {
      return password;
      return org.apache.thrift.TBaseHelper.copyBinary(password);
     }
 
     public createLocalUser_args setPassword(byte[] password) {
      setPassword(password == null ? (ByteBuffer)null : ByteBuffer.wrap(password));
      this.password = password == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(password, password.length));
       return this;
     }
 
     public createLocalUser_args setPassword(ByteBuffer password) {
      this.password = password;
      this.password = org.apache.thrift.TBaseHelper.copyBinary(password);
       return this;
     }
 
@@ -70826,7 +72460,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_password = true &amp;&amp; (isSetPassword());
      list.add(present_password);
      if (present_password)
        list.add(password);

      return list.hashCode();
     }
 
     @Override
@@ -71321,7 +72972,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -71621,7 +73284,7 @@ import org.slf4j.LoggerFactory;
       String user)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
     }
 
@@ -71631,7 +73294,6 @@ import org.slf4j.LoggerFactory;
     public dropLocalUser_args(dropLocalUser_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -71654,16 +73316,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public dropLocalUser_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public dropLocalUser_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -71790,7 +73452,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      return list.hashCode();
     }
 
     @Override
@@ -72244,7 +73918,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -72544,7 +74230,7 @@ import org.slf4j.LoggerFactory;
       String user)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
     }
 
@@ -72554,7 +74240,6 @@ import org.slf4j.LoggerFactory;
     public getUserAuthorizations_args(getUserAuthorizations_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -72577,16 +74262,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public getUserAuthorizations_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public getUserAuthorizations_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -72713,7 +74398,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      return list.hashCode();
     }
 
     @Override
@@ -73243,7 +74940,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -73308,7 +75022,7 @@ import org.slf4j.LoggerFactory;
       if (this.success == null) {
         sb.append("null");
       } else {
        sb.append(this.success);
        org.apache.thrift.TBaseHelper.toString(this.success, sb);
       }
       first = false;
       if (!first) sb.append(", ");
@@ -73375,11 +75089,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TList _list426 = iprot.readListBegin();
                   struct.success = new ArrayList&lt;ByteBuffer&gt;(_list426.size);
                  for (int _i427 = 0; _i427 &lt; _list426.size; ++_i427)
                  ByteBuffer _elem427;
                  for (int _i428 = 0; _i428 &lt; _list426.size; ++_i428)
                   {
                    ByteBuffer _elem428;
                    _elem428 = iprot.readBinary();
                    struct.success.add(_elem428);
                    _elem427 = iprot.readBinary();
                    struct.success.add(_elem427);
                   }
                   iprot.readListEnd();
                 }
@@ -73496,11 +75210,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TList _list431 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new ArrayList&lt;ByteBuffer&gt;(_list431.size);
            for (int _i432 = 0; _i432 &lt; _list431.size; ++_i432)
            ByteBuffer _elem432;
            for (int _i433 = 0; _i433 &lt; _list431.size; ++_i433)
             {
              ByteBuffer _elem433;
              _elem433 = iprot.readBinary();
              struct.success.add(_elem433);
              _elem432 = iprot.readBinary();
              struct.success.add(_elem432);
             }
           }
           struct.setSuccessIsSet(true);
@@ -73632,7 +75346,7 @@ import org.slf4j.LoggerFactory;
       SystemPermission perm)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.perm = perm;
     }
@@ -73643,7 +75357,6 @@ import org.slf4j.LoggerFactory;
     public grantSystemPermission_args(grantSystemPermission_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -73670,16 +75383,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public grantSystemPermission_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public grantSystemPermission_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -73860,7 +75573,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_perm = true &amp;&amp; (isSetPerm());
      list.add(present_perm);
      if (present_perm)
        list.add(perm.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -74005,7 +75735,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 3: // PERM
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.perm = SystemPermission.findByValue(iprot.readI32());
                struct.perm = org.apache.accumulo.proxy.thrift.SystemPermission.findByValue(iprot.readI32());
                 struct.setPermIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -74093,7 +75823,7 @@ import org.slf4j.LoggerFactory;
           struct.setUserIsSet(true);
         }
         if (incoming.get(2)) {
          struct.perm = SystemPermission.findByValue(iprot.readI32());
          struct.perm = org.apache.accumulo.proxy.thrift.SystemPermission.findByValue(iprot.readI32());
           struct.setPermIsSet(true);
         }
       }
@@ -74355,7 +76085,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -74679,7 +76421,7 @@ import org.slf4j.LoggerFactory;
       TablePermission perm)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.table = table;
       this.perm = perm;
@@ -74691,7 +76433,6 @@ import org.slf4j.LoggerFactory;
     public grantTablePermission_args(grantTablePermission_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -74722,16 +76463,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public grantTablePermission_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public grantTablePermission_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -74958,7 +76699,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_table = true &amp;&amp; (isSetTable());
      list.add(present_table);
      if (present_table)
        list.add(table);

      boolean present_perm = true &amp;&amp; (isSetPerm());
      list.add(present_perm);
      if (present_perm)
        list.add(perm.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -75129,7 +76892,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 4: // PERM
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.perm = TablePermission.findByValue(iprot.readI32());
                struct.perm = org.apache.accumulo.proxy.thrift.TablePermission.findByValue(iprot.readI32());
                 struct.setPermIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -75232,7 +76995,7 @@ import org.slf4j.LoggerFactory;
           struct.setTableIsSet(true);
         }
         if (incoming.get(3)) {
          struct.perm = TablePermission.findByValue(iprot.readI32());
          struct.perm = org.apache.accumulo.proxy.thrift.TablePermission.findByValue(iprot.readI32());
           struct.setPermIsSet(true);
         }
       }
@@ -75553,7 +77316,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -75912,7 +77692,7 @@ import org.slf4j.LoggerFactory;
       SystemPermission perm)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.perm = perm;
     }
@@ -75923,7 +77703,6 @@ import org.slf4j.LoggerFactory;
     public hasSystemPermission_args(hasSystemPermission_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -75950,16 +77729,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public hasSystemPermission_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public hasSystemPermission_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -76140,7 +77919,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_perm = true &amp;&amp; (isSetPerm());
      list.add(present_perm);
      if (present_perm)
        list.add(perm.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -76285,7 +78081,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 3: // PERM
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.perm = SystemPermission.findByValue(iprot.readI32());
                struct.perm = org.apache.accumulo.proxy.thrift.SystemPermission.findByValue(iprot.readI32());
                 struct.setPermIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -76373,7 +78169,7 @@ import org.slf4j.LoggerFactory;
           struct.setUserIsSet(true);
         }
         if (incoming.get(2)) {
          struct.perm = SystemPermission.findByValue(iprot.readI32());
          struct.perm = org.apache.accumulo.proxy.thrift.SystemPermission.findByValue(iprot.readI32());
           struct.setPermIsSet(true);
         }
       }
@@ -76622,7 +78418,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case OUCH1:
         return getOuch1();
@@ -76696,7 +78492,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -77059,7 +78872,7 @@ import org.slf4j.LoggerFactory;
       TablePermission perm)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.table = table;
       this.perm = perm;
@@ -77071,7 +78884,6 @@ import org.slf4j.LoggerFactory;
     public hasTablePermission_args(hasTablePermission_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -77102,16 +78914,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public hasTablePermission_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public hasTablePermission_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -77338,7 +79150,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_table = true &amp;&amp; (isSetTable());
      list.add(present_table);
      if (present_table)
        list.add(table);

      boolean present_perm = true &amp;&amp; (isSetPerm());
      list.add(present_perm);
      if (present_perm)
        list.add(perm.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -77509,7 +79343,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 4: // PERM
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.perm = TablePermission.findByValue(iprot.readI32());
                struct.perm = org.apache.accumulo.proxy.thrift.TablePermission.findByValue(iprot.readI32());
                 struct.setPermIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -77612,7 +79446,7 @@ import org.slf4j.LoggerFactory;
           struct.setTableIsSet(true);
         }
         if (incoming.get(3)) {
          struct.perm = TablePermission.findByValue(iprot.readI32());
          struct.perm = org.apache.accumulo.proxy.thrift.TablePermission.findByValue(iprot.readI32());
           struct.setPermIsSet(true);
         }
       }
@@ -77906,7 +79740,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case OUCH1:
         return getOuch1();
@@ -77994,7 +79828,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -78368,7 +80224,7 @@ import org.slf4j.LoggerFactory;
       ByteBuffer login)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     /**
@@ -78377,7 +80233,6 @@ import org.slf4j.LoggerFactory;
     public listLocalUsers_args(listLocalUsers_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
     }
 
@@ -78396,16 +80251,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public listLocalUsers_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public listLocalUsers_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -78486,7 +80341,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      return list.hashCode();
     }
 
     @Override
@@ -79034,7 +80896,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -79184,11 +81068,11 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TSet _set434 = iprot.readSetBegin();
                   struct.success = new HashSet&lt;String&gt;(2*_set434.size);
                  for (int _i435 = 0; _i435 &lt; _set434.size; ++_i435)
                  String _elem435;
                  for (int _i436 = 0; _i436 &lt; _set434.size; ++_i436)
                   {
                    String _elem436;
                    _elem436 = iprot.readString();
                    struct.success.add(_elem436);
                    _elem435 = iprot.readString();
                    struct.success.add(_elem435);
                   }
                   iprot.readSetEnd();
                 }
@@ -79325,11 +81209,11 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TSet _set439 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
             struct.success = new HashSet&lt;String&gt;(2*_set439.size);
            for (int _i440 = 0; _i440 &lt; _set439.size; ++_i440)
            String _elem440;
            for (int _i441 = 0; _i441 &lt; _set439.size; ++_i441)
             {
              String _elem441;
              _elem441 = iprot.readString();
              struct.success.add(_elem441);
              _elem440 = iprot.readString();
              struct.success.add(_elem440);
             }
           }
           struct.setSuccessIsSet(true);
@@ -79466,7 +81350,7 @@ import org.slf4j.LoggerFactory;
       SystemPermission perm)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.perm = perm;
     }
@@ -79477,7 +81361,6 @@ import org.slf4j.LoggerFactory;
     public revokeSystemPermission_args(revokeSystemPermission_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -79504,16 +81387,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public revokeSystemPermission_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public revokeSystemPermission_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -79694,7 +81577,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_perm = true &amp;&amp; (isSetPerm());
      list.add(present_perm);
      if (present_perm)
        list.add(perm.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -79839,7 +81739,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 3: // PERM
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.perm = SystemPermission.findByValue(iprot.readI32());
                struct.perm = org.apache.accumulo.proxy.thrift.SystemPermission.findByValue(iprot.readI32());
                 struct.setPermIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -79927,7 +81827,7 @@ import org.slf4j.LoggerFactory;
           struct.setUserIsSet(true);
         }
         if (incoming.get(2)) {
          struct.perm = SystemPermission.findByValue(iprot.readI32());
          struct.perm = org.apache.accumulo.proxy.thrift.SystemPermission.findByValue(iprot.readI32());
           struct.setPermIsSet(true);
         }
       }
@@ -80189,7 +82089,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -80513,7 +82425,7 @@ import org.slf4j.LoggerFactory;
       TablePermission perm)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.user = user;
       this.table = table;
       this.perm = perm;
@@ -80525,7 +82437,6 @@ import org.slf4j.LoggerFactory;
     public revokeTablePermission_args(revokeTablePermission_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetUser()) {
         this.user = other.user;
@@ -80556,16 +82467,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public revokeTablePermission_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public revokeTablePermission_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -80792,7 +82703,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_user = true &amp;&amp; (isSetUser());
      list.add(present_user);
      if (present_user)
        list.add(user);

      boolean present_table = true &amp;&amp; (isSetTable());
      list.add(present_table);
      if (present_table)
        list.add(table);

      boolean present_perm = true &amp;&amp; (isSetPerm());
      list.add(present_perm);
      if (present_perm)
        list.add(perm.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -80963,7 +82896,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 4: // PERM
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.perm = TablePermission.findByValue(iprot.readI32());
                struct.perm = org.apache.accumulo.proxy.thrift.TablePermission.findByValue(iprot.readI32());
                 struct.setPermIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -81066,7 +82999,7 @@ import org.slf4j.LoggerFactory;
           struct.setTableIsSet(true);
         }
         if (incoming.get(3)) {
          struct.perm = TablePermission.findByValue(iprot.readI32());
          struct.perm = org.apache.accumulo.proxy.thrift.TablePermission.findByValue(iprot.readI32());
           struct.setPermIsSet(true);
         }
       }
@@ -81387,7 +83320,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -81738,7 +83688,7 @@ import org.slf4j.LoggerFactory;
       BatchScanOptions options)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.options = options;
     }
@@ -81749,7 +83699,6 @@ import org.slf4j.LoggerFactory;
     public createBatchScanner_args(createBatchScanner_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -81776,16 +83725,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public createBatchScanner_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public createBatchScanner_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -81958,7 +83907,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_options = true &amp;&amp; (isSetOptions());
      list.add(present_options);
      if (present_options)
        list.add(options);

      return list.hashCode();
     }
 
     @Override
@@ -82576,7 +84542,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -82968,7 +84956,7 @@ import org.slf4j.LoggerFactory;
       ScanOptions options)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.options = options;
     }
@@ -82979,7 +84967,6 @@ import org.slf4j.LoggerFactory;
     public createScanner_args(createScanner_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -83006,16 +84993,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public createScanner_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public createScanner_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -83188,7 +85175,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_options = true &amp;&amp; (isSetOptions());
      list.add(present_options);
      if (present_options)
        list.add(options);

      return list.hashCode();
     }
 
     @Override
@@ -83806,7 +85810,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -84289,7 +86315,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_scanner = true &amp;&amp; (isSetScanner());
      list.add(present_scanner);
      if (present_scanner)
        list.add(scanner);

      return list.hashCode();
     }
 
     @Override
@@ -84644,7 +86677,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       case OUCH1:
         return getOuch1();
@@ -84704,7 +86737,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      return list.hashCode();
     }
 
     @Override
@@ -85099,7 +87144,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_scanner = true &amp;&amp; (isSetScanner());
      list.add(present_scanner);
      if (present_scanner)
        list.add(scanner);

      return list.hashCode();
     }
 
     @Override
@@ -85630,7 +87682,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -86122,7 +88196,7 @@ import org.slf4j.LoggerFactory;
         return getScanner();
 
       case K:
        return Integer.valueOf(getK());
        return getK();
 
       }
       throw new IllegalStateException();
@@ -86179,7 +88253,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_scanner = true &amp;&amp; (isSetScanner());
      list.add(present_scanner);
      if (present_scanner)
        list.add(scanner);

      boolean present_k = true;
      list.add(present_k);
      if (present_k)
        list.add(k);

      return list.hashCode();
     }
 
     @Override
@@ -86747,7 +88833,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -87235,7 +89343,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_scanner = true &amp;&amp; (isSetScanner());
      list.add(present_scanner);
      if (present_scanner)
        list.add(scanner);

      return list.hashCode();
     }
 
     @Override
@@ -87589,7 +89704,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      return list.hashCode();
     }
 
     @Override
@@ -87857,7 +89979,7 @@ import org.slf4j.LoggerFactory;
       Map&lt;ByteBuffer,List&lt;ColumnUpdate&gt;&gt; cells)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.cells = cells;
     }
@@ -87868,7 +89990,6 @@ import org.slf4j.LoggerFactory;
     public updateAndFlush_args(updateAndFlush_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -87881,7 +90002,6 @@ import org.slf4j.LoggerFactory;
           List&lt;ColumnUpdate&gt; other_element_value = other_element.getValue();
 
           ByteBuffer __this__cells_copy_key = org.apache.thrift.TBaseHelper.copyBinary(other_element_key);
;
 
           List&lt;ColumnUpdate&gt; __this__cells_copy_value = new ArrayList&lt;ColumnUpdate&gt;(other_element_value.size());
           for (ColumnUpdate other_element_value_element : other_element_value) {
@@ -87911,16 +90031,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public updateAndFlush_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public updateAndFlush_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -88104,7 +90224,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_cells = true &amp;&amp; (isSetCells());
      list.add(present_cells);
      if (present_cells)
        list.add(cells);

      return list.hashCode();
     }
 
     @Override
@@ -88252,24 +90389,24 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map442 = iprot.readMapBegin();
                   struct.cells = new HashMap&lt;ByteBuffer,List&lt;ColumnUpdate&gt;&gt;(2*_map442.size);
                  for (int _i443 = 0; _i443 &lt; _map442.size; ++_i443)
                  ByteBuffer _key443;
                  List&lt;ColumnUpdate&gt; _val444;
                  for (int _i445 = 0; _i445 &lt; _map442.size; ++_i445)
                   {
                    ByteBuffer _key444;
                    List&lt;ColumnUpdate&gt; _val445;
                    _key444 = iprot.readBinary();
                    _key443 = iprot.readBinary();
                     {
                       org.apache.thrift.protocol.TList _list446 = iprot.readListBegin();
                      _val445 = new ArrayList&lt;ColumnUpdate&gt;(_list446.size);
                      for (int _i447 = 0; _i447 &lt; _list446.size; ++_i447)
                      _val444 = new ArrayList&lt;ColumnUpdate&gt;(_list446.size);
                      ColumnUpdate _elem447;
                      for (int _i448 = 0; _i448 &lt; _list446.size; ++_i448)
                       {
                        ColumnUpdate _elem448;
                        _elem448 = new ColumnUpdate();
                        _elem448.read(iprot);
                        _val445.add(_elem448);
                        _elem447 = new ColumnUpdate();
                        _elem447.read(iprot);
                        _val444.add(_elem447);
                       }
                       iprot.readListEnd();
                     }
                    struct.cells.put(_key444, _val445);
                    struct.cells.put(_key443, _val444);
                   }
                   iprot.readMapEnd();
                 }
@@ -88391,23 +90528,23 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map453 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
             struct.cells = new HashMap&lt;ByteBuffer,List&lt;ColumnUpdate&gt;&gt;(2*_map453.size);
            for (int _i454 = 0; _i454 &lt; _map453.size; ++_i454)
            ByteBuffer _key454;
            List&lt;ColumnUpdate&gt; _val455;
            for (int _i456 = 0; _i456 &lt; _map453.size; ++_i456)
             {
              ByteBuffer _key455;
              List&lt;ColumnUpdate&gt; _val456;
              _key455 = iprot.readBinary();
              _key454 = iprot.readBinary();
               {
                 org.apache.thrift.protocol.TList _list457 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                _val456 = new ArrayList&lt;ColumnUpdate&gt;(_list457.size);
                for (int _i458 = 0; _i458 &lt; _list457.size; ++_i458)
                _val455 = new ArrayList&lt;ColumnUpdate&gt;(_list457.size);
                ColumnUpdate _elem458;
                for (int _i459 = 0; _i459 &lt; _list457.size; ++_i459)
                 {
                  ColumnUpdate _elem459;
                  _elem459 = new ColumnUpdate();
                  _elem459.read(iprot);
                  _val456.add(_elem459);
                  _elem458 = new ColumnUpdate();
                  _elem458.read(iprot);
                  _val455.add(_elem458);
                 }
               }
              struct.cells.put(_key455, _val456);
              struct.cells.put(_key454, _val455);
             }
           }
           struct.setCellsIsSet(true);
@@ -88789,7 +90926,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_outch1 = true &amp;&amp; (isSetOutch1());
      list.add(present_outch1);
      if (present_outch1)
        list.add(outch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      boolean present_ouch4 = true &amp;&amp; (isSetOuch4());
      list.add(present_ouch4);
      if (present_ouch4)
        list.add(ouch4);

      return list.hashCode();
     }
 
     @Override
@@ -89183,7 +91342,7 @@ import org.slf4j.LoggerFactory;
       WriterOptions opts)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.opts = opts;
     }
@@ -89194,7 +91353,6 @@ import org.slf4j.LoggerFactory;
     public createWriter_args(createWriter_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -89221,16 +91379,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public createWriter_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public createWriter_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -89403,7 +91561,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_opts = true &amp;&amp; (isSetOpts());
      list.add(present_opts);
      if (present_opts)
        list.add(opts);

      return list.hashCode();
     }
 
     @Override
@@ -90021,7 +92196,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_outch1 = true &amp;&amp; (isSetOutch1());
      list.add(present_outch1);
      if (present_outch1)
        list.add(outch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -90427,7 +92624,6 @@ import org.slf4j.LoggerFactory;
           List&lt;ColumnUpdate&gt; other_element_value = other_element.getValue();
 
           ByteBuffer __this__cells_copy_key = org.apache.thrift.TBaseHelper.copyBinary(other_element_key);
;
 
           List&lt;ColumnUpdate&gt; __this__cells_copy_value = new ArrayList&lt;ColumnUpdate&gt;(other_element_value.size());
           for (ColumnUpdate other_element_value_element : other_element_value) {
@@ -90593,7 +92789,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_writer = true &amp;&amp; (isSetWriter());
      list.add(present_writer);
      if (present_writer)
        list.add(writer);

      boolean present_cells = true &amp;&amp; (isSetCells());
      list.add(present_cells);
      if (present_cells)
        list.add(cells);

      return list.hashCode();
     }
 
     @Override
@@ -90715,24 +92923,24 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map460 = iprot.readMapBegin();
                   struct.cells = new HashMap&lt;ByteBuffer,List&lt;ColumnUpdate&gt;&gt;(2*_map460.size);
                  for (int _i461 = 0; _i461 &lt; _map460.size; ++_i461)
                  ByteBuffer _key461;
                  List&lt;ColumnUpdate&gt; _val462;
                  for (int _i463 = 0; _i463 &lt; _map460.size; ++_i463)
                   {
                    ByteBuffer _key462;
                    List&lt;ColumnUpdate&gt; _val463;
                    _key462 = iprot.readBinary();
                    _key461 = iprot.readBinary();
                     {
                       org.apache.thrift.protocol.TList _list464 = iprot.readListBegin();
                      _val463 = new ArrayList&lt;ColumnUpdate&gt;(_list464.size);
                      for (int _i465 = 0; _i465 &lt; _list464.size; ++_i465)
                      _val462 = new ArrayList&lt;ColumnUpdate&gt;(_list464.size);
                      ColumnUpdate _elem465;
                      for (int _i466 = 0; _i466 &lt; _list464.size; ++_i466)
                       {
                        ColumnUpdate _elem466;
                        _elem466 = new ColumnUpdate();
                        _elem466.read(iprot);
                        _val463.add(_elem466);
                        _elem465 = new ColumnUpdate();
                        _elem465.read(iprot);
                        _val462.add(_elem465);
                       }
                       iprot.readListEnd();
                     }
                    struct.cells.put(_key462, _val463);
                    struct.cells.put(_key461, _val462);
                   }
                   iprot.readMapEnd();
                 }
@@ -90839,23 +93047,23 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map471 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
             struct.cells = new HashMap&lt;ByteBuffer,List&lt;ColumnUpdate&gt;&gt;(2*_map471.size);
            for (int _i472 = 0; _i472 &lt; _map471.size; ++_i472)
            ByteBuffer _key472;
            List&lt;ColumnUpdate&gt; _val473;
            for (int _i474 = 0; _i474 &lt; _map471.size; ++_i474)
             {
              ByteBuffer _key473;
              List&lt;ColumnUpdate&gt; _val474;
              _key473 = iprot.readBinary();
              _key472 = iprot.readBinary();
               {
                 org.apache.thrift.protocol.TList _list475 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                _val474 = new ArrayList&lt;ColumnUpdate&gt;(_list475.size);
                for (int _i476 = 0; _i476 &lt; _list475.size; ++_i476)
                _val473 = new ArrayList&lt;ColumnUpdate&gt;(_list475.size);
                ColumnUpdate _elem476;
                for (int _i477 = 0; _i477 &lt; _list475.size; ++_i477)
                 {
                  ColumnUpdate _elem477;
                  _elem477 = new ColumnUpdate();
                  _elem477.read(iprot);
                  _val474.add(_elem477);
                  _elem476 = new ColumnUpdate();
                  _elem476.read(iprot);
                  _val473.add(_elem476);
                 }
               }
              struct.cells.put(_key473, _val474);
              struct.cells.put(_key472, _val473);
             }
           }
           struct.setCellsIsSet(true);
@@ -91060,7 +93268,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_writer = true &amp;&amp; (isSetWriter());
      list.add(present_writer);
      if (present_writer)
        list.add(writer);

      return list.hashCode();
     }
 
     @Override
@@ -91473,7 +93688,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -91872,7 +94099,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_writer = true &amp;&amp; (isSetWriter());
      list.add(present_writer);
      if (present_writer)
        list.add(writer);

      return list.hashCode();
     }
 
     @Override
@@ -92285,7 +94519,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      return list.hashCode();
     }
 
     @Override
@@ -92601,9 +94847,9 @@ import org.slf4j.LoggerFactory;
       ConditionalUpdates updates)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
      this.row = row;
      this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
       this.updates = updates;
     }
 
@@ -92613,14 +94859,12 @@ import org.slf4j.LoggerFactory;
     public updateRowConditionally_args(updateRowConditionally_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
       }
       if (other.isSetRow()) {
         this.row = org.apache.thrift.TBaseHelper.copyBinary(other.row);
;
       }
       if (other.isSetUpdates()) {
         this.updates = new ConditionalUpdates(other.updates);
@@ -92645,16 +94889,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public updateRowConditionally_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public updateRowConditionally_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -92703,16 +94947,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForRow() {
      return row;
      return org.apache.thrift.TBaseHelper.copyBinary(row);
     }
 
     public updateRowConditionally_args setRow(byte[] row) {
      setRow(row == null ? (ByteBuffer)null : ByteBuffer.wrap(row));
      this.row = row == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(row, row.length));
       return this;
     }
 
     public updateRowConditionally_args setRow(ByteBuffer row) {
      this.row = row;
      this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
       return this;
     }
 
@@ -92883,7 +95127,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_row = true &amp;&amp; (isSetRow());
      list.add(present_row);
      if (present_row)
        list.add(row);

      boolean present_updates = true &amp;&amp; (isSetUpdates());
      list.add(present_updates);
      if (present_updates)
        list.add(updates);

      return list.hashCode();
     }
 
     @Override
@@ -93558,7 +95824,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success.getValue());

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -93705,7 +95993,7 @@ import org.slf4j.LoggerFactory;
           switch (schemeField.id) {
             case 0: // SUCCESS
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = ConditionalStatus.findByValue(iprot.readI32());
                struct.success = org.apache.accumulo.proxy.thrift.ConditionalStatus.findByValue(iprot.readI32());
                 struct.setSuccessIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -93823,7 +96111,7 @@ import org.slf4j.LoggerFactory;
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(4);
         if (incoming.get(0)) {
          struct.success = ConditionalStatus.findByValue(iprot.readI32());
          struct.success = org.apache.accumulo.proxy.thrift.ConditionalStatus.findByValue(iprot.readI32());
           struct.setSuccessIsSet(true);
         }
         if (incoming.get(1)) {
@@ -93950,7 +96238,7 @@ import org.slf4j.LoggerFactory;
       ConditionalWriterOptions options)
     {
       this();
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       this.tableName = tableName;
       this.options = options;
     }
@@ -93961,7 +96249,6 @@ import org.slf4j.LoggerFactory;
     public createConditionalWriter_args(createConditionalWriter_args other) {
       if (other.isSetLogin()) {
         this.login = org.apache.thrift.TBaseHelper.copyBinary(other.login);
;
       }
       if (other.isSetTableName()) {
         this.tableName = other.tableName;
@@ -93988,16 +96275,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForLogin() {
      return login;
      return org.apache.thrift.TBaseHelper.copyBinary(login);
     }
 
     public createConditionalWriter_args setLogin(byte[] login) {
      setLogin(login == null ? (ByteBuffer)null : ByteBuffer.wrap(login));
      this.login = login == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(login, login.length));
       return this;
     }
 
     public createConditionalWriter_args setLogin(ByteBuffer login) {
      this.login = login;
      this.login = org.apache.thrift.TBaseHelper.copyBinary(login);
       return this;
     }
 
@@ -94170,7 +96457,24 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_login = true &amp;&amp; (isSetLogin());
      list.add(present_login);
      if (present_login)
        list.add(login);

      boolean present_tableName = true &amp;&amp; (isSetTableName());
      list.add(present_tableName);
      if (present_tableName)
        list.add(tableName);

      boolean present_options = true &amp;&amp; (isSetOptions());
      list.add(present_options);
      if (present_options)
        list.add(options);

      return list.hashCode();
     }
 
     @Override
@@ -94788,7 +97092,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -95193,7 +97519,6 @@ import org.slf4j.LoggerFactory;
           ConditionalUpdates other_element_value = other_element.getValue();
 
           ByteBuffer __this__updates_copy_key = org.apache.thrift.TBaseHelper.copyBinary(other_element_key);
;
 
           ConditionalUpdates __this__updates_copy_value = new ConditionalUpdates(other_element_value);
 
@@ -95356,7 +97681,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_conditionalWriter = true &amp;&amp; (isSetConditionalWriter());
      list.add(present_conditionalWriter);
      if (present_conditionalWriter)
        list.add(conditionalWriter);

      boolean present_updates = true &amp;&amp; (isSetUpdates());
      list.add(present_updates);
      if (present_updates)
        list.add(updates);

      return list.hashCode();
     }
 
     @Override
@@ -95478,14 +97815,14 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map478 = iprot.readMapBegin();
                   struct.updates = new HashMap&lt;ByteBuffer,ConditionalUpdates&gt;(2*_map478.size);
                  for (int _i479 = 0; _i479 &lt; _map478.size; ++_i479)
                  ByteBuffer _key479;
                  ConditionalUpdates _val480;
                  for (int _i481 = 0; _i481 &lt; _map478.size; ++_i481)
                   {
                    ByteBuffer _key480;
                    ConditionalUpdates _val481;
                    _key480 = iprot.readBinary();
                    _val481 = new ConditionalUpdates();
                    _val481.read(iprot);
                    struct.updates.put(_key480, _val481);
                    _key479 = iprot.readBinary();
                    _val480 = new ConditionalUpdates();
                    _val480.read(iprot);
                    struct.updates.put(_key479, _val480);
                   }
                   iprot.readMapEnd();
                 }
@@ -95579,14 +97916,14 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map484 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
             struct.updates = new HashMap&lt;ByteBuffer,ConditionalUpdates&gt;(2*_map484.size);
            for (int _i485 = 0; _i485 &lt; _map484.size; ++_i485)
            ByteBuffer _key485;
            ConditionalUpdates _val486;
            for (int _i487 = 0; _i487 &lt; _map484.size; ++_i487)
             {
              ByteBuffer _key486;
              ConditionalUpdates _val487;
              _key486 = iprot.readBinary();
              _val487 = new ConditionalUpdates();
              _val487.read(iprot);
              struct.updates.put(_key486, _val487);
              _key485 = iprot.readBinary();
              _val486 = new ConditionalUpdates();
              _val486.read(iprot);
              struct.updates.put(_key485, _val486);
             }
           }
           struct.setUpdatesIsSet(true);
@@ -95728,7 +98065,6 @@ import org.slf4j.LoggerFactory;
           ConditionalStatus other_element_value = other_element.getValue();
 
           ByteBuffer __this__success_copy_key = org.apache.thrift.TBaseHelper.copyBinary(other_element_key);
;
 
           ConditionalStatus __this__success_copy_value = other_element_value;
 
@@ -95994,7 +98330,29 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_ouch1 = true &amp;&amp; (isSetOuch1());
      list.add(present_ouch1);
      if (present_ouch1)
        list.add(ouch1);

      boolean present_ouch2 = true &amp;&amp; (isSetOuch2());
      list.add(present_ouch2);
      if (present_ouch2)
        list.add(ouch2);

      boolean present_ouch3 = true &amp;&amp; (isSetOuch3());
      list.add(present_ouch3);
      if (present_ouch3)
        list.add(ouch3);

      return list.hashCode();
     }
 
     @Override
@@ -96144,13 +98502,13 @@ import org.slf4j.LoggerFactory;
                 {
                   org.apache.thrift.protocol.TMap _map488 = iprot.readMapBegin();
                   struct.success = new HashMap&lt;ByteBuffer,ConditionalStatus&gt;(2*_map488.size);
                  for (int _i489 = 0; _i489 &lt; _map488.size; ++_i489)
                  ByteBuffer _key489;
                  ConditionalStatus _val490;
                  for (int _i491 = 0; _i491 &lt; _map488.size; ++_i491)
                   {
                    ByteBuffer _key490;
                    ConditionalStatus _val491;
                    _key490 = iprot.readBinary();
                    _val491 = ConditionalStatus.findByValue(iprot.readI32());
                    struct.success.put(_key490, _val491);
                    _key489 = iprot.readBinary();
                    _val490 = org.apache.accumulo.proxy.thrift.ConditionalStatus.findByValue(iprot.readI32());
                    struct.success.put(_key489, _val490);
                   }
                   iprot.readMapEnd();
                 }
@@ -96289,13 +98647,13 @@ import org.slf4j.LoggerFactory;
           {
             org.apache.thrift.protocol.TMap _map494 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I32, iprot.readI32());
             struct.success = new HashMap&lt;ByteBuffer,ConditionalStatus&gt;(2*_map494.size);
            for (int _i495 = 0; _i495 &lt; _map494.size; ++_i495)
            ByteBuffer _key495;
            ConditionalStatus _val496;
            for (int _i497 = 0; _i497 &lt; _map494.size; ++_i497)
             {
              ByteBuffer _key496;
              ConditionalStatus _val497;
              _key496 = iprot.readBinary();
              _val497 = ConditionalStatus.findByValue(iprot.readI32());
              struct.success.put(_key496, _val497);
              _key495 = iprot.readBinary();
              _val496 = org.apache.accumulo.proxy.thrift.ConditionalStatus.findByValue(iprot.readI32());
              struct.success.put(_key495, _val496);
             }
           }
           struct.setSuccessIsSet(true);
@@ -96515,7 +98873,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_conditionalWriter = true &amp;&amp; (isSetConditionalWriter());
      list.add(present_conditionalWriter);
      if (present_conditionalWriter)
        list.add(conditionalWriter);

      return list.hashCode();
     }
 
     @Override
@@ -96804,7 +99169,9 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      return list.hashCode();
     }
 
     @Override
@@ -97008,7 +99375,7 @@ import org.slf4j.LoggerFactory;
       ByteBuffer row)
     {
       this();
      this.row = row;
      this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
     }
 
     /**
@@ -97017,7 +99384,6 @@ import org.slf4j.LoggerFactory;
     public getRowRange_args(getRowRange_args other) {
       if (other.isSetRow()) {
         this.row = org.apache.thrift.TBaseHelper.copyBinary(other.row);
;
       }
     }
 
@@ -97036,16 +99402,16 @@ import org.slf4j.LoggerFactory;
     }
 
     public ByteBuffer bufferForRow() {
      return row;
      return org.apache.thrift.TBaseHelper.copyBinary(row);
     }
 
     public getRowRange_args setRow(byte[] row) {
      setRow(row == null ? (ByteBuffer)null : ByteBuffer.wrap(row));
      this.row = row == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(row, row.length));
       return this;
     }
 
     public getRowRange_args setRow(ByteBuffer row) {
      this.row = row;
      this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
       return this;
     }
 
@@ -97126,7 +99492,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_row = true &amp;&amp; (isSetRow());
      list.add(present_row);
      if (present_row)
        list.add(row);

      return list.hashCode();
     }
 
     @Override
@@ -97480,7 +99853,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
@@ -97914,7 +100294,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_key = true &amp;&amp; (isSetKey());
      list.add(present_key);
      if (present_key)
        list.add(key);

      boolean present_part = true &amp;&amp; (isSetPart());
      list.add(present_part);
      if (present_part)
        list.add(part.getValue());

      return list.hashCode();
     }
 
     @Override
@@ -98037,7 +100429,7 @@ import org.slf4j.LoggerFactory;
               break;
             case 2: // PART
               if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.part = PartialKey.findByValue(iprot.readI32());
                struct.part = org.apache.accumulo.proxy.thrift.PartialKey.findByValue(iprot.readI32());
                 struct.setPartIsSet(true);
               } else { 
                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -98111,7 +100503,7 @@ import org.slf4j.LoggerFactory;
           struct.setKeyIsSet(true);
         }
         if (incoming.get(1)) {
          struct.part = PartialKey.findByValue(iprot.readI32());
          struct.part = org.apache.accumulo.proxy.thrift.PartialKey.findByValue(iprot.readI32());
           struct.setPartIsSet(true);
         }
       }
@@ -98314,7 +100706,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true &amp;&amp; (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloSecurityException.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloSecurityException.java
index 28b1e6c05..a3f9a0651 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloSecurityException.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/AccumuloSecurityException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class AccumuloSecurityException extends TException implements org.apache.thrift.TBase&lt;AccumuloSecurityException, AccumuloSecurityException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;AccumuloSecurityException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class AccumuloSecurityException extends TException implements org.apache.thrift.TBase&lt;AccumuloSecurityException, AccumuloSecurityException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;AccumuloSecurityException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AccumuloSecurityException");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveCompaction.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveCompaction.java
index 58e132192..40f3435db 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveCompaction.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveCompaction.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ActiveCompaction implements org.apache.thrift.TBase&lt;ActiveCompaction, ActiveCompaction._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveCompaction&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ActiveCompaction implements org.apache.thrift.TBase&lt;ActiveCompaction, ActiveCompaction._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveCompaction&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ActiveCompaction");
 
   private static final org.apache.thrift.protocol.TField EXTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("extent", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -676,7 +679,7 @@ import org.slf4j.LoggerFactory;
       return getExtent();
 
     case AGE:
      return Long.valueOf(getAge());
      return getAge();
 
     case INPUT_FILES:
       return getInputFiles();
@@ -694,10 +697,10 @@ import org.slf4j.LoggerFactory;
       return getLocalityGroup();
 
     case ENTRIES_READ:
      return Long.valueOf(getEntriesRead());
      return getEntriesRead();
 
     case ENTRIES_WRITTEN:
      return Long.valueOf(getEntriesWritten());
      return getEntriesWritten();
 
     case ITERATORS:
       return getIterators();
@@ -845,7 +848,59 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    boolean present_age = true;
    list.add(present_age);
    if (present_age)
      list.add(age);

    boolean present_inputFiles = true &amp;&amp; (isSetInputFiles());
    list.add(present_inputFiles);
    if (present_inputFiles)
      list.add(inputFiles);

    boolean present_outputFile = true &amp;&amp; (isSetOutputFile());
    list.add(present_outputFile);
    if (present_outputFile)
      list.add(outputFile);

    boolean present_type = true &amp;&amp; (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type.getValue());

    boolean present_reason = true &amp;&amp; (isSetReason());
    list.add(present_reason);
    if (present_reason)
      list.add(reason.getValue());

    boolean present_localityGroup = true &amp;&amp; (isSetLocalityGroup());
    list.add(present_localityGroup);
    if (present_localityGroup)
      list.add(localityGroup);

    boolean present_entriesRead = true;
    list.add(present_entriesRead);
    if (present_entriesRead)
      list.add(entriesRead);

    boolean present_entriesWritten = true;
    list.add(present_entriesWritten);
    if (present_entriesWritten)
      list.add(entriesWritten);

    boolean present_iterators = true &amp;&amp; (isSetIterators());
    list.add(present_iterators);
    if (present_iterators)
      list.add(iterators);

    return list.hashCode();
   }
 
   @Override
@@ -1113,11 +1168,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list138 = iprot.readListBegin();
                 struct.inputFiles = new ArrayList&lt;String&gt;(_list138.size);
                for (int _i139 = 0; _i139 &lt; _list138.size; ++_i139)
                String _elem139;
                for (int _i140 = 0; _i140 &lt; _list138.size; ++_i140)
                 {
                  String _elem140;
                  _elem140 = iprot.readString();
                  struct.inputFiles.add(_elem140);
                  _elem139 = iprot.readString();
                  struct.inputFiles.add(_elem139);
                 }
                 iprot.readListEnd();
               }
@@ -1136,7 +1191,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 5: // TYPE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = CompactionType.findByValue(iprot.readI32());
              struct.type = org.apache.accumulo.proxy.thrift.CompactionType.findByValue(iprot.readI32());
               struct.setTypeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1144,7 +1199,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 6: // REASON
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reason = CompactionReason.findByValue(iprot.readI32());
              struct.reason = org.apache.accumulo.proxy.thrift.CompactionReason.findByValue(iprot.readI32());
               struct.setReasonIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1179,12 +1234,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list141 = iprot.readListBegin();
                 struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list141.size);
                for (int _i142 = 0; _i142 &lt; _list141.size; ++_i142)
                IteratorSetting _elem142;
                for (int _i143 = 0; _i143 &lt; _list141.size; ++_i143)
                 {
                  IteratorSetting _elem143;
                  _elem143 = new IteratorSetting();
                  _elem143.read(iprot);
                  struct.iterators.add(_elem143);
                  _elem142 = new IteratorSetting();
                  _elem142.read(iprot);
                  struct.iterators.add(_elem142);
                 }
                 iprot.readListEnd();
               }
@@ -1376,11 +1431,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list148 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.inputFiles = new ArrayList&lt;String&gt;(_list148.size);
          for (int _i149 = 0; _i149 &lt; _list148.size; ++_i149)
          String _elem149;
          for (int _i150 = 0; _i150 &lt; _list148.size; ++_i150)
           {
            String _elem150;
            _elem150 = iprot.readString();
            struct.inputFiles.add(_elem150);
            _elem149 = iprot.readString();
            struct.inputFiles.add(_elem149);
           }
         }
         struct.setInputFilesIsSet(true);
@@ -1390,11 +1445,11 @@ import org.slf4j.LoggerFactory;
         struct.setOutputFileIsSet(true);
       }
       if (incoming.get(4)) {
        struct.type = CompactionType.findByValue(iprot.readI32());
        struct.type = org.apache.accumulo.proxy.thrift.CompactionType.findByValue(iprot.readI32());
         struct.setTypeIsSet(true);
       }
       if (incoming.get(5)) {
        struct.reason = CompactionReason.findByValue(iprot.readI32());
        struct.reason = org.apache.accumulo.proxy.thrift.CompactionReason.findByValue(iprot.readI32());
         struct.setReasonIsSet(true);
       }
       if (incoming.get(6)) {
@@ -1413,12 +1468,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list151 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list151.size);
          for (int _i152 = 0; _i152 &lt; _list151.size; ++_i152)
          IteratorSetting _elem152;
          for (int _i153 = 0; _i153 &lt; _list151.size; ++_i153)
           {
            IteratorSetting _elem153;
            _elem153 = new IteratorSetting();
            _elem153.read(iprot);
            struct.iterators.add(_elem153);
            _elem152 = new IteratorSetting();
            _elem152.read(iprot);
            struct.iterators.add(_elem152);
           }
         }
         struct.setIteratorsIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveScan.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveScan.java
index bc9ad5134..c45387c68 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveScan.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveScan.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ActiveScan implements org.apache.thrift.TBase&lt;ActiveScan, ActiveScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveScan&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ActiveScan implements org.apache.thrift.TBase&lt;ActiveScan, ActiveScan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ActiveScan&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ActiveScan");
 
   private static final org.apache.thrift.protocol.TField CLIENT_FIELD_DESC = new org.apache.thrift.protocol.TField("client", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -747,10 +750,10 @@ import org.slf4j.LoggerFactory;
       return getTable();
 
     case AGE:
      return Long.valueOf(getAge());
      return getAge();
 
     case IDLE_TIME:
      return Long.valueOf(getIdleTime());
      return getIdleTime();
 
     case TYPE:
       return getType();
@@ -924,7 +927,64 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_client = true &amp;&amp; (isSetClient());
    list.add(present_client);
    if (present_client)
      list.add(client);

    boolean present_user = true &amp;&amp; (isSetUser());
    list.add(present_user);
    if (present_user)
      list.add(user);

    boolean present_table = true &amp;&amp; (isSetTable());
    list.add(present_table);
    if (present_table)
      list.add(table);

    boolean present_age = true;
    list.add(present_age);
    if (present_age)
      list.add(age);

    boolean present_idleTime = true;
    list.add(present_idleTime);
    if (present_idleTime)
      list.add(idleTime);

    boolean present_type = true &amp;&amp; (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type.getValue());

    boolean present_state = true &amp;&amp; (isSetState());
    list.add(present_state);
    if (present_state)
      list.add(state.getValue());

    boolean present_extent = true &amp;&amp; (isSetExtent());
    list.add(present_extent);
    if (present_extent)
      list.add(extent);

    boolean present_columns = true &amp;&amp; (isSetColumns());
    list.add(present_columns);
    if (present_columns)
      list.add(columns);

    boolean present_iterators = true &amp;&amp; (isSetIterators());
    list.add(present_iterators);
    if (present_iterators)
      list.add(iterators);

    boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
    list.add(present_authorizations);
    if (present_authorizations)
      list.add(authorizations);

    return list.hashCode();
   }
 
   @Override
@@ -1141,7 +1201,7 @@ import org.slf4j.LoggerFactory;
     if (this.authorizations == null) {
       sb.append("null");
     } else {
      sb.append(this.authorizations);
      org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
     }
     first = false;
     sb.append(")");
@@ -1234,7 +1294,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 6: // TYPE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = ScanType.findByValue(iprot.readI32());
              struct.type = org.apache.accumulo.proxy.thrift.ScanType.findByValue(iprot.readI32());
               struct.setTypeIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1242,7 +1302,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 7: // STATE
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = ScanState.findByValue(iprot.readI32());
              struct.state = org.apache.accumulo.proxy.thrift.ScanState.findByValue(iprot.readI32());
               struct.setStateIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -1262,12 +1322,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list114 = iprot.readListBegin();
                 struct.columns = new ArrayList&lt;Column&gt;(_list114.size);
                for (int _i115 = 0; _i115 &lt; _list114.size; ++_i115)
                Column _elem115;
                for (int _i116 = 0; _i116 &lt; _list114.size; ++_i116)
                 {
                  Column _elem116;
                  _elem116 = new Column();
                  _elem116.read(iprot);
                  struct.columns.add(_elem116);
                  _elem115 = new Column();
                  _elem115.read(iprot);
                  struct.columns.add(_elem115);
                 }
                 iprot.readListEnd();
               }
@@ -1281,12 +1341,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list117 = iprot.readListBegin();
                 struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list117.size);
                for (int _i118 = 0; _i118 &lt; _list117.size; ++_i118)
                IteratorSetting _elem118;
                for (int _i119 = 0; _i119 &lt; _list117.size; ++_i119)
                 {
                  IteratorSetting _elem119;
                  _elem119 = new IteratorSetting();
                  _elem119.read(iprot);
                  struct.iterators.add(_elem119);
                  _elem118 = new IteratorSetting();
                  _elem118.read(iprot);
                  struct.iterators.add(_elem118);
                 }
                 iprot.readListEnd();
               }
@@ -1300,11 +1360,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list120 = iprot.readListBegin();
                 struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list120.size);
                for (int _i121 = 0; _i121 &lt; _list120.size; ++_i121)
                ByteBuffer _elem121;
                for (int _i122 = 0; _i122 &lt; _list120.size; ++_i122)
                 {
                  ByteBuffer _elem122;
                  _elem122 = iprot.readBinary();
                  struct.authorizations.add(_elem122);
                  _elem121 = iprot.readBinary();
                  struct.authorizations.add(_elem121);
                 }
                 iprot.readListEnd();
               }
@@ -1530,11 +1590,11 @@ import org.slf4j.LoggerFactory;
         struct.setIdleTimeIsSet(true);
       }
       if (incoming.get(5)) {
        struct.type = ScanType.findByValue(iprot.readI32());
        struct.type = org.apache.accumulo.proxy.thrift.ScanType.findByValue(iprot.readI32());
         struct.setTypeIsSet(true);
       }
       if (incoming.get(6)) {
        struct.state = ScanState.findByValue(iprot.readI32());
        struct.state = org.apache.accumulo.proxy.thrift.ScanState.findByValue(iprot.readI32());
         struct.setStateIsSet(true);
       }
       if (incoming.get(7)) {
@@ -1546,12 +1606,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list129 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.columns = new ArrayList&lt;Column&gt;(_list129.size);
          for (int _i130 = 0; _i130 &lt; _list129.size; ++_i130)
          Column _elem130;
          for (int _i131 = 0; _i131 &lt; _list129.size; ++_i131)
           {
            Column _elem131;
            _elem131 = new Column();
            _elem131.read(iprot);
            struct.columns.add(_elem131);
            _elem130 = new Column();
            _elem130.read(iprot);
            struct.columns.add(_elem130);
           }
         }
         struct.setColumnsIsSet(true);
@@ -1560,12 +1620,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list132 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list132.size);
          for (int _i133 = 0; _i133 &lt; _list132.size; ++_i133)
          IteratorSetting _elem133;
          for (int _i134 = 0; _i134 &lt; _list132.size; ++_i134)
           {
            IteratorSetting _elem134;
            _elem134 = new IteratorSetting();
            _elem134.read(iprot);
            struct.iterators.add(_elem134);
            _elem133 = new IteratorSetting();
            _elem133.read(iprot);
            struct.iterators.add(_elem133);
           }
         }
         struct.setIteratorsIsSet(true);
@@ -1574,11 +1634,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list135 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.authorizations = new ArrayList&lt;ByteBuffer&gt;(_list135.size);
          for (int _i136 = 0; _i136 &lt; _list135.size; ++_i136)
          ByteBuffer _elem136;
          for (int _i137 = 0; _i137 &lt; _list135.size; ++_i137)
           {
            ByteBuffer _elem137;
            _elem137 = iprot.readBinary();
            struct.authorizations.add(_elem137);
            _elem136 = iprot.readBinary();
            struct.authorizations.add(_elem136);
           }
         }
         struct.setAuthorizationsIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/BatchScanOptions.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/BatchScanOptions.java
index 948d82221..af492e21c 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/BatchScanOptions.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/BatchScanOptions.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class BatchScanOptions implements org.apache.thrift.TBase&lt;BatchScanOptions, BatchScanOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;BatchScanOptions&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class BatchScanOptions implements org.apache.thrift.TBase&lt;BatchScanOptions, BatchScanOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;BatchScanOptions&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BatchScanOptions");
 
   private static final org.apache.thrift.protocol.TField AUTHORIZATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("authorizations", org.apache.thrift.protocol.TType.SET, (short)1);
@@ -142,7 +145,7 @@ import org.slf4j.LoggerFactory;
   // isset id assignments
   private static final int __THREADS_ISSET_ID = 0;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.AUTHORIZATIONS,_Fields.RANGES,_Fields.COLUMNS,_Fields.ITERATORS,_Fields.THREADS};
  private static final _Fields optionals[] = {_Fields.AUTHORIZATIONS,_Fields.RANGES,_Fields.COLUMNS,_Fields.ITERATORS,_Fields.THREADS};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -453,7 +456,7 @@ import org.slf4j.LoggerFactory;
       return getIterators();
 
     case THREADS:
      return Integer.valueOf(getThreads());
      return getThreads();
 
     }
     throw new IllegalStateException();
@@ -543,7 +546,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
    list.add(present_authorizations);
    if (present_authorizations)
      list.add(authorizations);

    boolean present_ranges = true &amp;&amp; (isSetRanges());
    list.add(present_ranges);
    if (present_ranges)
      list.add(ranges);

    boolean present_columns = true &amp;&amp; (isSetColumns());
    list.add(present_columns);
    if (present_columns)
      list.add(columns);

    boolean present_iterators = true &amp;&amp; (isSetIterators());
    list.add(present_iterators);
    if (present_iterators)
      list.add(iterators);

    boolean present_threads = true &amp;&amp; (isSetThreads());
    list.add(present_threads);
    if (present_threads)
      list.add(threads);

    return list.hashCode();
   }
 
   @Override
@@ -629,7 +659,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
     }
@@ -719,11 +749,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TSet _set50 = iprot.readSetBegin();
                 struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set50.size);
                for (int _i51 = 0; _i51 &lt; _set50.size; ++_i51)
                ByteBuffer _elem51;
                for (int _i52 = 0; _i52 &lt; _set50.size; ++_i52)
                 {
                  ByteBuffer _elem52;
                  _elem52 = iprot.readBinary();
                  struct.authorizations.add(_elem52);
                  _elem51 = iprot.readBinary();
                  struct.authorizations.add(_elem51);
                 }
                 iprot.readSetEnd();
               }
@@ -737,12 +767,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list53 = iprot.readListBegin();
                 struct.ranges = new ArrayList&lt;Range&gt;(_list53.size);
                for (int _i54 = 0; _i54 &lt; _list53.size; ++_i54)
                Range _elem54;
                for (int _i55 = 0; _i55 &lt; _list53.size; ++_i55)
                 {
                  Range _elem55;
                  _elem55 = new Range();
                  _elem55.read(iprot);
                  struct.ranges.add(_elem55);
                  _elem54 = new Range();
                  _elem54.read(iprot);
                  struct.ranges.add(_elem54);
                 }
                 iprot.readListEnd();
               }
@@ -756,12 +786,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list56 = iprot.readListBegin();
                 struct.columns = new ArrayList&lt;ScanColumn&gt;(_list56.size);
                for (int _i57 = 0; _i57 &lt; _list56.size; ++_i57)
                ScanColumn _elem57;
                for (int _i58 = 0; _i58 &lt; _list56.size; ++_i58)
                 {
                  ScanColumn _elem58;
                  _elem58 = new ScanColumn();
                  _elem58.read(iprot);
                  struct.columns.add(_elem58);
                  _elem57 = new ScanColumn();
                  _elem57.read(iprot);
                  struct.columns.add(_elem57);
                 }
                 iprot.readListEnd();
               }
@@ -775,12 +805,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list59 = iprot.readListBegin();
                 struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list59.size);
                for (int _i60 = 0; _i60 &lt; _list59.size; ++_i60)
                IteratorSetting _elem60;
                for (int _i61 = 0; _i61 &lt; _list59.size; ++_i61)
                 {
                  IteratorSetting _elem61;
                  _elem61 = new IteratorSetting();
                  _elem61.read(iprot);
                  struct.iterators.add(_elem61);
                  _elem60 = new IteratorSetting();
                  _elem60.read(iprot);
                  struct.iterators.add(_elem60);
                 }
                 iprot.readListEnd();
               }
@@ -956,11 +986,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TSet _set70 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set70.size);
          for (int _i71 = 0; _i71 &lt; _set70.size; ++_i71)
          ByteBuffer _elem71;
          for (int _i72 = 0; _i72 &lt; _set70.size; ++_i72)
           {
            ByteBuffer _elem72;
            _elem72 = iprot.readBinary();
            struct.authorizations.add(_elem72);
            _elem71 = iprot.readBinary();
            struct.authorizations.add(_elem71);
           }
         }
         struct.setAuthorizationsIsSet(true);
@@ -969,12 +999,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list73 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.ranges = new ArrayList&lt;Range&gt;(_list73.size);
          for (int _i74 = 0; _i74 &lt; _list73.size; ++_i74)
          Range _elem74;
          for (int _i75 = 0; _i75 &lt; _list73.size; ++_i75)
           {
            Range _elem75;
            _elem75 = new Range();
            _elem75.read(iprot);
            struct.ranges.add(_elem75);
            _elem74 = new Range();
            _elem74.read(iprot);
            struct.ranges.add(_elem74);
           }
         }
         struct.setRangesIsSet(true);
@@ -983,12 +1013,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list76 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.columns = new ArrayList&lt;ScanColumn&gt;(_list76.size);
          for (int _i77 = 0; _i77 &lt; _list76.size; ++_i77)
          ScanColumn _elem77;
          for (int _i78 = 0; _i78 &lt; _list76.size; ++_i78)
           {
            ScanColumn _elem78;
            _elem78 = new ScanColumn();
            _elem78.read(iprot);
            struct.columns.add(_elem78);
            _elem77 = new ScanColumn();
            _elem77.read(iprot);
            struct.columns.add(_elem77);
           }
         }
         struct.setColumnsIsSet(true);
@@ -997,12 +1027,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list79 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list79.size);
          for (int _i80 = 0; _i80 &lt; _list79.size; ++_i80)
          IteratorSetting _elem80;
          for (int _i81 = 0; _i81 &lt; _list79.size; ++_i81)
           {
            IteratorSetting _elem81;
            _elem81 = new IteratorSetting();
            _elem81.read(iprot);
            struct.iterators.add(_elem81);
            _elem80 = new IteratorSetting();
            _elem80.read(iprot);
            struct.iterators.add(_elem80);
           }
         }
         struct.setIteratorsIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Column.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Column.java
index 007eb530d..7eb09fb81 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Column.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Column.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class Column implements org.apache.thrift.TBase&lt;Column, Column._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Column&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class Column implements org.apache.thrift.TBase&lt;Column, Column._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Column&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Column");
 
   private static final org.apache.thrift.protocol.TField COL_FAMILY_FIELD_DESC = new org.apache.thrift.protocol.TField("colFamily", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -152,9 +155,9 @@ import org.slf4j.LoggerFactory;
     ByteBuffer colVisibility)
   {
     this();
    this.colFamily = colFamily;
    this.colQualifier = colQualifier;
    this.colVisibility = colVisibility;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
    this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
   }
 
   /**
@@ -163,15 +166,12 @@ import org.slf4j.LoggerFactory;
   public Column(Column other) {
     if (other.isSetColFamily()) {
       this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(other.colFamily);
;
     }
     if (other.isSetColQualifier()) {
       this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(other.colQualifier);
;
     }
     if (other.isSetColVisibility()) {
       this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(other.colVisibility);
;
     }
   }
 
@@ -192,16 +192,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColFamily() {
    return colFamily;
    return org.apache.thrift.TBaseHelper.copyBinary(colFamily);
   }
 
   public Column setColFamily(byte[] colFamily) {
    setColFamily(colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(colFamily));
    this.colFamily = colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colFamily, colFamily.length));
     return this;
   }
 
   public Column setColFamily(ByteBuffer colFamily) {
    this.colFamily = colFamily;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
     return this;
   }
 
@@ -226,16 +226,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColQualifier() {
    return colQualifier;
    return org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
   }
 
   public Column setColQualifier(byte[] colQualifier) {
    setColQualifier(colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(colQualifier));
    this.colQualifier = colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colQualifier, colQualifier.length));
     return this;
   }
 
   public Column setColQualifier(ByteBuffer colQualifier) {
    this.colQualifier = colQualifier;
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
     return this;
   }
 
@@ -260,16 +260,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColVisibility() {
    return colVisibility;
    return org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
   }
 
   public Column setColVisibility(byte[] colVisibility) {
    setColVisibility(colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(colVisibility));
    this.colVisibility = colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colVisibility, colVisibility.length));
     return this;
   }
 
   public Column setColVisibility(ByteBuffer colVisibility) {
    this.colVisibility = colVisibility;
    this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
     return this;
   }
 
@@ -394,7 +394,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_colFamily = true &amp;&amp; (isSetColFamily());
    list.add(present_colFamily);
    if (present_colFamily)
      list.add(colFamily);

    boolean present_colQualifier = true &amp;&amp; (isSetColQualifier());
    list.add(present_colQualifier);
    if (present_colQualifier)
      list.add(colQualifier);

    boolean present_colVisibility = true &amp;&amp; (isSetColVisibility());
    list.add(present_colVisibility);
    if (present_colVisibility)
      list.add(colVisibility);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ColumnUpdate.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ColumnUpdate.java
index 97d9542ac..15c9ef19f 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ColumnUpdate.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ColumnUpdate.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ColumnUpdate implements org.apache.thrift.TBase&lt;ColumnUpdate, ColumnUpdate._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ColumnUpdate&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ColumnUpdate implements org.apache.thrift.TBase&lt;ColumnUpdate, ColumnUpdate._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ColumnUpdate&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ColumnUpdate");
 
   private static final org.apache.thrift.protocol.TField COL_FAMILY_FIELD_DESC = new org.apache.thrift.protocol.TField("colFamily", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -148,7 +151,7 @@ import org.slf4j.LoggerFactory;
   private static final int __TIMESTAMP_ISSET_ID = 0;
   private static final int __DELETECELL_ISSET_ID = 1;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.COL_VISIBILITY,_Fields.TIMESTAMP,_Fields.VALUE,_Fields.DELETE_CELL};
  private static final _Fields optionals[] = {_Fields.COL_VISIBILITY,_Fields.TIMESTAMP,_Fields.VALUE,_Fields.DELETE_CELL};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -176,8 +179,8 @@ import org.slf4j.LoggerFactory;
     ByteBuffer colQualifier)
   {
     this();
    this.colFamily = colFamily;
    this.colQualifier = colQualifier;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
   }
 
   /**
@@ -187,20 +190,16 @@ import org.slf4j.LoggerFactory;
     __isset_bitfield = other.__isset_bitfield;
     if (other.isSetColFamily()) {
       this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(other.colFamily);
;
     }
     if (other.isSetColQualifier()) {
       this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(other.colQualifier);
;
     }
     if (other.isSetColVisibility()) {
       this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(other.colVisibility);
;
     }
     this.timestamp = other.timestamp;
     if (other.isSetValue()) {
       this.value = org.apache.thrift.TBaseHelper.copyBinary(other.value);
;
     }
     this.deleteCell = other.deleteCell;
   }
@@ -227,16 +226,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColFamily() {
    return colFamily;
    return org.apache.thrift.TBaseHelper.copyBinary(colFamily);
   }
 
   public ColumnUpdate setColFamily(byte[] colFamily) {
    setColFamily(colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(colFamily));
    this.colFamily = colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colFamily, colFamily.length));
     return this;
   }
 
   public ColumnUpdate setColFamily(ByteBuffer colFamily) {
    this.colFamily = colFamily;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
     return this;
   }
 
@@ -261,16 +260,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColQualifier() {
    return colQualifier;
    return org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
   }
 
   public ColumnUpdate setColQualifier(byte[] colQualifier) {
    setColQualifier(colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(colQualifier));
    this.colQualifier = colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colQualifier, colQualifier.length));
     return this;
   }
 
   public ColumnUpdate setColQualifier(ByteBuffer colQualifier) {
    this.colQualifier = colQualifier;
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
     return this;
   }
 
@@ -295,16 +294,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColVisibility() {
    return colVisibility;
    return org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
   }
 
   public ColumnUpdate setColVisibility(byte[] colVisibility) {
    setColVisibility(colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(colVisibility));
    this.colVisibility = colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colVisibility, colVisibility.length));
     return this;
   }
 
   public ColumnUpdate setColVisibility(ByteBuffer colVisibility) {
    this.colVisibility = colVisibility;
    this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
     return this;
   }
 
@@ -352,16 +351,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForValue() {
    return value;
    return org.apache.thrift.TBaseHelper.copyBinary(value);
   }
 
   public ColumnUpdate setValue(byte[] value) {
    setValue(value == null ? (ByteBuffer)null : ByteBuffer.wrap(value));
    this.value = value == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(value, value.length));
     return this;
   }
 
   public ColumnUpdate setValue(ByteBuffer value) {
    this.value = value;
    this.value = org.apache.thrift.TBaseHelper.copyBinary(value);
     return this;
   }
 
@@ -468,13 +467,13 @@ import org.slf4j.LoggerFactory;
       return getColVisibility();
 
     case TIMESTAMP:
      return Long.valueOf(getTimestamp());
      return getTimestamp();
 
     case VALUE:
       return getValue();
 
     case DELETE_CELL:
      return Boolean.valueOf(isDeleteCell());
      return isDeleteCell();
 
     }
     throw new IllegalStateException();
@@ -575,7 +574,39 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_colFamily = true &amp;&amp; (isSetColFamily());
    list.add(present_colFamily);
    if (present_colFamily)
      list.add(colFamily);

    boolean present_colQualifier = true &amp;&amp; (isSetColQualifier());
    list.add(present_colQualifier);
    if (present_colQualifier)
      list.add(colQualifier);

    boolean present_colVisibility = true &amp;&amp; (isSetColVisibility());
    list.add(present_colVisibility);
    if (present_colVisibility)
      list.add(colVisibility);

    boolean present_timestamp = true &amp;&amp; (isSetTimestamp());
    list.add(present_timestamp);
    if (present_timestamp)
      list.add(timestamp);

    boolean present_value = true &amp;&amp; (isSetValue());
    list.add(present_value);
    if (present_value)
      list.add(value);

    boolean present_deleteCell = true &amp;&amp; (isSetDeleteCell());
    list.add(present_deleteCell);
    if (present_deleteCell)
      list.add(deleteCell);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionReason.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionReason.java
index 187527549..77cf53d78 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionReason.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionReason.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionStrategyConfig.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionStrategyConfig.java
index 2e74e39b6..419353a6e 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionStrategyConfig.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionStrategyConfig.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class CompactionStrategyConfig implements org.apache.thrift.TBase&lt;CompactionStrategyConfig, CompactionStrategyConfig._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;CompactionStrategyConfig&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class CompactionStrategyConfig implements org.apache.thrift.TBase&lt;CompactionStrategyConfig, CompactionStrategyConfig._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;CompactionStrategyConfig&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CompactionStrategyConfig");
 
   private static final org.apache.thrift.protocol.TField CLASS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("className", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -316,7 +319,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_className = true &amp;&amp; (isSetClassName());
    list.add(present_className);
    if (present_className)
      list.add(className);

    boolean present_options = true &amp;&amp; (isSetOptions());
    list.add(present_options);
    if (present_options)
      list.add(options);

    return list.hashCode();
   }
 
   @Override
@@ -438,13 +453,13 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map154 = iprot.readMapBegin();
                 struct.options = new HashMap&lt;String,String&gt;(2*_map154.size);
                for (int _i155 = 0; _i155 &lt; _map154.size; ++_i155)
                String _key155;
                String _val156;
                for (int _i157 = 0; _i157 &lt; _map154.size; ++_i157)
                 {
                  String _key156;
                  String _val157;
                  _key156 = iprot.readString();
                  _val157 = iprot.readString();
                  struct.options.put(_key156, _val157);
                  _key155 = iprot.readString();
                  _val156 = iprot.readString();
                  struct.options.put(_key155, _val156);
                 }
                 iprot.readMapEnd();
               }
@@ -538,13 +553,13 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map160 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.options = new HashMap&lt;String,String&gt;(2*_map160.size);
          for (int _i161 = 0; _i161 &lt; _map160.size; ++_i161)
          String _key161;
          String _val162;
          for (int _i163 = 0; _i163 &lt; _map160.size; ++_i163)
           {
            String _key162;
            String _val163;
            _key162 = iprot.readString();
            _val163 = iprot.readString();
            struct.options.put(_key162, _val163);
            _key161 = iprot.readString();
            _val162 = iprot.readString();
            struct.options.put(_key161, _val162);
           }
         }
         struct.setOptionsIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionType.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionType.java
index 1b82951ba..d561796ad 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionType.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/CompactionType.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Condition.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Condition.java
index c4b3c0724..f39a08c45 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Condition.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Condition.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class Condition implements org.apache.thrift.TBase&lt;Condition, Condition._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Condition&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class Condition implements org.apache.thrift.TBase&lt;Condition, Condition._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Condition&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Condition");
 
   private static final org.apache.thrift.protocol.TField COLUMN_FIELD_DESC = new org.apache.thrift.protocol.TField("column", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -137,7 +140,7 @@ import org.slf4j.LoggerFactory;
   // isset id assignments
   private static final int __TIMESTAMP_ISSET_ID = 0;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.TIMESTAMP,_Fields.VALUE,_Fields.ITERATORS};
  private static final _Fields optionals[] = {_Fields.TIMESTAMP,_Fields.VALUE,_Fields.ITERATORS};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -175,7 +178,6 @@ import org.slf4j.LoggerFactory;
     this.timestamp = other.timestamp;
     if (other.isSetValue()) {
       this.value = org.apache.thrift.TBaseHelper.copyBinary(other.value);
;
     }
     if (other.isSetIterators()) {
       List&lt;IteratorSetting&gt; __this__iterators = new ArrayList&lt;IteratorSetting&gt;(other.iterators.size());
@@ -252,16 +254,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForValue() {
    return value;
    return org.apache.thrift.TBaseHelper.copyBinary(value);
   }
 
   public Condition setValue(byte[] value) {
    setValue(value == null ? (ByteBuffer)null : ByteBuffer.wrap(value));
    this.value = value == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(value, value.length));
     return this;
   }
 
   public Condition setValue(ByteBuffer value) {
    this.value = value;
    this.value = org.apache.thrift.TBaseHelper.copyBinary(value);
     return this;
   }
 
@@ -362,7 +364,7 @@ import org.slf4j.LoggerFactory;
       return getColumn();
 
     case TIMESTAMP:
      return Long.valueOf(getTimestamp());
      return getTimestamp();
 
     case VALUE:
       return getValue();
@@ -447,7 +449,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_column = true &amp;&amp; (isSetColumn());
    list.add(present_column);
    if (present_column)
      list.add(column);

    boolean present_timestamp = true &amp;&amp; (isSetTimestamp());
    list.add(present_timestamp);
    if (present_timestamp)
      list.add(timestamp);

    boolean present_value = true &amp;&amp; (isSetValue());
    list.add(present_value);
    if (present_value)
      list.add(value);

    boolean present_iterators = true &amp;&amp; (isSetIterators());
    list.add(present_iterators);
    if (present_iterators)
      list.add(iterators);

    return list.hashCode();
   }
 
   @Override
@@ -629,12 +653,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list82 = iprot.readListBegin();
                 struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list82.size);
                for (int _i83 = 0; _i83 &lt; _list82.size; ++_i83)
                IteratorSetting _elem83;
                for (int _i84 = 0; _i84 &lt; _list82.size; ++_i84)
                 {
                  IteratorSetting _elem84;
                  _elem84 = new IteratorSetting();
                  _elem84.read(iprot);
                  struct.iterators.add(_elem84);
                  _elem83 = new IteratorSetting();
                  _elem83.read(iprot);
                  struct.iterators.add(_elem83);
                 }
                 iprot.readListEnd();
               }
@@ -761,12 +785,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list87 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list87.size);
          for (int _i88 = 0; _i88 &lt; _list87.size; ++_i88)
          IteratorSetting _elem88;
          for (int _i89 = 0; _i89 &lt; _list87.size; ++_i89)
           {
            IteratorSetting _elem89;
            _elem89 = new IteratorSetting();
            _elem89.read(iprot);
            struct.iterators.add(_elem89);
            _elem88 = new IteratorSetting();
            _elem88.read(iprot);
            struct.iterators.add(_elem88);
           }
         }
         struct.setIteratorsIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalStatus.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalStatus.java
index 515c41675..c8626a5ac 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalStatus.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalStatus.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalUpdates.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalUpdates.java
index 551e99643..1de42a7ad 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalUpdates.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalUpdates.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ConditionalUpdates implements org.apache.thrift.TBase&lt;ConditionalUpdates, ConditionalUpdates._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ConditionalUpdates&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ConditionalUpdates implements org.apache.thrift.TBase&lt;ConditionalUpdates, ConditionalUpdates._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ConditionalUpdates&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ConditionalUpdates");
 
   private static final org.apache.thrift.protocol.TField CONDITIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("conditions", org.apache.thrift.protocol.TType.LIST, (short)2);
@@ -342,7 +345,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_conditions = true &amp;&amp; (isSetConditions());
    list.add(present_conditions);
    if (present_conditions)
      list.add(conditions);

    boolean present_updates = true &amp;&amp; (isSetUpdates());
    list.add(present_updates);
    if (present_updates)
      list.add(updates);

    return list.hashCode();
   }
 
   @Override
@@ -456,12 +471,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list90 = iprot.readListBegin();
                 struct.conditions = new ArrayList&lt;Condition&gt;(_list90.size);
                for (int _i91 = 0; _i91 &lt; _list90.size; ++_i91)
                Condition _elem91;
                for (int _i92 = 0; _i92 &lt; _list90.size; ++_i92)
                 {
                  Condition _elem92;
                  _elem92 = new Condition();
                  _elem92.read(iprot);
                  struct.conditions.add(_elem92);
                  _elem91 = new Condition();
                  _elem91.read(iprot);
                  struct.conditions.add(_elem91);
                 }
                 iprot.readListEnd();
               }
@@ -475,12 +490,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list93 = iprot.readListBegin();
                 struct.updates = new ArrayList&lt;ColumnUpdate&gt;(_list93.size);
                for (int _i94 = 0; _i94 &lt; _list93.size; ++_i94)
                ColumnUpdate _elem94;
                for (int _i95 = 0; _i95 &lt; _list93.size; ++_i95)
                 {
                  ColumnUpdate _elem95;
                  _elem95 = new ColumnUpdate();
                  _elem95.read(iprot);
                  struct.updates.add(_elem95);
                  _elem94 = new ColumnUpdate();
                  _elem94.read(iprot);
                  struct.updates.add(_elem94);
                 }
                 iprot.readListEnd();
               }
@@ -581,12 +596,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list100 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.conditions = new ArrayList&lt;Condition&gt;(_list100.size);
          for (int _i101 = 0; _i101 &lt; _list100.size; ++_i101)
          Condition _elem101;
          for (int _i102 = 0; _i102 &lt; _list100.size; ++_i102)
           {
            Condition _elem102;
            _elem102 = new Condition();
            _elem102.read(iprot);
            struct.conditions.add(_elem102);
            _elem101 = new Condition();
            _elem101.read(iprot);
            struct.conditions.add(_elem101);
           }
         }
         struct.setConditionsIsSet(true);
@@ -595,12 +610,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list103 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.updates = new ArrayList&lt;ColumnUpdate&gt;(_list103.size);
          for (int _i104 = 0; _i104 &lt; _list103.size; ++_i104)
          ColumnUpdate _elem104;
          for (int _i105 = 0; _i105 &lt; _list103.size; ++_i105)
           {
            ColumnUpdate _elem105;
            _elem105 = new ColumnUpdate();
            _elem105.read(iprot);
            struct.updates.add(_elem105);
            _elem104 = new ColumnUpdate();
            _elem104.read(iprot);
            struct.updates.add(_elem104);
           }
         }
         struct.setUpdatesIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalWriterOptions.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalWriterOptions.java
index 16b21fcbe..bfcc21495 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalWriterOptions.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ConditionalWriterOptions.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ConditionalWriterOptions implements org.apache.thrift.TBase&lt;ConditionalWriterOptions, ConditionalWriterOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ConditionalWriterOptions&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ConditionalWriterOptions implements org.apache.thrift.TBase&lt;ConditionalWriterOptions, ConditionalWriterOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ConditionalWriterOptions&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ConditionalWriterOptions");
 
   private static final org.apache.thrift.protocol.TField MAX_MEMORY_FIELD_DESC = new org.apache.thrift.protocol.TField("maxMemory", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -152,7 +155,7 @@ import org.slf4j.LoggerFactory;
   private static final int __TIMEOUTMS_ISSET_ID = 1;
   private static final int __THREADS_ISSET_ID = 2;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.MAX_MEMORY,_Fields.TIMEOUT_MS,_Fields.THREADS,_Fields.AUTHORIZATIONS,_Fields.DURABILITY};
  private static final _Fields optionals[] = {_Fields.MAX_MEMORY,_Fields.TIMEOUT_MS,_Fields.THREADS,_Fields.AUTHORIZATIONS,_Fields.DURABILITY};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -395,13 +398,13 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case MAX_MEMORY:
      return Long.valueOf(getMaxMemory());
      return getMaxMemory();
 
     case TIMEOUT_MS:
      return Long.valueOf(getTimeoutMs());
      return getTimeoutMs();
 
     case THREADS:
      return Integer.valueOf(getThreads());
      return getThreads();
 
     case AUTHORIZATIONS:
       return getAuthorizations();
@@ -497,7 +500,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_maxMemory = true &amp;&amp; (isSetMaxMemory());
    list.add(present_maxMemory);
    if (present_maxMemory)
      list.add(maxMemory);

    boolean present_timeoutMs = true &amp;&amp; (isSetTimeoutMs());
    list.add(present_timeoutMs);
    if (present_timeoutMs)
      list.add(timeoutMs);

    boolean present_threads = true &amp;&amp; (isSetThreads());
    list.add(present_threads);
    if (present_threads)
      list.add(threads);

    boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
    list.add(present_authorizations);
    if (present_authorizations)
      list.add(authorizations);

    boolean present_durability = true &amp;&amp; (isSetDurability());
    list.add(present_durability);
    if (present_durability)
      list.add(durability.getValue());

    return list.hashCode();
   }
 
   @Override
@@ -601,7 +631,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
     }
@@ -689,11 +719,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TSet _set106 = iprot.readSetBegin();
                 struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set106.size);
                for (int _i107 = 0; _i107 &lt; _set106.size; ++_i107)
                ByteBuffer _elem107;
                for (int _i108 = 0; _i108 &lt; _set106.size; ++_i108)
                 {
                  ByteBuffer _elem108;
                  _elem108 = iprot.readBinary();
                  struct.authorizations.add(_elem108);
                  _elem107 = iprot.readBinary();
                  struct.authorizations.add(_elem107);
                 }
                 iprot.readSetEnd();
               }
@@ -704,7 +734,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 5: // DURABILITY
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.durability = Durability.findByValue(iprot.readI32());
              struct.durability = org.apache.accumulo.proxy.thrift.Durability.findByValue(iprot.readI32());
               struct.setDurabilityIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -838,17 +868,17 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TSet _set111 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set111.size);
          for (int _i112 = 0; _i112 &lt; _set111.size; ++_i112)
          ByteBuffer _elem112;
          for (int _i113 = 0; _i113 &lt; _set111.size; ++_i113)
           {
            ByteBuffer _elem113;
            _elem113 = iprot.readBinary();
            struct.authorizations.add(_elem113);
            _elem112 = iprot.readBinary();
            struct.authorizations.add(_elem112);
           }
         }
         struct.setAuthorizationsIsSet(true);
       }
       if (incoming.get(4)) {
        struct.durability = Durability.findByValue(iprot.readI32());
        struct.durability = org.apache.accumulo.proxy.thrift.Durability.findByValue(iprot.readI32());
         struct.setDurabilityIsSet(true);
       }
     }
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/DiskUsage.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/DiskUsage.java
index 82a886dbf..bc0b0874e 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/DiskUsage.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/DiskUsage.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class DiskUsage implements org.apache.thrift.TBase&lt;DiskUsage, DiskUsage._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;DiskUsage&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class DiskUsage implements org.apache.thrift.TBase&lt;DiskUsage, DiskUsage._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;DiskUsage&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DiskUsage");
 
   private static final org.apache.thrift.protocol.TField TABLES_FIELD_DESC = new org.apache.thrift.protocol.TField("tables", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -264,7 +267,7 @@ import org.slf4j.LoggerFactory;
       return getTables();
 
     case USAGE:
      return Long.valueOf(getUsage());
      return getUsage();
 
     }
     throw new IllegalStateException();
@@ -321,7 +324,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_tables = true &amp;&amp; (isSetTables());
    list.add(present_tables);
    if (present_tables)
      list.add(tables);

    boolean present_usage = true;
    list.add(present_usage);
    if (present_usage)
      list.add(usage);

    return list.hashCode();
   }
 
   @Override
@@ -433,11 +448,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                 struct.tables = new ArrayList&lt;String&gt;(_list0.size);
                for (int _i1 = 0; _i1 &lt; _list0.size; ++_i1)
                String _elem1;
                for (int _i2 = 0; _i2 &lt; _list0.size; ++_i2)
                 {
                  String _elem2;
                  _elem2 = iprot.readString();
                  struct.tables.add(_elem2);
                  _elem1 = iprot.readString();
                  struct.tables.add(_elem1);
                 }
                 iprot.readListEnd();
               }
@@ -531,11 +546,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.tables = new ArrayList&lt;String&gt;(_list5.size);
          for (int _i6 = 0; _i6 &lt; _list5.size; ++_i6)
          String _elem6;
          for (int _i7 = 0; _i7 &lt; _list5.size; ++_i7)
           {
            String _elem7;
            _elem7 = iprot.readString();
            struct.tables.add(_elem7);
            _elem6 = iprot.readString();
            struct.tables.add(_elem6);
           }
         }
         struct.setTablesIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Durability.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Durability.java
index fb4612ae1..daa16c855 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Durability.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Durability.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorScope.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorScope.java
index 0fc8de8a4..65408bd57 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorScope.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorScope.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorSetting.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorSetting.java
index eabc686e4..8381bf5c0 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorSetting.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorSetting.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class IteratorSetting implements org.apache.thrift.TBase&lt;IteratorSetting, IteratorSetting._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;IteratorSetting&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class IteratorSetting implements org.apache.thrift.TBase&lt;IteratorSetting, IteratorSetting._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;IteratorSetting&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IteratorSetting");
 
   private static final org.apache.thrift.protocol.TField PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("priority", org.apache.thrift.protocol.TType.I32, (short)1);
@@ -348,7 +351,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case PRIORITY:
      return Integer.valueOf(getPriority());
      return getPriority();
 
     case NAME:
       return getName();
@@ -436,7 +439,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_priority = true;
    list.add(present_priority);
    if (present_priority)
      list.add(priority);

    boolean present_name = true &amp;&amp; (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_iteratorClass = true &amp;&amp; (isSetIteratorClass());
    list.add(present_iteratorClass);
    if (present_iteratorClass)
      list.add(iteratorClass);

    boolean present_properties = true &amp;&amp; (isSetProperties());
    list.add(present_properties);
    if (present_properties)
      list.add(properties);

    return list.hashCode();
   }
 
   @Override
@@ -608,13 +633,13 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map16 = iprot.readMapBegin();
                 struct.properties = new HashMap&lt;String,String&gt;(2*_map16.size);
                for (int _i17 = 0; _i17 &lt; _map16.size; ++_i17)
                String _key17;
                String _val18;
                for (int _i19 = 0; _i19 &lt; _map16.size; ++_i19)
                 {
                  String _key18;
                  String _val19;
                  _key18 = iprot.readString();
                  _val19 = iprot.readString();
                  struct.properties.put(_key18, _val19);
                  _key17 = iprot.readString();
                  _val18 = iprot.readString();
                  struct.properties.put(_key17, _val18);
                 }
                 iprot.readMapEnd();
               }
@@ -736,13 +761,13 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map22 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.properties = new HashMap&lt;String,String&gt;(2*_map22.size);
          for (int _i23 = 0; _i23 &lt; _map22.size; ++_i23)
          String _key23;
          String _val24;
          for (int _i25 = 0; _i25 &lt; _map22.size; ++_i25)
           {
            String _key24;
            String _val25;
            _key24 = iprot.readString();
            _val25 = iprot.readString();
            struct.properties.put(_key24, _val25);
            _key23 = iprot.readString();
            _val24 = iprot.readString();
            struct.properties.put(_key23, _val24);
           }
         }
         struct.setPropertiesIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Key.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Key.java
index 6984cf294..331ac0c23 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Key.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Key.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class Key implements org.apache.thrift.TBase&lt;Key, Key._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Key&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class Key implements org.apache.thrift.TBase&lt;Key, Key._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Key&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Key");
 
   private static final org.apache.thrift.protocol.TField ROW_FIELD_DESC = new org.apache.thrift.protocol.TField("row", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -142,7 +145,7 @@ import org.slf4j.LoggerFactory;
   // isset id assignments
   private static final int __TIMESTAMP_ISSET_ID = 0;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.TIMESTAMP};
  private static final _Fields optionals[] = {_Fields.TIMESTAMP};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -172,10 +175,10 @@ import org.slf4j.LoggerFactory;
     ByteBuffer colVisibility)
   {
     this();
    this.row = row;
    this.colFamily = colFamily;
    this.colQualifier = colQualifier;
    this.colVisibility = colVisibility;
    this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
    this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
   }
 
   /**
@@ -185,19 +188,15 @@ import org.slf4j.LoggerFactory;
     __isset_bitfield = other.__isset_bitfield;
     if (other.isSetRow()) {
       this.row = org.apache.thrift.TBaseHelper.copyBinary(other.row);
;
     }
     if (other.isSetColFamily()) {
       this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(other.colFamily);
;
     }
     if (other.isSetColQualifier()) {
       this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(other.colQualifier);
;
     }
     if (other.isSetColVisibility()) {
       this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(other.colVisibility);
;
     }
     this.timestamp = other.timestamp;
   }
@@ -222,16 +221,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForRow() {
    return row;
    return org.apache.thrift.TBaseHelper.copyBinary(row);
   }
 
   public Key setRow(byte[] row) {
    setRow(row == null ? (ByteBuffer)null : ByteBuffer.wrap(row));
    this.row = row == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(row, row.length));
     return this;
   }
 
   public Key setRow(ByteBuffer row) {
    this.row = row;
    this.row = org.apache.thrift.TBaseHelper.copyBinary(row);
     return this;
   }
 
@@ -256,16 +255,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColFamily() {
    return colFamily;
    return org.apache.thrift.TBaseHelper.copyBinary(colFamily);
   }
 
   public Key setColFamily(byte[] colFamily) {
    setColFamily(colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(colFamily));
    this.colFamily = colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colFamily, colFamily.length));
     return this;
   }
 
   public Key setColFamily(ByteBuffer colFamily) {
    this.colFamily = colFamily;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
     return this;
   }
 
@@ -290,16 +289,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColQualifier() {
    return colQualifier;
    return org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
   }
 
   public Key setColQualifier(byte[] colQualifier) {
    setColQualifier(colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(colQualifier));
    this.colQualifier = colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colQualifier, colQualifier.length));
     return this;
   }
 
   public Key setColQualifier(ByteBuffer colQualifier) {
    this.colQualifier = colQualifier;
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
     return this;
   }
 
@@ -324,16 +323,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColVisibility() {
    return colVisibility;
    return org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
   }
 
   public Key setColVisibility(byte[] colVisibility) {
    setColVisibility(colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(colVisibility));
    this.colVisibility = colVisibility == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colVisibility, colVisibility.length));
     return this;
   }
 
   public Key setColVisibility(ByteBuffer colVisibility) {
    this.colVisibility = colVisibility;
    this.colVisibility = org.apache.thrift.TBaseHelper.copyBinary(colVisibility);
     return this;
   }
 
@@ -435,7 +434,7 @@ import org.slf4j.LoggerFactory;
       return getColVisibility();
 
     case TIMESTAMP:
      return Long.valueOf(getTimestamp());
      return getTimestamp();
 
     }
     throw new IllegalStateException();
@@ -525,7 +524,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_row = true &amp;&amp; (isSetRow());
    list.add(present_row);
    if (present_row)
      list.add(row);

    boolean present_colFamily = true &amp;&amp; (isSetColFamily());
    list.add(present_colFamily);
    if (present_colFamily)
      list.add(colFamily);

    boolean present_colQualifier = true &amp;&amp; (isSetColQualifier());
    list.add(present_colQualifier);
    if (present_colQualifier)
      list.add(colQualifier);

    boolean present_colVisibility = true &amp;&amp; (isSetColVisibility());
    list.add(present_colVisibility);
    if (present_colVisibility)
      list.add(colVisibility);

    boolean present_timestamp = true &amp;&amp; (isSetTimestamp());
    list.add(present_timestamp);
    if (present_timestamp)
      list.add(timestamp);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyExtent.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyExtent.java
index 11362848b..d734fc6bb 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyExtent.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyExtent.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class KeyExtent implements org.apache.thrift.TBase&lt;KeyExtent, KeyExtent._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyExtent&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class KeyExtent implements org.apache.thrift.TBase&lt;KeyExtent, KeyExtent._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyExtent&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("KeyExtent");
 
   private static final org.apache.thrift.protocol.TField TABLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("tableId", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -153,8 +156,8 @@ import org.slf4j.LoggerFactory;
   {
     this();
     this.tableId = tableId;
    this.endRow = endRow;
    this.prevEndRow = prevEndRow;
    this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
    this.prevEndRow = org.apache.thrift.TBaseHelper.copyBinary(prevEndRow);
   }
 
   /**
@@ -166,11 +169,9 @@ import org.slf4j.LoggerFactory;
     }
     if (other.isSetEndRow()) {
       this.endRow = org.apache.thrift.TBaseHelper.copyBinary(other.endRow);
;
     }
     if (other.isSetPrevEndRow()) {
       this.prevEndRow = org.apache.thrift.TBaseHelper.copyBinary(other.prevEndRow);
;
     }
   }
 
@@ -215,16 +216,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForEndRow() {
    return endRow;
    return org.apache.thrift.TBaseHelper.copyBinary(endRow);
   }
 
   public KeyExtent setEndRow(byte[] endRow) {
    setEndRow(endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(endRow));
    this.endRow = endRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(endRow, endRow.length));
     return this;
   }
 
   public KeyExtent setEndRow(ByteBuffer endRow) {
    this.endRow = endRow;
    this.endRow = org.apache.thrift.TBaseHelper.copyBinary(endRow);
     return this;
   }
 
@@ -249,16 +250,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForPrevEndRow() {
    return prevEndRow;
    return org.apache.thrift.TBaseHelper.copyBinary(prevEndRow);
   }
 
   public KeyExtent setPrevEndRow(byte[] prevEndRow) {
    setPrevEndRow(prevEndRow == null ? (ByteBuffer)null : ByteBuffer.wrap(prevEndRow));
    this.prevEndRow = prevEndRow == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(prevEndRow, prevEndRow.length));
     return this;
   }
 
   public KeyExtent setPrevEndRow(ByteBuffer prevEndRow) {
    this.prevEndRow = prevEndRow;
    this.prevEndRow = org.apache.thrift.TBaseHelper.copyBinary(prevEndRow);
     return this;
   }
 
@@ -383,7 +384,24 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_tableId = true &amp;&amp; (isSetTableId());
    list.add(present_tableId);
    if (present_tableId)
      list.add(tableId);

    boolean present_endRow = true &amp;&amp; (isSetEndRow());
    list.add(present_endRow);
    if (present_endRow)
      list.add(endRow);

    boolean present_prevEndRow = true &amp;&amp; (isSetPrevEndRow());
    list.add(present_prevEndRow);
    if (present_prevEndRow)
      list.add(prevEndRow);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValue.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValue.java
index 76d71b5dc..976fa4b6c 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValue.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValue.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class KeyValue implements org.apache.thrift.TBase&lt;KeyValue, KeyValue._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyValue&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class KeyValue implements org.apache.thrift.TBase&lt;KeyValue, KeyValue._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyValue&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("KeyValue");
 
   private static final org.apache.thrift.protocol.TField KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("key", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -145,7 +148,7 @@ import org.slf4j.LoggerFactory;
   {
     this();
     this.key = key;
    this.value = value;
    this.value = org.apache.thrift.TBaseHelper.copyBinary(value);
   }
 
   /**
@@ -157,7 +160,6 @@ import org.slf4j.LoggerFactory;
     }
     if (other.isSetValue()) {
       this.value = org.apache.thrift.TBaseHelper.copyBinary(other.value);
;
     }
   }
 
@@ -201,16 +203,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForValue() {
    return value;
    return org.apache.thrift.TBaseHelper.copyBinary(value);
   }
 
   public KeyValue setValue(byte[] value) {
    setValue(value == null ? (ByteBuffer)null : ByteBuffer.wrap(value));
    this.value = value == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(value, value.length));
     return this;
   }
 
   public KeyValue setValue(ByteBuffer value) {
    this.value = value;
    this.value = org.apache.thrift.TBaseHelper.copyBinary(value);
     return this;
   }
 
@@ -313,7 +315,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_key = true &amp;&amp; (isSetKey());
    list.add(present_key);
    if (present_key)
      list.add(key);

    boolean present_value = true &amp;&amp; (isSetValue());
    list.add(present_value);
    if (present_value)
      list.add(value);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValueAndPeek.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValueAndPeek.java
index 88b0c3f54..67bd7dbdb 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValueAndPeek.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyValueAndPeek.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class KeyValueAndPeek implements org.apache.thrift.TBase&lt;KeyValueAndPeek, KeyValueAndPeek._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyValueAndPeek&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class KeyValueAndPeek implements org.apache.thrift.TBase&lt;KeyValueAndPeek, KeyValueAndPeek._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;KeyValueAndPeek&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("KeyValueAndPeek");
 
   private static final org.apache.thrift.protocol.TField KEY_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("keyValue", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -247,7 +250,7 @@ import org.slf4j.LoggerFactory;
       return getKeyValue();
 
     case HAS_NEXT:
      return Boolean.valueOf(isHasNext());
      return isHasNext();
 
     }
     throw new IllegalStateException();
@@ -304,7 +307,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_keyValue = true &amp;&amp; (isSetKeyValue());
    list.add(present_keyValue);
    if (present_keyValue)
      list.add(keyValue);

    boolean present_hasNext = true;
    list.add(present_hasNext);
    if (present_hasNext)
      list.add(hasNext);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/MutationsRejectedException.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/MutationsRejectedException.java
index e5dfda1de..f8e399f5b 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/MutationsRejectedException.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/MutationsRejectedException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class MutationsRejectedException extends TException implements org.apache.thrift.TBase&lt;MutationsRejectedException, MutationsRejectedException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MutationsRejectedException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class MutationsRejectedException extends TException implements org.apache.thrift.TBase&lt;MutationsRejectedException, MutationsRejectedException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;MutationsRejectedException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MutationsRejectedException");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/NoMoreEntriesException.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/NoMoreEntriesException.java
index d67bcd2bb..fcdead714 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/NoMoreEntriesException.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/NoMoreEntriesException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class NoMoreEntriesException extends TException implements org.apache.thrift.TBase&lt;NoMoreEntriesException, NoMoreEntriesException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;NoMoreEntriesException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class NoMoreEntriesException extends TException implements org.apache.thrift.TBase&lt;NoMoreEntriesException, NoMoreEntriesException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;NoMoreEntriesException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("NoMoreEntriesException");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/PartialKey.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/PartialKey.java
index 2a0f269e2..b03eae91b 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/PartialKey.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/PartialKey.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Range.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Range.java
index bc66c6b48..cc2042e8d 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Range.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/Range.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class Range implements org.apache.thrift.TBase&lt;Range, Range._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Range&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class Range implements org.apache.thrift.TBase&lt;Range, Range._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Range&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Range");
 
   private static final org.apache.thrift.protocol.TField START_FIELD_DESC = new org.apache.thrift.protocol.TField("start", org.apache.thrift.protocol.TType.STRUCT, (short)1);
@@ -337,13 +340,13 @@ import org.slf4j.LoggerFactory;
       return getStart();
 
     case START_INCLUSIVE:
      return Boolean.valueOf(isStartInclusive());
      return isStartInclusive();
 
     case STOP:
       return getStop();
 
     case STOP_INCLUSIVE:
      return Boolean.valueOf(isStopInclusive());
      return isStopInclusive();
 
     }
     throw new IllegalStateException();
@@ -422,7 +425,29 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_start = true &amp;&amp; (isSetStart());
    list.add(present_start);
    if (present_start)
      list.add(start);

    boolean present_startInclusive = true;
    list.add(present_startInclusive);
    if (present_startInclusive)
      list.add(startInclusive);

    boolean present_stop = true &amp;&amp; (isSetStop());
    list.add(present_stop);
    if (present_stop)
      list.add(stop);

    boolean present_stopInclusive = true;
    list.add(present_stopInclusive);
    if (present_stopInclusive)
      list.add(stopInclusive);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanColumn.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanColumn.java
index 296c885b5..9b576c474 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanColumn.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanColumn.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ScanColumn implements org.apache.thrift.TBase&lt;ScanColumn, ScanColumn._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanColumn&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ScanColumn implements org.apache.thrift.TBase&lt;ScanColumn, ScanColumn._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanColumn&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ScanColumn");
 
   private static final org.apache.thrift.protocol.TField COL_FAMILY_FIELD_DESC = new org.apache.thrift.protocol.TField("colFamily", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -125,7 +128,7 @@ import org.slf4j.LoggerFactory;
   }
 
   // isset id assignments
  private _Fields optionals[] = {_Fields.COL_QUALIFIER};
  private static final _Fields optionals[] = {_Fields.COL_QUALIFIER};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -144,7 +147,7 @@ import org.slf4j.LoggerFactory;
     ByteBuffer colFamily)
   {
     this();
    this.colFamily = colFamily;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
   }
 
   /**
@@ -153,11 +156,9 @@ import org.slf4j.LoggerFactory;
   public ScanColumn(ScanColumn other) {
     if (other.isSetColFamily()) {
       this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(other.colFamily);
;
     }
     if (other.isSetColQualifier()) {
       this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(other.colQualifier);
;
     }
   }
 
@@ -177,16 +178,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColFamily() {
    return colFamily;
    return org.apache.thrift.TBaseHelper.copyBinary(colFamily);
   }
 
   public ScanColumn setColFamily(byte[] colFamily) {
    setColFamily(colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(colFamily));
    this.colFamily = colFamily == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colFamily, colFamily.length));
     return this;
   }
 
   public ScanColumn setColFamily(ByteBuffer colFamily) {
    this.colFamily = colFamily;
    this.colFamily = org.apache.thrift.TBaseHelper.copyBinary(colFamily);
     return this;
   }
 
@@ -211,16 +212,16 @@ import org.slf4j.LoggerFactory;
   }
 
   public ByteBuffer bufferForColQualifier() {
    return colQualifier;
    return org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
   }
 
   public ScanColumn setColQualifier(byte[] colQualifier) {
    setColQualifier(colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(colQualifier));
    this.colQualifier = colQualifier == null ? (ByteBuffer)null : ByteBuffer.wrap(Arrays.copyOf(colQualifier, colQualifier.length));
     return this;
   }
 
   public ScanColumn setColQualifier(ByteBuffer colQualifier) {
    this.colQualifier = colQualifier;
    this.colQualifier = org.apache.thrift.TBaseHelper.copyBinary(colQualifier);
     return this;
   }
 
@@ -323,7 +324,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_colFamily = true &amp;&amp; (isSetColFamily());
    list.add(present_colFamily);
    if (present_colFamily)
      list.add(colFamily);

    boolean present_colQualifier = true &amp;&amp; (isSetColQualifier());
    list.add(present_colQualifier);
    if (present_colQualifier)
      list.add(colQualifier);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanOptions.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanOptions.java
index 047daa056..ef512168d 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanOptions.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanOptions.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ScanOptions implements org.apache.thrift.TBase&lt;ScanOptions, ScanOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanOptions&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ScanOptions implements org.apache.thrift.TBase&lt;ScanOptions, ScanOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanOptions&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ScanOptions");
 
   private static final org.apache.thrift.protocol.TField AUTHORIZATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("authorizations", org.apache.thrift.protocol.TType.SET, (short)1);
@@ -142,7 +145,7 @@ import org.slf4j.LoggerFactory;
   // isset id assignments
   private static final int __BUFFERSIZE_ISSET_ID = 0;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.AUTHORIZATIONS,_Fields.RANGE,_Fields.COLUMNS,_Fields.ITERATORS,_Fields.BUFFER_SIZE};
  private static final _Fields optionals[] = {_Fields.AUTHORIZATIONS,_Fields.RANGE,_Fields.COLUMNS,_Fields.ITERATORS,_Fields.BUFFER_SIZE};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -433,7 +436,7 @@ import org.slf4j.LoggerFactory;
       return getIterators();
 
     case BUFFER_SIZE:
      return Integer.valueOf(getBufferSize());
      return getBufferSize();
 
     }
     throw new IllegalStateException();
@@ -523,7 +526,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_authorizations = true &amp;&amp; (isSetAuthorizations());
    list.add(present_authorizations);
    if (present_authorizations)
      list.add(authorizations);

    boolean present_range = true &amp;&amp; (isSetRange());
    list.add(present_range);
    if (present_range)
      list.add(range);

    boolean present_columns = true &amp;&amp; (isSetColumns());
    list.add(present_columns);
    if (present_columns)
      list.add(columns);

    boolean present_iterators = true &amp;&amp; (isSetIterators());
    list.add(present_iterators);
    if (present_iterators)
      list.add(iterators);

    boolean present_bufferSize = true &amp;&amp; (isSetBufferSize());
    list.add(present_bufferSize);
    if (present_bufferSize)
      list.add(bufferSize);

    return list.hashCode();
   }
 
   @Override
@@ -609,7 +639,7 @@ import org.slf4j.LoggerFactory;
       if (this.authorizations == null) {
         sb.append("null");
       } else {
        sb.append(this.authorizations);
        org.apache.thrift.TBaseHelper.toString(this.authorizations, sb);
       }
       first = false;
     }
@@ -702,11 +732,11 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TSet _set26 = iprot.readSetBegin();
                 struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set26.size);
                for (int _i27 = 0; _i27 &lt; _set26.size; ++_i27)
                ByteBuffer _elem27;
                for (int _i28 = 0; _i28 &lt; _set26.size; ++_i28)
                 {
                  ByteBuffer _elem28;
                  _elem28 = iprot.readBinary();
                  struct.authorizations.add(_elem28);
                  _elem27 = iprot.readBinary();
                  struct.authorizations.add(_elem27);
                 }
                 iprot.readSetEnd();
               }
@@ -729,12 +759,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list29 = iprot.readListBegin();
                 struct.columns = new ArrayList&lt;ScanColumn&gt;(_list29.size);
                for (int _i30 = 0; _i30 &lt; _list29.size; ++_i30)
                ScanColumn _elem30;
                for (int _i31 = 0; _i31 &lt; _list29.size; ++_i31)
                 {
                  ScanColumn _elem31;
                  _elem31 = new ScanColumn();
                  _elem31.read(iprot);
                  struct.columns.add(_elem31);
                  _elem30 = new ScanColumn();
                  _elem30.read(iprot);
                  struct.columns.add(_elem30);
                 }
                 iprot.readListEnd();
               }
@@ -748,12 +778,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                 struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list32.size);
                for (int _i33 = 0; _i33 &lt; _list32.size; ++_i33)
                IteratorSetting _elem33;
                for (int _i34 = 0; _i34 &lt; _list32.size; ++_i34)
                 {
                  IteratorSetting _elem34;
                  _elem34 = new IteratorSetting();
                  _elem34.read(iprot);
                  struct.iterators.add(_elem34);
                  _elem33 = new IteratorSetting();
                  _elem33.read(iprot);
                  struct.iterators.add(_elem33);
                 }
                 iprot.readListEnd();
               }
@@ -916,11 +946,11 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TSet _set41 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.authorizations = new HashSet&lt;ByteBuffer&gt;(2*_set41.size);
          for (int _i42 = 0; _i42 &lt; _set41.size; ++_i42)
          ByteBuffer _elem42;
          for (int _i43 = 0; _i43 &lt; _set41.size; ++_i43)
           {
            ByteBuffer _elem43;
            _elem43 = iprot.readBinary();
            struct.authorizations.add(_elem43);
            _elem42 = iprot.readBinary();
            struct.authorizations.add(_elem42);
           }
         }
         struct.setAuthorizationsIsSet(true);
@@ -934,12 +964,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list44 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.columns = new ArrayList&lt;ScanColumn&gt;(_list44.size);
          for (int _i45 = 0; _i45 &lt; _list44.size; ++_i45)
          ScanColumn _elem45;
          for (int _i46 = 0; _i46 &lt; _list44.size; ++_i46)
           {
            ScanColumn _elem46;
            _elem46 = new ScanColumn();
            _elem46.read(iprot);
            struct.columns.add(_elem46);
            _elem45 = new ScanColumn();
            _elem45.read(iprot);
            struct.columns.add(_elem45);
           }
         }
         struct.setColumnsIsSet(true);
@@ -948,12 +978,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list47 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.iterators = new ArrayList&lt;IteratorSetting&gt;(_list47.size);
          for (int _i48 = 0; _i48 &lt; _list47.size; ++_i48)
          IteratorSetting _elem48;
          for (int _i49 = 0; _i49 &lt; _list47.size; ++_i49)
           {
            IteratorSetting _elem49;
            _elem49 = new IteratorSetting();
            _elem49.read(iprot);
            struct.iterators.add(_elem49);
            _elem48 = new IteratorSetting();
            _elem48.read(iprot);
            struct.iterators.add(_elem48);
           }
         }
         struct.setIteratorsIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanResult.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanResult.java
index 3775e7db2..f4b7dd345 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanResult.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanResult.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class ScanResult implements org.apache.thrift.TBase&lt;ScanResult, ScanResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanResult&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class ScanResult implements org.apache.thrift.TBase&lt;ScanResult, ScanResult._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;ScanResult&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ScanResult");
 
   private static final org.apache.thrift.protocol.TField RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("results", org.apache.thrift.protocol.TType.LIST, (short)1);
@@ -267,7 +270,7 @@ import org.slf4j.LoggerFactory;
       return getResults();
 
     case MORE:
      return Boolean.valueOf(isMore());
      return isMore();
 
     }
     throw new IllegalStateException();
@@ -324,7 +327,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_results = true &amp;&amp; (isSetResults());
    list.add(present_results);
    if (present_results)
      list.add(results);

    boolean present_more = true;
    list.add(present_more);
    if (present_more)
      list.add(more);

    return list.hashCode();
   }
 
   @Override
@@ -436,12 +451,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                 struct.results = new ArrayList&lt;KeyValue&gt;(_list8.size);
                for (int _i9 = 0; _i9 &lt; _list8.size; ++_i9)
                KeyValue _elem9;
                for (int _i10 = 0; _i10 &lt; _list8.size; ++_i10)
                 {
                  KeyValue _elem10;
                  _elem10 = new KeyValue();
                  _elem10.read(iprot);
                  struct.results.add(_elem10);
                  _elem9 = new KeyValue();
                  _elem9.read(iprot);
                  struct.results.add(_elem9);
                 }
                 iprot.readListEnd();
               }
@@ -535,12 +550,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.results = new ArrayList&lt;KeyValue&gt;(_list13.size);
          for (int _i14 = 0; _i14 &lt; _list13.size; ++_i14)
          KeyValue _elem14;
          for (int _i15 = 0; _i15 &lt; _list13.size; ++_i15)
           {
            KeyValue _elem15;
            _elem15 = new KeyValue();
            _elem15.read(iprot);
            struct.results.add(_elem15);
            _elem14 = new KeyValue();
            _elem14.read(iprot);
            struct.results.add(_elem14);
           }
         }
         struct.setResultsIsSet(true);
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanState.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanState.java
index 127d1473a..8e792128d 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanState.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanState.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanType.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanType.java
index f4171109c..14ac9ceed 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanType.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanType.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/SystemPermission.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/SystemPermission.java
index 929b83a1e..6f4b549e3 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/SystemPermission.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/SystemPermission.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableExistsException.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableExistsException.java
index 9e3cf9cb5..4fd50dcac 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableExistsException.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableExistsException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TableExistsException extends TException implements org.apache.thrift.TBase&lt;TableExistsException, TableExistsException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TableExistsException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TableExistsException extends TException implements org.apache.thrift.TBase&lt;TableExistsException, TableExistsException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TableExistsException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TableExistsException");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableNotFoundException.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableNotFoundException.java
index f12059bd0..6d27cb1f5 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableNotFoundException.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TableNotFoundException.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TableNotFoundException extends TException implements org.apache.thrift.TBase&lt;TableNotFoundException, TableNotFoundException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TableNotFoundException&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TableNotFoundException extends TException implements org.apache.thrift.TBase&lt;TableNotFoundException, TableNotFoundException._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;TableNotFoundException&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TableNotFoundException");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TablePermission.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TablePermission.java
index 04882fa1d..1beac63db 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TablePermission.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TablePermission.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TimeType.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TimeType.java
index 32564e0c9..26565a2d2 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TimeType.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/TimeType.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownScanner.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownScanner.java
index f6a4b1edd..e052ebfcb 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownScanner.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownScanner.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class UnknownScanner extends TException implements org.apache.thrift.TBase&lt;UnknownScanner, UnknownScanner._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;UnknownScanner&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class UnknownScanner extends TException implements org.apache.thrift.TBase&lt;UnknownScanner, UnknownScanner._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;UnknownScanner&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UnknownScanner");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownWriter.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownWriter.java
index 661aa1b1d..270d76391 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownWriter.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownWriter.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class UnknownWriter extends TException implements org.apache.thrift.TBase&lt;UnknownWriter, UnknownWriter._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;UnknownWriter&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class UnknownWriter extends TException implements org.apache.thrift.TBase&lt;UnknownWriter, UnknownWriter._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;UnknownWriter&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UnknownWriter");
 
   private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -243,7 +246,14 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/WriterOptions.java b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/WriterOptions.java
index 7ecde3568..e4d60c517 100644
-- a/proxy/src/main/java/org/apache/accumulo/proxy/thrift/WriterOptions.java
++ b/proxy/src/main/java/org/apache/accumulo/proxy/thrift/WriterOptions.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class WriterOptions implements org.apache.thrift.TBase&lt;WriterOptions, WriterOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;WriterOptions&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class WriterOptions implements org.apache.thrift.TBase&lt;WriterOptions, WriterOptions._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;WriterOptions&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WriterOptions");
 
   private static final org.apache.thrift.protocol.TField MAX_MEMORY_FIELD_DESC = new org.apache.thrift.protocol.TField("maxMemory", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -153,7 +156,7 @@ import org.slf4j.LoggerFactory;
   private static final int __TIMEOUTMS_ISSET_ID = 2;
   private static final int __THREADS_ISSET_ID = 3;
   private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.DURABILITY};
  private static final _Fields optionals[] = {_Fields.DURABILITY};
   public static final Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; metaDataMap;
   static {
     Map&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt; tmpMap = new EnumMap&lt;_Fields, org.apache.thrift.meta_data.FieldMetaData&gt;(_Fields.class);
@@ -394,16 +397,16 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case MAX_MEMORY:
      return Long.valueOf(getMaxMemory());
      return getMaxMemory();
 
     case LATENCY_MS:
      return Long.valueOf(getLatencyMs());
      return getLatencyMs();
 
     case TIMEOUT_MS:
      return Long.valueOf(getTimeoutMs());
      return getTimeoutMs();
 
     case THREADS:
      return Integer.valueOf(getThreads());
      return getThreads();
 
     case DURABILITY:
       return getDurability();
@@ -496,7 +499,34 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_maxMemory = true;
    list.add(present_maxMemory);
    if (present_maxMemory)
      list.add(maxMemory);

    boolean present_latencyMs = true;
    list.add(present_latencyMs);
    if (present_latencyMs)
      list.add(latencyMs);

    boolean present_timeoutMs = true;
    list.add(present_timeoutMs);
    if (present_timeoutMs)
      list.add(timeoutMs);

    boolean present_threads = true;
    list.add(present_threads);
    if (present_threads)
      list.add(threads);

    boolean present_durability = true &amp;&amp; (isSetDurability());
    list.add(present_durability);
    if (present_durability)
      list.add(durability.getValue());

    return list.hashCode();
   }
 
   @Override
@@ -681,7 +711,7 @@ import org.slf4j.LoggerFactory;
             break;
           case 5: // DURABILITY
             if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.durability = Durability.findByValue(iprot.readI32());
              struct.durability = org.apache.accumulo.proxy.thrift.Durability.findByValue(iprot.readI32());
               struct.setDurabilityIsSet(true);
             } else { 
               org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
@@ -793,7 +823,7 @@ import org.slf4j.LoggerFactory;
         struct.setThreadsIsSet(true);
       }
       if (incoming.get(4)) {
        struct.durability = Durability.findByValue(iprot.readI32());
        struct.durability = org.apache.accumulo.proxy.thrift.Durability.findByValue(iprot.readI32());
         struct.setDurabilityIsSet(true);
       }
     }
diff --git a/proxy/src/main/python/AccumuloProxy-remote b/proxy/src/main/python/AccumuloProxy-remote
index a8d754212..990f708b6 100644
-- a/proxy/src/main/python/AccumuloProxy-remote
++ b/proxy/src/main/python/AccumuloProxy-remote
@@ -14,7 +14,7 @@
 # limitations under the License.
 #!/usr/bin/env python
 #
# Autogenerated by Thrift Compiler (0.9.1)
# Autogenerated by Thrift Compiler (0.9.3)
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 #
@@ -26,6 +26,7 @@ import pprint
 from urlparse import urlparse
 from thrift.transport import TTransport
 from thrift.transport import TSocket
from thrift.transport import TSSLSocket
 from thrift.transport import THttpClient
 from thrift.protocol import TBinaryProtocol
 
@@ -33,88 +34,88 @@ from accumulo import AccumuloProxy
 from accumulo.ttypes import *
 
 if len(sys.argv) &lt;= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string login(string principal,  loginProperties)'
  print '  i32 addConstraint(string login, string tableName, string constraintClassName)'
  print '  void addSplits(string login, string tableName,  splits)'
  print '  void attachIterator(string login, string tableName, IteratorSetting setting,  scopes)'
  print '  void checkIteratorConflicts(string login, string tableName, IteratorSetting setting,  scopes)'
  print '  void clearLocatorCache(string login, string tableName)'
  print '  void cloneTable(string login, string tableName, string newTableName, bool flush,  propertiesToSet,  propertiesToExclude)'
  print '  void compactTable(string login, string tableName, string startRow, string endRow,  iterators, bool flush, bool wait, CompactionStrategyConfig compactionStrategy)'
  print '  void cancelCompaction(string login, string tableName)'
  print '  void createTable(string login, string tableName, bool versioningIter, TimeType type)'
  print '  void deleteTable(string login, string tableName)'
  print '  void deleteRows(string login, string tableName, string startRow, string endRow)'
  print '  void exportTable(string login, string tableName, string exportDir)'
  print '  void flushTable(string login, string tableName, string startRow, string endRow, bool wait)'
  print '   getDiskUsage(string login,  tables)'
  print '   getLocalityGroups(string login, string tableName)'
  print '  IteratorSetting getIteratorSetting(string login, string tableName, string iteratorName, IteratorScope scope)'
  print '  string getMaxRow(string login, string tableName,  auths, string startRow, bool startInclusive, string endRow, bool endInclusive)'
  print '   getTableProperties(string login, string tableName)'
  print '  void importDirectory(string login, string tableName, string importDir, string failureDir, bool setTime)'
  print '  void importTable(string login, string tableName, string importDir)'
  print '   listSplits(string login, string tableName, i32 maxSplits)'
  print '   listTables(string login)'
  print '   listIterators(string login, string tableName)'
  print '   listConstraints(string login, string tableName)'
  print '  void mergeTablets(string login, string tableName, string startRow, string endRow)'
  print '  void offlineTable(string login, string tableName, bool wait)'
  print '  void onlineTable(string login, string tableName, bool wait)'
  print '  void removeConstraint(string login, string tableName, i32 constraint)'
  print '  void removeIterator(string login, string tableName, string iterName,  scopes)'
  print '  void removeTableProperty(string login, string tableName, string property)'
  print '  void renameTable(string login, string oldTableName, string newTableName)'
  print '  void setLocalityGroups(string login, string tableName,  groups)'
  print '  void setTableProperty(string login, string tableName, string property, string value)'
  print '   splitRangeByTablets(string login, string tableName, Range range, i32 maxSplits)'
  print '  bool tableExists(string login, string tableName)'
  print '   tableIdMap(string login)'
  print '  bool testTableClassLoad(string login, string tableName, string className, string asTypeName)'
  print '  void pingTabletServer(string login, string tserver)'
  print '   getActiveScans(string login, string tserver)'
  print '   getActiveCompactions(string login, string tserver)'
  print '   getSiteConfiguration(string login)'
  print '   getSystemConfiguration(string login)'
  print '   getTabletServers(string login)'
  print '  void removeProperty(string login, string property)'
  print '  void setProperty(string login, string property, string value)'
  print '  bool testClassLoad(string login, string className, string asTypeName)'
  print '  bool authenticateUser(string login, string user,  properties)'
  print '  void changeUserAuthorizations(string login, string user,  authorizations)'
  print '  void changeLocalUserPassword(string login, string user, string password)'
  print '  void createLocalUser(string login, string user, string password)'
  print '  void dropLocalUser(string login, string user)'
  print '   getUserAuthorizations(string login, string user)'
  print '  void grantSystemPermission(string login, string user, SystemPermission perm)'
  print '  void grantTablePermission(string login, string user, string table, TablePermission perm)'
  print '  bool hasSystemPermission(string login, string user, SystemPermission perm)'
  print '  bool hasTablePermission(string login, string user, string table, TablePermission perm)'
  print '   listLocalUsers(string login)'
  print '  void revokeSystemPermission(string login, string user, SystemPermission perm)'
  print '  void revokeTablePermission(string login, string user, string table, TablePermission perm)'
  print '  string createBatchScanner(string login, string tableName, BatchScanOptions options)'
  print '  string createScanner(string login, string tableName, ScanOptions options)'
  print '  bool hasNext(string scanner)'
  print '  KeyValueAndPeek nextEntry(string scanner)'
  print '  ScanResult nextK(string scanner, i32 k)'
  print '  void closeScanner(string scanner)'
  print '  void updateAndFlush(string login, string tableName,  cells)'
  print '  string createWriter(string login, string tableName, WriterOptions opts)'
  print '  void update(string writer,  cells)'
  print '  void flush(string writer)'
  print '  void closeWriter(string writer)'
  print '  ConditionalStatus updateRowConditionally(string login, string tableName, string row, ConditionalUpdates updates)'
  print '  string createConditionalWriter(string login, string tableName, ConditionalWriterOptions options)'
  print '   updateRowsConditionally(string conditionalWriter,  updates)'
  print '  void closeConditionalWriter(string conditionalWriter)'
  print '  Range getRowRange(string row)'
  print '  Key getFollowing(Key key, PartialKey part)'
  print ''
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  string login(string principal,  loginProperties)')
  print('  i32 addConstraint(string login, string tableName, string constraintClassName)')
  print('  void addSplits(string login, string tableName,  splits)')
  print('  void attachIterator(string login, string tableName, IteratorSetting setting,  scopes)')
  print('  void checkIteratorConflicts(string login, string tableName, IteratorSetting setting,  scopes)')
  print('  void clearLocatorCache(string login, string tableName)')
  print('  void cloneTable(string login, string tableName, string newTableName, bool flush,  propertiesToSet,  propertiesToExclude)')
  print('  void compactTable(string login, string tableName, string startRow, string endRow,  iterators, bool flush, bool wait, CompactionStrategyConfig compactionStrategy)')
  print('  void cancelCompaction(string login, string tableName)')
  print('  void createTable(string login, string tableName, bool versioningIter, TimeType type)')
  print('  void deleteTable(string login, string tableName)')
  print('  void deleteRows(string login, string tableName, string startRow, string endRow)')
  print('  void exportTable(string login, string tableName, string exportDir)')
  print('  void flushTable(string login, string tableName, string startRow, string endRow, bool wait)')
  print('   getDiskUsage(string login,  tables)')
  print('   getLocalityGroups(string login, string tableName)')
  print('  IteratorSetting getIteratorSetting(string login, string tableName, string iteratorName, IteratorScope scope)')
  print('  string getMaxRow(string login, string tableName,  auths, string startRow, bool startInclusive, string endRow, bool endInclusive)')
  print('   getTableProperties(string login, string tableName)')
  print('  void importDirectory(string login, string tableName, string importDir, string failureDir, bool setTime)')
  print('  void importTable(string login, string tableName, string importDir)')
  print('   listSplits(string login, string tableName, i32 maxSplits)')
  print('   listTables(string login)')
  print('   listIterators(string login, string tableName)')
  print('   listConstraints(string login, string tableName)')
  print('  void mergeTablets(string login, string tableName, string startRow, string endRow)')
  print('  void offlineTable(string login, string tableName, bool wait)')
  print('  void onlineTable(string login, string tableName, bool wait)')
  print('  void removeConstraint(string login, string tableName, i32 constraint)')
  print('  void removeIterator(string login, string tableName, string iterName,  scopes)')
  print('  void removeTableProperty(string login, string tableName, string property)')
  print('  void renameTable(string login, string oldTableName, string newTableName)')
  print('  void setLocalityGroups(string login, string tableName,  groups)')
  print('  void setTableProperty(string login, string tableName, string property, string value)')
  print('   splitRangeByTablets(string login, string tableName, Range range, i32 maxSplits)')
  print('  bool tableExists(string login, string tableName)')
  print('   tableIdMap(string login)')
  print('  bool testTableClassLoad(string login, string tableName, string className, string asTypeName)')
  print('  void pingTabletServer(string login, string tserver)')
  print('   getActiveScans(string login, string tserver)')
  print('   getActiveCompactions(string login, string tserver)')
  print('   getSiteConfiguration(string login)')
  print('   getSystemConfiguration(string login)')
  print('   getTabletServers(string login)')
  print('  void removeProperty(string login, string property)')
  print('  void setProperty(string login, string property, string value)')
  print('  bool testClassLoad(string login, string className, string asTypeName)')
  print('  bool authenticateUser(string login, string user,  properties)')
  print('  void changeUserAuthorizations(string login, string user,  authorizations)')
  print('  void changeLocalUserPassword(string login, string user, string password)')
  print('  void createLocalUser(string login, string user, string password)')
  print('  void dropLocalUser(string login, string user)')
  print('   getUserAuthorizations(string login, string user)')
  print('  void grantSystemPermission(string login, string user, SystemPermission perm)')
  print('  void grantTablePermission(string login, string user, string table, TablePermission perm)')
  print('  bool hasSystemPermission(string login, string user, SystemPermission perm)')
  print('  bool hasTablePermission(string login, string user, string table, TablePermission perm)')
  print('   listLocalUsers(string login)')
  print('  void revokeSystemPermission(string login, string user, SystemPermission perm)')
  print('  void revokeTablePermission(string login, string user, string table, TablePermission perm)')
  print('  string createBatchScanner(string login, string tableName, BatchScanOptions options)')
  print('  string createScanner(string login, string tableName, ScanOptions options)')
  print('  bool hasNext(string scanner)')
  print('  KeyValueAndPeek nextEntry(string scanner)')
  print('  ScanResult nextK(string scanner, i32 k)')
  print('  void closeScanner(string scanner)')
  print('  void updateAndFlush(string login, string tableName,  cells)')
  print('  string createWriter(string login, string tableName, WriterOptions opts)')
  print('  void update(string writer,  cells)')
  print('  void flush(string writer)')
  print('  void closeWriter(string writer)')
  print('  ConditionalStatus updateRowConditionally(string login, string tableName, string row, ConditionalUpdates updates)')
  print('  string createConditionalWriter(string login, string tableName, ConditionalWriterOptions options)')
  print('   updateRowsConditionally(string conditionalWriter,  updates)')
  print('  void closeConditionalWriter(string conditionalWriter)')
  print('  Range getRowRange(string row)')
  print('  Key getFollowing(Key key, PartialKey part)')
  print('')
   sys.exit(0)
 
 pp = pprint.PrettyPrinter(indent = 2)
@@ -122,6 +123,7 @@ host = 'localhost'
 port = 9090
 uri = ''
 framed = False
ssl = False
 http = False
 argi = 1
 
@@ -150,13 +152,17 @@ if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
   framed = True
   argi += 1
 
if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

 cmd = sys.argv[argi]
 args = sys.argv[argi+1:]
 
 if http:
   transport = THttpClient.THttpClient(host, port, uri)
 else:
  socket = TSocket.TSocket(host, port)
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
   if framed:
     transport = TTransport.TFramedTransport(socket)
   else:
@@ -167,468 +173,468 @@ transport.open()
 
 if cmd == 'login':
   if len(args) != 2:
    print 'login requires 2 args'
    print('login requires 2 args')
     sys.exit(1)
   pp.pprint(client.login(args[0],eval(args[1]),))
 
 elif cmd == 'addConstraint':
   if len(args) != 3:
    print 'addConstraint requires 3 args'
    print('addConstraint requires 3 args')
     sys.exit(1)
   pp.pprint(client.addConstraint(args[0],args[1],args[2],))
 
 elif cmd == 'addSplits':
   if len(args) != 3:
    print 'addSplits requires 3 args'
    print('addSplits requires 3 args')
     sys.exit(1)
   pp.pprint(client.addSplits(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'attachIterator':
   if len(args) != 4:
    print 'attachIterator requires 4 args'
    print('attachIterator requires 4 args')
     sys.exit(1)
   pp.pprint(client.attachIterator(args[0],args[1],eval(args[2]),eval(args[3]),))
 
 elif cmd == 'checkIteratorConflicts':
   if len(args) != 4:
    print 'checkIteratorConflicts requires 4 args'
    print('checkIteratorConflicts requires 4 args')
     sys.exit(1)
   pp.pprint(client.checkIteratorConflicts(args[0],args[1],eval(args[2]),eval(args[3]),))
 
 elif cmd == 'clearLocatorCache':
   if len(args) != 2:
    print 'clearLocatorCache requires 2 args'
    print('clearLocatorCache requires 2 args')
     sys.exit(1)
   pp.pprint(client.clearLocatorCache(args[0],args[1],))
 
 elif cmd == 'cloneTable':
   if len(args) != 6:
    print 'cloneTable requires 6 args'
    print('cloneTable requires 6 args')
     sys.exit(1)
   pp.pprint(client.cloneTable(args[0],args[1],args[2],eval(args[3]),eval(args[4]),eval(args[5]),))
 
 elif cmd == 'compactTable':
   if len(args) != 8:
    print 'compactTable requires 8 args'
    print('compactTable requires 8 args')
     sys.exit(1)
   pp.pprint(client.compactTable(args[0],args[1],args[2],args[3],eval(args[4]),eval(args[5]),eval(args[6]),eval(args[7]),))
 
 elif cmd == 'cancelCompaction':
   if len(args) != 2:
    print 'cancelCompaction requires 2 args'
    print('cancelCompaction requires 2 args')
     sys.exit(1)
   pp.pprint(client.cancelCompaction(args[0],args[1],))
 
 elif cmd == 'createTable':
   if len(args) != 4:
    print 'createTable requires 4 args'
    print('createTable requires 4 args')
     sys.exit(1)
   pp.pprint(client.createTable(args[0],args[1],eval(args[2]),eval(args[3]),))
 
 elif cmd == 'deleteTable':
   if len(args) != 2:
    print 'deleteTable requires 2 args'
    print('deleteTable requires 2 args')
     sys.exit(1)
   pp.pprint(client.deleteTable(args[0],args[1],))
 
 elif cmd == 'deleteRows':
   if len(args) != 4:
    print 'deleteRows requires 4 args'
    print('deleteRows requires 4 args')
     sys.exit(1)
   pp.pprint(client.deleteRows(args[0],args[1],args[2],args[3],))
 
 elif cmd == 'exportTable':
   if len(args) != 3:
    print 'exportTable requires 3 args'
    print('exportTable requires 3 args')
     sys.exit(1)
   pp.pprint(client.exportTable(args[0],args[1],args[2],))
 
 elif cmd == 'flushTable':
   if len(args) != 5:
    print 'flushTable requires 5 args'
    print('flushTable requires 5 args')
     sys.exit(1)
   pp.pprint(client.flushTable(args[0],args[1],args[2],args[3],eval(args[4]),))
 
 elif cmd == 'getDiskUsage':
   if len(args) != 2:
    print 'getDiskUsage requires 2 args'
    print('getDiskUsage requires 2 args')
     sys.exit(1)
   pp.pprint(client.getDiskUsage(args[0],eval(args[1]),))
 
 elif cmd == 'getLocalityGroups':
   if len(args) != 2:
    print 'getLocalityGroups requires 2 args'
    print('getLocalityGroups requires 2 args')
     sys.exit(1)
   pp.pprint(client.getLocalityGroups(args[0],args[1],))
 
 elif cmd == 'getIteratorSetting':
   if len(args) != 4:
    print 'getIteratorSetting requires 4 args'
    print('getIteratorSetting requires 4 args')
     sys.exit(1)
   pp.pprint(client.getIteratorSetting(args[0],args[1],args[2],eval(args[3]),))
 
 elif cmd == 'getMaxRow':
   if len(args) != 7:
    print 'getMaxRow requires 7 args'
    print('getMaxRow requires 7 args')
     sys.exit(1)
   pp.pprint(client.getMaxRow(args[0],args[1],eval(args[2]),args[3],eval(args[4]),args[5],eval(args[6]),))
 
 elif cmd == 'getTableProperties':
   if len(args) != 2:
    print 'getTableProperties requires 2 args'
    print('getTableProperties requires 2 args')
     sys.exit(1)
   pp.pprint(client.getTableProperties(args[0],args[1],))
 
 elif cmd == 'importDirectory':
   if len(args) != 5:
    print 'importDirectory requires 5 args'
    print('importDirectory requires 5 args')
     sys.exit(1)
   pp.pprint(client.importDirectory(args[0],args[1],args[2],args[3],eval(args[4]),))
 
 elif cmd == 'importTable':
   if len(args) != 3:
    print 'importTable requires 3 args'
    print('importTable requires 3 args')
     sys.exit(1)
   pp.pprint(client.importTable(args[0],args[1],args[2],))
 
 elif cmd == 'listSplits':
   if len(args) != 3:
    print 'listSplits requires 3 args'
    print('listSplits requires 3 args')
     sys.exit(1)
   pp.pprint(client.listSplits(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'listTables':
   if len(args) != 1:
    print 'listTables requires 1 args'
    print('listTables requires 1 args')
     sys.exit(1)
   pp.pprint(client.listTables(args[0],))
 
 elif cmd == 'listIterators':
   if len(args) != 2:
    print 'listIterators requires 2 args'
    print('listIterators requires 2 args')
     sys.exit(1)
   pp.pprint(client.listIterators(args[0],args[1],))
 
 elif cmd == 'listConstraints':
   if len(args) != 2:
    print 'listConstraints requires 2 args'
    print('listConstraints requires 2 args')
     sys.exit(1)
   pp.pprint(client.listConstraints(args[0],args[1],))
 
 elif cmd == 'mergeTablets':
   if len(args) != 4:
    print 'mergeTablets requires 4 args'
    print('mergeTablets requires 4 args')
     sys.exit(1)
   pp.pprint(client.mergeTablets(args[0],args[1],args[2],args[3],))
 
 elif cmd == 'offlineTable':
   if len(args) != 3:
    print 'offlineTable requires 3 args'
    print('offlineTable requires 3 args')
     sys.exit(1)
   pp.pprint(client.offlineTable(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'onlineTable':
   if len(args) != 3:
    print 'onlineTable requires 3 args'
    print('onlineTable requires 3 args')
     sys.exit(1)
   pp.pprint(client.onlineTable(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'removeConstraint':
   if len(args) != 3:
    print 'removeConstraint requires 3 args'
    print('removeConstraint requires 3 args')
     sys.exit(1)
   pp.pprint(client.removeConstraint(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'removeIterator':
   if len(args) != 4:
    print 'removeIterator requires 4 args'
    print('removeIterator requires 4 args')
     sys.exit(1)
   pp.pprint(client.removeIterator(args[0],args[1],args[2],eval(args[3]),))
 
 elif cmd == 'removeTableProperty':
   if len(args) != 3:
    print 'removeTableProperty requires 3 args'
    print('removeTableProperty requires 3 args')
     sys.exit(1)
   pp.pprint(client.removeTableProperty(args[0],args[1],args[2],))
 
 elif cmd == 'renameTable':
   if len(args) != 3:
    print 'renameTable requires 3 args'
    print('renameTable requires 3 args')
     sys.exit(1)
   pp.pprint(client.renameTable(args[0],args[1],args[2],))
 
 elif cmd == 'setLocalityGroups':
   if len(args) != 3:
    print 'setLocalityGroups requires 3 args'
    print('setLocalityGroups requires 3 args')
     sys.exit(1)
   pp.pprint(client.setLocalityGroups(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'setTableProperty':
   if len(args) != 4:
    print 'setTableProperty requires 4 args'
    print('setTableProperty requires 4 args')
     sys.exit(1)
   pp.pprint(client.setTableProperty(args[0],args[1],args[2],args[3],))
 
 elif cmd == 'splitRangeByTablets':
   if len(args) != 4:
    print 'splitRangeByTablets requires 4 args'
    print('splitRangeByTablets requires 4 args')
     sys.exit(1)
   pp.pprint(client.splitRangeByTablets(args[0],args[1],eval(args[2]),eval(args[3]),))
 
 elif cmd == 'tableExists':
   if len(args) != 2:
    print 'tableExists requires 2 args'
    print('tableExists requires 2 args')
     sys.exit(1)
   pp.pprint(client.tableExists(args[0],args[1],))
 
 elif cmd == 'tableIdMap':
   if len(args) != 1:
    print 'tableIdMap requires 1 args'
    print('tableIdMap requires 1 args')
     sys.exit(1)
   pp.pprint(client.tableIdMap(args[0],))
 
 elif cmd == 'testTableClassLoad':
   if len(args) != 4:
    print 'testTableClassLoad requires 4 args'
    print('testTableClassLoad requires 4 args')
     sys.exit(1)
   pp.pprint(client.testTableClassLoad(args[0],args[1],args[2],args[3],))
 
 elif cmd == 'pingTabletServer':
   if len(args) != 2:
    print 'pingTabletServer requires 2 args'
    print('pingTabletServer requires 2 args')
     sys.exit(1)
   pp.pprint(client.pingTabletServer(args[0],args[1],))
 
 elif cmd == 'getActiveScans':
   if len(args) != 2:
    print 'getActiveScans requires 2 args'
    print('getActiveScans requires 2 args')
     sys.exit(1)
   pp.pprint(client.getActiveScans(args[0],args[1],))
 
 elif cmd == 'getActiveCompactions':
   if len(args) != 2:
    print 'getActiveCompactions requires 2 args'
    print('getActiveCompactions requires 2 args')
     sys.exit(1)
   pp.pprint(client.getActiveCompactions(args[0],args[1],))
 
 elif cmd == 'getSiteConfiguration':
   if len(args) != 1:
    print 'getSiteConfiguration requires 1 args'
    print('getSiteConfiguration requires 1 args')
     sys.exit(1)
   pp.pprint(client.getSiteConfiguration(args[0],))
 
 elif cmd == 'getSystemConfiguration':
   if len(args) != 1:
    print 'getSystemConfiguration requires 1 args'
    print('getSystemConfiguration requires 1 args')
     sys.exit(1)
   pp.pprint(client.getSystemConfiguration(args[0],))
 
 elif cmd == 'getTabletServers':
   if len(args) != 1:
    print 'getTabletServers requires 1 args'
    print('getTabletServers requires 1 args')
     sys.exit(1)
   pp.pprint(client.getTabletServers(args[0],))
 
 elif cmd == 'removeProperty':
   if len(args) != 2:
    print 'removeProperty requires 2 args'
    print('removeProperty requires 2 args')
     sys.exit(1)
   pp.pprint(client.removeProperty(args[0],args[1],))
 
 elif cmd == 'setProperty':
   if len(args) != 3:
    print 'setProperty requires 3 args'
    print('setProperty requires 3 args')
     sys.exit(1)
   pp.pprint(client.setProperty(args[0],args[1],args[2],))
 
 elif cmd == 'testClassLoad':
   if len(args) != 3:
    print 'testClassLoad requires 3 args'
    print('testClassLoad requires 3 args')
     sys.exit(1)
   pp.pprint(client.testClassLoad(args[0],args[1],args[2],))
 
 elif cmd == 'authenticateUser':
   if len(args) != 3:
    print 'authenticateUser requires 3 args'
    print('authenticateUser requires 3 args')
     sys.exit(1)
   pp.pprint(client.authenticateUser(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'changeUserAuthorizations':
   if len(args) != 3:
    print 'changeUserAuthorizations requires 3 args'
    print('changeUserAuthorizations requires 3 args')
     sys.exit(1)
   pp.pprint(client.changeUserAuthorizations(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'changeLocalUserPassword':
   if len(args) != 3:
    print 'changeLocalUserPassword requires 3 args'
    print('changeLocalUserPassword requires 3 args')
     sys.exit(1)
   pp.pprint(client.changeLocalUserPassword(args[0],args[1],args[2],))
 
 elif cmd == 'createLocalUser':
   if len(args) != 3:
    print 'createLocalUser requires 3 args'
    print('createLocalUser requires 3 args')
     sys.exit(1)
   pp.pprint(client.createLocalUser(args[0],args[1],args[2],))
 
 elif cmd == 'dropLocalUser':
   if len(args) != 2:
    print 'dropLocalUser requires 2 args'
    print('dropLocalUser requires 2 args')
     sys.exit(1)
   pp.pprint(client.dropLocalUser(args[0],args[1],))
 
 elif cmd == 'getUserAuthorizations':
   if len(args) != 2:
    print 'getUserAuthorizations requires 2 args'
    print('getUserAuthorizations requires 2 args')
     sys.exit(1)
   pp.pprint(client.getUserAuthorizations(args[0],args[1],))
 
 elif cmd == 'grantSystemPermission':
   if len(args) != 3:
    print 'grantSystemPermission requires 3 args'
    print('grantSystemPermission requires 3 args')
     sys.exit(1)
   pp.pprint(client.grantSystemPermission(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'grantTablePermission':
   if len(args) != 4:
    print 'grantTablePermission requires 4 args'
    print('grantTablePermission requires 4 args')
     sys.exit(1)
   pp.pprint(client.grantTablePermission(args[0],args[1],args[2],eval(args[3]),))
 
 elif cmd == 'hasSystemPermission':
   if len(args) != 3:
    print 'hasSystemPermission requires 3 args'
    print('hasSystemPermission requires 3 args')
     sys.exit(1)
   pp.pprint(client.hasSystemPermission(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'hasTablePermission':
   if len(args) != 4:
    print 'hasTablePermission requires 4 args'
    print('hasTablePermission requires 4 args')
     sys.exit(1)
   pp.pprint(client.hasTablePermission(args[0],args[1],args[2],eval(args[3]),))
 
 elif cmd == 'listLocalUsers':
   if len(args) != 1:
    print 'listLocalUsers requires 1 args'
    print('listLocalUsers requires 1 args')
     sys.exit(1)
   pp.pprint(client.listLocalUsers(args[0],))
 
 elif cmd == 'revokeSystemPermission':
   if len(args) != 3:
    print 'revokeSystemPermission requires 3 args'
    print('revokeSystemPermission requires 3 args')
     sys.exit(1)
   pp.pprint(client.revokeSystemPermission(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'revokeTablePermission':
   if len(args) != 4:
    print 'revokeTablePermission requires 4 args'
    print('revokeTablePermission requires 4 args')
     sys.exit(1)
   pp.pprint(client.revokeTablePermission(args[0],args[1],args[2],eval(args[3]),))
 
 elif cmd == 'createBatchScanner':
   if len(args) != 3:
    print 'createBatchScanner requires 3 args'
    print('createBatchScanner requires 3 args')
     sys.exit(1)
   pp.pprint(client.createBatchScanner(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'createScanner':
   if len(args) != 3:
    print 'createScanner requires 3 args'
    print('createScanner requires 3 args')
     sys.exit(1)
   pp.pprint(client.createScanner(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'hasNext':
   if len(args) != 1:
    print 'hasNext requires 1 args'
    print('hasNext requires 1 args')
     sys.exit(1)
   pp.pprint(client.hasNext(args[0],))
 
 elif cmd == 'nextEntry':
   if len(args) != 1:
    print 'nextEntry requires 1 args'
    print('nextEntry requires 1 args')
     sys.exit(1)
   pp.pprint(client.nextEntry(args[0],))
 
 elif cmd == 'nextK':
   if len(args) != 2:
    print 'nextK requires 2 args'
    print('nextK requires 2 args')
     sys.exit(1)
   pp.pprint(client.nextK(args[0],eval(args[1]),))
 
 elif cmd == 'closeScanner':
   if len(args) != 1:
    print 'closeScanner requires 1 args'
    print('closeScanner requires 1 args')
     sys.exit(1)
   pp.pprint(client.closeScanner(args[0],))
 
 elif cmd == 'updateAndFlush':
   if len(args) != 3:
    print 'updateAndFlush requires 3 args'
    print('updateAndFlush requires 3 args')
     sys.exit(1)
   pp.pprint(client.updateAndFlush(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'createWriter':
   if len(args) != 3:
    print 'createWriter requires 3 args'
    print('createWriter requires 3 args')
     sys.exit(1)
   pp.pprint(client.createWriter(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'update':
   if len(args) != 2:
    print 'update requires 2 args'
    print('update requires 2 args')
     sys.exit(1)
   pp.pprint(client.update(args[0],eval(args[1]),))
 
 elif cmd == 'flush':
   if len(args) != 1:
    print 'flush requires 1 args'
    print('flush requires 1 args')
     sys.exit(1)
   pp.pprint(client.flush(args[0],))
 
 elif cmd == 'closeWriter':
   if len(args) != 1:
    print 'closeWriter requires 1 args'
    print('closeWriter requires 1 args')
     sys.exit(1)
   pp.pprint(client.closeWriter(args[0],))
 
 elif cmd == 'updateRowConditionally':
   if len(args) != 4:
    print 'updateRowConditionally requires 4 args'
    print('updateRowConditionally requires 4 args')
     sys.exit(1)
   pp.pprint(client.updateRowConditionally(args[0],args[1],args[2],eval(args[3]),))
 
 elif cmd == 'createConditionalWriter':
   if len(args) != 3:
    print 'createConditionalWriter requires 3 args'
    print('createConditionalWriter requires 3 args')
     sys.exit(1)
   pp.pprint(client.createConditionalWriter(args[0],args[1],eval(args[2]),))
 
 elif cmd == 'updateRowsConditionally':
   if len(args) != 2:
    print 'updateRowsConditionally requires 2 args'
    print('updateRowsConditionally requires 2 args')
     sys.exit(1)
   pp.pprint(client.updateRowsConditionally(args[0],eval(args[1]),))
 
 elif cmd == 'closeConditionalWriter':
   if len(args) != 1:
    print 'closeConditionalWriter requires 1 args'
    print('closeConditionalWriter requires 1 args')
     sys.exit(1)
   pp.pprint(client.closeConditionalWriter(args[0],))
 
 elif cmd == 'getRowRange':
   if len(args) != 1:
    print 'getRowRange requires 1 args'
    print('getRowRange requires 1 args')
     sys.exit(1)
   pp.pprint(client.getRowRange(args[0],))
 
 elif cmd == 'getFollowing':
   if len(args) != 2:
    print 'getFollowing requires 2 args'
    print('getFollowing requires 2 args')
     sys.exit(1)
   pp.pprint(client.getFollowing(eval(args[0]),eval(args[1]),))
 
 else:
  print 'Unrecognized method %s' % cmd
  print('Unrecognized method %s' % cmd)
   sys.exit(1)
 
 transport.close()
diff --git a/proxy/src/main/python/AccumuloProxy.py b/proxy/src/main/python/AccumuloProxy.py
index 2805fff95..83c216c6e 100644
-- a/proxy/src/main/python/AccumuloProxy.py
++ b/proxy/src/main/python/AccumuloProxy.py
@@ -13,7 +13,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
# Autogenerated by Thrift Compiler (0.9.1)
# Autogenerated by Thrift Compiler (0.9.3)
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 #
@@ -21,6 +21,7 @@
 #
 
 from thrift.Thrift import TType, TMessageType, TException, TApplicationException
import logging
 from ttypes import *
 from thrift.Thrift import TProcessor
 from thrift.transport import TTransport
@@ -736,20 +737,21 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_login(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = login_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "login failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "login failed: unknown result")
 
   def addConstraint(self, login, tableName, constraintClassName):
     """
@@ -772,15 +774,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_addConstraint(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = addConstraint_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -789,7 +792,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "addConstraint failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "addConstraint failed: unknown result")
 
   def addSplits(self, login, tableName, splits):
     """
@@ -812,15 +815,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_addSplits(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = addSplits_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -852,15 +856,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_attachIterator(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = attachIterator_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -892,15 +897,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_checkIteratorConflicts(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = checkIteratorConflicts_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -928,15 +934,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_clearLocatorCache(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = clearLocatorCache_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     return
@@ -968,15 +975,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_cloneTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = cloneTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1018,15 +1026,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_compactTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = compactTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1054,15 +1063,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_cancelCompaction(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = cancelCompaction_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1094,15 +1104,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_createTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = createTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1130,15 +1141,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_deleteTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = deleteTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1170,15 +1182,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_deleteRows(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = deleteRows_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1208,15 +1221,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_exportTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = exportTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1250,15 +1264,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_flushTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = flushTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1286,15 +1301,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getDiskUsage(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getDiskUsage_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1303,7 +1319,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getDiskUsage failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getDiskUsage failed: unknown result")
 
   def getLocalityGroups(self, login, tableName):
     """
@@ -1324,15 +1340,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getLocalityGroups(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getLocalityGroups_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1341,7 +1358,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getLocalityGroups failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getLocalityGroups failed: unknown result")
 
   def getIteratorSetting(self, login, tableName, iteratorName, scope):
     """
@@ -1366,15 +1383,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getIteratorSetting(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getIteratorSetting_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1383,7 +1401,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getIteratorSetting failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getIteratorSetting failed: unknown result")
 
   def getMaxRow(self, login, tableName, auths, startRow, startInclusive, endRow, endInclusive):
     """
@@ -1414,15 +1432,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getMaxRow(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getMaxRow_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1431,7 +1450,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getMaxRow failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getMaxRow failed: unknown result")
 
   def getTableProperties(self, login, tableName):
     """
@@ -1452,15 +1471,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getTableProperties(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getTableProperties_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1469,7 +1489,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getTableProperties failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getTableProperties failed: unknown result")
 
   def importDirectory(self, login, tableName, importDir, failureDir, setTime):
     """
@@ -1496,15 +1516,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_importDirectory(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = importDirectory_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch3 is not None:
@@ -1534,15 +1555,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_importTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = importTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1572,15 +1594,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_listSplits(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = listSplits_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1589,7 +1612,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listSplits failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listSplits failed: unknown result")
 
   def listTables(self, login):
     """
@@ -1608,18 +1631,19 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_listTables(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = listTables_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listTables failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listTables failed: unknown result")
 
   def listIterators(self, login, tableName):
     """
@@ -1640,15 +1664,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_listIterators(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = listIterators_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1657,7 +1682,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listIterators failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listIterators failed: unknown result")
 
   def listConstraints(self, login, tableName):
     """
@@ -1678,15 +1703,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_listConstraints(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = listConstraints_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -1695,7 +1721,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listConstraints failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listConstraints failed: unknown result")
 
   def mergeTablets(self, login, tableName, startRow, endRow):
     """
@@ -1720,15 +1746,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_mergeTablets(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = mergeTablets_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1758,15 +1785,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_offlineTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = offlineTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1796,15 +1824,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_onlineTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = onlineTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1834,15 +1863,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_removeConstraint(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = removeConstraint_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1874,15 +1904,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_removeIterator(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = removeIterator_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1912,15 +1943,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_removeTableProperty(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = removeTableProperty_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1950,15 +1982,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_renameTable(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = renameTable_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -1990,15 +2023,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_setLocalityGroups(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = setLocalityGroups_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2030,15 +2064,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_setTableProperty(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = setTableProperty_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2070,15 +2105,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_splitRangeByTablets(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = splitRangeByTablets_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -2087,7 +2123,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "splitRangeByTablets failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "splitRangeByTablets failed: unknown result")
 
   def tableExists(self, login, tableName):
     """
@@ -2108,18 +2144,19 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_tableExists(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = tableExists_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
    raise TApplicationException(TApplicationException.MISSING_RESULT, "tableExists failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "tableExists failed: unknown result")
 
   def tableIdMap(self, login):
     """
@@ -2138,18 +2175,19 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_tableIdMap(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = tableIdMap_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
    raise TApplicationException(TApplicationException.MISSING_RESULT, "tableIdMap failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "tableIdMap failed: unknown result")
 
   def testTableClassLoad(self, login, tableName, className, asTypeName):
     """
@@ -2174,15 +2212,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_testTableClassLoad(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = testTableClassLoad_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -2191,7 +2230,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "testTableClassLoad failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "testTableClassLoad failed: unknown result")
 
   def pingTabletServer(self, login, tserver):
     """
@@ -2212,15 +2251,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_pingTabletServer(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = pingTabletServer_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2246,22 +2286,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getActiveScans(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getActiveScans_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getActiveScans failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getActiveScans failed: unknown result")
 
   def getActiveCompactions(self, login, tserver):
     """
@@ -2282,22 +2323,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getActiveCompactions(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getActiveCompactions_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getActiveCompactions failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getActiveCompactions failed: unknown result")
 
   def getSiteConfiguration(self, login):
     """
@@ -2316,22 +2358,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getSiteConfiguration(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getSiteConfiguration_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getSiteConfiguration failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getSiteConfiguration failed: unknown result")
 
   def getSystemConfiguration(self, login):
     """
@@ -2350,22 +2393,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getSystemConfiguration(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getSystemConfiguration_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getSystemConfiguration failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getSystemConfiguration failed: unknown result")
 
   def getTabletServers(self, login):
     """
@@ -2384,18 +2428,19 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getTabletServers(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getTabletServers_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getTabletServers failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getTabletServers failed: unknown result")
 
   def removeProperty(self, login, property):
     """
@@ -2416,15 +2461,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_removeProperty(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = removeProperty_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2452,15 +2498,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_setProperty(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = setProperty_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2488,22 +2535,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_testClassLoad(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = testClassLoad_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "testClassLoad failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "testClassLoad failed: unknown result")
 
   def authenticateUser(self, login, user, properties):
     """
@@ -2526,22 +2574,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_authenticateUser(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = authenticateUser_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "authenticateUser failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "authenticateUser failed: unknown result")
 
   def changeUserAuthorizations(self, login, user, authorizations):
     """
@@ -2564,15 +2613,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_changeUserAuthorizations(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = changeUserAuthorizations_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2600,15 +2650,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_changeLocalUserPassword(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = changeLocalUserPassword_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2636,15 +2687,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_createLocalUser(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = createLocalUser_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2670,15 +2722,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_dropLocalUser(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = dropLocalUser_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2704,22 +2757,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getUserAuthorizations(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getUserAuthorizations_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getUserAuthorizations failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getUserAuthorizations failed: unknown result")
 
   def grantSystemPermission(self, login, user, perm):
     """
@@ -2742,15 +2796,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_grantSystemPermission(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = grantSystemPermission_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2780,15 +2835,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_grantTablePermission(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = grantTablePermission_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2818,22 +2874,23 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_hasSystemPermission(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = hasSystemPermission_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
       raise result.ouch2
    raise TApplicationException(TApplicationException.MISSING_RESULT, "hasSystemPermission failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "hasSystemPermission failed: unknown result")
 
   def hasTablePermission(self, login, user, table, perm):
     """
@@ -2858,15 +2915,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_hasTablePermission(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = hasTablePermission_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -2875,7 +2933,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "hasTablePermission failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "hasTablePermission failed: unknown result")
 
   def listLocalUsers(self, login):
     """
@@ -2894,15 +2952,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_listLocalUsers(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = listLocalUsers_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -2911,7 +2970,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listLocalUsers failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "listLocalUsers failed: unknown result")
 
   def revokeSystemPermission(self, login, user, perm):
     """
@@ -2934,15 +2993,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_revokeSystemPermission(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = revokeSystemPermission_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -2972,15 +3032,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_revokeTablePermission(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = revokeTablePermission_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -3010,15 +3071,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_createBatchScanner(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = createBatchScanner_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -3027,7 +3089,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createBatchScanner failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createBatchScanner failed: unknown result")
 
   def createScanner(self, login, tableName, options):
     """
@@ -3050,15 +3112,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_createScanner(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = createScanner_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -3067,7 +3130,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createScanner failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createScanner failed: unknown result")
 
   def hasNext(self, scanner):
     """
@@ -3086,20 +3149,21 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_hasNext(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = hasNext_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
       raise result.ouch1
    raise TApplicationException(TApplicationException.MISSING_RESULT, "hasNext failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "hasNext failed: unknown result")
 
   def nextEntry(self, scanner):
     """
@@ -3118,15 +3182,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_nextEntry(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = nextEntry_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -3135,7 +3200,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "nextEntry failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "nextEntry failed: unknown result")
 
   def nextK(self, scanner, k):
     """
@@ -3156,15 +3221,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_nextK(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = nextK_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -3173,7 +3239,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "nextK failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "nextK failed: unknown result")
 
   def closeScanner(self, scanner):
     """
@@ -3192,15 +3258,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_closeScanner(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = closeScanner_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     return
@@ -3226,15 +3293,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_updateAndFlush(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = updateAndFlush_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.outch1 is not None:
       raise result.outch1
     if result.ouch2 is not None:
@@ -3266,15 +3334,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_createWriter(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = createWriter_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.outch1 is not None:
@@ -3283,7 +3352,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createWriter failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createWriter failed: unknown result")
 
   def update(self, writer, cells):
     """
@@ -3294,7 +3363,7 @@ class Client(Iface):
     self.send_update(writer, cells)
 
   def send_update(self, writer, cells):
    self._oprot.writeMessageBegin('update', TMessageType.CALL, self._seqid)
    self._oprot.writeMessageBegin('update', TMessageType.ONEWAY, self._seqid)
     args = update_args()
     args.writer = writer
     args.cells = cells
@@ -3318,15 +3387,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_flush(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = flush_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -3350,15 +3420,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_closeWriter(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = closeWriter_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.ouch1 is not None:
       raise result.ouch1
     if result.ouch2 is not None:
@@ -3388,15 +3459,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_updateRowConditionally(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = updateRowConditionally_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -3405,7 +3477,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "updateRowConditionally failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "updateRowConditionally failed: unknown result")
 
   def createConditionalWriter(self, login, tableName, options):
     """
@@ -3428,15 +3500,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_createConditionalWriter(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = createConditionalWriter_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -3445,7 +3518,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createConditionalWriter failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "createConditionalWriter failed: unknown result")
 
   def updateRowsConditionally(self, conditionalWriter, updates):
     """
@@ -3466,15 +3539,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_updateRowsConditionally(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = updateRowsConditionally_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
     if result.ouch1 is not None:
@@ -3483,7 +3557,7 @@ class Client(Iface):
       raise result.ouch2
     if result.ouch3 is not None:
       raise result.ouch3
    raise TApplicationException(TApplicationException.MISSING_RESULT, "updateRowsConditionally failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "updateRowsConditionally failed: unknown result")
 
   def closeConditionalWriter(self, conditionalWriter):
     """
@@ -3502,15 +3576,16 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_closeConditionalWriter(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = closeConditionalWriter_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     return
 
   def getRowRange(self, row):
@@ -3530,18 +3605,19 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getRowRange(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getRowRange_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getRowRange failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getRowRange failed: unknown result")
 
   def getFollowing(self, key, part):
     """
@@ -3562,18 +3638,19 @@ class Client(Iface):
     self._oprot.trans.flush()
 
   def recv_getFollowing(self):
    (fname, mtype, rseqid) = self._iprot.readMessageBegin()
    iprot = self._iprot
    (fname, mtype, rseqid) = iprot.readMessageBegin()
     if mtype == TMessageType.EXCEPTION:
       x = TApplicationException()
      x.read(self._iprot)
      self._iprot.readMessageEnd()
      x.read(iprot)
      iprot.readMessageEnd()
       raise x
     result = getFollowing_result()
    result.read(self._iprot)
    self._iprot.readMessageEnd()
    result.read(iprot)
    iprot.readMessageEnd()
     if result.success is not None:
       return result.success
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getFollowing failed: unknown result");
    raise TApplicationException(TApplicationException.MISSING_RESULT, "getFollowing failed: unknown result")
 
 
 class Processor(Iface, TProcessor):
@@ -3680,9 +3757,17 @@ class Processor(Iface, TProcessor):
     result = login_result()
     try:
       result.success = self._handler.login(args.principal, args.loginProperties)
    except AccumuloSecurityException, ouch2:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("login", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("login", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3694,13 +3779,23 @@ class Processor(Iface, TProcessor):
     result = addConstraint_result()
     try:
       result.success = self._handler.addConstraint(args.login, args.tableName, args.constraintClassName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("addConstraint", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("addConstraint", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3712,13 +3807,23 @@ class Processor(Iface, TProcessor):
     result = addSplits_result()
     try:
       self._handler.addSplits(args.login, args.tableName, args.splits)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("addSplits", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("addSplits", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3730,13 +3835,23 @@ class Processor(Iface, TProcessor):
     result = attachIterator_result()
     try:
       self._handler.attachIterator(args.login, args.tableName, args.setting, args.scopes)
    except AccumuloSecurityException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloSecurityException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloException, ouch2:
    except AccumuloException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("attachIterator", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("attachIterator", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3748,13 +3863,23 @@ class Processor(Iface, TProcessor):
     result = checkIteratorConflicts_result()
     try:
       self._handler.checkIteratorConflicts(args.login, args.tableName, args.setting, args.scopes)
    except AccumuloSecurityException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloSecurityException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloException, ouch2:
    except AccumuloException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("checkIteratorConflicts", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("checkIteratorConflicts", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3766,9 +3891,17 @@ class Processor(Iface, TProcessor):
     result = clearLocatorCache_result()
     try:
       self._handler.clearLocatorCache(args.login, args.tableName)
    except TableNotFoundException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except TableNotFoundException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    oprot.writeMessageBegin("clearLocatorCache", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("clearLocatorCache", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3780,15 +3913,26 @@ class Processor(Iface, TProcessor):
     result = cloneTable_result()
     try:
       self._handler.cloneTable(args.login, args.tableName, args.newTableName, args.flush, args.propertiesToSet, args.propertiesToExclude)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    except TableExistsException, ouch4:
    except TableExistsException as ouch4:
      msg_type = TMessageType.REPLY
       result.ouch4 = ouch4
    oprot.writeMessageBegin("cloneTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("cloneTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3800,13 +3944,23 @@ class Processor(Iface, TProcessor):
     result = compactTable_result()
     try:
       self._handler.compactTable(args.login, args.tableName, args.startRow, args.endRow, args.iterators, args.flush, args.wait, args.compactionStrategy)
    except AccumuloSecurityException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloSecurityException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except TableNotFoundException, ouch2:
    except TableNotFoundException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except AccumuloException, ouch3:
    except AccumuloException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("compactTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("compactTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3818,13 +3972,23 @@ class Processor(Iface, TProcessor):
     result = cancelCompaction_result()
     try:
       self._handler.cancelCompaction(args.login, args.tableName)
    except AccumuloSecurityException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloSecurityException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except TableNotFoundException, ouch2:
    except TableNotFoundException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except AccumuloException, ouch3:
    except AccumuloException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("cancelCompaction", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("cancelCompaction", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3836,13 +4000,23 @@ class Processor(Iface, TProcessor):
     result = createTable_result()
     try:
       self._handler.createTable(args.login, args.tableName, args.versioningIter, args.type)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableExistsException, ouch3:
    except TableExistsException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("createTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("createTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3854,13 +4028,23 @@ class Processor(Iface, TProcessor):
     result = deleteTable_result()
     try:
       self._handler.deleteTable(args.login, args.tableName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("deleteTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("deleteTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3872,13 +4056,23 @@ class Processor(Iface, TProcessor):
     result = deleteRows_result()
     try:
       self._handler.deleteRows(args.login, args.tableName, args.startRow, args.endRow)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("deleteRows", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("deleteRows", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3890,13 +4084,23 @@ class Processor(Iface, TProcessor):
     result = exportTable_result()
     try:
       self._handler.exportTable(args.login, args.tableName, args.exportDir)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("exportTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("exportTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3908,13 +4112,23 @@ class Processor(Iface, TProcessor):
     result = flushTable_result()
     try:
       self._handler.flushTable(args.login, args.tableName, args.startRow, args.endRow, args.wait)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("flushTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("flushTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3926,13 +4140,23 @@ class Processor(Iface, TProcessor):
     result = getDiskUsage_result()
     try:
       result.success = self._handler.getDiskUsage(args.login, args.tables)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("getDiskUsage", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getDiskUsage", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3944,13 +4168,23 @@ class Processor(Iface, TProcessor):
     result = getLocalityGroups_result()
     try:
       result.success = self._handler.getLocalityGroups(args.login, args.tableName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("getLocalityGroups", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getLocalityGroups", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3962,13 +4196,23 @@ class Processor(Iface, TProcessor):
     result = getIteratorSetting_result()
     try:
       result.success = self._handler.getIteratorSetting(args.login, args.tableName, args.iteratorName, args.scope)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("getIteratorSetting", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getIteratorSetting", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3980,13 +4224,23 @@ class Processor(Iface, TProcessor):
     result = getMaxRow_result()
     try:
       result.success = self._handler.getMaxRow(args.login, args.tableName, args.auths, args.startRow, args.startInclusive, args.endRow, args.endInclusive)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("getMaxRow", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getMaxRow", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -3998,13 +4252,23 @@ class Processor(Iface, TProcessor):
     result = getTableProperties_result()
     try:
       result.success = self._handler.getTableProperties(args.login, args.tableName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("getTableProperties", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getTableProperties", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4016,13 +4280,23 @@ class Processor(Iface, TProcessor):
     result = importDirectory_result()
     try:
       self._handler.importDirectory(args.login, args.tableName, args.importDir, args.failureDir, args.setTime)
    except TableNotFoundException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except TableNotFoundException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloException, ouch3:
    except AccumuloException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    except AccumuloSecurityException, ouch4:
    except AccumuloSecurityException as ouch4:
      msg_type = TMessageType.REPLY
       result.ouch4 = ouch4
    oprot.writeMessageBegin("importDirectory", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("importDirectory", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4034,13 +4308,23 @@ class Processor(Iface, TProcessor):
     result = importTable_result()
     try:
       self._handler.importTable(args.login, args.tableName, args.importDir)
    except TableExistsException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except TableExistsException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloException, ouch2:
    except AccumuloException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except AccumuloSecurityException, ouch3:
    except AccumuloSecurityException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("importTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("importTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4052,13 +4336,23 @@ class Processor(Iface, TProcessor):
     result = listSplits_result()
     try:
       result.success = self._handler.listSplits(args.login, args.tableName, args.maxSplits)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("listSplits", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("listSplits", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4068,8 +4362,16 @@ class Processor(Iface, TProcessor):
     args.read(iprot)
     iprot.readMessageEnd()
     result = listTables_result()
    result.success = self._handler.listTables(args.login)
    oprot.writeMessageBegin("listTables", TMessageType.REPLY, seqid)
    try:
      result.success = self._handler.listTables(args.login)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("listTables", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4081,13 +4383,23 @@ class Processor(Iface, TProcessor):
     result = listIterators_result()
     try:
       result.success = self._handler.listIterators(args.login, args.tableName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("listIterators", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("listIterators", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4099,13 +4411,23 @@ class Processor(Iface, TProcessor):
     result = listConstraints_result()
     try:
       result.success = self._handler.listConstraints(args.login, args.tableName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("listConstraints", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("listConstraints", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4117,13 +4439,23 @@ class Processor(Iface, TProcessor):
     result = mergeTablets_result()
     try:
       self._handler.mergeTablets(args.login, args.tableName, args.startRow, args.endRow)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("mergeTablets", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("mergeTablets", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4135,13 +4467,23 @@ class Processor(Iface, TProcessor):
     result = offlineTable_result()
     try:
       self._handler.offlineTable(args.login, args.tableName, args.wait)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("offlineTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("offlineTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4153,13 +4495,23 @@ class Processor(Iface, TProcessor):
     result = onlineTable_result()
     try:
       self._handler.onlineTable(args.login, args.tableName, args.wait)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("onlineTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("onlineTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4171,13 +4523,23 @@ class Processor(Iface, TProcessor):
     result = removeConstraint_result()
     try:
       self._handler.removeConstraint(args.login, args.tableName, args.constraint)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("removeConstraint", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("removeConstraint", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4189,13 +4551,23 @@ class Processor(Iface, TProcessor):
     result = removeIterator_result()
     try:
       self._handler.removeIterator(args.login, args.tableName, args.iterName, args.scopes)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("removeIterator", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("removeIterator", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4207,13 +4579,23 @@ class Processor(Iface, TProcessor):
     result = removeTableProperty_result()
     try:
       self._handler.removeTableProperty(args.login, args.tableName, args.property)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("removeTableProperty", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("removeTableProperty", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4225,15 +4607,26 @@ class Processor(Iface, TProcessor):
     result = renameTable_result()
     try:
       self._handler.renameTable(args.login, args.oldTableName, args.newTableName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    except TableExistsException, ouch4:
    except TableExistsException as ouch4:
      msg_type = TMessageType.REPLY
       result.ouch4 = ouch4
    oprot.writeMessageBegin("renameTable", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("renameTable", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4245,13 +4638,23 @@ class Processor(Iface, TProcessor):
     result = setLocalityGroups_result()
     try:
       self._handler.setLocalityGroups(args.login, args.tableName, args.groups)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("setLocalityGroups", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("setLocalityGroups", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4263,13 +4666,23 @@ class Processor(Iface, TProcessor):
     result = setTableProperty_result()
     try:
       self._handler.setTableProperty(args.login, args.tableName, args.property, args.value)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("setTableProperty", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("setTableProperty", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4281,13 +4694,23 @@ class Processor(Iface, TProcessor):
     result = splitRangeByTablets_result()
     try:
       result.success = self._handler.splitRangeByTablets(args.login, args.tableName, args.range, args.maxSplits)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("splitRangeByTablets", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("splitRangeByTablets", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4297,8 +4720,16 @@ class Processor(Iface, TProcessor):
     args.read(iprot)
     iprot.readMessageEnd()
     result = tableExists_result()
    result.success = self._handler.tableExists(args.login, args.tableName)
    oprot.writeMessageBegin("tableExists", TMessageType.REPLY, seqid)
    try:
      result.success = self._handler.tableExists(args.login, args.tableName)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("tableExists", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4308,8 +4739,16 @@ class Processor(Iface, TProcessor):
     args.read(iprot)
     iprot.readMessageEnd()
     result = tableIdMap_result()
    result.success = self._handler.tableIdMap(args.login)
    oprot.writeMessageBegin("tableIdMap", TMessageType.REPLY, seqid)
    try:
      result.success = self._handler.tableIdMap(args.login)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("tableIdMap", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4321,13 +4760,23 @@ class Processor(Iface, TProcessor):
     result = testTableClassLoad_result()
     try:
       result.success = self._handler.testTableClassLoad(args.login, args.tableName, args.className, args.asTypeName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("testTableClassLoad", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("testTableClassLoad", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4339,11 +4788,20 @@ class Processor(Iface, TProcessor):
     result = pingTabletServer_result()
     try:
       self._handler.pingTabletServer(args.login, args.tserver)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("pingTabletServer", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("pingTabletServer", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4355,11 +4813,20 @@ class Processor(Iface, TProcessor):
     result = getActiveScans_result()
     try:
       result.success = self._handler.getActiveScans(args.login, args.tserver)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("getActiveScans", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getActiveScans", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4371,11 +4838,20 @@ class Processor(Iface, TProcessor):
     result = getActiveCompactions_result()
     try:
       result.success = self._handler.getActiveCompactions(args.login, args.tserver)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("getActiveCompactions", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getActiveCompactions", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4387,11 +4863,20 @@ class Processor(Iface, TProcessor):
     result = getSiteConfiguration_result()
     try:
       result.success = self._handler.getSiteConfiguration(args.login)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("getSiteConfiguration", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getSiteConfiguration", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4403,11 +4888,20 @@ class Processor(Iface, TProcessor):
     result = getSystemConfiguration_result()
     try:
       result.success = self._handler.getSystemConfiguration(args.login)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("getSystemConfiguration", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getSystemConfiguration", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4417,8 +4911,16 @@ class Processor(Iface, TProcessor):
     args.read(iprot)
     iprot.readMessageEnd()
     result = getTabletServers_result()
    result.success = self._handler.getTabletServers(args.login)
    oprot.writeMessageBegin("getTabletServers", TMessageType.REPLY, seqid)
    try:
      result.success = self._handler.getTabletServers(args.login)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getTabletServers", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4430,11 +4932,20 @@ class Processor(Iface, TProcessor):
     result = removeProperty_result()
     try:
       self._handler.removeProperty(args.login, args.property)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("removeProperty", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("removeProperty", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4446,11 +4957,20 @@ class Processor(Iface, TProcessor):
     result = setProperty_result()
     try:
       self._handler.setProperty(args.login, args.property, args.value)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("setProperty", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("setProperty", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4462,11 +4982,20 @@ class Processor(Iface, TProcessor):
     result = testClassLoad_result()
     try:
       result.success = self._handler.testClassLoad(args.login, args.className, args.asTypeName)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("testClassLoad", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("testClassLoad", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4478,11 +5007,20 @@ class Processor(Iface, TProcessor):
     result = authenticateUser_result()
     try:
       result.success = self._handler.authenticateUser(args.login, args.user, args.properties)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("authenticateUser", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("authenticateUser", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4494,11 +5032,20 @@ class Processor(Iface, TProcessor):
     result = changeUserAuthorizations_result()
     try:
       self._handler.changeUserAuthorizations(args.login, args.user, args.authorizations)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("changeUserAuthorizations", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("changeUserAuthorizations", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4510,11 +5057,20 @@ class Processor(Iface, TProcessor):
     result = changeLocalUserPassword_result()
     try:
       self._handler.changeLocalUserPassword(args.login, args.user, args.password)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("changeLocalUserPassword", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("changeLocalUserPassword", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4526,11 +5082,20 @@ class Processor(Iface, TProcessor):
     result = createLocalUser_result()
     try:
       self._handler.createLocalUser(args.login, args.user, args.password)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("createLocalUser", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("createLocalUser", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4542,11 +5107,20 @@ class Processor(Iface, TProcessor):
     result = dropLocalUser_result()
     try:
       self._handler.dropLocalUser(args.login, args.user)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("dropLocalUser", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("dropLocalUser", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4558,11 +5132,20 @@ class Processor(Iface, TProcessor):
     result = getUserAuthorizations_result()
     try:
       result.success = self._handler.getUserAuthorizations(args.login, args.user)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("getUserAuthorizations", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getUserAuthorizations", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4574,11 +5157,20 @@ class Processor(Iface, TProcessor):
     result = grantSystemPermission_result()
     try:
       self._handler.grantSystemPermission(args.login, args.user, args.perm)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("grantSystemPermission", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("grantSystemPermission", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4590,13 +5182,23 @@ class Processor(Iface, TProcessor):
     result = grantTablePermission_result()
     try:
       self._handler.grantTablePermission(args.login, args.user, args.table, args.perm)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("grantTablePermission", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("grantTablePermission", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4608,11 +5210,20 @@ class Processor(Iface, TProcessor):
     result = hasSystemPermission_result()
     try:
       result.success = self._handler.hasSystemPermission(args.login, args.user, args.perm)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("hasSystemPermission", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("hasSystemPermission", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4624,13 +5235,23 @@ class Processor(Iface, TProcessor):
     result = hasTablePermission_result()
     try:
       result.success = self._handler.hasTablePermission(args.login, args.user, args.table, args.perm)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("hasTablePermission", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("hasTablePermission", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4642,13 +5263,23 @@ class Processor(Iface, TProcessor):
     result = listLocalUsers_result()
     try:
       result.success = self._handler.listLocalUsers(args.login)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("listLocalUsers", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("listLocalUsers", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4660,11 +5291,20 @@ class Processor(Iface, TProcessor):
     result = revokeSystemPermission_result()
     try:
       self._handler.revokeSystemPermission(args.login, args.user, args.perm)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("revokeSystemPermission", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("revokeSystemPermission", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4676,13 +5316,23 @@ class Processor(Iface, TProcessor):
     result = revokeTablePermission_result()
     try:
       self._handler.revokeTablePermission(args.login, args.user, args.table, args.perm)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("revokeTablePermission", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("revokeTablePermission", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4694,13 +5344,23 @@ class Processor(Iface, TProcessor):
     result = createBatchScanner_result()
     try:
       result.success = self._handler.createBatchScanner(args.login, args.tableName, args.options)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("createBatchScanner", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("createBatchScanner", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4712,13 +5372,23 @@ class Processor(Iface, TProcessor):
     result = createScanner_result()
     try:
       result.success = self._handler.createScanner(args.login, args.tableName, args.options)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("createScanner", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("createScanner", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4730,9 +5400,17 @@ class Processor(Iface, TProcessor):
     result = hasNext_result()
     try:
       result.success = self._handler.hasNext(args.scanner)
    except UnknownScanner, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except UnknownScanner as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    oprot.writeMessageBegin("hasNext", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("hasNext", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4744,13 +5422,23 @@ class Processor(Iface, TProcessor):
     result = nextEntry_result()
     try:
       result.success = self._handler.nextEntry(args.scanner)
    except NoMoreEntriesException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except NoMoreEntriesException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except UnknownScanner, ouch2:
    except UnknownScanner as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except AccumuloSecurityException, ouch3:
    except AccumuloSecurityException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("nextEntry", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("nextEntry", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4762,13 +5450,23 @@ class Processor(Iface, TProcessor):
     result = nextK_result()
     try:
       result.success = self._handler.nextK(args.scanner, args.k)
    except NoMoreEntriesException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except NoMoreEntriesException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except UnknownScanner, ouch2:
    except UnknownScanner as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except AccumuloSecurityException, ouch3:
    except AccumuloSecurityException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("nextK", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("nextK", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4780,9 +5478,17 @@ class Processor(Iface, TProcessor):
     result = closeScanner_result()
     try:
       self._handler.closeScanner(args.scanner)
    except UnknownScanner, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except UnknownScanner as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    oprot.writeMessageBegin("closeScanner", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("closeScanner", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4794,15 +5500,26 @@ class Processor(Iface, TProcessor):
     result = updateAndFlush_result()
     try:
       self._handler.updateAndFlush(args.login, args.tableName, args.cells)
    except AccumuloException, outch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as outch1:
      msg_type = TMessageType.REPLY
       result.outch1 = outch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    except MutationsRejectedException, ouch4:
    except MutationsRejectedException as ouch4:
      msg_type = TMessageType.REPLY
       result.ouch4 = ouch4
    oprot.writeMessageBegin("updateAndFlush", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("updateAndFlush", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4814,13 +5531,23 @@ class Processor(Iface, TProcessor):
     result = createWriter_result()
     try:
       result.success = self._handler.createWriter(args.login, args.tableName, args.opts)
    except AccumuloException, outch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as outch1:
      msg_type = TMessageType.REPLY
       result.outch1 = outch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("createWriter", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("createWriter", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4829,8 +5556,13 @@ class Processor(Iface, TProcessor):
     args = update_args()
     args.read(iprot)
     iprot.readMessageEnd()
    self._handler.update(args.writer, args.cells)
    return
    try:
      self._handler.update(args.writer, args.cells)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except:
      pass
 
   def process_flush(self, seqid, iprot, oprot):
     args = flush_args()
@@ -4839,11 +5571,20 @@ class Processor(Iface, TProcessor):
     result = flush_result()
     try:
       self._handler.flush(args.writer)
    except UnknownWriter, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except UnknownWriter as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except MutationsRejectedException, ouch2:
    except MutationsRejectedException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("flush", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("flush", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4855,11 +5596,20 @@ class Processor(Iface, TProcessor):
     result = closeWriter_result()
     try:
       self._handler.closeWriter(args.writer)
    except UnknownWriter, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except UnknownWriter as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except MutationsRejectedException, ouch2:
    except MutationsRejectedException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    oprot.writeMessageBegin("closeWriter", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("closeWriter", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4871,13 +5621,23 @@ class Processor(Iface, TProcessor):
     result = updateRowConditionally_result()
     try:
       result.success = self._handler.updateRowConditionally(args.login, args.tableName, args.row, args.updates)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("updateRowConditionally", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("updateRowConditionally", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4889,13 +5649,23 @@ class Processor(Iface, TProcessor):
     result = createConditionalWriter_result()
     try:
       result.success = self._handler.createConditionalWriter(args.login, args.tableName, args.options)
    except AccumuloException, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except AccumuloException as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloSecurityException, ouch2:
    except AccumuloSecurityException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except TableNotFoundException, ouch3:
    except TableNotFoundException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("createConditionalWriter", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("createConditionalWriter", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4907,13 +5677,23 @@ class Processor(Iface, TProcessor):
     result = updateRowsConditionally_result()
     try:
       result.success = self._handler.updateRowsConditionally(args.conditionalWriter, args.updates)
    except UnknownWriter, ouch1:
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except UnknownWriter as ouch1:
      msg_type = TMessageType.REPLY
       result.ouch1 = ouch1
    except AccumuloException, ouch2:
    except AccumuloException as ouch2:
      msg_type = TMessageType.REPLY
       result.ouch2 = ouch2
    except AccumuloSecurityException, ouch3:
    except AccumuloSecurityException as ouch3:
      msg_type = TMessageType.REPLY
       result.ouch3 = ouch3
    oprot.writeMessageBegin("updateRowsConditionally", TMessageType.REPLY, seqid)
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("updateRowsConditionally", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4923,8 +5703,16 @@ class Processor(Iface, TProcessor):
     args.read(iprot)
     iprot.readMessageEnd()
     result = closeConditionalWriter_result()
    self._handler.closeConditionalWriter(args.conditionalWriter)
    oprot.writeMessageBegin("closeConditionalWriter", TMessageType.REPLY, seqid)
    try:
      self._handler.closeConditionalWriter(args.conditionalWriter)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("closeConditionalWriter", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4934,8 +5722,16 @@ class Processor(Iface, TProcessor):
     args.read(iprot)
     iprot.readMessageEnd()
     result = getRowRange_result()
    result.success = self._handler.getRowRange(args.row)
    oprot.writeMessageBegin("getRowRange", TMessageType.REPLY, seqid)
    try:
      result.success = self._handler.getRowRange(args.row)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getRowRange", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4945,8 +5741,16 @@ class Processor(Iface, TProcessor):
     args.read(iprot)
     iprot.readMessageEnd()
     result = getFollowing_result()
    result.success = self._handler.getFollowing(args.key, args.part)
    oprot.writeMessageBegin("getFollowing", TMessageType.REPLY, seqid)
    try:
      result.success = self._handler.getFollowing(args.key, args.part)
      msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
      raise
    except Exception as ex:
      msg_type = TMessageType.EXCEPTION
      logging.exception(ex)
      result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin("getFollowing", msg_type, seqid)
     result.write(oprot)
     oprot.writeMessageEnd()
     oprot.trans.flush()
@@ -4982,7 +5786,7 @@ class login_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.principal = iprot.readString();
          self.principal = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
@@ -4990,8 +5794,8 @@ class login_args:
           self.loginProperties = {}
           (_ktype145, _vtype146, _size144 ) = iprot.readMapBegin()
           for _i148 in xrange(_size144):
            _key149 = iprot.readString();
            _val150 = iprot.readString();
            _key149 = iprot.readString()
            _val150 = iprot.readString()
             self.loginProperties[_key149] = _val150
           iprot.readMapEnd()
         else:
@@ -5025,6 +5829,12 @@ class login_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.principal)
    value = (value * 31) ^ hash(self.loginProperties)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5063,7 +5873,7 @@ class login_result:
         break
       if fid == 0:
         if ftype == TType.STRING:
          self.success = iprot.readString();
          self.success = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -5097,6 +5907,12 @@ class login_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5139,17 +5955,17 @@ class addConstraint_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.constraintClassName = iprot.readString();
          self.constraintClassName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -5181,6 +5997,13 @@ class addConstraint_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.constraintClassName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5225,7 +6048,7 @@ class addConstraint_result:
         break
       if fid == 0:
         if ftype == TType.I32:
          self.success = iprot.readI32();
          self.success = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -5279,6 +6102,14 @@ class addConstraint_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5321,12 +6152,12 @@ class addSplits_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -5334,7 +6165,7 @@ class addSplits_args:
           self.splits = set()
           (_etype156, _size153) = iprot.readSetBegin()
           for _i157 in xrange(_size153):
            _elem158 = iprot.readString();
            _elem158 = iprot.readString()
             self.splits.add(_elem158)
           iprot.readSetEnd()
         else:
@@ -5371,6 +6202,13 @@ class addSplits_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.splits)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5458,6 +6296,13 @@ class addSplits_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5503,12 +6348,12 @@ class attachIterator_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -5522,7 +6367,7 @@ class attachIterator_args:
           self.scopes = set()
           (_etype163, _size160) = iprot.readSetBegin()
           for _i164 in xrange(_size160):
            _elem165 = iprot.readI32();
            _elem165 = iprot.readI32()
             self.scopes.add(_elem165)
           iprot.readSetEnd()
         else:
@@ -5563,6 +6408,14 @@ class attachIterator_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.setting)
    value = (value * 31) ^ hash(self.scopes)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5650,6 +6503,13 @@ class attachIterator_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5695,12 +6555,12 @@ class checkIteratorConflicts_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -5714,7 +6574,7 @@ class checkIteratorConflicts_args:
           self.scopes = set()
           (_etype170, _size167) = iprot.readSetBegin()
           for _i171 in xrange(_size167):
            _elem172 = iprot.readI32();
            _elem172 = iprot.readI32()
             self.scopes.add(_elem172)
           iprot.readSetEnd()
         else:
@@ -5755,6 +6615,14 @@ class checkIteratorConflicts_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.setting)
    value = (value * 31) ^ hash(self.scopes)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5842,6 +6710,13 @@ class checkIteratorConflicts_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5881,12 +6756,12 @@ class clearLocatorCache_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -5914,6 +6789,12 @@ class clearLocatorCache_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -5975,6 +6856,11 @@ class clearLocatorCache_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6026,22 +6912,22 @@ class cloneTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.newTableName = iprot.readString();
          self.newTableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.BOOL:
          self.flush = iprot.readBool();
          self.flush = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 5:
@@ -6049,8 +6935,8 @@ class cloneTable_args:
           self.propertiesToSet = {}
           (_ktype175, _vtype176, _size174 ) = iprot.readMapBegin()
           for _i178 in xrange(_size174):
            _key179 = iprot.readString();
            _val180 = iprot.readString();
            _key179 = iprot.readString()
            _val180 = iprot.readString()
             self.propertiesToSet[_key179] = _val180
           iprot.readMapEnd()
         else:
@@ -6060,7 +6946,7 @@ class cloneTable_args:
           self.propertiesToExclude = set()
           (_etype184, _size181) = iprot.readSetBegin()
           for _i185 in xrange(_size181):
            _elem186 = iprot.readString();
            _elem186 = iprot.readString()
             self.propertiesToExclude.add(_elem186)
           iprot.readSetEnd()
         else:
@@ -6113,6 +6999,16 @@ class cloneTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.newTableName)
    value = (value * 31) ^ hash(self.flush)
    value = (value * 31) ^ hash(self.propertiesToSet)
    value = (value * 31) ^ hash(self.propertiesToExclude)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6213,6 +7109,14 @@ class cloneTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    value = (value * 31) ^ hash(self.ouch4)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6270,22 +7174,22 @@ class compactTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.startRow = iprot.readString();
          self.startRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.endRow = iprot.readString();
          self.endRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 5:
@@ -6301,12 +7205,12 @@ class compactTable_args:
           iprot.skip(ftype)
       elif fid == 6:
         if ftype == TType.BOOL:
          self.flush = iprot.readBool();
          self.flush = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 7:
         if ftype == TType.BOOL:
          self.wait = iprot.readBool();
          self.wait = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 8:
@@ -6367,6 +7271,18 @@ class compactTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.startRow)
    value = (value * 31) ^ hash(self.endRow)
    value = (value * 31) ^ hash(self.iterators)
    value = (value * 31) ^ hash(self.flush)
    value = (value * 31) ^ hash(self.wait)
    value = (value * 31) ^ hash(self.compactionStrategy)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6454,6 +7370,13 @@ class compactTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6493,12 +7416,12 @@ class cancelCompaction_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -6526,6 +7449,12 @@ class cancelCompaction_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6613,6 +7542,13 @@ class cancelCompaction_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6658,22 +7594,22 @@ class createTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.BOOL:
          self.versioningIter = iprot.readBool();
          self.versioningIter = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I32:
          self.type = iprot.readI32();
          self.type = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -6709,6 +7645,14 @@ class createTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.versioningIter)
    value = (value * 31) ^ hash(self.type)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6796,6 +7740,13 @@ class createTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6835,12 +7786,12 @@ class deleteTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -6868,6 +7819,12 @@ class deleteTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -6955,6 +7912,13 @@ class deleteTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7000,22 +7964,22 @@ class deleteRows_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.startRow = iprot.readString();
          self.startRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.endRow = iprot.readString();
          self.endRow = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -7051,6 +8015,14 @@ class deleteRows_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.startRow)
    value = (value * 31) ^ hash(self.endRow)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7138,6 +8110,13 @@ class deleteRows_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7180,17 +8159,17 @@ class exportTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.exportDir = iprot.readString();
          self.exportDir = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -7222,6 +8201,13 @@ class exportTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.exportDir)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7309,6 +8295,13 @@ class exportTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7357,27 +8350,27 @@ class flushTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.startRow = iprot.readString();
          self.startRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.endRow = iprot.readString();
          self.endRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.BOOL:
          self.wait = iprot.readBool();
          self.wait = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -7417,6 +8410,15 @@ class flushTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.startRow)
    value = (value * 31) ^ hash(self.endRow)
    value = (value * 31) ^ hash(self.wait)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7504,6 +8506,13 @@ class flushTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7543,7 +8552,7 @@ class getDiskUsage_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
@@ -7551,7 +8560,7 @@ class getDiskUsage_args:
           self.tables = set()
           (_etype200, _size197) = iprot.readSetBegin()
           for _i201 in xrange(_size197):
            _elem202 = iprot.readString();
            _elem202 = iprot.readString()
             self.tables.add(_elem202)
           iprot.readSetEnd()
         else:
@@ -7584,6 +8593,12 @@ class getDiskUsage_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tables)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7691,6 +8706,14 @@ class getDiskUsage_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7730,12 +8753,12 @@ class getLocalityGroups_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -7763,6 +8786,12 @@ class getLocalityGroups_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7810,11 +8839,11 @@ class getLocalityGroups_result:
           self.success = {}
           (_ktype212, _vtype213, _size211 ) = iprot.readMapBegin()
           for _i215 in xrange(_size211):
            _key216 = iprot.readString();
            _key216 = iprot.readString()
             _val217 = set()
             (_etype221, _size218) = iprot.readSetBegin()
             for _i222 in xrange(_size218):
              _elem223 = iprot.readString();
              _elem223 = iprot.readString()
               _val217.add(_elem223)
             iprot.readSetEnd()
             self.success[_key216] = _val217
@@ -7879,6 +8908,14 @@ class getLocalityGroups_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -7924,22 +8961,22 @@ class getIteratorSetting_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.iteratorName = iprot.readString();
          self.iteratorName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I32:
          self.scope = iprot.readI32();
          self.scope = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -7975,6 +9012,14 @@ class getIteratorSetting_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.iteratorName)
    value = (value * 31) ^ hash(self.scope)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8074,6 +9119,14 @@ class getIteratorSetting_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8128,12 +9181,12 @@ class getMaxRow_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -8141,29 +9194,29 @@ class getMaxRow_args:
           self.auths = set()
           (_etype230, _size227) = iprot.readSetBegin()
           for _i231 in xrange(_size227):
            _elem232 = iprot.readString();
            _elem232 = iprot.readString()
             self.auths.add(_elem232)
           iprot.readSetEnd()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.startRow = iprot.readString();
          self.startRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.BOOL:
          self.startInclusive = iprot.readBool();
          self.startInclusive = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 6:
         if ftype == TType.STRING:
          self.endRow = iprot.readString();
          self.endRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 7:
         if ftype == TType.BOOL:
          self.endInclusive = iprot.readBool();
          self.endInclusive = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -8214,6 +9267,17 @@ class getMaxRow_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.auths)
    value = (value * 31) ^ hash(self.startRow)
    value = (value * 31) ^ hash(self.startInclusive)
    value = (value * 31) ^ hash(self.endRow)
    value = (value * 31) ^ hash(self.endInclusive)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8258,7 +9322,7 @@ class getMaxRow_result:
         break
       if fid == 0:
         if ftype == TType.STRING:
          self.success = iprot.readString();
          self.success = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -8312,6 +9376,14 @@ class getMaxRow_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8351,12 +9423,12 @@ class getTableProperties_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -8384,6 +9456,12 @@ class getTableProperties_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8431,8 +9509,8 @@ class getTableProperties_result:
           self.success = {}
           (_ktype235, _vtype236, _size234 ) = iprot.readMapBegin()
           for _i238 in xrange(_size234):
            _key239 = iprot.readString();
            _val240 = iprot.readString();
            _key239 = iprot.readString()
            _val240 = iprot.readString()
             self.success[_key239] = _val240
           iprot.readMapEnd()
         else:
@@ -8492,6 +9570,14 @@ class getTableProperties_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8540,27 +9626,27 @@ class importDirectory_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.importDir = iprot.readString();
          self.importDir = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.failureDir = iprot.readString();
          self.failureDir = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.BOOL:
          self.setTime = iprot.readBool();
          self.setTime = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -8600,6 +9686,15 @@ class importDirectory_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.importDir)
    value = (value * 31) ^ hash(self.failureDir)
    value = (value * 31) ^ hash(self.setTime)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8687,6 +9782,13 @@ class importDirectory_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch3)
    value = (value * 31) ^ hash(self.ouch4)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8729,17 +9831,17 @@ class importTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.importDir = iprot.readString();
          self.importDir = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -8771,6 +9873,13 @@ class importTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.importDir)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8858,6 +9967,13 @@ class importTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8900,17 +10016,17 @@ class listSplits_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.I32:
          self.maxSplits = iprot.readI32();
          self.maxSplits = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -8942,6 +10058,13 @@ class listSplits_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.maxSplits)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -8989,7 +10112,7 @@ class listSplits_result:
           self.success = []
           (_etype246, _size243) = iprot.readListBegin()
           for _i247 in xrange(_size243):
            _elem248 = iprot.readString();
            _elem248 = iprot.readString()
             self.success.append(_elem248)
           iprot.readListEnd()
         else:
@@ -9048,6 +10171,14 @@ class listSplits_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9084,7 +10215,7 @@ class listTables_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -9108,6 +10239,11 @@ class listTables_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9146,7 +10282,7 @@ class listTables_result:
           self.success = set()
           (_etype253, _size250) = iprot.readSetBegin()
           for _i254 in xrange(_size250):
            _elem255 = iprot.readString();
            _elem255 = iprot.readString()
             self.success.add(_elem255)
           iprot.readSetEnd()
         else:
@@ -9175,6 +10311,11 @@ class listTables_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9214,12 +10355,12 @@ class listIterators_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -9247,6 +10388,12 @@ class listIterators_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9294,11 +10441,11 @@ class listIterators_result:
           self.success = {}
           (_ktype258, _vtype259, _size257 ) = iprot.readMapBegin()
           for _i261 in xrange(_size257):
            _key262 = iprot.readString();
            _key262 = iprot.readString()
             _val263 = set()
             (_etype267, _size264) = iprot.readSetBegin()
             for _i268 in xrange(_size264):
              _elem269 = iprot.readI32();
              _elem269 = iprot.readI32()
               _val263.add(_elem269)
             iprot.readSetEnd()
             self.success[_key262] = _val263
@@ -9363,6 +10510,14 @@ class listIterators_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9402,12 +10557,12 @@ class listConstraints_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -9435,6 +10590,12 @@ class listConstraints_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9482,8 +10643,8 @@ class listConstraints_result:
           self.success = {}
           (_ktype274, _vtype275, _size273 ) = iprot.readMapBegin()
           for _i277 in xrange(_size273):
            _key278 = iprot.readString();
            _val279 = iprot.readI32();
            _key278 = iprot.readString()
            _val279 = iprot.readI32()
             self.success[_key278] = _val279
           iprot.readMapEnd()
         else:
@@ -9543,6 +10704,14 @@ class listConstraints_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9588,22 +10757,22 @@ class mergeTablets_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.startRow = iprot.readString();
          self.startRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.endRow = iprot.readString();
          self.endRow = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -9639,6 +10808,14 @@ class mergeTablets_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.startRow)
    value = (value * 31) ^ hash(self.endRow)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9726,6 +10903,13 @@ class mergeTablets_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9768,17 +10952,17 @@ class offlineTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.BOOL:
          self.wait = iprot.readBool();
          self.wait = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -9810,6 +10994,13 @@ class offlineTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.wait)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9897,6 +11088,13 @@ class offlineTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -9939,17 +11137,17 @@ class onlineTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.BOOL:
          self.wait = iprot.readBool();
          self.wait = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -9981,6 +11179,13 @@ class onlineTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.wait)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10068,6 +11273,13 @@ class onlineTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10110,17 +11322,17 @@ class removeConstraint_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.I32:
          self.constraint = iprot.readI32();
          self.constraint = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -10152,6 +11364,13 @@ class removeConstraint_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.constraint)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10239,6 +11458,13 @@ class removeConstraint_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10284,17 +11510,17 @@ class removeIterator_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.iterName = iprot.readString();
          self.iterName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
@@ -10302,7 +11528,7 @@ class removeIterator_args:
           self.scopes = set()
           (_etype285, _size282) = iprot.readSetBegin()
           for _i286 in xrange(_size282):
            _elem287 = iprot.readI32();
            _elem287 = iprot.readI32()
             self.scopes.add(_elem287)
           iprot.readSetEnd()
         else:
@@ -10343,6 +11569,14 @@ class removeIterator_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.iterName)
    value = (value * 31) ^ hash(self.scopes)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10430,6 +11664,13 @@ class removeIterator_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10472,17 +11713,17 @@ class removeTableProperty_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.property = iprot.readString();
          self.property = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -10514,6 +11755,13 @@ class removeTableProperty_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.property)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10601,6 +11849,13 @@ class removeTableProperty_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10643,17 +11898,17 @@ class renameTable_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.oldTableName = iprot.readString();
          self.oldTableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.newTableName = iprot.readString();
          self.newTableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -10685,6 +11940,13 @@ class renameTable_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.oldTableName)
    value = (value * 31) ^ hash(self.newTableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10785,6 +12047,14 @@ class renameTable_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    value = (value * 31) ^ hash(self.ouch4)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10827,12 +12097,12 @@ class setLocalityGroups_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -10840,11 +12110,11 @@ class setLocalityGroups_args:
           self.groups = {}
           (_ktype290, _vtype291, _size289 ) = iprot.readMapBegin()
           for _i293 in xrange(_size289):
            _key294 = iprot.readString();
            _key294 = iprot.readString()
             _val295 = set()
             (_etype299, _size296) = iprot.readSetBegin()
             for _i300 in xrange(_size296):
              _elem301 = iprot.readString();
              _elem301 = iprot.readString()
               _val295.add(_elem301)
             iprot.readSetEnd()
             self.groups[_key294] = _val295
@@ -10887,6 +12157,13 @@ class setLocalityGroups_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.groups)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -10974,6 +12251,13 @@ class setLocalityGroups_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11019,22 +12303,22 @@ class setTableProperty_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.property = iprot.readString();
          self.property = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.value = iprot.readString();
          self.value = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -11070,6 +12354,14 @@ class setTableProperty_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.property)
    value = (value * 31) ^ hash(self.value)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11157,6 +12449,13 @@ class setTableProperty_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11202,12 +12501,12 @@ class splitRangeByTablets_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -11218,7 +12517,7 @@ class splitRangeByTablets_args:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I32:
          self.maxSplits = iprot.readI32();
          self.maxSplits = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -11254,6 +12553,14 @@ class splitRangeByTablets_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.range)
    value = (value * 31) ^ hash(self.maxSplits)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11361,6 +12668,14 @@ class splitRangeByTablets_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11400,12 +12715,12 @@ class tableExists_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -11433,6 +12748,12 @@ class tableExists_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11468,7 +12789,7 @@ class tableExists_result:
         break
       if fid == 0:
         if ftype == TType.BOOL:
          self.success = iprot.readBool();
          self.success = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -11492,6 +12813,11 @@ class tableExists_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11528,7 +12854,7 @@ class tableIdMap_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -11552,6 +12878,11 @@ class tableIdMap_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11590,8 +12921,8 @@ class tableIdMap_result:
           self.success = {}
           (_ktype313, _vtype314, _size312 ) = iprot.readMapBegin()
           for _i316 in xrange(_size312):
            _key317 = iprot.readString();
            _val318 = iprot.readString();
            _key317 = iprot.readString()
            _val318 = iprot.readString()
             self.success[_key317] = _val318
           iprot.readMapEnd()
         else:
@@ -11621,6 +12952,11 @@ class tableIdMap_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11666,22 +13002,22 @@ class testTableClassLoad_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.className = iprot.readString();
          self.className = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.asTypeName = iprot.readString();
          self.asTypeName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -11717,6 +13053,14 @@ class testTableClassLoad_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.className)
    value = (value * 31) ^ hash(self.asTypeName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11761,7 +13105,7 @@ class testTableClassLoad_result:
         break
       if fid == 0:
         if ftype == TType.BOOL:
          self.success = iprot.readBool();
          self.success = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -11815,6 +13159,14 @@ class testTableClassLoad_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11854,12 +13206,12 @@ class pingTabletServer_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tserver = iprot.readString();
          self.tserver = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -11887,6 +13239,12 @@ class pingTabletServer_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tserver)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -11961,6 +13319,12 @@ class pingTabletServer_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12000,12 +13364,12 @@ class getActiveScans_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tserver = iprot.readString();
          self.tserver = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -12033,6 +13397,12 @@ class getActiveScans_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tserver)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12127,6 +13497,13 @@ class getActiveScans_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12166,12 +13543,12 @@ class getActiveCompactions_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tserver = iprot.readString();
          self.tserver = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -12199,6 +13576,12 @@ class getActiveCompactions_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tserver)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12293,6 +13676,13 @@ class getActiveCompactions_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12329,7 +13719,7 @@ class getSiteConfiguration_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -12353,6 +13743,11 @@ class getSiteConfiguration_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12397,8 +13792,8 @@ class getSiteConfiguration_result:
           self.success = {}
           (_ktype336, _vtype337, _size335 ) = iprot.readMapBegin()
           for _i339 in xrange(_size335):
            _key340 = iprot.readString();
            _val341 = iprot.readString();
            _key340 = iprot.readString()
            _val341 = iprot.readString()
             self.success[_key340] = _val341
           iprot.readMapEnd()
         else:
@@ -12448,6 +13843,13 @@ class getSiteConfiguration_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12484,7 +13886,7 @@ class getSystemConfiguration_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -12508,6 +13910,11 @@ class getSystemConfiguration_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12552,8 +13959,8 @@ class getSystemConfiguration_result:
           self.success = {}
           (_ktype345, _vtype346, _size344 ) = iprot.readMapBegin()
           for _i348 in xrange(_size344):
            _key349 = iprot.readString();
            _val350 = iprot.readString();
            _key349 = iprot.readString()
            _val350 = iprot.readString()
             self.success[_key349] = _val350
           iprot.readMapEnd()
         else:
@@ -12603,6 +14010,13 @@ class getSystemConfiguration_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12639,7 +14053,7 @@ class getTabletServers_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -12663,6 +14077,11 @@ class getTabletServers_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12701,7 +14120,7 @@ class getTabletServers_result:
           self.success = []
           (_etype356, _size353) = iprot.readListBegin()
           for _i357 in xrange(_size353):
            _elem358 = iprot.readString();
            _elem358 = iprot.readString()
             self.success.append(_elem358)
           iprot.readListEnd()
         else:
@@ -12730,6 +14149,11 @@ class getTabletServers_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12769,12 +14193,12 @@ class removeProperty_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.property = iprot.readString();
          self.property = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -12802,6 +14226,12 @@ class removeProperty_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.property)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12876,6 +14306,12 @@ class removeProperty_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -12918,17 +14354,17 @@ class setProperty_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.property = iprot.readString();
          self.property = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.value = iprot.readString();
          self.value = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -12960,6 +14396,13 @@ class setProperty_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.property)
    value = (value * 31) ^ hash(self.value)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13034,6 +14477,12 @@ class setProperty_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13076,17 +14525,17 @@ class testClassLoad_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.className = iprot.readString();
          self.className = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.asTypeName = iprot.readString();
          self.asTypeName = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -13118,6 +14567,13 @@ class testClassLoad_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.className)
    value = (value * 31) ^ hash(self.asTypeName)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13159,7 +14615,7 @@ class testClassLoad_result:
         break
       if fid == 0:
         if ftype == TType.BOOL:
          self.success = iprot.readBool();
          self.success = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -13203,6 +14659,13 @@ class testClassLoad_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13245,12 +14708,12 @@ class authenticateUser_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -13258,8 +14721,8 @@ class authenticateUser_args:
           self.properties = {}
           (_ktype361, _vtype362, _size360 ) = iprot.readMapBegin()
           for _i364 in xrange(_size360):
            _key365 = iprot.readString();
            _val366 = iprot.readString();
            _key365 = iprot.readString()
            _val366 = iprot.readString()
             self.properties[_key365] = _val366
           iprot.readMapEnd()
         else:
@@ -13297,6 +14760,13 @@ class authenticateUser_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.properties)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13338,7 +14808,7 @@ class authenticateUser_result:
         break
       if fid == 0:
         if ftype == TType.BOOL:
          self.success = iprot.readBool();
          self.success = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -13382,6 +14852,13 @@ class authenticateUser_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13424,12 +14901,12 @@ class changeUserAuthorizations_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -13437,7 +14914,7 @@ class changeUserAuthorizations_args:
           self.authorizations = set()
           (_etype372, _size369) = iprot.readSetBegin()
           for _i373 in xrange(_size369):
            _elem374 = iprot.readString();
            _elem374 = iprot.readString()
             self.authorizations.add(_elem374)
           iprot.readSetEnd()
         else:
@@ -13474,6 +14951,13 @@ class changeUserAuthorizations_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.authorizations)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13548,6 +15032,12 @@ class changeUserAuthorizations_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13590,17 +15080,17 @@ class changeLocalUserPassword_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.password = iprot.readString();
          self.password = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -13632,6 +15122,13 @@ class changeLocalUserPassword_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.password)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13706,6 +15203,12 @@ class changeLocalUserPassword_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13748,17 +15251,17 @@ class createLocalUser_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.password = iprot.readString();
          self.password = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -13790,6 +15293,13 @@ class createLocalUser_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.password)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13864,6 +15374,12 @@ class createLocalUser_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -13903,12 +15419,12 @@ class dropLocalUser_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -13936,6 +15452,12 @@ class dropLocalUser_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14010,6 +15532,12 @@ class dropLocalUser_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14049,12 +15577,12 @@ class getUserAuthorizations_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -14082,6 +15610,12 @@ class getUserAuthorizations_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14126,7 +15660,7 @@ class getUserAuthorizations_result:
           self.success = []
           (_etype379, _size376) = iprot.readListBegin()
           for _i380 in xrange(_size376):
            _elem381 = iprot.readString();
            _elem381 = iprot.readString()
             self.success.append(_elem381)
           iprot.readListEnd()
         else:
@@ -14175,6 +15709,13 @@ class getUserAuthorizations_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14217,17 +15758,17 @@ class grantSystemPermission_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.I32:
          self.perm = iprot.readI32();
          self.perm = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -14259,6 +15800,13 @@ class grantSystemPermission_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.perm)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14333,6 +15881,12 @@ class grantSystemPermission_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14378,22 +15932,22 @@ class grantTablePermission_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.table = iprot.readString();
          self.table = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I32:
          self.perm = iprot.readI32();
          self.perm = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -14429,6 +15983,14 @@ class grantTablePermission_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.table)
    value = (value * 31) ^ hash(self.perm)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14516,6 +16078,13 @@ class grantTablePermission_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14558,17 +16127,17 @@ class hasSystemPermission_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.I32:
          self.perm = iprot.readI32();
          self.perm = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -14600,6 +16169,13 @@ class hasSystemPermission_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.perm)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14641,7 +16217,7 @@ class hasSystemPermission_result:
         break
       if fid == 0:
         if ftype == TType.BOOL:
          self.success = iprot.readBool();
          self.success = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -14685,6 +16261,13 @@ class hasSystemPermission_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14730,22 +16313,22 @@ class hasTablePermission_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.table = iprot.readString();
          self.table = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I32:
          self.perm = iprot.readI32();
          self.perm = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -14781,6 +16364,14 @@ class hasTablePermission_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.table)
    value = (value * 31) ^ hash(self.perm)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14825,7 +16416,7 @@ class hasTablePermission_result:
         break
       if fid == 0:
         if ftype == TType.BOOL:
          self.success = iprot.readBool();
          self.success = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -14879,6 +16470,14 @@ class hasTablePermission_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14915,7 +16514,7 @@ class listLocalUsers_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -14939,6 +16538,11 @@ class listLocalUsers_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -14986,7 +16590,7 @@ class listLocalUsers_result:
           self.success = set()
           (_etype386, _size383) = iprot.readSetBegin()
           for _i387 in xrange(_size383):
            _elem388 = iprot.readString();
            _elem388 = iprot.readString()
             self.success.add(_elem388)
           iprot.readSetEnd()
         else:
@@ -15045,6 +16649,14 @@ class listLocalUsers_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15087,17 +16699,17 @@ class revokeSystemPermission_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.I32:
          self.perm = iprot.readI32();
          self.perm = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -15129,6 +16741,13 @@ class revokeSystemPermission_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.perm)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15203,6 +16822,12 @@ class revokeSystemPermission_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15248,22 +16873,22 @@ class revokeTablePermission_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.table = iprot.readString();
          self.table = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I32:
          self.perm = iprot.readI32();
          self.perm = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -15299,6 +16924,14 @@ class revokeTablePermission_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.table)
    value = (value * 31) ^ hash(self.perm)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15386,6 +17019,13 @@ class revokeTablePermission_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15428,12 +17068,12 @@ class createBatchScanner_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -15471,6 +17111,13 @@ class createBatchScanner_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.options)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15515,7 +17162,7 @@ class createBatchScanner_result:
         break
       if fid == 0:
         if ftype == TType.STRING:
          self.success = iprot.readString();
          self.success = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -15569,6 +17216,14 @@ class createBatchScanner_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15611,12 +17266,12 @@ class createScanner_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -15654,6 +17309,13 @@ class createScanner_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.options)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15698,7 +17360,7 @@ class createScanner_result:
         break
       if fid == 0:
         if ftype == TType.STRING:
          self.success = iprot.readString();
          self.success = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -15752,6 +17414,14 @@ class createScanner_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15788,7 +17458,7 @@ class hasNext_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.scanner = iprot.readString();
          self.scanner = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -15812,6 +17482,11 @@ class hasNext_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.scanner)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15850,7 +17525,7 @@ class hasNext_result:
         break
       if fid == 0:
         if ftype == TType.BOOL:
          self.success = iprot.readBool();
          self.success = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -15884,6 +17559,12 @@ class hasNext_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -15920,7 +17601,7 @@ class nextEntry_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.scanner = iprot.readString();
          self.scanner = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -15944,6 +17625,11 @@ class nextEntry_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.scanner)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16043,6 +17729,14 @@ class nextEntry_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16082,12 +17776,12 @@ class nextK_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.scanner = iprot.readString();
          self.scanner = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.I32:
          self.k = iprot.readI32();
          self.k = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -16115,6 +17809,12 @@ class nextK_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.scanner)
    value = (value * 31) ^ hash(self.k)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16214,6 +17914,14 @@ class nextK_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16250,7 +17958,7 @@ class closeScanner_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.scanner = iprot.readString();
          self.scanner = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -16274,6 +17982,11 @@ class closeScanner_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.scanner)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16335,6 +18048,11 @@ class closeScanner_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16377,12 +18095,12 @@ class updateAndFlush_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -16390,7 +18108,7 @@ class updateAndFlush_args:
           self.cells = {}
           (_ktype391, _vtype392, _size390 ) = iprot.readMapBegin()
           for _i394 in xrange(_size390):
            _key395 = iprot.readString();
            _key395 = iprot.readString()
             _val396 = []
             (_etype400, _size397) = iprot.readListBegin()
             for _i401 in xrange(_size397):
@@ -16438,6 +18156,13 @@ class updateAndFlush_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.cells)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16538,6 +18263,14 @@ class updateAndFlush_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.outch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    value = (value * 31) ^ hash(self.ouch4)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16580,12 +18313,12 @@ class createWriter_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -16623,6 +18356,13 @@ class createWriter_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.opts)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16667,7 +18407,7 @@ class createWriter_result:
         break
       if fid == 0:
         if ftype == TType.STRING:
          self.success = iprot.readString();
          self.success = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -16721,6 +18461,14 @@ class createWriter_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.outch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16760,7 +18508,7 @@ class update_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.writer = iprot.readString();
          self.writer = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
@@ -16768,7 +18516,7 @@ class update_args:
           self.cells = {}
           (_ktype407, _vtype408, _size406 ) = iprot.readMapBegin()
           for _i410 in xrange(_size406):
            _key411 = iprot.readString();
            _key411 = iprot.readString()
             _val412 = []
             (_etype416, _size413) = iprot.readListBegin()
             for _i417 in xrange(_size413):
@@ -16812,6 +18560,12 @@ class update_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.writer)
    value = (value * 31) ^ hash(self.cells)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16848,7 +18602,7 @@ class flush_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.writer = iprot.readString();
          self.writer = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -16872,6 +18626,11 @@ class flush_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.writer)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16946,6 +18705,12 @@ class flush_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -16982,7 +18747,7 @@ class closeWriter_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.writer = iprot.readString();
          self.writer = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -17006,6 +18771,11 @@ class closeWriter_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.writer)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17080,6 +18850,12 @@ class closeWriter_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17125,17 +18901,17 @@ class updateRowConditionally_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.row = iprot.readString();
          self.row = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
@@ -17177,6 +18953,14 @@ class updateRowConditionally_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.row)
    value = (value * 31) ^ hash(self.updates)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17221,7 +19005,7 @@ class updateRowConditionally_result:
         break
       if fid == 0:
         if ftype == TType.I32:
          self.success = iprot.readI32();
          self.success = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -17275,6 +19059,14 @@ class updateRowConditionally_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17317,12 +19109,12 @@ class createConditionalWriter_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.login = iprot.readString();
          self.login = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.tableName = iprot.readString();
          self.tableName = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -17360,6 +19152,13 @@ class createConditionalWriter_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.login)
    value = (value * 31) ^ hash(self.tableName)
    value = (value * 31) ^ hash(self.options)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17404,7 +19203,7 @@ class createConditionalWriter_result:
         break
       if fid == 0:
         if ftype == TType.STRING:
          self.success = iprot.readString();
          self.success = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 1:
@@ -17458,6 +19257,14 @@ class createConditionalWriter_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17497,7 +19304,7 @@ class updateRowsConditionally_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.conditionalWriter = iprot.readString();
          self.conditionalWriter = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
@@ -17505,7 +19312,7 @@ class updateRowsConditionally_args:
           self.updates = {}
           (_ktype423, _vtype424, _size422 ) = iprot.readMapBegin()
           for _i426 in xrange(_size422):
            _key427 = iprot.readString();
            _key427 = iprot.readString()
             _val428 = ConditionalUpdates()
             _val428.read(iprot)
             self.updates[_key427] = _val428
@@ -17541,6 +19348,12 @@ class updateRowsConditionally_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.conditionalWriter)
    value = (value * 31) ^ hash(self.updates)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17588,8 +19401,8 @@ class updateRowsConditionally_result:
           self.success = {}
           (_ktype432, _vtype433, _size431 ) = iprot.readMapBegin()
           for _i435 in xrange(_size431):
            _key436 = iprot.readString();
            _val437 = iprot.readI32();
            _key436 = iprot.readString()
            _val437 = iprot.readI32()
             self.success[_key436] = _val437
           iprot.readMapEnd()
         else:
@@ -17649,6 +19462,14 @@ class updateRowsConditionally_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    value = (value * 31) ^ hash(self.ouch1)
    value = (value * 31) ^ hash(self.ouch2)
    value = (value * 31) ^ hash(self.ouch3)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17685,7 +19506,7 @@ class closeConditionalWriter_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.conditionalWriter = iprot.readString();
          self.conditionalWriter = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -17709,6 +19530,11 @@ class closeConditionalWriter_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.conditionalWriter)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17751,6 +19577,10 @@ class closeConditionalWriter_result:
     return
 
 
  def __hash__(self):
    value = 17
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17787,7 +19617,7 @@ class getRowRange_args:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.row = iprot.readString();
          self.row = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -17811,6 +19641,11 @@ class getRowRange_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.row)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17871,6 +19706,11 @@ class getRowRange_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -17916,7 +19756,7 @@ class getFollowing_args:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.I32:
          self.part = iprot.readI32();
          self.part = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -17944,6 +19784,12 @@ class getFollowing_args:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.key)
    value = (value * 31) ^ hash(self.part)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -18004,6 +19850,11 @@ class getFollowing_result:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.success)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
diff --git a/proxy/src/main/python/constants.py b/proxy/src/main/python/constants.py
index aea4826cd..81392363b 100644
-- a/proxy/src/main/python/constants.py
++ b/proxy/src/main/python/constants.py
@@ -13,7 +13,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
# Autogenerated by Thrift Compiler (0.9.1)
# Autogenerated by Thrift Compiler (0.9.3)
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 #
diff --git a/proxy/src/main/python/ttypes.py b/proxy/src/main/python/ttypes.py
index 9444f715e..c224c50f9 100644
-- a/proxy/src/main/python/ttypes.py
++ b/proxy/src/main/python/ttypes.py
@@ -13,7 +13,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
# Autogenerated by Thrift Compiler (0.9.1)
# Autogenerated by Thrift Compiler (0.9.3)
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 #
@@ -303,27 +303,27 @@ class Key:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.row = iprot.readString();
          self.row = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.colFamily = iprot.readString();
          self.colFamily = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.colQualifier = iprot.readString();
          self.colQualifier = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.colVisibility = iprot.readString();
          self.colVisibility = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.I64:
          self.timestamp = iprot.readI64();
          self.timestamp = iprot.readI64()
         else:
           iprot.skip(ftype)
       else:
@@ -363,6 +363,15 @@ class Key:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.row)
    value = (value * 31) ^ hash(self.colFamily)
    value = (value * 31) ^ hash(self.colQualifier)
    value = (value * 31) ^ hash(self.colVisibility)
    value = (value * 31) ^ hash(self.timestamp)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -414,32 +423,32 @@ class ColumnUpdate:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.colFamily = iprot.readString();
          self.colFamily = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.colQualifier = iprot.readString();
          self.colQualifier = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.colVisibility = iprot.readString();
          self.colVisibility = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I64:
          self.timestamp = iprot.readI64();
          self.timestamp = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.STRING:
          self.value = iprot.readString();
          self.value = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 6:
         if ftype == TType.BOOL:
          self.deleteCell = iprot.readBool();
          self.deleteCell = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -483,6 +492,16 @@ class ColumnUpdate:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.colFamily)
    value = (value * 31) ^ hash(self.colQualifier)
    value = (value * 31) ^ hash(self.colVisibility)
    value = (value * 31) ^ hash(self.timestamp)
    value = (value * 31) ^ hash(self.value)
    value = (value * 31) ^ hash(self.deleteCell)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -525,14 +544,14 @@ class DiskUsage:
           self.tables = []
           (_etype3, _size0) = iprot.readListBegin()
           for _i4 in xrange(_size0):
            _elem5 = iprot.readString();
            _elem5 = iprot.readString()
             self.tables.append(_elem5)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.I64:
          self.usage = iprot.readI64();
          self.usage = iprot.readI64()
         else:
           iprot.skip(ftype)
       else:
@@ -563,6 +582,12 @@ class DiskUsage:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.tables)
    value = (value * 31) ^ hash(self.usage)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -608,7 +633,7 @@ class KeyValue:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.value = iprot.readString();
          self.value = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -636,6 +661,12 @@ class KeyValue:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.key)
    value = (value * 31) ^ hash(self.value)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -686,7 +717,7 @@ class ScanResult:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.BOOL:
          self.more = iprot.readBool();
          self.more = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -717,6 +748,12 @@ class ScanResult:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.results)
    value = (value * 31) ^ hash(self.more)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -768,7 +805,7 @@ class Range:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.BOOL:
          self.startInclusive = iprot.readBool();
          self.startInclusive = iprot.readBool()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -779,7 +816,7 @@ class Range:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.BOOL:
          self.stopInclusive = iprot.readBool();
          self.stopInclusive = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -815,6 +852,14 @@ class Range:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.start)
    value = (value * 31) ^ hash(self.startInclusive)
    value = (value * 31) ^ hash(self.stop)
    value = (value * 31) ^ hash(self.stopInclusive)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -854,12 +899,12 @@ class ScanColumn:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.colFamily = iprot.readString();
          self.colFamily = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.colQualifier = iprot.readString();
          self.colQualifier = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -887,6 +932,12 @@ class ScanColumn:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.colFamily)
    value = (value * 31) ^ hash(self.colQualifier)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -932,17 +983,17 @@ class IteratorSetting:
         break
       if fid == 1:
         if ftype == TType.I32:
          self.priority = iprot.readI32();
          self.priority = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.name = iprot.readString();
          self.name = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.iteratorClass = iprot.readString();
          self.iteratorClass = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
@@ -950,8 +1001,8 @@ class IteratorSetting:
           self.properties = {}
           (_ktype15, _vtype16, _size14 ) = iprot.readMapBegin()
           for _i18 in xrange(_size14):
            _key19 = iprot.readString();
            _val20 = iprot.readString();
            _key19 = iprot.readString()
            _val20 = iprot.readString()
             self.properties[_key19] = _val20
           iprot.readMapEnd()
         else:
@@ -993,6 +1044,14 @@ class IteratorSetting:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.priority)
    value = (value * 31) ^ hash(self.name)
    value = (value * 31) ^ hash(self.iteratorClass)
    value = (value * 31) ^ hash(self.properties)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1044,7 +1103,7 @@ class ScanOptions:
           self.authorizations = set()
           (_etype26, _size23) = iprot.readSetBegin()
           for _i27 in xrange(_size23):
            _elem28 = iprot.readString();
            _elem28 = iprot.readString()
             self.authorizations.add(_elem28)
           iprot.readSetEnd()
         else:
@@ -1079,7 +1138,7 @@ class ScanOptions:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.I32:
          self.bufferSize = iprot.readI32();
          self.bufferSize = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -1128,6 +1187,15 @@ class ScanOptions:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.authorizations)
    value = (value * 31) ^ hash(self.range)
    value = (value * 31) ^ hash(self.columns)
    value = (value * 31) ^ hash(self.iterators)
    value = (value * 31) ^ hash(self.bufferSize)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1179,7 +1247,7 @@ class BatchScanOptions:
           self.authorizations = set()
           (_etype47, _size44) = iprot.readSetBegin()
           for _i48 in xrange(_size44):
            _elem49 = iprot.readString();
            _elem49 = iprot.readString()
             self.authorizations.add(_elem49)
           iprot.readSetEnd()
         else:
@@ -1219,7 +1287,7 @@ class BatchScanOptions:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.I32:
          self.threads = iprot.readI32();
          self.threads = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -1271,6 +1339,15 @@ class BatchScanOptions:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.authorizations)
    value = (value * 31) ^ hash(self.ranges)
    value = (value * 31) ^ hash(self.columns)
    value = (value * 31) ^ hash(self.iterators)
    value = (value * 31) ^ hash(self.threads)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1316,7 +1393,7 @@ class KeyValueAndPeek:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.BOOL:
          self.hasNext = iprot.readBool();
          self.hasNext = iprot.readBool()
         else:
           iprot.skip(ftype)
       else:
@@ -1344,6 +1421,12 @@ class KeyValueAndPeek:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.keyValue)
    value = (value * 31) ^ hash(self.hasNext)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1386,17 +1469,17 @@ class KeyExtent:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.tableId = iprot.readString();
          self.tableId = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.endRow = iprot.readString();
          self.endRow = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.prevEndRow = iprot.readString();
          self.prevEndRow = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -1428,6 +1511,13 @@ class KeyExtent:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.tableId)
    value = (value * 31) ^ hash(self.endRow)
    value = (value * 31) ^ hash(self.prevEndRow)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1470,17 +1560,17 @@ class Column:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.colFamily = iprot.readString();
          self.colFamily = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.colQualifier = iprot.readString();
          self.colQualifier = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.colVisibility = iprot.readString();
          self.colVisibility = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -1512,6 +1602,13 @@ class Column:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.colFamily)
    value = (value * 31) ^ hash(self.colQualifier)
    value = (value * 31) ^ hash(self.colVisibility)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1563,12 +1660,12 @@ class Condition:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.I64:
          self.timestamp = iprot.readI64();
          self.timestamp = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.value = iprot.readString();
          self.value = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
@@ -1618,6 +1715,14 @@ class Condition:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.column)
    value = (value * 31) ^ hash(self.timestamp)
    value = (value * 31) ^ hash(self.value)
    value = (value * 31) ^ hash(self.iterators)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1709,6 +1814,12 @@ class ConditionalUpdates:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.conditions)
    value = (value * 31) ^ hash(self.updates)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1757,17 +1868,17 @@ class ConditionalWriterOptions:
         break
       if fid == 1:
         if ftype == TType.I64:
          self.maxMemory = iprot.readI64();
          self.maxMemory = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.I64:
          self.timeoutMs = iprot.readI64();
          self.timeoutMs = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.I32:
          self.threads = iprot.readI32();
          self.threads = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 4:
@@ -1775,14 +1886,14 @@ class ConditionalWriterOptions:
           self.authorizations = set()
           (_etype96, _size93) = iprot.readSetBegin()
           for _i97 in xrange(_size93):
            _elem98 = iprot.readString();
            _elem98 = iprot.readString()
             self.authorizations.add(_elem98)
           iprot.readSetEnd()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.I32:
          self.durability = iprot.readI32();
          self.durability = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -1825,6 +1936,15 @@ class ConditionalWriterOptions:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.maxMemory)
    value = (value * 31) ^ hash(self.timeoutMs)
    value = (value * 31) ^ hash(self.threads)
    value = (value * 31) ^ hash(self.authorizations)
    value = (value * 31) ^ hash(self.durability)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -1891,37 +2011,37 @@ class ActiveScan:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.client = iprot.readString();
          self.client = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.STRING:
          self.user = iprot.readString();
          self.user = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.STRING:
          self.table = iprot.readString();
          self.table = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I64:
          self.age = iprot.readI64();
          self.age = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.I64:
          self.idleTime = iprot.readI64();
          self.idleTime = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 6:
         if ftype == TType.I32:
          self.type = iprot.readI32();
          self.type = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 7:
         if ftype == TType.I32:
          self.state = iprot.readI32();
          self.state = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 8:
@@ -1957,7 +2077,7 @@ class ActiveScan:
           self.authorizations = []
           (_etype115, _size112) = iprot.readListBegin()
           for _i116 in xrange(_size112):
            _elem117 = iprot.readString();
            _elem117 = iprot.readString()
             self.authorizations.append(_elem117)
           iprot.readListEnd()
         else:
@@ -2032,6 +2152,21 @@ class ActiveScan:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.client)
    value = (value * 31) ^ hash(self.user)
    value = (value * 31) ^ hash(self.table)
    value = (value * 31) ^ hash(self.age)
    value = (value * 31) ^ hash(self.idleTime)
    value = (value * 31) ^ hash(self.type)
    value = (value * 31) ^ hash(self.state)
    value = (value * 31) ^ hash(self.extent)
    value = (value * 31) ^ hash(self.columns)
    value = (value * 31) ^ hash(self.iterators)
    value = (value * 31) ^ hash(self.authorizations)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2101,7 +2236,7 @@ class ActiveCompaction:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.I64:
          self.age = iprot.readI64();
          self.age = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 3:
@@ -2109,39 +2244,39 @@ class ActiveCompaction:
           self.inputFiles = []
           (_etype124, _size121) = iprot.readListBegin()
           for _i125 in xrange(_size121):
            _elem126 = iprot.readString();
            _elem126 = iprot.readString()
             self.inputFiles.append(_elem126)
           iprot.readListEnd()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.STRING:
          self.outputFile = iprot.readString();
          self.outputFile = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.I32:
          self.type = iprot.readI32();
          self.type = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 6:
         if ftype == TType.I32:
          self.reason = iprot.readI32();
          self.reason = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 7:
         if ftype == TType.STRING:
          self.localityGroup = iprot.readString();
          self.localityGroup = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 8:
         if ftype == TType.I64:
          self.entriesRead = iprot.readI64();
          self.entriesRead = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 9:
         if ftype == TType.I64:
          self.entriesWritten = iprot.readI64();
          self.entriesWritten = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 10:
@@ -2218,6 +2353,20 @@ class ActiveCompaction:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.extent)
    value = (value * 31) ^ hash(self.age)
    value = (value * 31) ^ hash(self.inputFiles)
    value = (value * 31) ^ hash(self.outputFile)
    value = (value * 31) ^ hash(self.type)
    value = (value * 31) ^ hash(self.reason)
    value = (value * 31) ^ hash(self.localityGroup)
    value = (value * 31) ^ hash(self.entriesRead)
    value = (value * 31) ^ hash(self.entriesWritten)
    value = (value * 31) ^ hash(self.iterators)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2266,27 +2415,27 @@ class WriterOptions:
         break
       if fid == 1:
         if ftype == TType.I64:
          self.maxMemory = iprot.readI64();
          self.maxMemory = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 2:
         if ftype == TType.I64:
          self.latencyMs = iprot.readI64();
          self.latencyMs = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 3:
         if ftype == TType.I64:
          self.timeoutMs = iprot.readI64();
          self.timeoutMs = iprot.readI64()
         else:
           iprot.skip(ftype)
       elif fid == 4:
         if ftype == TType.I32:
          self.threads = iprot.readI32();
          self.threads = iprot.readI32()
         else:
           iprot.skip(ftype)
       elif fid == 5:
         if ftype == TType.I32:
          self.durability = iprot.readI32();
          self.durability = iprot.readI32()
         else:
           iprot.skip(ftype)
       else:
@@ -2326,6 +2475,15 @@ class WriterOptions:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.maxMemory)
    value = (value * 31) ^ hash(self.latencyMs)
    value = (value * 31) ^ hash(self.timeoutMs)
    value = (value * 31) ^ hash(self.threads)
    value = (value * 31) ^ hash(self.durability)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2365,7 +2523,7 @@ class CompactionStrategyConfig:
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.className = iprot.readString();
          self.className = iprot.readString()
         else:
           iprot.skip(ftype)
       elif fid == 2:
@@ -2373,8 +2531,8 @@ class CompactionStrategyConfig:
           self.options = {}
           (_ktype136, _vtype137, _size135 ) = iprot.readMapBegin()
           for _i139 in xrange(_size135):
            _key140 = iprot.readString();
            _val141 = iprot.readString();
            _key140 = iprot.readString()
            _val141 = iprot.readString()
             self.options[_key140] = _val141
           iprot.readMapEnd()
         else:
@@ -2408,6 +2566,12 @@ class CompactionStrategyConfig:
     return
 
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.className)
    value = (value * 31) ^ hash(self.options)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2444,7 +2608,7 @@ class UnknownScanner(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2471,6 +2635,11 @@ class UnknownScanner(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2507,7 +2676,7 @@ class UnknownWriter(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2534,6 +2703,11 @@ class UnknownWriter(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2570,7 +2744,7 @@ class NoMoreEntriesException(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2597,6 +2771,11 @@ class NoMoreEntriesException(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2633,7 +2812,7 @@ class AccumuloException(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2660,6 +2839,11 @@ class AccumuloException(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2696,7 +2880,7 @@ class AccumuloSecurityException(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2723,6 +2907,11 @@ class AccumuloSecurityException(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2759,7 +2948,7 @@ class TableNotFoundException(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2786,6 +2975,11 @@ class TableNotFoundException(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2822,7 +3016,7 @@ class TableExistsException(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2849,6 +3043,11 @@ class TableExistsException(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
@@ -2885,7 +3084,7 @@ class MutationsRejectedException(TException):
         break
       if fid == 1:
         if ftype == TType.STRING:
          self.msg = iprot.readString();
          self.msg = iprot.readString()
         else:
           iprot.skip(ftype)
       else:
@@ -2912,6 +3111,11 @@ class MutationsRejectedException(TException):
   def __str__(self):
     return repr(self)
 
  def __hash__(self):
    value = 17
    value = (value * 31) ^ hash(self.msg)
    return value

   def __repr__(self):
     L = ['%s=%r' % (key, value)
       for key, value in self.__dict__.iteritems()]
diff --git a/proxy/src/main/ruby/accumulo_proxy.rb b/proxy/src/main/ruby/accumulo_proxy.rb
index f8d892e53..38a1a23ab 100644
-- a/proxy/src/main/ruby/accumulo_proxy.rb
++ b/proxy/src/main/ruby/accumulo_proxy.rb
@@ -13,7 +13,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
# Autogenerated by Thrift Compiler (0.9.1)
# Autogenerated by Thrift Compiler (0.9.3)
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 #
@@ -1185,7 +1185,7 @@ module Accumulo
       end
 
       def send_update(writer, cells)
        send_message('update', Update_args, :writer =&gt; writer, :cells =&gt; cells)
        send_oneway_message('update', Update_args, :writer =&gt; writer, :cells =&gt; cells)
       end
       def flush(writer)
         send_flush(writer)
diff --git a/proxy/src/main/ruby/proxy_constants.rb b/proxy/src/main/ruby/proxy_constants.rb
index 98a589e64..baaf9af02 100644
-- a/proxy/src/main/ruby/proxy_constants.rb
++ b/proxy/src/main/ruby/proxy_constants.rb
@@ -13,7 +13,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
# Autogenerated by Thrift Compiler (0.9.1)
# Autogenerated by Thrift Compiler (0.9.3)
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 #
diff --git a/proxy/src/main/ruby/proxy_types.rb b/proxy/src/main/ruby/proxy_types.rb
index 57306d179..1a1484e31 100644
-- a/proxy/src/main/ruby/proxy_types.rb
++ b/proxy/src/main/ruby/proxy_types.rb
@@ -13,7 +13,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
# Autogenerated by Thrift Compiler (0.9.1)
# Autogenerated by Thrift Compiler (0.9.3)
 #
 # DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 #
diff --git a/server/base/src/main/java/org/apache/accumulo/server/rpc/CustomNonBlockingServer.java b/server/base/src/main/java/org/apache/accumulo/server/rpc/CustomNonBlockingServer.java
index c81913f66..f4737be29 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/rpc/CustomNonBlockingServer.java
++ b/server/base/src/main/java/org/apache/accumulo/server/rpc/CustomNonBlockingServer.java
@@ -16,254 +16,42 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>rpc</name></name>;</package></block></expr>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>Socket</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>SelectionKey</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>server</name><operator>.</operator><name>THsHaServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>server</name><operator>.</operator><name>TNonblockingServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingServerTransport</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingSocket</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingTransport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransportException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * This class implements a custom non-blocking thrift server, incorporating the {@link THsHaServer} features, and overriding the underlying
 * {@link TNonblockingServer} methods, especially {@link org.apache.thrift.server.TNonblockingServer.SelectAcceptThread}, in order to override the
 * {@link org.apache.thrift.server.AbstractNonblockingServer.FrameBuffer} and {@link org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer} with
 * one that reveals the client address from its transport.
 * This class implements a custom non-blocking thrift server that stores the client address in thread-local storage for the invocation.
  *
 * &lt;p&gt;
 * The justification for this is explained in https://issues.apache.org/jira/browse/ACCUMULO-1691, and is needed due to the repeated regressions:
 * &lt;ul&gt;
 * &lt;li&gt;https://issues.apache.org/jira/browse/THRIFT-958&lt;/li&gt;
 * &lt;li&gt;https://issues.apache.org/jira/browse/THRIFT-1464&lt;/li&gt;
 * &lt;li&gt;https://issues.apache.org/jira/browse/THRIFT-2173&lt;/li&gt;
 * &lt;/ul&gt;
 *
 * &lt;p&gt;
 * This class contains a copy of {@link org.apache.thrift.server.TNonblockingServer.SelectAcceptThread} from Thrift 0.9.1, with the slight modification of
 * instantiating a custom FrameBuffer, rather than the {@link org.apache.thrift.server.AbstractNonblockingServer.FrameBuffer} and
 * {@link org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer}. Because of this, any change in the implementation upstream will require a review
 * of this implementation here, to ensure any new bugfixes/features in the upstream Thrift class are also applied here, at least until
 * https://issues.apache.org/jira/browse/THRIFT-2173 is implemented. In the meantime, the maven-enforcer-plugin ensures that Thrift remains at version 0.9.1,
 * which has been reviewed and tested.
  */</comment>
 <class><specifier>public</specifier> class <name>CustomNonBlockingServer</name> <super_list><extends>extends <super><name>THsHaServer</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOGGER</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>CustomNonBlockingServer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>SelectAcceptThread</name></type> <name>selectAcceptThread_</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>volatile</specifier> <name>boolean</name></type> <name>stopped_</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

   <constructor><specifier>public</specifier> <name>CustomNonBlockingServer</name><parameter_list>(<parameter><decl><type><name>Args</name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>Runnable</name></type> <name>getRunnable</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>FrameBuffer</name></type> <name>frameBuffer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <class><super><name>Runnable</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>frameBuffer</name> <operator>instanceof</operator> <name>CustomNonblockingFrameBuffer</name></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>TNonblockingTransport</name></type> <name>trans</name> <init>= <expr><operator>(</operator><operator>(</operator><name>CustomNonblockingFrameBuffer</name><operator>)</operator> <name>frameBuffer</name><operator>)</operator><operator>.</operator><call><name>getTransport</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><name>trans</name> <operator>instanceof</operator> <name>TNonblockingSocket</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>TNonblockingSocket</name></type> <name>tsock</name> <init>= <expr><operator>(</operator><name>TNonblockingSocket</name><operator>)</operator> <name>trans</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Socket</name></type> <name>sock</name> <init>= <expr><call><name><name>tsock</name><operator>.</operator><name>getSocketChannel</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>socket</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>TServerUtils</name><operator>.</operator><name>clientAddress</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name><name>sock</name><operator>.</operator><name>getInetAddress</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHostAddress</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>sock</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>frameBuffer</name><operator>.</operator><name>invoke</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>
    }</block></class></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>boolean</name></type> <name>startThreads</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// start the selector</comment>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>selectAcceptThread_</name> <operator>=</operator> <operator>new</operator> <call><name>SelectAcceptThread</name><argument_list>(<argument><expr><operator>(</operator><name>TNonblockingServerTransport</name><operator>)</operator> <name>serverTransport_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>selectAcceptThread_</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Failed to start selector thread!"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>stop</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>stopped_</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>selectAcceptThread_</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>selectAcceptThread_</name><operator>.</operator><name>wakeupSelector</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  <function><type><specifier>protected</specifier> <name>FrameBuffer</name></type> <name>createFrameBuffer</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>TNonblockingTransport</name></type> <name>trans</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>SelectionKey</name></type> <name>selectionKey</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>AbstractSelectThread</name></type> <name>selectThread</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>CustomAsyncFrameBuffer</name><argument_list>(<argument><expr><name>trans</name></expr></argument>, <argument><expr><name>selectionKey</name></expr></argument>, <argument><expr><name>selectThread</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>isStopped</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>selectAcceptThread_</name><operator>.</operator><name>isStopped</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>joinSelector</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// wait until the selector thread exits</comment>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>selectAcceptThread_</name><operator>.</operator><name>join</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// for now, just silently ignore. technically this means we'll have less of</comment>
      <comment type="line">// a graceful shutdown as a result.</comment>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <interface><specifier>private</specifier> interface <name>CustomNonblockingFrameBuffer</name> <block>{
    <function_decl><type><name>TNonblockingTransport</name></type> <name>getTransport</name><parameter_list>()</parameter_list>;</function_decl>
  }</block></interface>

  <class><specifier>private</specifier> class <name>CustomAsyncFrameBuffer</name> <super_list><extends>extends <super><name>AsyncFrameBuffer</name></super></extends> <implements>implements <super><name>CustomNonblockingFrameBuffer</name></super></implements></super_list> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>TNonblockingTransport</name></type> <name>trans</name></decl>;</decl_stmt>
  <class><specifier>private</specifier> class <name>CustomAsyncFrameBuffer</name> <super_list><extends>extends <super><name>AsyncFrameBuffer</name></super></extends></super_list> <block>{
 
     <constructor><specifier>public</specifier> <name>CustomAsyncFrameBuffer</name><parameter_list>(<parameter><decl><type><name>TNonblockingTransport</name></type> <name>trans</name></decl></parameter>, <parameter><decl><type><name>SelectionKey</name></type> <name>selectionKey</name></decl></parameter>, <parameter><decl><type><name>AbstractSelectThread</name></type> <name>selectThread</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>trans</name></expr></argument>, <argument><expr><name>selectionKey</name></expr></argument>, <argument><expr><name>selectThread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>trans</name></name> <operator>=</operator> <name>trans</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>TNonblockingTransport</name></type> <name>getTransport</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>trans</name></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

  <class><specifier>private</specifier> class <name>CustomFrameBuffer</name> <super_list><extends>extends <super><name>FrameBuffer</name></super></extends> <implements>implements <super><name>CustomNonblockingFrameBuffer</name></super></implements></super_list> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>TNonblockingTransport</name></type> <name>trans</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>CustomFrameBuffer</name><parameter_list>(<parameter><decl><type><name>TNonblockingTransport</name></type> <name>trans</name></decl></parameter>, <parameter><decl><type><name>SelectionKey</name></type> <name>selectionKey</name></decl></parameter>, <parameter><decl><type><name>AbstractSelectThread</name></type> <name>selectThread</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>trans</name></expr></argument>, <argument><expr><name>selectionKey</name></expr></argument>, <argument><expr><name>selectThread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>trans</name></name> <operator>=</operator> <name>trans</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>TNonblockingTransport</name></type> <name>getTransport</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>trans</name></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

  <comment type="line">// @formatter:off</comment>
  <class><specifier>private</specifier> class <name>SelectAcceptThread</name> <super_list><extends>extends <super><name>AbstractSelectThread</name></super></extends></super_list> <block>{

    <comment type="line">// The server transport on which new client transports will be accepted</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>TNonblockingServerTransport</name></type> <name>serverTransport</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Set up the thread that will handle the non-blocking accepts, reads, and
     * writes.
     */</comment>
    <constructor><specifier>public</specifier> <name>SelectAcceptThread</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>TNonblockingServerTransport</name></type> <name>serverTransport</name></decl></parameter>)</parameter_list>
    <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>serverTransport</name></name> <operator>=</operator> <name>serverTransport</name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>serverTransport</name><operator>.</operator><name>registerSelector</name></name><argument_list>(<argument><expr><name>selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isStopped</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>stopped_</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * The work loop. Handles both selecting (all IO operations) and managing
     * the selection preferences of all existing connections.
     */</comment>
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
      <try>try <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>eventHandler_</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>eventHandler_</name><operator>.</operator><name>preServe</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <while>while <condition>(<expr><operator>!</operator><name>stopped_</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>select</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>processInterestChanges</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
        <for>for <control>(<init><decl><type><name>SelectionKey</name></type> <name>selectionKey</name> <range>: <expr><call><name><name>selector</name><operator>.</operator><name>keys</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name>cleanupSelectionKey</name><argument_list>(<argument><expr><name>selectionKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"run() exiting due to uncaught error"</literal></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch> <finally>finally <block>{<block_content>
        <expr_stmt><expr><name>stopped_</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>invoke</name><parameter_list>()</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>trans_</name> <operator>instanceof</operator> <name>TNonblockingSocket</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>TNonblockingSocket</name></type> <name>tsock</name> <init>= <expr><operator>(</operator><name>TNonblockingSocket</name><operator>)</operator> <name>trans_</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Socket</name></type> <name>sock</name> <init>= <expr><call><name><name>tsock</name><operator>.</operator><name>getSocketChannel</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>socket</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>TServerUtils</name><operator>.</operator><name>clientAddress</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name><name>sock</name><operator>.</operator><name>getInetAddress</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHostAddress</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>sock</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>invoke</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
  </block_content>}</block></finally></try>
 
    <comment type="block" format="javadoc">/**
     * Select and process IO events appropriately:
     * If there are connections to be accepted, accept them.
     * If there are existing connections with data waiting to be read, read it,
     * buffering until a whole frame has been read.
     * If there are any pending responses, buffer them until their target client
     * is available, and then send the data.
     */</comment>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>select</name><parameter_list>()</parameter_list> <block>{<block_content>
      <try>try <block>{<block_content>
        <comment type="line">// wait for io events.</comment>
        <expr_stmt><expr><call><name><name>selector</name><operator>.</operator><name>select</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// process the io events we received</comment>
        <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>SelectionKey</name></argument>&gt;</argument_list></name></type> <name>selectedKeys</name> <init>= <expr><call><name><name>selector</name><operator>.</operator><name>selectedKeys</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><operator>!</operator><name>stopped_</name> <operator>&amp;&amp;</operator> <call><name><name>selectedKeys</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>SelectionKey</name></type> <name>key</name> <init>= <expr><call><name><name>selectedKeys</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>selectedKeys</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

          <comment type="line">// skip if not valid</comment>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>key</name><operator>.</operator><name>isValid</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>cleanupSelectionKey</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <continue>continue;</continue>
          </block_content>}</block></if></if_stmt>

          <comment type="line">// if the key is marked Accept, then it has to be the server</comment>
          <comment type="line">// transport.</comment>
          <if_stmt><if>if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>isAcceptable</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>handleAccept</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>isReadable</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <comment type="line">// deal with reads</comment>
            <expr_stmt><expr><call><name>handleRead</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>isWritable</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <comment type="line">// deal with writes</comment>
            <expr_stmt><expr><call><name>handleWrite</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unexpected state in select! "</literal> <operator>+</operator> <call><name><name>key</name><operator>.</operator><name>interestOps</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></else></if_stmt>
        </block_content>}</block></while>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Got an IOException while selecting!"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Accept a new connection.
     */</comment>
    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>private</specifier> <name>void</name></type> <name>handleAccept</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name>SelectionKey</name></type> <name>clientKey</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>TNonblockingTransport</name></type> <name>client</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <try>try <block>{<block_content>
        <comment type="line">// accept the connection</comment>
        <expr_stmt><expr><name>client</name> <operator>=</operator> <operator>(</operator><name>TNonblockingTransport</name><operator>)</operator><call><name><name>serverTransport</name><operator>.</operator><name>accept</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>clientKey</name> <operator>=</operator> <call><name><name>client</name><operator>.</operator><name>registerSelector</name></name><argument_list>(<argument><expr><name>selector</name></expr></argument>, <argument><expr><name><name>SelectionKey</name><operator>.</operator><name>OP_READ</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// add this key to the map</comment>
          <decl_stmt><decl><type><name>FrameBuffer</name></type> <name>frameBuffer</name> <init>=
              <expr><ternary><condition><expr><call><name><name>processorFactory_</name><operator>.</operator><name>isAsyncProcessor</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><operator>new</operator> <call><name>CustomAsyncFrameBuffer</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>clientKey</name></expr></argument>,<argument><expr><name><name>SelectAcceptThread</name><operator>.</operator><name>this</name></name></expr></argument>)</argument_list></call></expr> </then><else>:
                  <expr><operator>new</operator> <call><name>CustomFrameBuffer</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>clientKey</name></expr></argument>,<argument><expr><name><name>SelectAcceptThread</name><operator>.</operator><name>this</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

          <expr_stmt><expr><call><name><name>clientKey</name><operator>.</operator><name>attach</name></name><argument_list>(<argument><expr><name>frameBuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>TTransportException</name></type> <name>tte</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// something went wrong accepting.</comment>
        <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Exception trying to accept!"</literal></expr></argument>, <argument><expr><name>tte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>tte</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>clientKey</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>cleanupSelectionKey</name><argument_list>(<argument><expr><name>clientKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>client</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></function>
  </block_content>}</block></function> <comment type="line">// SelectAcceptThread</comment>
  <comment type="line">// @formatter:on</comment>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TNonblockingServerSocket</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TNonblockingServerSocket</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>a209e6960</name><operator>..</operator><literal type="number">000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TNonblockingServerSocket</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">156</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>rpc</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetSocketAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>ServerSocket</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>SocketException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>ClosedChannelException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>SelectionKey</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>Selector</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>ServerSocketChannel</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>SocketChannel</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingServerTransport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingSocket</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransportException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Wrapper around ServerSocketChannel.
 *
 * This class is copied from org.apache.thrift.transport.TNonblockingServerSocket version 0.9. The only change (apart from the logging statements) is the
 * addition of the {@link #getPort()} method to retrieve the port used by the ServerSocket.
 */</comment>
<class><specifier>public</specifier> class <name>TNonblockingServerSocket</name> <super_list><extends>extends <super><name>TNonblockingServerTransport</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>TNonblockingServerSocket</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * This channel is where all the nonblocking magic happens.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>ServerSocketChannel</name></type> <name>serverSocketChannel</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Underlying ServerSocket object
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>ServerSocket</name></type> <name>serverSocket_</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Timeout for client sockets from accept
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>clientTimeout_</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Creates just a port listening server socket
   */</comment>
  <constructor><specifier>public</specifier> <name>TNonblockingServerSocket</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>clientTimeout</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InetSocketAddress</name><argument_list>(<argument><expr><name>port</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>clientTimeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <constructor><specifier>public</specifier> <name>TNonblockingServerSocket</name><parameter_list>(<parameter><decl><type><name>InetSocketAddress</name></type> <name>bindAddr</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>bindAddr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <constructor><specifier>public</specifier> <name>TNonblockingServerSocket</name><parameter_list>(<parameter><decl><type><name>InetSocketAddress</name></type> <name>bindAddr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>clientTimeout</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>clientTimeout_</name> <operator>=</operator> <name>clientTimeout</name></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>serverSocketChannel</name> <operator>=</operator> <call><name><name>ServerSocketChannel</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>serverSocketChannel</name><operator>.</operator><name>configureBlocking</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <comment type="line">// Make server socket</comment>
      <expr_stmt><expr><name>serverSocket_</name> <operator>=</operator> <call><name><name>serverSocketChannel</name><operator>.</operator><name>socket</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// Prevent 2MSL delay problem on server restarts</comment>
      <expr_stmt><expr><call><name><name>serverSocket_</name><operator>.</operator><name>setReuseAddress</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// Bind to listening port</comment>
      <expr_stmt><expr><call><name><name>serverSocket_</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name>bindAddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>serverSocket_</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>TTransportException</name><argument_list>(<argument><expr><literal type="string">"Could not create ServerSocket on address "</literal> <operator>+</operator> <call><name><name>bindAddr</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"."</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>listen</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// Make sure not to block on accept</comment>
    <if_stmt><if>if <condition>(<expr><name>serverSocket_</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>serverSocket_</name><operator>.</operator><name>setSoTimeout</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SocketException</name></type> <name>sx</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"SocketException caused by serverSocket in listen()"</literal></expr></argument>, <argument><expr><name>sx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>TNonblockingSocket</name></type> <name>acceptImpl</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>serverSocket_</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>TTransportException</name><argument_list>(<argument><expr><name><name>TTransportException</name><operator>.</operator><name>NOT_OPEN</name></name></expr></argument>, <argument><expr><literal type="string">"No underlying server socket."</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>SocketChannel</name></type> <name>socketChannel</name> <init>= <expr><call><name><name>serverSocketChannel</name><operator>.</operator><name>accept</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>socketChannel</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
      </block_content>}</block></if></if_stmt>

      <decl_stmt><decl><type><name>TNonblockingSocket</name></type> <name>tsocket</name> <init>= <expr><operator>new</operator> <call><name>TNonblockingSocket</name><argument_list>(<argument><expr><name>socketChannel</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>tsocket</name><operator>.</operator><name>setTimeout</name></name><argument_list>(<argument><expr><name>clientTimeout_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>tsocket</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>iox</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>TTransportException</name><argument_list>(<argument><expr><name>iox</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>registerSelector</name><parameter_list>(<parameter><decl><type><name>Selector</name></type> <name>selector</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <comment type="line">// Register the server socket channel, indicating an interest in</comment>
      <comment type="line">// accepting new connections</comment>
      <expr_stmt><expr><call><name><name>serverSocketChannel</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>selector</name></expr></argument>, <argument><expr><name><name>SelectionKey</name><operator>.</operator><name>OP_ACCEPT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ClosedChannelException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// this shouldn't happen, ideally...</comment>
      <comment type="line">// TODO: decide what to do with this.</comment>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>serverSocket_</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>serverSocket_</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>iox</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"WARNING: Could not close server socket: {}"</literal></expr></argument>, <argument><expr><call><name><name>iox</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
      <expr_stmt><expr><name>serverSocket_</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>interrupt</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// The thread-safeness of this is dubious, but Java documentation suggests</comment>
    <comment type="line">// that it is safe to do this from a different thread context</comment>
    <expr_stmt><expr><call><name>close</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>int</name></type> <name>getPort</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>serverSocket_</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>eb8095f25</name><operator>..</operator><name>f474dc354</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>rpc</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>rpc</name></name>;</package>
 
<import>import static <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Uninterruptibles</name><operator>.</operator><name>sleepUninterruptibly</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>BindException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TProcessorFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocolFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>server</name><operator>.</operator><name>TServer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>server</name><operator>.</operator><name>TThreadPoolServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingServerSocket</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSSLTransportFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSaslServerTransport</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TServerSocket</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>net</name><operator>.</operator><name>HostAndPort</name></name>;</import>
<import>import static <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Uninterruptibles</name><operator>.</operator><name>sleepUninterruptibly</name></name>;</import></block></class></block_content></block></function></block></class>
 
 <comment type="block" format="javadoc">/**
  * Factory methods for creating Thrift server objects
@@ -393,6 +395,7 @@ public class TServerUtils {
       hostname = InetAddress.getByName(address.getHostText()).getCanonicalHostName();
       fqdn = InetAddress.getLocalHost().getCanonicalHostName();
     } catch (UnknownHostException e) {
      transport.close();
       throw new TTransportException(e);
     }
 
@@ -408,6 +411,7 @@ public class TServerUtils {
       log.error(
           "Expected hostname of '{}' but got '{}'. Ensure the entries in the Accumulo hosts files (e.g. masters, slaves) are the FQDN for each host when using SASL.",
           fqdn, hostname);
      transport.close();
       throw new RuntimeException("SASL requires that the address the thrift server listens on is the same as the FQDN for this host");
     }
 
@@ -415,6 +419,7 @@ public class TServerUtils {
     try {
       serverUser = UserGroupInformation.getLoginUser();
     } catch (IOException e) {
      transport.close();
       throw new TTransportException(e);
     }
 
diff --git a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/Annotation.java b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/Annotation.java
index af4cfd554..c5e658c24 100644
-- a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/Annotation.java
++ b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/Annotation.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class Annotation implements org.apache.thrift.TBase&lt;Annotation, Annotation._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Annotation&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class Annotation implements org.apache.thrift.TBase&lt;Annotation, Annotation._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;Annotation&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Annotation");
 
   private static final org.apache.thrift.protocol.TField TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("time", org.apache.thrift.protocol.TType.I64, (short)1);
@@ -244,7 +247,7 @@ import org.slf4j.LoggerFactory;
   public Object getFieldValue(_Fields field) {
     switch (field) {
     case TIME:
      return Long.valueOf(getTime());
      return getTime();
 
     case MSG:
       return getMsg();
@@ -304,7 +307,19 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_time = true;
    list.add(present_time);
    if (present_time)
      list.add(time);

    boolean present_msg = true &amp;&amp; (isSetMsg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
   }
 
   @Override
diff --git a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/RemoteSpan.java b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/RemoteSpan.java
index 285aebd5c..a66018b9e 100644
-- a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/RemoteSpan.java
++ b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/RemoteSpan.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class RemoteSpan implements org.apache.thrift.TBase&lt;RemoteSpan, RemoteSpan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RemoteSpan&gt; {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class RemoteSpan implements org.apache.thrift.TBase&lt;RemoteSpan, RemoteSpan._Fields&gt;, java.io.Serializable, Cloneable, Comparable&lt;RemoteSpan&gt; {
   private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RemoteSpan");
 
   private static final org.apache.thrift.protocol.TField SENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("sender", org.apache.thrift.protocol.TType.STRING, (short)1);
@@ -644,19 +647,19 @@ import org.slf4j.LoggerFactory;
       return getSvc();
 
     case TRACE_ID:
      return Long.valueOf(getTraceId());
      return getTraceId();
 
     case SPAN_ID:
      return Long.valueOf(getSpanId());
      return getSpanId();
 
     case PARENT_ID:
      return Long.valueOf(getParentId());
      return getParentId();
 
     case START:
      return Long.valueOf(getStart());
      return getStart();
 
     case STOP:
      return Long.valueOf(getStop());
      return getStop();
 
     case DESCRIPTION:
       return getDescription();
@@ -810,7 +813,59 @@ import org.slf4j.LoggerFactory;
 
   @Override
   public int hashCode() {
    return 0;
    List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

    boolean present_sender = true &amp;&amp; (isSetSender());
    list.add(present_sender);
    if (present_sender)
      list.add(sender);

    boolean present_svc = true &amp;&amp; (isSetSvc());
    list.add(present_svc);
    if (present_svc)
      list.add(svc);

    boolean present_traceId = true;
    list.add(present_traceId);
    if (present_traceId)
      list.add(traceId);

    boolean present_spanId = true;
    list.add(present_spanId);
    if (present_spanId)
      list.add(spanId);

    boolean present_parentId = true;
    list.add(present_parentId);
    if (present_parentId)
      list.add(parentId);

    boolean present_start = true;
    list.add(present_start);
    if (present_start)
      list.add(start);

    boolean present_stop = true;
    list.add(present_stop);
    if (present_stop)
      list.add(stop);

    boolean present_description = true &amp;&amp; (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_data = true &amp;&amp; (isSetData());
    list.add(present_data);
    if (present_data)
      list.add(data);

    boolean present_annotations = true &amp;&amp; (isSetAnnotations());
    list.add(present_annotations);
    if (present_annotations)
      list.add(annotations);

    return list.hashCode();
   }
 
   @Override
@@ -1114,13 +1169,13 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                 struct.data = new HashMap&lt;String,String&gt;(2*_map0.size);
                for (int _i1 = 0; _i1 &lt; _map0.size; ++_i1)
                String _key1;
                String _val2;
                for (int _i3 = 0; _i3 &lt; _map0.size; ++_i3)
                 {
                  String _key2;
                  String _val3;
                  _key2 = iprot.readString();
                  _val3 = iprot.readString();
                  struct.data.put(_key2, _val3);
                  _key1 = iprot.readString();
                  _val2 = iprot.readString();
                  struct.data.put(_key1, _val2);
                 }
                 iprot.readMapEnd();
               }
@@ -1134,12 +1189,12 @@ import org.slf4j.LoggerFactory;
               {
                 org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
                 struct.annotations = new ArrayList&lt;Annotation&gt;(_list4.size);
                for (int _i5 = 0; _i5 &lt; _list4.size; ++_i5)
                Annotation _elem5;
                for (int _i6 = 0; _i6 &lt; _list4.size; ++_i6)
                 {
                  Annotation _elem6;
                  _elem6 = new Annotation();
                  _elem6.read(iprot);
                  struct.annotations.add(_elem6);
                  _elem5 = new Annotation();
                  _elem5.read(iprot);
                  struct.annotations.add(_elem5);
                 }
                 iprot.readListEnd();
               }
@@ -1352,13 +1407,13 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TMap _map11 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
           struct.data = new HashMap&lt;String,String&gt;(2*_map11.size);
          for (int _i12 = 0; _i12 &lt; _map11.size; ++_i12)
          String _key12;
          String _val13;
          for (int _i14 = 0; _i14 &lt; _map11.size; ++_i14)
           {
            String _key13;
            String _val14;
            _key13 = iprot.readString();
            _val14 = iprot.readString();
            struct.data.put(_key13, _val14);
            _key12 = iprot.readString();
            _val13 = iprot.readString();
            struct.data.put(_key12, _val13);
           }
         }
         struct.setDataIsSet(true);
@@ -1367,12 +1422,12 @@ import org.slf4j.LoggerFactory;
         {
           org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
           struct.annotations = new ArrayList&lt;Annotation&gt;(_list15.size);
          for (int _i16 = 0; _i16 &lt; _list15.size; ++_i16)
          Annotation _elem16;
          for (int _i17 = 0; _i17 &lt; _list15.size; ++_i17)
           {
            Annotation _elem17;
            _elem17 = new Annotation();
            _elem17.read(iprot);
            struct.annotations.add(_elem17);
            _elem16 = new Annotation();
            _elem16.read(iprot);
            struct.annotations.add(_elem16);
           }
         }
         struct.setAnnotationsIsSet(true);
diff --git a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/SpanReceiver.java b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/SpanReceiver.java
index 6728522ef..e59ab84a0 100644
-- a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/SpanReceiver.java
++ b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/SpanReceiver.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class SpanReceiver {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class SpanReceiver {
 
   public interface Iface {
 
@@ -91,7 +94,7 @@ import org.slf4j.LoggerFactory;
     {
       span_args args = new span_args();
       args.setSpan(span);
      sendBase("span", args);
      sendBaseOneway("span", args);
     }
 
   }
@@ -127,7 +130,7 @@ import org.slf4j.LoggerFactory;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("span", org.apache.thrift.protocol.TMessageType.CALL, 0));
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("span", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
         span_args args = new span_args();
         args.setSpan(span);
         args.write(prot);
@@ -421,7 +424,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_span = true &amp;&amp; (isSetSpan());
      list.add(present_span);
      if (present_span)
        list.add(span);

      return list.hashCode();
     }
 
     @Override
diff --git a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/TestService.java b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/TestService.java
index 262e71a83..71165e297 100644
-- a/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/TestService.java
++ b/server/tracer/src/main/java/org/apache/accumulo/tracer/thrift/TestService.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */</comment>
 <comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.1)
 * Autogenerated by Thrift Compiler (0.9.3)
  *
  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
  *  @generated
@@ -45,10 +45,13 @@ import java.util.Collections;
 import java.util.BitSet;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@SuppressWarnings({"unchecked", "serial", "rawtypes", "unused"}) public class TestService {
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2015-12-16")
public class TestService {
 
   public interface Iface {
 
@@ -522,7 +525,19 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_tinfo = true &amp;&amp; (isSetTinfo());
      list.add(present_tinfo);
      if (present_tinfo)
        list.add(tinfo);

      boolean present_message = true &amp;&amp; (isSetMessage());
      list.add(present_message);
      if (present_message)
        list.add(message);

      return list.hashCode();
     }
 
     @Override
@@ -878,7 +893,7 @@ import org.slf4j.LoggerFactory;
     public Object getFieldValue(_Fields field) {
       switch (field) {
       case SUCCESS:
        return Boolean.valueOf(isSuccess());
        return isSuccess();
 
       }
       throw new IllegalStateException();
@@ -924,7 +939,14 @@ import org.slf4j.LoggerFactory;
 
     @Override
     public int hashCode() {
      return 0;
      List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
     }
 
     @Override
diff --git a/test/pom.xml b/test/pom.xml
index f2ccfaf60..a48efb8ee 100644
-- a/test/pom.xml
++ b/test/pom.xml
@@ -135,6 +135,10 @@
       &lt;groupId&gt;org.apache.accumulo&lt;/groupId&gt;
       &lt;artifactId&gt;accumulo-tserver&lt;/artifactId&gt;
     &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
      &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;
    &lt;/dependency&gt;
     &lt;dependency&gt;
       &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
       &lt;artifactId&gt;commons-math&lt;/artifactId&gt;
- 
2.19.1.windows.1

</comment></unit>
