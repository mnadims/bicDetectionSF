<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/dad7c7c93.java"><expr_stmt><expr><name>From</name> <name>dad7c7c93a7825dd967d42a99380ccd8beb06e24</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name><name>jamesmello</name> <argument_list type="generic">&lt;<argument><name><name>james</name><operator>.</operator><name>mello</name></name><annotation>@<name><name>atsid</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">11</literal> <name>Aug</name> <literal type="number">2015</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">21</literal><operator>:</operator><literal type="number">04</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">3946</literal> <name>Added</name> <name>missing</name> <name>audits</name> <name>on</name> <name>security</name> <name><name>operations</name><operator>.</operator>

<name>Signed</name></name><operator>-</operator><name>off</name><operator>-</operator><name>by</name><operator>:</operator> <name>Josh</name> <name><name>Elser</name> <argument_list type="generic">&lt;<argument><name>elserj</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>Master</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name><name>AuditedSecurityOperation</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">355</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityOperation</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>CreateTable</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TableOp</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">370</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">22</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>Master</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>Master</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dd9468332</name><operator>..</operator><literal type="number">924e12030</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>Master</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>Master</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">857</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">857</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>Listener</name></name></expr><operator>,</operator> <expr><name>TableObserver</name></expr><operator>,</operator> <expr><name>CurrentSt</name></expr></expr_stmt>
       <switch>switch <condition>(<expr><name>op</name></expr>)</condition> <block>{<block_content>
         <case>case <expr><name>CREATE</name></expr>:</case> <block>{<block_content>
           <decl_stmt><decl><type><name>String</name></type> <name>tableName</name> <init>= <expr><call><name><name>ByteBufferUtil</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>arguments</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>security</name><operator>.</operator><name>canCreateTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>security</name><operator>.</operator><name>canCreateTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
             <throw>throw <expr><operator>new</operator> <call><name>ThriftSecurityException</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SecurityErrorCode</name><operator>.</operator><name>PERMISSION_DENIED</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

           <expr_stmt><expr><call><name>checkNotMetadataTable</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name><name>TableOperation</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name>checkTableName</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name><name>TableOperation</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
           <decl_stmt><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>admin</name><operator>.</operator><name>TimeType</name></name></type> <name>timeType</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>admin</name><operator>.</operator><name>TimeType</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>ByteBufferUtil</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>arguments</name>
               <operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>fate</name><operator>.</operator><name>seedTransaction</name></name><argument_list>(<argument><expr><name>opid</name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>TraceRepo</name><argument_list type="generic">&lt;<argument><name>Master</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CreateTable</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>timeType</name></expr></argument>, <argument><expr><name>options</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>autoCleanup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
          <expr_stmt><expr><call><name><name>fate</name><operator>.</operator><name>seedTransaction</name></name><argument_list>(<argument><expr><name>opid</name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>TraceRepo</name><argument_list type="generic">&lt;<argument><name>Master</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CreateTable</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>timeType</name></expr></argument>, <argument><expr><name>options</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>autoCleanup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <break>break;</break>
         </block_content>}</block>
         <case>case <expr><name>RENAME</name></expr>:</case> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">879</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">880</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>Listener</name></name></expr><operator>,</operator> <expr><name>TableObserver</name></expr><operator>,</operator> <expr><name>CurrentSt</name>
 
           <name>final</name> <name>boolean</name> <name>canRename</name></expr>;</expr_stmt>
           <try>try <block>{<block_content>
            <expr_stmt><expr><name>canRename</name> <operator>=</operator> <call><name><name>security</name><operator>.</operator><name>canRenameTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>canRename</name> <operator>=</operator> <call><name><name>security</name><operator>.</operator><name>canRenameTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>newTableName</name></expr></argument>, <argument><expr><name>oldTableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <expr_stmt><expr><call><name>throwIfTableMissingSecurityException</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>oldTableName</name></expr></argument>, <argument><expr><name><name>TableOperation</name><operator>.</operator><name>RENAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <throw>throw <expr><name>e</name></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">926</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">927</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>Listener</name></name></expr><operator>,</operator> <expr><name>TableObserver</name></expr><operator>,</operator> <expr><name>CurrentSt</name>
 
             <call><name><name>propertiesToSet</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></catch></try>

           <expr_stmt><expr><call><name><name>fate</name><operator>.</operator><name>seedTransaction</name></name><argument_list>(<argument><expr><name>opid</name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>TraceRepo</name><argument_list type="generic">&lt;<argument><name>Master</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <call><name>CloneTable</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>srcTableId</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>propertiesToSet</name></expr></argument>, <argument><expr><name>propertiesToExclude</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
               <argument><expr><name>autoCleanup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1051</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1051</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>Listener</name></name></expr><operator>,</operator> <expr><name>TableObserver</name></expr><operator>,</operator> <expr><name>CurrentSt</name>
 
           <name>final</name> <name>boolean</name> <name>canBulkImport</name></expr>;</expr_stmt>
           <try>try <block>{<block_content>
            <expr_stmt><expr><name>canBulkImport</name> <operator>=</operator> <call><name><name>security</name><operator>.</operator><name>canBulkImport</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>canBulkImport</name> <operator>=</operator> <call><name><name>security</name><operator>.</operator><name>canBulkImport</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <expr_stmt><expr><call><name>throwIfTableMissingSecurityException</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name><name>TableOperation</name><operator>.</operator><name>BULK_IMPORT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <throw>throw <expr><name>e</name></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>Listener</name></name></expr><operator>,</operator> <expr><name>TableObserver</name></expr><operator>,</operator> <expr><name>CurrentSt</name>
           <name>String</name> <name>tableName</name> <operator>=</operator> <call><name><name>ByteBufferUtil</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>arguments</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <decl_stmt><decl><type><name>String</name></type> <name>exportDir</name> <init>= <expr><call><name><name>ByteBufferUtil</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>arguments</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>security</name><operator>.</operator><name>canImport</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>security</name><operator>.</operator><name>canImport</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>exportDir</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
             <throw>throw <expr><operator>new</operator> <call><name>ThriftSecurityException</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SecurityErrorCode</name><operator>.</operator><name>PERMISSION_DENIED</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
 
           <expr_stmt><expr><call><name>checkNotMetadataTable</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name><name>TableOperation</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1121</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1121</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>Listener</name></name></expr><operator>,</operator> <expr><name>TableObserver</name></expr><operator>,</operator> <expr><name>CurrentSt</name>
 
           <name>final</name> <name>boolean</name> <name>canExport</name></expr>;</expr_stmt>
           <try>try <block>{<block_content>
            <expr_stmt><expr><name>canExport</name> <operator>=</operator> <call><name><name>security</name><operator>.</operator><name>canExport</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>canExport</name> <operator>=</operator> <call><name><name>security</name><operator>.</operator><name>canExport</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>exportDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <expr_stmt><expr><call><name>throwIfTableMissingSecurityException</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name><name>TableOperation</name><operator>.</operator><name>EXPORT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <throw>throw <expr><name>e</name></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2308</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">2308</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>Listener</name></name></expr><operator>,</operator> <expr><name>TableObserver</name></expr><operator>,</operator> <expr><name>CurrentSt</name></expr></expr_stmt>
     </block_content>}</block></catch></try>)</block_content></block><empty_stmt>;</empty_stmt></catch></try>
 
     <decl_stmt><decl><type><name>TCredentials</name></type> <name>systemAuths</name> <init>= <expr><call><name><name>SecurityConstants</name><operator>.</operator><name>getSystemCredentials</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>TabletStateStore</name></type> <name><name>stores</name><index>[]</index></name> <init>= <expr><block>{
        <expr><operator>new</operator> <call><name>ZooTabletStateStore</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ZooStore</name><argument_list>(<argument><expr><name>zroot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
    <expr><name>final</name> <name>TabletStateStore</name> <name><name>stores</name><index>[]</index></name> <operator>=</operator> <block>{<expr><operator>new</operator> <call><name>ZooTabletStateStore</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ZooStore</name><argument_list>(<argument><expr><name>zroot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
         <comment type="line">// ACCUMULO-3580 ACCUMULO-3618 disable metadata table scanning optimizations</comment>
        <expr><operator>new</operator> <call><name>RootTabletStateStore</name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>systemAuths</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>,
        <expr><operator>new</operator> <call><name>MetaDataStateStore</name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>systemAuths</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>
        }</block></expr>;
        <expr><operator>new</operator> <call><name>RootTabletStateStore</name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>systemAuths</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>, <expr><operator>new</operator> <call><name>MetaDataStateStore</name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>systemAuths</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>}</block></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>watchers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TabletGroupWatcher</name><argument_list>(<argument><expr><name><name>stores</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>watchers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TabletGroupWatcher</name><argument_list>(<argument><expr><name><name>stores</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><call><name><name>watchers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>watchers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TabletGroupWatcher</name><argument_list>(<argument><expr><name><name>stores</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><call><name><name>watchers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>AuditedSecurityOperation</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>AuditedSecurityOperation</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b2e810d36</name><operator>..</operator><literal type="number">68dcb27c9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>AuditedSecurityOperation</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>AuditedSecurityOperation</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>AuditedSecurityOperation</name> extends <name>SecurityOperation</name> <block>{
   <expr><specifier>public</specifier> <name>boolean</name> <call><name>hasSystemPermission</name><argument_list>(<argument><expr><name>TCredentials</name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>user</name></expr></argument>, <argument><expr><name>SystemPermission</name> <name>permission</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>ThriftSecurityException</name> <block>{</block></expr></argument></throws></expr>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>hasSystemPermission</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>permission</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"checked permission %s on %s"</literal></expr></argument>, <argument><expr><name>permission</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"checked permission %s on %s"</literal></expr></argument>, <argument><expr><name>permission</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"checked permission %s on %s denied"</literal></expr></argument>, <argument><expr><name>permission</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
       <return>return <expr><name>result</name></expr>;</return>
     <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"checking permission %s on %s"</literal></expr></argument>, <argument><expr><name>permission</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"checking permission %s on %s denied"</literal></expr></argument>, <argument><expr><name>permission</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <throw>throw <expr><name>ex</name></expr>;</throw>
     </block_content>}</block></catch>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">248</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">251</literal></expr><operator>,</operator><expr><literal type="number">354</literal> @@ <specifier>public</specifier> <name>class</name> <name>AuditedSecurityOperation</name> extends <name>SecurityOperation</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canCreateTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tablename</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canCreateTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tablename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"create table %s allowed"</literal></expr></argument>, <argument><expr><name>tablename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"create table %s denied"</literal></expr></argument>, <argument><expr><name>tablename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"create table %s denied"</literal></expr></argument>, <argument><expr><name>tablename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canRenameTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>newTableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>oldTableName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canRenameTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>newTableName</name></expr></argument>, <argument><expr><name>oldTableName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"rename table on tableId %s from %s to %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>oldTableName</name></expr></argument>, <argument><expr><name>newTableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"rename table on tableId %s from %s to %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>oldTableName</name></expr></argument>, <argument><expr><name>newTableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"rename table on tableId %s from %s to %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>oldTableName</name></expr></argument>, <argument><expr><name>newTableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canSplitTablet</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>table</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canSplitTablet</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"split tablet on table %s allowed"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"split tablet on table %s denied"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"split tablet on table %s denied"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canPerformSystemActions</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canPerformSystemActions</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"system action allowed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"system action denied"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"system action denied"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canFlush</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canFlush</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"flush on tableId %s allowed "</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"flush on tableId %s denied "</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"flush on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canAlterTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canAlterTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"alter table on tableId %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"alter table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"alter table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canCloneTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canCloneTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"clone table on tableId %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"clone table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"clone table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canDeleteTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canDeleteTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"delete table on tableId %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"delete table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"delete table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canOnlineOfflineTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canOnlineOfflineTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"offline table on tableId %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"offline table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"offline table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canMerge</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canMerge</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"merge table on tableId %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"merge table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"merge table on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canDeleteRange</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canDeleteRange</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"delete range on tableId %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"delete range on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"delete range on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canBulkImport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>importDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canBulkImport</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"bulk import on tableId %s from directory %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"bulk import on tableId %s from directory %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"bulk import on tableId %s from directory %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canCompact</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canCompact</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"compact on tableId %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"compact on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"compact on tableId %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canChangeAuthorizations</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canChangeAuthorizations</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"change authorizations on user %s allowed"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"change authorizations on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"change authorizations on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canChangePassword</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canChangePassword</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"change password on user %s allowed"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"change password on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"change password on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canCreateUser</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canCreateUser</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"create user on user %s allowed"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"create user on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"create user on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canDropUser</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canDropUser</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"drop user on user %s allowed"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"drop user on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"drop user on user %s denied"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canGrantSystem</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>, <parameter><decl><type><name>SystemPermission</name></type> <name>sysPerm</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canGrantSystem</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"grant system permission %s for user %s allowed"</literal></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"grant system permission %s for user %s denied"</literal></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>

    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"grant system permission %s for user %s denied"</literal></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canGrantTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>table</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canGrantTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"grant table on table %s for user %s allowed"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"grant table on table %s for user %s denied"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"grant table on table %s for user %s denied"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canRevokeSystem</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>, <parameter><decl><type><name>SystemPermission</name></type> <name>sysPerm</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canRevokeSystem</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"revoke system permission %s for user %s allowed"</literal></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"revoke system permission %s for user %s denied"</literal></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"revoke system permission %s for user %s denied"</literal></expr></argument>, <argument><expr><name>sysPerm</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canRevokeTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>table</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canRevokeTable</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"revoke table on table %s for user %s allowed"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"revoke table on table %s for user %s denied"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"revoke table on table %s for user %s denied"</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canExport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>exportDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canExport</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>exportDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"export table on tableId %s to directory %s allowed"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>exportDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"export table on tableId %s to directory %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>exportDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"export table on tableId %s to directory %s denied"</literal></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>exportDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>canImport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>importDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>result</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>canImport</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"import table %s from directory %s allowed"</literal></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><literal type="string">"import table %s from directory %s denied"</literal></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>audit</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>ex</name></expr></argument>, <argument><expr><literal type="string">"import table %s from directory %s denied"</literal></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>importDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>ex</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>initializeSecurity</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>principal</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>token</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>initializeSecurity</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>principal</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityOperation</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityOperation</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">13d1c32d7</literal><operator>..</operator><literal type="number">6a817f248</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityOperation</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityOperation</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">314</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">314</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SecurityOperation</name> <block>{
         <expr><operator>||</operator> <call><name>hasSystemPermission</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SystemPermission</name><operator>.</operator><name>ALTER_TABLE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <specifier>public</specifier> <name>boolean</name> <call><name>canCreateTable</name><argument_list>(<argument><expr><name>TCredentials</name> <name>c</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>ThriftSecurityException</name> <block>{
  <expr><specifier>public</specifier> <name>boolean</name> <call><name>canCreateTable</name><argument_list>(<argument><expr><name>TCredentials</name> <name>c</name></expr></argument>, <argument><expr><name>String</name> <name>tablename</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>ThriftSecurityException</name> <block>{
     <expr><call><name>authenticate</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <return>return <expr><call><name>hasSystemPermission</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SystemPermission</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canRenameTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canRenameTable</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>newTableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>oldTableName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>authenticate</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><call><name>hasSystemPermission</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SystemPermission</name><operator>.</operator><name>ALTER_TABLE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call>
         <operator>||</operator> <call><name>hasTablePermission</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name><name>TablePermission</name><operator>.</operator><name>ALTER_TABLE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">354</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">354</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SecurityOperation</name> <block>{
     <return>return <expr><call><name>hasSystemPermission</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SystemPermission</name><operator>.</operator><name>SYSTEM</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>hasTablePermission</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name><name>TablePermission</name><operator>.</operator><name>WRITE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canBulkImport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canBulkImport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>importDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>authenticate</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><call><name>hasTablePermission</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name><name>TablePermission</name><operator>.</operator><name>BULK_IMPORT</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">601</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">601</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SecurityOperation</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canExport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canExport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>exportDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>authenticate</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><call><name>hasTablePermission</name><argument_list>(<argument><expr><call><name><name>credentials</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><name><name>TablePermission</name><operator>.</operator><name>READ</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canImport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canImport</name><parameter_list>(<parameter><decl><type><name>TCredentials</name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>importDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ThriftSecurityException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>authenticate</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><call><name>hasSystemPermission</name><argument_list>(<argument><expr><call><name><name>credentials</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SystemPermission</name><operator>.</operator><name>CREATE_TABLE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>CreateTable</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>CreateTable</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">61b146ad0</literal><operator>..</operator><literal type="number">318c2a698</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>CreateTable</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>CreateTable</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CreateTable</name> extends <name>Test</name> <block>{
     <expr><name>String</name> <name>tableName</name> <operator>=</operator> <call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTableName</name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>boolean</name> <name>exists</name> <operator>=</operator> <call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTableExists</name><argument_list>()</argument_list></call></expr>;
    <expr><name>boolean</name> <name>hasPermission</name> <operator>=</operator> <call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>canCreateTable</name><argument_list>(<argument><expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSysCredentials</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>boolean</name> <name>hasPermission</name> <operator>=</operator> <call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>canCreateTable</name><argument_list>(<argument><expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSysCredentials</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;
 
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TableOp</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TableOp</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6db56b28b</literal><operator>..</operator><name>dfe9c156d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TableOp</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TableOp</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">216</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">216</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TableOp</name> extends <name>Test</name> <block>{
           <return>return;</return></block></expr></expr_stmt></block_content></block></try>
         }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>AccumuloSecurityException</name></type> <name>ae</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <if_stmt><if>if <condition>(<expr><call><name><name>ae</name><operator>.</operator><name>getSecurityErrorCode</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>SecurityErrorCode</name><operator>.</operator><name>PERMISSION_DENIED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>canBulkImport</name><argument_list>(<argument><expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTabCredentials</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>canBulkImport</name><argument_list>(<argument><expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTabCredentials</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
               <throw>throw <expr><operator>new</operator> <call><name>AccumuloException</name><argument_list>(<argument><expr><literal type="string">"Bulk Import failed when it should have worked: "</literal> <operator>+</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
             <return>return;</return>
           </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>ae</name><operator>.</operator><name>getSecurityErrorCode</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>SecurityErrorCode</name><operator>.</operator><name>BAD_CREDENTIALS</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">230</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">230</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TableOp</name> extends <name>Test</name> <block>{
         <expr><call><name><name>fs</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
         <call><name><name>fs</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>fail</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>canBulkImport</name><argument_list>(<argument><expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTabCredentials</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>canBulkImport</name><argument_list>(<argument><expr><call><name><name>WalkingSecurity</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTabCredentials</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
           <throw>throw <expr><operator>new</operator> <call><name>AccumuloException</name><argument_list>(<argument><expr><literal type="string">"Bulk Import succeeded when it should have failed: "</literal> <operator>+</operator> <name>dir</name> <operator>+</operator> <literal type="string">" table "</literal> <operator>+</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
         <break>break;</break>
       <case>case <expr><name>ALTER_TABLE</name></expr>:</case>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></catch></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></switch>

</unit>
