<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/22a6209b8.java"><expr_stmt><expr><name>From</name> <literal type="number">22a6209b8bf579eeadf337c58d4f45fbfb87c8e4</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Josh</name> <name><name>Elser</name> <argument_list type="generic">&lt;<argument><name>elserj</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Sun</name></expr><operator>,</operator> <expr><literal type="number">30</literal> <name>Mar</name> <literal type="number">2014</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">49</literal><operator>:</operator><literal type="number">52</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">2586</literal> <name>Add</name> <name>in</name> <name>a</name> <name>deprecated</name> <name>RangeInputSplit</name> <name>to</name> <name>replace</name>
 <name>the</name> <literal type="number">1.5.0</literal> <name>structure</name>

<name>RangeInputSplit</name> <name>doesn</name><literal type="char">'t need to be duplicative, but 1.5.0 had it as such, so
it should also be in all of 1.5
--
 .../core/client/mapred/InputFormatBase.java   | 26 ++++++++++++++-----
 .../client/mapreduce/InputFormatBase.java     | 24 +++++++++++++----
 .../BadPasswordSplitsAccumuloInputFormat.java |  2 +-
 3 files changed, 40 insertions(+), 12 deletions(-)

diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java b/core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java
index ae361de2b..0438b78a4 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java
@@ -536,7 +536,7 @@ public abstract class InputFormatBase&lt;K,V&gt; implements InputFormat&lt;K,V&gt; {
   protected abstract static class RecordReaderBase&lt;K,V&gt; implements RecordReader&lt;K,V&gt; {
     protected long numKeysRead;
     protected Iterator&lt;Entry&lt;Key,Value&gt;&gt; scannerIterator;
    protected RangeInputSplit split;
    protected org.apache.accumulo.core.client.mapred.RangeInputSplit split;
 
     /**
      * Apply the configured iterators from the configuration to the scanner.
@@ -555,7 +555,7 @@ public abstract class InputFormatBase&lt;K,V&gt; implements InputFormat&lt;K,V&gt; {
      */
     public void initialize(InputSplit inSplit, JobConf job) throws IOException {
       Scanner scanner;
      split = (RangeInputSplit) inSplit;
      split = (org.apache.accumulo.core.client.mapred.RangeInputSplit) inSplit;
       log.debug("Initializing input split: " + split.getRange());
 
       Instance instance = split.getInstance();
@@ -849,7 +849,8 @@ public abstract class InputFormatBase&lt;K,V&gt; implements InputFormat&lt;K,V&gt; {
       throw new IOException(e);
     }
 
    ArrayList&lt;RangeInputSplit&gt; splits = new ArrayList&lt;RangeInputSplit&gt;(ranges.size());
    ArrayList&lt;org.apache.accumulo.core.client.mapred.RangeInputSplit&gt; splits = new ArrayList&lt;org.apache.accumulo.core.client.mapred.RangeInputSplit&gt;(
        ranges.size());
     HashMap&lt;Range,ArrayList&lt;String&gt;&gt; splitsToAdd = null;
 
     if (!autoAdjust)
@@ -871,7 +872,7 @@ public abstract class InputFormatBase&lt;K,V&gt; implements InputFormat&lt;K,V&gt; {
         for (Range r : extentRanges.getValue()) {
           if (autoAdjust) {
             // divide ranges into smaller ranges, based on the tablets
            splits.add(new RangeInputSplit(ke.clip(r), new String[] {location}));
            splits.add(new org.apache.accumulo.core.client.mapred.RangeInputSplit(ke.clip(r), new String[] {location}));
           } else {
             // don'</literal><name>t</name> <name>divide</name> <name>ranges</name>
             <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>locations</name> <operator>=</operator> <call><name><name>splitsToAdd</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">886</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">887</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>InputFormatBase</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> implements <name><name>InputFormat</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> <block>{
 
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>autoAdjust</name></expr>)</condition><block type="pseudo"><block_content>
       <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Range</name></argument>,<argument><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>entry</name> <range>: <expr><call><name><name>splitsToAdd</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>splits</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RangeInputSplit</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toArray</name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>
        <call><name><name>splits</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapred</name><operator>.</operator><name>RangeInputSplit</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toArray</name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <for>for <control>(<init><decl><type><name>RangeInputSplit</name></type> <name>split</name> <range>: <expr><name>splits</name></expr></range></decl></init>)</control> <block>{<block_content>
    <for>for <control>(<init><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapred</name><operator>.</operator><name>RangeInputSplit</name></name></type> <name>split</name> <range>: <expr><name>splits</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>split</name><operator>.</operator><name>setTable</name></name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>split</name><operator>.</operator><name>setOffline</name></name><argument_list>(<argument><expr><name>offline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>split</name><operator>.</operator><name>setIsolatedScan</name></name><argument_list>(<argument><expr><name>isolated</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">907</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">908</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>InputFormatBase</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> implements <name><name>InputFormat</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><call><name><name>splits</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>InputSplit</name><index>[<expr><call><name><name>splits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * @see org.apache.accumulo.core.client.mapred.RangeInputSplit
   */</comment>
  <class><annotation>@<name>Deprecated</name></annotation>
  <specifier>public</specifier> <specifier>static</specifier> class <name>RangeInputSplit</name> <super_list><extends>extends <super><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapred</name><operator>.</operator><name>RangeInputSplit</name></name></super></extends></super_list> <block>{
    <constructor><specifier>public</specifier> <name>RangeInputSplit</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <constructor><specifier>public</specifier> <name>RangeInputSplit</name><parameter_list>(<parameter><decl><type><name>Range</name></type> <name>range</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>locations</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>range</name></expr></argument>, <argument><expr><name>locations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>
  }</block></class>
 </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>InputFormatBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>InputFormatBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">451617616..506662047</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>InputFormatBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>InputFormatBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">547</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">547</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>InputFormatBase</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> extends <name><name>InputFormat</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> <block>{
   <expr><specifier>protected</specifier> <specifier>abstract</specifier> <specifier>static</specifier> <name>class</name> <name><name>RecordReaderBase</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> extends <name><name>RecordReader</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> <block>{
     <expr><specifier>protected</specifier> <name>long</name> <name>numKeysRead</name></expr>;
     <expr><specifier>protected</specifier> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>,<argument><name>Value</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>scannerIterator</name></expr>;
    <expr><specifier>protected</specifier> <name>RangeInputSplit</name> <name>split</name></expr>;
    <expr><specifier>protected</specifier> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>RangeInputSplit</name></name> <name>split</name></expr>;
 
     <comment type="block" format="javadoc">/**
      * Apply the configured iterators from the configuration to the scanner.
@@ -567,7 +567,7 @@ public abstract class InputFormatBase&lt;K,V&gt; extends InputFormat&lt;K,V&gt; {
     @Override
     public void initialize(InputSplit inSplit, TaskAttemptContext attempt) throws IOException {
       Scanner scanner;
      split = (RangeInputSplit) inSplit;
      split = (org.apache.accumulo.core.client.mapreduce.RangeInputSplit) inSplit;
       log.debug("Initializing input split: " + split.getRange());
 
       Instance instance = split.getInstance();
@@ -890,7 +890,7 @@ public abstract class InputFormatBase&lt;K,V&gt; extends InputFormat&lt;K,V&gt; {
         for (Range r : extentRanges.getValue()) {
           if (autoAdjust) {
             // divide ranges into smaller ranges, based on the tablets
            splits.add(new RangeInputSplit(ke.clip(r), new String[] {location}));
            splits.add(new org.apache.accumulo.core.client.mapreduce.RangeInputSplit(ke.clip(r), new String[] {location}));
           } else {
             // don't divide ranges
             ArrayList&lt;String&gt; locations = splitsToAdd.get(r);
@@ -905,10 +905,10 @@ public abstract class InputFormatBase&lt;K,V&gt; extends InputFormat&lt;K,V&gt; {
 
     if (!autoAdjust)
       for (Entry&lt;Range,ArrayList&lt;String&gt;&gt; entry : splitsToAdd.entrySet())
        splits.add(new RangeInputSplit(entry.getKey(), entry.getValue().toArray(new String[0])));
        splits.add(new org.apache.accumulo.core.client.mapreduce.RangeInputSplit(entry.getKey(), entry.getValue().toArray(new String[0])));
 
     for (InputSplit inputSplit : splits) {
      RangeInputSplit split = (RangeInputSplit) inputSplit;
      org.apache.accumulo.core.client.mapreduce.RangeInputSplit split = (org.apache.accumulo.core.client.mapreduce.RangeInputSplit) inputSplit;
 
       split.setTable(tableName);
       split.setOffline(offline);
@@ -1319,4 +1319,18 @@ public abstract class InputFormatBase&lt;K,V&gt; extends InputFormat&lt;K,V&gt; {
     }
   }
 
  /**
   * @see org.apache.accumulo.core.client.mapreduce.RangeInputSplit
   */</comment>
  @<expr><name>Deprecated</name>
  <specifier>public</specifier> <specifier>static</specifier> <name>class</name> <name>RangeInputSplit</name> extends <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>RangeInputSplit</name></name> <block>{

    <expr><specifier>public</specifier> <call><name>RangeInputSplit</name><argument_list>()</argument_list></call> <block>{
      <expr><call><name>super</name><argument_list>()</argument_list></call></expr>;
    }</block>

    <specifier>public</specifier> <call><name>RangeInputSplit</name><argument_list>(<argument><expr><name>Range</name> <name>range</name></expr></argument>, <argument><expr><name><name>String</name><index>[]</index></name> <name>locations</name></expr></argument>)</argument_list></call> <block>{
      <expr><call><name>super</name><argument_list>(<argument><expr><name>range</name></expr></argument>, <argument><expr><name>locations</name></expr></argument>)</argument_list></call></expr>;
    }</block></expr>
  }</block></expr>
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>BadPasswordSplitsAccumuloInputFormat</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>BadPasswordSplitsAccumuloInputFormat</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ee4233f09</name><operator>..</operator><name>fce7781c1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>BadPasswordSplitsAccumuloInputFormat</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>BadPasswordSplitsAccumuloInputFormat</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BadPasswordSplitsAccumuloInputFormat</name> extends <name>AccumuloInputFormat</name> <block>{
     <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>InputSplit</name></argument>&gt;</argument_list></name> <name>splits</name> <operator>=</operator> <call><name><name>super</name><operator>.</operator><name>getSplits</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
     
     <for>for <control>(<init><decl><type><name>InputSplit</name></type> <name>split</name> <range>: <expr><name>splits</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>RangeInputSplit</name></type> <name>rangeSplit</name> <init>= <expr><operator>(</operator><name>RangeInputSplit</name><operator>)</operator> <name>split</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>RangeInputSplit</name></name></type> <name>rangeSplit</name> <init>= <expr><operator>(</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>RangeInputSplit</name></name><operator>)</operator> <name>split</name></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>rangeSplit</name><operator>.</operator><name>setToken</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><literal type="string">"anythingelse"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></for>}</block>
     
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></expr_stmt></block_content></block></for>

</unit>
