<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/a8ef75ee0.java"><expr_stmt><expr><name>From</name> <name>a8ef75ee024e42a12cc8993b1c326c6575979e51</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Josh</name> <name><name>Elser</name> <argument_list type="generic">&lt;<argument><name>elserj</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">7</literal> <name>May</name> <literal type="number">2015</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">01</literal><operator>:</operator><literal type="number">45</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">3779</literal> <name>Restore</name> <name>proper</name> <name>use</name> <name>zookeepers</name> <name>and</name> <name>add</name>
 <name>clientconf</name> <name><name>warning</name><operator>.</operator>

<name>Warn</name></name> <name>when</name> <name>we</name> <name>don</name><literal type="char">'t find a client configuration file to use in
any of the normal locations and ensure that use of ZK goes from
shell option, to client conf to accumulo site.
--
 .../core/client/ClientConfiguration.java      |  4 ++
 .../java/org/apache/accumulo/shell/Shell.java | 40 +++++++++++++------
 .../apache/accumulo/shell/ShellOptionsJC.java | 11 +++++
 .../accumulo/shell/ShellConfigTest.java       | 36 +++++++++++++++++
 .../accumulo/shell/ShellSetInstanceTest.java  | 15 ++++---
 5 files changed, 87 insertions(+), 19 deletions(-)

diff --git a/core/src/main/java/org/apache/accumulo/core/client/ClientConfiguration.java b/core/src/main/java/org/apache/accumulo/core/client/ClientConfiguration.java
index f008ab7b4..ed996454d 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/ClientConfiguration.java
++ b/core/src/main/java/org/apache/accumulo/core/client/ClientConfiguration.java
@@ -222,6 +222,10 @@ public class ClientConfiguration extends CompositeConfiguration {
           configs.add(new ClientConfiguration(conf));
         }
       }
      // We couldn'</literal><name>t</name> <name>find</name> <name>the</name> <name>client</name> <name>configuration</name> <name>anywhere</name></expr></expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>configs</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Found no client.conf in default paths. Using default client configuration values."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
       <return>return <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><name>configs</name></expr></argument>)</argument_list></call></expr>;</return>
     } catch <expr_stmt><expr><operator>(</operator><name>ConfigurationException</name> <name>e</name><operator>)</operator> <block>{
       <throw>throw <argument_list>new <argument><expr><call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Error loading client configuration"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2db2e6378</literal><operator>..</operator><literal type="number">37856ad3f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">456</literal></expr>,<expr><literal type="number">27</literal> <operator>+</operator><literal type="number">456</literal></expr>,<expr><literal type="number">41</literal> @@ <specifier>public</specifier> <name>class</name> <name>Shell</name> extends <name>ShellOptions</name> implements <name>KeywordExecutable</name> <block>{
     }</block></expr>
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Get the ZooKeepers. Use the value passed in (if there was one), then fall back to the ClientConf, finally trying the accumulo-site.xml.
   *
   * @param keepers
   *          ZooKeepers passed to the shell
   * @param clientConfig
   *          ClientConfiguration instance
   * @return The ZooKeepers to connect to
   */</comment>
  <specifier>static</specifier> <name>String</name> <call><name>getZooKeepers</name><argument_list>(<argument><expr><name>String</name> <name>keepers</name></expr></argument>, <argument><expr><name>ClientConfiguration</name> <name>clientConfig</name></expr></argument>, <argument><expr><name>AccumuloConfiguration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>keepers</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><name>keepers</name></expr>;</return>
    <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>clientConfig</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr>;</return>
  }

   <comment type="block">/*
    * Takes instanceName and keepers as separate arguments, rather than just packaged into the clientConfig, so that we can fail over to accumulo-site.xml or
    * HDFS config if they're unspecified.
    */</comment>
  private <function><type><specifier>static</specifier> <name>Instance</name></type> <name>getZooInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>instanceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keepers</name></decl></parameter>, <parameter><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>Instance</name></type> <name>getZooInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>instanceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keepersOption</name></decl></parameter>, <parameter><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>UUID</name></type> <name>instanceId</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>instanceName</name> <operator>=</operator> <call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>keepers</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>keepers</name> <operator>=</operator> <call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name>keepers</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><call><name><name>SiteConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>ClientContext</name><operator>.</operator><name>convertClientConfig</name></name><argument_list>(<argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>Path</name></type> <name>instanceDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>VolumeConfiguration</name><operator>.</operator><name>getVolumeUris</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>, <argument><expr><literal type="string">"instance_id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>instanceId</name> <operator>=</operator> <call><name><name>UUID</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><call><name><name>ZooUtil</name><operator>.</operator><name>getInstanceIDFromHdfs</name></name><argument_list>(<argument><expr><name>instanceDir</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>keepers</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>keepers</name> <operator>=</operator> <call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><call><name><name>SiteConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>ClientContext</name><operator>.</operator><name>convertClientConfig</name></name><argument_list>(<argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>keepers</name> <init>= <expr><call><name>getZooKeepers</name><argument_list>(<argument><expr><name>keepersOption</name></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Path</name></type> <name>instanceDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>VolumeConfiguration</name><operator>.</operator><name>getVolumeUris</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>, <argument><expr><literal type="string">"instance_id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>instanceId</name> <operator>=</operator> <call><name><name>UUID</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><call><name><name>ZooUtil</name><operator>.</operator><name>getInstanceIDFromHdfs</name></name><argument_list>(<argument><expr><name>instanceDir</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><name>instanceId</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>keepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7e6445d33</literal><operator>..</operator><literal type="number">92ea1a5e0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>ClientContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>KerberosToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>SiteConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>ConfigurationException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>UserGroupInformation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">304</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">308</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellOptionsJC</name> <block>{
     <if_stmt><if>if <condition>(<expr><call><name>useSasl</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>clientConfig</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_RPC_SASL_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt></block></expr></expr_stmt>

    <comment type="line">// Automatically try to add in the proper ZK from accumulo-site for backwards compat.</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>clientConfig</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>siteConf</name> <init>= <expr><call><name><name>SiteConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>ClientContext</name><operator>.</operator><name>convertClientConfig</name></name><argument_list>(<argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>clientConfig</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><call><name><name>siteConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

     <return>return <expr><name>clientConfig</name></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellConfigTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellConfigTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">90b3028bc</literal><operator>..</operator><name>bbeef56a8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellConfigTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellConfigTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>shell</name></name>;</package>
 
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>jline</name><operator>.</operator><name>console</name><operator>.</operator><name>ConsoleReader</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ConfigurationCopy</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>shell</name><operator>.</operator><name>ShellTest</name><operator>.</operator><name>TestOutputStream</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Level</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">33</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellConfigTest</name> <block>{
     <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>shell</name><operator>.</operator><name>config</name></name><argument_list>(<argument><expr><call><name>args</name><argument_list>(<argument><expr><literal type="string">"--fake"</literal></expr></argument>, <argument><expr><literal type="string">"-tc"</literal></expr></argument>, <argument><expr><call><name><name>PasswordToken</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getCanonicalName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"-l"</literal></expr></argument>, <argument><expr><literal type="string">"password=foo"</literal></expr></argument>, <argument><expr><literal type="string">"-p"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>output</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><call><name><name>ParameterException</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getCanonicalName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testZooKeeperHostFallBackToSite</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name> <init>= <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>data</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>data</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"site_hostname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>ConfigurationCopy</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"site_hostname"</literal></expr></argument>, <argument><expr><call><name><name>Shell</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testZooKeeperHostFromClientConfig</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name> <init>= <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>clientConfig</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"cc_hostname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>data</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>data</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"site_hostname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>ConfigurationCopy</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"cc_hostname"</literal></expr></argument>, <argument><expr><call><name><name>Shell</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testZooKeeperHostFromOption</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name> <init>= <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>clientConfig</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"cc_hostname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>data</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>data</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"site_hostname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>ConfigurationCopy</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"opt_hostname"</literal></expr></argument>, <argument><expr><call><name><name>Shell</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>(<argument><expr><literal type="string">"opt_hostname"</literal></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">501b50263</literal><operator>..</operator><literal type="number">1bf03b86b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellSetInstanceTest</name> <block>{
       <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
 
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>onlyHosts</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

     <expr_stmt><expr><call><name>mockStatic</name><argument_list>(<argument><expr><name><name>ConfigSanityCheck</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>ConfigSanityCheck</name><operator>.</operator><name>validate</name></name><argument_list>(<argument><expr><name><name>EasyMock</name><operator>.</operator></name>&lt;<name>AccumuloConfiguration</name><operator>&gt;</operator> <call><name>anyObject</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>replay</name><argument_list>(<argument><expr><name><name>ConfigSanityCheck</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>onlyHosts</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>onlyInstance</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">240</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellSetInstanceTest</name> <block>{
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>isFake</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>isHdfsZooInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getKeys</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>GENERAL_SECURITY_CREDENTIAL_PROVIDER_PATHS</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>dashZ</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>zl</name> <init>= <expr><operator>new</operator> <call><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>zl</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>zl</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">250</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">251</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellSetInstanceTest</name> <block>{
       <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;
     }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name><operator>&gt;</operator> <call><name>emptyList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperHosts</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
