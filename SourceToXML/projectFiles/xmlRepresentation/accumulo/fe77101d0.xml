<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/fe77101d0.java"><expr_stmt><expr><name>From</name> <name>fe77101d08ee7ae7b8061c238f4169cb6869bafa</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Christopher</name> <name><name>Tubbs</name> <argument_list type="generic">&lt;<argument><name>ctubbsii</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">11</literal> <name>Feb</name> <literal type="number">2015</literal> <literal type="number">21</literal><operator>:</operator><literal type="number">10</literal><operator>:</operator><literal type="number">52</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">3580</literal> <name>Add</name> <name>some</name> <name>testing</name> <name>to</name> <name>exercise</name> <name>the</name>
 <name>TabletStateChangeIterator</name>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TabletStateChangeIteratorIT</name><operator>.</operator><name>java</name></name>          <operator>|</operator> <literal type="number">170</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <literal type="number">2</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">182</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">1</literal> <call><name>deletion</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>TabletStateChangeIteratorIT</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">687dddc7f</literal><operator>..</operator><literal type="number">7ad74fe77</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TabletLocationState</name><operator>.</operator><name>BadLocationSt</name></name>
 <name>import</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInputBuffer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutputBuffer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Level</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TabletStateChangeIterator</name> <super_list><extends>extends <super><name>SkippingIterator</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SERVERS_OPTION</name> <init>= <expr><literal type="string">"servers"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TABLES_OPTION</name> <init>= <expr><literal type="string">"tables"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>MERGES_OPTION</name> <init>= <expr><literal type="string">"merges"</literal></expr></init></decl>;</decl_stmt>
  <comment type="line">// private static final Logger log = Logger.getLogger(TabletStateChangeIterator.class);</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DEBUG_OPTION</name> <init>= <expr><literal type="string">"debug"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>TabletStateChangeIterator</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name></type> <name>current</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>onlineTables</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Text</name></argument>,<argument><name>MergeInfo</name></argument>&gt;</argument_list></name></type> <name>merges</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>boolean</name></type> <name>debug</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name><name>SortedKeyValueIterator</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>,<argument><name>Value</name></argument>&gt;</argument_list></name></type> <name>source</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>options</name></decl></parameter>, <parameter><decl><type><name>IteratorEnvironment</name></type> <name>env</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletStateChangeIterator</name> extends <name>SkippingIterator</name> <block>{
     <expr><name>current</name> <operator>=</operator> <call><name>parseServers</name><argument_list>(<argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>SERVERS_OPTION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>onlineTables</name> <operator>=</operator> <call><name>parseTables</name><argument_list>(<argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>TABLES_OPTION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>merges</name> <operator>=</operator> <call><name>parseMerges</name><argument_list>(<argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>MERGES_OPTION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>debug</name> <operator>=</operator> <call><name><name>options</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>DEBUG_OPTION</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>parseTables</name><argument_list>(<argument><expr><name>String</name> <name>tables</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">134</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">139</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletStateChangeIterator</name> extends <name>SkippingIterator</name> <block>{
       <comment type="line">// is the table supposed to be online or offline?</comment>
       <expr><name>boolean</name> <name>shouldBeOnline</name> <operator>=</operator> <call><name><name>onlineTables</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>tls</name><operator>.</operator><name>extent</name><operator>.</operator><name>getTableId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
      <if_stmt><if>if <condition>(<expr><name>debug</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>Level</name></type> <name>oldLevel</name> <init>= <expr><call><name><name>log</name><operator>.</operator><name>getLevel</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>setLevel</name></name><argument_list>(<argument><expr><name><name>Level</name><operator>.</operator><name>DEBUG</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name> <operator>+</operator> <literal type="string">" is "</literal> <operator>+</operator> <call><name><name>tls</name><operator>.</operator><name>getState</name></name><argument_list>(<argument><expr><name>current</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">" and should be "</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>shouldBeOnline</name></expr> ?</condition><then> <expr><literal type="string">"on"</literal></expr> </then><else>: <expr><literal type="string">"off"</literal></expr></else></ternary><operator>)</operator> <operator>+</operator> <literal type="string">"line"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>setLevel</name></name><argument_list>(<argument><expr><name>oldLevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr>
       <switch>switch <condition>(<expr><call><name><name>tls</name><operator>.</operator><name>getState</name></name><argument_list>(<argument><expr><name>current</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <case>case <expr><name>ASSIGNED</name></expr>:</case>
           <comment type="line">// we always want data about assigned tablets</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>TabletStateChangeIteratorIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>TabletStateChangeIteratorIT</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..ffd763699</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>TabletStateChangeIteratorIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">170</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name></name>;</package>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>Constants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchDeleter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriterConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>MutationsRejectedException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Scanner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableExistsException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableNotFoundException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>Tables</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>KeyExtent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>tables</name><operator>.</operator><name>TableState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>metadata</name><operator>.</operator><name>MetadataTable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>metadata</name><operator>.</operator><name>schema</name><operator>.</operator><name>MetadataSchema</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Authorizations</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>fate</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooCache</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>harness</name><operator>.</operator><name>SharedMiniClusterIT</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>CurrentState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>MergeInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>MetaDataTableScanner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TServerInstance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TabletStateChangeIterator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooLock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Predicate</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Sets</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Test to ensure that the {@link TabletStateChangeIterator} properly skips over tablet information in the metadata table when there is no work to be done on
 * the tablet (see ACCUMULO-3580)
 */</comment>
<class><specifier>public</specifier> class <name>TabletStateChangeIteratorIT</name> <super_list><extends>extends <super><name>SharedMiniClusterIT</name></super></extends></super_list> <block>{

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>TableExistsException</name></expr></argument>, <argument><expr><name>TableNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>tables</name> <init>= <expr><call><name>getUniqueNames</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>t1</name> <init>= <expr><name><name>tables</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>t2</name> <init>= <expr><name><name>tables</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>t3</name> <init>= <expr><name><name>tables</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>cloned</name> <init>= <expr><name><name>tables</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <comment type="line">// create some metadata</comment>
    <expr_stmt><expr><call><name>createTable</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>createTable</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>createTable</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// examine a clone of the metadata table, so we can manipulate it</comment>
    <expr_stmt><expr><call><name>cloneMetadataTable</name><argument_list>(<argument><expr><name>cloned</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"No tables should need attention"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>findTabletsNeedingAttention</name><argument_list>(<argument><expr><name>cloned</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// test the assigned case (no location)</comment>
    <expr_stmt><expr><call><name>removeLocation</name><argument_list>(<argument><expr><name>cloned</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Should have one tablet without a loc"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>findTabletsNeedingAttention</name><argument_list>(<argument><expr><name>cloned</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// TODO test the cases where the assignment is to a dead tserver</comment>
    <comment type="line">// TODO test the cases where there is ongoing merges</comment>
    <comment type="line">// TODO test the bad tablet location state case (active split, inconsistent metadata)</comment>

    <comment type="line">// clean up</comment>
    <expr_stmt><expr><call><name>dropTables</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt/></block_content></block></function></block></class></block_content></block></switch>}</block>

  <specifier>private</specifier> <name>void</name> <call><name>removeLocation</name><argument_list>(<argument><expr><name>String</name> <name>table</name></expr></argument>, <argument><expr><name>String</name> <name>tableNameToModify</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>TableNotFoundException</name></expr></argument>, <argument><expr><name>MutationsRejectedException</name> <block>{
    <expr><name>String</name> <name>tableIdToModify</name> <operator>=</operator> <call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableIdMap</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>tableNameToModify</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>BatchDeleter</name></type> <name>deleter</name> <init>= <expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createBatchDeleter</name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><name><name>Authorizations</name><operator>.</operator><name>EMPTY</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>deleter</name><operator>.</operator><name>setRanges</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>KeyExtent</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><name>tableIdToModify</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toMetadataRange</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>deleter</name><operator>.</operator><name>fetchColumnFamily</name></name><argument_list>(<argument><expr><name><name>MetadataSchema</name><operator>.</operator><name>TabletsSection</name><operator>.</operator><name>CurrentLocationColumnFamily</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>deleter</name><operator>.</operator><name>delete</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>deleter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>int</name></type> <name>findTabletsNeedingAttention</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>table</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TableNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>results</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Scanner</name></type> <name>scanner</name> <init>= <expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createScanner</name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><name><name>Authorizations</name><operator>.</operator><name>EMPTY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>MetaDataTableScanner</name><operator>.</operator><name>configureScanner</name></name><argument_list>(<argument><expr><name>scanner</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>State</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>scanner</name><operator>.</operator><name>updateScanIteratorOption</name></name><argument_list>(<argument><expr><literal type="string">"tabletChange"</literal></expr></argument>, <argument><expr><literal type="string">"debug"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>,<argument><name>Value</name></argument>&gt;</argument_list></name></type> <name>e</name> <range>: <expr><name>scanner</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>e</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>results</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>results</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>createTable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>t</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>online</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>TableNotFoundException</name></expr></argument>, <argument><expr><name>TableExistsException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Connector</name></type> <name>conn</name> <init>= <expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>online</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>online</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>offline</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>cloneMetadataTable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>cloned</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>TableNotFoundException</name></expr></argument>, <argument><expr><name>TableExistsException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>clone</name><argument_list>(<argument><expr><name><name>MetadataTable</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><name>cloned</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>dropTables</name><parameter_list>(<parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>tables</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>TableNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>t</name> <range>: <expr><name>tables</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>delete</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>

  <class><specifier>private</specifier> <specifier>final</specifier> class <name>State</name> <super_list><implements>implements <super><name>CurrentState</name></super></implements></super_list> <block>{

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name></type> <name>onlineTabletServers</name><parameter_list>()</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name></type> <name>tservers</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>tserver</name> <range>: <expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>instanceOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTabletServers</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <try>try <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>zPath</name> <init>= <expr><call><name><name>ZooUtil</name><operator>.</operator><name>getRoot</name></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstance</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>Constants</name><operator>.</operator><name>ZTSERVERS</name></name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>tserver</name></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>long</name></type> <name>sessionId</name> <init>= <expr><call><name><name>ZooLock</name><operator>.</operator><name>getSessionId</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ZooCache</name><argument_list>(<argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstance</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepersSessionTimeOut</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>zPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>tservers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TServerInstance</name><argument_list>(<argument><expr><name>tserver</name></expr></argument>, <argument><expr><name>sessionId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
      </block_content>}</block></for>
      <return>return <expr><name>tservers</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>onlineTables</name><parameter_list>()</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>onlineTables</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableIdMap</name><argument_list>()</argument_list></call><operator>.</operator><call><name>values</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><call><name><name>Sets</name><operator>.</operator><name>filter</name></name><argument_list>(<argument><expr><name>onlineTables</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Predicate</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>boolean</name></type> <name>apply</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tableId</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <return>return <expr><call><name><name>Tables</name><operator>.</operator><name>getTableState</name></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstance</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call> <operator>==</operator> <name><name>TableState</name><operator>.</operator><name>ONLINE</name></name></expr>;</return>
        </block_content>}</block></function>
      }</block></class></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>MergeInfo</name></argument>&gt;</argument_list></name></type> <name>merges</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

}</block></class>
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
