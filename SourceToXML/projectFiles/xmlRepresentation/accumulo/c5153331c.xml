<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/c5153331c.java"><expr_stmt><expr><name>From</name> <name>c5153331cedf729393601fc3a26c5100a8051f00</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Josh</name> <name><name>Elser</name> <argument_list type="generic">&lt;<argument><name>elserj</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">19</literal> <name>Jan</name> <literal type="number">2015</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">56</literal><operator>:</operator><literal type="number">04</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">3496</literal> <name>Enforce</name> <name>a</name> <name>valid</name> <name>instance</name> <name>name</name> <name>on</name> <name>ZKI</name> <name><name>creation</name><operator>.</operator></name>

1.5 <name>contained</name> <name>a</name> <name>check</name></expr><operator>,</operator> <expr><name>by</name> <name>calling</name> <call><name>getInstanceID</name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>which</name> <name>would</name> <throw>throw
<argument_list>a <argument><expr><name>RuntimeException</name></expr></argument></argument_list></throw></expr></expr_stmt> <if_stmt><if>if the user passed in an instance name which did
not exist in the zookeepers provided. The introduction of the client
configuration appears to have removed that check.

This change reintroduces that check and fixes any <condition>(<expr><name>now</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>broken</name> <name><name>tests</name><operator>.</operator></name>
--
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstance</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstanceTest</name><operator>.</operator><name>java</name></name>         <operator>|</operator> <literal type="number">14</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">12</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ReadWriteIT</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">7</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">29</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">8</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstance</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstance</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b738ed91c</name><operator>..</operator><literal type="number">66aca1a2a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstance</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstance</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZooKeeperInstance</name> implements <name>Instance</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>zooKeepers</name></name> <operator>=</operator> <call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr>;
     <name><name>this</name><operator>.</operator><name>zooKeepersSessionTimeOut</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator> <call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt></block_content></block></if></if_stmt>
     <expr_stmt><expr><name>zooCache</name> <operator>=</operator> <call><name><name>zcf</name><operator>.</operator><name>getZooCache</name></name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>, <argument><expr><name>zooKeepersSessionTimeOut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>instanceName</name></expr>)</condition> <block>{<block_content>
      <comment type="line">// Validates that the provided instanceName actually exists</comment>
      <expr_stmt><expr><call><name>getInstanceID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
   }
 
   @<expr_stmt><expr><name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstanceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstanceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dce742f53</name><operator>..</operator><literal type="number">436aff742</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstanceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstanceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>Constants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>fate</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>fate</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooCacheFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZooKeeperInstanceTest</name> <block>{
     <expr><name>zcf</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>ZooCacheFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>zc</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>ZooCache</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>zcf</name><operator>.</operator><name>getZooCache</name></name><argument_list>(<argument><expr><literal type="string">"zk1"</literal></expr></argument>, <argument><expr><literal type="number">30000</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>zc</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>replay</name><argument_list>(<argument><expr><name>zcf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>zc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>ZROOT</name></name> <operator>+</operator> <name><name>Constants</name><operator>.</operator><name>ZINSTANCES</name></name> <operator>+</operator> <literal type="string">"/instance"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>IID_STRING</name><operator>.</operator><name>getBytes</name></name><argument_list>(<argument><expr><name>UTF_8</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>zc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>ZROOT</name></name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>IID_STRING</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"yup"</literal><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>replay</name><argument_list>(<argument><expr><name>zc</name></expr></argument>, <argument><expr><name>zcf</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>zki</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>zcf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>resetToDefault</name></name><argument_list>(<argument><expr><name>zc</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<call><name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>IllegalArgumentException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZooKeeperInstanceTest</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testGetInstanceID_NoMapping</name><argument_list>()</argument_list></call> <block>{
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>zc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>ZROOT</name></name> <operator>+</operator> <name><name>Constants</name><operator>.</operator><name>ZINSTANCES</name></name> <operator>+</operator> <literal type="string">"/instance"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>replay</name><argument_list>(<argument><expr><name>zc</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>zki</name><operator>.</operator><name>getInstanceID</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>reset</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>zcf</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>zcf</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<call><name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>RuntimeException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">148</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">153</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZooKeeperInstanceTest</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testAllZooKeepersAreUsed</name><argument_list>()</argument_list></call> <block>{
     <expr><name>final</name> <name>String</name> <name>zookeepers</name> <operator>=</operator> <literal type="string">"zk1,zk2,zk3"</literal></expr>, <expr><name>instanceName</name> <operator>=</operator> <literal type="string">"accumulo"</literal></expr>;
     <expr><name>ZooCacheFactory</name> <name>factory</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>ZooCacheFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>reset</name></name><argument_list>(<argument><expr><name>zc</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>getZooCache</name></name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>, <argument><expr><literal type="number">30000</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>zc</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>replay</name><argument_list>(<argument><expr><name>factory</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>zc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>ZROOT</name></name> <operator>+</operator> <name><name>Constants</name><operator>.</operator><name>ZINSTANCES</name></name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>instanceName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>IID_STRING</name><operator>.</operator><name>getBytes</name></name><argument_list>(<argument><expr><name>UTF_8</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>zc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>ZROOT</name></name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>IID_STRING</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"yup"</literal><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>replay</name><argument_list>(<argument><expr><name>zc</name></expr></argument>, <argument><expr><name>factory</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ClientConfiguration</name> <name>cfg</name> <operator>=</operator> <call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ZooKeeperInstance</name> <name>zki</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>factory</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>, <argument><expr><call><name><name>zki</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bcbc2361c</name><operator>..</operator><literal type="number">751421a36</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">91</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">91</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConfiguratorBaseTest</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1234"</literal></expr></argument>, <argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ZooKeeperInstance</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>Instance</name> <name>instance</name> <operator>=</operator> <call><name><name>ConfiguratorBase</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ZooKeeperInstance</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>instance</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator> <name>instance</name><operator>)</operator><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator> <name>instance</name><operator>)</operator><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1234000</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator> <name>instance</name><operator>)</operator><operator>.</operator><call><name>getZooKeepersSessionTimeOut</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <comment type="line">// We want to test that the correct parameters from the config get passed to the ZKI</comment>
    <comment type="line">// but that keeps us from being able to make assertions on a valid instance name at ZKI creation</comment>
    <comment type="line">// Instance instance = ConfiguratorBase.getInstance(this.getClass(), conf);</comment>
    <comment type="line">// assertEquals(ZooKeeperInstance.class.getName(), instance.getClass().getName());</comment>
    <comment type="line">// assertEquals("testInstanceName", ((ZooKeeperInstance) instance).getInstanceName());</comment>
    <comment type="line">// assertEquals("testZooKeepers", ((ZooKeeperInstance) instance).getZooKeepers());</comment>
    <comment type="line">// assertEquals(1234000, ((ZooKeeperInstance) instance).getZooKeepersSessionTimeOut());</comment>
   }</block>
 
   @<name>Test</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ReadWriteIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ReadWriteIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>da398d6f9</name><operator>..</operator><name>a9f88873d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ReadWriteIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ReadWriteIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">46</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriter</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriterConfig</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Scanner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>admin</name><operator>.</operator><name>TableOperations</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReadWriteIT</name> extends <name>AccumuloClusterIT</name> <block>{
     <return>return <expr><literal type="number">6</literal> <operator>*</operator> <literal type="number">60</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>RuntimeException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>invalidInstanceName</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Connector</name></type> <name>conn</name> <init>= <expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><literal type="string">"fake_instance_name"</literal></expr></argument>, <argument><expr><call><name><name>conn</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>sunnyDay</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">// Start accumulo, create a table, insert some data, verify we can read it out.</comment>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function>

</unit>
