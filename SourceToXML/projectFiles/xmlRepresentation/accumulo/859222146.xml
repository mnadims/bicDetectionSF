<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/859222146.java"><expr_stmt><expr><name>From</name> <literal type="number">859222146c0a6c168b0323bbb3715b24011e4edb</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <literal type="string">"Eric C. Newton"</literal> <operator>&lt;</operator><name>ecn</name>@<name><name>apache</name><operator>.</operator><name>org</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">16</literal> <name>May</name> <literal type="number">2013</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">41</literal><operator>:</operator><literal type="number">42</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">1421</literal> <name>simplify</name> <name>reflection</name> <name>lookup</name> <name>of</name> <name>SafeModeAction</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/accumulo/trunk@1483498 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name><name>Accumulo</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">17</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">3</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">14</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name><name>Accumulo</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name><name>Accumulo</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2e7f12bc2</literal><operator>..</operator><literal type="number">6776c40c1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name><name>Accumulo</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name><name>Accumulo</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">29</literal> <operator>+</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>Accumulo</name> <block>{
     <expr><name>DistributedFileSystem</name> <name>dfs</name> <operator>=</operator> <operator>(</operator><name>DistributedFileSystem</name><operator>)</operator> <call><name><name>FileSystem</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>CachedConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// So this: if (!dfs.setSafeMode(SafeModeAction.SAFEMODE_GET))</comment>
     <comment type="line">// Becomes this:</comment>
    <expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <name>constantClass</name></expr>;
    <expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <name>safeModeAction</name></expr>;
     <try>try <block>{<block_content>
       <comment type="line">// hadoop 2.0</comment>
      <expr_stmt><expr><name>constantClass</name> <operator>=</operator> <call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><literal type="string">"org.apache.hadoop.hdfs.protocol.HdfsConstants"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>safeModeAction</name> <operator>=</operator> <call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><literal type="string">"org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <comment type="line">// hadoop 1.0</comment>
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>constantClass</name> <operator>=</operator> <call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><literal type="string">"org.apache.hadoop.hdfs.protocol.FSConstants"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>safeModeAction</name> <operator>=</operator> <call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><literal type="string">"org.apache.hadoop.hdfs.protocol.FSConstants$SafeModeAction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Cannot figure out the right class for Constants"</literal></expr></argument>)</argument_list></call></expr>;</throw>
       </block_content>}</block></catch></try>
     </block_content>}</block></catch>
    <decl_stmt><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>safeModeAction</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>klass</name> <range>: <expr><call><name><name>constantClass</name><operator>.</operator><name>getDeclaredClasses</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>klass</name><operator>.</operator><name>getSimpleName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"SafeModeAction"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>safeModeAction</name> <operator>=</operator> <name>klass</name></expr>;</expr_stmt>
        <break>break;</break>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt><if>if <condition>(<expr><name>safeModeAction</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Cannot find SafeModeAction in constants class"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    
     <decl_stmt><decl><type><name>Object</name></type> <name>get</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>Object</name></type> <name>obj</name> <range>: <expr><call><name><name>safeModeAction</name><operator>.</operator><name>getEnumConstants</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><call><name><name>obj</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"SAFEMODE_GET"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

</unit>
