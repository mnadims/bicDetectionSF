<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/f42ead0d3.java"><expr_stmt><expr><name>From</name> <name>f42ead0d39e34578c6fe9636af4cfbd9d91e47a5</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Sean</name> <name><name>Busbey</name> <argument_list type="generic">&lt;<argument><name>busbey</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">20</literal> <name>Jan</name> <literal type="number">2014</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">26</literal><operator>:</operator><literal type="number">20</literal> <operator>-</operator><literal type="number">0600</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">2224</literal> <name>Make</name> <name>ZooSession</name> <name>more</name> <name>resiliant</name> <name>in</name> <name>the</name> <name>face</name> <name>of</name>
 <specifier>transient</specifier> <name>DNS</name> <name><name>issues</name><operator>.</operator></name>

* <name>retries</name></expr></expr_stmt> <if_stmt><if>if host is not found<operator>,</operator> <expr_stmt><expr><name>up</name> <name>to</name> <literal type="number">2xZK</literal> <call><name>timeout</name> <argument_list>(<argument><expr><name>same</name> <name>as</name> <name>other</name> <name>IOExceptions</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><name>rather</name> <name>than</name> <name>bailing</name> <name>on</name> <name>any</name> <name>host</name> <name>name</name> <name><name>problem</name><operator>.</operator></name>
* <name>adds</name> <name>utility</name> <name>method</name></expr></expr_stmt></if></if_stmt> <for>for getting the max time the JVM will cache host failures
* add test for said method
--
 .../accumulo/core/util/AddressUtil.java       <operator>|</operator> 39 +++++++++++
 .../accumulo/core/zookeeper/ZooSession.java   <operator>|</operator> 11 +--
 .../accumulo/core/util/AddressUtilTest.java   <operator>|</operator> 69 ++++++++++++++++++-
 src/core/src/test/resources/log4j.properties  <operator>|</operator> 23 +++++++
 4 files changed<operator>,</operator> <expr_stmt><expr><literal type="number">137</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">5</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>log4j</name><operator>.</operator><name>properties</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0b821289d</literal><operator>..</operator><literal type="number">96c2e18b7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt></for>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetAddress</name></name>;</import> <comment type="line">// workaround to enable @see/@link hyperlink</comment>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetSocketAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>UnknownHostException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>Security</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSocket</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>

 <class><specifier>public</specifier> class <name>AddressUtil</name> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>AddressUtil</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

   <function><type><specifier>static</specifier> <specifier>public</specifier> <name>InetSocketAddress</name></type> <name>parseAddress</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>defaultPort</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>NumberFormatException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>parts</name> <init>= <expr><call><name><name>address</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">":"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name><name>parts</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">36</literal> @@ <specifier>public</specifier> <name>class</name> <name>AddressUtil</name> <block>{
   <expr><specifier>static</specifier> <specifier>public</specifier> <name>String</name> <call><name>toString</name><argument_list>(<argument><expr><name>InetSocketAddress</name> <name>addr</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><call><name><name>addr</name><operator>.</operator><name>getAddress</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHostAddress</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>addr</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr>
   }</block>

  <comment type="block" format="javadoc">/**
   * Fetch the security value that determines how long DNS failures are cached.
   * Looks up the security property 'networkaddress.cache.negative.ttl'. Should that fail returns
   * the default value used in the Oracle JVM 1.4+, which is 10 seconds.
   *
   * @param originalException the host lookup that is the source of needing this lookup. maybe be null.
   * @return positive integer number of seconds
   * @see java.net.InetAddress
   * @throws IllegalArgumentException if dns failures are cached forever
   */</comment>
  <specifier>static</specifier> <specifier>public</specifier> <name>int</name> <call><name>getAddressCacheNegativeTtl</name><argument_list>(<argument><expr><name>UnknownHostException</name> <name>originalException</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>int</name> <name>negativeTtl</name> <operator>=</operator> <literal type="number">10</literal></expr>;</block></expr></expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>negativeTtl</name> <operator>=</operator> <call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>Security</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"networkaddress.cache.negative.ttl"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NumberFormatException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Failed to get JVM negative DNS respones cache TTL due to format problem (e.g. this JVM might not have the "</literal> <operator>+</operator>
                <literal type="string">"property). Falling back to default based on Oracle JVM 1.6 (10s)"</literal></expr></argument>, <argument><expr><name>exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>SecurityException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Failed to get JVM negative DNS response cache TTL due to security manager. Falling back to default based on Oracle JVM 1.6 (10s)"</literal></expr></argument>, <argument><expr><name>exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
    <if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <name>negativeTtl</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"JVM negative DNS repsonse cache TTL is set to 'forever' and host lookup failed. TTL can be changed with security property "</literal> <operator>+</operator>
                <literal type="string">"'networkaddress.cache.negative.ttl', see java.net.InetAddress."</literal></expr></argument>, <argument><expr><name>originalException</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>originalException</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>&gt;</operator> <name>negativeTtl</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"JVM specified negative DNS response cache TTL was negative (and not 'forever'). Falling back to default based on Oracle JVM 1.6 (10s)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>negativeTtl</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>negativeTtl</name></expr>;</return>
  </block_content>}</block></if></if_stmt>
   
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>zookeeper</name><operator>/</operator><name><name>ZooSession</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>zookeeper</name><operator>/</operator><name><name>ZooSession</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e64f0c52e</name><operator>..</operator><name>e3c9cc735</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>zookeeper</name><operator>/</operator><name><name>ZooSession</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>zookeeper</name><operator>/</operator><name><name>ZooSession</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>UnknownHostException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>AddressUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>UtilWaitThread</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>WatchedEvent</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZooSession</name> <block>{
         <if_stmt><if>if <condition>(<expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>startTime</name> <operator>&gt;</operator> <literal type="number">2</literal> <operator>*</operator> <name>timeout</name></expr>)</condition><block type="pseudo"><block_content>
           <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Failed to connect to zookeeper ("</literal> <operator>+</operator> <name>host</name> <operator>+</operator> <literal type="string">") within 2x zookeeper timeout period "</literal> <operator>+</operator> <name>timeout</name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
 
      }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>UnknownHostException</name></type> <name>uhe</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// do not expect to recover from this</comment>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><call><name><name>uhe</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" : "</literal> <operator>+</operator> <call><name><name>uhe</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>uhe</name></expr></argument>)</argument_list></call></expr>;</throw>
       </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>e</name> <operator>instanceof</operator> <name>UnknownHostException</name></expr>)</condition> <block>{<block_content>
          <comment type="block">/*
             Make sure we wait atleast as long as the JVM TTL for negative DNS responses
           */</comment>
          <expr_stmt><expr><name>sleepTime</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>sleepTime</name></expr></argument>, <argument><expr><operator>(</operator><call><name><name>AddressUtil</name><operator>.</operator><name>getAddressCacheNegativeTtl</name></name><argument_list>(<argument><expr><operator>(</operator><name>UnknownHostException</name><operator>)</operator> <name>e</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
         <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Connection to zooKeeper failed, will try again in "</literal> <operator>+</operator> <call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%.2f secs"</literal></expr></argument>, <argument><expr><name>sleepTime</name> <operator>/</operator> <literal type="number">1000.0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></catch> <finally>finally <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>tryAgain</name> <operator>&amp;&amp;</operator> <name>zooKeeper</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtilTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtilTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f46f4277d</name><operator>..</operator><name>e71ba0e47</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtilTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>AddressUtilTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt></block_content></block></if></if_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetSocketAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>Security</name></name>;</import>
 
 <import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSocket</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -28,6 +30,9 @@ import org.apache.thrift.transport.TSocket;
  * 
  */</comment>
 <class><specifier>public</specifier> class <name>AddressUtilTest</name> <super_list><extends>extends <super><name>TestCase</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>AddressUtilTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

   <function><type><specifier>public</specifier> <name>void</name></type> <name>testAddress</name><parameter_list>()</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>InetSocketAddress</name></type> <name>addr</name> <init>= <expr><call><name><name>AddressUtil</name><operator>.</operator><name>parseAddress</name></name><argument_list>(<argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>, <argument><expr><literal type="number">12345</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>addr</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InetSocketAddress</name><argument_list>(<argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>, <argument><expr><literal type="number">12345</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">67</literal> @@ <specifier>public</specifier> <name>class</name> <name>AddressUtilTest</name> extends <name>TestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testToString</name><argument_list>()</argument_list></call> <block>{
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>AddressUtil</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InetSocketAddress</name><argument_list>(<argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>, <argument><expr><literal type="number">1234</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"127.0.0.1:1234"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
  

  <specifier>public</specifier> <name>void</name> <call><name>testGetNegativeTtl</name><argument_list>()</argument_list></call> <block>{
    <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Checking that we can get the ttl on dns failures."</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>int</name> <name>expectedTtl</name> <operator>=</operator> <literal type="number">20</literal></expr>;
    <expr><name>boolean</name> <name>expectException</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
    <comment type="block">/* TODO replace all of this with Powermock on the Security class */</comment>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>Security</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"networkaddress.cache.negative.ttl"</literal></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>expectedTtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></try>}</block></expr> <catch>catch <parameter_list>(<parameter><decl><type><name>SecurityException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"We can't set the DNS cache period, so we're only testing fetching the system value."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>expectedTtl</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></catch>}</block></expr></expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>expectedTtl</name> <operator>=</operator> <call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>Security</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"networkaddress.cache.negative.ttl"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SecurityException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Security manager won't let us fetch the property, testing default path."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>expectedTtl</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>NumberFormatException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"property isn't a number, testing default path."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>expectedTtl</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
    <if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <name>expectedTtl</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"property is set to 'forever', testing exception path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>expectException</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>&gt;</operator> <name>expectedTtl</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"property is a negative value other than 'forever', testing default path."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>expectedTtl</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <try>try <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>expectException</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"AddressUtil is (hopefully) going to spit out an error about DNS lookups. you can ignore it."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><call><name><name>AddressUtil</name><operator>.</operator><name>getAddressCacheNegativeTtl</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>expectException</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"The JVM Security settings cache DNS failures forever. In this case we expect an exception but didn't get one."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Didn't get the ttl we expected"</literal></expr></argument>, <argument><expr><name>expectedTtl</name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalArgumentException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>expectException</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Got an exception when we weren't expecting."</literal></expr></argument>, <argument><expr><name>exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"We only expect to throw an IllegalArgumentException when the JVM caches DNS failures forever."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetNegativeTtlThrowsOnForever</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"When DNS is cached forever, we should throw."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block">/* TODO replace all of this with Powermock on the Security class */</comment>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>Security</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"networkaddress.cache.negative.ttl"</literal></expr></argument>, <argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SecurityException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"We can't set the DNS cache period, so this test is effectively ignored."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    </block_content>}</block></catch></try>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"AddressUtil is (hopefully) going to spit out an error about DNS lookups. you can ignore it."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><call><name><name>AddressUtil</name><operator>.</operator><name>getAddressCacheNegativeTtl</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"The JVM Security settings cache DNS failures forever, this should cause an exception."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch<parameter_list>(<parameter><decl><type><name>IllegalArgumentException</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>log4j</name><operator>.</operator><name>properties</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>log4j</name><operator>.</operator><name>properties</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..28244919f</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>log4j</name><operator>.</operator><name>properties</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@
# <name>Licensed</name> <name>to</name> <name>the</name> <name>Apache</name> <name>Software</name> <call><name>Foundation</name> <argument_list>(<argument><expr><name>ASF</name></expr></argument>)</argument_list></call> <name>under</name> <name>one</name> <name>or</name> <name>more</name>
# <name>contributor</name> <name>license</name> <name><name>agreements</name><operator>.</operator>  <name>See</name></name> <name>the</name> <name>NOTICE</name> <name>file</name> <name>distributed</name> <name>with</name>
# <name>this</name> <name>work</name></expr></expr_stmt> <for>for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License<operator>,</operator> <expr_stmt><expr><name>Version</name> <literal type="number">2.0</literal>
# <operator>(</operator><name>the</name> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt></for> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name> <name>with</name>
# <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>
#
#     <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>
#
# <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
# <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
# <expr><name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator></name>
# <name>See</name> <name>the</name> <name>License</name></expr></expr_stmt> <for>for the specific language governing permissions and
# limitations under the License.

log4j.rootLogger=INFO<operator>,</operator> <decl_stmt><decl><type><name>CA</name></type>
<name><name>log4j</name><operator>.</operator><name>appender</name><operator>.</operator><name>CA</name></name><init>=<expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>ConsoleAppender</name></name>
<name><name>log4j</name><operator>.</operator><name>appender</name><operator>.</operator><name>CA</name><operator>.</operator><name>layout</name></name><operator>=</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>PatternLayout</name></name>
<name><name>log4j</name><operator>.</operator><name>appender</name><operator>.</operator><name>CA</name><operator>.</operator><name>layout</name><operator>.</operator><name>ConversionPattern</name></name><operator>=</operator><index>[<expr><operator>%</operator><name>t</name></expr>]</index> <operator>%</operator><operator>-</operator><literal type="number">5p</literal> <operator>%</operator><name>c</name> <operator>%</operator><name>x</name> <operator>-</operator> <operator>%</operator><name>m</name><operator>%</operator><name>n</name>

<name><name>log4j</name><operator>.</operator><name>logger</name><operator>.</operator><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name></name><operator>=</operator><name>ERROR</name></expr></init></decl>,<decl><type ref="prev"/><name>CA</name>
<name><name>log4j</name><operator>.</operator><name>logger</name><operator>.</operator><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>ServerClient</name></name><init>=<expr><name>ERROR</name>
<name><name>log4j</name><operator>.</operator><name>logger</name><operator>.</operator><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>Auditor</name></name><operator>=</operator><name>off</name>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></init></decl></decl_stmt></for></block_content></block></finally></block></class>

</unit>
