<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/e5086f908.java"><expr_stmt><expr><name>From</name> <name>e5086f90863f21787b66dcb82b900ca14144900a</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Christopher</name> <name><name>Tubbs</name> <argument_list type="generic">&lt;<argument><name>ctubbsii</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">12</literal> <name>Feb</name> <literal type="number">2015</literal> <literal type="number">17</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">37</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">3583</literal> <name>Always</name></expr></expr_stmt> <return>return <expr><name>information</name> <name>about</name> <name>merges</name>

<name>Fix</name> <name>broken</name> <name>tests</name> <name>and</name> <name>ensure</name> <name>that</name> <name>TabletStateChangeIterator</name> <name>always</name> <name>returns</name>
<name>tablets</name></expr></return> <for>for tables involved in merges.
--
 .../server/master/state/TabletStateChangeIterator.java <operator>|</operator>  4 +++-
 .../apache/accumulo/server/master/TestMergeState.java  <operator>|</operator>  7 +++----
 .../java/org/apache/accumulo/test/ShellServerTest.java <operator>|</operator> 10 ++++++++--
 3 files changed<operator>,</operator> <expr_stmt><expr><literal type="number">14</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">7</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b11809c01</name><operator>..</operator><name>a3402dfa6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TabletStateChangeIterator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletStateChangeIterator</name> extends <name>SkippingIterator</name> <block>{
       }</block>
       <comment type="line">// we always want data about merges</comment>
       <name>MergeInfo</name> <name>merge</name> <operator>=</operator> <call><name><name>merges</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>tls</name><operator>.</operator><name>extent</name><operator>.</operator><name>getTableId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
      <if_stmt><if>if <condition>(<expr><name>merge</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>merge</name><operator>.</operator><name>getRange</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>merge</name><operator>.</operator><name>getRange</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>overlaps</name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>merge</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// could make this smarter by only returning if the tablet is involved in the merge</comment>
         <return>return;</return>
       </block_content>}</block></if></if_stmt>

       <comment type="line">// is the table supposed to be online or offline?</comment>
       <decl_stmt><decl><type><name>boolean</name></type> <name>shouldBeOnline</name> <init>= <expr><call><name><name>onlineTables</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>tls</name><operator>.</operator><name>extent</name><operator>.</operator><name>getTableId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TestMergeState</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TestMergeState</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3c0fae3dd</literal><operator>..</operator><name>bb6294b85</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TestMergeState</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TestMergeState</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>MergeStats</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>MetaDataStateStore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TServerInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TabletLocationState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TabletState</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMergeState</name> <block>{
     <expr><name>MetaDataStateStore</name> <name>metaDataStateStore</name> <operator>=</operator> <operator>new</operator> <call><name>MetaDataStateStore</name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>auths</name></expr></argument>, <argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;
     <name>int</name> <name>count</name> <operator>=</operator> <literal type="number">0</literal></block></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>TabletLocationState</name></type> <name>tss</name> <range>: <expr><name>metaDataStateStore</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>TabletState</name><operator>.</operator><name>HOSTED</name></name></expr></argument>, <argument><expr><call><name><name>tss</name><operator>.</operator><name>getState</name></name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>onlineTabletServers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>tss</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
     </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>splits</name><operator>.</operator><name>length</name></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// the normal case is to skip tablets in a good state</comment>
 
     <comment type="line">// Create the hole</comment>
     <comment type="line">// Split the tablet at one end of the range</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1dfb5aeae</literal><operator>..</operator><name>aaa2f555f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerTest</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>class</name> <name>NoOpErrorMessageCallback</name> extends <name>ErrorMessageCallback</name> <block>{
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>empty</name> <operator>=</operator> <literal type="string">""</literal></expr>;
 
    @<name>Override</name>
     <specifier>public</specifier> <name>String</name> <call><name>getErrorMessage</name><argument_list>()</argument_list></call> <block>{
       <return>return <expr><name>empty</name></expr>;</return></block></block></expr>
     }</block>
@@ <operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerTest</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>NoOpErrorMessageCallback</name> <name>noop</name> <operator>=</operator> <operator>new</operator> <call><name>NoOpErrorMessageCallback</name><argument_list>()</argument_list></call></expr>;
 
   <specifier>private</specifier> <specifier>static</specifier> <name>String</name> <name>secret</name> <operator>=</operator> <literal type="string">"superSecret"</literal></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>TemporaryFolder</name></type> <name>folder</name> <init>= <expr><operator>new</operator> <call><name>TemporaryFolder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>File</name></type> <name>baseDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.dir"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <literal type="string">"target"</literal> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <call><name><name>ShellServerTest</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>TemporaryFolder</name></type> <name>folder</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>MiniAccumuloCluster</name></type> <name>cluster</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <name>TestOutputStream</name></type> <name>output</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <name>Shell</name></type> <name>shell</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerTest</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setUpBeforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>baseDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>folder</name> <operator>=</operator> <operator>new</operator> <call><name>TemporaryFolder</name><argument_list>(<argument><expr><name>baseDir</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>folder</name><operator>.</operator><name>create</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>MiniAccumuloConfig</name></type> <name>cfg</name> <init>= <expr><operator>new</operator> <call><name>MiniAccumuloConfig</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>newFolder</name></name><argument_list>(<argument><expr><literal type="string">"miniAccumulo"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>cluster</name> <operator>=</operator> <operator>new</operator> <call><name>MiniAccumuloCluster</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerTest</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>tearDownAfterClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>cluster</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <call><name><name>traceProcess</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>folder</name><operator>.</operator><name>delete</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">60000</literal></expr></argument>)</argument_list></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">453</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">456</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerTest</name> <block>{
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">9</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name>success</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"insert a b c d -l foo"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">"does not have authorization"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>ErrorMessageCallback</name></super><argument_list>()</argument_list> <block>{
          <function><annotation>@<name>Override</name></annotation>
           <type><specifier>public</specifier> <name>String</name></type> <name>getErrorMessage</name><parameter_list>()</parameter_list> <block>{<block_content>
             <try>try <block>{<block_content>
               <decl_stmt><decl><type><name>Connector</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">470</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">474</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ShellServerTest</name> <block>{
     <comment type="line">// If we still couldn't do it, try again and let it fail</comment>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"insert a b c d -l foo"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">"does not have authorization"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>ErrorMessageCallback</name></super><argument_list>()</argument_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>String</name></type> <name>getErrorMessage</name><parameter_list>()</parameter_list> <block>{<block_content>
           <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>Connector</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">872</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">877</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ShellServerTest</name> <block>{
     <expr><call><name><name>s</name><operator>.</operator><name>addScanIterator</name></name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;
 
     <name>Thread</name> <name>thread</name> <operator>=</operator> <operator>new</operator> <class><super><name>Thread</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
         <try>try <block>{<block_content>
           <for>for <control>(<init>@<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></call>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></init></control></for></block_content></block></try></block_content></block></function></block></class></block></expr></expr_stmt></block_content></block></try></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></try></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></try></block_content></block></for></block></expr></expr_stmt>

</unit>
