<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/5eceb10e2.java"><expr_stmt><expr><name>From</name> <literal type="number">5eceb10e281b61e1f2b8a27a9b1c28746c2f0fc3</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Josh</name> <name><name>Elser</name> <argument_list type="generic">&lt;<argument><name>elserj</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">2</literal> <name>Jul</name> <literal type="number">2014</literal> <literal type="number">17</literal><operator>:</operator><literal type="number">30</literal><operator>:</operator><literal type="number">25</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">2974</literal> <name>Include</name> <name>the</name> <name>table</name> <name>id</name> <name>when</name> <name>constructing</name> <name>an</name>
 <name>absolute</name> <name>path</name> <name>from</name> <name>a</name> <name><name>relative</name><operator>.</operator>

<name>Testing</name></name> <name>that</name> <name>the</name> <name>TabletGroupWatcher</name> <name>does</name> <name>the</name> <name>correct</name> <name>path</name> <name>is</name> <name>difficult</name></expr><operator>,</operator> <expr><name>and</name> <name>also</name> <name>doesn</name><literal type="char">'t
prevent other callers from writing the same bug, so the fix is added to VolumeManagerImpl
with appropriate tests added to ensure failure happens.
--
 .../accumulo/server/fs/VolumeManagerImpl.java | 26 +++++-
 .../server/fs/VolumeManagerImplTest.java      | 85 +++++++++++++++++++
 .../accumulo/master/TabletGroupWatcher.java   |  6 +-
 3 files changed, 114 insertions(+), 3 deletions(-)
 create mode 100644 server/base/src/test/java/org/apache/accumulo/server/fs/VolumeManagerImplTest.java

diff --git a/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java b/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java
index 9ebdef481..2cdd3fe6f 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java
++ b/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java
@@ -37,6 +37,7 @@ import org.apache.accumulo.core.conf.DefaultConfiguration;
 import org.apache.accumulo.core.conf.Property;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.KeyExtent;
import org.apache.accumulo.core.file.rfile.RFile;
 import org.apache.accumulo.core.util.CachedConfiguration;
 import org.apache.accumulo.core.volume.NonConfiguredVolume;
 import org.apache.accumulo.core.volume.Volume;
@@ -55,6 +56,7 @@ import org.apache.hadoop.fs.permission.FsPermission;
 import org.apache.hadoop.hdfs.DFSConfigKeys;
 import org.apache.hadoop.hdfs.DistributedFileSystem;
 import org.apache.hadoop.util.Progressable;
import org.apache.hadoop.util.StringUtils;
 import org.apache.log4j.Logger;
 
 import com.google.common.collect.HashMultimap;
@@ -538,10 +540,30 @@ public class VolumeManagerImpl implements VolumeManager {
       }
     }
 
    // normalize the path
    Path fullPath = new Path(defaultVolume.getBasePath(), fileType.getDirectory());
     if (path.startsWith("/"))
       path = path.substring(1);

    // ACCUMULO-2974 To ensure that a proper absolute path is created, the caller needs to include the table ID
    // in the relative path. Fail when this doesn'</literal><name>t</name> <name>appear</name> <name>to</name> <name><name>happen</name><operator>.</operator></name>
    if <operator>(</operator><name><name>FileType</name><operator>.</operator><name>TABLE</name></name> <operator>==</operator> <name>fileType</name><operator>)</operator> <block>{
      <comment type="line">// Trailing slash doesn't create an additional element</comment>
      <expr><name><name>String</name><index>[]</index></name> <name>pathComponents</name> <operator>=</operator> <call><name><name>StringUtils</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>Path</name><operator>.</operator><name>SEPARATOR_CHAR</name></name></expr></argument>)</argument_list></call></expr>;

      <comment type="line">// Is an rfile</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>path</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><name><name>RFile</name><operator>.</operator><name>EXTENSION</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>pathComponents</name><operator>.</operator><name>length</name></name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Fewer components in file path than expected"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
      } else <block>{<block_content>
        <comment type="line">// is a directory</comment>
        <if_stmt><if>if <condition>(<expr><name><name>pathComponents</name><operator>.</operator><name>length</name></name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Fewer components in directory path than expected"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block>
    }

    <comment type="line">// normalize the path</comment>
    Path <expr_stmt><expr><name>fullPath</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>defaultVolume</name><operator>.</operator><name>getBasePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>fileType</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>fullPath</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>fullPath</name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name>getVolumeByPath</name><argument_list>(<argument><expr><name>fullPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getFileSystem</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>VolumeManagerImplTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>VolumeManagerImplTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..f29d2208a</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>VolumeManagerImplTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">85</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>fs</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>fs</name><operator>.</operator><name>VolumeManager</name><operator>.</operator><name>FileType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<comment type="block" format="javadoc">/**
 * 
 */</comment>
<class><specifier>public</specifier> class <name>VolumeManagerImplTest</name> <block>{

  <decl_stmt><decl><type><specifier>protected</specifier> <name>VolumeManager</name></type> <name>fs</name></decl>;</decl_stmt>

  <function><annotation>@<name>Before</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>fs</name> <operator>=</operator> <call><name><name>VolumeManagerImpl</name><operator>.</operator><name>getLocal</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.dir"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>IllegalArgumentException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>defaultTabletDirWithoutTableId</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><literal type="string">"/default_tablet/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>IllegalArgumentException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>tabletDirWithoutTableId</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><literal type="string">"/t-0000001/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>IllegalArgumentException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>defaultTabletFileWithoutTableId</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><literal type="string">"/default_tablet/C0000001.rf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>IllegalArgumentException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>tabletFileWithoutTableId</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><literal type="string">"/t-0000001/C0000001.rf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>tabletDirWithTableId</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>basePath</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>getDefaultVolume</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBasePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scheme</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>getDefaultVolume</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getFileSystem</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUri</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toURL</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getProtocol</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>basePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>expectedBase</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>scheme</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>basePath</name></expr></argument>, <argument><expr><call><name><name>FileType</name><operator>.</operator><name>TABLE</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>pathsToTest</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"1/default_tablet"</literal></expr></argument>, <argument><expr><literal type="string">"1/default_tablet/"</literal></expr></argument>, <argument><expr><literal type="string">"1/t-0000001"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>pathToTest</name> <range>: <expr><name>pathsToTest</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>Path</name></type> <name>fullPath</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><name>pathToTest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>expectedBase</name></expr></argument>, <argument><expr><name>pathToTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fullPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>tabletFileWithTableId</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>basePath</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>getDefaultVolume</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBasePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scheme</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>getDefaultVolume</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getFileSystem</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUri</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toURL</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getProtocol</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>basePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>expectedBase</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>scheme</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>basePath</name></expr></argument>, <argument><expr><call><name><name>FileType</name><operator>.</operator><name>TABLE</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>pathsToTest</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"1/default_tablet/C0000001.rf"</literal></expr></argument>, <argument><expr><literal type="string">"1/t-0000001/C0000001.rf"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>pathToTest</name> <range>: <expr><name>pathsToTest</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>Path</name></type> <name>fullPath</name> <init>= <expr><call><name><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><name>pathToTest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>expectedBase</name></expr></argument>, <argument><expr><name>pathToTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fullPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d72abd29d</name><operator>..</operator><name>fbc97381f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>SystemCredentials</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>tables</name><operator>.</operator><name>TableManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>tablets</name><operator>.</operator><name>TabletTime</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>util</name><operator>.</operator><name>MetadataTableUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">512</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">513</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
         }</block></expr></expr_stmt> <if_stmt><if type="elseif">else if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>compareColumnFamily</name></name><argument_list>(<argument><expr><name><name>TabletsSection</name><operator>.</operator><name>CurrentLocationColumnFamily</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
           <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Tablet "</literal> <operator>+</operator> <call><name><name>key</name><operator>.</operator><name>getRow</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" is assigned during a merge!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>TabletsSection</name><operator>.</operator><name>ServerColumnFamily</name><operator>.</operator><name>DIRECTORY_COLUMN</name><operator>.</operator><name>hasColumns</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>datafiles</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileRef</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <comment type="line">// ACCUMULO-2974 Need to include the TableID when converting a relative path to an absolute path.</comment>
          <comment type="line">// The value has the leading path separator already included so it doesn't need it included.</comment>
          <expr_stmt><expr><call><name><name>datafiles</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileRef</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>fs</name><operator>.</operator><name>getFullPath</name></name><argument_list>(<argument><expr><name><name>FileType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><name><name>Path</name><operator>.</operator><name>SEPARATOR</name></name> <operator>+</operator> <call><name><name>extent</name><operator>.</operator><name>getTableId</name></name><argument_list>()</argument_list></call>
              <operator>+</operator> <call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <if_stmt><if>if <condition>(<expr><call><name><name>datafiles</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1000</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>MetadataTableUtil</name><operator>.</operator><name>addDeleteEntries</name></name><argument_list>(<argument><expr><name>extent</name></expr></argument>, <argument><expr><name>datafiles</name></expr></argument>, <argument><expr><call><name><name>SystemCredentials</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>datafiles</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

</unit>
