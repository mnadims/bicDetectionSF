<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/cc3c2d8a8.java"><expr_stmt><expr><name>From</name> <name>cc3c2d8a8fc16387deefa7bc47df6a90a1fc5fb6</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <literal type="string">"Eric C. Newton"</literal> <operator>&lt;</operator><name>ecn</name>@<name><name>apache</name><operator>.</operator><name>org</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">21</literal> <name>May</name> <literal type="number">2013</literal> <literal type="number">19</literal><operator>:</operator><literal type="number">13</literal><operator>:</operator><literal type="number">43</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">1421</literal> <name>use</name> <name>reflection</name> <name>to</name> <name>work</name> <name>around</name> <name>class</name><operator>/</operator>interface
 <name>change</name> <name>in</name> <name>Counter</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/accumulo/branches/1.5@1484908 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>continuous</name><operator>/</operator><name><name>ContinuousVerify</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">30</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">25</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">5</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>continuous</name><operator>/</operator><name><name>ContinuousVerify</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>continuous</name><operator>/</operator><name><name>ContinuousVerify</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fd03706f0</name><operator>..</operator><name>e232de678</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>continuous</name><operator>/</operator><name><name>ContinuousVerify</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>continuous</name><operator>/</operator><name><name>ContinuousVerify</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>continuous</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>LongWritable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>VLongWritable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>Counters</name><operator>.</operator><name>Counter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>Job</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>Mapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>Reducer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>beust</name><operator>.</operator><name>jcommander</name><operator>.</operator><name>validators</name><operator>.</operator><name>PositiveInteger</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>ContinuousVerify</name> <super_list><extends>extends <super><name>Configured</name></super></extends> <implements>implements <super><name>Tool</name></super></implements></super_list> <block>{
   
  <comment type="line">// work around hadoop-1/hadoop-2 runtime incompatibility</comment>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>private</specifier> <name>Method</name></type> <name>INCREMENT</name></decl>;</decl_stmt>
  <static>static <block>{<block_content>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>INCREMENT</name> <operator>=</operator> <call><name><name>Counter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"increment"</literal></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></static>
  
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>increment</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>obj</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>INCREMENT</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>
  
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>VLongWritable</name></type> <name>DEF</name> <init>= <expr><operator>new</operator> <call><name>VLongWritable</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   
   <class><specifier>public</specifier> <specifier>static</specifier> class <name>CMapper</name> <super_list><extends>extends <super><name><name>Mapper</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>,<argument><name>Value</name></argument>,<argument><name>LongWritable</name></argument>,<argument><name>VLongWritable</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ContinuousVerify</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
     <expr><specifier>private</specifier> <name>LongWritable</name> <name>row</name> <operator>=</operator> <operator>new</operator> <call><name>LongWritable</name><argument_list>()</argument_list></call></expr>;
     <expr><specifier>private</specifier> <name>LongWritable</name> <name>ref</name> <operator>=</operator> <operator>new</operator> <call><name>LongWritable</name><argument_list>()</argument_list></call></expr>;
     <expr><specifier>private</specifier> <name>VLongWritable</name> <name>vrow</name> <operator>=</operator> <operator>new</operator> <call><name>VLongWritable</name><argument_list>()</argument_list></call></expr>;
    

     <expr><specifier>private</specifier> <name>long</name> <name>corrupt</name> <operator>=</operator> <literal type="number">0</literal></expr>;
     
     @<expr><name>Override</name>
@@ <operator>-</operator><literal type="number">71</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">91</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ContinuousVerify</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name><name>ContinuousWalk</name><operator>.</operator><name>validate</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></try>}</block></expr> <catch>catch <parameter_list>(<parameter><decl><type><name>BadChecksumException</name></type> <name>bce</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>CORRUPT</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>increment</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>increment</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>CORRUPT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>corrupt</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"ERROR Bad checksum : "</literal> <operator>+</operator> <name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></catch>}</block></expr></expr_stmt> <if_stmt><if type="elseif">else if <condition>(<expr><name>corrupt</name> <operator>==</operator> <literal type="number">1000</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ContinuousVerify</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
         }</block>
         
         <call><name><name>context</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><call><name><name>ContinuousIngest</name><operator>.</operator><name>genRow</name></name><argument_list>(<argument><expr><call><name><name>key</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><call><name><name>sb</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>UNDEFINED</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>increment</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>increment</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>UNDEFINED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         
       </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>defCount</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name><name>refs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>UNREFERENCED</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>increment</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>increment</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>UNREFERENCED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>REFERENCED</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>increment</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>increment</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getCounter</name></name><argument_list>(<argument><expr><name><name>Counts</name><operator>.</operator><name>REFERENCED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
       
     }</block></class>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block></class>

</unit>
