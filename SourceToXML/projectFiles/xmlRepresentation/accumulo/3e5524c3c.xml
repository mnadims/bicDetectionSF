<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/3e5524c3c.java"><expr_stmt><expr><name>From</name> <literal type="number">3e5524c3c391d2556492d070710a789510be3532</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Shawn</name> <name>Walker</name> <operator>&lt;</operator><name>accumulo</name>@<name>shawn</name><operator>-</operator><name><name>walker</name><operator>.</operator><name>net</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">13</literal> <name>Jul</name> <literal type="number">2016</literal> <literal type="number">10</literal><operator>:</operator><literal type="number">40</literal><operator>:</operator><literal type="number">52</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">4353</literal><operator>:</operator> <name>Stabilize</name> <name>tablet</name> <name>assignment</name> <name>during</name> <specifier>transient</specifier>
 <name>failure</name>

<name>Squashed</name> <name>the</name> <name>following</name> <name>commits</name></expr><operator>,</operator> <expr><name>cherry</name> <name>picked</name> <name>them</name> <name>from</name> <name>master</name> <name>to</name> <literal type="number">1.8</literal> <name>and</name> <name>then</name> <name>resolved</name> <name><name>conflicts</name><operator>.</operator>

<name>commit</name></name> <literal type="number">2e30d9178ec4352eaa724d2a9d5ea033f90e7d67</literal>
<name>Author</name><operator>:</operator> <name>Shawn</name> <name>Walker</name> <operator>&lt;</operator><name>accumulo</name>@<name>shawn</name><operator>-</operator><name><name>walker</name><operator>.</operator><name>net</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator>   <name>Mon</name> <name>Jul</name> <literal type="number">11</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">15</literal><operator>:</operator><literal type="number">57</literal> <literal type="number">2016</literal> <operator>-</operator><literal type="number">0400</literal>

    <name>ACCUMULO</name><operator>-</operator><literal type="number">4353</literal><operator>:</operator> <name>Added</name> <name>short</name> <name>blurb</name> <name>in</name> <name>user</name> <name>manual</name> <name>on</name> <name>rolling</name> <name>restarts</name> <name>and</name> <operator>`</operator><name><name>table</name><operator>.</operator><name>suspend</name><operator>.</operator><name>duration</name></name><operator>`</operator>

<name>commit</name> <literal type="number">24223c6ada605250c1d5b7b1da7abfd57e105085</literal>
<name>Author</name><operator>:</operator> <name>Shawn</name> <name>Walker</name> <operator>&lt;</operator><name>accumulo</name>@<name>shawn</name><operator>-</operator><name><name>walker</name><operator>.</operator><name>net</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator>   <name>Mon</name> <name>Jul</name> <literal type="number">11</literal> <literal type="number">11</literal><operator>:</operator><literal type="number">24</literal><operator>:</operator><literal type="number">13</literal> <literal type="number">2016</literal> <operator>-</operator><literal type="number">0400</literal>

    <name>ACCUMULO</name><operator>-</operator><literal type="number">4353</literal><operator>:</operator> <name>Refactored</name> <name>SuspendedTabletsIT</name> <name>to</name> <name>test</name></expr></expr_stmt> <for>for suspension upon both <control>(<init><expr><name>a</name></expr></init>)</control><block type="pseudo"><block_content> <decl_stmt><decl><type><name>clean</name> <name>tserver</name> <name>shutdown</name></type> <name>and</name> <argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list> <name>tserver</name> <name>crash</name>

<name>commit</name> 35fcdd09a542680fc012860fc33151b7933cda02
<name>Author</name><range>: <expr><name>Shawn</name> <name>Walker</name> <operator>&lt;</operator><name>accumulo</name>@<name>shawn</name><operator>-</operator><name><name>walker</name><operator>.</operator><name>net</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator>   <name>Fri</name> <name>Jul</name> <literal type="number">8</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">40</literal><operator>:</operator><literal type="number">03</literal> <literal type="number">2016</literal> <operator>-</operator><literal type="number">0400</literal>

    <name>ACCUMULO</name><operator>-</operator><literal type="number">4353</literal><operator>:</operator> <name>Fixed</name> <name>time</name> <name>unit</name> <name>mismatch</name> <name>in</name> <name>recent</name> <name>change</name> <name>to</name> <name>TabletServer</name>

<name>commit</name> <name>fc861c2b84773567d2fdb2c3e863eeffd5fb701c</name>
<name>Author</name><operator>:</operator> <name>Shawn</name> <name>Walker</name> <operator>&lt;</operator><name>accumulo</name>@<name>shawn</name><operator>-</operator><name><name>walker</name><operator>.</operator><name>net</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator>   <name>Tue</name> <name>Jul</name> <literal type="number">5</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">22</literal><operator>:</operator><literal type="number">37</literal> <literal type="number">2016</literal> <operator>-</operator><literal type="number">0400</literal>

    <name>ACCUMULO</name><operator>-</operator><literal type="number">4353</literal><operator>:</operator> <name>TServers</name> <name>undergoing</name> <literal type="string">"clean"</literal> <name>shutdown</name> <name>will</name> <name>suspend</name> <name>their</name> <name>tablets</name> <name>now</name></expr></range></decl>, <decl><type ref="prev"/><name><name>too</name><operator>.</operator></name>  `<name><name>master</name><operator>.</operator><name>metadata</name><operator>.</operator><name>suspendable</name></name>` <name>is</name> <name>now</name> <name>checked</name> <name>more</name> <name>often</name> <name>than</name> <name>just</name> <name>at</name> <name>startu</name>
<name>p</name>

<name>commit</name> 96e3ddd742ced7010596f994d912662448743a0a
<name>Author</name><range>: <expr><name>Shawn</name> <name>Walker</name> <operator>&lt;</operator><name>accumulo</name>@<name>shawn</name><operator>-</operator><name><name>walker</name><operator>.</operator><name>net</name></name><operator>&gt;</operator>
<name>Date</name><operator>:</operator>   <name>Wed</name> <name>Jun</name> <literal type="number">29</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">18</literal><operator>:</operator><literal type="number">58</literal> <literal type="number">2016</literal> <operator>-</operator><literal type="number">0400</literal>

    <name>ACCUMULO</name><operator>-</operator><literal type="number">4353</literal><operator>:</operator> <name>Rewrote</name> <operator>`</operator><call><name><name>TabletLocationState</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call><operator>`</operator> <name>to</name> <name>better</name> <name>account</name></expr></range></decl></decl_stmt></block_content></block></for> <for>for concurrent change

commit e0e1523b96b83ee289dbae5ec785ca9b7d3761e7
Author: Shawn Walker &lt;accumulo@shawn-walker.net&gt;
Date:   Tue Jun 28 13:27:57 2016 -0400

    ACCUMULO-4353: Now block balancing until live tservers settles to avoid balance/suspend race

commit 8d097c5f4388be83e90325e5b6d674ad21a6121b
Author: Shawn Walker &lt;accumulo@shawn-walker.net&gt;
Date:   Tue Jun 21 13:34:34 2016 -0400

    ACCUMULO-4353: Stabilize tablet assignment during transient failure.

    Added configuration property `table.suspend.duration` <control>(<init><expr>default <literal type="number">0s</literal></expr></init>)</control><block type="pseudo"><block_content>: <decl_stmt><decl><type><name>When</name> <name>a</name> <name>tablet</name> <name>server</name></type> <name>dies</name></decl>, <decl><type ref="prev"/><name>instead</name> <name>of</name> <name>immediately</name> <name>placing</name> <name>its</name> <name>tablets</name> <name>in</name> <name>the</name> <name><name>TabletState</name><operator>.</operator><name>UNASSIGNED</name></name> <name>state</name></decl>, <decl><type ref="prev"/><name>they</name> <name>are</name> <name>instead</name> <name>moved</name> <name>to</name> <name>the</name> new <name><name>TabletState</name><operator>.</operator><name>SUSPENDED</name></name> <name><name>state</name><operator>.</operator>  <name>A</name></name> <name>suspended</name> <name>tablet</name> <name>will</name> <name>only</name> <name>be</name> <name>reassigned</name> if <argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list> <name><name>table</name><operator>.</operator><name>suspend</name><operator>.</operator><name>duration</name></name> <name>has</name> <name>passed</name> <name>since</name> <name>the</name> <name>tablet</name> <name>was</name> <name>suspended</name></decl>, <decl><type ref="prev"/><name>or</name> <argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list> <name>the</name> <name>tablet</name> <name>server</name> <name>most</name> <name>recently</name> <name>hosting</name> <name>the</name> <name>tablet</name> <name>has</name> <name>come</name> <name>back</name> <name><name>online</name><operator>.</operator>  <name>In</name></name> <name>the</name> <name>latter</name> <name>case, the tablet will be assigned back to its previous host.

    Added configuration property `master.metadata.suspendable` (default <literal type="boolean">false</literal>): The above functionality is really meant to be used only on user tablets.  Suspending metadata tablets can lead to much more significant loss of availability.  Despite this, it is possible to set `table.suspend.duration` on `accumulo.metadata`.  If one really wishes to allow metadata tablets to be suspended as well, one must also set the `master.metadata.suspendable` to <literal type="boolean">true</literal>.

    I chose not to implement suspension of the root tablet.

    Implementation outline:
    * `master.MasterTime` maintains an approximately monotonic clock</name></decl>;</decl_stmt></block_content></block></for> <expr_stmt><expr><name>this</name> <name>is</name> <name>used</name> <name>by</name> <name>suspension</name> <name>to</name> <name>determine</name> <name>how</name> <name>much</name> <name>time</name> <name>has</name> <name>passed</name> <name>since</name> <name>a</name> <name>tablet</name> <name>was</name> <name><name>suspended</name><operator>.</operator></name>  `<name>MasterTime</name><operator>`</operator> <name>periodically</name> <name>writes</name> <name>its</name> <name>time</name> <name>base</name> <name>to</name> <name>ZooKeeper</name></expr></expr_stmt> <for>for persistence.
    * The `server.master.state.TabletState` now has a `TabletState.SUSPENDED` state.  `TabletLocationState`<operator>,</operator> <expr_stmt><expr><operator>`</operator><name>MetaDataStateStore</name><operator>`</operator> <name>were</name> <name>updated</name> <name>to</name> <name>properly</name> <name>read</name> <name>and</name> <name>write</name> <name><name>suspensions</name><operator>.</operator></name>
    * <operator>`</operator><name><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TabletStateStore</name></name><operator>`</operator> <name>now</name> <name>features</name> <name>a</name> <operator>`</operator><call><name>suspend</name><argument_list>(<argument><expr><operator>...</operator></expr></argument>)</argument_list></call><operator>`</operator> <name>method</name></expr><operator>,</operator></expr_stmt></for> <for>for suspending a tablet<operator>,</operator> <expr_stmt><expr><name>with</name> <name>implementations</name> <name>in</name> <operator>`</operator><name>MetaDataStateStore</name><operator>`</operator><operator>.</operator>  <operator>`</operator><call><name>suspend</name><argument_list>(<argument><expr><operator>...</operator></expr></argument>)</argument_list></call><operator>`</operator> <name>acts</name> <name>just</name> <name>as</name> <operator>`</operator><call><name>unassign</name><argument_list>(<argument><expr><operator>...</operator></expr></argument>)</argument_list></call><operator>`</operator></expr><operator>,</operator> <expr><name>except</name> <name>that</name> <name>it</name> <name>writes</name> <name>additional</name> <name>metadata</name> <name>indicating</name> <name>when</name> <name>each</name> <name>tablet</name> <name>was</name> <name>suspended</name></expr><operator>,</operator> <expr><name>and</name> <name>which</name> <name>tablet</name> <name>server</name> <name>it</name> <name>was</name> <name>suspended</name> <name><name>from</name><operator>.</operator></name>
    * <operator>`</operator><name><name>master</name><operator>.</operator><name>TabletServerWatcher</name></name><operator>`</operator> <name>updated</name> <name>to</name> <name>properly</name> <name>transition</name> <name>to</name><operator>/</operator><name>from</name> <operator>`</operator><name><name>TabletState</name><operator>.</operator><name>SUSPENDED</name></name><operator>`</operator><operator>.</operator>
    <operator>*</operator> <operator>`</operator><name><name>master</name><operator>.</operator><name>Master</name></name><operator>`</operator> <name>updated</name> <name>to</name> <name>avoid</name> <name>balancing</name></expr></expr_stmt></for> <while>while any tablets remain suspended.
--
 .../org/apache/accumulo/core/Constants.java   <operator>|</operator>   1 +
 .../apache/accumulo/core/conf/Property.java   <operator>|</operator>   6 +
 .../core/metadata/schema/MetadataSchema.java  <operator>|</operator>   7 +
 .../thrift/TUnloadTabletGoal.java             <operator>|</operator>  67 ++++
 .../thrift/TabletClientService.java           <operator>|</operator> 275 ++++++++++----
 core/src/main/thrift/tabletserver.thrift      <operator>|</operator>   9 +-
 .../main/asciidoc/chapters/administration.txt <operator>|</operator>  14 +
 .../impl/MiniAccumuloClusterControl.java      <operator>|</operator>  25 +-
 .../impl/MiniAccumuloClusterImpl.java         <operator>|</operator>  15 +-
 .../constraints/MetadataConstraints.java      <operator>|</operator>   6 +-
 .../server/master/LiveTServerSet.java         <operator>|</operator>   5 +-
 .../master/state/MetaDataStateStore.java      <operator>|</operator>  37 ++
 .../master/state/MetaDataTableScanner.java    <operator>|</operator>   6 +-
 .../master/state/SuspendingTServer.java       <operator>|</operator>  71 ++++
 .../master/state/TabletLocationState.java     <operator>|</operator>  44 ++-
 .../server/master/state/TabletState.java      <operator>|</operator>   2 +-
 .../state/TabletStateChangeIterator.java      <operator>|</operator>   1 +
 .../server/master/state/TabletStateStore.java <operator>|</operator>  43 ++-
 .../master/state/ZooTabletStateStore.java     <operator>|</operator>  14 +-
 .../master/state/TabletLocationStateTest.java <operator>|</operator>  28 +-
 .../gc/GarbageCollectWriteAheadLogsTest.java  <operator>|</operator>   4 +-
 .../org/apache/accumulo/master/Master.java    <operator>|</operator>  82 ++++-
 .../apache/accumulo/master/MasterTime.java    <operator>|</operator> 108 ++++++
 .../accumulo/master/TabletGroupWatcher.java   <operator>|</operator>  87 ++++-
 .../accumulo/master/state/MergeStats.java     <operator>|</operator>   4 +-
 .../accumulo/master/state/TableCounts.java    <operator>|</operator>   4 +
 .../state/RootTabletStateStoreTest.java       <operator>|</operator>   4 +-
 .../apache/accumulo/tserver/TabletServer.java <operator>|</operator>  31 +-
 .../accumulo/test/master/MergeStateIT.java    <operator>|</operator>   2 +-
 .../test/master/SuspendedTabletsIT.java       <operator>|</operator> 340 ++++++++++++++++++
 .../test/performance/thrift/NullTserver.java  <operator>|</operator>   3 +-
 31 files changed<operator>,</operator> <expr_stmt><expr><literal type="number">1158</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">187</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TUnloadTabletGoal</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SuspendingTServer</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MasterTime</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>SuspendedTabletsIT</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">94ada7a3d</literal><operator>..</operator><name>eebd81d29</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Constants</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ZMASTER_LOCK</name> <operator>=</operator> <name>ZMASTERS</name> <operator>+</operator> <literal type="string">"/lock"</literal></expr>;
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ZMASTER_GOAL_STATE</name> <operator>=</operator> <name>ZMASTERS</name> <operator>+</operator> <literal type="string">"/goal_state"</literal></expr>;
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ZMASTER_REPLICATION_COORDINATOR_ADDR</name> <operator>=</operator> <name>ZMASTERS</name> <operator>+</operator> <literal type="string">"/repl_coord_addr"</literal></expr>;
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ZMASTER_TICK</name> <operator>=</operator> <name>ZMASTERS</name> <operator>+</operator> <literal type="string">"/tick"</literal></expr>;
 
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ZGC</name> <operator>=</operator> <literal type="string">"/gc"</literal></expr>;
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>ZGC_LOCK</name> <operator>=</operator> <name>ZGC</name> <operator>+</operator> <literal type="string">"/lock"</literal></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">600f7125f</literal><operator>..</operator><name>c49457f8b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>Constants</name></name>;</import></block></expr></expr_stmt></while>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>file</name><operator>.</operator><name>rfile</name><operator>.</operator><name>RFile</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>iterators</name><operator>.</operator><name>IteratorUtil</name><operator>.</operator><name>IteratorScope</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>metadata</name><operator>.</operator><name>MetadataTable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>format</name><operator>.</operator><name>DefaultFormatter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>interpret</name><operator>.</operator><name>DefaultScanInterpreter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>start</name><operator>.</operator><name>classloader</name><operator>.</operator><name>AccumuloClassLoader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">231</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">232</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> enum <name>Property</name> <block>{
       <expr><literal type="string">"The time between adjustments of the coordinator thread pool"</literal></expr>)<operator>,</operator>
   <call><name>MASTER_STATUS_THREAD_POOL_SIZE</name><argument_list>(<argument><expr><literal type="string">"master.status.threadpool.size"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>COUNT</name></name></expr></argument>,
       <argument><expr><literal type="string">"The number of threads to use when fetching the tablet server status for balancing."</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>MASTER_METADATA_SUSPENDABLE</name><argument_list>(<argument><expr><literal type="string">"master.metadata.suspendable"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>BOOLEAN</name></name></expr></argument>, <argument><expr><literal type="string">"Allow tablets for the "</literal> <operator>+</operator> <name><name>MetadataTable</name><operator>.</operator><name>NAME</name></name>
      <operator>+</operator> <literal type="string">" table to be suspended via table.suspend.duration."</literal></expr></argument>)</argument_list></call><operator>,</operator>
 
   <comment type="line">// properties that are specific to tablet server behavior</comment>
   <call><name>TSERV_PREFIX</name><argument_list>(<argument><expr><literal type="string">"tserver."</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PREFIX</name></name></expr></argument>, <argument><expr><literal type="string">"Properties in this category affect the behavior of the tablet servers"</literal></expr></argument>)</argument_list></call><operator>,</operator>
@@ <operator>-</operator><literal type="number">543</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">546</literal><operator>,</operator><literal type="number">9</literal> @@ <specifier>public</specifier> enum <name>Property</name> <block>{
   <expr><call><name>TABLE_SAMPLER_OPTS</name><argument_list>(<argument><expr><literal type="string">"table.sampler.opt."</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PREFIX</name></name></expr></argument>,
       <argument><expr><literal type="string">"The property is used to set options for a sampler.  If a sample had two options like hasher and modulous, then the two properties "</literal>
           <operator>+</operator> <literal type="string">"table.sampler.opt.hasher=${hash algorithm} and table.sampler.opt.modulous=${mod} would be set."</literal></expr></argument>)</argument_list></call></expr>,
  <expr><call><name>TABLE_SUSPEND_DURATION</name><argument_list>(<argument><expr><literal type="string">"table.suspend.duration"</literal></expr></argument>, <argument><expr><literal type="string">"0s"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>TIMEDURATION</name></name></expr></argument>,
      <argument><expr><literal type="string">"For tablets belonging to this table: When a tablet server dies, allow the tablet server this duration to revive before reassigning its tablets"</literal>
          <operator>+</operator> <literal type="string">"to other tablet servers."</literal></expr></argument>)</argument_list></call></expr>,
 
   <comment type="line">// VFS ClassLoader properties</comment>
   <expr><call><name>VFS_CLASSLOADER_SYSTEM_CLASSPATH_PROPERTY</name><argument_list>(<argument><expr><name><name>AccumuloVFSClassLoader</name><operator>.</operator><name>VFS_CLASSLOADER_SYSTEM_CLASSPATH_PROPERTY</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>STRING</name></name></expr></argument>,
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>metadata</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>MetadataSchema</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>metadata</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>MetadataSchema</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7426fede7</literal><operator>..</operator><name>c93987dd9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>metadata</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>MetadataSchema</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>metadata</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>MetadataSchema</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">136</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">136</literal></expr></argument>,<argument><expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>MetadataSchema</name> <block>{
       <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>Text</name> <name>NAME</name> <operator>=</operator> <operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"last"</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <comment type="block" format="javadoc">/**
     * Column family for storing suspension location, as a demand for assignment.
     */</comment>
    <specifier>public</specifier> <specifier>static</specifier> class <name>SuspendLocationColumn</name> <block>{
      <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>ColumnFQ</name> <name>SUSPEND_COLUMN</name> <operator>=</operator> <operator>new</operator> <call><name>ColumnFQ</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"suspend"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"loc"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    }</block>

     <comment type="block" format="javadoc">/**
      * Temporary markers that indicate a tablet loaded a bulk file
      */</comment>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TUnloadTabletGoal</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TUnloadTabletGoal</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..3ce0b3127</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TUnloadTabletGoal</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">67</literal> @@</expr></argument>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<comment type="block" format="javadoc">/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>tabletserver</name><operator>.</operator><name>thrift</name></name>;</package></argument_list></call></expr></block></block></expr></expr_stmt>


<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TEnum</name></name>;</import>

<enum><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><block>{<expr><literal type="string">"unused"</literal></expr>}</block></expr></argument>)</argument_list></annotation> <specifier>public</specifier> enum <name>TUnloadTabletGoal</name> <super_list><implements>implements <super><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TEnum</name></name></super></implements></super_list> <block>{
  <decl><name>UNKNOWN</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>,
  <decl><name>UNASSIGNED</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></decl>,
  <decl><name>SUSPENDED</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></decl>,
  <decl><name>DELETED</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></decl>;

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>value</name></decl>;</decl_stmt>

  <constructor><specifier>private</specifier> <name>TUnloadTabletGoal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>value</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <comment type="block" format="javadoc">/**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */</comment>
  <function><type><specifier>public</specifier> <name>int</name></type> <name>getValue</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>value</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>TUnloadTabletGoal</name></type> <name>findByValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content> 
    <switch>switch <condition>(<expr><name>value</name></expr>)</condition> <block>{<block_content>
      <case>case <expr><literal type="number">0</literal></expr>:</case>
        <return>return <expr><name>UNKNOWN</name></expr>;</return>
      <case>case <expr><literal type="number">1</literal></expr>:</case>
        <return>return <expr><name>UNASSIGNED</name></expr>;</return>
      <case>case <expr><literal type="number">2</literal></expr>:</case>
        <return>return <expr><name>SUSPENDED</name></expr>;</return>
      <case>case <expr><literal type="number">3</literal></expr>:</case>
        <return>return <expr><name>DELETED</name></expr>;</return>
      <default>default:</default>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></switch>
  </block_content>}</block></function>
}</block></enum>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletClientService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletClientService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3d4fa061c</literal><operator>..</operator><literal type="number">4ce992712</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletClientService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>tabletserver</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>TabletClientService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
 
     <expr><specifier>public</specifier> <name>void</name> <call><name>loadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
 
    <expr><specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>boolean</name> <name>save</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
    <expr><specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>TUnloadTabletGoal</name> <name>goal</name></expr></argument>, <argument><expr><name>long</name> <name>requestTime</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
 
     <expr><specifier>public</specifier> <name>void</name> <call><name>flush</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name>String</name> <name>tableId</name></expr></argument>, <argument><expr><name>ByteBuffer</name> <name>startRow</name></expr></argument>, <argument><expr><name>ByteBuffer</name> <name>endRow</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
 
@@ <expr><operator>-</operator><literal type="number">155</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">155</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
 
     <expr><specifier>public</specifier> <name>void</name> <call><name>loadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name> <name>resultHandler</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
 
    <expr><specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>boolean</name> <name>save</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name> <name>resultHandler</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
    <expr><specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>TUnloadTabletGoal</name> <name>goal</name></expr></argument>, <argument><expr><name>long</name> <name>requestTime</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name> <name>resultHandler</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
 
     <expr><specifier>public</specifier> <name>void</name> <call><name>flush</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name>String</name> <name>tableId</name></expr></argument>, <argument><expr><name>ByteBuffer</name> <name>startRow</name></expr></argument>, <argument><expr><name>ByteBuffer</name> <name>endRow</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name> <name>resultHandler</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws></expr>;
 
@@ <expr><operator>-</operator><literal type="number">667</literal></expr>,<expr><literal type="number">19</literal> <operator>+</operator><literal type="number">667</literal></expr>,<expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       <expr><call><name>sendBaseOneway</name><argument_list>(<argument><expr><literal type="string">"loadTablet"</literal></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>boolean</name> <name>save</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name>
    <specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>TUnloadTabletGoal</name> <name>goal</name></expr></argument>, <argument><expr><name>long</name> <name>requestTime</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name>
     <block>{
      <expr><call><name>send_unloadTablet</name><argument_list>(<argument><expr><name>tinfo</name></expr></argument>, <argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>lock</name></expr></argument>, <argument><expr><name>extent</name></expr></argument>, <argument><expr><name>save</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <expr><call><name>send_unloadTablet</name><argument_list>(<argument><expr><name>tinfo</name></expr></argument>, <argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>lock</name></expr></argument>, <argument><expr><name>extent</name></expr></argument>, <argument><expr><name>goal</name></expr></argument>, <argument><expr><name>requestTime</name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <specifier>public</specifier> <name>void</name> <call><name>send_unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>boolean</name> <name>save</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name>
    <specifier>public</specifier> <name>void</name> <call><name>send_unloadTablet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>TUnloadTabletGoal</name> <name>goal</name></expr></argument>, <argument><expr><name>long</name> <name>requestTime</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name>
     <block>{
       <expr><name>unloadTablet_args</name> <name>args</name> <operator>=</operator> <operator>new</operator> <call><name>unloadTablet_args</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
       <expr><call><name><name>args</name><operator>.</operator><name>setTinfo</name></name><argument_list>(<argument><expr><name>tinfo</name></expr></argument>)</argument_list></call></expr>;
       <expr><call><name><name>args</name><operator>.</operator><name>setCredentials</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr>;
       <expr><call><name><name>args</name><operator>.</operator><name>setLock</name></name><argument_list>(<argument><expr><name>lock</name></expr></argument>)</argument_list></call></expr>;
       <expr><call><name><name>args</name><operator>.</operator><name>setExtent</name></name><argument_list>(<argument><expr><name>extent</name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>args</name><operator>.</operator><name>setSave</name></name><argument_list>(<argument><expr><name>save</name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>args</name><operator>.</operator><name>setGoal</name></name><argument_list>(<argument><expr><name>goal</name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>args</name><operator>.</operator><name>setRequestTime</name></name><argument_list>(<argument><expr><name>requestTime</name></expr></argument>)</argument_list></call></expr>;
       <expr><call><name>sendBaseOneway</name><argument_list>(<argument><expr><literal type="string">"unloadTablet"</literal></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
@@ <operator>-</operator><literal type="number">1692</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">1693</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       }</block></expr></expr_stmt>
     }
 
    public <function><type><name>void</name></type> <name>unloadTablet</name><parameter_list>(<parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name></type> <name>tinfo</name></decl></parameter>, <parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lock</name></decl></parameter>, <parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name></type> <name>extent</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>save</name></decl></parameter>, <parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name></type> <name>resultHandler</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>unloadTablet</name><parameter_list>(<parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name></type> <name>tinfo</name></decl></parameter>, <parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name></type> <name>credentials</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lock</name></decl></parameter>, <parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name></type> <name>extent</name></decl></parameter>, <parameter><decl><type><name>TUnloadTabletGoal</name></type> <name>goal</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>requestTime</name></decl></parameter>, <parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name></type> <name>resultHandler</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws> <block>{<block_content>
       <expr_stmt><expr><call><name>checkReady</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>unloadTablet_call</name></type> <name>method_call</name> <init>= <expr><operator>new</operator> <call><name>unloadTablet_call</name><argument_list>(<argument><expr><name>tinfo</name></expr></argument>, <argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>lock</name></expr></argument>, <argument><expr><name>extent</name></expr></argument>, <argument><expr><name>save</name></expr></argument>, <argument><expr><name>resultHandler</name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>___protocolFactory</name></expr></argument>, <argument><expr><name>___transport</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>unloadTablet_call</name></type> <name>method_call</name> <init>= <expr><operator>new</operator> <call><name>unloadTablet_call</name><argument_list>(<argument><expr><name>tinfo</name></expr></argument>, <argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>lock</name></expr></argument>, <argument><expr><name>extent</name></expr></argument>, <argument><expr><name>goal</name></expr></argument>, <argument><expr><name>requestTime</name></expr></argument>, <argument><expr><name>resultHandler</name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>___protocolFactory</name></expr></argument>, <argument><expr><name>___transport</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>___currentMethod</name></name> <operator>=</operator> <name>method_call</name></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>___manager</name><operator>.</operator><name>call</name></name><argument_list>(<argument><expr><name>method_call</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1704</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">1705</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       <expr><specifier>private</specifier> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr>;
       <expr><specifier>private</specifier> <name>String</name> <name>lock</name></expr>;
       <expr><specifier>private</specifier> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr>;
      <expr><specifier>private</specifier> <name>boolean</name> <name>save</name></expr>;
      <expr><specifier>public</specifier> <call><name>unloadTablet_call</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>boolean</name> <name>save</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name> <name>resultHandler</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>TAsyncClient</name></name> <name>client</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocolFactory</name></name> <name>protocolFactory</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingTransport</name></name> <name>transport</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name> <block>{
      <expr><specifier>private</specifier> <name>TUnloadTabletGoal</name> <name>goal</name></expr></block></expr></argument></throws></expr>;
      <expr><specifier>private</specifier> <name>long</name> <name>requestTime</name></expr>;
      <expr><specifier>public</specifier> <call><name>unloadTablet_call</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><name>TUnloadTabletGoal</name> <name>goal</name></expr></argument>, <argument><expr><name>long</name> <name>requestTime</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>AsyncMethodCallback</name></name> <name>resultHandler</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name>TAsyncClient</name></name> <name>client</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocolFactory</name></name> <name>protocolFactory</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingTransport</name></name> <name>transport</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name> <block>{
         <expr><call><name>super</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>protocolFactory</name></expr></argument>, <argument><expr><name>transport</name></expr></argument>, <argument><expr><name>resultHandler</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
         <expr><name><name>this</name><operator>.</operator><name>tinfo</name></name> <operator>=</operator> <name>tinfo</name></expr>;
         <expr><name><name>this</name><operator>.</operator><name>credentials</name></name> <operator>=</operator> <name>credentials</name></expr>;
         <expr><name><name>this</name><operator>.</operator><name>lock</name></name> <operator>=</operator> <name>lock</name></expr>;
         <expr><name><name>this</name><operator>.</operator><name>extent</name></name> <operator>=</operator> <name>extent</name></expr>;
        <expr><name><name>this</name><operator>.</operator><name>save</name></name> <operator>=</operator> <name>save</name></expr>;
        <expr><name><name>this</name><operator>.</operator><name>goal</name></name> <operator>=</operator> <name>goal</name></expr>;
        <expr><name><name>this</name><operator>.</operator><name>requestTime</name></name> <operator>=</operator> <name>requestTime</name></expr>;
       }</block>
 
       <specifier>public</specifier> <name>void</name> <call><name>write_args</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocol</name></name> <name>prot</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name> <block>{</block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">1721</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1724</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt><expr><call><name><name>args</name><operator>.</operator><name>setCredentials</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>args</name><operator>.</operator><name>setLock</name></name><argument_list>(<argument><expr><name>lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>args</name><operator>.</operator><name>setExtent</name></name><argument_list>(<argument><expr><name>extent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>args</name><operator>.</operator><name>setSave</name></name><argument_list>(<argument><expr><name>save</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>args</name><operator>.</operator><name>setGoal</name></name><argument_list>(<argument><expr><name>goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>args</name><operator>.</operator><name>setRequestTime</name></name><argument_list>(<argument><expr><name>requestTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>args</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>prot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>prot</name><operator>.</operator><name>writeMessageEnd</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></expr></expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2700</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2704</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       }</block>
 
       <specifier>public</specifier> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TBase</name></name> <call><name>getResult</name><argument_list>(<argument><expr><name>I</name> <name>iface</name></expr></argument>, <argument><expr><name>unloadTablet_args</name> <name>args</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name> <block>{
        <expr><call><name><name>iface</name><operator>.</operator><name>unloadTablet</name></name><argument_list>(<argument><expr><name><name>args</name><operator>.</operator><name>tinfo</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>credentials</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>lock</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>save</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>iface</name><operator>.</operator><name>unloadTablet</name></name><argument_list>(<argument><expr><name><name>args</name><operator>.</operator><name>tinfo</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>credentials</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>lock</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>goal</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>requestTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <return>return <expr><literal type="null">null</literal></expr>;</return>
       </block_content>}</block></function>
     }
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">3953</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">3957</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       }</block>
 
       <specifier>public</specifier> <name>void</name> <call><name>start</name><argument_list>(<argument><expr><name>I</name> <name>iface</name></expr></argument>, <argument><expr><name>unloadTablet_args</name> <name>args</name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>async</name><operator>.</operator><name><name>AsyncMethodCallback</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></name> <name>resultHandler</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>TException</name> <block>{
        <expr><call><name><name>iface</name><operator>.</operator><name>unloadTablet</name></name><argument_list>(<argument><expr><name><name>args</name><operator>.</operator><name>tinfo</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>credentials</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>lock</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>save</name></name></expr></argument>,<argument><expr><name>resultHandler</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>iface</name><operator>.</operator><name>unloadTablet</name></name><argument_list>(<argument><expr><name><name>args</name><operator>.</operator><name>tinfo</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>credentials</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>lock</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>goal</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>.</operator><name>requestTime</name></name></expr></argument>,<argument><expr><name>resultHandler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       }
     }
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">24718</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24722</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name> <name>CREDENTIALS_FIELD_DESC</name> <operator>=</operator> <operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name><argument_list>(<argument><expr><literal type="string">"credentials"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>STRUCT</name></name></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name> <name>LOCK_FIELD_DESC</name> <operator>=</operator> <operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name><argument_list>(<argument><expr><literal type="string">"lock"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>STRING</name></name></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name> <name>EXTENT_FIELD_DESC</name> <operator>=</operator> <operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name><argument_list>(<argument><expr><literal type="string">"extent"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>STRUCT</name></name></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name> <name>SAVE_FIELD_DESC</name> <operator>=</operator> <operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name><argument_list>(<argument><expr><literal type="string">"save"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>BOOL</name></name></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;
    <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name> <name>GOAL_FIELD_DESC</name> <operator>=</operator> <operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name><argument_list>(<argument><expr><literal type="string">"goal"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>I32</name></name></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;
    <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name> <name>REQUEST_TIME_FIELD_DESC</name> <operator>=</operator> <operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TField</name></name><argument_list>(<argument><expr><literal type="string">"requestTime"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>I64</name></name></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>IScheme</name></extends></argument>&gt;</argument_list></name></argument>, <argument><name>SchemeFactory</name></argument>&gt;</argument_list></name> <name>schemes</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>IScheme</name></extends></argument>&gt;</argument_list></name></argument>, <argument><name>SchemeFactory</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><specifier>static</specifier> <block>{
@@ <expr><operator>-</operator><literal type="number">24730</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24735</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
     <expr><specifier>public</specifier> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr>; <comment type="line">// required</comment>
     <expr><specifier>public</specifier> <name>String</name> <name>lock</name></expr>; <comment type="line">// required</comment>
     <expr><specifier>public</specifier> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr>; <comment type="line">// required</comment>
    <expr><specifier>public</specifier> <name>boolean</name> <name>save</name></expr>; <comment type="line">// required</comment>
    <comment type="block" format="javadoc">/**
     * 
     * @see TUnloadTabletGoal
     */</comment>
    <expr><specifier>public</specifier> <name>TUnloadTabletGoal</name> <name>goal</name></expr>; <comment type="line">// required</comment>
    <expr><specifier>public</specifier> <name>long</name> <name>requestTime</name></expr>; <comment type="line">// required</comment>
 
     <comment type="block" format="javadoc">/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */</comment>
     <expr><specifier>public</specifier> enum <name>_Fields</name> implements <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TFieldIdEnum</name></name> <block>{
@@ <expr><operator>-</operator><literal type="number">24738</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24748</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       <expr><call><name>CREDENTIALS</name><argument_list>(<argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"credentials"</literal></expr></argument>)</argument_list></call></expr>,
       <expr><call><name>LOCK</name><argument_list>(<argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"lock"</literal></expr></argument>)</argument_list></call></expr>,
       <expr><call><name>EXTENT</name><argument_list>(<argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"extent"</literal></expr></argument>)</argument_list></call></expr>,
      <expr><call><name>SAVE</name><argument_list>(<argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"save"</literal></expr></argument>)</argument_list></call></expr>;
      <comment type="block" format="javadoc">/**
       * 
       * @see TUnloadTabletGoal
       */</comment>
      <expr><call><name>GOAL</name><argument_list>(<argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="string">"goal"</literal></expr></argument>)</argument_list></call></expr>,
      <expr><call><name>REQUEST_TIME</name><argument_list>(<argument><expr><operator>(</operator><name>short</name><operator>)</operator><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"requestTime"</literal></expr></argument>)</argument_list></call></expr>;
 
       <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>_Fields</name></argument>&gt;</argument_list></name> <name>byName</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>_Fields</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">24761</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">24776</literal></expr>,<expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
             <return>return <expr><name>LOCK</name></expr>;</return></block></expr>
           <case>case <expr><literal type="number">2</literal></expr>:</case> <comment type="line">// EXTENT</comment>
             <return>return <expr><name>EXTENT</name></expr>;</return></block></expr>
          <case>case <expr><literal type="number">3</literal></expr>:</case> <comment type="line">// SAVE</comment>
            <return>return <expr><name>SAVE</name></expr>;</return></block></expr>
          <case>case <expr><literal type="number">6</literal></expr>:</case> <comment type="line">// GOAL</comment>
            <return>return <expr><name>GOAL</name></expr>;</return></block></expr>
          <case>case <expr><literal type="number">7</literal></expr>:</case> <comment type="line">// REQUEST_TIME</comment>
            <return>return <expr><name>REQUEST_TIME</name></expr>;</return></block></expr>
           <default>default:</default>
             <return>return <expr><literal type="null">null</literal></expr>;</return>
         }</block></expr></expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">24803</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24820</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
     }</block>
 
     <comment type="line">// isset id assignments</comment>
    <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>__SAVE_ISSET_ID</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>__REQUESTTIME_ISSET_ID</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>byte</name></type> <name>__isset_bitfield</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>_Fields</name></argument>, <argument><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldMetaData</name></name></argument>&gt;</argument_list></name></type> <name>metaDataMap</name></decl>;</decl_stmt>
     <static>static <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">24816</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">24833</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
           <expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldValueMetaData</name></name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>STRING</name></name></expr></argument>)</argument_list></call></expr>))</block></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>tmpMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>_Fields</name><operator>.</operator><name>EXTENT</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldMetaData</name></name><argument_list>(<argument><expr><literal type="string">"extent"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TFieldRequirementType</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, 
           <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>StructMetaData</name></name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>STRUCT</name></name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>tmpMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>_Fields</name><operator>.</operator><name>SAVE</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldMetaData</name></name><argument_list>(<argument><expr><literal type="string">"save"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TFieldRequirementType</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, 
          <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldValueMetaData</name></name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>BOOL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>tmpMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>_Fields</name><operator>.</operator><name>GOAL</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldMetaData</name></name><argument_list>(<argument><expr><literal type="string">"goal"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TFieldRequirementType</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, 
          <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>EnumMetaData</name></name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>ENUM</name></name></expr></argument>, <argument><expr><name><name>TUnloadTabletGoal</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>tmpMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>_Fields</name><operator>.</operator><name>REQUEST_TIME</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldMetaData</name></name><argument_list>(<argument><expr><literal type="string">"requestTime"</literal></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TFieldRequirementType</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, 
          <argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldValueMetaData</name></name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>I64</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>metaDataMap</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(<argument><expr><name>tmpMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>meta_data</name><operator>.</operator><name>FieldMetaData</name><operator>.</operator><name>addStructMetaDataMap</name></name><argument_list>(<argument><expr><name><name>unloadTablet_args</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>metaDataMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></static>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">24830</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">24849</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       <expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr>,
       <expr><name>String</name> <name>lock</name></expr>,
       <expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr>,
      <expr><name>boolean</name> <name>save</name></expr>)
      <name>TUnloadTabletGoal</name> <name>goal</name><operator>,</operator>
      <name>long</name> <name>requestTime</name>)</block>
     <block>{
       <expr><call><name>this</name><argument_list>()</argument_list></call></expr>;
       <expr><name><name>this</name><operator>.</operator><name>tinfo</name></name> <operator>=</operator> <name>tinfo</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>credentials</name></name> <operator>=</operator> <name>credentials</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>lock</name></name> <operator>=</operator> <name>lock</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>extent</name></name> <operator>=</operator> <name>extent</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>save</name></name> <operator>=</operator> <name>save</name></expr>;
      <expr><call><name>setSaveIsSet</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
      <expr><name><name>this</name><operator>.</operator><name>goal</name></name> <operator>=</operator> <name>goal</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>requestTime</name></name> <operator>=</operator> <name>requestTime</name></expr>;
      <expr><call><name>setRequestTimeIsSet</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     <comment type="block" format="javadoc">/**
@@ -24858,7 +24879,10 @@ public class TabletClientService {
       if (other.isSetExtent()) {
         this.extent = new org.apache.accumulo.core.data.thrift.TKeyExtent(other.extent);
       }
      this.save = other.save;
      if (other.isSetGoal()) {
        this.goal = other.goal;
      }
      this.requestTime = other.requestTime;
     }
 
     public unloadTablet_args deepCopy() {
@@ -24871,8 +24895,9 @@ public class TabletClientService {
       this.credentials = null;
       this.lock = null;
       this.extent = null;
      setSaveIsSet(false);
      this.save = false;
      this.goal = null;
      setRequestTimeIsSet(false);
      this.requestTime = 0;
     }
 
     public org.apache.accumulo.core.trace.thrift.TInfo getTinfo() {
@@ -24971,27 +24996,59 @@ public class TabletClientService {
       }
     }
 
    public boolean isSave() {
      return this.save;
    /**
     * 
     * @see TUnloadTabletGoal
     */</comment>
    <specifier>public</specifier> <name>TUnloadTabletGoal</name> <call><name>getGoal</name><argument_list>()</argument_list></call> <block>{
      <return>return <expr><name><name>this</name><operator>.</operator><name>goal</name></name></expr>;</return>
    }</block></expr></expr_stmt>

    <comment type="block" format="javadoc">/**
     * 
     * @see TUnloadTabletGoal
     */</comment>
    <function><type><specifier>public</specifier> <name>unloadTablet_args</name></type> <name>setGoal</name><parameter_list>(<parameter><decl><type><name>TUnloadTabletGoal</name></type> <name>goal</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>goal</name></name> <operator>=</operator> <name>goal</name></expr>;</expr_stmt>
      <return>return <expr><name>this</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>unsetGoal</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>goal</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/** Returns true if field goal is set (has been assigned a value) and false otherwise */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSetGoal</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name><name>this</name><operator>.</operator><name>goal</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setGoalIsSet</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>value</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>goal</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>long</name></type> <name>getRequestTime</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name><name>this</name><operator>.</operator><name>requestTime</name></name></expr>;</return>
     </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name>unloadTablet_args</name></type> <name>setSave</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>save</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>save</name></name> <operator>=</operator> <name>save</name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>setSaveIsSet</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>unloadTablet_args</name></type> <name>setRequestTime</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>requestTime</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>requestTime</name></name> <operator>=</operator> <name>requestTime</name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>setRequestTimeIsSet</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><name>this</name></expr>;</return>
     </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>unsetSave</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>__isset_bitfield</name> <operator>=</operator> <call><name><name>EncodingUtils</name><operator>.</operator><name>clearBit</name></name><argument_list>(<argument><expr><name>__isset_bitfield</name></expr></argument>, <argument><expr><name>__SAVE_ISSET_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>unsetRequestTime</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>__isset_bitfield</name> <operator>=</operator> <call><name><name>EncodingUtils</name><operator>.</operator><name>clearBit</name></name><argument_list>(<argument><expr><name>__isset_bitfield</name></expr></argument>, <argument><expr><name>__REQUESTTIME_ISSET_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/** Returns true if field save is set (has been assigned a value) and false otherwise */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSetSave</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>EncodingUtils</name><operator>.</operator><name>testBit</name></name><argument_list>(<argument><expr><name>__isset_bitfield</name></expr></argument>, <argument><expr><name>__SAVE_ISSET_ID</name></expr></argument>)</argument_list></call></expr>;</return>
    <comment type="block" format="javadoc">/** Returns true if field requestTime is set (has been assigned a value) and false otherwise */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSetRequestTime</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>EncodingUtils</name><operator>.</operator><name>testBit</name></name><argument_list>(<argument><expr><name>__isset_bitfield</name></expr></argument>, <argument><expr><name>__REQUESTTIME_ISSET_ID</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setSaveIsSet</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>__isset_bitfield</name> <operator>=</operator> <call><name><name>EncodingUtils</name><operator>.</operator><name>setBit</name></name><argument_list>(<argument><expr><name>__isset_bitfield</name></expr></argument>, <argument><expr><name>__SAVE_ISSET_ID</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setRequestTimeIsSet</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>__isset_bitfield</name> <operator>=</operator> <call><name><name>EncodingUtils</name><operator>.</operator><name>setBit</name></name><argument_list>(<argument><expr><name>__isset_bitfield</name></expr></argument>, <argument><expr><name>__REQUESTTIME_ISSET_ID</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>setFieldValue</name><parameter_list>(<parameter><decl><type><name>_Fields</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25028</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">25085</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
         }</block></expr></expr_stmt>
         <break>break;</break>
 
      <case>case <expr><name>SAVE</name></expr>:</case>
      <case>case <expr><name>GOAL</name></expr>:</case>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>unsetSave</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>unsetGoal</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name>setSave</name><argument_list>(<argument><expr><operator>(</operator><name>Boolean</name><operator>)</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>setGoal</name><argument_list>(<argument><expr><operator>(</operator><name>TUnloadTabletGoal</name><operator>)</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <break>break;</break>

      <case>case <expr><name>REQUEST_TIME</name></expr>:</case>
        <if_stmt><if>if <condition>(<expr><name>value</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>unsetRequestTime</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name>setRequestTime</name><argument_list>(<argument><expr><operator>(</operator><name>Long</name><operator>)</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></else></if_stmt>
         <break>break;</break>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25053</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">25118</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       <case>case <expr><name>EXTENT</name></expr>:</case>
         <return>return <expr><call><name>getExtent</name><argument_list>()</argument_list></call></expr>;</return></block></expr></expr_stmt>
 
      <case>case <expr><name>SAVE</name></expr>:</case>
        <return>return <expr><call><name>isSave</name><argument_list>()</argument_list></call></expr>;</return>
      <case>case <expr><name>GOAL</name></expr>:</case>
        <return>return <expr><call><name>getGoal</name><argument_list>()</argument_list></call></expr>;</return>

      <case>case <expr><name>REQUEST_TIME</name></expr>:</case>
        <return>return <expr><call><name>getRequestTime</name><argument_list>()</argument_list></call></expr>;</return>
 
       </block_content>}</block></function>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>()</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25075</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">25143</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
         <return>return <expr><call><name>isSetLock</name><argument_list>()</argument_list></call></expr>;</return></block></expr></expr_stmt>
       <case>case <expr><name>EXTENT</name></expr>:</case>
         <return>return <expr><call><name>isSetExtent</name><argument_list>()</argument_list></call></expr>;</return>
      <case>case <expr><name>SAVE</name></expr>:</case>
        <return>return <expr><call><name>isSetSave</name><argument_list>()</argument_list></call></expr>;</return>
      <case>case <expr><name>GOAL</name></expr>:</case>
        <return>return <expr><call><name>isSetGoal</name><argument_list>()</argument_list></call></expr>;</return>
      <case>case <expr><name>REQUEST_TIME</name></expr>:</case>
        <return>return <expr><call><name>isSetRequestTime</name><argument_list>()</argument_list></call></expr>;</return>
       </block_content>}</block></function>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>()</argument_list></call></expr>;</throw>
     </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25130</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">25200</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
           <return>return <expr><literal type="boolean">false</literal></expr>;</return>
       }</block></expr></expr_stmt>
 
      <decl_stmt><decl><type><name>boolean</name></type> <name>this_present_save</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>boolean</name></type> <name>that_present_save</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>this_present_save</name> <operator>||</operator> <name>that_present_save</name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>this_present_save</name> <operator>&amp;&amp;</operator> <name>that_present_save</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>this_present_goal</name> <init>= <expr><literal type="boolean">true</literal> <operator>&amp;&amp;</operator> <call><name><name>this</name><operator>.</operator><name>isSetGoal</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt></block_content></block></if></if_stmt>
      <decl_stmt><decl><type><name>boolean</name></type> <name>that_present_goal</name> <init>= <expr><literal type="boolean">true</literal> <operator>&amp;&amp;</operator> <call><name><name>that</name><operator>.</operator><name>isSetGoal</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>this_present_goal</name> <operator>||</operator> <name>that_present_goal</name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>this_present_goal</name> <operator>&amp;&amp;</operator> <name>that_present_goal</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
           <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>save</name></name> <operator>!=</operator> <name><name>that</name><operator>.</operator><name>save</name></name></expr>)</condition><block type="pseudo"><block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>this</name><operator>.</operator><name>goal</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>that</name><operator>.</operator><name>goal</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
          <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
      </block_content>}</block></if></if_stmt>

      <decl_stmt><decl><type><name>boolean</name></type> <name>this_present_requestTime</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>boolean</name></type> <name>that_present_requestTime</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>this_present_requestTime</name> <operator>||</operator> <name>that_present_requestTime</name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>this_present_requestTime</name> <operator>&amp;&amp;</operator> <name>that_present_requestTime</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
          <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>requestTime</name></name> <operator>!=</operator> <name><name>that</name><operator>.</operator><name>requestTime</name></name></expr>)</condition><block type="pseudo"><block_content>
           <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25166</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">25245</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       <if_stmt><if>if <condition>(<expr><name>present_extent</name></expr>)</condition><block type="pseudo"><block_content>
         <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>extent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
 
      <name>boolean</name> <name>present_save</name> <operator>=</operator> <literal type="boolean">true</literal></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>present_save</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>present_save</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>save</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <decl_stmt><decl><type><name>boolean</name></type> <name>present_goal</name> <init>= <expr><literal type="boolean">true</literal> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>isSetGoal</name><argument_list>()</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>present_goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>present_goal</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>goal</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

      <decl_stmt><decl><type><name>boolean</name></type> <name>present_requestTime</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>present_requestTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>present_requestTime</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>requestTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
 
       <return>return <expr><call><name><name>list</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25222</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">25306</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
           <return>return <expr><name>lastComparison</name></expr>;</return>
         }</block></expr></expr_stmt>
       </block_content>}</block></function>
      <expr_stmt><expr><name>lastComparison</name> <operator>=</operator> <call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name>isSetSave</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><call><name><name>other</name><operator>.</operator><name>isSetSave</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>lastComparison</name> <operator>=</operator> <call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name>isSetGoal</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><call><name><name>other</name><operator>.</operator><name>isSetGoal</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>lastComparison</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>lastComparison</name></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>isSetGoal</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>lastComparison</name> <operator>=</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TBaseHelper</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>goal</name></name></expr></argument>, <argument><expr><name><name>other</name><operator>.</operator><name>goal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>lastComparison</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <return>return <expr><name>lastComparison</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><name>lastComparison</name> <operator>=</operator> <call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name>isSetRequestTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><call><name><name>other</name><operator>.</operator><name>isSetRequestTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>lastComparison</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
         <return>return <expr><name>lastComparison</name></expr>;</return>
       </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>isSetSave</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>lastComparison</name> <operator>=</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TBaseHelper</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>save</name></name></expr></argument>, <argument><expr><name><name>other</name><operator>.</operator><name>save</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>isSetRequestTime</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>lastComparison</name> <operator>=</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TBaseHelper</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>requestTime</name></name></expr></argument>, <argument><expr><name><name>other</name><operator>.</operator><name>requestTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>lastComparison</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
           <return>return <expr><name>lastComparison</name></expr>;</return>
         </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25284</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">25378</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
       }</block>
       <name>first</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><name>first</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">", "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"save:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>save</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"goal:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>goal</name></name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>goal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
      <expr_stmt><expr><name>first</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>first</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">", "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"requestTime:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>requestTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>first</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">")"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><call><name><name>sb</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25376</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">25478</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
                 <expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocolUtil</name><operator>.</operator><name>skip</name></name><argument_list>(<argument><expr><name>iprot</name></expr></argument>, <argument><expr><name><name>schemeField</name><operator>.</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;
               }</block></expr></expr_stmt>
               <break>break;</break>
            <case>case <expr><literal type="number">3</literal></expr>:</case> <comment type="line">// SAVE</comment>
              <if_stmt><if>if <condition>(<expr><name><name>schemeField</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>BOOL</name></name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name><name>struct</name><operator>.</operator><name>save</name></name> <operator>=</operator> <call><name><name>iprot</name><operator>.</operator><name>readBool</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>setSaveIsSet</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <case>case <expr><literal type="number">6</literal></expr>:</case> <comment type="line">// GOAL</comment>
              <if_stmt><if>if <condition>(<expr><name><name>schemeField</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>I32</name></name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name><name>struct</name><operator>.</operator><name>goal</name></name> <operator>=</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>tabletserver</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TUnloadTabletGoal</name><operator>.</operator><name>findByValue</name></name><argument_list>(<argument><expr><call><name><name>iprot</name><operator>.</operator><name>readI32</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>setGoalIsSet</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></if> <else>else <block>{<block_content> 
                <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocolUtil</name><operator>.</operator><name>skip</name></name><argument_list>(<argument><expr><name>iprot</name></expr></argument>, <argument><expr><name><name>schemeField</name><operator>.</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></else></if_stmt>
              <break>break;</break>
            <case>case <expr><literal type="number">7</literal></expr>:</case> <comment type="line">// REQUEST_TIME</comment>
              <if_stmt><if>if <condition>(<expr><name><name>schemeField</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TType</name><operator>.</operator><name>I64</name></name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name><name>struct</name><operator>.</operator><name>requestTime</name></name> <operator>=</operator> <call><name><name>iprot</name><operator>.</operator><name>readI64</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>setRequestTimeIsSet</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               </block_content>}</block></if> <else>else <block>{<block_content> 
                 <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocolUtil</name><operator>.</operator><name>skip</name></name><argument_list>(<argument><expr><name>iprot</name></expr></argument>, <argument><expr><name><name>schemeField</name><operator>.</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               </block_content>}</block></else></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25409</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">25519</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
           <expr><call><name><name>struct</name><operator>.</operator><name>extent</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>oprot</name></expr></argument>)</argument_list></call></expr>;
           <call><name><name>oprot</name><operator>.</operator><name>writeFieldEnd</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldBegin</name></name><argument_list>(<argument><expr><name>SAVE_FIELD_DESC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeBool</name></name><argument_list>(<argument><expr><name><name>struct</name><operator>.</operator><name>save</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldEnd</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name><name>struct</name><operator>.</operator><name>lock</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldBegin</name></name><argument_list>(<argument><expr><name>LOCK_FIELD_DESC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeString</name></name><argument_list>(<argument><expr><name><name>struct</name><operator>.</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25422</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">25529</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
           <expr><call><name><name>struct</name><operator>.</operator><name>tinfo</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>oprot</name></expr></argument>)</argument_list></call></expr>;
           <call><name><name>oprot</name><operator>.</operator><name>writeFieldEnd</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name><name>struct</name><operator>.</operator><name>goal</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldBegin</name></name><argument_list>(<argument><expr><name>GOAL_FIELD_DESC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeI32</name></name><argument_list>(<argument><expr><call><name><name>struct</name><operator>.</operator><name>goal</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldEnd</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldBegin</name></name><argument_list>(<argument><expr><name>REQUEST_TIME_FIELD_DESC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeI64</name></name><argument_list>(<argument><expr><name><name>struct</name><operator>.</operator><name>requestTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldEnd</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeFieldStop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeStructEnd</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25452</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">25567</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
         <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetExtent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>optionals</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetSave</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetGoal</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>optionals</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeBitSet</name></name><argument_list>(<argument><expr><name>optionals</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetRequestTime</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>optionals</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeBitSet</name></name><argument_list>(<argument><expr><name>optionals</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetTinfo</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>tinfo</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>oprot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25468</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">25586</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
         <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetExtent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>extent</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>oprot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetSave</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeBool</name></name><argument_list>(<argument><expr><name><name>struct</name><operator>.</operator><name>save</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetGoal</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeI32</name></name><argument_list>(<argument><expr><call><name><name>struct</name><operator>.</operator><name>goal</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>struct</name><operator>.</operator><name>isSetRequestTime</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>oprot</name><operator>.</operator><name>writeI64</name></name><argument_list>(<argument><expr><name><name>struct</name><operator>.</operator><name>requestTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
 
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>void</name></type> <name>read</name><parameter_list>(<parameter><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocol</name></name></type> <name>prot</name></decl></parameter>, <parameter><decl><type><name>unloadTablet_args</name></type> <name>struct</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>TTupleProtocol</name></type> <name>iprot</name> <init>= <expr><operator>(</operator><name>TTupleProtocol</name><operator>)</operator> <name>prot</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>BitSet</name></type> <name>incoming</name> <init>= <expr><call><name><name>iprot</name><operator>.</operator><name>readBitSet</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>BitSet</name></type> <name>incoming</name> <init>= <expr><call><name><name>iprot</name><operator>.</operator><name>readBitSet</name></name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>incoming</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name><name>struct</name><operator>.</operator><name>tinfo</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>trace</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TInfo</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>tinfo</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>iprot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25497</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">25618</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletClientService</name> <block>{
           <expr><call><name><name>struct</name><operator>.</operator><name>setExtentIsSet</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>incoming</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name><name>struct</name><operator>.</operator><name>save</name></name> <operator>=</operator> <call><name><name>iprot</name><operator>.</operator><name>readBool</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>setSaveIsSet</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name><name>struct</name><operator>.</operator><name>goal</name></name> <operator>=</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>tabletserver</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TUnloadTabletGoal</name><operator>.</operator><name>findByValue</name></name><argument_list>(<argument><expr><call><name><name>iprot</name><operator>.</operator><name>readI32</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>setGoalIsSet</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>incoming</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name><name>struct</name><operator>.</operator><name>requestTime</name></name> <operator>=</operator> <call><name><name>iprot</name><operator>.</operator><name>readI64</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>struct</name><operator>.</operator><name>setRequestTimeIsSet</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>tabletserver</name><operator>.</operator><name>thrift</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>tabletserver</name><operator>.</operator><name>thrift</name></name>
<name>index</name> <literal type="number">6a455626f</literal><operator>..</operator><literal type="number">7697a2d25</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>tabletserver</name><operator>.</operator><name>thrift</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>tabletserver</name><operator>.</operator><name>thrift</name></name>
@@ <operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <name>struct</name> <name>TSamplerConfiguration</name> <block>{
    <expr><literal type="number">2</literal><operator>:</operator><name><name>map</name><argument_list type="generic">&lt;<argument><name>string</name></argument>, <argument><name>string</name></argument>&gt;</argument_list></name> <name>options</name></expr>
 }</block>
 
enum <name>TUnloadTabletGoal</name> <block>{
   <expr><name>UNKNOWN</name></expr>,
   <expr><name>UNASSIGNED</name></expr>,
   <expr><name>SUSPENDED</name></expr>,
   <expr><name>DELETED</name></expr>
}</block>

 <name>service</name> <name>TabletClientService</name> extends <name><name>client</name><operator>.</operator><name>ClientService</name></name> <block>{
   <comment type="line">// scan a range of keys</comment>
   <expr><name><name>data</name><operator>.</operator><name>InitialScan</name></name> <call><name>startScan</name><argument_list>(<argument><expr><literal type="number">11</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">207</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">214</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <name>service</name> <name>TabletClientService</name> extends <name><name>client</name><operator>.</operator><name>ClientService</name></name> <block>{
   <expr><name>void</name> <call><name>splitTablet</name><argument_list>(<argument><expr><literal type="number">4</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><literal type="number">1</literal><operator>:</operator><name><name>security</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>:</operator><name><name>data</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><literal type="number">3</literal><operator>:</operator><name>binary</name> <name>splitPoint</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><operator>(</operator><literal type="number">1</literal></expr></argument></throws><operator>:</operator><name><name>client</name><operator>.</operator><name>ThriftSecurityException</name></name> <name>sec</name></expr>, <expr><literal type="number">2</literal><operator>:</operator><name>NotServingTabletException</name> <name>nste</name></expr></block></expr></argument>)</argument_list></call>
  
   <name>oneway</name> <name>void</name> <call><name>loadTablet</name><argument_list>(<argument><expr><literal type="number">5</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><literal type="number">1</literal><operator>:</operator><name><name>security</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><literal type="number">4</literal><operator>:</operator><name>string</name> <name>lock</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>:</operator><name><name>data</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>)</argument_list></call></expr>,
  <expr><name>oneway</name> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><literal type="number">5</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><literal type="number">1</literal><operator>:</operator><name><name>security</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><literal type="number">4</literal><operator>:</operator><name>string</name> <name>lock</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>:</operator><name><name>data</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><literal type="number">3</literal><operator>:</operator><name>bool</name> <name>save</name></expr></argument>)</argument_list></call></expr>,
  <expr><name>oneway</name> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><literal type="number">5</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><literal type="number">1</literal><operator>:</operator><name><name>security</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><literal type="number">4</literal><operator>:</operator><name>string</name> <name>lock</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>:</operator><name><name>data</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>, <argument><expr><literal type="number">6</literal><operator>:</operator><name>TUnloadTabletGoal</name> <name>goal</name></expr></argument>, <argument><expr><literal type="number">7</literal><operator>:</operator><name>i64</name> <name>requestTime</name></expr></argument>)</argument_list></call></expr>,
   <expr><name>oneway</name> <name>void</name> <call><name>flush</name><argument_list>(<argument><expr><literal type="number">4</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><literal type="number">1</literal><operator>:</operator><name><name>security</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><literal type="number">3</literal><operator>:</operator><name>string</name> <name>lock</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>:</operator><name>string</name> <name>tableId</name></expr></argument>, <argument><expr><literal type="number">5</literal><operator>:</operator><name>binary</name> <name>startRow</name></expr></argument>, <argument><expr><literal type="number">6</literal><operator>:</operator><name>binary</name> <name>endRow</name></expr></argument>)</argument_list></call></expr>,
   <expr><name>oneway</name> <name>void</name> <call><name>flushTablet</name><argument_list>(<argument><expr><literal type="number">1</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>:</operator><name><name>security</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><literal type="number">3</literal><operator>:</operator><name>string</name> <name>lock</name></expr></argument>, <argument><expr><literal type="number">4</literal><operator>:</operator><name><name>data</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>)</argument_list></call></expr>,
   <expr><name>oneway</name> <name>void</name> <call><name>chop</name><argument_list>(<argument><expr><literal type="number">1</literal><operator>:</operator><name><name>trace</name><operator>.</operator><name>TInfo</name></name> <name>tinfo</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>:</operator><name><name>security</name><operator>.</operator><name>TCredentials</name></name> <name>credentials</name></expr></argument>, <argument><expr><literal type="number">3</literal><operator>:</operator><name>string</name> <name>lock</name></expr></argument>, <argument><expr><literal type="number">4</literal><operator>:</operator><name><name>data</name><operator>.</operator><name>TKeyExtent</name></name> <name>extent</name></expr></argument>)</argument_list></call></expr>,
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>asciidoc</name><operator>/</operator><name>chapters</name><operator>/</operator><name><name>administration</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>asciidoc</name><operator>/</operator><name>chapters</name><operator>/</operator><name><name>administration</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">1935181d5</literal><operator>..</operator><name>a2dab8e50</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>asciidoc</name><operator>/</operator><name>chapters</name><operator>/</operator><name><name>administration</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>docs</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>asciidoc</name><operator>/</operator><name>chapters</name><operator>/</operator><name><name>administration</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">476</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">476</literal></expr>,<expr><literal type="number">20</literal> @@ <name>from</name> <name>the</name> <operator>+</operator><name>$ACCUMULO_HOME</name><operator>/</operator><name>conf</name><operator>/</operator><name>slaves</name><operator>+</operator> <name>file</name></expr>) <name>to</name> <name>gracefully</name> <name>stop</name> <name>a</name> <name><name>node</name><operator>.</operator> <name>This</name></name> <name>will</name>
 <name>ensure</name> <name>that</name> <name>the</name> <name>tabletserver</name> <name>is</name> <name>cleanly</name> <name>stopped</name> <name>and</name> <name>recovery</name> <name>will</name> <name>not</name> <name>need</name> <name>to</name> <name>be</name> <name>performed</name>
 <name>when</name> <name>the</name> <name>tablets</name> <name>are</name> <name>re</name><operator>-</operator><name><name>hosted</name><operator>.</operator></name>
 
==<operator>==</operator><operator>=</operator> <name>A</name> <name>note</name> <name>on</name> <name>rolling</name> <name>restarts</name>

<name>For</name> <name>sufficiently</name> <name>large</name> <name>Accumulo</name> <name>clusters</name><operator>,</operator> <name>restarting</name> <name>multiple</name> <name>TabletServers</name> <name>within</name> <name>a</name> <name>short</name> <name>window</name> <name>can</name> <name>place</name> <name>significant</name> 
<name>load</name> <name>on</name> <name>the</name> <name>Master</name> <name><name>server</name><operator>.</operator>  <name>If</name></name> <name>slightly</name> <name>lower</name> <name>availability</name> <name>is</name> <name>acceptable</name><operator>,</operator> <name>this</name> <name>load</name> <name>can</name> <name>be</name> <name>reduced</name> <name>by</name> <name>globally</name> <name>setting</name> 
<operator>+</operator><name><name>table</name><operator>.</operator><name>suspend</name><operator>.</operator><name>duration</name></name><operator>+</operator> <name>to</name> <name>a</name> <name>positive</name> <name><name>value</name><operator>.</operator>  

<name>With</name></name> <operator>+</operator><name><name>table</name><operator>.</operator><name>suspend</name><operator>.</operator><name>duration</name></name><operator>+</operator> <name>set</name> <name>to</name><operator>,</operator> <name>say</name><operator>,</operator> <operator>+</operator><literal type="number">5m</literal><operator>+</operator><operator>,</operator> <name>Accumulo</name> <name>will</name> <name>wait</name></block></expr></expr_stmt> 
<for>for 5 minutes for any dead TabletServer to return before reassigning that TabletServer's responsibilities to other TabletServers.
If the TabletServer returns to the cluster before the specified timeout has elapsed, Accumulo will assign the TabletServer 
its original responsibilities.

It is important not to choose too large a value for +table.suspend.duration+, as during this time, all scans against the 
data that TabletServer had hosted will block (or time out).

 ==== Running multiple TabletServers on a single node
 
 With very powerful nodes, it may be beneficial to run more than one TabletServer on a given
diff --git a/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterControl.java b/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterControl.java
index 8cc7950e3..688cb5d2d 100644
-- a/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterControl.java
++ b/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterControl.java
@@ -42,6 +42,8 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import com.google.common.collect.Maps;
import java.util.Collections;
import java.util.Map;
 
 /**
  *
@@ -132,37 +134,46 @@ public class MiniAccumuloClusterControl implements ClusterControl {
 
   @Override
   public synchronized void start(ServerType server, String hostname) throws IOException {
    start(server, hostname, Collections.EMPTY_MAP, Integer.MAX_VALUE);
  }

  public synchronized void start(ServerType server, String hostname, Map&lt;String,String&gt; configOverrides, int limit) throws IOException {
    if (limit &lt;= 0) {
      return;
    }

     switch (server) {
       case TABLET_SERVER:
         synchronized (tabletServerProcesses) {
          for (int i = tabletServerProcesses.size(); i &lt; cluster.getConfig().getNumTservers(); i++) {
            tabletServerProcesses.add(cluster._exec(TabletServer.class, server));
          int count = 0;
          for (int i = tabletServerProcesses.size(); count &lt; limit &amp;&amp; i &lt; cluster.getConfig().getNumTservers(); i++, ++count) {
            tabletServerProcesses.add(cluster._exec(TabletServer.class, server, configOverrides));
           }
         }
         break;
       case MASTER:
         if (null == masterProcess) {
          masterProcess = cluster._exec(Master.class, server);
          masterProcess = cluster._exec(Master.class, server, configOverrides);
         }
         break;
       case ZOOKEEPER:
         if (null == zooKeeperProcess) {
          zooKeeperProcess = cluster._exec(ZooKeeperServerMain.class, server, cluster.getZooCfgFile().getAbsolutePath());
          zooKeeperProcess = cluster._exec(ZooKeeperServerMain.class, server, configOverrides, cluster.getZooCfgFile().getAbsolutePath());
         }
         break;
       case GARBAGE_COLLECTOR:
         if (null == gcProcess) {
          gcProcess = cluster._exec(SimpleGarbageCollector.class, server);
          gcProcess = cluster._exec(SimpleGarbageCollector.class, server, configOverrides);
         }
         break;
       case MONITOR:
         if (null == monitor) {
          monitor = cluster._exec(Monitor.class, server);
          monitor = cluster._exec(Monitor.class, server, configOverrides);
         }
         break;
       case TRACER:
         if (null == tracer) {
          tracer = cluster._exec(TraceServer.class, server);
          tracer = cluster._exec(TraceServer.class, server, configOverrides);
         }
         break;
       default:
diff --git a/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterImpl.java b/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterImpl.java
index fd017bec2..3e66acfee 100644
-- a/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterImpl.java
++ b/minicluster/src/main/java/org/apache/accumulo/minicluster/impl/MiniAccumuloClusterImpl.java
@@ -111,7 +111,7 @@ import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Joiner;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Maps;
import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
import com.google.common.util.concurrent.Uninterruptibles;
 
 /**
  * This class provides the backing implementation for {@link MiniAccumuloCluster}, and may contain features for internal testing which have not yet been
@@ -342,10 +342,17 @@ public class MiniAccumuloClusterImpl implements AccumuloCluster {
     return process;
   }
 
  Process _exec(Class&lt;?&gt; clazz, ServerType serverType, String... args) throws IOException {

  Process _exec(Class&lt;?&gt; clazz, ServerType serverType, Map&lt;String,String&gt; configOverrides, String... args) throws IOException {
     List&lt;String&gt; jvmOpts = new ArrayList&lt;&gt;();
     jvmOpts.add("-Xmx" + config.getMemory(serverType));
    if (configOverrides != null &amp;&amp; !configOverrides.isEmpty()) {
      File siteFile = File.createTempFile("accumulo-site", ".xml", config.getConfDir());
      Map&lt;String,String&gt; confMap = new HashMap&lt;&gt;();
      confMap.putAll(config.getSiteConfig());
      confMap.putAll(configOverrides);
      writeConfig(siteFile, confMap.entrySet());
      jvmOpts.add("-Dorg.apache.accumulo.config.file=" + siteFile.getName());
    }
 
     if (config.isJDWPEnabled()) {
       Integer port = PortUtils.getRandomFreePort();
@@ -622,7 +629,7 @@ public class MiniAccumuloClusterImpl implements AccumuloCluster {
       ret = exec(Main.class, SetGoalState.class.getName(), MasterGoalState.NORMAL.toString()).waitFor();
       if (ret == 0)
         break;
      sleepUninterruptibly(1, TimeUnit.SECONDS);
      Uninterruptibles.sleepUninterruptibly(1, TimeUnit.SECONDS);
     }
     if (ret != 0) {
       throw new RuntimeException("Could not set master goal state, process returned " + ret + ". Check the logs in " + config.getLogDir() + " for errors.");
diff --git a/server/base/src/main/java/org/apache/accumulo/server/constraints/MetadataConstraints.java b/server/base/src/main/java/org/apache/accumulo/server/constraints/MetadataConstraints.java
index 7815a3df6..98f8c3fda 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/constraints/MetadataConstraints.java
++ b/server/base/src/main/java/org/apache/accumulo/server/constraints/MetadataConstraints.java
@@ -65,9 +65,9 @@ public class MetadataConstraints implements Constraint {
   }
 
   private static final HashSet&lt;ColumnFQ&gt; validColumnQuals = new HashSet&lt;&gt;(Arrays.asList(TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN,
      TabletsSection.TabletColumnFamily.OLD_PREV_ROW_COLUMN, TabletsSection.ServerColumnFamily.DIRECTORY_COLUMN,
      TabletsSection.TabletColumnFamily.SPLIT_RATIO_COLUMN, TabletsSection.ServerColumnFamily.TIME_COLUMN, TabletsSection.ServerColumnFamily.LOCK_COLUMN,
      TabletsSection.ServerColumnFamily.FLUSH_COLUMN, TabletsSection.ServerColumnFamily.COMPACT_COLUMN));
      TabletsSection.TabletColumnFamily.OLD_PREV_ROW_COLUMN, TabletsSection.SuspendLocationColumn.SUSPEND_COLUMN,
      TabletsSection.ServerColumnFamily.DIRECTORY_COLUMN, TabletsSection.TabletColumnFamily.SPLIT_RATIO_COLUMN, TabletsSection.ServerColumnFamily.TIME_COLUMN,
      TabletsSection.ServerColumnFamily.LOCK_COLUMN, TabletsSection.ServerColumnFamily.FLUSH_COLUMN, TabletsSection.ServerColumnFamily.COMPACT_COLUMN));
 
   private static final HashSet&lt;Text&gt; validColumnFams = new HashSet&lt;&gt;(Arrays.asList(TabletsSection.BulkFileColumnFamily.NAME, LogColumnFamily.NAME,
       ScanFileColumnFamily.NAME, DataFileColumnFamily.NAME, TabletsSection.CurrentLocationColumnFamily.NAME, TabletsSection.LastLocationColumnFamily.NAME,
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/LiveTServerSet.java b/server/base/src/main/java/org/apache/accumulo/server/master/LiveTServerSet.java
index 46f5f8b4e..7d1d6e117 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/LiveTServerSet.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/LiveTServerSet.java
@@ -57,6 +57,7 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import com.google.common.net.HostAndPort;
import org.apache.accumulo.core.tabletserver.thrift.TUnloadTabletGoal;
 
 public class LiveTServerSet implements Watcher {
 
@@ -105,10 +106,10 @@ public class LiveTServerSet implements Watcher {
       }
     }
 
    public void unloadTablet(ZooLock lock, KeyExtent extent, boolean save) throws TException {
    public void unloadTablet(ZooLock lock, KeyExtent extent, TUnloadTabletGoal goal, long requestTime) throws TException {
       TabletClientService.Client client = ThriftUtil.getClient(new TabletClientService.Client.Factory(), address, context);
       try {
        client.unloadTablet(Tracer.traceInfo(), context.rpcCreds(), lockString(lock), extent.toThrift(), save);
        client.unloadTablet(Tracer.traceInfo(), context.rpcCreds(), lockString(lock), extent.toThrift(), goal, requestTime);
       } finally {
         ThriftUtil.returnClient(client);
       }
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java
index 7763c258b..c549adce9 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java
@@ -74,6 +74,7 @@ public class MetaDataStateStore extends TabletStateStore {
         Mutation m = new Mutation(assignment.tablet.getMetadataEntry());
         assignment.server.putLocation(m);
         assignment.server.clearFutureLocation(m);
        SuspendingTServer.clearSuspension(m);
         writer.addMutation(m);
       }
     } catch (Exception ex) {
@@ -105,6 +106,7 @@ public class MetaDataStateStore extends TabletStateStore {
     try {
       for (Assignment assignment : assignments) {
         Mutation m = new Mutation(assignment.tablet.getMetadataEntry());
        SuspendingTServer.clearSuspension(m);
         assignment.server.putFutureLocation(m);
         writer.addMutation(m);
       }
@@ -121,7 +123,12 @@ public class MetaDataStateStore extends TabletStateStore {
 
   @Override
   public void unassign(Collection&lt;TabletLocationState&gt; tablets, Map&lt;TServerInstance,List&lt;Path&gt;&gt; logsForDeadServers) throws DistributedStoreException {
    suspend(tablets, logsForDeadServers, -1);
  }
 
  @Override
  public void suspend(Collection&lt;TabletLocationState&gt; tablets, Map&lt;TServerInstance,List&lt;Path&gt;&gt; logsForDeadServers, long suspensionTimestamp)
      throws DistributedStoreException {
     BatchWriter writer = createBatchWriter();
     try {
       for (TabletLocationState tls : tablets) {
@@ -137,6 +144,13 @@ public class MetaDataStateStore extends TabletStateStore {
               }
             }
           }
          if (suspensionTimestamp &gt;= 0) {
            SuspendingTServer suspender = new SuspendingTServer(tls.current.getLocation(), suspensionTimestamp);
            suspender.setSuspension(m);
          }
        }
        if (tls.suspend != null &amp;&amp; suspensionTimestamp &lt; 0) {
          SuspendingTServer.clearSuspension(m);
         }
         if (tls.future != null) {
           tls.future.clearFutureLocation(m);
@@ -154,6 +168,29 @@ public class MetaDataStateStore extends TabletStateStore {
     }
   }
 
  @Override
  public void unsuspend(Collection&lt;TabletLocationState&gt; tablets) throws DistributedStoreException {
    BatchWriter writer = createBatchWriter();
    try {
      for (TabletLocationState tls : tablets) {
        if (tls.suspend != null) {
          continue;
        }
        Mutation m = new Mutation(tls.extent.getMetadataEntry());
        SuspendingTServer.clearSuspension(m);
        writer.addMutation(m);
      }
    } catch (Exception ex) {
      throw new DistributedStoreException(ex);
    } finally {
      try {
        writer.close();
      } catch (MutationsRejectedException e) {
        throw new DistributedStoreException(e);
      }
    }
  }

   @Override
   public String name() {
     return "Normal Tablets";
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java
index 14486a635..5d6052ffb 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java
@@ -78,6 +78,7 @@ public class MetaDataTableScanner implements ClosableIterator&lt;TabletLocationStat
     scanner.fetchColumnFamily(TabletsSection.CurrentLocationColumnFamily.NAME);
     scanner.fetchColumnFamily(TabletsSection.FutureLocationColumnFamily.NAME);
     scanner.fetchColumnFamily(TabletsSection.LastLocationColumnFamily.NAME);
    scanner.fetchColumnFamily(TabletsSection.SuspendLocationColumn.SUSPEND_COLUMN.getColumnFamily());
     scanner.fetchColumnFamily(LogColumnFamily.NAME);
     scanner.fetchColumnFamily(ChoppedColumnFamily.NAME);
     scanner.addScanIterator(new IteratorSetting(1000, "wholeRows", WholeRowIterator.class));
@@ -136,6 +137,7 @@ public class MetaDataTableScanner implements ClosableIterator&lt;TabletLocationStat
     TServerInstance future = null;
     TServerInstance current = null;
     TServerInstance last = null;
    SuspendingTServer suspend = null;
     long lastTimestamp = 0;
     List&lt;Collection&lt;String&gt;&gt; walogs = new ArrayList&lt;&gt;();
     boolean chopped = false;
@@ -171,6 +173,8 @@ public class MetaDataTableScanner implements ClosableIterator&lt;TabletLocationStat
         chopped = true;
       } else if (TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN.equals(cf, cq)) {
         extent = new KeyExtent(row, entry.getValue());
      } else if (TabletsSection.SuspendLocationColumn.SUSPEND_COLUMN.equals(cf, cq)) {
        suspend = SuspendingTServer.fromValue(entry.getValue());
       }
     }
     if (extent == null) {
@@ -178,7 +182,7 @@ public class MetaDataTableScanner implements ClosableIterator&lt;TabletLocationStat
       log.error(msg);
       throw new BadLocationStateException(msg, k.getRow());
     }
    return new TabletLocationState(extent, future, current, last, walogs, chopped);
    return new TabletLocationState(extent, future, current, last, suspend, walogs, chopped);
   }
 
   private TabletLocationState fetch() {
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/SuspendingTServer.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/SuspendingTServer.java
new file mode 100644
index 000000000..3f4e49e33
-- /dev/null
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/SuspendingTServer.java
@@ -0,0 +1,71 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.server.master.state;

import com.google.common.net.HostAndPort;
import java.util.Objects;
import org.apache.accumulo.core.data.Mutation;
import org.apache.accumulo.core.data.Value;
import static org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection.SuspendLocationColumn.SUSPEND_COLUMN;

/** For a suspended tablet, the time of suspension and the server it was suspended from. */
public class SuspendingTServer {
  public final HostAndPort server;
  public final long suspensionTime;

  SuspendingTServer(HostAndPort server, long suspensionTime) {
    this.server = Objects.requireNonNull(server);
    this.suspensionTime = suspensionTime;
  }

  public static SuspendingTServer fromValue(Value value) {
    String valStr = value.toString();
    String[] parts = valStr.split("[|]", 2);
    return new SuspendingTServer(HostAndPort.fromString(parts[0]), Long.parseLong(parts[1]));
  }

  public Value toValue() {
    return new Value(server.toString() + "|" + suspensionTime);
  }

  @Override
  public boolean equals(Object rhsObject) {
    if (!(rhsObject instanceof SuspendingTServer)) {
      return false;
    }
    SuspendingTServer rhs = (SuspendingTServer) rhsObject;
    return server.equals(rhs.server) &amp;&amp; suspensionTime == rhs.suspensionTime;
  }

  public void setSuspension(Mutation m) {
    m.put(SUSPEND_COLUMN.getColumnFamily(), SUSPEND_COLUMN.getColumnQualifier(), toValue());
  }

  public static void clearSuspension(Mutation m) {
    m.putDelete(SUSPEND_COLUMN.getColumnFamily(), SUSPEND_COLUMN.getColumnQualifier());
  }

  @Override
  public int hashCode() {
    return Objects.hash(server, suspensionTime);
  }

  @Override
  public String toString() {
    return server.toString() + "[" + suspensionTime + "]";
  }
}
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java
index 8116ecf9e..784bd337a 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java
@@ -46,12 +46,13 @@ public class TabletLocationState {
     }
   }
 
  public TabletLocationState(KeyExtent extent, TServerInstance future, TServerInstance current, TServerInstance last, Collection&lt;Collection&lt;String&gt;&gt; walogs,
      boolean chopped) throws BadLocationStateException {
  public TabletLocationState(KeyExtent extent, TServerInstance future, TServerInstance current, TServerInstance last, SuspendingTServer suspend,
      Collection&lt;Collection&lt;String&gt;&gt; walogs, boolean chopped) throws BadLocationStateException {
     this.extent = extent;
     this.future = future;
     this.current = current;
     this.last = last;
    this.suspend = suspend;
     if (walogs == null)
       walogs = Collections.emptyList();
     this.walogs = walogs;
@@ -65,6 +66,7 @@ public class TabletLocationState {
   final public TServerInstance future;
   final public TServerInstance current;
   final public TServerInstance last;
  final public SuspendingTServer suspend;
   final public Collection&lt;Collection&lt;String&gt;&gt; walogs;
   final public boolean chopped;
 
@@ -92,23 +94,29 @@ public class TabletLocationState {
     return result;
   }
 
  private static final int _HAS_CURRENT = 1 &lt;&lt; 0;
  private static final int _HAS_FUTURE = 1 &lt;&lt; 1;
  private static final int _HAS_SUSPEND = 1 &lt;&lt; 2;

   public TabletState getState(Set&lt;TServerInstance&gt; liveServers) {
    TServerInstance server = getServer();
    if (server == null)
      return TabletState.UNASSIGNED;
    if (server.equals(current) || server.equals(future)) {
      if (liveServers.contains(server))
        if (server.equals(future)) {
          return TabletState.ASSIGNED;
        } else {
          return TabletState.HOSTED;
        }
      else {
        return TabletState.ASSIGNED_TO_DEAD_SERVER;
      }
    switch ((current == null ? 0 : _HAS_CURRENT) | (future == null ? 0 : _HAS_FUTURE) | (suspend == null ? 0 : _HAS_SUSPEND)) {
      case 0:
        return TabletState.UNASSIGNED;

      case _HAS_SUSPEND:
        return TabletState.SUSPENDED;

      case _HAS_FUTURE:
      case (_HAS_FUTURE | _HAS_SUSPEND):
        return liveServers.contains(future) ? TabletState.ASSIGNED : TabletState.ASSIGNED_TO_DEAD_SERVER;

      case _HAS_CURRENT:
      case (_HAS_CURRENT | _HAS_SUSPEND):
        return liveServers.contains(current) ? TabletState.HOSTED : TabletState.ASSIGNED_TO_DEAD_SERVER;

      default:
        // Both current and future are set, which is prevented by constructor.
        throw new IllegalStateException();
     }
    // server == last
    return TabletState.UNASSIGNED;
   }

 }
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletState.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletState.java
index d69ca198e..bd0e8858a 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletState.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletState.java
@@ -17,5 +17,5 @@
 package org.apache.accumulo.server.master.state;
 
 public enum TabletState {
  UNASSIGNED, ASSIGNED, HOSTED, ASSIGNED_TO_DEAD_SERVER
  UNASSIGNED, ASSIGNED, HOSTED, ASSIGNED_TO_DEAD_SERVER, SUSPENDED
 }
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java
index 973bbd2e3..00f86c632 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java
@@ -196,6 +196,7 @@ public class TabletStateChangeIterator extends SkippingIterator {
           break;
         case ASSIGNED_TO_DEAD_SERVER:
           return;
        case SUSPENDED:
         case UNASSIGNED:
           if (shouldBeOnline)
             return;
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateStore.java
index 3ead237af..6872466e9 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateStore.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/TabletStateStore.java
@@ -20,6 +20,7 @@ import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
import org.apache.accumulo.core.data.impl.KeyExtent;
 
 import org.apache.accumulo.server.AccumuloServerContext;
 import org.apache.hadoop.fs.Path;
@@ -64,28 +65,38 @@ public abstract class TabletStateStore implements Iterable&lt;TabletLocationState&gt;
    */
   abstract public void unassign(Collection&lt;TabletLocationState&gt; tablets, Map&lt;TServerInstance,List&lt;Path&gt;&gt; logsForDeadServers) throws DistributedStoreException;
 
  /**
   * Mark tablets as having no known or future location, but desiring to be returned to their previous tserver.
   */
  abstract public void suspend(Collection&lt;TabletLocationState&gt; tablets, Map&lt;TServerInstance,List&lt;Path&gt;&gt; logsForDeadServers, long suspensionTimestamp)
      throws DistributedStoreException;

  /**
   * Remove a suspension marker for a collection of tablets, moving them to being simply unassigned.
   */
  abstract public void unsuspend(Collection&lt;TabletLocationState&gt; tablets) throws DistributedStoreException;

   public static void unassign(AccumuloServerContext context, TabletLocationState tls, Map&lt;TServerInstance,List&lt;Path&gt;&gt; logsForDeadServers)
       throws DistributedStoreException {
    TabletStateStore store;
    if (tls.extent.isRootTablet()) {
      store = new ZooTabletStateStore();
    } else if (tls.extent.isMeta()) {
      store = new RootTabletStateStore(context);
    } else {
      store = new MetaDataStateStore(context);
    }
    store.unassign(Collections.singletonList(tls), logsForDeadServers);
    getStoreForTablet(tls.extent, context).unassign(Collections.singletonList(tls), logsForDeadServers);
  }

  public static void suspend(AccumuloServerContext context, TabletLocationState tls, Map&lt;TServerInstance,List&lt;Path&gt;&gt; logsForDeadServers,
      long suspensionTimestamp) throws DistributedStoreException {
    getStoreForTablet(tls.extent, context).suspend(Collections.singletonList(tls), logsForDeadServers, suspensionTimestamp);
   }
 
   public static void setLocation(AccumuloServerContext context, Assignment assignment) throws DistributedStoreException {
    TabletStateStore store;
    if (assignment.tablet.isRootTablet()) {
      store = new ZooTabletStateStore();
    } else if (assignment.tablet.isMeta()) {
      store = new RootTabletStateStore(context);
    getStoreForTablet(assignment.tablet, context).setLocations(Collections.singletonList(assignment));
  }

  protected static TabletStateStore getStoreForTablet(KeyExtent extent, AccumuloServerContext context) throws DistributedStoreException {
    if (extent.isRootTablet()) {
      return new ZooTabletStateStore();
    } else if (extent.isMeta()) {
      return new RootTabletStateStore(context);
     } else {
      store = new MetaDataStateStore(context);
      return new MetaDataStateStore(context);
     }
    store.setLocations(Collections.singletonList(assignment));
   }
 }
diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/ZooTabletStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/ZooTabletStateStore.java
index 8f92db5cf..148b6cc9b 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/master/state/ZooTabletStateStore.java
++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/ZooTabletStateStore.java
@@ -93,7 +93,7 @@ public class ZooTabletStateStore extends TabletStateStore {
               log.debug("root tablet log " + logEntry.filename);
             }
           }
          TabletLocationState result = new TabletLocationState(RootTable.EXTENT, futureSession, currentSession, lastSession, logs, false);
          TabletLocationState result = new TabletLocationState(RootTable.EXTENT, futureSession, currentSession, lastSession, null, logs, false);
           log.debug("Returning root tablet state: " + result);
           return result;
         } catch (Exception ex) {
@@ -189,6 +189,18 @@ public class ZooTabletStateStore extends TabletStateStore {
     log.debug("unassign root tablet location");
   }
 
  @Override
  public void suspend(Collection&lt;TabletLocationState&gt; tablets, Map&lt;TServerInstance,List&lt;Path&gt;&gt; logsForDeadServers, long suspensionTimestamp)
      throws DistributedStoreException {
    // No support for suspending root tablet.
    unassign(tablets, logsForDeadServers);
  }

  @Override
  public void unsuspend(Collection&lt;TabletLocationState&gt; tablets) throws DistributedStoreException {
    // no support for suspending root tablet.
  }

   @Override
   public String name() {
     return "Root Table";
diff --git a/server/base/src/test/java/org/apache/accumulo/server/master/state/TabletLocationStateTest.java b/server/base/src/test/java/org/apache/accumulo/server/master/state/TabletLocationStateTest.java
index f270fe485..bd81267b1 100644
-- a/server/base/src/test/java/org/apache/accumulo/server/master/state/TabletLocationStateTest.java
++ b/server/base/src/test/java/org/apache/accumulo/server/master/state/TabletLocationStateTest.java
@@ -60,7 +60,7 @@ public class TabletLocationStateTest {
 
   @Test
   public void testConstruction_NoFuture() throws Exception {
    tls = new TabletLocationState(keyExtent, null, current, last, walogs, true);
    tls = new TabletLocationState(keyExtent, null, current, last, null, walogs, true);
     assertSame(keyExtent, tls.extent);
     assertNull(tls.future);
     assertSame(current, tls.current);
@@ -71,7 +71,7 @@ public class TabletLocationStateTest {
 
   @Test
   public void testConstruction_NoCurrent() throws Exception {
    tls = new TabletLocationState(keyExtent, future, null, last, walogs, true);
    tls = new TabletLocationState(keyExtent, future, null, last, null, walogs, true);
     assertSame(keyExtent, tls.extent);
     assertSame(future, tls.future);
     assertNull(tls.current);
@@ -85,7 +85,7 @@ public class TabletLocationStateTest {
     expect(keyExtent.getMetadataEntry()).andReturn(new Text("entry"));
     replay(keyExtent);
     try {
      new TabletLocationState(keyExtent, future, current, last, walogs, true);
      new TabletLocationState(keyExtent, future, current, last, null, walogs, true);
     } catch (TabletLocationState.BadLocationStateException e) {
       assertEquals(new Text("entry"), e.getEncodedEndRow());
       throw (e);
@@ -94,44 +94,44 @@ public class TabletLocationStateTest {
 
   @Test
   public void testConstruction_NoFuture_NoWalogs() throws Exception {
    tls = new TabletLocationState(keyExtent, null, current, last, null, true);
    tls = new TabletLocationState(keyExtent, null, current, last, null, null, true);
     assertNotNull(tls.walogs);
     assertEquals(0, tls.walogs.size());
   }
 
   @Test
   public void testGetServer_Current() throws Exception {
    tls = new TabletLocationState(keyExtent, null, current, last, walogs, true);
    tls = new TabletLocationState(keyExtent, null, current, last, null, walogs, true);
     assertSame(current, tls.getServer());
   }
 
   @Test
   public void testGetServer_Future() throws Exception {
    tls = new TabletLocationState(keyExtent, future, null, last, walogs, true);
    tls = new TabletLocationState(keyExtent, future, null, last, null, walogs, true);
     assertSame(future, tls.getServer());
   }
 
   @Test
   public void testGetServer_Last() throws Exception {
    tls = new TabletLocationState(keyExtent, null, null, last, walogs, true);
    tls = new TabletLocationState(keyExtent, null, null, last, null, walogs, true);
     assertSame(last, tls.getServer());
   }
 
   @Test
   public void testGetServer_None() throws Exception {
    tls = new TabletLocationState(keyExtent, null, null, null, walogs, true);
    tls = new TabletLocationState(keyExtent, null, null, null, null, walogs, true);
     assertNull(tls.getServer());
   }
 
   @Test
   public void testGetState_Unassigned1() throws Exception {
    tls = new TabletLocationState(keyExtent, null, null, null, walogs, true);
    tls = new TabletLocationState(keyExtent, null, null, null, null, walogs, true);
     assertEquals(TabletState.UNASSIGNED, tls.getState(null));
   }
 
   @Test
   public void testGetState_Unassigned2() throws Exception {
    tls = new TabletLocationState(keyExtent, null, null, last, walogs, true);
    tls = new TabletLocationState(keyExtent, null, null, last, null, walogs, true);
     assertEquals(TabletState.UNASSIGNED, tls.getState(null));
   }
 
@@ -139,7 +139,7 @@ public class TabletLocationStateTest {
   public void testGetState_Assigned() throws Exception {
     Set&lt;TServerInstance&gt; liveServers = new java.util.HashSet&lt;&gt;();
     liveServers.add(future);
    tls = new TabletLocationState(keyExtent, future, null, last, walogs, true);
    tls = new TabletLocationState(keyExtent, future, null, last, null, walogs, true);
     assertEquals(TabletState.ASSIGNED, tls.getState(liveServers));
   }
 
@@ -147,7 +147,7 @@ public class TabletLocationStateTest {
   public void testGetState_Hosted() throws Exception {
     Set&lt;TServerInstance&gt; liveServers = new java.util.HashSet&lt;&gt;();
     liveServers.add(current);
    tls = new TabletLocationState(keyExtent, null, current, last, walogs, true);
    tls = new TabletLocationState(keyExtent, null, current, last, null, walogs, true);
     assertEquals(TabletState.HOSTED, tls.getState(liveServers));
   }
 
@@ -155,7 +155,7 @@ public class TabletLocationStateTest {
   public void testGetState_Dead1() throws Exception {
     Set&lt;TServerInstance&gt; liveServers = new java.util.HashSet&lt;&gt;();
     liveServers.add(current);
    tls = new TabletLocationState(keyExtent, future, null, last, walogs, true);
    tls = new TabletLocationState(keyExtent, future, null, last, null, walogs, true);
     assertEquals(TabletState.ASSIGNED_TO_DEAD_SERVER, tls.getState(liveServers));
   }
 
@@ -163,7 +163,7 @@ public class TabletLocationStateTest {
   public void testGetState_Dead2() throws Exception {
     Set&lt;TServerInstance&gt; liveServers = new java.util.HashSet&lt;&gt;();
     liveServers.add(future);
    tls = new TabletLocationState(keyExtent, null, current, last, walogs, true);
    tls = new TabletLocationState(keyExtent, null, current, last, null, walogs, true);
     assertEquals(TabletState.ASSIGNED_TO_DEAD_SERVER, tls.getState(liveServers));
   }
 }
diff --git a/server/gc/src/test/java/org/apache/accumulo/gc/GarbageCollectWriteAheadLogsTest.java b/server/gc/src/test/java/org/apache/accumulo/gc/GarbageCollectWriteAheadLogsTest.java
index 691d02d79..4665836c8 100644
-- a/server/gc/src/test/java/org/apache/accumulo/gc/GarbageCollectWriteAheadLogsTest.java
++ b/server/gc/src/test/java/org/apache/accumulo/gc/GarbageCollectWriteAheadLogsTest.java
@@ -65,8 +65,8 @@ public class GarbageCollectWriteAheadLogsTest {
   private final TabletLocationState tabletAssignedToServer2;
   {
     try {
      tabletAssignedToServer1 = new TabletLocationState(extent, (TServerInstance) null, server1, (TServerInstance) null, walogs, false);
      tabletAssignedToServer2 = new TabletLocationState(extent, (TServerInstance) null, server2, (TServerInstance) null, walogs, false);
      tabletAssignedToServer1 = new TabletLocationState(extent, (TServerInstance) null, server1, (TServerInstance) null, null, walogs, false);
      tabletAssignedToServer2 = new TabletLocationState(extent, (TServerInstance) null, server2, (TServerInstance) null, null, walogs, false);
     } catch (Exception ex) {
       throw new RuntimeException(ex);
     }
diff --git a/server/master/src/main/java/org/apache/accumulo/master/Master.java b/server/master/src/main/java/org/apache/accumulo/master/Master.java
index 10d9152f5..76fafb59d 100644
-- a/server/master/src/main/java/org/apache/accumulo/master/Master.java
++ b/server/master/src/main/java/org/apache/accumulo/master/Master.java
@@ -74,6 +74,7 @@ import org.apache.accumulo.core.replication.thrift.ReplicationCoordinator;
 import org.apache.accumulo.core.security.Authorizations;
 import org.apache.accumulo.core.security.NamespacePermission;
 import org.apache.accumulo.core.security.TablePermission;
import org.apache.accumulo.core.tabletserver.thrift.TUnloadTabletGoal;
 import org.apache.accumulo.core.trace.DistributedTrace;
 import org.apache.accumulo.core.trace.thrift.TInfo;
 import org.apache.accumulo.core.util.Daemon;
@@ -196,6 +197,7 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
   private ReplicationDriver replicationWorkDriver;
   private WorkDriver replicationWorkAssigner;
   RecoveryManager recoveryManager = null;
  private final MasterTime timeKeeper;
 
   // Delegation Token classes
   private final boolean delegationTokensAvailable;
@@ -533,7 +535,7 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
     int result = 0;
     for (TabletGroupWatcher watcher : watchers) {
       for (TableCounts counts : watcher.getStats().values()) {
        result += counts.assigned() + counts.assignedToDeadServers();
        result += counts.assigned() + counts.assignedToDeadServers() + counts.suspended();
       }
     }
     return result;
@@ -552,7 +554,7 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
             TableCounts counts = entry.getValue();
             TableState tableState = manager.getTableState(tableId);
             if (tableState != null &amp;&amp; tableState.equals(TableState.ONLINE)) {
              result += counts.unassigned() + counts.assignedToDeadServers() + counts.assigned();
              result += counts.unassigned() + counts.assignedToDeadServers() + counts.assigned() + counts.suspended();
             }
           }
         }
@@ -560,13 +562,15 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
       case SAFE_MODE:
         // Count offline tablets for the metadata table
         for (TabletGroupWatcher watcher : watchers) {
          result += watcher.getStats(MetadataTable.ID).unassigned();
          TableCounts counts = watcher.getStats(MetadataTable.ID);
          result += counts.unassigned() + counts.suspended();
         }
         break;
       case UNLOAD_METADATA_TABLETS:
       case UNLOAD_ROOT_TABLET:
         for (TabletGroupWatcher watcher : watchers) {
          result += watcher.getStats(MetadataTable.ID).unassigned();
          TableCounts counts = watcher.getStats(MetadataTable.ID);
          result += counts.unassigned() + counts.suspended();
         }
         break;
       default:
@@ -591,6 +595,8 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
 
     log.info("Version " + Constants.VERSION);
     log.info("Instance " + getInstance().getInstanceID());
    timeKeeper = new MasterTime(this);

     ThriftTransportPool.getInstance().setIdleTime(aconf.getTimeInMillis(Property.GENERAL_RPC_TIMEOUT));
     tserverSet = new LiveTServerSet(this, this);
     this.tabletBalancer = aconf.instantiateClassProperty(Property.MASTER_TABLET_BALANCER, TabletBalancer.class, new DefaultLoadBalancer());
@@ -626,6 +632,7 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
       log.info("SASL is not enabled, delegation tokens will not be available");
       delegationTokensAvailable = false;
     }

   }
 
   public TServerConnection getConnection(TServerInstance server) {
@@ -726,8 +733,19 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
   }
 
   static enum TabletGoalState {
    HOSTED, UNASSIGNED, DELETED
  }
    HOSTED(TUnloadTabletGoal.UNKNOWN), UNASSIGNED(TUnloadTabletGoal.UNASSIGNED), DELETED(TUnloadTabletGoal.DELETED), SUSPENDED(TUnloadTabletGoal.SUSPENDED);

    private final TUnloadTabletGoal unloadGoal;

    TabletGoalState(TUnloadTabletGoal unloadGoal) {
      this.unloadGoal = unloadGoal;
    }

    /** The purpose of unloading this tablet. */
    public TUnloadTabletGoal howUnload() {
      return unloadGoal;
    }
  };
 
   TabletGoalState getSystemGoalState(TabletLocationState tls) {
     switch (getMasterState()) {
@@ -773,7 +791,7 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
     TabletGoalState state = getSystemGoalState(tls);
     if (state == TabletGoalState.HOSTED) {
       if (tls.current != null &amp;&amp; serversToShutdown.contains(tls.current)) {
        return TabletGoalState.UNASSIGNED;
        return TabletGoalState.SUSPENDED;
       }
       // Handle merge transitions
       if (mergeInfo.getExtent() != null) {
@@ -974,7 +992,8 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
     }
 
     private long updateStatus() throws AccumuloException, AccumuloSecurityException, TableNotFoundException {
      tserverStatus = Collections.synchronizedSortedMap(gatherTableInformation());
      Set&lt;TServerInstance&gt; currentServers = tserverSet.getCurrentServers();
      tserverStatus = Collections.synchronizedSortedMap(gatherTableInformation(currentServers));
       checkForHeldServer(tserverStatus);
 
       if (!badServers.isEmpty()) {
@@ -986,6 +1005,12 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
       } else if (!serversToShutdown.isEmpty()) {
         log.debug("not balancing while shutting down servers " + serversToShutdown);
       } else {
        for (TabletGroupWatcher tgw : watchers) {
          if (!tgw.isSameTserversAsLastScan(currentServers)) {
            log.debug("not balancing just yet, as collection of live tservers is in flux");
            return DEFAULT_WAIT_FOR_WATCHER;
          }
        }
         return balanceTablets();
       }
       return DEFAULT_WAIT_FOR_WATCHER;
@@ -1042,12 +1067,11 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
 
   }
 
  private SortedMap&lt;TServerInstance,TabletServerStatus&gt; gatherTableInformation() {
  private SortedMap&lt;TServerInstance,TabletServerStatus&gt; gatherTableInformation(Set&lt;TServerInstance&gt; currentServers) {
     long start = System.currentTimeMillis();
     int threads = Math.max(getConfiguration().getCount(Property.MASTER_STATUS_THREAD_POOL_SIZE), 1);
     ExecutorService tp = Executors.newFixedThreadPool(threads);
     final SortedMap&lt;TServerInstance,TabletServerStatus&gt; result = new TreeMap&lt;&gt;();
    Set&lt;TServerInstance&gt; currentServers = tserverSet.getCurrentServers();
     for (TServerInstance serverInstance : currentServers) {
       final TServerInstance server = serverInstance;
       tp.submit(new Runnable() {
@@ -1133,9 +1157,30 @@ public class Master extends AccumuloServerContext implements LiveTServerSet.List
       }
     });
 
    watchers.add(new TabletGroupWatcher(this, new MetaDataStateStore(this, this), null));
    watchers.add(new TabletGroupWatcher(this, new RootTabletStateStore(this, this), watchers.get(0)));
    watchers.add(new TabletGroupWatcher(this, new ZooTabletStateStore(new ZooStore(zroot)), watchers.get(1)));
    watchers.add(new TabletGroupWatcher(this, new MetaDataStateStore(this, this), null) {
      @Override
      boolean canSuspendTablets() {
        // Always allow user data tablets to enter suspended state.
        return true;
      }
    });

    watchers.add(new TabletGroupWatcher(this, new RootTabletStateStore(this, this), watchers.get(0)) {
      @Override
      boolean canSuspendTablets() {
        // Allow metadata tablets to enter suspended state only if so configured. Generally we'll want metadata tablets to
        <comment type="line">// be immediately reassigned, even if there's a global table.suspension.duration setting.</comment>
        return getConfiguration<control>(<init><expr/></init>)</control><block type="pseudo"><block_content><expr_stmt><expr><operator>.</operator><call><name>getBoolean</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>MASTER_METADATA_SUSPENDABLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>)</block_content></block>;</function>

    <expr_stmt><expr><call><name><name>watchers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>TabletGroupWatcher</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ZooTabletStateStore</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ZooStore</name><argument_list>(<argument><expr><name>zroot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>watchers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><name>boolean</name></type> <name>canSuspendTablets</name><parameter_list>()</parameter_list> <block>{<block_content>
        <comment type="line">// Never allow root tablet to enter suspended state.</comment>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>TabletGroupWatcher</name></type> <name>watcher</name> <range>: <expr><name>watchers</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>watcher</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1248</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1293</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> extends <name>AccumuloServerContext</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>List</name></name>
     <call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Shutting down fate."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fate</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Shutting down timekeeping."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>timeKeeper</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

     <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>deadline</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>MAX_CLEANUP_WAIT_TIME</name></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>statusThread</name><operator>.</operator><name>join</name></name><argument_list>(<argument><expr><call><name>remaining</name><argument_list>(<argument><expr><name>deadline</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>replicationWorkAssigner</name><operator>.</operator><name>join</name></name><argument_list>(<argument><expr><call><name>remaining</name><argument_list>(<argument><expr><name>deadline</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1620</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">1668</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>Master</name> extends <name>AccumuloServerContext</name> implements <name><name>LiveTServerSet</name><operator>.</operator><name>List</name></name>
   <specifier>public</specifier> <name>void</name> <call><name>removeBulkImportStatus</name><argument_list>(<argument><expr><name>String</name> <name>directory</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>bulkImportStatus</name><operator>.</operator><name>removeBulkImportStatus</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>

  <comment type="block" format="javadoc">/**
   * Return how long (in milliseconds) there has been a master overseeing this cluster. This is an approximately monotonic clock, which will be approximately
   * consistent between different masters or different runs of the same master.
   */</comment>
  <specifier>public</specifier> <name>Long</name> <call><name>getSteadyTime</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><call><name><name>timeKeeper</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></expr></expr_stmt>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MasterTime</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MasterTime</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..27c57f0cf</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MasterTime</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">108</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>master</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Timer</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TimerTask</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>NANOSECONDS</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>Constants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>fate</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooUtil</name><operator>.</operator><name>NodeExistsPolicy</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooReaderWriter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<comment type="block" format="javadoc">/** Keep a persistent roughly monotone view of how long a master has been overseeing this cluster. */</comment>
<class><specifier>public</specifier> class <name>MasterTime</name> <super_list><extends>extends <super><name>TimerTask</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>MasterTime</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>zPath</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ZooReaderWriter</name></type> <name>zk</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Master</name></type> <name>master</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Timer</name></type> <name>timer</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/** Difference between time stored in ZooKeeper and System.nanoTime() when we last read from ZooKeeper. */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>skewAmount</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>MasterTime</name><parameter_list>(<parameter><decl><type><name>Master</name></type> <name>master</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>zPath</name></name> <operator>=</operator> <call><name><name>ZooUtil</name><operator>.</operator><name>getRoot</name></name><argument_list>(<argument><expr><call><name><name>master</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>Constants</name><operator>.</operator><name>ZMASTER_TICK</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>zk</name></name> <operator>=</operator> <call><name><name>ZooReaderWriter</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>master</name></name> <operator>=</operator> <name>master</name></expr>;</expr_stmt>

    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>zk</name><operator>.</operator><name>putPersistentData</name></name><argument_list>(<argument><expr><name>zPath</name></expr></argument>, <argument><expr><literal type="string">"0"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NodeExistsPolicy</name><operator>.</operator><name>SKIP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>skewAmount</name> <operator>=</operator> <call><name><name>Long</name><operator>.</operator><name>parseLong</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>zk</name><operator>.</operator><name>getData</name></name><argument_list>(<argument><expr><name>zPath</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>-</operator> <call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Error updating master time"</literal></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>timer</name></name> <operator>=</operator> <operator>new</operator> <call><name>Timer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>timer</name><operator>.</operator><name>schedule</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>MILLISECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>SECONDS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <comment type="block" format="javadoc">/**
   * How long has this cluster had a Master?
   *
   * @returns Approximate total duration this cluster has had a Master, in milliseconds.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>long</name></type> <name>getTime</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>MILLISECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>skewAmount</name></expr></argument>, <argument><expr><name>NANOSECONDS</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** Shut down the time keeping. */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>shutdown</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>timer</name><operator>.</operator><name>cancel</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
    <switch>switch <condition>(<expr><call><name><name>master</name><operator>.</operator><name>getMasterState</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <comment type="line">// If we don't have the lock, periodically re-read the value in ZooKeeper, in case there's another master we're</comment>
    <comment type="line">// shadowing for.</comment>
      <case>case <expr><name>INITIAL</name></expr>:</case>
      <case>case <expr><name>STOP</name></expr>:</case>
        <try>try <block>{<block_content>
          <decl_stmt><decl><type><name>long</name></type> <name>zkTime</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>parseLong</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>zk</name><operator>.</operator><name>getData</name></name><argument_list>(<argument><expr><name>zPath</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
            <expr_stmt><expr><name>skewAmount</name> <operator>=</operator> <name>zkTime</name> <operator>-</operator> <call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></synchronized>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>log</name><operator>.</operator><name>isDebugEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Failed to retrieve master tick time"</literal></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></catch></try>
        <break>break;</break>
      <comment type="line">// If we do have the lock, periodically write our clock to ZooKeeper.</comment>
      <case>case <expr><name>HAVE_LOCK</name></expr>:</case>
      <case>case <expr><name>SAFE_MODE</name></expr>:</case>
      <case>case <expr><name>NORMAL</name></expr>:</case>
      <case>case <expr><name>UNLOAD_METADATA_TABLETS</name></expr>:</case>
      <case>case <expr><name>UNLOAD_ROOT_TABLET</name></expr>:</case>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>zk</name><operator>.</operator><name>putPersistentData</name></name><argument_list>(<argument><expr><name>zPath</name></expr></argument>, <argument><expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>skewAmount</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NodeExistsPolicy</name><operator>.</operator><name>OVERWRITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>log</name><operator>.</operator><name>isDebugEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Failed to update master tick time"</literal></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></switch>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e20335bed</name><operator>..</operator><literal type="number">2cf7d9d04</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name><name>TabletGroupWatcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>master</name></name>;</package>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>ImmutableSortedSet</name></name>;</import>
 <import>import static <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Uninterruptibles</name><operator>.</operator><name>sleepUninterruptibly</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>Math</name><operator>.</operator><name>min</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TException</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Optional</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Iterators</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>conf</name><operator>.</operator><name>TableConfiguration</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>Math</name><operator>.</operator><name>min</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>SortedSet</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>Math</name><operator>.</operator><name>min</name></name>;</import>
 
<class>class <name>TabletGroupWatcher</name> <super_list><extends>extends <super><name>Daemon</name></super></extends></super_list> <block>{
<class><specifier>abstract</specifier> class <name>TabletGroupWatcher</name> <super_list><extends>extends <super><name>Daemon</name></super></extends></super_list> <block>{
   <comment type="line">// Constants used to make sure assignment logging isn't excessive in quantity or size</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ASSIGNMENT_BUFFER_SEPARATOR</name> <init>= <expr><literal type="string">", "</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>ASSINGMENT_BUFFER_MAX_LENGTH</name> <init>= <expr><literal type="number">4096</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
   <expr><specifier>private</specifier> <name>final</name> <name>Master</name> <name>master</name></expr>;
   <expr><name>final</name> <name>TabletStateStore</name> <name>store</name></expr>;
   <expr><name>final</name> <name>TabletGroupWatcher</name> <name>dependentWatcher</name></expr>;

   <expr><specifier>private</specifier> <name>MasterState</name> <name>masterState</name></expr>;
 
   <expr><name>final</name> <name>TableStats</name> <name>stats</name> <operator>=</operator> <operator>new</operator> <call><name>TableStats</name><argument_list>()</argument_list></call></expr>;
  <expr><specifier>private</specifier> <name><name>SortedSet</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name> <name>lastScanServers</name> <operator>=</operator> <call><name><name>ImmutableSortedSet</name><operator>.</operator><name>of</name></name><argument_list>()</argument_list></call></expr>;
 
   <expr><call><name>TabletGroupWatcher</name><argument_list>(<argument><expr><name>Master</name> <name>master</name></expr></argument>, <argument><expr><name>TabletStateStore</name> <name>store</name></expr></argument>, <argument><expr><name>TabletGroupWatcher</name> <name>dependentWatcher</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>this</name><operator>.</operator><name>master</name></name> <operator>=</operator> <name>master</name></expr>;
@@ <expr><operator>-</operator><literal type="number">111</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">118</literal></expr>,<expr><literal type="number">9</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>dependentWatcher</name></name> <operator>=</operator> <name>dependentWatcher</name></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/** Should this {@code TabletGroupWatcher} suspend tablets? */</comment>
  <specifier>abstract</specifier> <name>boolean</name> <call><name>canSuspendTablets</name><argument_list>()</argument_list></call></expr>;

   <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>TableCounts</name></argument>&gt;</argument_list></name> <call><name>getStats</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><call><name><name>stats</name><operator>.</operator><name>getLast</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr>
   }</block>
@@ <operator>-</operator><literal type="number">124</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">134</literal></expr>,<expr><literal type="number">13</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
     <return>return <expr><call><name><name>stats</name><operator>.</operator><name>getLast</name></name><argument_list>(<argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
 
  <comment type="block" format="javadoc">/** True if the collection of live tservers specified in 'candidates' hasn't changed since the last time an assignment scan was started. */</comment>
  <specifier>public</specifier> <specifier>synchronized</specifier> <name>boolean</name> <call><name>isSameTserversAsLastScan</name><argument_list>(<argument><expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name> <name>candidates</name></expr></argument>)</argument_list></call> <block>{
    <return>return <expr><call><name><name>candidates</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>lastScanServers</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></expr></expr_stmt>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>

     <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setName</name><argument_list>(<argument><expr><literal type="string">"Watching "</literal> <operator>+</operator> <call><name><name>store</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>oldCounts</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><call><name><name>TabletState</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>EventCoordinator</name><operator>.</operator><name>Listener</name></name></type> <name>eventListener</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>nextEvent</name><operator>.</operator><name>getListener</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
 
         <if_stmt><if>if <condition>(<expr><call><name><name>currentTServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>eventListener</name><operator>.</operator><name>waitForEvents</name></name><argument_list>(<argument><expr><name><name>Master</name><operator>.</operator><name>TIME_TO_WAIT_BETWEEN_SCANS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
            <expr_stmt><expr><name>lastScanServers</name> <operator>=</operator> <call><name><name>ImmutableSortedSet</name><operator>.</operator><name>of</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/></block_content></block></synchronized></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
           <continue>continue;</continue>
         </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">165</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
         <expr><name><name>SortedMap</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>,<argument><name>TabletServerStatus</name></argument>&gt;</argument_list></name> <name>destinations</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>currentTServers</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>destinations</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>removeAll</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>serversToShutdown</name></name></expr></argument>)</argument_list></call></expr>;
 
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name> <name>assignments</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name> <name>assigned</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name> <name>assignments</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name> <name>assigned</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
         <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>TabletLocationState</name></argument>&gt;</argument_list></name> <name>assignedToDeadServers</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>TabletLocationState</name></argument>&gt;</argument_list></name> <name>suspendedToGoneServers</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
         <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>KeyExtent</name></argument>,<argument><name>TServerInstance</name></argument>&gt;</argument_list></name> <name>unassigned</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
         <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>logsForDeadServers</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">192</literal></expr>,<expr><literal type="number">15</literal> <operator>+</operator><literal type="number">210</literal></expr>,<expr><literal type="number">18</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
 
           <comment type="line">// Don't overwhelm the tablet servers with work</comment>
           <if_stmt><if>if <condition>(<expr><call><name><name>unassigned</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>unloaded</name> <operator>&gt;</operator> <name><name>Master</name><operator>.</operator><name>MAX_TSERVER_WORK_CHUNK</name></name> <operator>*</operator> <call><name><name>currentTServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>flushChanges</name><argument_list>(<argument><expr><name>destinations</name></expr></argument>, <argument><expr><name>assignments</name></expr></argument>, <argument><expr><name>assigned</name></expr></argument>, <argument><expr><name>assignedToDeadServers</name></expr></argument>, <argument><expr><name>logsForDeadServers</name></expr></argument>, <argument><expr><name>unassigned</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>flushChanges</name><argument_list>(<argument><expr><name>destinations</name></expr></argument>, <argument><expr><name>assignments</name></expr></argument>, <argument><expr><name>assigned</name></expr></argument>, <argument><expr><name>assignedToDeadServers</name></expr></argument>, <argument><expr><name>logsForDeadServers</name></expr></argument>, <argument><expr><name>suspendedToGoneServers</name></expr></argument>, <argument><expr><name>unassigned</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>assignments</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>assigned</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>assignedToDeadServers</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>suspendedToGoneServers</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>unassigned</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>unloaded</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>eventListener</name><operator>.</operator><name>waitForEvents</name></name><argument_list>(<argument><expr><name><name>Master</name><operator>.</operator><name>TIME_TO_WAIT_BETWEEN_SCANS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt/></block_content></block></if></if_stmt>}</block>
           <name>String</name> <name>tableId</name> <operator>=</operator> <call><name><name>tls</name><operator>.</operator><name>extent</name><operator>.</operator><name>getTableId</name></name><argument_list>()</argument_list></call></expr>;
          <expr><name>TableConfiguration</name> <name>tableConf</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>getConfigurationFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTableConfiguration</name><argument_list>(<argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;

           <expr><name>MergeStats</name> <name>mergeStats</name> <operator>=</operator> <call><name><name>mergeStatsCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;
           <if_stmt><if>if <condition>(<expr><name>mergeStats</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><name>mergeStats</name> <operator>=</operator> <call><name><name>currentMerges</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
           }</block></expr></expr_stmt>
 
           <comment type="line">// if we are shutting down all the tabletservers, we have to do it in order</comment>
          <if_stmt><if>if <condition>(<expr><name>goal</name> <operator>==</operator> <name><name>TabletGoalState</name><operator>.</operator><name>UNASSIGNED</name></name> <operator>&amp;&amp;</operator> <name>state</name> <operator>==</operator> <name><name>TabletState</name><operator>.</operator><name>HOSTED</name></name></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>goal</name> <operator>==</operator> <name><name>TabletGoalState</name><operator>.</operator><name>SUSPENDED</name></name> <operator>&amp;&amp;</operator> <name>state</name> <operator>==</operator> <name><name>TabletState</name><operator>.</operator><name>HOSTED</name></name></expr>)</condition> <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>serversToShutdown</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>currentTServers</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
               <if_stmt><if>if <condition>(<expr><name>dependentWatcher</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>dependentWatcher</name><operator>.</operator><name>assignedOrHosted</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><name>goal</name> <operator>=</operator> <name><name>TabletGoalState</name><operator>.</operator><name>HOSTED</name></name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">253</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">29</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
                   <expr><call><name><name>logsForDeadServers</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>tserver</name></expr></argument>, <argument><expr><call><name><name>wals</name><operator>.</operator><name>getWalsInUse</name></name><argument_list>(<argument><expr><name>tserver</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
                 }</block></expr></expr_stmt>
                 <break>break;</break>
              <case>case <expr><name>SUSPENDED</name></expr>:</case>
                <if_stmt><if>if <condition>(<expr><call><name><name>master</name><operator>.</operator><name>getSteadyTime</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name><name>tls</name><operator>.</operator><name>suspend</name><operator>.</operator><name>suspensionTime</name></name> <operator>&lt;</operator> <call><name><name>tableConf</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>TABLE_SUSPEND_DURATION</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                  <comment type="line">// Tablet is suspended. See if its tablet server is back.</comment>
                  <decl_stmt><decl><type><name>TServerInstance</name></type> <name>returnInstance</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
                  <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name></type> <name>find</name> <init>= <expr><call><name><name>destinations</name><operator>.</operator><name>tailMap</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TServerInstance</name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>suspend</name><operator>.</operator><name>server</name></name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>keySet</name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                  <if_stmt><if>if <condition>(<expr><call><name><name>find</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>TServerInstance</name></type> <name>found</name> <init>= <expr><call><name><name>find</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>found</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>suspend</name><operator>.</operator><name>server</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                      <expr_stmt><expr><name>returnInstance</name> <operator>=</operator> <name>found</name></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                  </block_content>}</block></if></if_stmt>

                  <comment type="line">// Old tablet server is back. Return this tablet to its previous owner.</comment>
                  <if_stmt><if>if <condition>(<expr><name>returnInstance</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>assignments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Assignment</name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name>returnInstance</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                  </block_content>}</block></if> <else>else <block>{<block_content>
                    <comment type="line">// leave suspended, don't ask for a new assignment.</comment>
                  </block_content>}</block></else></if_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                  <comment type="line">// Treat as unassigned, ask for a new assignment.</comment>
                  <expr_stmt><expr><call><name><name>unassigned</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name>server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
                <break>break;</break>
               <case>case <expr><name>UNASSIGNED</name></expr>:</case>
                 <comment type="line">// maybe it's a finishing migration</comment>
                 <decl_stmt><decl><type><name>TServerInstance</name></type> <name>dest</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>migrations</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">320</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
             }</block></expr></expr_stmt>
           }</block></class> <if_stmt><else>else <block>{<block_content>
             <switch>switch <condition>(<expr><name>state</name></expr>)</condition> <block>{<block_content>
              <case>case <expr><name>SUSPENDED</name></expr>:</case>
                <comment type="line">// Request a move to UNASSIGNED, so as to allow balancing to continue.</comment>
                <expr_stmt><expr><call><name><name>suspendedToGoneServers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>tls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// Fall through to unassigned to cancel migrations.</comment>
               <case>case <expr><name>UNASSIGNED</name></expr>:</case>
                 <decl_stmt><decl><type><name>TServerInstance</name></type> <name>dest</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>migrations</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>TableState</name></type> <name>tableState</name> <init>= <expr><call><name><name>TableManager</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTableState</name><argument_list>(<argument><expr><call><name><name>tls</name><operator>.</operator><name>extent</name><operator>.</operator><name>getTableId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">292</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">340</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
               <case>case <expr><name>HOSTED</name></expr>:</case>
                 <name>TServerConnection</name> <name>conn</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>tserverSet</name><operator>.</operator><name>getConnection</name></name><argument_list>(<argument><expr><name>server</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                 <if_stmt><if>if <condition>(<expr><name>conn</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                  <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>unloadTablet</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>masterLock</name></name></expr></argument>, <argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name>goal</name> <operator>!=</operator> <name><name>TabletGoalState</name><operator>.</operator><name>DELETED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                  <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>unloadTablet</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>masterLock</name></name></expr></argument>, <argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><call><name><name>goal</name><operator>.</operator><name>howUnload</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>master</name><operator>.</operator><name>getSteadyTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                   <expr_stmt><expr><name>unloaded</name><operator>++</operator></expr>;</expr_stmt>
                   <expr_stmt><expr><name>totalUnloaded</name><operator>++</operator></expr>;</expr_stmt>
                 </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">306</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">354</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
           <expr><name><name>counts</name><index>[<expr><call><name><name>state</name><operator>.</operator><name>ordinal</name></name><argument_list>()</argument_list></call></expr>]</index></name><operator>++</operator></expr>;
         }</block></expr></expr_stmt>
 
        <expr_stmt><expr><call><name>flushChanges</name><argument_list>(<argument><expr><name>destinations</name></expr></argument>, <argument><expr><name>assignments</name></expr></argument>, <argument><expr><name>assigned</name></expr></argument>, <argument><expr><name>assignedToDeadServers</name></expr></argument>, <argument><expr><name>logsForDeadServers</name></expr></argument>, <argument><expr><name>unassigned</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>flushChanges</name><argument_list>(<argument><expr><name>destinations</name></expr></argument>, <argument><expr><name>assignments</name></expr></argument>, <argument><expr><name>assigned</name></expr></argument>, <argument><expr><name>assignedToDeadServers</name></expr></argument>, <argument><expr><name>logsForDeadServers</name></expr></argument>, <argument><expr><name>suspendedToGoneServers</name></expr></argument>, <argument><expr><name>unassigned</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">// provide stats after flushing changes to avoid race conditions w/ delete table</comment>
         <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>end</name></name><argument_list>(<argument><expr><name>masterState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">326</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
 
         <expr><call><name>updateMergeState</name><argument_list>(<argument><expr><name>mergeStatsCache</name></expr></argument>)</argument_list></call></expr>;
 
        <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
          <expr_stmt><expr><name>lastScanServers</name> <operator>=</operator> <call><name><name>ImmutableSortedSet</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><call><name><name>currentTServers</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></synchronized></block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>tserverSet</name><operator>.</operator><name>getCurrentServers</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>currentTServers</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>Master</name><operator>.</operator><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"[%s] sleeping for %.2f seconds"</literal></expr></argument>, <argument><expr><call><name><name>store</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Master</name><operator>.</operator><name>TIME_TO_WAIT_BETWEEN_SCANS</name></name> <operator>/</operator> <literal type="number">1000.</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>eventListener</name><operator>.</operator><name>waitForEvents</name></name><argument_list>(<argument><expr><name><name>Master</name><operator>.</operator><name>TIME_TO_WAIT_BETWEEN_SCANS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">749</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">800</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <name>class</name> <name>TabletGroupWatcher</name> extends <name>Daemon</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>void</name> <call><name>flushChanges</name><argument_list>(<argument><expr><name><name>SortedMap</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>,<argument><name>TabletServerStatus</name></argument>&gt;</argument_list></name> <name>currentTServers</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name> <name>assignments</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Assignment</name></argument>&gt;</argument_list></name> <name>assigned</name></expr></argument>,
      <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>TabletLocationState</name></argument>&gt;</argument_list></name> <name>assignedToDeadServers</name></expr></argument>, <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>logsForDeadServers</name></expr></argument>, <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>KeyExtent</name></argument>,<argument><name>TServerInstance</name></argument>&gt;</argument_list></name> <name>unassigned</name></expr></argument>)</argument_list></call>
      <throws>throws <argument><expr><name>DistributedStoreException</name></expr></argument>, <argument><expr><name>TException</name></expr></argument>, <argument><expr><name>WalMarkerException</name> <block>{
      <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>TabletLocationState</name></argument>&gt;</argument_list></name> <name>assignedToDeadServers</name></expr>, <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>logsForDeadServers</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>TabletLocationState</name></argument>&gt;</argument_list></name> <name>suspendedToGoneServers</name></expr></argument>,
      <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>KeyExtent</name></argument>,<argument><name>TServerInstance</name></argument>&gt;</argument_list></name> <name>unassigned</name></expr></argument></block></expr></argument></throws></expr></expr_stmt>)</block_content> <throws>throws <argument><expr><name>DistributedStoreException</name></expr></argument>, <argument><expr><name>TException</name></expr></argument>, <argument><expr><name>WalMarkerException</name> <block>{
    <expr><name>boolean</name> <name>tabletsSuspendable</name> <operator>=</operator> <call><name>canSuspendTablets</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></block><empty_stmt>;</empty_stmt></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>assignedToDeadServers</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>int</name></type> <name>maxServersToShow</name> <init>= <expr><call><name>min</name><argument_list>(<argument><expr><call><name><name>assignedToDeadServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Master</name><operator>.</operator><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><call><name><name>assignedToDeadServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" assigned to dead servers: "</literal> <operator>+</operator> <call><name><name>assignedToDeadServers</name><operator>.</operator><name>subList</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>maxServersToShow</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Master</name><operator>.</operator><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"logs for dead servers: "</literal> <operator>+</operator> <name>logsForDeadServers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>store</name><operator>.</operator><name>unassign</name></name><argument_list>(<argument><expr><name>assignedToDeadServers</name></expr></argument>, <argument><expr><name>logsForDeadServers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>tabletsSuspendable</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>store</name><operator>.</operator><name>suspend</name></name><argument_list>(<argument><expr><name>assignedToDeadServers</name></expr></argument>, <argument><expr><name>logsForDeadServers</name></expr></argument>, <argument><expr><call><name><name>master</name><operator>.</operator><name>getSteadyTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>store</name><operator>.</operator><name>unassign</name></name><argument_list>(<argument><expr><name>assignedToDeadServers</name></expr></argument>, <argument><expr><name>logsForDeadServers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
       <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>markDeadServerLogsAsClosed</name></name><argument_list>(<argument><expr><name>logsForDeadServers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>nextEvent</name><operator>.</operator><name>event</name></name><argument_list>(<argument><expr><literal type="string">"Marked %d tablets as unassigned because they don't have current servers"</literal></expr></argument>, <argument><expr><call><name><name>assignedToDeadServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>master</name><operator>.</operator><name>nextEvent</name><operator>.</operator><name>event</name></name><argument_list>(<argument><expr><literal type="string">"Marked %d tablets as suspended because they don't have current servers"</literal></expr></argument>, <argument><expr><call><name><name>assignedToDeadServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>suspendedToGoneServers</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>int</name></type> <name>maxServersToShow</name> <init>= <expr><call><name>min</name><argument_list>(<argument><expr><call><name><name>assignedToDeadServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Master</name><operator>.</operator><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><call><name><name>assignedToDeadServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" suspended to gone servers: "</literal> <operator>+</operator> <call><name><name>assignedToDeadServers</name><operator>.</operator><name>subList</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>maxServersToShow</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>store</name><operator>.</operator><name>unsuspend</name></name><argument_list>(<argument><expr><name>suspendedToGoneServers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>currentTServers</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>MergeStats</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>MergeStats</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a89100eb9</name><operator>..</operator><literal type="number">4cb858c1b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>MergeStats</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>MergeStats</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MergeStats</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>total</name></name><operator>++</operator></expr>;</block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>state</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>TabletState</name><operator>.</operator><name>HOSTED</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>hosted</name></name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>state</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>TabletState</name><operator>.</operator><name>UNASSIGNED</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>state</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>TabletState</name><operator>.</operator><name>UNASSIGNED</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>state</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>TabletState</name><operator>.</operator><name>SUSPENDED</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>unassigned</name></name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
   </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">217</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">217</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MergeStats</name> <block>{
           <return>return <expr><literal type="boolean">false</literal></expr>;</return>
         }</block></expr></expr_stmt>
 
        <if_stmt><if>if <condition>(<expr><call><name><name>tls</name><operator>.</operator><name>getState</name></name><argument_list>(<argument><expr><call><name><name>master</name><operator>.</operator><name>onlineTabletServers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>TabletState</name><operator>.</operator><name>UNASSIGNED</name></name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>tls</name><operator>.</operator><name>getState</name></name><argument_list>(<argument><expr><call><name><name>master</name><operator>.</operator><name>onlineTabletServers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>TabletState</name><operator>.</operator><name>UNASSIGNED</name></name> <operator>&amp;&amp;</operator> <call><name><name>tls</name><operator>.</operator><name>getState</name></name><argument_list>(<argument><expr><call><name><name>master</name><operator>.</operator><name>onlineTabletServers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>TabletState</name><operator>.</operator><name>SUSPENDED</name></name></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"failing consistency: assigned or hosted "</literal> <operator>+</operator> <name>tls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <return>return <expr><literal type="boolean">false</literal></expr>;</return>
         </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TableCounts</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TableCounts</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">73395eaf0</literal><operator>..</operator><name>dd44bc625</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TableCounts</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>TableCounts</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TableCounts</name> <block>{
   <expr><specifier>public</specifier> <name>int</name> <call><name>hosted</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name><name>counts</name><index>[<expr><call><name><name>TabletState</name><operator>.</operator><name>HOSTED</name><operator>.</operator><name>ordinal</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</return></block></expr>
   }</block>

  <specifier>public</specifier> <name>int</name> <call><name>suspended</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name><name>counts</name><index>[<expr><call><name><name>TabletState</name><operator>.</operator><name>SUSPENDED</name><operator>.</operator><name>ordinal</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</return>
  }</block></expr></expr_stmt>
 </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>RootTabletStateStoreTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>RootTabletStateStoreTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0bc989e39</literal><operator>..</operator><literal type="number">6497f96a1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>RootTabletStateStoreTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>master</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>master</name><operator>/</operator><name>state</name><operator>/</operator><name><name>RootTabletStateStoreTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootTabletStateStoreTest</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>count</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     <name>TabletLocationState</name> <name>assigned</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>assigned</name> <operator>=</operator> <operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>server</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>assigned</name> <operator>=</operator> <operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>server</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>BadLocationStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Unexpected error "</literal> <operator>+</operator> <name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootTabletStateStoreTest</name> <block>{
 
     <expr><name>TabletLocationState</name> <name>broken</name> <operator>=</operator> <literal type="null">null</literal></expr>;</block></expr></expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>broken</name> <operator>=</operator> <operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>notRoot</name></expr></argument>, <argument><expr><name>server</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>broken</name> <operator>=</operator> <operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>notRoot</name></expr></argument>, <argument><expr><name>server</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>BadLocationStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Unexpected error "</literal> <operator>+</operator> <name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>tserver</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>tserver</name><operator>/</operator><name><name>TabletServer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>tserver</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>tserver</name><operator>/</operator><name><name>TabletServer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">94e2ed919</literal><operator>..</operator><name>c4df66d71</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>tserver</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>tserver</name><operator>/</operator><name><name>TabletServer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>tserver</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>tserver</name><operator>/</operator><name><name>TabletServer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>net</name><operator>.</operator><name>HostAndPort</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>NANOSECONDS</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>tabletserver</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TUnloadTabletGoal</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TabletServer</name> <super_list><extends>extends <super><name>AccumuloServerContext</name></super></extends> <implements>implements <super><name>Runnable</name></super></implements></super_list> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">329</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">332</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletServer</name> extends <name>AccumuloServerContext</name> implements <name>Runnable</name> <block>{
   <expr><specifier>private</specifier> <name>final</name> <name>ZooAuthenticationKeyWatcher</name> <name>authKeyWatcher</name></expr>;
   <specifier>private</specifier> <name>final</name> <name>WalStateManager</name> <name>walMarker</name></block></expr>;</expr_stmt>
 
  <constructor><specifier>public</specifier> <name>TabletServer</name><parameter_list>(<parameter><decl><type><name>ServerConfigurationFactory</name></type> <name>confFactory</name></decl></parameter>, <parameter><decl><type><name>VolumeManager</name></type> <name>fs</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>TabletServer</name><parameter_list>(<parameter><decl><type><name>ServerConfigurationFactory</name></type> <name>confFactory</name></decl></parameter>, <parameter><decl><type><name>VolumeManager</name></type> <name>fs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>confFactory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>confFactory</name></name> <operator>=</operator> <name>confFactory</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>fs</name></name> <operator>=</operator> <name>fs</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1549</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1552</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletServer</name> extends <name>AccumuloServerContext</name> implements <name>Runnable</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name>TInfo</name> <name>tinfo</name></expr></argument>, <argument><expr><name>TCredentials</name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name>TKeyExtent</name> <name>textent</name></expr></argument>, <argument><expr><name>boolean</name> <name>save</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>void</name> <call><name>unloadTablet</name><argument_list>(<argument><expr><name>TInfo</name> <name>tinfo</name></expr></argument>, <argument><expr><name>TCredentials</name> <name>credentials</name></expr></argument>, <argument><expr><name>String</name> <name>lock</name></expr></argument>, <argument><expr><name>TKeyExtent</name> <name>textent</name></expr></argument>, <argument><expr><name>TUnloadTabletGoal</name> <name>goal</name></expr></argument>, <argument><expr><name>long</name> <name>requestTime</name></expr></argument>)</argument_list></call> <block>{
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name>checkPermission</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>, <argument><expr><name>lock</name></expr></argument>, <argument><expr><literal type="string">"unloadTablet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></try></block></expr>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>ThriftSecurityException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1559</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1562</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletServer</name> extends <name>AccumuloServerContext</name> implements <name>Runnable</name> <block>{
 
       <expr><name>KeyExtent</name> <name>extent</name> <operator>=</operator> <operator>new</operator> <call><name>KeyExtent</name><argument_list>(<argument><expr><name>textent</name></expr></argument>)</argument_list></call></expr>;
 
      <call><name><name>resourceManager</name><operator>.</operator><name>addMigration</name></name><argument_list>(<argument><expr><name>extent</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>LoggingRunnable</name><argument_list>(<argument><expr><name>log</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>UnloadTabletHandler</name><argument_list>(<argument><expr><name>extent</name></expr></argument>, <argument><expr><name>save</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>resourceManager</name><operator>.</operator><name>addMigration</name></name><argument_list>(<argument><expr><name>extent</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>LoggingRunnable</name><argument_list>(<argument><expr><name>log</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>UnloadTabletHandler</name><argument_list>(<argument><expr><name>extent</name></expr></argument>, <argument><expr><name>goal</name></expr></argument>, <argument><expr><name>requestTime</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch>
 
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1939</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">1942</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletServer</name> extends <name>AccumuloServerContext</name> implements <name>Runnable</name> <block>{
 
   <expr><specifier>private</specifier> <name>class</name> <name>UnloadTabletHandler</name> implements <name>Runnable</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>KeyExtent</name> <name>extent</name></expr>;
    <specifier>private</specifier> <name>final</name> <name>boolean</name> <name>saveState</name></block></expr>;
    <specifier>private</specifier> <name>final</name> <name>TUnloadTabletGoal</name> <name>goalState</name></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>long</name></type> <name>requestTimeSkew</name></decl>;</decl_stmt>
 
    <constructor><specifier>public</specifier> <name>UnloadTabletHandler</name><parameter_list>(<parameter><decl><type><name>KeyExtent</name></type> <name>extent</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>saveState</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>UnloadTabletHandler</name><parameter_list>(<parameter><decl><type><name>KeyExtent</name></type> <name>extent</name></decl></parameter>, <parameter><decl><type><name>TUnloadTabletGoal</name></type> <name>goalState</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>requestTime</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>extent</name></name> <operator>=</operator> <name>extent</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>saveState</name></name> <operator>=</operator> <name>saveState</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>goalState</name></name> <operator>=</operator> <name>goalState</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>requestTimeSkew</name></name> <operator>=</operator> <name>requestTime</name> <operator>-</operator> <call><name><name>MILLISECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>NANOSECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1982</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1987</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletServer</name> extends <name>AccumuloServerContext</name> implements <name>Runnable</name> <block>{
       }</block></expr></expr_stmt>
 
       <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>saveState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>goalState</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>TUnloadTabletGoal</name><operator>.</operator><name>DELETED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
 
         <if_stmt><if>if <condition>(<expr><operator>(</operator><call><name><name>t</name><operator>.</operator><name>isClosing</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>t</name><operator>.</operator><name>isClosed</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator> <name>e</name> <operator>instanceof</operator> <name>IllegalStateException</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2003</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">2008</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletServer</name> extends <name>AccumuloServerContext</name> implements <name>Runnable</name> <block>{
         <expr><name>TServerInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>TServerInstance</name><argument_list>(<argument><expr><name>clientAddress</name></expr></argument>, <argument><expr><call><name>getLock</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSessionId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <name>TabletLocationState</name> <name>tls</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
         <try>try <block>{<block_content>
          <expr_stmt><expr><name>tls</name> <operator>=</operator> <operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>extent</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>instance</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>tls</name> <operator>=</operator> <operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>extent</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>instance</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>BadLocationStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Unexpected error "</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Unassigning "</literal> <operator>+</operator> <name>tls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>TabletStateStore</name><operator>.</operator><name>unassign</name></name><argument_list>(<argument><expr><name><name>TabletServer</name><operator>.</operator><name>this</name></name></expr></argument>, <argument><expr><name>tls</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>goalState</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>TUnloadTabletGoal</name><operator>.</operator><name>SUSPENDED</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>extent</name><operator>.</operator><name>isRootTablet</name></name><argument_list>()</argument_list></call>
            <operator>||</operator> <operator>(</operator><call><name><name>extent</name><operator>.</operator><name>isMeta</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>getConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBoolean</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>MASTER_METADATA_SUSPENDABLE</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Unassigning "</literal> <operator>+</operator> <name>tls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>TabletStateStore</name><operator>.</operator><name>unassign</name></name><argument_list>(<argument><expr><name><name>TabletServer</name><operator>.</operator><name>this</name></name></expr></argument>, <argument><expr><name>tls</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Suspending "</literal> <operator>+</operator> <name>tls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>TabletStateStore</name><operator>.</operator><name>suspend</name></name><argument_list>(<argument><expr><name><name>TabletServer</name><operator>.</operator><name>this</name></name></expr></argument>, <argument><expr><name>tls</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>requestTimeSkew</name> <operator>+</operator> <call><name><name>MILLISECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>NANOSECONDS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
       </block_content>}</block></if></if_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>DistributedStoreException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to update storage"</literal></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>KeeperException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MergeStateIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MergeStateIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">30584a6d5</literal><operator>..</operator><literal type="number">2d233c416</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MergeStateIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>MergeStateIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MergeStateIT</name> extends <name>ConfigurableMacBase</name> <block>{
     <comment type="line">// take it offline</comment>
     <expr><name>m</name> <operator>=</operator> <call><name><name>tablet</name><operator>.</operator><name>getPrevRowUpdateMutation</name></name><argument_list>()</argument_list></call></expr>;
     <name><name>Collection</name><argument_list type="generic">&lt;<argument><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>walogs</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>emptyList</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metaDataStateStore</name><operator>.</operator><name>unassign</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>tablet</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>state</name><operator>.</operator><name>someTServer</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>walogs</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metaDataStateStore</name><operator>.</operator><name>unassign</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TabletLocationState</name><argument_list>(<argument><expr><name>tablet</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>state</name><operator>.</operator><name>someTServer</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>walogs</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// now we can split</comment>
     <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name>scan</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>metaDataStateStore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>SuspendedTabletsIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>SuspendedTabletsIT</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..edd1aff6b</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>master</name><operator>/</operator><name><name>SuspendedTabletsIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">340</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>master</name></name>;</package>

<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>NANOSECONDS</name></name>;</import>
<import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Objects</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>SortedSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Callable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutorService</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executors</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>FutureTask</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ThreadFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeoutException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Instance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>ClientContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>ClientExec</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>Credentials</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>MasterClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Range</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>impl</name><operator>.</operator><name>KeyExtent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>master</name><operator>.</operator><name>thrift</name><operator>.</operator><name>MasterClientService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>ServerType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>impl</name><operator>.</operator><name>MiniAccumuloConfigImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>impl</name><operator>.</operator><name>ProcessReference</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>MetaDataTableScanner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TServerInstance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>master</name><operator>.</operator><name>state</name><operator>.</operator><name>TabletLocationState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name><operator>.</operator><name>ConfigurableMacBase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>HashMultimap</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>ImmutableMap</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>SetMultimap</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>net</name><operator>.</operator><name>HostAndPort</name></name>;</import>

<class><specifier>public</specifier> class <name>SuspendedTabletsIT</name> <super_list><extends>extends <super><name>ConfigurableMacBase</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>SuspendedTabletsIT</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Random</name></type> <name>RANDOM</name> <init>= <expr><operator>new</operator> <call><name>Random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>ExecutorService</name></type> <name>THREAD_POOL</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>TSERVERS</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>SUSPEND_DURATION</name> <init>= <expr><call><name><name>MILLISECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>SECONDS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>TABLETS</name> <init>= <expr><literal type="number">100</literal></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>configure</name><parameter_list>(<parameter><decl><type><name>MiniAccumuloConfigImpl</name></type> <name>cfg</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>fsConf</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>cfg</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>TABLE_SUSPEND_DURATION</name></name></expr></argument>, <argument><expr><name>SUSPEND_DURATION</name> <operator>+</operator> <literal type="string">"ms"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cfg</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>, <argument><expr><literal type="string">"5s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cfg</name><operator>.</operator><name>setNumTservers</name></name><argument_list>(<argument><expr><name>TSERVERS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>crashAndResumeTserver</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// Run the test body. When we get to the point where we need a tserver to go away, get rid of it via crashing</comment>
    <expr_stmt><expr><call><name>suspensionTestBody</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>TServerKiller</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>eliminateTabletServers</name><parameter_list>(<parameter><decl><type><name>ClientContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>TabletLocations</name></type> <name>locs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ProcessReference</name></argument>&gt;</argument_list></name></type> <name>procs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getProcesses</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ServerType</name><operator>.</operator><name>TABLET_SERVER</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>shuffle</name></name><argument_list>(<argument><expr><name>procs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name>ProcessReference</name></type> <name>pr</name> <init>= <expr><call><name><name>procs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Crashing {}"</literal></expr></argument>, <argument><expr><call><name><name>pr</name><operator>.</operator><name>getProcess</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>killProcess</name><argument_list>(<argument><expr><name><name>ServerType</name><operator>.</operator><name>TABLET_SERVER</name></name></expr></argument>, <argument><expr><name>pr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>shutdownAndResumeTserver</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// Run the test body. When we get to the point where we need tservers to go away, stop them via a clean shutdown.</comment>
    <expr_stmt><expr><call><name>suspensionTestBody</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>TServerKiller</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>eliminateTabletServers</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>ClientContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>TabletLocations</name></type> <name>locs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name></type> <name>tserversSet</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>TabletLocationState</name></type> <name>tls</name> <range>: <expr><call><name><name>locs</name><operator>.</operator><name>locationStates</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name><name>tls</name><operator>.</operator><name>current</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>tserversSet</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>current</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>TServerInstance</name></argument>&gt;</argument_list></name></type> <name>tserversList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>tserversSet</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>shuffle</name></name><argument_list>(<argument><expr><name>tserversList</name></expr></argument>, <argument><expr><name>RANDOM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
          <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>tserverName</name> <init>= <expr><call><name><name>tserversList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>MasterClient</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>ClientExec</name><argument_list type="generic">&lt;<argument><name><name>MasterClientService</name><operator>.</operator><name>Client</name></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>void</name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name><name>MasterClientService</name><operator>.</operator><name>Client</name></name></type> <name>client</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
              <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Sending shutdown command to {} via MasterClientService"</literal></expr></argument>, <argument><expr><name>tserverName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>shutdownTabletServer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>ctx</name><operator>.</operator><name>rpcCreds</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tserverName</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></function>
          }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>

        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Waiting for tserver process{} to die"</literal></expr></argument>, <argument><expr><ternary><condition><expr><name>count</name> <operator>==</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><literal type="string">""</literal></expr> </then><else>: <expr><literal type="string">"es"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ProcessReference</name></argument>&gt;</argument_list></name></type> <name>deadProcs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name>ProcessReference</name></type> <name>pr</name> <range>: <expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getProcesses</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ServerType</name><operator>.</operator><name>TABLET_SERVER</name></name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Process</name></type> <name>p</name> <init>= <expr><call><name><name>pr</name><operator>.</operator><name>getProcess</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>p</name><operator>.</operator><name>isAlive</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>deadProcs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>pr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
          <for>for <control>(<init><decl><type><name>ProcessReference</name></type> <name>pr</name> <range>: <expr><name>deadProcs</name></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Process {} is dead, informing cluster control about this"</literal></expr></argument>, <argument><expr><call><name><name>pr</name><operator>.</operator><name>getProcess</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterControl</name><argument_list>()</argument_list></call><operator>.</operator><call><name>killProcess</name><argument_list>(<argument><expr><name><name>ServerType</name><operator>.</operator><name>TABLET_SERVER</name></name></expr></argument>, <argument><expr><name>pr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><operator>--</operator><name>count</name></expr>;</expr_stmt>
          </block_content>}</block></for>
          <if_stmt><if>if <condition>(<expr><name>count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <return>return;</return>
          </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><call><name><name>MILLISECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>SECONDS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></else></if_stmt>
        </block_content>}</block></for>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Tablet servers didn't die!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Main test body for suspension tests.
   *
   * @param serverStopper
   *          callback which shuts down some tablet servers.
   */</comment>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>suspensionTestBody</name><parameter_list>(<parameter><decl><type><name>TServerKiller</name></type> <name>serverStopper</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Credentials</name></type> <name>creds</name> <init>= <expr><operator>new</operator> <call><name>Credentials</name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>ROOT_PASSWORD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Instance</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClientConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ClientContext</name></type> <name>ctx</name> <init>= <expr><operator>new</operator> <call><name>ClientContext</name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>creds</name></expr></argument>, <argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClientConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>tableName</name> <init>= <expr><call><name>getUniqueNames</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>Connector</name></type> <name>conn</name> <init>= <expr><call><name><name>ctx</name><operator>.</operator><name>getConnector</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// Create a table with a bunch of splits</comment>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Creating table "</literal> <operator>+</operator> <name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>SortedSet</name><argument_list type="generic">&lt;<argument><name>Text</name></argument>&gt;</argument_list></name></type> <name>splitPoints</name> <init>= <expr><operator>new</operator> <call><name><name>TreeSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>TABLETS</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>splitPoints</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">""</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addSplits</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>splitPoints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Wait for all of the tablets to hosted ...</comment>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Waiting on hosting and balance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>TabletLocations</name></type> <name>ds</name></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name><name>ds</name><operator>.</operator><name>hostedCount</name></name> <operator>!=</operator> <name>TABLETS</name></expr>;</condition> <incr><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <comment type="line">// ... and balanced.</comment>
    <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>instanceOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>waitForBalance</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <do>do <block>{<block_content>
      <comment type="line">// Give at least another 5 seconds for migrations to finish up</comment>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> while <condition>(<expr><name><name>ds</name><operator>.</operator><name>hostedCount</name></name> <operator>!=</operator> <name>TABLETS</name></expr>)</condition>;</do>

    <comment type="line">// Pray all of our tservers have at least 1 tablet.</comment>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>TSERVERS</name></expr></argument>, <argument><expr><call><name><name>ds</name><operator>.</operator><name>hosted</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Kill two tablet servers hosting our tablets. This should put tablets into suspended state, and thus halt balancing.</comment>

    <decl_stmt><decl><type><name>TabletLocations</name></type> <name>beforeDeathState</name> <init>= <expr><name>ds</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Eliminating tablet servers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>serverStopper</name><operator>.</operator><name>eliminateTabletServers</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>beforeDeathState</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Eventually some tablets will be suspended.</comment>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Waiting on suspended tablets"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Until we can scan the metadata table, the master probably can't either, so won't have been able to suspend the tablets.</comment>
    <comment type="line">// So we note the time that we were first able to successfully scan the metadata table.</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>killTime</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><call><name><name>ds</name><operator>.</operator><name>suspended</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

    <decl_stmt><decl><type><name><name>SetMultimap</name><argument_list type="generic">&lt;<argument><name>HostAndPort</name></argument>,<argument><name>KeyExtent</name></argument>&gt;</argument_list></name></type> <name>deadTabletsByServer</name> <init>= <expr><name><name>ds</name><operator>.</operator><name>suspended</name></name></expr></init></decl>;</decl_stmt>

    <comment type="line">// By this point, all tablets should be either hosted or suspended. All suspended tablets should</comment>
    <comment type="line">// "belong" to the dead tablet servers, and should be in exactly the same place as before any tserver death.</comment>
    <for>for <control>(<init><decl><type><name>HostAndPort</name></type> <name>server</name> <range>: <expr><call><name><name>deadTabletsByServer</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>deadTabletsByServer</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>server</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>beforeDeathState</name><operator>.</operator><name>hosted</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>server</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>TABLETS</name></expr></argument>, <argument><expr><name><name>ds</name><operator>.</operator><name>hostedCount</name></name> <operator>+</operator> <name><name>ds</name><operator>.</operator><name>suspendedCount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Restart the first tablet server, making sure it ends up on the same port</comment>
    <decl_stmt><decl><type><name>HostAndPort</name></type> <name>restartedServer</name> <init>= <expr><call><name><name>deadTabletsByServer</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Restarting "</literal> <operator>+</operator> <name>restartedServer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterControl</name><argument_list>()</argument_list></call><operator>.</operator><call><name>start</name><argument_list>(<argument><expr><name><name>ServerType</name><operator>.</operator><name>TABLET_SERVER</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>,
        <argument><expr><call><name><name>ImmutableMap</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>TSERV_CLIENTPORT</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal> <operator>+</operator> <call><name><name>restartedServer</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Property</name><operator>.</operator><name>TSERV_PORTSEARCH</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Eventually, the suspended tablets should be reassigned to the newly alive tserver.</comment>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Awaiting tablet unsuspension for tablets belonging to "</literal> <operator>+</operator> <name>restartedServer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><call><name><name>ds</name><operator>.</operator><name>suspended</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>restartedServer</name></expr></argument>)</argument_list></call> <operator>||</operator> <name><name>ds</name><operator>.</operator><name>assignedCount</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>,
        <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>deadTabletsByServer</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>restartedServer</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>ds</name><operator>.</operator><name>hosted</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>restartedServer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Finally, after much longer, remaining suspended tablets should be reassigned.</comment>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Awaiting tablet reassignment for remaining tablets"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name><name>ds</name><operator>.</operator><name>hostedCount</name></name> <operator>!=</operator> <name>TABLETS</name></expr>;</condition> <incr><expr><name>ds</name> <operator>=</operator> <call><name><name>TabletLocations</name><operator>.</operator><name>retrieve</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <decl_stmt><decl><type><name>long</name></type> <name>recoverTime</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><name>recoverTime</name> <operator>-</operator> <name>killTime</name> <operator>&gt;=</operator> <call><name><name>NANOSECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><name>SUSPEND_DURATION</name></expr></argument>, <argument><expr><name>MILLISECONDS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <interface><specifier>private</specifier> <specifier>static</specifier> interface <name>TServerKiller</name> <block>{
    <decl_stmt><decl><type><specifier>public</specifier> <name>void</name></type> <name>eliminateTabletServers</name><argument_list>(<argument><expr><name>ClientContext</name> <name>ctx</name></expr></argument>, <argument><expr><name>TabletLocations</name> <name>locs</name></expr></argument>, <argument><expr><name>int</name> <name>count</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws></decl>;</decl_stmt>
  }</block></interface>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>AtomicInteger</name></type> <name>threadCounter</name> <init>= <expr><operator>new</operator> <call><name>AtomicInteger</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>BeforeClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>init</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>THREAD_POOL</name> <operator>=</operator> <call><name><name>Executors</name><operator>.</operator><name>newCachedThreadPool</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ThreadFactory</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>Thread</name></type> <name>newThread</name><parameter_list>(<parameter><decl><type><name>Runnable</name></type> <name>r</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>Thread</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"Scanning deadline thread #"</literal> <operator>+</operator> <call><name><name>threadCounter</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>AfterClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>cleanup</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>THREAD_POOL</name><operator>.</operator><name>shutdownNow</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <class><specifier>private</specifier> <specifier>static</specifier> class <name>TabletLocations</name> <block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>KeyExtent</name></argument>,<argument><name>TabletLocationState</name></argument>&gt;</argument_list></name></type> <name>locationStates</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name><name>SetMultimap</name><argument_list type="generic">&lt;<argument><name>HostAndPort</name></argument>,<argument><name>KeyExtent</name></argument>&gt;</argument_list></name></type> <name>hosted</name> <init>= <expr><call><name><name>HashMultimap</name><operator>.</operator><name>create</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name><name>SetMultimap</name><argument_list type="generic">&lt;<argument><name>HostAndPort</name></argument>,<argument><name>KeyExtent</name></argument>&gt;</argument_list></name></type> <name>suspended</name> <init>= <expr><call><name><name>HashMultimap</name><operator>.</operator><name>create</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>hostedCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>assignedCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>suspendedCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>unassignedCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>TabletLocations</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></constructor>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>TabletLocations</name></type> <name>retrieve</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>ClientContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>tableName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name>int</name></type> <name>sleepTime</name> <init>= <expr><literal type="number">200</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>remainingAttempts</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>;</decl_stmt>

      <while>while <condition>(<expr><literal type="boolean">true</literal></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <decl_stmt><decl><type><name><name>FutureTask</name><argument_list type="generic">&lt;<argument><name>TabletLocations</name></argument>&gt;</argument_list></name></type> <name>tlsFuture</name> <init>= <expr><operator>new</operator> <call><name><name>FutureTask</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Callable</name><argument_list type="generic">&lt;<argument><name>TabletLocations</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>TabletLocations</name></type> <name>call</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
              <decl_stmt><decl><type><name>TabletLocations</name></type> <name>answer</name> <init>= <expr><operator>new</operator> <call><name>TabletLocations</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
              <expr_stmt><expr><call><name><name>answer</name><operator>.</operator><name>scan</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <return>return <expr><name>answer</name></expr>;</return>
            </block_content>}</block></function>
          }</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>THREAD_POOL</name><operator>.</operator><name>submit</name></name><argument_list>(<argument><expr><name>tlsFuture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <return>return <expr><call><name><name>tlsFuture</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>SECONDS</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>TimeoutException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Retrieval timed out"</literal></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Failed to scan metadata"</literal></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><name>sleepTime</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><literal type="number">2</literal> <operator>*</operator> <name>sleepTime</name></expr></argument>, <argument><expr><literal type="number">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><name>sleepTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>--</operator><name>remainingAttempts</name></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>remainingAttempts</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>fail</name></name><argument_list>(<argument><expr><literal type="string">"Scanning of metadata failed, aborting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></while>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>scan</name><parameter_list>(<parameter><decl><type><name>ClientContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>idMap</name> <init>= <expr><call><name><name>ctx</name><operator>.</operator><name>getConnector</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableIdMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>tableId</name> <init>= <expr><call><name><name>Objects</name><operator>.</operator><name>requireNonNull</name></name><argument_list>(<argument><expr><call><name><name>idMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <try>try <init>(<decl><type><name>MetaDataTableScanner</name></type> <name>scanner</name> <init>= <expr><operator>new</operator> <call><name>MetaDataTableScanner</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Range</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <while>while <condition>(<expr><call><name><name>scanner</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>TabletLocationState</name></type> <name>tls</name> <init>= <expr><call><name><name>scanner</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>tls</name><operator>.</operator><name>extent</name><operator>.</operator><name>getTableId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <continue>continue;</continue>
          </block_content>}</block></if></if_stmt>
          <expr_stmt><expr><call><name><name>locationStates</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>, <argument><expr><name>tls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <if_stmt><if>if <condition>(<expr><name><name>tls</name><operator>.</operator><name>suspend</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>suspended</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>tls</name><operator>.</operator><name>suspend</name><operator>.</operator><name>server</name></name></expr></argument>, <argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><operator>++</operator><name>suspendedCount</name></expr>;</expr_stmt>
          </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>tls</name><operator>.</operator><name>current</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>hosted</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>tls</name><operator>.</operator><name>current</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>tls</name><operator>.</operator><name>extent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><operator>++</operator><name>hostedCount</name></expr>;</expr_stmt>
          </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>tls</name><operator>.</operator><name>future</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><operator>++</operator><name>assignedCount</name></expr>;</expr_stmt>
          </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><name>unassignedCount</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
          </block_content>}</block></else></if_stmt>
        </block_content>}</block></while>
      </block_content>}</block></try>
    </block_content>}</block></function>
  }</block></class>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">63a77712b</literal><operator>..</operator><literal type="number">05a0c54c0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>beust</name><operator>.</operator><name>jcommander</name><operator>.</operator><name>Parameter</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>net</name><operator>.</operator><name>HostAndPort</name></name>;</import>
 
 <import>import static <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Uninterruptibles</name><operator>.</operator><name>sleepUninterruptibly</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>tabletserver</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TUnloadTabletGoal</name></name>;</import></block_content></block></catch></block_content></block></catch></try></block_content></block></constructor></block_content></block></constructor></block_content></block></constructor></block></class></block_content></block></else></if_stmt></block_content></block></switch></block_content></block></else></if_stmt></block></class>
 
 <comment type="block" format="javadoc">/**
  * The purpose of this class is to server as fake tserver that is a data sink like /dev/null. NullTserver modifies the metadata location entries for a table to
@@ -179,7 +180,7 @@ public class NullTserver {
     public void loadTablet(TInfo tinfo, TCredentials credentials, String lock, TKeyExtent extent) throws TException {}
 
     @Override
    public void unloadTablet(TInfo tinfo, TCredentials credentials, String lock, TKeyExtent extent, boolean save) throws TException {}
    public void unloadTablet(TInfo tinfo, TCredentials credentials, String lock, TKeyExtent extent, TUnloadTabletGoal goal, long requestTime) throws TException {}
 
     @Override
     public List&lt;ActiveScan&gt; getActiveScans(TInfo tinfo, TCredentials credentials) throws ThriftSecurityException, TException {
- 
2.19.1.windows.1

</comment></unit>
