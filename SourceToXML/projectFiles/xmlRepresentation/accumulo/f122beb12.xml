<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/f122beb12.java"><expr_stmt><expr><name>From</name> <name>f122beb129913a98f3bd32882ef34c8104c35f96</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Josh</name> <name><name>Elser</name> <argument_list type="generic">&lt;<argument><name>elserj</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">28</literal> <name>May</name> <literal type="number">2015</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">28</literal><operator>:</operator><literal type="number">13</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">3859</literal> <name>Ensure</name> <name>multiple</name> <name>TableConfiguration</name> <name>instances</name>
 <name>are</name> <name>not</name> <name><name>created</name><operator>.</operator>

<name>If</name></name> <name>an</name> <name>instance</name> <name>of</name> <name>a</name> <name>TableConfiguration</name> <name>is</name> <name>cached</name> <name>which</name> <name>isn</name><literal type="char">'t the same
instance held by a Tablet, this will result in the Tablet never
receiving updates for constraints and more.
--
 .../conf/ServerConfigurationFactory.java      | 31 ++++++++++++-------
 1 file changed, 20 insertions(+), 11 deletions(-)

diff --git a/server/base/src/main/java/org/apache/accumulo/server/conf/ServerConfigurationFactory.java b/server/base/src/main/java/org/apache/accumulo/server/conf/ServerConfigurationFactory.java
index 96ff5d693..7981f3b5d 100644
-- a/server/base/src/main/java/org/apache/accumulo/server/conf/ServerConfigurationFactory.java
++ b/server/base/src/main/java/org/apache/accumulo/server/conf/ServerConfigurationFactory.java
@@ -34,14 +34,9 @@ import org.apache.accumulo.fate.zookeeper.ZooCacheFactory;
  */
 public class ServerConfigurationFactory {
 
  private static final Map&lt;String,Map&lt;String,TableConfiguration&gt;&gt; tableConfigs;
  private static final Map&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt; namespaceConfigs;
  private static final Map&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt; tableParentConfigs;
  static {
    tableConfigs = new HashMap&lt;String,Map&lt;String,TableConfiguration&gt;&gt;(1);
    namespaceConfigs = new HashMap&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt;(1);
    tableParentConfigs = new HashMap&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt;(1);
  }
  private static final Map&lt;String,Map&lt;String,TableConfiguration&gt;&gt; tableConfigs = new HashMap&lt;String,Map&lt;String,TableConfiguration&gt;&gt;(1);
  private static final Map&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt; namespaceConfigs = new HashMap&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt;(1);
  private static final Map&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt; tableParentConfigs = new HashMap&lt;String,Map&lt;String,NamespaceConfiguration&gt;&gt;(1);
 
   private static void addInstanceToCaches(String iid) {
     synchronized (tableConfigs) {
@@ -152,13 +147,27 @@ public class ServerConfigurationFactory {
     synchronized (tableConfigs) {
       conf = tableConfigs.get(instanceID).get(tableId);
     }
    // can'</literal><name>t</name> <name>hold</name> <name>the</name> <name>lock</name> <name>during</name> <name>the</name> <name>construction</name> <name>and</name> <name>validation</name> <name>of</name> <name>the</name> <name>config</name></expr><operator>,</operator></expr_stmt>
    <comment type="line">// which may result in creating multiple objects for the same id, but that's ok.</comment>

    <comment type="line">// Can't hold the lock during the construction and validation of the config,</comment>
    <comment type="line">// which would result in creating multiple objects for the same id.</comment>
    <comment type="line">//</comment>
    <comment type="line">// ACCUMULO-3859 We _cannot_ all multiple instances to be created for a table. If the TableConfiguration</comment>
    <comment type="line">// instance a Tablet holds is not the same as the one cached here, any ConfigurationObservers that</comment>
    <comment type="line">// Tablet sets will never see updates from ZooKeeper which means that things like constraints and</comment>
    <comment type="line">// default visibility labels will never be updated in a Tablet until it is reloaded.</comment>
     <if_stmt><if>if <condition>(<expr><name>conf</name> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>Tables</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>TableConfiguration</name><argument_list>(<argument><expr><call><name><name>instance</name><operator>.</operator><name>getInstanceID</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tableId</name></expr></argument>, <argument><expr><call><name>getNamespaceConfigurationForTable</name><argument_list>(<argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>ConfigSanityCheck</name><operator>.</operator><name>validate</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <synchronized>synchronized <init>(<expr><name>tableConfigs</name></expr>)</init> <block>{<block_content>
        <expr_stmt><expr><call><name><name>tableConfigs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>instanceID</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>put</name><argument_list>(<argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>TableConfiguration</name></argument>&gt;</argument_list></name></type> <name>configs</name> <init>= <expr><call><name><name>tableConfigs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>instanceID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>TableConfiguration</name></type> <name>existingConf</name> <init>= <expr><call><name><name>configs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>tableId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>existingConf</name></expr>)</condition> <block>{<block_content>
          <comment type="line">// Configuration doesn't exist yet</comment>
          <expr_stmt><expr><call><name><name>configs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>tableId</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <comment type="line">// Someone beat us to the punch, reuse their instance instead of replacing it</comment>
          <expr_stmt><expr><name>conf</name> <operator>=</operator> <name>existingConf</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
       </block_content>}</block></synchronized>
     </block_content>}</block></if></if_stmt>
     <return>return <expr><name>conf</name></expr>;</return>
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
