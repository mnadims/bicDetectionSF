<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/7038755be.java"><expr_stmt><expr><name>From</name> <literal type="number">7038755be153e11ca5ea7278d96746d72b24ea05</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Michael</name> <name><name>Berman</name> <argument_list type="generic">&lt;<argument><name>mberman</name><annotation>@<name><name>sqrrl</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">19</literal> <name>Nov</name> <literal type="number">2013</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">22</literal><operator>:</operator><literal type="number">10</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">1009</literal>

<name>Signed</name><operator>-</operator><name>off</name><operator>-</operator><name>by</name><operator>:</operator> <name>Eric</name> <name><name>Newton</name> <argument_list type="generic">&lt;<argument><name><name>eric</name><operator>.</operator><name>newton</name></name><annotation>@<name><name>gmail</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">52</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>Instance</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>ZooKeeperInstance</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">72</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ConditionalWriterImpl</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>MasterClient</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ServerClient</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>impl</name><operator>/</operator><name><name>TabletServerBatchReaderIterator</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>TabletServerBatchWriter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ThriftTransportKey</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>ThriftTransportPool</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AbstractInputFormat</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AccumuloInputFormat</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AccumuloMultiTableInputFormat</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AccumuloOutputFormat</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AccumuloRowInputFormat</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AbstractInputFormat</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AccumuloInputFormat</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AccumuloOutputFormat</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">24</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AccumuloRowInputFormat</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBase</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">49</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mock</name><operator>/</operator><name><name>MockInstance</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>AccumuloConfiguration</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfiguration</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">310</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>PropertyType</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityUtil</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SslConnectionParams</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">205</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ThriftUtil</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">129</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">27</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>TabletLocatorImplTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">45</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfigurationTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">65</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">56</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>simple</name><operator>/</operator><name>filedata</name><operator>/</operator><name><name>FileDataQuery</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>simple</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TokenFileWordCount</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloCluster</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">48</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloConfig</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">29</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloInstance</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>MiniAccumuloClusterGCTest</name><operator>.</operator><name>java</name></name>            <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name><name>ProxyServer</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnDefaultTable</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnRequiredTable</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>BulkImporter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>HdfsZooInstance</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">158</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>utils</name><operator>/</operator><name>metanalysis</name><operator>/</operator><name><name>IndexMeta</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <name>test</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>                                  <operator>|</operator>  <literal type="number">27</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>IMMLGBenchmark</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>TestIngest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">3</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>metadata</name><operator>/</operator><name><name>MetadataBatchScanTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name><name>State</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>multitable</name><operator>/</operator><name><name>CopyTool</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>sequential</name><operator>/</operator><name><name>MapRedVerifyTool</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>scalability</name><operator>/</operator><name><name>ScaleTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name><name>MultiTableBatchWriterTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">24</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerIT</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">71</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AbstractMacIT</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">37</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>functional</name><operator>/</operator><name><name>AccumuloInputFormatIT</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>BulkIT</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConcurrencyIT</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">24</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConfigurableMacIT</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>MapReduceIT</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ScannerIT</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">32</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ShutdownIT</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SimpleMacIT</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslIT</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">62</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslWithClientAuthIT</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">71</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtils</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">324</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtilsTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">158</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">75</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">2095</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">365</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfiguration</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SslConnectionParams</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfigurationTest</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslIT</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslWithClientAuthIT</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtils</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtilsTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9db0c405c</literal><operator>..</operator><literal type="number">644775ae3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name><name>Constants</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>Constants</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>EXPORT_FILE</name> <operator>=</operator> <literal type="string">"exportMetadata.zip"</literal></expr>;
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>EXPORT_INFO_FILE</name> <operator>=</operator> <literal type="string">"accumulo_export_info.txt"</literal></expr>;
   
  <comment type="line">// Variables that will be substituted with environment vars in PropertyType.PATH values</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name><name>String</name><index>[]</index></name> <name>PATH_PROPERTY_ENV_VARS</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="string">"$ACCUMULO_HOME"</literal></expr>, <expr><literal type="string">"$ACCUMULO_CONF_DIR"</literal></expr>}</block></expr>;
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3013cec4e</literal><operator>..</operator><literal type="number">1d26a00a9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>DefaultConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Authorizations</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClientOpts</name> extends <name>Help</name> <block>{
   @<expr><call><name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--site-file"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Read the given accumulo site file to find the accumulo instance"</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>String</name> <name>siteFile</name> <operator>=</operator> <literal type="null">null</literal></expr>;
   
  @<expr><call><name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--ssl"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Connect to accumulo over SSL"</literal></expr></argument>)</argument_list></call>
  <specifier>public</specifier> <name>boolean</name> <name>sslEnabled</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;

  @<expr><call><name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--config-file"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Read the given client config file.  If omitted, the path searched can be specified with $ACCUMULO_CLIENT_CONF_PATH, which defaults to ~/.accumulo/config:$ACCUMULO_CONF_DIR/client.conf:/etc/accumulo/client.conf"</literal></expr></argument>)</argument_list></call>
  <specifier>public</specifier> <name>String</name> <name>clientConfigFile</name> <operator>=</operator> <literal type="null">null</literal></expr>;

   <expr><specifier>public</specifier> <name>void</name> <call><name>startDebugLogging</name><argument_list>()</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>debug</name></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>CORE_PACKAGE_NAME</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setLevel</name><argument_list>(<argument><expr><name><name>Level</name><operator>.</operator><name>TRACE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
@@ <operator>-</operator><literal type="number">186</literal><operator>,</operator><literal type="number">12</literal> <operator>+</operator><literal type="number">194</literal><operator>,</operator><literal type="number">39</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClientOpts</name> extends <name>Help</name> <block>{
   }</block></block>
   
   <specifier>protected</specifier> <name>Instance</name> <name>cachedInstance</name> <operator>=</operator> <literal type="null">null</literal></expr>;
  <expr><specifier>protected</specifier> <name>ClientConfiguration</name> <name>cachedClientConfig</name> <operator>=</operator> <literal type="null">null</literal></expr>;
   
   <expr><specifier>synchronized</specifier> <specifier>public</specifier> <name>Instance</name> <call><name>getInstance</name><argument_list>()</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>cachedInstance</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
       <return>return <expr><name>cachedInstance</name></expr>;</return></block_content></block></if></if_stmt></block></expr>
     <if_stmt><if>if <condition>(<expr><name>mock</name></expr>)</condition><block type="pseudo"><block_content>
       <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>MockInstance</name><argument_list>(<argument><expr><name>instance</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt></block></expr></expr_stmt>
    <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }

  public <function><type><name>Connector</name></type> <name>getConnector</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>principal</name></name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>this</name><operator>.</operator><name>getToken</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AccumuloSecurityException</name><argument_list>(<argument><expr><literal type="string">"You must provide a user (-u) and password (-p)"</literal></expr></argument>, <argument><expr><name><name>SecurityErrorCode</name><operator>.</operator><name>BAD_CREDENTIALS</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    <return>return <expr><call><name>getInstance</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><name>principal</name></expr></argument>, <argument><expr><call><name>getToken</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setAccumuloConfigs</name><parameter_list>(<parameter><decl><type><name>Job</name></type> <name>job</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>protected</specifier> <name>ClientConfiguration</name></type> <name>getClientConfiguration</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IllegalArgumentException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>cachedClientConfig</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><name>cachedClientConfig</name></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>clientConfig</name> <operator>=</operator> <call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>(<argument><expr><name>clientConfigFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
    <if_stmt><if>if <condition>(<expr><name>sslEnabled</name></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name><name>clientConfig</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><name>siteFile</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>config</name> <init>= <expr><operator>new</operator> <class><super><name>AccumuloConfiguration</name></super><argument_list>()</argument_list> <block>{
         <decl_stmt><decl><type><name>Configuration</name></type> <name>xml</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">255</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClientOpts</name> extends <name>Help</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>zookeepers</name></name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr>;
       <name>Path</name> <name>instanceDir</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_DFS_DIR</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"instance_id"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>instanceIDFromFile</name> <init>= <expr><call><name><name>ZooUtil</name><operator>.</operator><name>getInstanceIDFromHdfs</name></name><argument_list>(<argument><expr><name>instanceDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>UUID</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><name>instanceIDFromFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;</return>
      <if_stmt><if>if <condition>(<expr><call><name><name>config</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>clientConfig</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <return>return <expr><name>cachedClientConfig</name> <operator>=</operator> <call><name><name>clientConfig</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><call><name><name>UUID</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><name>instanceIDFromFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;</return>
     }</block></class></expr></init></decl></decl_stmt>
    <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>instance</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>zookeepers</name></name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></if></if_stmt>
  
  <function><type><specifier>public</specifier> <name>Connector</name></type> <name>getConnector</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>principal</name></name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>this</name><operator>.</operator><name>getToken</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AccumuloSecurityException</name><argument_list>(<argument><expr><literal type="string">"You must provide a user (-u) and password (-p)"</literal></expr></argument>, <argument><expr><name><name>SecurityErrorCode</name><operator>.</operator><name>BAD_CREDENTIALS</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    <return>return <expr><call><name>getInstance</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><name>principal</name></expr></argument>, <argument><expr><call><name>getToken</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
  
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setAccumuloConfigs</name><parameter_list>(<parameter><decl><type><name>Job</name></type> <name>job</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>instance</name></expr></argument>, <argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>instance</name></expr></argument>, <argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>cachedClientConfig</name> <operator>=</operator> <call><name><name>clientConfig</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><name>instance</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>Instance</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>Instance</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">27d502f4a</literal><operator>..</operator><name>f8a7682b0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>Instance</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name><name>Instance</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> interface <name>Instance</name> <block>{
    <expr><operator>*</operator> 
    <operator>*</operator> @<name>param</name> <name>conf</name>
    <operator>*</operator>          <name>accumulo</name> <name>configuration</name>
   <operator>*</operator> @<name>deprecated</name> <name>since</name> <literal type="number">1.6.0</literal>
    <operator>*</operator><operator>/</operator>
  @<name>Deprecated</name>
   <specifier>public</specifier> <specifier>abstract</specifier> <name>void</name> <call><name>setConfiguration</name><argument_list>(<argument><expr><name>AccumuloConfiguration</name> <name>conf</name></expr></argument>)</argument_list></call></expr>;
   
   <comment type="block" format="javadoc">/**
diff --git a/core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java b/core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java
index 07cc0a3e2..fb4ab79a6 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java
++ b/core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java
@@ -27,7 +27,8 @@ import org.apache.accumulo.core.client.impl.ConnectorImpl;
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
 import org.apache.accumulo.core.client.security.tokens.PasswordToken;
 import org.apache.accumulo.core.conf.AccumuloConfiguration;
import org.apache.accumulo.core.conf.Property;
import org.apache.accumulo.core.conf.ClientConfiguration;
import org.apache.accumulo.core.conf.ClientConfiguration.ClientProperty;
 import org.apache.accumulo.core.metadata.RootTable;
 import org.apache.accumulo.core.security.Credentials;
 import org.apache.accumulo.core.util.ArgumentChecker;
@@ -37,6 +38,7 @@ import org.apache.accumulo.core.util.TextUtil;
 import org.apache.accumulo.core.util.ThriftUtil;
 import org.apache.accumulo.core.zookeeper.ZooUtil;
 import org.apache.accumulo.fate.zookeeper.ZooCache;
import org.apache.commons.configuration.Configuration;
 import org.apache.hadoop.io.Text;
 import org.apache.log4j.Level;
 import org.apache.log4j.Logger;
@@ -68,6 +70,9 @@ public class ZooKeeperInstance implements Instance {
 
   private final int zooKeepersSessionTimeOut;
 
  private AccumuloConfiguration accumuloConf;
  private ClientConfiguration clientConf;

   private volatile boolean closed = false;
 
   /**
@@ -76,10 +81,11 @@ public class ZooKeeperInstance implements Instance {
    *          The name of specific accumulo instance. This is set at initialization time.
    * @param zooKeepers
    *          A comma separated list of zoo keeper server locations. Each location can contain an optional port, of the format host:port.
   * @deprecated since 1.6.0; Use {@link #ZooKeeperInstance(ClientConfiguration)} instead.
    */</comment>

  @<expr><name>Deprecated</name>
   <specifier>public</specifier> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getDefaultConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTimeInMillis</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>this</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <comment type="block" format="javadoc">/**
@@ -90,16 +96,11 @@ public class ZooKeeperInstance implements Instance {
    *          A comma separated list of zoo keeper server locations. Each location can contain an optional port, of the format host:port.
    * @param sessionTimeout
    *          zoo keeper session time out in milliseconds.
   * @deprecated since 1.6.0; Use {@link #ZooKeeperInstance(ClientConfiguration)} instead.
    */</comment>

  @<name>Deprecated</name>
   <specifier>public</specifier> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>, <argument><expr><name>int</name> <name>sessionTimeout</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>this</name><operator>.</operator><name>instanceName</name></name> <operator>=</operator> <name>instanceName</name></expr>;
    <expr><name><name>this</name><operator>.</operator><name>zooKeepers</name></name> <operator>=</operator> <name>zooKeepers</name></expr>;
    <expr><name><name>this</name><operator>.</operator><name>zooKeepersSessionTimeOut</name></name> <operator>=</operator> <name>sessionTimeout</name></expr>;
    <expr><name>zooCache</name> <operator>=</operator> <call><name><name>ZooCache</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>, <argument><expr><name>sessionTimeout</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>getInstanceID</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>clientInstances</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>this</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkTimeout</name><argument_list>(<argument><expr><name>sessionTimeout</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <comment type="block" format="javadoc">/**
@@ -108,10 +109,11 @@ public class ZooKeeperInstance implements Instance {
    *          The UUID that identifies the accumulo instance you want to connect to.
    * @param zooKeepers
    *          A comma separated list of zoo keeper server locations. Each location can contain an optional port, of the format host:port.
   * @deprecated since 1.6.0; Use {@link #ZooKeeperInstance(ClientConfiguration)} instead.
    */</comment>

  @<name>Deprecated</name>
   <specifier>public</specifier> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>UUID</name> <name>instanceId</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getDefaultConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTimeInMillis</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>this</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <comment type="block" format="javadoc">/**
@@ -122,14 +124,34 @@ public class ZooKeeperInstance implements Instance {
    *          A comma separated list of zoo keeper server locations. Each location can contain an optional port, of the format host:port.
    * @param sessionTimeout
    *          zoo keeper session time out in milliseconds.
   * @deprecated since 1.6.0; Use {@link #ZooKeeperInstance(ClientConfiguration)} instead.
    */</comment>

  @<name>Deprecated</name>
   <specifier>public</specifier> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>UUID</name> <name>instanceId</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>, <argument><expr><name>int</name> <name>sessionTimeout</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>this</name><operator>.</operator><name>instanceId</name></name> <operator>=</operator> <call><name><name>instanceId</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>this</name><operator>.</operator><name>zooKeepers</name></name> <operator>=</operator> <name>zooKeepers</name></expr>;
    <expr><name><name>this</name><operator>.</operator><name>zooKeepersSessionTimeOut</name></name> <operator>=</operator> <name>sessionTimeout</name></expr>;
    <expr><name>zooCache</name> <operator>=</operator> <call><name><name>ZooCache</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>, <argument><expr><name>sessionTimeout</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>this</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkTimeout</name><argument_list>(<argument><expr><name>sessionTimeout</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block>

  <comment type="block" format="javadoc">/**
   * @param config
   *          Client configuration for specifying connection options.
   *          See {@link ClientConfiguration} which extends Configuration with convenience methods specific to Accumulo.
   * @since 1.6.0
   */</comment>

  <specifier>public</specifier> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>Configuration</name> <name>config</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;
    <if_stmt><if>if <condition>(<expr><name>config</name> <operator>instanceof</operator> <name>ClientConfiguration</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>clientConf</name></name> <operator>=</operator> <operator>(</operator><name>ClientConfiguration</name><operator>)</operator><name>config</name></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>clientConf</name></name> <operator>=</operator> <operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></else></if_stmt>}</block>
    <name><name>this</name><operator>.</operator><name>instanceId</name></name> <operator>=</operator> <call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>instanceName</name></name> <operator>=</operator> <call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>(</operator><name>instanceId</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator> <operator>==</operator> <operator>(</operator><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Expected exactly one of instanceName and instanceId to be set"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>zooKeepers</name></name> <operator>=</operator> <call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>zooKeepersSessionTimeOut</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator> <call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>zooCache</name> <operator>=</operator> <call><name><name>ZooCache</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>, <argument><expr><name>zooKeepersSessionTimeOut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>clientInstances</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   }
 
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">241</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">263</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZooKeeperInstance</name> implements <name>Instance</name> <block>{
     }</block></expr></expr_stmt>
   }
 
  private <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>AccumuloConfiguration</name></type> <name>getConfiguration</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>conf</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><name>conf</name> <operator>=</operator> <call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getDefaultConfiguration</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return>return <expr><name>conf</name></expr>;</return>
    <if_stmt><if>if <condition>(<expr><name>accumuloConf</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>accumuloConf</name> <operator>=</operator> <call><name><name>clientConf</name><operator>.</operator><name>getAccumuloConfiguration</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>accumuloConf</name></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Deprecated</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setConfiguration</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>conf</name></name> <operator>=</operator> <name>conf</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>accumuloConf</name></name> <operator>=</operator> <name>conf</name></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/ConditionalWriterImpl.java b/core/src/main/java/org/apache/accumulo/core/client/impl/ConditionalWriterImpl.java
index 6b2a1cfcb..bfbac86de 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/ConditionalWriterImpl.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/ConditionalWriterImpl.java
@@ -534,7 +534,7 @@ class ConditionalWriterImpl implements ConditionalWriter {
   private TabletClientService.Iface getClient(String location) throws TTransportException {
     TabletClientService.Iface client;
     if (timeout &lt; instance.getConfiguration().getTimeInMillis(Property.GENERAL_RPC_TIMEOUT))
      client = ThriftUtil.getTServerClient(location, timeout);
      client = ThriftUtil.getTServerClient(location, instance.getConfiguration(), timeout);
     else
       client = ThriftUtil.getTServerClient(location, instance.getConfiguration());
     return client;
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/MasterClient.java b/core/src/main/java/org/apache/accumulo/core/client/impl/MasterClient.java
index 32c80f9af..dd28fcac8 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/MasterClient.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/MasterClient.java
@@ -61,7 +61,7 @@ public class MasterClient {
     
     try {
       // Master requests can take a long time: don't ever time out
      MasterClientService.Client client = ThriftUtil.getClientNoTimeout(new MasterClientService.Client.Factory(), master);
      MasterClientService.Client client = ThriftUtil.getClientNoTimeout(new MasterClientService.Client.Factory(), master, instance.getConfiguration());
       return client;
     } catch (TTransportException tte) {
       if (tte.getCause().getClass().equals(UnknownHostException.class)) {
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java b/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java
index 218bd365f..90db5ee6b 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java
@@ -32,6 +32,7 @@ import org.apache.accumulo.core.conf.Property;
 import org.apache.accumulo.core.util.ArgumentChecker;
 import org.apache.accumulo.core.util.Pair;
 import org.apache.accumulo.core.util.ServerServices;
import org.apache.accumulo.core.util.SslConnectionParams;
 import org.apache.accumulo.core.util.ServerServices.Service;
 import org.apache.accumulo.core.util.ThriftUtil;
 import org.apache.accumulo.core.util.UtilWaitThread;
@@ -141,7 +142,7 @@ public class ServerClient {
       if (data != null &amp;&amp; !new String(data).equals("master"))
         servers.add(new ThriftTransportKey(
           new ServerServices(new String(data)).getAddressString(Service.TSERV_CLIENT),
          rpcTimeout));
          rpcTimeout, SslConnectionParams.forClient(instance.getConfiguration())));
     }
     
     boolean opened = false;
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java b/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java
index 03763049e..77182073c 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java
@@ -633,7 +633,7 @@ public class TabletServerBatchReaderIterator implements Iterator&lt;Entry&lt;Key,Value
     try {
       TabletClientService.Client client;
       if (timeoutTracker.getTimeOut() &lt; conf.getTimeInMillis(Property.GENERAL_RPC_TIMEOUT))
        client = ThriftUtil.getTServerClient(server, timeoutTracker.getTimeOut());
        client = ThriftUtil.getTServerClient(server, conf, timeoutTracker.getTimeOut());
       else
         client = ThriftUtil.getTServerClient(server, conf);
       
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java b/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java
index 0dd86bf5a..e2c2802d5 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java
@@ -856,7 +856,7 @@ public class TabletServerBatchWriter {
         TabletClientService.Iface client;
         
         if (timeoutTracker.getTimeOut() &lt; instance.getConfiguration().getTimeInMillis(Property.GENERAL_RPC_TIMEOUT))
          client = ThriftUtil.getTServerClient(location, timeoutTracker.getTimeOut());
          client = ThriftUtil.getTServerClient(location, instance.getConfiguration(), timeoutTracker.getTimeOut());
         else
           client = ThriftUtil.getTServerClient(location, instance.getConfiguration());
         
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportKey.java b/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportKey.java
index f07139d16..2816da780 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportKey.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportKey.java
@@ -17,16 +17,17 @@
 package org.apache.accumulo.core.client.impl;
 
 import org.apache.accumulo.core.util.ArgumentChecker;
import org.apache.accumulo.core.util.SslConnectionParams;
 
 class ThriftTransportKey {
   private final String location;
   private final int port;
   private final long timeout;
  private final SslConnectionParams sslParams;
   
   private int hash = -1;
   
  ThriftTransportKey(String location, long timeout) {
    
  ThriftTransportKey(String location, long timeout, SslConnectionParams sslParams) {
     ArgumentChecker.notNull(location);
     String[] locationAndPort = location.split(":", 2);
     if (locationAndPort.length == 2) {
@@ -36,6 +37,7 @@ class ThriftTransportKey {
       throw new IllegalArgumentException("Location was expected to contain port but did not. location=" + location);
     
     this.timeout = timeout;
    this.sslParams = sslParams;
   }
   
   String getLocation() {
@@ -50,23 +52,31 @@ class ThriftTransportKey {
     return timeout;
   }
   
  public boolean isSsl() {
    return sslParams != null;
  }

   @Override
   public boolean equals(Object o) {
     if (!(o instanceof ThriftTransportKey))
       return false;
     ThriftTransportKey ttk = (ThriftTransportKey) o;
    return location.equals(ttk.location) &amp;&amp; port == ttk.port &amp;&amp; timeout == ttk.timeout;
    return location.equals(ttk.location) &amp;&amp; port == ttk.port &amp;&amp; timeout == ttk.timeout &amp;&amp; (!isSsl() || (ttk.isSsl() &amp;&amp; sslParams.equals(ttk.sslParams)));
   }
   
   @Override
   public int hashCode() {
     if (hash == -1)
      hash = (location + Integer.toString(port) + Long.toString(timeout)).hashCode();
      hash = toString().hashCode();
     return hash;
   }
   
   @Override
   public String toString() {
    return location + ":" + Integer.toString(port) + " (" + Long.toString(timeout) + ")";
    return (isSsl()?"ssl:":"") + location + ":" + Integer.toString(port) + " (" + Long.toString(timeout) + ")";
  }

  public SslConnectionParams getSslParams() {
    return sslParams;
   }
 }
diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportPool.java b/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportPool.java
index e7dabb52b..765a4fcfc 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportPool.java
++ b/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportPool.java
@@ -16,7 +16,6 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>SecurityPermission</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>Daemon</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>Pair</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>TTimeoutTransport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>SslConnectionParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>ThriftUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSocket</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransport</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransportException</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">362</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">360</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ThriftTransportPool</name> <block>{
   <expr><specifier>private</specifier> <call><name>ThriftTransportPool</name><argument_list>()</argument_list></call> <block>{}</block>
   
   <specifier>public</specifier> <name>TTransport</name> <call><name>getTransportWithDefaultTimeout</name><argument_list>(<argument><expr><name>HostAndPort</name> <name>addr</name></expr></argument>, <argument><expr><name>AccumuloConfiguration</name> <name>conf</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>TTransportException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><call><name>getTransport</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%s:%d"</literal></expr></argument>, <argument><expr><call><name><name>addr</name><operator>.</operator><name>getHostText</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>addr</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_RPC_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt>
    <return>return <expr><call><name>getTransport</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%s:%d"</literal></expr></argument>, <argument><expr><call><name><name>addr</name><operator>.</operator><name>getHostText</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>addr</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_RPC_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>SslConnectionParams</name><operator>.</operator><name>forClient</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   }
   
  public <function><type><name>TTransport</name></type> <name>getTransport</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>milliseconds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getTransport</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ThriftTransportKey</name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><name>milliseconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>TTransport</name></type> <name>getTransport</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>milliseconds</name></decl></parameter>, <parameter><decl><type><name>SslConnectionParams</name></type> <name>sslParams</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getTransport</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ThriftTransportKey</name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><name>milliseconds</name></expr></argument>, <argument><expr><name>sslParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
   <function><type><specifier>private</specifier> <name>TTransport</name></type> <name>getTransport</name><parameter_list>(<parameter><decl><type><name>ThriftTransportKey</name></type> <name>cacheKey</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">456</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">454</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ThriftTransportPool</name> <block>{
   }</block>
   
   <specifier>private</specifier> <name>TTransport</name> <call><name>createNewTransport</name><argument_list>(<argument><expr><name>ThriftTransportKey</name> <name>cacheKey</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>TTransportException</name> <block>{
    <expr><name>TTransport</name> <name>transport</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>cacheKey</name><operator>.</operator><name>getTimeout</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>transport</name> <operator>=</operator> <operator>new</operator> <call><name>TSocket</name><argument_list>(<argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>TTimeoutTransport</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name><name>HostAndPort</name><operator>.</operator><name>fromParts</name></name><argument_list>(<argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getTimeout</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>TTransportException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch></try>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>ThriftUtil</name><operator>.</operator><name>transportFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>transport</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    
    <decl_stmt><decl><type><name>TTransport</name></type> <name>transport</name> <init>= <expr><call><name><name>ThriftUtil</name><operator>.</operator><name>createClientTransport</name></name><argument_list>(<argument><expr><call><name><name>HostAndPort</name><operator>.</operator><name>fromParts</name></name><argument_list>(<argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>cacheKey</name><operator>.</operator><name>getTimeout</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cacheKey</name><operator>.</operator><name>getSslParams</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

     <if_stmt><if>if <condition>(<expr><call><name><name>log</name><operator>.</operator><name>isTraceEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>trace</name></name><argument_list>(<argument><expr><literal type="string">"Creating new connection to connection to "</literal> <operator>+</operator> <call><name><name>cacheKey</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>cacheKey</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AbstractInputFormat</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AbstractInputFormat</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">856936e44</literal><operator>..</operator><literal type="number">53ac4a14c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AbstractInputFormat</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>AbstractInputFormat</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>InputTableConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>lib</name><operator>.</operator><name>util</name><operator>.</operator><name>InputConfigurator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mock</name><operator>.</operator><name>MockInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>KeyExtent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Range</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>AbstractInputFormat</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> implements <name><name>InputFormat</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>zooKeepers</name>
    <operator>*</operator>          <name>a</name> <name>comma</name><operator>-</operator><name>separated</name> <name>list</name> <name>of</name> <name>zookeeper</name> <name>servers</name>
    <operator>*</operator> @<name>since</name> <literal type="number">1.5.0</literal>
   <operator>*</operator> @<name>deprecated</name> <name>since</name> <literal type="number">1.6.0</literal></expr>; <expr><name>Use</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>JobConf</name></expr></argument>, <argument><expr><name>ClientConfiguration</name></expr></argument>)</argument_list></call></expr>}</block> <name><name>instead</name><operator>.</operator></name>
    *<operator>/</operator>
  @<name>Deprecated</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>JobConf</name> <name>job</name></expr></argument>, <argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>InputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><name>job</name></expr></argument>, <argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Configures a {@link org.apache.accumulo.core.client.ZooKeeperInstance} for this job.
   *
   * @param job
   *          the Hadoop job instance to be configured
   * @param clientConfig
   *          client configuration containing connection options
   * @since 1.6.0
   */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>JobConf</name> <name>job</name></expr></argument>, <argument><expr><name>ClientConfiguration</name> <name>clientConfig</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>InputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><name>job</name></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr>;
  }</block>

   <comment type="block" format="javadoc">/**
    * Configures a {@link org.apache.accumulo.core.client.mock.MockInstance} for this job.
    * 
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloInputFormat.java b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloInputFormat.java
index cccd7b8b0..ffd74a50b 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloInputFormat.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloInputFormat.java
@@ -20,6 +20,7 @@ import java.io.IOException;
 import java.util.Map.Entry;
 
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.Value;
 import org.apache.accumulo.core.security.Authorizations;
@@ -40,7 +41,8 @@ import org.apache.hadoop.mapred.Reporter;
  * &lt;li&gt;{@link AccumuloInputFormat#setConnectorInfo(JobConf, String, AuthenticationToken)}
  * &lt;li&gt;{@link AccumuloInputFormat#setConnectorInfo(JobConf, String, String)}
  * &lt;li&gt;{@link AccumuloInputFormat#setScanAuthorizations(JobConf, Authorizations)}
 * &lt;li&gt;{@link AccumuloInputFormat#setZooKeeperInstance(JobConf, String, String)} OR {@link AccumuloInputFormat#setMockInstance(JobConf, String)}
 * &lt;li&gt;{@link AccumuloInputFormat#setZooKeeperInstance(JobConf, ClientConfiguration)} OR
 * {@link AccumuloInputFormat#setMockInstance(JobConf, String)}
  * &lt;/ul&gt;
  * 
  * Other static methods are optional.
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloMultiTableInputFormat.java b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloMultiTableInputFormat.java
index 61838db85..f6eb294bd 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloMultiTableInputFormat.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloMultiTableInputFormat.java
@@ -21,6 +21,7 @@ import java.util.Map;
 
 import org.apache.accumulo.core.client.mapreduce.InputTableConfig;
 import org.apache.accumulo.core.client.mapreduce.lib.util.InputConfigurator;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.Value;
 import org.apache.accumulo.core.util.format.DefaultFormatter;
@@ -39,7 +40,7 @@ import org.apache.hadoop.mapred.Reporter;
  * &lt;li&gt;{@link AccumuloInputFormat#setConnectorInfo(JobConf, String, org.apache.accumulo.core.client.security.tokens.AuthenticationToken)}
  * &lt;li&gt;{@link AccumuloInputFormat#setConnectorInfo(JobConf, String, String)}
  * &lt;li&gt;{@link AccumuloInputFormat#setScanAuthorizations(JobConf, org.apache.accumulo.core.security.Authorizations)}
 * &lt;li&gt;{@link AccumuloInputFormat#setZooKeeperInstance(JobConf, String, String)} OR {@link AccumuloInputFormat#setMockInstance(JobConf, String)}
 * &lt;li&gt;{@link AccumuloInputFormat#setZooKeeperInstance(JobConf, ClientConfiguration)} OR {@link AccumuloInputFormat#setMockInstance(JobConf, String)}
  * &lt;li&gt;{@link AccumuloMultiTableInputFormat#setInputTableConfigs(org.apache.hadoop.mapred.JobConf, java.util.Map)}
  * &lt;/ul&gt;
  * 
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java
index 908b8b3a8..6b418d603 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java
@@ -38,6 +38,7 @@ import org.apache.accumulo.core.client.mock.MockInstance;
 import org.apache.accumulo.core.client.security.SecurityErrorCode;
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken.AuthenticationTokenSerializer;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.ColumnUpdate;
 import org.apache.accumulo.core.data.KeyExtent;
 import org.apache.accumulo.core.data.Mutation;
@@ -61,7 +62,7 @@ import org.apache.log4j.Logger;
  * &lt;ul&gt;
  * &lt;li&gt;{@link AccumuloOutputFormat#setConnectorInfo(JobConf, String, AuthenticationToken)}
  * &lt;li&gt;{@link AccumuloOutputFormat#setConnectorInfo(JobConf, String, String)}
 * &lt;li&gt;{@link AccumuloOutputFormat#setZooKeeperInstance(JobConf, String, String)} OR {@link AccumuloOutputFormat#setMockInstance(JobConf, String)}
 * &lt;li&gt;{@link AccumuloOutputFormat#setZooKeeperInstance(JobConf, ClientConfiguration)} OR {@link AccumuloOutputFormat#setMockInstance(JobConf, String)}
  * &lt;/ul&gt;
  * 
  * Other static methods are optional.
@@ -182,11 +183,31 @@ public class AccumuloOutputFormat implements OutputFormat&lt;Text,Mutation&gt; {
    * @param zooKeepers
    *          a comma-separated list of zookeeper servers
    * @since 1.5.0
   * @deprecated since 1.6.0; Use {@link #setZooKeeperInstance(JobConf, ClientConfiguration)} instead.
    */</comment>

  @<name>Deprecated</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>JobConf</name> <name>job</name></expr></argument>, <argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>OutputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><name>job</name></expr></argument>, <argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Configures a {@link ZooKeeperInstance} for this job.
   *
   * @param job
   *          the Hadoop job instance to be configured
   * @param instanceName
   *          the Accumulo instance name
   * @param zooKeepers
   *          a comma-separated list of zookeeper servers
   * @param clientConfig
   *          client configuration for specifying connection timeouts, SSL connection options, etc.
   * @since 1.6.0
   */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>JobConf</name> <name>job</name></expr></argument>, <argument><expr><name>ClientConfiguration</name> <name>clientConfig</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>OutputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><name>job</name></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr>;
  }</block>

   <comment type="block" format="javadoc">/**
    * Configures a {@link MockInstance} for this job.
    * 
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloRowInputFormat.java b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloRowInputFormat.java
index fe5003b50..9c6189b3d 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloRowInputFormat.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloRowInputFormat.java
@@ -21,6 +21,7 @@ import java.util.Map.Entry;
 
 import org.apache.accumulo.core.client.RowIterator;
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.Value;
 import org.apache.accumulo.core.security.Authorizations;
@@ -42,7 +43,7 @@ import org.apache.hadoop.mapred.Reporter;
  * &lt;li&gt;{@link AccumuloRowInputFormat#setConnectorInfo(JobConf, String, AuthenticationToken)}
  * &lt;li&gt;{@link AccumuloRowInputFormat#setInputTableName(JobConf, String)}
  * &lt;li&gt;{@link AccumuloRowInputFormat#setScanAuthorizations(JobConf, Authorizations)}
 * &lt;li&gt;{@link AccumuloRowInputFormat#setZooKeeperInstance(JobConf, String, String)} OR {@link AccumuloRowInputFormat#setMockInstance(JobConf, String)}
 * &lt;li&gt;{@link AccumuloRowInputFormat#setZooKeeperInstance(JobConf, String, String, ClientConfiguration)} OR {@link AccumuloRowInputFormat#setMockInstance(JobConf, String)}
  * &lt;/ul&gt;
  * 
  * Other static methods are optional.
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AbstractInputFormat.java b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AbstractInputFormat.java
index 626a785d7..9d8024eda 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AbstractInputFormat.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AbstractInputFormat.java
@@ -46,6 +46,7 @@ import org.apache.accumulo.core.client.impl.TabletLocator;
 import org.apache.accumulo.core.client.mapreduce.lib.util.InputConfigurator;
 import org.apache.accumulo.core.client.mock.MockInstance;
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.ByteSequence;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.KeyExtent;
@@ -189,11 +190,26 @@ public abstract class AbstractInputFormat&lt;K,V&gt; extends InputFormat&lt;K,V&gt; {
    * @param zooKeepers
    *          a comma-separated list of zookeeper servers
    * @since 1.5.0
   * @deprecated since 1.6.0; Use {@link #setZooKeeperInstance(Job, ClientConfiguration)} instead.
    */</comment>
  @<name>Deprecated</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>Job</name> <name>job</name></expr></argument>, <argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>InputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Configures a {@link org.apache.accumulo.core.client.ZooKeeperInstance} for this job.
   *
   * @param job
   *          the Hadoop job instance to be configured
   * @param clientConfig
   *          client configuration containing connection options
   * @since 1.6.0
   */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>Job</name> <name>job</name></expr></argument>, <argument><expr><name>ClientConfiguration</name> <name>clientConfig</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>InputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr>;
  }</block>

   <comment type="block" format="javadoc">/**
    * Configures a {@link org.apache.accumulo.core.client.mock.MockInstance} for this job.
    * 
@@ -379,7 +395,6 @@ public abstract class AbstractInputFormat&lt;K,V&gt; extends InputFormat&lt;K,V&gt; {
       // but the scanner will use the table id resolved at job setup time
       InputTableConfig tableConfig = getInputTableConfig(attempt, split.getTableName());
 

       try {
         log.debug("Creating connector with user: " + principal);
         log.debug("Creating scanner for table: " + split.getTableName());
@@ -456,7 +471,7 @@ public abstract class AbstractInputFormat&lt;K,V&gt; extends InputFormat&lt;K,V&gt; {
 
     return InputConfigurator.binOffline(tableId, ranges, instance, conn);
   }
  

   /**
    * Gets the splits of the tables that have been set on the job.
    * 
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormat.java b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormat.java
index 9ecae5316..0539c9345 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormat.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormat.java
@@ -20,6 +20,7 @@ import java.io.IOException;
 import java.util.Map.Entry;
 
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.Value;
 import org.apache.accumulo.core.security.Authorizations;
@@ -39,7 +40,7 @@ import org.apache.hadoop.mapreduce.TaskAttemptContext;
  * &lt;ul&gt;
  * &lt;li&gt;{@link AccumuloInputFormat#setConnectorInfo(Job, String, AuthenticationToken)}
  * &lt;li&gt;{@link AccumuloInputFormat#setScanAuthorizations(Job, Authorizations)}
 * &lt;li&gt;{@link AccumuloInputFormat#setZooKeeperInstance(Job, String, String)} OR {@link AccumuloInputFormat#setMockInstance(Job, String)}
 * &lt;li&gt;{@link AccumuloInputFormat#setZooKeeperInstance(Job, ClientConfiguration)} OR {@link AccumuloInputFormat#setMockInstance(Job, String)}
  * &lt;/ul&gt;
  * 
  * Other static methods are optional.
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java
index 727bfecce..6782b4b37 100644
-- a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java
++ b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java
@@ -38,6 +38,7 @@ import org.apache.accumulo.core.client.mock.MockInstance;
 import org.apache.accumulo.core.client.security.SecurityErrorCode;
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
 import org.apache.accumulo.core.client.security.tokens.AuthenticationToken.AuthenticationTokenSerializer;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.ColumnUpdate;
 import org.apache.accumulo.core.data.KeyExtent;
 import org.apache.accumulo.core.data.Mutation;
@@ -62,7 +63,7 @@ import org.apache.log4j.Logger;
  * &lt;ul&gt;
  * &lt;li&gt;{@link AccumuloOutputFormat#setConnectorInfo(Job, String, AuthenticationToken)}
  * &lt;li&gt;{@link AccumuloOutputFormat#setConnectorInfo(Job, String, String)}
 * &lt;li&gt;{@link AccumuloOutputFormat#setZooKeeperInstance(Job, String, String)} OR {@link AccumuloOutputFormat#setMockInstance(Job, String)}
 * &lt;li&gt;{@link AccumuloOutputFormat#setZooKeeperInstance(Job, ClientConfiguration)} OR {@link AccumuloOutputFormat#setMockInstance(Job, String)}
  * &lt;/ul&gt;
  * 
  * Other static methods are optional.
@@ -183,11 +184,30 @@ public class AccumuloOutputFormat extends OutputFormat&lt;Text,Mutation&gt; {
    * @param zooKeepers
    *          a comma-separated list of zookeeper servers
    * @since 1.5.0
   * @deprecated since 1.6.0; Use {@link #setZooKeeperInstance(Job, ClientConfiguration)} instead.
    */</comment>
  @<name>Deprecated</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>Job</name> <name>job</name></expr></argument>, <argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>OutputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Configures a {@link ZooKeeperInstance} for this job.
   *
   * @param job
   *          the Hadoop job instance to be configured
   * @param instanceName
   *          the Accumulo instance name
   * @param zooKeepers
   *          a comma-separated list of zookeeper servers
   * @param clientConfig
   *          client configuration for specifying connection timeouts, SSL connection options, etc.
   * @since 1.6.0
   */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>Job</name> <name>job</name></expr></argument>, <argument><expr><name>ClientConfiguration</name> <name>clientConfig</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>OutputConfigurator</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>CLASS</name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr>;
  }</block>

   <comment type="block" format="javadoc">/**
    * Configures a {@link MockInstance} for this job.
    * 
@@ -208,7 +228,7 @@ public class AccumuloOutputFormat extends OutputFormat&lt;Text,Mutation&gt; {
    *          the Hadoop context for the configured job
    * @return an Accumulo instance
    * @since 1.5.0
   * @see #setZooKeeperInstance(Job, String, String)
   * @see #setZooKeeperInstance(Job, String, String, ClientConfiguration)
    * @see #setMockInstance(Job, String)
    */</comment>
   <specifier>protected</specifier> <specifier>static</specifier> <name>Instance</name> <call><name>getInstance</name><argument_list>(<argument><expr><name>JobContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AccumuloRowInputFormat</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AccumuloRowInputFormat</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">992990d40</literal><operator>..</operator><name>a52b098cb</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AccumuloRowInputFormat</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>AccumuloRowInputFormat</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import></block></expr>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>RowIterator</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Authorizations</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>TaskAttemptContext</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><block>{@<expr><name>link</name> <name>AccumuloRowInputFormat</name><operator>#</operator><call><name>setConnectorInfo</name><argument_list>(<argument><expr><name>Job</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>AuthenticationToken</name></expr></argument>)</argument_list></call></expr>}</block>
  <operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><block>{@<expr><name>link</name> <name>AccumuloRowInputFormat</name><operator>#</operator><call><name>setInputTableName</name><argument_list>(<argument><expr><name>Job</name></expr></argument>, <argument><expr><name>String</name></expr></argument>)</argument_list></call></expr>}</block>
  <operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><block>{@<expr><name>link</name> <name>AccumuloRowInputFormat</name><operator>#</operator><call><name>setScanAuthorizations</name><argument_list>(<argument><expr><name>Job</name></expr></argument>, <argument><expr><name>Authorizations</name></expr></argument>)</argument_list></call></expr>}</block>
 <operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><block>{@<expr><name>link</name> <name>AccumuloRowInputFormat</name><operator>#</operator><call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>Job</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name></expr></argument>)</argument_list></call></expr>}</block> <name>OR</name> <block>{@<expr><name>link</name> <name>AccumuloRowInputFormat</name><operator>#</operator><call><name>setMockInstance</name><argument_list>(<argument><expr><name>Job</name></expr></argument>, <argument><expr><name>String</name></expr></argument>)</argument_list></call></expr>}</block>
 <operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><block>{@<expr><name>link</name> <name>AccumuloRowInputFormat</name><operator>#</operator><call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>Job</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>ClientConfiguration</name></expr></argument>)</argument_list></call></expr>}</block> <name>OR</name> <block>{@<expr><name>link</name> <name>AccumuloRowInputFormat</name><operator>#</operator><call><name>setMockInstance</name><argument_list>(<argument><expr><name>Job</name></expr></argument>, <argument><expr><name>String</name></expr></argument>)</argument_list></call></expr>}</block>
  <operator>*</operator> <operator>&lt;</operator><operator>/</operator><name>ul</name><operator>&gt;</operator>
  <operator>*</operator> 
  <operator>*</operator> <name>Other</name> <specifier>static</specifier> <name>methods</name> <name>are</name> <name><name>optional</name><operator>.</operator>
<name>diff</name></name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4f8cdb647</literal><operator>..</operator><name>c0fcc7231</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mock</name><operator>.</operator><name>MockInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name><operator>.</operator><name>AuthenticationTokenSerializer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Credentials</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>ArgumentChecker</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>codec</name><operator>.</operator><name>binary</name><operator>.</operator><name>Base64</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConfiguratorBase</name> <block>{
    <expr><operator>*</operator> @<name>since</name> <literal type="number">1.5.0</literal>
    <operator>*</operator><operator>/</operator>
   <specifier>protected</specifier> <specifier>static</specifier> enum <name>InstanceOpts</name> <block>{
    <expr><name>TYPE</name></expr>, <expr><name>NAME</name></expr>, <expr><name>ZOO_KEEPERS</name></expr>;
    <expr><name>TYPE</name></expr>, <expr><name>NAME</name></expr>, <expr><name>ZOO_KEEPERS</name></expr>, <expr><name>CLIENT_CONFIG</name></expr>;
   }</block>
 
   <comment type="block" format="javadoc">/**
@@ -277,16 +278,38 @@ public class ConfiguratorBase {
    * @param zooKeepers
    *          a comma-separated list of zookeeper servers
    * @since 1.5.0
   * @deprecated since 1.6.0; Use {@link #setZooKeeperInstance(Class, Configuration, ClientConfiguration)} instead.
    */</comment>

  @<name>Deprecated</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <name>implementingClass</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>, <argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block>

  <comment type="block" format="javadoc">/**
   * Configures a {@link ZooKeeperInstance} for this job.
   *
   * @param implementingClass
   *          the class whose name will be used as a prefix for the property configuration key
   * @param conf
   *          the Hadoop configuration object to configure
   * @param instanceName
   *          the Accumulo instance name
   * @param zooKeepers
   *          a comma-separated list of zookeeper servers
   * @param clientConfig
   *          client configuration for specifying connection timeouts, SSL connection options, etc.
   * @since 1.5.0
   */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setZooKeeperInstance</name><argument_list>(<argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <name>implementingClass</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>, <argument><expr><name>ClientConfiguration</name> <name>clientConfig</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>String</name> <name>key</name> <operator>=</operator> <call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr>;
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Instance info can only be set once per job; it has already been configured with "</literal> <operator>+</operator> <call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
     <call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="string">"ZooKeeperInstance"</literal></expr></argument>)</argument_list></call></block></expr>;

    <expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>instanceName</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>ZOO_KEEPERS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;
    <if_stmt><if>if <condition>(<expr><name>clientConfig</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>CLIENT_CONFIG</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>serialize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -319,17 +342,23 @@ public class ConfiguratorBase {
    *          the Hadoop configuration object to configure
    * @return an Accumulo instance
    * @since 1.5.0
   * @see #setZooKeeperInstance(Class, Configuration, String, String)
   * @see #setZooKeeperInstance(Class, Configuration, String, String, ClientConfiguration)
    * @see #setMockInstance(Class, Configuration, String)
    */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Instance</name></type> <name>getInstance</name><parameter_list>(<parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>implementingClass</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>String</name></type> <name>instanceType</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><literal type="string">"MockInstance"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>instanceType</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <return>return <expr><operator>new</operator> <call><name>MockInstance</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><literal type="string">"ZooKeeperInstance"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>instanceType</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>,
          <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>ZOO_KEEPERS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><call><name><name>instanceType</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if type="elseif">else if <condition>(<expr><literal type="string">"ZooKeeperInstance"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>instanceType</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>clientConfigString</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>CLIENT_CONFIG</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>clientConfigString</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>instanceName</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>zookeepers</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>enumToConfKey</name><argument_list>(<argument><expr><name>implementingClass</name></expr></argument>, <argument><expr><name><name>InstanceOpts</name><operator>.</operator><name>ZOO_KEEPERS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>deserialize</name></name><argument_list>(<argument><expr><name>clientConfigString</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>instanceType</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Instance has not been configured for "</literal> <operator>+</operator> <call><name><name>implementingClass</name><operator>.</operator><name>getSimpleName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if>
     <else>else<block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Unrecognized instance type "</literal> <operator>+</operator> <name>instanceType</name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></else></if_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mock</name><operator>/</operator><name><name>MockInstance</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mock</name><operator>/</operator><name><name>MockInstance</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d39146452</name><operator>..</operator><literal type="number">5b7dcbf9c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mock</name><operator>/</operator><name><name>MockInstance</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mock</name><operator>/</operator><name><name>MockInstance</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockInstance</name> implements <name>Instance</name> <block>{
   }</block>
   
   @<name>Override</name>
  @<name>Deprecated</name>
   <specifier>public</specifier> <name>void</name> <call><name>setConfiguration</name><argument_list>(<argument><expr><name>AccumuloConfiguration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>this</name><operator>.</operator><name>conf</name></name> <operator>=</operator> <name>conf</name></expr>;
   }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>AccumuloConfiguration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>AccumuloConfiguration</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>da170e984</name><operator>..</operator><literal type="number">3aed8c199</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>AccumuloConfiguration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>AccumuloConfiguration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>Constants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableNotFoundException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">181</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AccumuloConfiguration</name> implements <name>Iterable</name><operator>&lt;</operator><name>Entry</name><operator>&lt;</operator><name>String</name></expr><operator>,</operator><expr><name>Str</name></expr></expr_stmt>
     <return>return <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><name>countString</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getPath</name><parameter_list>(<parameter><decl><type><name>Property</name></type> <name>property</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>checkType</name><argument_list>(<argument><expr><name>property</name></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PATH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>pathString</name> <init>= <expr><call><name>get</name><argument_list>(<argument><expr><name>property</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>pathString</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="null">null</literal></expr>;</return></block_content></block></if></if_stmt>

    <for>for <control>(<init><decl><type><name>String</name></type> <name>replaceableEnvVar</name> <range>: <expr><name><name>Constants</name><operator>.</operator><name>PATH_PROPERTY_ENV_VARS</name></name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>envValue</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><name>replaceableEnvVar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>envValue</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>pathString</name> <operator>=</operator> <call><name><name>pathString</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"$"</literal> <operator>+</operator> <name>replaceableEnvVar</name></expr></argument>, <argument><expr><name>envValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>

    <return>return <expr><name>pathString</name></expr>;</return>
  </block_content>}</block></function>

   <function><type><specifier>public</specifier> <specifier>static</specifier> <specifier>synchronized</specifier> <name>DefaultConfiguration</name></type> <name>getDefaultConfiguration</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><call><name><name>DefaultConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfiguration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfiguration</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..5bb95aeb3</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfiguration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">310</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>ArgumentChecker</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>CompositeConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>ConfigurationException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>MapConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>PropertiesConfiguration</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Contains a list of property keys recognized by the Accumulo client and convenience methods for setting them.
 */</comment>
<class><specifier>public</specifier> class <name>ClientConfiguration</name> <super_list><extends>extends <super><name>CompositeConfiguration</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>USER_ACCUMULO_DIR_NAME</name> <init>= <expr><literal type="string">".accumulo"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>USER_CONF_FILENAME</name> <init>= <expr><literal type="string">"config"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>GLOBAL_CONF_FILENAME</name> <init>= <expr><literal type="string">"client.conf"</literal></expr></init></decl>;</decl_stmt>

  <enum><specifier>public</specifier> enum <name>ClientProperty</name> <block>{
    <decl><name>RPC_SSL_TRUSTSTORE_PATH</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_PATH</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>RPC_SSL_TRUSTSTORE_PASSWORD</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_PASSWORD</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>RPC_SSL_TRUSTSTORE_TYPE</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_TYPE</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>RPC_SSL_KEYSTORE_PATH</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PATH</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>RPC_SSL_KEYSTORE_PASSWORD</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PASSWORD</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>RPC_SSL_KEYSTORE_TYPE</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_TYPE</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>RPC_USE_JSSE</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_USE_JSSE</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>INSTANCE_RPC_SSL_CLIENT_AUTH</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_CLIENT_AUTH</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>INSTANCE_RPC_SSL_ENABLED</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>INSTANCE_ZK_HOST</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>INSTANCE_ZK_TIMEOUT</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></decl>,
    <decl><name>INSTANCE_NAME</name><argument_list>(<argument><expr><literal type="string">"client.instance.name"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>STRING</name></name></expr></argument>, <argument><expr><literal type="string">"Name of Accumulo instance to connect to"</literal></expr></argument>)</argument_list></decl>,
    <decl><name>INSTANCE_ID</name><argument_list>(<argument><expr><literal type="string">"client.instance.id"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>STRING</name></name></expr></argument>, <argument><expr><literal type="string">"UUID of Accumulo instance to connect to"</literal></expr></argument>)</argument_list></decl>,
    ;

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>key</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>defaultValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>PropertyType</name></type> <name>type</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>description</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>Property</name></type> <name>accumuloProperty</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>ClientProperty</name><parameter_list>(<parameter><decl><type><name>Property</name></type> <name>prop</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><call><name><name>prop</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>prop</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>prop</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>prop</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>accumuloProperty</name> <operator>=</operator> <name>prop</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <constructor><specifier>private</specifier> <name>ClientProperty</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>defaultValue</name></decl></parameter>, <parameter><decl><type><name>PropertyType</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>description</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>key</name></name> <operator>=</operator> <name>key</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>defaultValue</name></name> <operator>=</operator> <name>defaultValue</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>description</name></name> <operator>=</operator> <name>description</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getKey</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>key</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getDefaultValue</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>defaultValue</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>PropertyType</name></type> <name>getType</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>type</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>description</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Property</name></type> <name>getAccumuloProperty</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>accumuloProperty</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ClientProperty</name></type> <name>getPropertyByKey</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>ClientProperty</name></type> <name>prop</name> <range>: <expr><call><name><name>ClientProperty</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
          <return>return <expr><name>prop</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>
  }</block></enum><empty_stmt>;</empty_stmt>

  <constructor><specifier>public</specifier> <name>ClientConfiguration</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Configuration</name></extends></argument>&gt;</argument_list></name></type> <name>configs</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>configs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <constructor><specifier>public</specifier> <name>ClientConfiguration</name><parameter_list>(<parameter><decl><type><name>Configuration</name><modifier>...</modifier></type> <name>configs</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>configs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ClientConfiguration</name></type> <name>loadDefault</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>loadFromSearchPath</name><argument_list>(<argument><expr><call><name>getDefaultSearchPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ClientConfiguration</name></type> <name>loadDefault</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>overridePropertiesFilename</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument>, <argument><expr><name>ConfigurationException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>overridePropertiesFilename</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><call><name>loadDefault</name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if>
    <else>else<block type="pseudo"><block_content>
      <return>return <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>(<argument><expr><name>overridePropertiesFilename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>ClientConfiguration</name></type> <name>loadFromSearchPath</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>paths</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Configuration</name></argument>&gt;</argument_list></name></type> <name>configs</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;<argument><name>Configuration</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>path</name> <range>: <expr><name>paths</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>File</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>conf</name><operator>.</operator><name>canRead</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>configs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <return>return <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><name>configs</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ConfigurationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Error loading client configuration"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ClientConfiguration</name></type> <name>deserialize</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>serializedConfig</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>PropertiesConfiguration</name></type> <name>propConfig</name> <init>= <expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>propConfig</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><name>serializedConfig</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ConfigurationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Error deserializing client configuration: "</literal> <operator>+</operator> <name>serializedConfig</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
    <return>return <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><name>propConfig</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getDefaultSearchPath</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>clientConfSearchPath</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"ACCUMULO_CLIENT_CONF_PATH"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>clientConfPaths</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>clientConfSearchPath</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>clientConfPaths</name> <operator>=</operator> <call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>clientConfSearchPath</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name><name>File</name><operator>.</operator><name>pathSeparator</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <comment type="line">// if $ACCUMULO_CLIENT_CONF_PATH env isn't set, priority from top to bottom is:</comment>
      <comment type="line">// ~/.accumulo/config</comment>
      <comment type="line">// $ACCUMULO_CONF_DIR/client.conf -OR- $ACCUMULO_HOME/conf/client.conf (depending on whether $ACCUMULO_CONF_DIR is set)</comment>
      <comment type="line">// /etc/accumulo/client.conf</comment>
      <expr_stmt><expr><name>clientConfPaths</name> <operator>=</operator> <operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>clientConfPaths</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.home"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name>USER_ACCUMULO_DIR_NAME</name> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name>USER_CONF_FILENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"ACCUMULO_CONF_DIR"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>clientConfPaths</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"ACCUMULO_CONF_DIR"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name>GLOBAL_CONF_FILENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"ACCUMULO_HOME"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>clientConfPaths</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"ACCUMULO_HOME"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <literal type="string">"conf"</literal> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name>GLOBAL_CONF_FILENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>clientConfPaths</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/etc/accumulo/"</literal> <operator>+</operator> <name>GLOBAL_CONF_FILENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return>return <expr><name>clientConfPaths</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>serialize</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>PropertiesConfiguration</name></type> <name>propConfig</name> <init>= <expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>propConfig</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>StringWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>StringWriter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>propConfig</name><operator>.</operator><name>save</name></name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ConfigurationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// this should never happen</comment>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
    <return>return <expr><call><name><name>writer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>ClientProperty</name></type> <name>prop</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>prop</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><call><name><name>this</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><call><name><name>prop</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
    <else>else<block type="pseudo"><block_content>
      <return>return <expr><call><name><name>prop</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr>;</return></block_content></block></else></if_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setProperty</name><parameter_list>(<parameter><decl><type><name>ClientProperty</name></type> <name>prop</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><call><name><name>prop</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>with</name><parameter_list>(<parameter><decl><type><name>ClientProperty</name></type> <name>prop</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><call><name><name>prop</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>this</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>instanceName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name>with</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>, <argument><expr><name>instanceName</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withInstance</name><parameter_list>(<parameter><decl><type><name>UUID</name></type> <name>instanceId</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name>with</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ID</name></name></expr></argument>, <argument><expr><call><name><name>instanceId</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withZkHosts</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>zooKeepers</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name>with</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withZkTimeout</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>with</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withSsl</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>sslEnabled</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>withSsl</name><argument_list>(<argument><expr><name>sslEnabled</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withSsl</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>sslEnabled</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>useJsseConfig</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>with</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>sslEnabled</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>with</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_USE_JSSE</name></name></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>useJsseConfig</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withTruststore</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>withTruststore</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withTruststore</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>password</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setProperty</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_PATH</name></name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>password</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name>setProperty</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_PASSWORD</name></name></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>type</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name>setProperty</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_TYPE</name></name></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return>return <expr><name>this</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withKeystore</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>withKeystore</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>withKeystore</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>password</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>ArgumentChecker</name><operator>.</operator><name>notNull</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setProperty</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_RPC_SSL_CLIENT_AUTH</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setProperty</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PATH</name></name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>password</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name>setProperty</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PASSWORD</name></name></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>type</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name>setProperty</name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_KEYSTORE_TYPE</name></name></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return>return <expr><name>this</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>AccumuloConfiguration</name></type> <name>getAccumuloConfiguration</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>AccumuloConfiguration</name></type> <name>defaultConf</name> <init>= <expr><call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getDefaultConfiguration</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><operator>new</operator> <class><super><name>AccumuloConfiguration</name></super><argument_list>()</argument_list> <block>{

      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>iterator</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>TreeMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>entries</name> <init>= <expr><operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>parentEntry</name> <range>: <expr><name>defaultConf</name></expr></range></decl></init>)</control><block type="pseudo"><block_content>
          <expr_stmt><expr><call><name><name>entries</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>parentEntry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>parentEntry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
        <type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>keyIter</name> <init>= <expr><call><name>getKeys</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>keyIter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><call><name><name>keyIter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>entries</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><call><name>getString</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>

        <return>return <expr><call><name><name>entries</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr>;</return>
      </block_content>}</block></function>

      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>String</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>Property</name></type> <name>property</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>containsKey</name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
          <return>return <expr><call><name>getString</name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
        <else>else<block type="pseudo"><block_content>
          <return>return <expr><call><name><name>defaultConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>property</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>
      </block_content>}</block></function>

      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>getProperties</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>props</name></decl></parameter>, <parameter><decl><type><name>PropertyFilter</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>entry</name> <range>: <expr><name>this</name></expr></range></decl></init>)</control><block type="pseudo"><block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>filter</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
      </block_content>}</block></function>
    }</block></class></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ClientConfiguration</name></type> <name>fromAccumuloConfiguration</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>accumuloConf</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>ClientProperty</name></type> <name>prop</name> <range>: <expr><call><name><name>ClientProperty</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name><name>prop</name><operator>.</operator><name>accumuloProperty</name></name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <continue>continue;</continue></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>prop</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>accumuloConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>prop</name><operator>.</operator><name>accumuloProperty</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MapConfiguration</name><argument_list>(<argument><expr><name>props</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b915ee431</name><operator>..</operator><literal type="number">4a38d1585</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Property</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> enum <name>Property</name> <block>{
           <expr><operator>+</operator> <literal type="string">"of that file.  Sometimes, you change your strategy and want to use the new strategy, not the old one.  (Most commonly, this will be "</literal>
           <operator>+</operator> <literal type="string">"because you have moved key material from one spot to another.)  If you want to override the recorded key strategy with the one in "</literal>
           <operator>+</operator> <literal type="string">"the configuration file, set this property to true."</literal></expr>)<operator>,</operator>
  <comment type="line">// SSL properties local to each node (see also instance.ssl.enabled which must be consistent across all nodes in an instance)</comment>
  <call><name>RPC_PREFIX</name><argument_list>(<argument><expr><literal type="string">"rpc."</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PREFIX</name></name></expr></argument>, <argument><expr><literal type="string">"Properties in this category related to the configuration of SSL keys for RPC.  See also instance.ssl.enabled"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>RPC_SSL_KEYSTORE_PATH</name><argument_list>(<argument><expr><literal type="string">"rpc.javax.net.ssl.keyStore"</literal></expr></argument>, <argument><expr><literal type="string">"$ACCUMULO_CONF_DIR/ssl/keystore.jks"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PATH</name></name></expr></argument>,
      <argument><expr><literal type="string">"Path of the keystore file for the servers' private SSL key"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  @<name>Sensitive</name>
  <call><name>RPC_SSL_KEYSTORE_PASSWORD</name><argument_list>(<argument><expr><literal type="string">"rpc.javax.net.ssl.keyStorePassword"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>STRING</name></name></expr></argument>,
      <argument><expr><literal type="string">"Password used to encrypt the SSL private keystore.  Leave blank to use the Accumulo instance secret"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>RPC_SSL_KEYSTORE_TYPE</name><argument_list>(<argument><expr><literal type="string">"rpc.javax.net.ssl.keyStoreType"</literal></expr></argument>, <argument><expr><literal type="string">"jks"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>STRING</name></name></expr></argument>,
      <argument><expr><literal type="string">"Type of SSL keystore"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>RPC_SSL_TRUSTSTORE_PATH</name><argument_list>(<argument><expr><literal type="string">"rpc.javax.net.ssl.trustStore"</literal></expr></argument>, <argument><expr><literal type="string">"$ACCUMULO_CONF_DIR/ssl/truststore.jks"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PATH</name></name></expr></argument>,
      <argument><expr><literal type="string">"Path of the truststore file for the root cert"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  @<name>Sensitive</name>
  <call><name>RPC_SSL_TRUSTSTORE_PASSWORD</name><argument_list>(<argument><expr><literal type="string">"rpc.javax.net.ssl.trustStorePassword"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>STRING</name></name></expr></argument>,
      <argument><expr><literal type="string">"Password used to encrypt the SSL truststore.  Leave blank to use no password"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>RPC_SSL_TRUSTSTORE_TYPE</name><argument_list>(<argument><expr><literal type="string">"rpc.javax.net.ssl.trustStoreType"</literal></expr></argument>, <argument><expr><literal type="string">"jks"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>STRING</name></name></expr></argument>,
        <argument><expr><literal type="string">"Type of SSL truststore"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>RPC_USE_JSSE</name><argument_list>(<argument><expr><literal type="string">"rpc.useJsse"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>BOOLEAN</name></name></expr></argument>, <argument><expr><literal type="string">"Use JSSE system properties to configure SSL rather than general.javax.net.ssl.* Accumulo properties"</literal></expr></argument>)</argument_list></call><operator>,</operator>
   <comment type="line">// instance properties (must be the same for every node in an instance)</comment>
   <call><name>INSTANCE_PREFIX</name><argument_list>(<argument><expr><literal type="string">"instance."</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PREFIX</name></name></expr></argument>,
       <argument><expr><literal type="string">"Properties in this category must be consistent throughout a cloud. This is enforced and servers won't be able to communicate if these differ."</literal></expr></argument>)</argument_list></call><operator>,</operator>
@@ <operator>-</operator><literal type="number">106</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">123</literal><operator>,</operator><literal type="number">8</literal> @@ <specifier>public</specifier> enum <name>Property</name> <block>{
       <expr><literal type="string">"The authorizor class that accumulo will use to determine what labels a user has privilege to see"</literal></expr>)<operator>,</operator>
   <call><name>INSTANCE_SECURITY_PERMISSION_HANDLER</name><argument_list>(<argument><expr><literal type="string">"instance.security.permissionHandler"</literal></expr></argument>, <argument><expr><literal type="string">"org.apache.accumulo.server.security.handler.ZKPermHandler"</literal></expr></argument>,
       <argument><expr><name><name>PropertyType</name><operator>.</operator><name>CLASSNAME</name></name></expr></argument>, <argument><expr><literal type="string">"The permission handler class that accumulo will use to determine if a user has privilege to perform an action"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>INSTANCE_RPC_SSL_ENABLED</name><argument_list>(<argument><expr><literal type="string">"instance.rpc.ssl.enabled"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>BOOLEAN</name></name></expr></argument>, <argument><expr><literal type="string">"Use SSL for socket connections from clients and among accumulo services"</literal></expr></argument>)</argument_list></call><operator>,</operator>
  <call><name>INSTANCE_RPC_SSL_CLIENT_AUTH</name><argument_list>(<argument><expr><literal type="string">"instance.rpc.ssl.clientAuth"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>BOOLEAN</name></name></expr></argument>, <argument><expr><literal type="string">"Require clients to present certs signed by a trusted root"</literal></expr></argument>)</argument_list></call><operator>,</operator>
 
   <comment type="line">// general properties</comment>
   <call><name>GENERAL_PREFIX</name><argument_list>(<argument><expr><literal type="string">"general."</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>PREFIX</name></name></expr></argument>,
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>PropertyType</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>PropertyType</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fc454423f</name><operator>..</operator><literal type="number">688b1863e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>PropertyType</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>PropertyType</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@</expr></argument> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name></name>;</package></argument_list></call></block></block></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>Constants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 
 <enum><specifier>public</specifier> enum <name>PropertyType</name> <block>{
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> enum <name>PropertyType</name> <block>{
           <expr><operator>+</operator> <literal type="string">"Examples of invalid fractions/percentages are '', '10 percent', 'Hulk Hogan'"</literal></expr>)<operator>,</operator>
   
   <call><name>PATH</name><argument_list>(<argument><expr><literal type="string">"path"</literal></expr></argument>, <argument><expr><literal type="string">".*"</literal></expr></argument>,
      <argument><expr><literal type="string">"A string that represents a filesystem path, which can be either relative or absolute to some directory. The filesystem depends on the property."</literal></expr></argument>)</argument_list></call><operator>,</operator>
      <literal type="string">"A string that represents a filesystem path, which can be either relative or absolute to some directory. The filesystem depends on the property.  The following environment variables will be substituted: "</literal> <operator>+</operator> <name><name>Constants</name><operator>.</operator><name>PATH_PROPERTY_ENV_VARS</name></name>)</block></expr><operator>,</operator>
   <expr><call><name>ABSOLUTEPATH</name><argument_list>(<argument><expr><literal type="string">"absolute path"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>,
       <argument><expr><literal type="string">"An absolute filesystem path. The filesystem depends on the property. This is the same as path, but enforces that its root is explicitly specified."</literal></expr></argument>)</argument_list></call> <block>{
     @<expr><name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0552e7e6e</literal><operator>..</operator><literal type="number">45708a8c0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">70</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">70</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Credentials</name> <block>{
    <expr><operator>*</operator> <name>Converts</name> <name>the</name> <name>current</name> <name>object</name> <name>to</name> <name>a</name> <name>serialized</name> <name><name>form</name><operator>.</operator> <name>The</name></name> <name>object</name> <name>returned</name> <name>from</name> <name>this</name> <name>contains</name> <name>a</name> <name>non</name><operator>-</operator><name>destroyable</name> <name>version</name> <name>of</name> <name>the</name> <block>{@<expr><name>link</name> <name>AuthenticationToken</name></expr>}</block></expr>, <expr><name>so</name>
    <operator>*</operator> <name>references</name> <name>to</name> <name>it</name> <name>should</name> <name>be</name> <name>tightly</name> <name><name>controlled</name><operator>.</operator></name>
    *<operator>/</operator>
  <specifier>public</specifier> <name>final</name> <name>String</name> <call><name>serialize</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>AccumuloSecurityException</name> <block>{
  <expr><specifier>public</specifier> <name>final</name> <name>String</name> <call><name>serialize</name><argument_list>()</argument_list></call> <block>{</block></expr></block></expr></argument></throws></expr>
     <return>return <expr><operator>(</operator><call><name>getPrincipal</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>?</operator> <literal type="string">"-"</literal> <operator>:</operator> <call><name><name>Base64</name><operator>.</operator><name>encodeBase64String</name></name><argument_list>(<argument><expr><call><name>getPrincipal</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>UTF8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator> <operator>+</operator> <literal type="string">":"</literal>
         <operator>+</operator> <operator>(</operator><call><name>getToken</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>?</operator> <literal type="string">"-"</literal> <operator>:</operator> <call><name><name>Base64</name><operator>.</operator><name>encodeBase64String</name></name><argument_list>(<argument><expr><call><name>getToken</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>Constants</name><operator>.</operator><name>UTF8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator> <operator>+</operator> <literal type="string">":"</literal>
         <operator>+</operator> <operator>(</operator><call><name>getToken</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>?</operator> <literal type="string">"-"</literal> <operator>:</operator> <call><name><name>Base64</name><operator>.</operator><name>encodeBase64String</name></name><argument_list>(<argument><expr><call><name><name>AuthenticationTokenSerializer</name><operator>.</operator><name>serialize</name></name><argument_list>(<argument><expr><call><name>getToken</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8add1a7ac</literal><operator>..</operator><literal type="number">4ffcc36d7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal><operator>,</operator><literal type="number">13</literal> <operator>+</operator><literal type="number">37</literal><operator>,</operator><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SecurityUtil</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>serverLogin</name><argument_list>()</argument_list></call> <block>{
     @<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></call>
     <name>AccumuloConfiguration</name> <name>acuConf</name> <operator>=</operator> <call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getSiteConfiguration</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>String</name> <name>keyTab</name> <operator>=</operator> <call><name><name>acuConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_KERBEROS_KEYTAB</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>String</name> <name>keyTab</name> <operator>=</operator> <call><name><name>acuConf</name><operator>.</operator><name>getPath</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_KERBEROS_KEYTAB</name></name></expr></argument>)</argument_list></call></expr>;
     <if_stmt><if>if <condition>(<expr><name>keyTab</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>keyTab</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
       <return>return;</return></block_content></block></if></if_stmt>
     
     <name>usingKerberos</name> <operator>=</operator> <literal type="boolean">true</literal></block></expr>;
    <if_stmt><if>if <condition>(<expr><call><name><name>keyTab</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"$ACCUMULO_HOME"</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"ACCUMULO_HOME"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><name>keyTab</name> <operator>=</operator> <call><name><name>keyTab</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"$ACCUMULO_HOME"</literal></expr></argument>, <argument><expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"ACCUMULO_HOME"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     
     <name>String</name> <name>principalConfig</name> <operator>=</operator> <call><name><name>acuConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_KERBEROS_PRINCIPAL</name></name></expr></argument>)</argument_list></call></block></block></expr>;
     <if_stmt><if>if <condition>(<expr><name>principalConfig</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>principalConfig</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SslConnectionParams</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SslConnectionParams</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..6fde38a43</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SslConnectionParams</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">205</literal> @@</expr></expr_stmt></block_content></block></if></if_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name></name>;</package></block></expr>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSSLTransportFactory</name><operator>.</operator><name>TSSLTransportParameters</name></name>;</import>

<class><specifier>public</specifier> class <name>SslConnectionParams</name>  <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>SslConnectionParams</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>useJsse</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>clientAuth</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>keyStoreSet</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>keyStorePath</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>keyStorePass</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>keyStoreType</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>trustStoreSet</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>trustStorePath</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>trustStorePass</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>trustStoreType</name></decl>;</decl_stmt>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>SslConnectionParams</name></type> <name>forConfig</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>server</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>conf</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><literal type="null">null</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SslConnectionParams</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>SslConnectionParams</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>requireClientAuth</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_CLIENT_AUTH</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>server</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>setClientAuth</name></name><argument_list>(<argument><expr><name>requireClientAuth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>conf</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_USE_JSSE</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>setUseJsse</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <try>try <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>server</name> <operator>||</operator> <name>requireClientAuth</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>setTrustStoreFromConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>server</name> <operator>||</operator> <name>requireClientAuth</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>setKeyStoreFromConf</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Could not load configured keystore file"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>

    <return>return <expr><name>result</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>passwordFromConf</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>defaultPassword</name></decl></parameter>, <parameter><decl><type><name>Property</name></type> <name>passwordOverrideProperty</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>keystorePassword</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>passwordOverrideProperty</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>keystorePassword</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Using explicit SSL private key password from "</literal> <operator>+</operator> <call><name><name>passwordOverrideProperty</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>keystorePassword</name> <operator>=</operator> <name>defaultPassword</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return>return <expr><name>keystorePassword</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>storePathFromConf</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>Property</name></type> <name>pathProperty</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>findKeystore</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>getPath</name></name><argument_list>(<argument><expr><name>pathProperty</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setKeyStoreFromConf</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>keyStoreSet</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>keyStorePath</name> <operator>=</operator> <call><name>storePathFromConf</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PATH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>keyStorePass</name> <operator>=</operator> <call><name>passwordFromConf</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_SECRET</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>keyStoreType</name> <operator>=</operator> <call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setTrustStoreFromConf</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>trustStoreSet</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>trustStorePath</name> <operator>=</operator> <call><name>storePathFromConf</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_PATH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>trustStorePass</name> <operator>=</operator> <call><name>passwordFromConf</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>trustStoreType</name> <operator>=</operator> <call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>SslConnectionParams</name></type> <name>forServer</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>configuration</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>forConfig</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>SslConnectionParams</name></type> <name>forClient</name><parameter_list>(<parameter><decl><type><name>AccumuloConfiguration</name></type> <name>configuration</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>forConfig</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>findKeystore</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>keystorePath</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <comment type="line">// first just try the file</comment>
      <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>keystorePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><call><name><name>file</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>file</name><operator>.</operator><name>isAbsolute</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <comment type="line">// try classpath</comment>
        <decl_stmt><decl><type><name>URL</name></type> <name>url</name> <init>= <expr><call><name><name>SslConnectionParams</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getClassLoader</name></name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResource</name><argument_list>(<argument><expr><name>keystorePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>url</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>url</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
              <return>return <expr><call><name><name>file</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Exception finding keystore"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
    <throw>throw <expr><operator>new</operator> <call><name>FileNotFoundException</name><argument_list>(<argument><expr><literal type="string">"Failed to load SSL keystore from "</literal> <operator>+</operator> <name>keystorePath</name></expr></argument>)</argument_list></call></expr>;</throw>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setUseJsse</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>useJsse</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>useJsse</name></name> <operator>=</operator> <name>useJsse</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>useJsse</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>useJsse</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setClientAuth</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>clientAuth</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>clientAuth</name></name> <operator>=</operator> <name>clientAuth</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isClientAuth</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>clientAuth</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>TSSLTransportParameters</name></type> <name>getTTransportParams</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>useJsse</name></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Cannot get TTransportParams for JSEE configuration."</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>TSSLTransportParameters</name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name>TSSLTransportParameters</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>requireClientAuth</name></name><argument_list>(<argument><expr><name>clientAuth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>keyStoreSet</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>setKeyStore</name></name><argument_list>(<argument><expr><name>keyStorePath</name></expr></argument>, <argument><expr><name>keyStorePass</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>keyStoreType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>trustStoreSet</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>setTrustStore</name></name><argument_list>(<argument><expr><name>trustStorePath</name></expr></argument>, <argument><expr><name>trustStorePass</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>trustStoreType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>params</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>hash</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>hash</name> <operator>=</operator> <literal type="number">31</literal><operator>*</operator><name>hash</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>clientAuth</name></expr>?</condition><then><expr><literal type="number">0</literal></expr></then><else>:<expr><literal type="number">1</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name>hash</name> <operator>=</operator> <literal type="number">31</literal><operator>*</operator><name>hash</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>useJsse</name></expr>?</condition><then><expr><literal type="number">0</literal></expr></then><else>:<expr><literal type="number">1</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>useJsse</name></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><name>hash</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name>hash</name> <operator>=</operator> <literal type="number">31</literal><operator>*</operator><name>hash</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>keyStoreSet</name></expr>?</condition><then><expr><literal type="number">0</literal></expr></then><else>:<expr><literal type="number">1</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name>hash</name> <operator>=</operator> <literal type="number">31</literal><operator>*</operator><name>hash</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>trustStoreSet</name></expr>?</condition><then><expr><literal type="number">0</literal></expr></then><else>:<expr><literal type="number">1</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>keyStoreSet</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>hash</name> <operator>=</operator> <literal type="number">31</literal><operator>*</operator><name>hash</name> <operator>+</operator> <call><name><name>keyStorePath</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>trustStoreSet</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>hash</name> <operator>=</operator> <literal type="number">31</literal><operator>*</operator><name>hash</name> <operator>+</operator> <call><name><name>trustStorePath</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>super</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>obj</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>obj</name> <operator>instanceof</operator> <name>SslConnectionParams</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SslConnectionParams</name></type> <name>other</name> <init>= <expr><operator>(</operator><name>SslConnectionParams</name><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>clientAuth</name> <operator>!=</operator> <name><name>other</name><operator>.</operator><name>clientAuth</name></name></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>useJsse</name></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><name><name>other</name><operator>.</operator><name>useJsse</name></name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>keyStoreSet</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>other</name><operator>.</operator><name>keyStoreSet</name></name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>keyStorePath</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>keyStorePath</name></name></expr></argument>)</argument_list></call> <operator>||</operator>
          <operator>!</operator><call><name><name>keyStorePass</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>keyStorePass</name></name></expr></argument>)</argument_list></call> <operator>||</operator>
          <operator>!</operator><call><name><name>keyStoreType</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>keyStoreType</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>trustStoreSet</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>other</name><operator>.</operator><name>trustStoreSet</name></name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>trustStorePath</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>trustStorePath</name></name></expr></argument>)</argument_list></call> <operator>||</operator>
          <operator>!</operator><call><name><name>trustStorePass</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>trustStorePass</name></name></expr></argument>)</argument_list></call> <operator>||</operator>
          <operator>!</operator><call><name><name>trustStoreType</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>trustStoreType</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<decl><name>diff</name> --<name>git</name> <name>a</name>/<name>core</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>accumulo</name>/<name>core</name>/<name>util</name>/<name><name>ThriftUtil</name><operator>.</operator><name>java</name></name> <name>b</name>/<name>core</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>accumulo</name>/<name>core</name>/<name>util</name>/<name><name>ThriftUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e8dd6a29a</name>..<name>fab02b241</name> 100644
-- <name>a</name>/<name>core</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>accumulo</name>/<name>core</name>/<name>util</name>/<name><name>ThriftUtil</name><operator>.</operator><name>java</name></name>
++ <name>b</name>/<name>core</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>accumulo</name>/<name>core</name>/<name>util</name>/<name><name>ThriftUtil</name><operator>.</operator><name>java</name></name>
@@ -17</decl>,6 +17,7 @@
 package <decl><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name></name></decl>;
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetAddress</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TMessage</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocol</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>protocol</name><operator>.</operator><name>TProtocolFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TFramedTransport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSSLTransportFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TServerSocket</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSocket</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransport</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransportException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransportFactory</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>net</name><operator>.</operator><name>HostAndPort</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>ThriftUtil</name> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>ThriftUtil</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  

   <class><specifier>public</specifier> <specifier>static</specifier> class <name>TraceProtocol</name> <super_list><extends>extends <super><name>TCompactProtocol</name></super></extends></super_list> <block>{
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>writeMessageBegin</name><parameter_list>(<parameter><decl><type><name>TMessage</name></type> <name>message</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TException</name></expr></argument></throws> <block>{<block_content>
       <expr_stmt><expr><call><name><name>Trace</name><operator>.</operator><name>start</name></name><argument_list>(<argument><expr><literal type="string">"client:"</literal> <operator>+</operator> <name><name>message</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>writeMessageBegin</name></name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>writeMessageEnd</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>TException</name></expr></argument></throws> <block>{<block_content>
       <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>writeMessageEnd</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">63</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">65</literal> @@ <specifier>public</specifier> <name>class</name> <name>ThriftUtil</name> <block>{
       <if_stmt><if>if <condition>(<expr><name>currentTrace</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
         <expr_stmt><expr><call><name><name>currentTrace</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     }</block></expr></expr_stmt>
    

     <constructor><specifier>public</specifier> <name>TraceProtocol</name><parameter_list>(<parameter><decl><type><name>TTransport</name></type> <name>transport</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></constructor>
   </block_content>}</block></function>
  

   <class><specifier>public</specifier> <specifier>static</specifier> class <name>TraceProtocolFactory</name> <super_list><extends>extends <super><name><name>TCompactProtocol</name><operator>.</operator><name>Factory</name></name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">1L</literal></expr></init></decl>;</decl_stmt>
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>TProtocol</name></type> <name>getProtocol</name><parameter_list>(<parameter><decl><type><name>TTransport</name></type> <name>trans</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>TraceProtocol</name><argument_list>(<argument><expr><name>trans</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
   }</block></class>
  

   <decl_stmt><decl><type><specifier>static</specifier> <specifier>private</specifier> <name>TProtocolFactory</name></type> <name>protocolFactory</name> <init>= <expr><operator>new</operator> <call><name>TraceProtocolFactory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>static</specifier> <specifier>private</specifier> <name>TTransportFactory</name></type> <name>transportFactory</name> <init>= <expr><operator>new</operator> <call><name><name>TFramedTransport</name><operator>.</operator><name>Factory</name></name><argument_list>(<argument><expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  

   <function><type><specifier>static</specifier> <specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TServiceClient</name></extends></parameter>&gt;</parameter_list> <name>T</name></type> <name>createClient</name><parameter_list>(<parameter><decl><type><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>factory</name></decl></parameter>, <parameter><decl><type><name>TTransport</name></type> <name>transport</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><call><name><name>factory</name><operator>.</operator><name>getClient</name></name><argument_list>(<argument><expr><call><name><name>protocolFactory</name><operator>.</operator><name>getProtocol</name></name><argument_list>(<argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>protocolFactory</name><operator>.</operator><name>getProtocol</name></name><argument_list>(<argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
  

   <function><type><specifier>static</specifier> <specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TServiceClient</name></extends></parameter>&gt;</parameter_list> <name>T</name></type> <name>getClient</name><parameter_list>(<parameter><decl><type><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>factory</name></decl></parameter>, <parameter><decl><type><name>HostAndPort</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>)</parameter_list>
       <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
     <return>return <expr><call><name>createClient</name><argument_list>(<argument><expr><name>factory</name></expr></argument>, <argument><expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransportWithDefaultTimeout</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
  
  <function><type><specifier>static</specifier> <specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TServiceClient</name></extends></parameter>&gt;</parameter_list> <name>T</name></type> <name>getClientNoTimeout</name><parameter_list>(<parameter><decl><type><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>factory</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>createClient</name><argument_list>(<argument><expr><name>factory</name></expr></argument>, <argument><expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
  
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>public</specifier> <argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>TServiceClient</name></extends></argument>&gt;</argument_list> <name>T</name></type> <name>getClient</name><argument_list>(<argument><expr><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <name>factory</name></expr></argument>, <argument><expr><name>String</name> <name>address</name></expr></argument>, <argument><expr><name>Property</name> <name>property</name></expr></argument>, <argument><expr><name>AccumuloConfiguration</name> <name>configuration</name></expr></argument>)</argument_list>

  static public <argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>TServiceClient</name></extends></argument>&gt;</argument_list> <name>T</name> <name>getClientNoTimeout</name><argument_list>(<argument><expr><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <name>factory</name></expr></argument>, <argument><expr><name>String</name> <name>address</name></expr></argument>, <argument><expr><name>AccumuloConfiguration</name> <name>configuration</name></expr></argument>)</argument_list>
       <throws>throws <argument><expr><name>TTransportException</name> <block>{
    <expr><name>long</name> <name>timeout</name> <operator>=</operator> <call><name><name>configuration</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><name>property</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>TTransport</name></type> <name>transport</name> <init>= <expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name>getClient</name><argument_list>(<argument><expr><name>factory</name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>configuration</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></class>

  <function><type><specifier>static</specifier> <specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TServiceClient</name></extends></parameter>&gt;</parameter_list> <name>T</name></type> <name>getClient</name><parameter_list>(<parameter><decl><type><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>factory</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>Property</name></type> <name>timeoutProperty</name></decl></parameter>,
      <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>configuration</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>timeout</name> <init>= <expr><call><name><name>configuration</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><name>timeoutProperty</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>TTransport</name></type> <name>transport</name> <init>= <expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><call><name><name>SslConnectionParams</name><operator>.</operator><name>forClient</name></name><argument_list>(<argument><expr><name>configuration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name>createClient</name><argument_list>(<argument><expr><name>factory</name></expr></argument>, <argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
  
  <function><type><specifier>static</specifier> <specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TServiceClient</name></extends></parameter>&gt;</parameter_list> <name>T</name></type> <name>getClient</name><parameter_list>(<parameter><decl><type><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>factory</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>timeout</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>TTransport</name></type> <name>transport</name> <init>= <expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><type><specifier>static</specifier> <specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TServiceClient</name></extends></parameter>&gt;</parameter_list> <name>T</name></type> <name>getClient</name><parameter_list>(<parameter><decl><type><name><name>TServiceClientFactory</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>factory</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>timeout</name></decl></parameter>, <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>configuration</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>TTransport</name></type> <name>transport</name> <init>= <expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><call><name><name>SslConnectionParams</name><operator>.</operator><name>forClient</name></name><argument_list>(<argument><expr><name>configuration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name>createClient</name><argument_list>(<argument><expr><name>factory</name></expr></argument>, <argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
  

   <function><type><specifier>static</specifier> <specifier>public</specifier> <name>void</name></type> <name>returnClient</name><parameter_list>(<parameter><decl><type><name>TServiceClient</name></type> <name>iface</name></decl></parameter>)</parameter_list> <block>{<block_content> <comment type="line">// Eew... the typing here is horrible</comment>
     <if_stmt><if>if <condition>(<expr><name>iface</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>returnTransport</name><argument_list>(<argument><expr><call><name><name>iface</name><operator>.</operator><name>getInputProtocol</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
   </block_content>}</block></function>
  

   <function><type><specifier>static</specifier> <specifier>public</specifier> <name><name>TabletClientService</name><operator>.</operator><name>Client</name></name></type> <name>getTServerClient</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
     <return>return <expr><call><name>getClient</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>TabletClientService</name><operator>.</operator><name>Client</name><operator>.</operator><name>Factory</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_RPC_TIMEOUT</name></name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
  
  <function><type><specifier>static</specifier> <specifier>public</specifier> <name><name>TabletClientService</name><operator>.</operator><name>Client</name></name></type> <name>getTServerClient</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>timeout</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getClient</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>TabletClientService</name><operator>.</operator><name>Client</name><operator>.</operator><name>Factory</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr>;</return>

  <function><type><specifier>static</specifier> <specifier>public</specifier> <name><name>TabletClientService</name><operator>.</operator><name>Client</name></name></type> <name>getTServerClient</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>timeout</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getClient</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>TabletClientService</name><operator>.</operator><name>Client</name><operator>.</operator><name>Factory</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
  

   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name><name>ClientExec</name><argument_list type="generic">&lt;<argument><name><name>TabletClientService</name><operator>.</operator><name>Client</name></name></argument>&gt;</argument_list></name></type> <name>exec</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>,
       <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws> <block>{<block_content>
     <while>while <condition>(<expr><literal type="boolean">true</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">147</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ThriftUtil</name> <block>{
       }</block></expr></expr_stmt>
     </block_content>}</block></while>
   </block_content>}</block></function>
  

   <function><type><specifier>public</specifier> <specifier>static</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name></parameter>&gt;</parameter_list> <name>T</name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><name><name>ClientExecReturn</name><argument_list type="generic">&lt;<argument><name>T</name></argument>,<argument><name><name>TabletClientService</name><operator>.</operator><name>Client</name></name></argument>&gt;</argument_list></name></type> <name>exec</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>,
       <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws> <block>{<block_content>
     <while>while <condition>(<expr><literal type="boolean">true</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">161</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>ThriftUtil</name> <block>{
       }</block></expr></expr_stmt>
     </block_content>}</block></while>
   </block_content>}</block></function>
  

   <comment type="block" format="javadoc">/**
    * create a transport that is not pooled
    */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>TTransport</name></type> <name>createTransport</name><parameter_list>(<parameter><decl><type><name>HostAndPort</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>TTransport</name></type> <name>transport</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>TTimeoutTransport</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_RPC_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>ThriftUtil</name><operator>.</operator><name>transportFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>transport</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>TTransport</name></type> <name>tmp</name> <init>= <expr><name>transport</name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>transport</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <return>return <expr><name>tmp</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>TTransportException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>transport</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>transport</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></finally></try>
    <return>return <expr><call><name>createClientTransport</name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name><name>conf</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>GENERAL_RPC_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>SslConnectionParams</name><operator>.</operator><name>forClient</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>TTransportFactory</name></type> <name>transportFactory</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>transportFactory</name></expr>;</return>
   </block_content>}</block></function>
  

   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>,<argument><name>TTransportFactory</name></argument>&gt;</argument_list></name></type> <name>factoryCache</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>,<argument><name>TTransportFactory</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  

   <function><type><specifier>synchronized</specifier> <specifier>public</specifier> <specifier>static</specifier> <name>TTransportFactory</name></type> <name>transportFactory</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>maxFrameSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>TTransportFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>factoryCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>maxFrameSize</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>factory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">59</literal> @@ <specifier>public</specifier> <name>class</name> <name>ThriftUtil</name> <block>{
     }</block></expr></expr_stmt>
     <return>return <expr><name>factory</name></expr>;</return>
   </block_content>}</block></if></if_stmt>
  

   <function><type><specifier>synchronized</specifier> <specifier>public</specifier> <specifier>static</specifier> <name>TTransportFactory</name></type> <name>transportFactory</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>maxFrameSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>maxFrameSize</name> <operator>&gt;</operator> <name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name> <operator>||</operator> <name>maxFrameSize</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Thrift transport frames are limited to "</literal> <operator>+</operator> <name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
     <return>return <expr><call><name>transportFactory</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>maxFrameSize</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
  

   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>TProtocolFactory</name></type> <name>protocolFactory</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>protocolFactory</name></expr>;</return>
   </block_content>}</block></function>
  

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>TServerSocket</name></type> <name>getServerSocket</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>, <parameter><decl><type><name>InetAddress</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>SslConnectionParams</name></type> <name>params</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>params</name><operator>.</operator><name>useJsse</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name><name>TSSLTransportFactory</name><operator>.</operator><name>getServerSocket</name></name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><call><name><name>params</name><operator>.</operator><name>isClientAuth</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <return>return <expr><call><name><name>TSSLTransportFactory</name><operator>.</operator><name>getServerSocket</name></name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><call><name><name>params</name><operator>.</operator><name>getTTransportParams</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>

   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name><name>ThriftTransportPool</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>TTransport</name></type> <name>createClientTransport</name><parameter_list>(<parameter><decl><type><name>HostAndPort</name></type> <name>address</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>, <parameter><decl><type><name>SslConnectionParams</name></type> <name>sslParams</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>TTransportException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>TTransport</name></type> <name>transport</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>sslParams</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// TSSLTransportFactory handles timeout 0 -&gt; forever natively</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>sslParams</name><operator>.</operator><name>useJsse</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>TSSLTransportFactory</name><operator>.</operator><name>getClientSocket</name></name><argument_list>(<argument><expr><call><name><name>address</name><operator>.</operator><name>getHostText</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>address</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>TSSLTransportFactory</name><operator>.</operator><name>getClientSocket</name></name><argument_list>(<argument><expr><call><name><name>address</name><operator>.</operator><name>getHostText</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>address</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><call><name><name>sslParams</name><operator>.</operator><name>getTTransportParams</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <comment type="line">// TSSLTransportFactory leaves transports open, so no need to open here</comment>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>timeout</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>transport</name> <operator>=</operator> <operator>new</operator> <call><name>TSocket</name><argument_list>(<argument><expr><call><name><name>address</name><operator>.</operator><name>getHostText</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>address</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transport</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>TTimeoutTransport</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>TTransportException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><call><name><name>transport</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
      <expr_stmt><expr><name>transport</name> <operator>=</operator> <call><name><name>ThriftUtil</name><operator>.</operator><name>transportFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTransport</name><argument_list>(<argument><expr><name>transport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>success</name> <operator>&amp;&amp;</operator> <name>transport</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>transport</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
    <return>return <expr><name>transport</name></expr>;</return>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">52e1d0499</literal><operator>..</operator><name>b51840009</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mock</name><operator>.</operator><name>MockInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>SiteConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TConstraintViolationSummary</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">398</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">401</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>class</name> <name>Shell</name> extends <name>ShellOptions</name> <block>{
         <expr><name>instanceName</name> <operator>=</operator> <call><name><name>options</name><operator>.</operator><name>getZooKeeperInstanceName</name></name><argument_list>()</argument_list></call></expr>;
         <expr><name>hosts</name> <operator>=</operator> <call><name><name>options</name><operator>.</operator><name>getZooKeeperHosts</name></name><argument_list>()</argument_list></call></expr>;
       }</block>
      <name>instance</name> <operator>=</operator> <call><name>getZooInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>hosts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>instance</name> <operator>=</operator> <call><name>getZooInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>hosts</name></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Unable to load client config from "</literal> <operator>+</operator>  <call><name><name>options</name><operator>.</operator><name>getClientConfigFile</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch></try>
     </block_content>}</block></function>
   </block_content>}</block></function>
   
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>Instance</name></type> <name>getZooInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>instanceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keepers</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <comment type="block">/*
   * Takes instanceName and keepers as separate arguments, rather than just packaged into the clientConfig,
   * so that we can fail over to accumulo-site.xml or HDFS config if they're unspecified.
   */</comment>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>Instance</name></type> <name>getZooInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>instanceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keepers</name></decl></parameter>, <parameter><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>UUID</name></type> <name>instanceId</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>instanceName</name> <operator>=</operator> <call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name>keepers</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation>
      <type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getSiteConfiguration</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><call><name><name>SiteConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>getAccumuloConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>instanceName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>Path</name></type> <name>instanceDir</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_DFS_DIR</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"instance_id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><name>instanceId</name> <operator>=</operator> <call><name><name>UUID</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><call><name><name>ZooUtil</name><operator>.</operator><name>getInstanceIDFromHdfs</name></name><argument_list>(<argument><expr><name>instanceDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">416</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">429</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>Shell</name> extends <name>ShellOptions</name> <block>{
       }</block></expr></expr_stmt>
     </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><name>instanceId</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>, <argument><expr><name>keepers</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><name>instanceId</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>keepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if> <else>else <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>keepers</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>keepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></else></if_stmt>
   </block_content>}</block></if></if_stmt>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cb1f1c855</name><operator>..</operator><literal type="number">2f30a8737</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellOptionsJC</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Scanner</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>ConfigurationException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>beust</name><operator>.</operator><name>jcommander</name><operator>.</operator><name>DynamicParameter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">161</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellOptionsJC</name> <block>{
   @<expr><call><name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"-z"</literal></expr>, <expr><literal type="string">"--zooKeeperInstance"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"use a zookeeper instance with the given instance name and list of zoo hosts"</literal></expr></argument>, <argument><expr><name>arity</name> <operator>=</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>zooKeeperInstance</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
   
  @<expr><call><name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--ssl"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"use ssl to connect to accumulo"</literal></expr></argument>)</argument_list></call>
  <specifier>private</specifier> <name>boolean</name> <name>useSsl</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;

  @<expr><call><name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--config-file"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"read the given client config file.  If omitted, the path searched can be specified with $ACCUMULO_CLIENT_CONF_PATH, which defaults to ~/.accumulo/config:$ACCUMULO_CONF_DIR/client.conf:/etc/accumulo/client.conf"</literal></expr></argument>)</argument_list></call>
  <specifier>private</specifier> <name>String</name> <name>clientConfigFile</name> <operator>=</operator> <literal type="null">null</literal></expr>;

   @<expr><call><name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"-zi"</literal></expr>, <expr><literal type="string">"--zooKeeperInstanceName"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name><operator>=</operator><literal type="string">"use a zookeeper instance with the given instance name"</literal></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <name>String</name> <name>zooKeeperInstanceName</name></expr>;
 
@@ <expr><operator>-</operator><literal type="number">247</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">256</literal></expr>,<expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellOptionsJC</name> <block>{
   <expr><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getUnrecognizedOptions</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>unrecognizedOptions</name></expr>;</return></block></expr>
   }</block>

  <specifier>public</specifier> <name>boolean</name> <call><name>useSsl</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>useSsl</name></expr>;</return></block></expr>
  }</block>

  <specifier>public</specifier> <name>String</name> <call><name>getClientConfigFile</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>clientConfigFile</name></expr>;</return>
  }</block></expr></expr_stmt>

  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>getClientConfiguration</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ConfigurationException</name></expr></argument>,
  <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name> <init>= <expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>(<argument><expr><call><name>getClientConfigFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>useSsl</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>clientConfig</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>clientConfig</name></expr>;</return>
  </block_content>}</block></function>

 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>TabletLocatorImplTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>TabletLocatorImplTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8f3fa1dc4</literal><operator>..</operator><literal type="number">7abacb8eb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>TabletLocatorImplTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>TabletLocatorImplTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">445</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">445</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TabletLocatorImplTest</name> extends <name>TestCase</name> <block>{
     }</block>
     
     @<name>Override</name>
    @<name>Deprecated</name>
     <specifier>public</specifier> <name>void</name> <call><name>setConfiguration</name><argument_list>(<argument><expr><name>AccumuloConfiguration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
       <expr><name><name>this</name><operator>.</operator><name>conf</name></name> <operator>=</operator> <name>conf</name></expr>;
     }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">62564faba</literal><operator>..</operator><literal type="number">50fc0a9d9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>client</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>lib</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ConfiguratorBaseTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mock</name><operator>.</operator><name>MockInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name><operator>.</operator><name>AuthenticationTokenSerializer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>codec</name><operator>.</operator><name>binary</name><operator>.</operator><name>Base64</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Level</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">47</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConfiguratorBaseTest</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"file:testFile"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>ConnectorInfo</name><operator>.</operator><name>TOKEN</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></call>
   @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testSetZooKeeperInstance</name><argument_list>()</argument_list></call> <block>{
  <expr><specifier>public</specifier> <name>void</name> <call><name>testSetZooKeeperInstance_legacy</name><argument_list>()</argument_list></call> <block>{
     <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>ZOO_KEEPERS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>ClientConfiguration</name> <name>clientConf</name> <operator>=</operator> <call><name><name>ClientConfiguration</name><operator>.</operator><name>deserialize</name></name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>CLIENT_CONFIG</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>, <argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ZooKeeperInstance</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <comment type="line">// TODO uncomment this after ACCUMULO-1699</comment>
    <comment type="line">// Instance instance = ConfiguratorBase.getInstance(this.getClass(), conf);</comment>
    <comment type="line">// assertEquals(ZooKeeperInstance.class.getName(), instance.getClass().getName());</comment>

    <expr><name>Instance</name> <name>instance</name> <operator>=</operator> <call><name><name>ConfiguratorBase</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ZooKeeperInstance</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>instance</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// Also make sure we can still deserialize job configurations with the old keys</comment>
    <expr><name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>ZooKeeperInstance</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>ZOO_KEEPERS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>instance</name> <operator>=</operator> <call><name><name>ConfiguratorBase</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block>

  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testSetZooKeeperInstance</name><argument_list>()</argument_list></call> <block>{
    <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>withSsl</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkTimeout</name><argument_list>(<argument><expr><literal type="number">1234</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>ClientConfiguration</name> <name>clientConf</name> <operator>=</operator> <call><name><name>ClientConfiguration</name><operator>.</operator><name>deserialize</name></name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>CLIENT_CONFIG</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>, <argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1234"</literal></expr></argument>, <argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ZooKeeperInstance</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>ConfiguratorBase</name><operator>.</operator><name>enumToConfKey</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>ConfiguratorBase</name><operator>.</operator><name>InstanceOpts</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><name>Instance</name> <name>instance</name> <operator>=</operator> <call><name><name>ConfiguratorBase</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ZooKeeperInstance</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>instance</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testInstanceName"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"testZooKeepers"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1234000</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ZooKeeperInstance</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>getZooKeepersSessionTimeOut</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Test</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfigurationTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfigurationTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..55cf9d3a1</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>ClientConfigurationTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr>,<expr><literal type="number">65</literal> @@</expr>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name></name>;</package></block></expr></expr_stmt>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>PropertiesConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<class><specifier>public</specifier> class <name>ClientConfigurationTest</name> <block>{
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testOverrides</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name> <init>= <expr><call><name>createConfig</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertExpectedConfig</name><argument_list>(<argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testSerialization</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name> <init>= <expr><call><name>createConfig</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// sanity check that we're starting with what we're expecting</comment>
    <expr_stmt><expr><call><name>assertExpectedConfig</name><argument_list>(<argument><expr><name>clientConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>serialized</name> <init>= <expr><call><name><name>clientConfig</name><operator>.</operator><name>serialize</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>deserializedClientConfig</name> <init>= <expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>deserialize</name></name><argument_list>(<argument><expr><name>serialized</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertExpectedConfig</name><argument_list>(<argument><expr><name>deserializedClientConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertExpectedConfig</name><parameter_list>(<parameter><decl><type><name>ClientConfiguration</name></type> <name>clientConfig</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"firstZkHosts"</literal></expr></argument>, <argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"secondInstanceName"</literal></expr></argument>, <argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"123s"</literal></expr></argument>, <argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_TYPE</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>clientConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>ClientConfiguration</name></type> <name>createConfig</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>first</name> <init>= <expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>first</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"firstZkHosts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>second</name> <init>= <expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>second</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"secondZkHosts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>second</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"secondInstanceName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>third</name> <init>= <expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>third</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"thirdZkHosts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>third</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"thirdInstanceName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>third</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><call><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_ZK_TIMEOUT</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"123s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>first</name></expr></argument>, <argument><expr><name>second</name></expr></argument>, <argument><expr><name>third</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">23ca13a7b</literal><operator>..</operator><literal type="number">5ce132043</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>ShellSetInstanceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>jline</name><operator>.</operator><name>console</name><operator>.</operator><name>ConsoleReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mock</name><operator>.</operator><name>MockInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name><operator>.</operator><name>ClientProperty</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ConfigSanityCheck</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Level</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>powermock</name><operator>.</operator><name>core</name><operator>.</operator><name>classloader</name><operator>.</operator><name>annotations</name><operator>.</operator><name>PrepareForTest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>powermock</name><operator>.</operator><name>modules</name><operator>.</operator><name>junit4</name><operator>.</operator><name>PowerMockRunner</name></name>;</import>
 
 <class><annotation>@<name>RunWith</name><argument_list>(<argument><expr><name><name>PowerMockRunner</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<annotation>@<name>PrepareForTest</name><argument_list>(<argument><expr><block>{<expr><name><name>Shell</name><operator>.</operator><name>class</name></name></expr>, <argument><expr><name><name>AccumuloConfiguration</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name><name>ZooUtil</name><operator>.</operator><name>class</name></name></expr></argument>}</block></expr></argument>)</argument_list></annotation>
<annotation>@<name>PrepareForTest</name><argument_list>(<argument><expr><block>{<expr><name><name>Shell</name><operator>.</operator><name>class</name></name></expr>, <argument><expr><name><name>ZooUtil</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name><name>ConfigSanityCheck</name><operator>.</operator><name>class</name></name></expr></argument>}</block></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>ShellSetInstanceTest</name> <block>{
   <class><specifier>public</specifier> <specifier>static</specifier> class <name>TestOutputStream</name> <super_list><extends>extends <super><name>OutputStream</name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><name>StringBuilder</name></type> <name>sb</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">38</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">49</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellSetInstanceTest</name> <block>{
     <expr><call><name>testSetInstance_HdfsZooInstance</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
   }</block>
   
  @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <name>void</name> <call><name>testSetInstance_HdfsZooInstance</name><argument_list>(<argument><expr><name>boolean</name> <name>explicitHdfs</name></expr></argument>, <argument><expr><name>boolean</name> <name>onlyInstance</name></expr></argument>, <argument><expr><name>boolean</name> <name>onlyHosts</name></expr></argument>)</argument_list></call>
     <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ClientConfiguration</name> <name>clientConf</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>ClientConfiguration</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <decl_stmt><decl><type><name>ShellOptionsJC</name></type> <name>opts</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>ShellOptionsJC</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>isFake</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>isHdfsZooInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>explicitHdfs</name></expr></argument>)</argument_list></call></expr>;
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>explicitHdfs</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name><operator>&gt;</operator><call><name>emptyList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>onlyInstance</name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"instance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><literal type="string">"instance"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
       <if_stmt><if>if <condition>(<expr><name>onlyHosts</name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperHosts</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperHosts</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
     </block_content>}</block></if></if_stmt>
     <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name>opts</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>onlyInstance</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ClientProperty</name><operator>.</operator><name>INSTANCE_NAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

     <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>conf</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>AccumuloConfiguration</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <constructor_decl><name>mockStatic</name><parameter_list>(<parameter><decl><type><name><name>AccumuloConfiguration</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getSiteConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name><name>AccumuloConfiguration</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>getAccumuloConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;

    <constructor_decl><name>mockStatic</name><parameter_list>(<parameter><decl><type><name><name>ConfigSanityCheck</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <expr><call><name><name>ConfigSanityCheck</name><operator>.</operator><name>validate</name></name><argument_list>(<argument><expr><name><name>EasyMock</name><operator>.</operator></name>&lt;<name>AccumuloConfiguration</name><operator>&gt;</operator><call><name>anyObject</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <constructor_decl><name>expectLastCall</name><parameter_list>()</parameter_list>;</constructor_decl>
    <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name><name>ConfigSanityCheck</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>onlyHosts</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>onlyInstance</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_DFS_DIR</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"/dfs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_DFS_DIR</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"/dfs"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
     <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name>conf</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <decl_stmt><decl><type><name>UUID</name></type> <name>randomUUID</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellSetInstanceTest</name> <block>{
       <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>ZooUtil</name><operator>.</operator><name>getInstanceIDFromHdfs</name></name><argument_list>(<argument><expr><call><name>anyObject</name><argument_list>(<argument><expr><name><name>Path</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>randomUUID</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <expr><call><name>replay</name><argument_list>(<argument><expr><name><name>ZooUtil</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><name>randomUUID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;
     }</block>
    <call><name>replay</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;
 
     <decl_stmt><decl><type><name>ZooKeeperInstance</name></type> <name>theInstance</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
    <decl_stmt><decl><type><name>String</name></type> <name>expectedHosts</name> <init>= <expr><literal type="string">"host1,host2"</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>onlyHosts</name></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><name>expectedHosts</name> <operator>=</operator> <literal type="string">"host3,host4"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>onlyInstance</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>expectNew</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>randomUUID</name></expr></argument>, <argument><expr><name>expectedHosts</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>theInstance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name>expectNew</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"instance"</literal></expr></argument>, <argument><expr><name>expectedHosts</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>theInstance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr><call><name>expectNew</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>theInstance</name></expr></argument>)</argument_list></call></expr>;
     <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name>theInstance</name></type></decl></parameter>, <parameter><decl><type><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
     <constructor_decl><name><name>shell</name><operator>.</operator><name>setInstance</name></name><parameter_list>(<parameter><decl><type><name>opts</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">28</literal> <operator>+</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellSetInstanceTest</name> <block>{
     <expr><call><name>testSetInstance_ZKInstance</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
   }</block>
   <specifier>private</specifier> <name>void</name> <call><name>testSetInstance_ZKInstance</name><argument_list>(<argument><expr><name>boolean</name> <name>dashZ</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ClientConfiguration</name> <name>clientConf</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>ClientConfiguration</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <decl_stmt><decl><type><name>ShellOptionsJC</name></type> <name>opts</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>ShellOptionsJC</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>isFake</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>isHdfsZooInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <if_stmt><if>if <condition>(<expr><name>dashZ</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>zl</name> <init>= <expr><operator>new</operator> <call><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>zl</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>zl</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>zl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withInstance</name></name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clientConf</name><operator>.</operator><name>withZkHosts</name></name><argument_list>(<argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name><operator>&gt;</operator><call><name>emptyList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>opts</name><operator>.</operator><name>getZooKeeperHosts</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
    <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name>clientConf</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name>opts</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
     <decl_stmt><decl><type><name>ZooKeeperInstance</name></type> <name>theInstance</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>dashZ</name></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name>expectNew</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"host1,host2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>theInstance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else>else<block type="pseudo"><block_content>
      <expr_stmt><expr><call><name>expectNew</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>, <argument><expr><literal type="string">"host3,host4"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>theInstance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr><call><name>expectNew</name><argument_list>(<argument><expr><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>theInstance</name></expr></argument>)</argument_list></call></expr>;
     <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name>theInstance</name></type></decl></parameter>, <parameter><decl><type><name><name>ZooKeeperInstance</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
     <constructor_decl><name><name>shell</name><operator>.</operator><name>setInstance</name></name><parameter_list>(<parameter><decl><type><name>opts</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>filedata</name><operator>/</operator><name><name>FileDataQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>filedata</name><operator>/</operator><name><name>FileDataQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ecb42c767</name><operator>..</operator><name>a66438eeb</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>filedata</name><operator>/</operator><name><name>FileDataQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>filedata</name><operator>/</operator><name><name>FileDataQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Scanner</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Range</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileDataQuery</name> <block>{
   
   <expr><specifier>public</specifier> <call><name>FileDataQuery</name><argument_list>(<argument><expr><name>String</name> <name>instanceName</name></expr></argument>, <argument><expr><name>String</name> <name>zooKeepers</name></expr></argument>, <argument><expr><name>String</name> <name>user</name></expr></argument>, <argument><expr><name>AuthenticationToken</name> <name>token</name></expr></argument>, <argument><expr><name>String</name> <name>tableName</name></expr></argument>, <argument><expr><name>Authorizations</name> <name>auths</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>,
       <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>TableNotFoundException</name> <block>{
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zooKeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>conn</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>lastRefs</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>,<argument><name>Value</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>cis</name> <operator>=</operator> <operator>new</operator> <call><name>ChunkInputStream</name><argument_list>()</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TokenFileWordCount</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TokenFileWordCount</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">16e0356e2</literal><operator>..</operator><literal type="number">1114a7e9f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TokenFileWordCount</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>examples</name><operator>/</operator><name>simple</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TokenFileWordCount</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>examples</name><operator>.</operator><name>simple</name><operator>.</operator><name>mapreduce</name></name>;</package></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>AccumuloOutputFormat</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Mutation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>CachedConfiguration</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TokenFileWordCount</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
     <expr><call><name><name>job</name><operator>.</operator><name>setOutputValueClass</name></name><argument_list>(<argument><expr><name><name>Mutation</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     
     <comment type="line">// AccumuloInputFormat not used here, but it uses the same functions.</comment>
    <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>instance</name></expr></argument>, <argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instance</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setConnectorInfo</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>tokenFile</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setCreateTables</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setDefaultTableName</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloCluster</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloCluster</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">42882bb82</literal><operator>..</operator><literal type="number">8e7e2ba73</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloCluster</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloCluster</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">48</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">48</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Instance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>master</name><operator>.</operator><name>thrift</name><operator>.</operator><name>MasterGoalState</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>Daemon</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>init</name><operator>.</operator><name>Initialize</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>util</name><operator>.</operator><name>PortUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>util</name><operator>.</operator><name>time</name><operator>.</operator><name>SimpleTimer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>start</name><operator>.</operator><name>Main</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>configuration</name><operator>.</operator><name>MapConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>start</name><operator>.</operator><name>classloader</name><operator>.</operator><name>vfs</name><operator>.</operator><name>MiniDFSUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>tserver</name><operator>.</operator><name>TabletServer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileUtils</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>DFSConfigKeys</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>MiniDFSCluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>server</name><operator>.</operator><name>ZooKeeperServerMain</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Predicate</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Maps</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * A utility class that will create Zookeeper and Accumulo processes that write all of their data to a single local directory. This class makes it easy to test
  * code against a real Accumulo instance. Its much more accurate for testing than {@link org.apache.accumulo.core.client.mock.MockAccumulo}, but much slower.
@@ -232,6 +237,9 @@ public class MiniAccumuloCluster {
     argList.addAll(Arrays.asList(javaBin, "-Dproc=" + clazz.getSimpleName(), "-cp", classpath));
     argList.add("-Djava.library.path=" + config.getLibDir());
     argList.addAll(extraJvmOpts);
    for (Entry&lt;String,String&gt; sysProp : config.getSystemProperties().entrySet()) {
      argList.add(String.format("-D%s=%s", sysProp.getKey(), sysProp.getValue()));
    }
     argList.addAll(Arrays.asList("-XX:+UseConcMarkSweepGC", "-XX:CMSInitiatingOccupancyFraction=75", Main.class.getName(), className));
     argList.addAll(Arrays.asList(args));
 
@@ -239,6 +247,15 @@ public class MiniAccumuloCluster {
 
     builder.environment().put("ACCUMULO_HOME", config.getDir().getAbsolutePath());
     builder.environment().put("ACCUMULO_LOG_DIR", config.getLogDir().getAbsolutePath());
    builder.environment().put("ACCUMULO_CLIENT_CONF_PATH", config.getClientConfFile().getAbsolutePath());

    // if we're running under accumulo.start, we forward these env vars
    String env = System.getenv("HADOOP_PREFIX");
    if (env != null)
      builder.environment().put("HADOOP_PREFIX", env);
    env = System.getenv("ZOOKEEPER_HOME");
    if (env != null)
      builder.environment().put("ZOOKEEPER_HOME", env);
     builder.environment().put("ACCUMULO_CONF_DIR", config.getConfDir().getAbsolutePath());
     // hadoop-2.2 puts error messages in the logs if this is not set
     builder.environment().put("HADOOP_HOME", config.getDir().getAbsolutePath());
@@ -333,19 +350,19 @@ public class MiniAccumuloCluster {
       dfsUri = "file://";
     }
 
    File clientConfFile = config.getClientConfFile();
    // Write only the properties that correspond to ClientConfiguration properties
    writeConfigProperties(clientConfFile, Maps.filterEntries(config.getSiteConfig(), new Predicate&lt;Entry&lt;String,String&gt;&gt;() {
      public boolean apply(Entry&lt;String,String&gt; v) {
        return ClientConfiguration.ClientProperty.getPropertyByKey(v.getKey()) != null;
      }
    }));

     File siteFile = new File(config.getConfDir(), "accumulo-site.xml");
     writeConfig(siteFile, config.getSiteConfig().entrySet());
 
    FileWriter fileWriter = new FileWriter(siteFile);
    fileWriter.append("&lt;configuration&gt;\n");

    for (Entry&lt;String,String&gt; entry : config.getSiteConfig().entrySet())
      fileWriter.append("&lt;property&gt;&lt;name&gt;" + entry.getKey() + "&lt;/name&gt;&lt;value&gt;" + entry.getValue() + "&lt;/value&gt;&lt;/property&gt;\n");
    fileWriter.append("&lt;/configuration&gt;\n");
    fileWriter.close();

     zooCfgFile = new File(config.getConfDir(), "zoo.cfg");
    fileWriter = new FileWriter(zooCfgFile);
    FileWriter fileWriter = new FileWriter(zooCfgFile);
 
     // zookeeper uses Properties to read its config, so use that to write in order to properly escape things like Windows paths
     Properties zooCfg = new Properties();
@@ -383,6 +400,13 @@ public class MiniAccumuloCluster {
     fileWriter.append("&lt;/configuration&gt;\n");
     fileWriter.close();
   }
  private void writeConfigProperties(File file, Map&lt;String,String&gt; settings) throws IOException {
    FileWriter fileWriter = new FileWriter(file);

    for (Entry&lt;String,String&gt; entry : settings.entrySet())
      fileWriter.append(entry.getKey() + "=" + entry.getValue() + "\n");
    fileWriter.close();
  }
 
   /**
    * Starts Accumulo and Zookeeper processes. Can only be called once.
@@ -597,10 +621,14 @@ public class MiniAccumuloCluster {
    * @since 1.6.0
    */</comment>
   <function><type><specifier>public</specifier> <name>Connector</name></type> <name>getConnector</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>user</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>passwd</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Instance</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Instance</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name>getClientConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>passwd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>ClientConfiguration</name></type> <name>getClientConfig</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MapConfiguration</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getSiteConfig</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <function><type><specifier>public</specifier> <name>FileSystem</name></type> <name>getFileSystem</name><parameter_list>()</parameter_list> <block>{<block_content>
     <try>try <block>{<block_content>
       <return>return <expr><call><name><name>FileSystem</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>URI</name><argument_list>(<argument><expr><name>dfsUri</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloConfig</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloConfig</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bfa79221d</name><operator>..</operator><literal type="number">5c7050aab</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloConfig</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloConfig</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloConfig</name> <block>{
   <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name> <name>siteConfig</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
   <expr><specifier>private</specifier> <name>int</name> <name>numTservers</name> <operator>=</operator> <literal type="number">2</literal></expr>;
   <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>ServerType</name></argument>,<argument><name>Long</name></argument>&gt;</argument_list></name> <name>memoryConfig</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>ServerType</name></argument>,<argument><name>Long</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

   <expr><specifier>private</specifier> <name>boolean</name> <name>jdwpEnabled</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
  <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name> <name>systemProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
 
   <expr><specifier>private</specifier> <name>String</name> <name>instanceName</name> <operator>=</operator> <literal type="string">"miniInstance"</literal></expr>;
 
@@ <expr><operator>-</operator><literal type="number">359</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">359</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloConfig</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>useMiniDFS</name></name> <operator>=</operator> <name>useMiniDFS</name></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * @return location of client conf file containing connection parameters for connecting to this minicluster
   *
   * @since 1.6.0
   */</comment>
  <specifier>public</specifier> <name>File</name> <call><name>getClientConfFile</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getConfDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"client.conf"</literal></expr></argument>)</argument_list></call></expr>;</return></block></expr>
  }</block>

   <comment type="block" format="javadoc">/**
    * Whether or not the Accumulo garbage collector proces will run
    */</comment>
@@ <operator>-</operator><literal type="number">376</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">385</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloConfig</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/**
   * @return sets system properties set for service processes
   *
   * @since 1.6.0
   */</comment>
  <specifier>public</specifier> <name>void</name> <call><name>setSystemProperties</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name> <name>systemProperties</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>this</name><operator>.</operator><name>systemProperties</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>systemProperties</name></expr></argument>)</argument_list></call></expr>;
  }</block>

  <comment type="block" format="javadoc">/**
   * @return a copy of the system properties for service processes
   *
   * @since 1.6.0
   */</comment>
  <specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getSystemProperties</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>systemProperties</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></expr></expr_stmt>

  <comment type="block">/*
    * Gets the classpath elements to use when spawning processes.
    * 
    * @return the classpathItems, if set
diff --git a/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloInstance.java b/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloInstance.java
index 540d7aea6..1e1c46422 100644
-- a/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloInstance.java
++ b/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloInstance.java
@@ -17,11 +17,15 @@
 package org.apache.accumulo.minicluster;
 
 import java.io.File;
import java.io.FileNotFoundException;
 import java.net.MalformedURLException;
 
 import org.apache.accumulo.core.client.Instance;
 import org.apache.accumulo.core.client.ZooKeeperInstance;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.conf.Property;
import org.apache.commons.configuration.ConfigurationException;
import org.apache.commons.configuration.PropertiesConfiguration;
 import org.apache.hadoop.conf.Configuration;
 
 /**
@@ -32,11 +36,20 @@ public class MiniAccumuloInstance extends ZooKeeperInstance {
   /**
    * Construct an {@link Instance} entry point to Accumulo using a {@link MiniAccumuloCluster} directory
    */</comment>
  <constructor><specifier>public</specifier> <name>MiniAccumuloInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>instanceName</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>directory</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><call><name>getZooKeepersFromDir</name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>MiniAccumuloInstance</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>instanceName</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>directory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>(<argument><expr><call><name>getConfigProperties</name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name>getZooKeepersFromDir</name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>PropertiesConfiguration</name></type> <name>getConfigProperties</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>directory</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>PropertiesConfiguration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><literal type="string">"conf"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"client.conf"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ConfigurationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// this should never happen since we wrote the config file ourselves</comment>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
   </block_content>}</block></function>
   
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>getZooKeepersFromDir</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>directory</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>getZooKeepersFromDir</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>directory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>directory</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Not a directory "</literal> <operator>+</operator> <call><name><name>directory</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>configFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><literal type="string">"conf"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"accumulo-site.xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloInstance</name> extends <name>ZooKeeperInstance</name> <block>{
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>addResource</name></name><argument_list>(<argument><expr><call><name><name>configFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toURL</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>MalformedURLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Missing file: "</literal> <operator>+</operator> <call><name><name>configFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
      <throw>throw <expr><operator>new</operator> <call><name>FileNotFoundException</name><argument_list>(<argument><expr><literal type="string">"Missing file: "</literal> <operator>+</operator> <call><name><name>configFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch>
     <return>return <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_ZK_HOST</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterGCTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterGCTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">281e8052b</literal><operator>..</operator><name>a29bbc0e8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterGCTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterGCTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloClusterGCTest</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
 
  
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>File</name></type> <name>testDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.dir"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/target/"</literal> <operator>+</operator> <call><name><name>MiniAccumuloClusterGCTest</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>MiniAccumuloConfig</name></type> <name>macConfig</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>MiniAccumuloCluster</name></type> <name>accumulo</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloClusterGCTest</name> <block>{
   <comment type="line">// This test seems to be a little too unstable for a unit test</comment>
   @<expr><name>Ignore</name>
   <specifier>public</specifier> <name>void</name> <call><name>test</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ZooKeeperInstance</name> <name>inst</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>inst</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getClientConfig</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name><name>inst</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>passwd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>final</name> <name>String</name> <name>table</name> <operator>=</operator> <literal type="string">"foobar"</literal></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">26a154623</literal><operator>..</operator><literal type="number">5de981dad</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>minicluster</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>minicluster</name><operator>/</operator><name><name>MiniAccumuloClusterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr>,<expr><literal type="number">6</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriterConfig</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>IteratorSetting</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Scanner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloClusterTest</name> <block>{
 
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">30000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>test</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Connector</name> <name>conn</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>,
        <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><literal type="string">"superSecret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>Connector</name> <name>conn</name> <operator>=</operator> <call><name><name>accumulo</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"superSecret"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><literal type="string">"table1"</literal></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">102</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">100</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloClusterTest</name> <block>{
 
     <expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>attachIterator</name><argument_list>(<argument><expr><literal type="string">"table1"</literal></expr></argument>, <argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>Connector</name> <name>uconn</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><literal type="string">"user1"</literal></expr></argument>,
        <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><literal type="string">"pass1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>Connector</name> <name>uconn</name> <operator>=</operator> <call><name><name>accumulo</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"user1"</literal></expr></argument>, <argument><expr><literal type="string">"pass1"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriter</name> <name>bw</name> <operator>=</operator> <call><name><name>uconn</name><operator>.</operator><name>createBatchWriter</name></name><argument_list>(<argument><expr><literal type="string">"table1"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">162</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">159</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MiniAccumuloClusterTest</name> <block>{
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">60000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>testPerTableClasspath</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>Connector</name> <name>conn</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>accumulo</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>,
        <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><literal type="string">"superSecret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>Connector</name> <name>conn</name> <operator>=</operator> <call><name><name>accumulo</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"superSecret"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>conn</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><literal type="string">"table2"</literal></expr></argument>)</argument_list></call></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name><name>ProxyServer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name><name>ProxyServer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c92f73b0a</name><operator>..</operator><name>d979d40f1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name><name>ProxyServer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>proxy</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>proxy</name><operator>/</operator><name><name>ProxyServer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">61</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mock</name><operator>.</operator><name>MockInstance</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>SecurityErrorCode</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Column</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>ConditionalMutation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ProxyServer</name> implements <name><name>AccumuloProxy</name><operator>.</operator><name>Iface</name></name> <block>{
     <if_stmt><if>if <condition>(<expr><name>useMock</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>Boolean</name><operator>.</operator><name>parseBoolean</name></name><argument_list>(<argument><expr><name>useMock</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>MockInstance</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if>
     <else>else<block type="pseudo"><block_content>
      <expr_stmt><expr><name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"instance"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"zookeepers"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
      <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>ClientConfiguration</name><operator>.</operator><name>loadDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"instance"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"zookeepers"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenProp</name> <init>= <expr><call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"tokenClass"</literal></expr></argument>, <argument><expr><call><name><name>PasswordToken</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnDefaultTable</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnDefaultTable</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">53f5ac259</literal><operator>..</operator><literal type="number">588c35cb8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnDefaultTable</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnDefaultTable</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClientOnDefaultTable</name> extends <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>cli</name><operator>.</operator><name>ClientOnD</name></name></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>instance</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <return>return <expr><name>cachedInstance</name> <operator>=</operator> <call><name><name>HdfsZooInstance</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
    <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>instance</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>zookeepers</name></name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></try>
   <constructor><specifier>public</specifier> <name>ClientOnDefaultTable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>table</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnRequiredTable</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnRequiredTable</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e9e9bf126</name><operator>..</operator><name>f2e04e42c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnRequiredTable</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOnRequiredTable</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClientOnRequiredTable</name> extends <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>cli</name><operator>.</operator><name>ClientOn</name></name></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>instance</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <return>return <expr><name>cachedInstance</name> <operator>=</operator> <call><name><name>HdfsZooInstance</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
    <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>instance</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>zookeepers</name></name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><name>cachedInstance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name>getClientConfiguration</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></constructor>
 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6f3516a43</literal><operator>..</operator><name>c19b7b069</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>cli</name><operator>/</operator><name><name>ClientOpts</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClientOpts</name> extends <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>cli</name><operator>.</operator><name>ClientOpts</name></name> <block>{
     <if_stmt><if>if <condition>(<expr><name>instance</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <return>return <expr><call><name><name>HdfsZooInstance</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>instance</name></name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>zookeepers</name></name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></try>
 </block_content>}</block></function>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>BulkImporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>BulkImporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">606941d41</literal><operator>..</operator><name>ecbe0c4a3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>BulkImporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>BulkImporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">585</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">585</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BulkImporter</name> <block>{
       <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name> <block>{</block></expr></argument></throws>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>long</name></type> <name>timeInMillis</name> <init>= <expr><call><name><name>instance</name><operator>.</operator><name>getConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTimeInMillis</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>TSERV_BULK_TIMEOUT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>TabletClientService</name><operator>.</operator><name>Iface</name></name></type> <name>client</name> <init>= <expr><call><name><name>ThriftUtil</name><operator>.</operator><name>getTServerClient</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><name>timeInMillis</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>TabletClientService</name><operator>.</operator><name>Iface</name></name></type> <name>client</name> <init>= <expr><call><name><name>ThriftUtil</name><operator>.</operator><name>getTServerClient</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><call><name><name>instance</name><operator>.</operator><name>getConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>timeInMillis</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <decl_stmt><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>KeyExtent</name></argument>,<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>MapFileInfo</name></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>KeyExtent</name></argument>,<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>thrift</name><operator>.</operator><name>MapFileInfo</name></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>KeyExtent</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>PathSize</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>entry</name> <range>: <expr><call><name><name>assignmentsPerTablet</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>HdfsZooInstance</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>HdfsZooInstance</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9e6bbe78f</literal><operator>..</operator><literal type="number">00714f931</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>HdfsZooInstance</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>client</name><operator>/</operator><name><name>HdfsZooInstance</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsZooInstance</name> implements <name>Instance</name> <block>{
   }</block>
   
   @<name>Override</name>
  @<name>Deprecated</name>
   <specifier>public</specifier> <name>void</name> <call><name>setConfiguration</name><argument_list>(<argument><expr><name>AccumuloConfiguration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>this</name><operator>.</operator><name>conf</name></name> <operator>=</operator> <name>conf</name></expr>;
   }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8abd10420</literal><operator>..</operator><name>eec64efce</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>server</name><operator>/</operator><name>base</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>server</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TServerUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>BindException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetAddress</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetSocketAddress</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>ServerSocket</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>Daemon</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>LoggingRunnable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleThreadPool</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>SslConnectionParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>TBufferedSocket</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>ThriftUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>UtilWaitThread</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>server</name><operator>.</operator><name>TServer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>server</name><operator>.</operator><name>TThreadPoolServer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TNonblockingSocket</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TServerTransport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TSocket</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransport</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>thrift</name><operator>.</operator><name>transport</name><operator>.</operator><name>TTransportException</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>net</name><operator>.</operator><name>HostAndPort</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TServerUtils</name> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>TServerUtils</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  

   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>clientAddress</name> <init>= <expr><operator>new</operator> <call><name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  

   <class><specifier>public</specifier> <specifier>static</specifier> class <name>ServerAddress</name> <block>{
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>TServer</name></type> <name>server</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>HostAndPort</name></type> <name>address</name></decl>;</decl_stmt>
    

     <constructor><specifier>public</specifier> <name>ServerAddress</name><parameter_list>(<parameter><decl><type><name>TServer</name></type> <name>server</name></decl></parameter>, <parameter><decl><type><name>HostAndPort</name></type> <name>address</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>server</name></name> <operator>=</operator> <name>server</name></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>address</name></name> <operator>=</operator> <name>address</name></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></constructor></block></class></block></class></block_content></block></for></block_content></block></try></block_content></block></try>}</block></expr>
   }</block></class>
  

   <comment type="block" format="javadoc">/**
    * Start a server, at the given port, or higher, if that port is not available.
    * 
@@ -81,6 +84,7 @@ public class TServerUtils {
    * @param portSearchProperty
    * @param minThreadProperty
    * @param timeBetweenThreadChecksProperty
   * @param generalSslEnabled
    * @return the server object created, and the port actually used
    * @throws UnknownHostException
    *           when we don't know our own address
@@ -105,12 +109,12 @@ public class TServerUtils {
     TServerUtils.TimedProcessor timedProcessor = new TServerUtils.TimedProcessor(processor, serverName, threadName);
     Random random = new Random();
     for (int j = 0; j &lt; 100; j++) {
      

       // Are we going to slide around, looking for an open port?
       int portsToSearch = 1;
       if (portSearch)
         portsToSearch = 1000;
      

       for (int i = 0; i &lt; portsToSearch; i++) {
         int port = portHint + i;
         if (portHint != 0 &amp;&amp; i &gt; 0)
@@ -119,22 +123,34 @@ public class TServerUtils {
           port = 1024 + port % (65535 - 1024);
         try {
           HostAndPort addr = HostAndPort.fromParts(address, port);
          return TServerUtils.startTServer(addr, timedProcessor, serverName, threadName, minThreads, timeBetweenThreadChecks, maxMessageSize);
        } catch (Exception ex) {
          log.info("Unable to use port " + port + ", retrying. (Thread Name = " + threadName + ")");
          UtilWaitThread.sleep(250);
          return TServerUtils.startTServer(addr, timedProcessor, serverName, threadName, minThreads, timeBetweenThreadChecks, maxMessageSize,
              SslConnectionParams.forServer(conf), conf.getTimeInMillis(Property.GENERAL_RPC_TIMEOUT));
        } catch (TTransportException ex) {
          log.error("Unable to start TServer", ex);
          if (ex.getCause() == null || ex.getCause().getClass() == BindException.class) {
            // Note: with a TNonblockingServerSocket a "port taken" exception is a cause-less
            // TTransportException, and with a TSocket created by TSSLTransportFactory, it
            // comes through as caused by a BindException.
            log.info("Unable to use port " + port + ", retrying. (Thread Name = " + threadName + ")");
            UtilWaitThread.sleep(250);
          } else {
            // thrift is passing up a nested exception that isn't a BindException,
            // so no reason to believe retrying on a different port would help.
            log.error("Unable to start TServer", ex);
            break;
          }
         }
       }
     }
     throw new UnknownHostException("Unable to find a listen port");
   }
  

   public static class TimedProcessor implements TProcessor {
    

     final TProcessor other;
     ThriftMetrics metrics = null;
     long idleStart = 0;
    

     TimedProcessor(TProcessor next, String serverName, String threadName) {
       this.other = next;
       // Register the metrics MBean
@@ -146,7 +162,7 @@ public class TServerUtils {
       }
       idleStart = System.currentTimeMillis();
     }
    

     @Override
     public boolean process(TProtocol in, TProtocol out) throws TException {
       long now = 0;
@@ -169,41 +185,46 @@ public class TServerUtils {
       }
     }
   }
  

   public static class ClientInfoProcessorFactory extends TProcessorFactory {
    

     public ClientInfoProcessorFactory(TProcessor processor) {
       super(processor);
     }
    

     @Override
     public TProcessor getProcessor(TTransport trans) {
       if (trans instanceof TBufferedSocket) {
         TBufferedSocket tsock = (TBufferedSocket) trans;
         clientAddress.set(tsock.getClientString());
      } else if (trans instanceof TSocket) {
        TSocket tsock = (TSocket) trans;
        clientAddress.set(tsock.getSocket().getInetAddress().getHostAddress() + ":" + tsock.getSocket().getPort());
      } else {
        log.warn("Unable to extract clientAddress from transport of type " + trans.getClass());
       }
       return super.getProcessor(trans);
     }
   }
  

   public static class THsHaServer extends org.apache.thrift.server.THsHaServer {
     public THsHaServer(Args args) {
       super(args);
     }
    

     @Override
     protected Runnable getRunnable(FrameBuffer frameBuffer) {
       return new Invocation(frameBuffer);
     }
    

     private class Invocation implements Runnable {
      

       private final FrameBuffer frameBuffer;
      

       public Invocation(final FrameBuffer frameBuffer) {
         this.frameBuffer = frameBuffer;
       }
      

       @Override
       public void run() {
         if (frameBuffer.trans_ instanceof TNonblockingSocket) {
@@ -215,24 +236,10 @@ public class TServerUtils {
       }
     }
   }
  
  public static ServerAddress startHsHaServer(HostAndPort address, TProcessor processor, final String serverName, String threadName, final int numThreads,

  public static ServerAddress createHsHaServer(HostAndPort address, TProcessor processor, final String serverName, String threadName, final int numThreads,
       long timeBetweenThreadChecks, long maxMessageSize) throws TTransportException {
     TNonblockingServerSocket transport = new TNonblockingServerSocket(new InetSocketAddress(address.getHostText(), address.getPort()));
    // check for the special "bind to everything address"
    String hostname = address.getHostText();
    if (hostname.equals("0.0.0.0")) {
      // can't get the address from the bind, so we'll do our best to invent our hostname
      try {
        hostname = InetAddress.getLocalHost().getHostName();
      } catch (UnknownHostException e) {
        throw new TTransportException(e);
      }
    }
    int port = address.getPort();
    if (port == 0) {
      port = transport.getPort();
    }
     THsHaServer.Args options = new THsHaServer.Args(transport);
     options.protocolFactory(ThriftUtil.protocolFactory());
     options.transportFactory(ThriftUtil.transportFactory(maxMessageSize));
@@ -267,12 +274,15 @@ public class TServerUtils {
     }, timeBetweenThreadChecks, timeBetweenThreadChecks);
     options.executorService(pool);
     options.processorFactory(new TProcessorFactory(processor));
    return new ServerAddress(new THsHaServer(options), HostAndPort.fromParts(hostname, port));
    if (address.getPort() == 0) {
      address = HostAndPort.fromParts(address.getHostText(), transport.getPort());
    }
    return new ServerAddress(new THsHaServer(options), address);
   }
  
  public static ServerAddress startThreadPoolServer(HostAndPort address, TProcessor processor, String serverName, String threadName, int numThreads)

  public static ServerAddress createThreadPoolServer(HostAndPort address, TProcessor processor, String serverName, String threadName, int numThreads)
       throws TTransportException {
    

     // if port is zero, then we must bind to get the port number
     ServerSocket sock;
     try {
@@ -284,23 +294,52 @@ public class TServerUtils {
       throw new TTransportException(ex);
     }
     TServerTransport transport = new TBufferedServerSocket(sock, 32 * 1024);
    return new ServerAddress(createThreadPoolServer(transport, processor), address);
  }

  public static TServer createThreadPoolServer(TServerTransport transport, TProcessor processor) {
     TThreadPoolServer.Args options = new TThreadPoolServer.Args(transport);
     options.protocolFactory(ThriftUtil.protocolFactory());
     options.transportFactory(ThriftUtil.transportFactory());
     options.processorFactory(new ClientInfoProcessorFactory(processor));
    return new ServerAddress(new TThreadPoolServer(options), address);
    return new TThreadPoolServer(options);
   }
  
  public static ServerAddress startTServer(HostAndPort address, TProcessor processor, String serverName, String threadName, int numThreads, long timeBetweenThreadChecks, long maxMessageSize)

  public static ServerAddress createSslThreadPoolServer(HostAndPort address, TProcessor processor, long socketTimeout, SslConnectionParams sslParams)
       throws TTransportException {
    return startTServer(address, new TimedProcessor(processor, serverName, threadName), serverName, threadName, numThreads, timeBetweenThreadChecks, maxMessageSize);
    org.apache.thrift.transport.TServerSocket transport;
    try {
      transport = ThriftUtil.getServerSocket(address.getPort(), (int) socketTimeout, InetAddress.getByName(address.getHostText()), sslParams);
    } catch (UnknownHostException e) {
      throw new TTransportException(e);
    }
    if (address.getPort() == 0) {
      address = HostAndPort.fromParts(address.getHostText(), transport.getServerSocket().getLocalPort());
    }
    return new ServerAddress(createThreadPoolServer(transport, processor), address);
   }
  
  public static ServerAddress startTServer(HostAndPort address, TimedProcessor processor, String serverName, String threadName, int numThreads, long timeBetweenThreadChecks, long maxMessageSize)
      throws TTransportException {
    ServerAddress result = startHsHaServer(address, processor, serverName, threadName, numThreads, timeBetweenThreadChecks, maxMessageSize);
    //ServerAddress result = startThreadPoolServer(address, processor, serverName, threadName, -1);
    final TServer finalServer = result.server;

  public static ServerAddress startTServer(HostAndPort address, TProcessor processor, String serverName, String threadName, int numThreads,
      long timeBetweenThreadChecks, long maxMessageSize) throws TTransportException {
    return startTServer(address, processor, serverName, threadName, numThreads, timeBetweenThreadChecks, maxMessageSize, null, -1);
  }

  public static ServerAddress startTServer(HostAndPort address, TProcessor processor, String serverName, String threadName, int numThreads,
      long timeBetweenThreadChecks, long maxMessageSize, SslConnectionParams sslParams, long sslSocketTimeout) throws TTransportException {
    return startTServer(address, new TimedProcessor(processor, serverName, threadName), serverName, threadName, numThreads, timeBetweenThreadChecks,
        maxMessageSize, sslParams, sslSocketTimeout);
  }

  public static ServerAddress startTServer(HostAndPort address, TimedProcessor processor, String serverName, String threadName, int numThreads,
      long timeBetweenThreadChecks, long maxMessageSize, SslConnectionParams sslParams, long sslSocketTimeout) throws TTransportException {

    ServerAddress serverAddress;
    if (sslParams != null) {
      serverAddress = createSslThreadPoolServer(address, processor, sslSocketTimeout, sslParams);
    } else {
      serverAddress = createHsHaServer(address, processor, serverName, threadName, numThreads, timeBetweenThreadChecks, maxMessageSize);
    }
    final TServer finalServer = serverAddress.server;
     Runnable serveTask = new Runnable() {
       @Override
       public void run() {
@@ -314,9 +353,18 @@ public class TServerUtils {
     serveTask = new LoggingRunnable(TServerUtils.log, serveTask);
     Thread thread = new Daemon(serveTask, threadName);
     thread.start();
    return result;
    // check for the special "bind to everything address"
    if (serverAddress.address.getHostText().equals("0.0.0.0")) {
      // can't get the address from the bind, so we'll do our best to invent our hostname
      try {
        serverAddress = new ServerAddress(finalServer, HostAndPort.fromParts(InetAddress.getLocalHost().getHostName(), serverAddress.address.getPort()));
      } catch (UnknownHostException e) {
        throw new TTransportException(e);
      }
    }
    return serverAddress;
   }
  

   // Existing connections will keep our thread running: reach in with reflection and insist that they shutdown.
   public static void stopTServer(TServer s) {
     if (s == null)
diff --git a/server/extras/src/main/java/org/apache/accumulo/utils/metanalysis/IndexMeta.java b/server/extras/src/main/java/org/apache/accumulo/utils/metanalysis/IndexMeta.java
index 8e7b22139..5b85f188d 100644
-- a/server/extras/src/main/java/org/apache/accumulo/utils/metanalysis/IndexMeta.java
++ b/server/extras/src/main/java/org/apache/accumulo/utils/metanalysis/IndexMeta.java
@@ -26,6 +26,7 @@ import java.util.Map;
 import org.apache.accumulo.core.client.Connector;
 import org.apache.accumulo.core.client.TableExistsException;
 import org.apache.accumulo.core.client.mapreduce.AccumuloOutputFormat;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.data.ColumnUpdate;
 import org.apache.accumulo.core.data.KeyExtent;
 import org.apache.accumulo.core.data.Mutation;
@@ -120,6 +121,10 @@ public class IndexMeta extends Configured implements Tool {
   static class Opts extends ClientOpts {
     @Parameter(description = "&lt;logfile&gt; { &lt;logfile&gt; ...}")
     List&lt;String&gt; logFiles = new ArrayList&lt;String&gt;();
    
    public ClientConfiguration getConf() {
      return this.getClientConfiguration();
    }
   }
   
   @Override
@@ -146,7 +151,7 @@ public class IndexMeta extends Configured implements Tool {
     job.setNumReduceTasks(0);
     
     job.setOutputFormatClass(AccumuloOutputFormat.class);
    AccumuloOutputFormat.setZooKeeperInstance(job, opts.instance, opts.zookeepers);
    AccumuloOutputFormat.setZooKeeperInstance(job, opts.getConf());
     AccumuloOutputFormat.setConnectorInfo(job, opts.principal, opts.getToken());
     AccumuloOutputFormat.setCreateTables(job, false);
     
diff --git a/test/pom.xml b/test/pom.xml
index 54b8733bb..3e2f03383 100644
-- a/test/pom.xml
++ b/test/pom.xml
@@ -25,6 +25,9 @@
   &lt;artifactId&gt;accumulo-test&lt;/artifactId&gt;
   &lt;name&gt;Testing&lt;/name&gt;
   &lt;description&gt;Tests for Apache Accumulo.&lt;/description&gt;
  &lt;properties&gt;
    &lt;bouncycastle.version&gt;1.49&lt;/bouncycastle.version&gt;
  &lt;/properties&gt;
   &lt;dependencies&gt;
     &lt;dependency&gt;
       &lt;groupId&gt;com.beust&lt;/groupId&gt;
@@ -145,6 +148,18 @@
       &lt;artifactId&gt;hadoop-minicluster&lt;/artifactId&gt;
       &lt;scope&gt;test&lt;/scope&gt;
     &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;
      &lt;artifactId&gt;bcpkix-jdk15on&lt;/artifactId&gt;
      &lt;version&gt;${bouncycastle.version}&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;
      &lt;artifactId&gt;bcprov-jdk15on&lt;/artifactId&gt;
      &lt;version&gt;${bouncycastle.version}&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
     &lt;dependency&gt;
       &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;
       &lt;artifactId&gt;jetty&lt;/artifactId&gt;
@@ -223,6 +238,18 @@
               &lt;/execution&gt;
             &lt;/executions&gt;
           &lt;/plugin&gt;
          &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-failsafe-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
              &lt;systemProperties&gt;
                &lt;property&gt;
                   &lt;name&gt;org.apache.accumulo.test.functional.useSslForIT&lt;/name&gt;
                   &lt;value&gt;${useSslForIT}&lt;/value&gt;
                &lt;/property&gt;
              &lt;/systemProperties&gt;
            &lt;/configuration&gt;
          &lt;/plugin&gt;
         &lt;/plugins&gt;
       &lt;/build&gt;
     &lt;/profile&gt;
diff --git a/test/src/main/java/org/apache/accumulo/test/IMMLGBenchmark.java b/test/src/main/java/org/apache/accumulo/test/IMMLGBenchmark.java
index 948a741e5..7bee351f4 100644
-- a/test/src/main/java/org/apache/accumulo/test/IMMLGBenchmark.java
++ b/test/src/main/java/org/apache/accumulo/test/IMMLGBenchmark.java
@@ -36,6 +36,7 @@ import org.apache.accumulo.core.client.Scanner;
 import org.apache.accumulo.core.client.TableNotFoundException;
 import org.apache.accumulo.core.client.ZooKeeperInstance;
 import org.apache.accumulo.core.client.security.tokens.PasswordToken;
import org.apache.accumulo.core.conf.ClientConfiguration;
 import org.apache.accumulo.core.conf.Property;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.Mutation;
@@ -51,7 +52,7 @@ import org.apache.hadoop.io.Text;
  */</comment>
 <class><specifier>public</specifier> class <name>IMMLGBenchmark</name> <block>{
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ZooKeeperInstance</name></type> <name>zki</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><literal type="string">"test16"</literal></expr></argument>, <argument><expr><literal type="string">"localhost"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZooKeeperInstance</name></type> <name>zki</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><literal type="string">"test16"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Connector</name></type> <name>conn</name> <init>= <expr><call><name><name>zki</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <decl_stmt><decl><type><name>int</name></type> <name>numlg</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>TestIngest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>TestIngest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">972a20e3d</literal><operator>..</operator><literal type="number">1efd872e0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>TestIngest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>TestIngest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>CachedConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>FastFormat</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>fate</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>cli</name><operator>.</operator><name>ClientOnDefaultTable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>conf</name><operator>.</operator><name>ServerConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>trace</name><operator>.</operator><name>instrument</name><operator>.</operator><name>Trace</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIngest</name> <block>{
     <expr><name>Opts</name> <name>opts</name> <operator>=</operator> <operator>new</operator> <call><name>Opts</name><argument_list>()</argument_list></call></expr>;
     <expr><name>BatchWriterOpts</name> <name>bwOpts</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterOpts</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>opts</name><operator>.</operator><name>parseArgs</name></name><argument_list>(<argument><expr><call><name><name>TestIngest</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bwOpts</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>opts</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setConfiguration</name><argument_list>(<argument><expr><call><name><name>ServerConfiguration</name><operator>.</operator><name>getSiteConfiguration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

     
     <expr><name>Instance</name> <name>instance</name> <operator>=</operator> <call><name><name>opts</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;
     
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>MetadataBatchScanTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>MetadataBatchScanTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c6ad74feb</name><operator>..</operator><name>cf4f13485</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>MetadataBatchScanTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>MetadataBatchScanTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriterConfig</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Scanner</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>KeyExtent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Mutation</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MetadataBatchScanTest</name> <block>{
   
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>main</name><argument_list>(<argument><expr><name><name>String</name><index>[]</index></name> <name>args</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     
    <expr><name>final</name> <name>Connector</name> <name>connector</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><literal type="string">"acu14"</literal></expr></argument>, <argument><expr><literal type="string">"localhost"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><call><name><name>SystemCredentials</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPrincipal</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>SystemCredentials</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call>
    <name>final</name> <name>Connector</name> <name>connector</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><literal type="string">"acu14"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><call><name><name>SystemCredentials</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPrincipal</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>SystemCredentials</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call>
         <operator>.</operator><call><name>getToken</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument></argument_list></call></expr></block></expr></argument></throws></expr>;
     
     <expr><name><name>TreeSet</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>splits</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeSet</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">78b2564b3</literal><operator>..</operator><literal type="number">05384d7aa</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>performance</name><operator>/</operator><name>thrift</name><operator>/</operator><name><name>NullTserver</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">29</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>Tables</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>thrift</name><operator>.</operator><name>SecurityErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>thrift</name><operator>.</operator><name>ThriftSecurityException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>DefaultConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>KeyExtent</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">248</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NullTserver</name> <block>{
     <expr><name>HostAndPort</name> <name>addr</name> <operator>=</operator> <call><name><name>HostAndPort</name><operator>.</operator><name>fromParts</name></name><argument_list>(<argument><expr><call><name><name>InetAddress</name><operator>.</operator><name>getLocalHost</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHostName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>port</name></name></expr></argument>)</argument_list></call></expr>;
     
     <comment type="line">// modify !METADATA</comment>
    <expr><name>ZooKeeperInstance</name> <name>zki</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>iname</name></name></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>keepers</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ZooKeeperInstance</name> <name>zki</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>iname</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>keepers</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>String</name> <name>tableId</name> <operator>=</operator> <call><name><name>Tables</name><operator>.</operator><name>getTableId</name></name><argument_list>(<argument><expr><name>zki</name></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>tableName</name></name></expr></argument>)</argument_list></call></expr>;
     
     <comment type="line">// read the locations for the table</comment>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name><name>State</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name><name>State</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ea6d8ed19</name><operator>..</operator><literal type="number">5227b2aea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name><name>State</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name><name>State</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">31</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>MultiTableBatchWriter</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>AuthenticationToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Credentials</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>State</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>instance</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>instance</name> <init>= <expr><call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"INSTANCE"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>zookeepers</name> <init>= <expr><call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"ZOOKEEPERS"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>instance</name></name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>instance</name></expr></argument>, <argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>instance</name></name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instance</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
     <return>return <expr><name>instance</name></expr>;</return>
   </block_content>}</block></function>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>multitable</name><operator>/</operator><name><name>CopyTool</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>multitable</name><operator>/</operator><name><name>CopyTool</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e104c99b0</name><operator>..</operator><literal type="number">749209e3e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>multitable</name><operator>/</operator><name><name>CopyTool</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>multitable</name><operator>/</operator><name><name>CopyTool</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>AccumuloInputFormat</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>AccumuloOutputFormat</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Mutation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>CopyTool</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
       <return>return <expr><literal type="number">1</literal></expr>;</return>
     }</block></expr>
     
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConf</name> <init>= <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

     <constructor_decl><name><name>job</name><operator>.</operator><name>setInputFormatClass</name></name><parameter_list>(<parameter><decl><type><name><name>AccumuloInputFormat</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setConnectorInfo</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <constructor_decl><name><name>AccumuloInputFormat</name><operator>.</operator><name>setInputTableName</name></name><parameter_list>(<parameter><decl><type><name>job</name></type></decl></parameter>, <parameter><decl><type><name><name>args</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <constructor_decl><name><name>AccumuloInputFormat</name><operator>.</operator><name>setScanAuthorizations</name></name><parameter_list>(<parameter><decl><type><name>job</name></type></decl></parameter>, <parameter><decl><type><name><name>Authorizations</name><operator>.</operator><name>EMPTY</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <constructor_decl><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><parameter_list>(<parameter><decl><type><name>job</name></type></decl></parameter>, <parameter><decl><type><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></type></decl></parameter>, <parameter><decl><type><name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <constructor_decl><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><parameter_list>(<parameter><decl><type><name>job</name></type></decl></parameter>, <parameter><decl><type><name>clientConf</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     
     <constructor_decl><name><name>job</name><operator>.</operator><name>setMapperClass</name></name><parameter_list>(<parameter><decl><type><name><name>SeqMapClass</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <constructor_decl><name><name>job</name><operator>.</operator><name>setMapOutputKeyClass</name></name><parameter_list>(<parameter><decl><type><name><name>Text</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CopyTool</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setConnectorInfo</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setCreateTables</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setDefaultTableName</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><call><name><name>job</name><operator>.</operator><name>waitForCompletion</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <return>return <expr><ternary><condition><expr><call><name><name>job</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</return>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>sequential</name><operator>/</operator><name><name>MapRedVerifyTool</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>sequential</name><operator>/</operator><name><name>MapRedVerifyTool</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6c7cc6315</literal><operator>..</operator><name>b0c5029d6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>sequential</name><operator>/</operator><name><name>MapRedVerifyTool</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>randomwalk</name><operator>/</operator><name>sequential</name><operator>/</operator><name><name>MapRedVerifyTool</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal><operator>,</operator><literal type="number">7</literal> @@</block></expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>AccumuloInputFormat</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>AccumuloOutputFormat</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Mutation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>MapRedVerifyTool</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
       <return>return <expr><literal type="number">1</literal></expr>;</return>
     }</block></expr>
     
    <decl_stmt><decl><type><name>ClientConfiguration</name></type> <name>clientConf</name> <init>= <expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

     <constructor_decl><name><name>job</name><operator>.</operator><name>setInputFormatClass</name></name><parameter_list>(<parameter><decl><type><name><name>AccumuloInputFormat</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setConnectorInfo</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <constructor_decl><name><name>AccumuloInputFormat</name><operator>.</operator><name>setInputTableName</name></name><parameter_list>(<parameter><decl><type><name>job</name></type></decl></parameter>, <parameter><decl><type><name><name>args</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <constructor_decl><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><parameter_list>(<parameter><decl><type><name>job</name></type></decl></parameter>, <parameter><decl><type><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></type></decl></parameter>, <parameter><decl><type><name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <constructor_decl><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><parameter_list>(<parameter><decl><type><name>job</name></type></decl></parameter>, <parameter><decl><type><name>clientConf</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     
     <constructor_decl><name><name>job</name><operator>.</operator><name>setMapperClass</name></name><parameter_list>(<parameter><decl><type><name><name>SeqMapClass</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <constructor_decl><name><name>job</name><operator>.</operator><name>setMapOutputKeyClass</name></name><parameter_list>(<parameter><decl><type><name><name>NullWritable</name><operator>.</operator><name>class</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MapRedVerifyTool</name> extends <name>Configured</name> implements <name>Tool</name> <block>{
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setConnectorInfo</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setCreateTables</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setDefaultTableName</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>AccumuloOutputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><call><name><name>job</name><operator>.</operator><name>waitForCompletion</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <return>return <expr><ternary><condition><expr><call><name><name>job</name><operator>.</operator><name>isSuccessful</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</return>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>scalability</name><operator>/</operator><name><name>ScaleTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>scalability</name><operator>/</operator><name><name>ScaleTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e6ba77b2b</name><operator>..</operator><name>c20d00429</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>scalability</name><operator>/</operator><name><name>ScaleTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>scalability</name><operator>/</operator><name><name>ScaleTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">24</literal><operator>,</operator><literal type="number">7</literal> @@</block></expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
 
 <class><specifier>public</specifier> <specifier>abstract</specifier> class <name>ScaleTest</name> <block>{
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ScaleTest</name> <block>{
     <expr><name>String</name> <name>password</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>scaleProps</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"PASSWORD"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
     
    <expr><name>conn</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>, <argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>conn</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><name>instanceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><name>zookeepers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
   
   <specifier>protected</specifier> <name>void</name> <call><name>startTimer</name><argument_list>()</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>MultiTableBatchWriterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>MultiTableBatchWriterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f7e114624</name><operator>..</operator><literal type="number">4fe3d3f87</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>MultiTableBatchWriterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>MultiTableBatchWriterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">34</literal></expr>,<expr><literal type="number">13</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperInstance</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>admin</name><operator>.</operator><name>TableOperations</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>impl</name><operator>.</operator><name>MultiTableBatchWriterImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>security</name><operator>.</operator><name>tokens</name><operator>.</operator><name>PasswordToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>ClientConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Mutation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Range</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Authorizations</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Credentials</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>thrift</name><operator>.</operator><name>TCredentials</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloCluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>TemporaryFolder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>mortbay</name><operator>.</operator><name>jetty</name><operator>.</operator><name>security</name><operator>.</operator><name>Credential</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Maps</name></name>;</import>
 
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>tearDownAfterClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>cluster</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><call><name><name>folder</name><operator>.</operator><name>delete</name></name><argument_list>()</argument_list></call></expr>;
  }</block></expr>
 }</block></class>
   
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testTableRenameDataValidation</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ZooKeeperInstance</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZooKeeperInstance</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Connector</name></type> <name>connector</name> <init>= <expr><call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>BatchWriterConfig</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testTableRenameSameWriters</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>connector</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriterConfig</name> <name>config</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">203</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">202</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testTableRenameNewWriters</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>connector</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriterConfig</name> <name>config</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">285</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">284</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testTableRenameNewWritersNoCaching</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>connector</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriterConfig</name> <name>config</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">334</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">333</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testTableDelete</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>connector</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriterConfig</name> <name>config</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">391</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">390</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testOfflineTable</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{

    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>connector</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriterConfig</name> <name>config</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">448</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">446</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testOfflineTableWithCache</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{

    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>connector</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriterConfig</name> <name>config</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">508</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">505</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiTableBatchWriterTest</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testOfflineTableWithoutCache</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{

    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ZooKeeperInstance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ClientConfiguration</name><argument_list>()</argument_list></call><operator>.</operator><call><name>withInstance</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>withZkHosts</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Connector</name> <name>connector</name> <operator>=</operator> <call><name><name>instance</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>BatchWriterConfig</name> <name>config</name> <operator>=</operator> <operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dbf5f4c09</name><operator>..</operator><name>ec906d64d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name><name>ShellServerIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">26</literal></expr>,<expr><literal type="number">6</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Constructor</name></name>;</import></block></expr>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import></block></expr>
 
 <import>import <name><name>jline</name><operator>.</operator><name>console</name><operator>.</operator><name>ConsoleReader</name></name>;</import>
@@ <operator>-</operator><literal type="number">46</literal><operator>,</operator><literal type="number">8</literal> <operator>+</operator><literal type="number">45</literal><operator>,</operator><literal type="number">6</literal> @@</block></expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>metadata</name><operator>.</operator><name>RootTable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Authorizations</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>UtilWaitThread</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>shell</name><operator>.</operator><name>Shell</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloCluster</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name><operator>.</operator><name>SimpleMacIT</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>tracer</name><operator>.</operator><name>TraceServer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>tools</name><operator>.</operator><name>DistCp</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Rule</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>TemporaryFolder</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>ShellServerIT</name> <super_list><extends>extends <super><name>SimpleMacIT</name></super></extends></super_list> <block>{
   <class><specifier>public</specifier> <specifier>static</specifier> class <name>TestOutputStream</name> <super_list><extends>extends <super><name>OutputStream</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
     }</block></expr>
   }</block></class>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>secret</name> <init>= <expr><literal type="string">"superSecret"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>MiniAccumuloCluster</name></type> <name>cluster</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>TestOutputStream</name></type> <name>output</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>StringInputStream</name></type> <name>input</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>Shell</name></type> <name>shell</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">28</literal> <operator>+</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setUpBeforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>folder</name><operator>.</operator><name>create</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>MiniAccumuloConfig</name> <name>cfg</name> <operator>=</operator> <operator>new</operator> <call><name>MiniAccumuloConfig</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>newFolder</name></name><argument_list>(<argument><expr><literal type="string">"miniAccumulo"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>cluster</name> <operator>=</operator> <operator>new</operator> <call><name>MiniAccumuloCluster</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>cluster</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;

     <comment type="line">// history file is updated in $HOME</comment>
    <expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"HOME"</literal></expr></argument>, <argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"HOME"</literal></expr></argument>, <argument><expr><call><name>getFolder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// start the shell</comment>
     <expr><name>output</name> <operator>=</operator> <operator>new</operator> <call><name>TestOutputStream</name><argument_list>()</argument_list></call></expr>;
     <expr><name>input</name> <operator>=</operator> <operator>new</operator> <call><name>StringInputStream</name><argument_list>()</argument_list></call></expr>;
     <expr><name>shell</name> <operator>=</operator> <operator>new</operator> <call><name>Shell</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ConsoleReader</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>shell</name><operator>.</operator><name>setLogErrorsToConsole</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>shell</name><operator>.</operator><name>config</name></name><argument_list>(<argument><expr><literal type="string">"-u"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"-p"</literal></expr></argument>, <argument><expr><name>secret</name></expr></argument>, <argument><expr><literal type="string">"-z"</literal></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>shell</name><operator>.</operator><name>config</name></name><argument_list>(<argument><expr><literal type="string">"-u"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"-p"</literal></expr></argument>, <argument><expr><name>ROOT_PASSWORD</name></expr></argument>, <argument><expr><literal type="string">"-z"</literal></expr></argument>, <argument><expr><call><name>getStaticCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfig</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getStaticCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfig</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><literal type="string">"--config-file"</literal></expr></argument>, <argument><expr><call><name>getStaticCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfig</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClientConfFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"quit"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>shell</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>shell</name><operator>.</operator><name>setExit</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
 
    <comment type="line">// use reflection to call this method so it does not need to be made public</comment>
    <expr><name>Method</name> <name>method</name> <operator>=</operator> <call><name><name>cluster</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDeclaredMethod</name><argument_list>(<argument><expr><literal type="string">"exec"</literal></expr></argument>, <argument><expr><name><name>Class</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name><name>String</name><index>[]</index></name><operator>.</operator>class</expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>method</name><operator>.</operator><name>setAccessible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>traceProcess</name> <operator>=</operator> <operator>(</operator><name>Process</name><operator>)</operator> <call><name><name>method</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><name>cluster</name></expr></argument>, <argument><expr><name><name>TraceServer</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>traceProcess</name> <operator>=</operator> <call><name>getStaticCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>exec</name><argument_list>(<argument><expr><name><name>TraceServer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// give the tracer some time to start</comment>
     <expr><call><name><name>UtilWaitThread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">181</literal></expr>,<expr><literal type="number">14</literal> <operator>+</operator><literal type="number">167</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
 
   @<expr><name>AfterClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>tearDownAfterClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>cluster</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><call><name><name>traceProcess</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>folder</name><operator>.</operator><name>delete</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
 
   @<name>After</name>
  <specifier>public</specifier> <name>void</name> <call><name>tearDown</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name><name>cluster</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
  <expr><specifier>public</specifier> <name>void</name> <call><name>deleteTables</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name>getConnector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <for>for <control>(<init><decl><type><name>String</name></type> <name>table</name> <range>: <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>list</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>table</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>MetadataTable</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>table</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RootTable</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>table</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"trace"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
         <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">207</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
     <expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"addsplits row5"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <call><name>exec</name><argument_list>(<argument><expr><literal type="string">"config -t t -s table.split.threshold=345M"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"offline t"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>export</name> <init>= <expr><literal type="string">"file://"</literal> <operator>+</operator> <call><name><name>folder</name><operator>.</operator><name>newFolder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>export</name> <init>= <expr><literal type="string">"file://"</literal> <operator>+</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getFolder</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ShellServerIT.export"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"exporttable -t t "</literal> <operator>+</operator> <name>export</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>DistCp</name></type> <name>cp</name> <init>= <expr><call><name>newDistCp</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>import_</name> <init>= <expr><literal type="string">"file://"</literal> <operator>+</operator> <call><name><name>folder</name><operator>.</operator><name>newFolder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>import_</name> <init>= <expr><literal type="string">"file://"</literal> <operator>+</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getFolder</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ShellServerIT.import"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>cp</name><operator>.</operator><name>run</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"-f"</literal></expr>, <expr><name>export</name> <operator>+</operator> <literal type="string">"/distcp.txt"</literal></expr>, <expr><name>import_</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"importtable t2 "</literal> <operator>+</operator> <name>import_</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"config -t t2 -np"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"345M"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">260</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">30</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>execfile</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// execfile</comment>
    <expr><name>File</name> <name>file</name> <operator>=</operator> <call><name><name>folder</name><operator>.</operator><name>newFile</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>file</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"ShellServerIT.execfile"</literal></expr></argument>, <argument><expr><literal type="string">".conf"</literal></expr></argument>, <argument><expr><call><name>getFolder</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PrintWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>PrintWriter</name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"about"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">326</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">310</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
     <expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"scan"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"row1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <call><name>exec</name><argument_list>(<argument><expr><literal type="string">"droptable -f t"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"deleteuser xyzzy"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">"delete yourself"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>input</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>secret</name> <operator>+</operator> <literal type="string">"\n"</literal> <operator>+</operator> <name>secret</name> <operator>+</operator> <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>input</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>ROOT_PASSWORD</name> <operator>+</operator> <literal type="string">"\n"</literal> <operator>+</operator> <name>ROOT_PASSWORD</name> <operator>+</operator> <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"user root"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"revoke -u xyzzy -s System.CREATE_TABLE"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"revoke -u xyzzy -s System.GOOFY"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">598</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">582</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>importDirectory</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <name>FileSystem</name> <name>fs</name> <operator>=</operator> <call><name><name>FileSystem</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>importDir</name> <init>= <expr><call><name><name>folder</name><operator>.</operator><name>newFolder</name></name><argument_list>(<argument><expr><literal type="string">"import"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>importDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getFolder</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"import"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>importDir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>even</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>importDir</name></expr></argument>, <argument><expr><literal type="string">"even.rf"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>odd</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>importDir</name></expr></argument>, <argument><expr><literal type="string">"odd.rf"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>errorsDir</name> <init>= <expr><call><name><name>folder</name><operator>.</operator><name>newFolder</name></name><argument_list>(<argument><expr><literal type="string">"errors"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>errorsDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getFolder</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>errorsDir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>mkdirs</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>errorsDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AccumuloConfiguration</name></type> <name>aconf</name> <init>= <expr><call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getDefaultConfiguration</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>FileSKVWriter</name></type> <name>evenWriter</name> <init>= <expr><call><name><name>FileOperations</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>openWriter</name><argument_list>(<argument><expr><name>even</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><name>aconf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">751</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">737</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
       @<expr><name>Override</name>
       <specifier>public</specifier> <name>void</name> <call><name>run</name><argument_list>()</argument_list></call> <block>{
         <try>try <block>{<block_content>
          <decl_stmt><decl><type><name>Connector</name></type> <name>connector</name> <init>= <expr><call><name><name>cluster</name><operator>.</operator><name>getConnector</name></name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Connector</name></type> <name>connector</name> <init>= <expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
           <decl_stmt><decl><type><name>Scanner</name></type> <name>s</name> <init>= <expr><call><name><name>connector</name><operator>.</operator><name>createScanner</name></name><argument_list>(<argument><expr><literal type="string">"t"</literal></expr></argument>, <argument><expr><name><name>Authorizations</name><operator>.</operator><name>EMPTY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <for>for <control>(<init><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></annotation>
           <type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>,<argument><name>Value</name></argument>&gt;</argument_list></name></type> <name>kv</name> <range>: <expr><name>s</name></expr></range></decl></init>)</control><block type="pseudo"><block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">769</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">755</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>last</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"RUNNING"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <name>String</name> <name><name>parts</name><index>[]</index></name> <operator>=</operator> <call><name><name>last</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"\\|"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt></block_content></block></for>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name><name>parts</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>hostPortPattern</name> <init>= <expr><literal type="string">".+:\\d+"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>tserver</name> <init>= <expr><name><name>parts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>tserver</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><name>hostPortPattern</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>instanceOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTabletServers</name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><name>tserver</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>client</name> <init>= <expr><name><name>parts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>client</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><name>hostPortPattern</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// TODO: any way to tell if the client address is accurate? could be local IP, host, loopback...?</comment>
     <expr_stmt><expr><call><name><name>thread</name><operator>.</operator><name>join</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"deletetable -f t"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/></block_content></block></try></block></expr>}</block>
 
  @<name>Rule</name>
  <specifier>public</specifier> <name>TemporaryFolder</name> <name>folder2</name> <operator>=</operator> <operator>new</operator> <call><name>TemporaryFolder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.dir"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/target"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">30</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testPertableClasspath</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>fooFilterJar</name> <init>= <expr><call><name><name>folder2</name><operator>.</operator><name>newFile</name></name><argument_list>(<argument><expr><literal type="string">"FooFilter.jar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>fooFilterJar</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"FooFilter"</literal></expr></argument>, <argument><expr><literal type="string">".jar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyURLToFile</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResource</name><argument_list>(<argument><expr><literal type="string">"/FooFilter.jar"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fooFilterJar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fooFilterJar</name><operator>.</operator><name>deleteOnExit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>fooConstraintJar</name> <init>= <expr><call><name><name>folder2</name><operator>.</operator><name>newFile</name></name><argument_list>(<argument><expr><literal type="string">"FooConstraint.jar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>fooConstraintJar</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"FooConstraint"</literal></expr></argument>, <argument><expr><literal type="string">".jar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyURLToFile</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResource</name><argument_list>(<argument><expr><literal type="string">"/FooConstraint.jar"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fooConstraintJar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fooConstraintJar</name><operator>.</operator><name>deleteOnExit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>exec</name><argument_list>(
         <argument><expr><literal type="string">"config -s "</literal> <operator>+</operator> <call><name><name>Property</name><operator>.</operator><name>VFS_CONTEXT_CLASSPATH_PROPERTY</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"cx1="</literal> <operator>+</operator> <call><name><name>fooFilterJar</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <call><name><name>fooConstraintJar</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">832</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">824</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
 
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">30</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>badLogin</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>input</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>secret</name> <operator>+</operator> <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>input</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>ROOT_PASSWORD</name> <operator>+</operator> <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></call></expr></expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>err</name> <init>= <expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"user NoSuchUser"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>err</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"BAD_CREDENTIALS for user NoSuchUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/></block_content></block></function></block_content></block></try></block_content></block></if></if_stmt></block_content></block></for>}</block>
@@ <operator>-</operator><literal type="number">872</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">864</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
     <expr><call><name><name>input</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"secret\n"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"user test_user"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"whoami"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"test_user"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>input</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>secret</name> <operator>+</operator> <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>input</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>ROOT_PASSWORD</name> <operator>+</operator> <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"user root"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
   }</block>
 
@@ <operator>-</operator><literal type="number">886</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">878</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShellServerIT</name> extends <name>SimpleMacIT</name> <block>{
     <expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"scan -t !METADATA -np -c file"</literal></expr></argument>)</argument_list></call></expr>;
     <return>return <expr><call><name><name>output</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>split</name><argument_list>(<argument><expr><literal type="string">"\n"</literal></expr></argument>)</argument_list></call><operator>.</operator><name>length</name> <operator>-</operator> <literal type="number">1</literal></expr>;</return>
   }</block></expr>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name>TemporaryFolder</name></type> <name>folder</name> <init>= <expr><operator>new</operator> <call><name>TemporaryFolder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.dir"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/target/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><type><specifier>public</specifier> <name>MiniAccumuloCluster</name></type> <name>getCluster</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>cluster</name></expr>;</return>
  </block_content>}</block></function>

 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AbstractMacIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AbstractMacIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d24b85bcf</name><operator>..</operator><name>f74b2050c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AbstractMacIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AbstractMacIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>cli</name><operator>.</operator><name>ScannerOpts</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloCluster</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>util</name><operator>.</operator><name>CertUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Rule</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">39</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractMacIT</name> <block>{
     <return>return <expr><name>names</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>protected</specifier> <specifier>static</specifier> <name>void</name></type> <name>configureForEnvironment</name><parameter_list>(<parameter><decl><type><name>MiniAccumuloConfig</name></type> <name>cfg</name></decl></parameter>, <parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>testClass</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>folder</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><literal type="string">"true"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"org.apache.accumulo.test.functional.useSslForIT"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>configureForSsl</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>folder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><type><specifier>protected</specifier> <specifier>static</specifier> <name>void</name></type> <name>configureForSsl</name><parameter_list>(<parameter><decl><type><name>MiniAccumuloConfig</name></type> <name>cfg</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>folder</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>siteConfig</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>getSiteConfig</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><literal type="string">"true"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>siteConfig</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <comment type="line">// already enabled; don't mess with it</comment>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>File</name></type> <name>sslDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>folder</name></expr></argument>, <argument><expr><literal type="string">"ssl"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>sslDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>rootKeystoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>sslDir</name></expr></argument>, <argument><expr><literal type="string">"root-"</literal> <operator>+</operator> <call><name><name>cfg</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>localKeystoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>sslDir</name></expr></argument>, <argument><expr><literal type="string">"local-"</literal> <operator>+</operator> <call><name><name>cfg</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>publicTruststoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>sslDir</name></expr></argument>, <argument><expr><literal type="string">"public-"</literal> <operator>+</operator> <call><name><name>cfg</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><operator>new</operator> <call><name>CertUtils</name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_TYPE</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"o=Apache Accumulo,cn=MiniAccumuloCluster"</literal></expr></argument>, <argument><expr><literal type="string">"RSA"</literal></expr></argument>, <argument><expr><literal type="number">2048</literal></expr></argument>, <argument><expr><literal type="string">"sha1WithRSAEncryption"</literal></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>createAll</name><argument_list>(<argument><expr><name>rootKeystoreFile</name></expr></argument>, <argument><expr><name>localKeystoreFile</name></expr></argument>, <argument><expr><name>publicTruststoreFile</name></expr></argument>, <argument><expr><call><name><name>cfg</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cfg</name><operator>.</operator><name>getRootPassword</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"error creating MAC keystore"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>

    <expr_stmt><expr><call><name><name>siteConfig</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_ENABLED</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>siteConfig</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PATH</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>localKeystoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>siteConfig</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>RPC_SSL_KEYSTORE_PASSWORD</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cfg</name><operator>.</operator><name>getRootPassword</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>siteConfig</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>RPC_SSL_TRUSTSTORE_PATH</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>publicTruststoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cfg</name><operator>.</operator><name>setSiteConfig</name></name><argument_list>(<argument><expr><name>siteConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>Connector</name></type> <name>getConnector</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument></throws>;</function_decl>
 
   <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>String</name></type> <name>rootPath</name><parameter_list>()</parameter_list>;</function_decl>

 </block_content>}</block></function>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AccumuloInputFormatIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AccumuloInputFormatIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d38536a33</name><operator>..</operator><literal type="number">3ebafffa9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AccumuloInputFormatIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>AccumuloInputFormatIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AccumuloInputFormatIT</name> extends <name>SimpleMacIT</name> <block>{
     @<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></call>
     <name>Job</name> <name>job</name> <operator>=</operator> <operator>new</operator> <call><name>Job</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setInputTableName</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstance</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstance</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setZooKeeperInstance</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><call><name>getStaticCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClientConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setConnectorInfo</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>ROOT_PASSWORD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// split table</comment>
@@ <expr><operator>-</operator><literal type="number">100</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AccumuloInputFormatIT</name> extends <name>SimpleMacIT</name> <block>{
 
     <comment type="line">// auto adjust ranges</comment>
     <expr><name>ranges</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Range</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <comment type="line">// overlapping ranges</comment>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
      <comment type="line">// overlapping ranges</comment>
       <expr_stmt><expr><call><name><name>ranges</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%09d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%09d"</literal></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>
     <call><name><name>AccumuloInputFormat</name><operator>.</operator><name>setRanges</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>, <argument><expr><name>ranges</name></expr></argument>)</argument_list></call></block></expr>;
     <expr><name>splits</name> <operator>=</operator> <call><name><name>inputFormat</name><operator>.</operator><name>getSplits</name></name><argument_list>(<argument><expr><name>job</name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>BulkIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>BulkIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2fb58270c</literal><operator>..</operator><name>d86b70428</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>BulkIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>BulkIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr>,<expr><literal type="number">14</literal> @@
  <operator>*</operator><operator>/</operator></expr>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name></name>;</package></block></expr>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>MutationsRejectedException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableExistsException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>CachedConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>TestIngest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>TestIngest</name><operator>.</operator><name>Opts</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>BulkIT</name> extends <name>SimpleMacIT</name> <block>{
 
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">4</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>test</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name>getConnector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>String</name> <name>tableName</name> <operator>=</operator> <call><name>getTableNames</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr>;
    <expr><call><name>runTest</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getTableNames</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;
  }</block>

  <specifier>static</specifier> <name>void</name> <call><name>runTest</name><argument_list>(<argument><expr><name>Connector</name> <name>c</name></expr></argument>, <argument><expr><name>String</name> <name>tableName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>TableExistsException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>TableNotFoundException</name></expr></argument>,
      <argument><expr><name>MutationsRejectedException</name> <block>{
     <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name><name>FileSystem</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>CachedConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>base</name> <init>= <expr><literal type="string">"target/accumulo-maven-plugin"</literal></expr></init></decl>;</decl_stmt>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConcurrencyIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConcurrencyIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c3d3160f0</name><operator>..</operator><literal type="number">87f6bd782</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConcurrencyIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConcurrencyIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriterConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>IteratorSetting</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>MutationsRejectedException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Scanner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableExistsException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Mutation</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConcurrencyIT</name> extends <name>ConfigurableMacIT</name> <block>{
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>run</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name>getConnector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><call><name>runTest</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;
  }</block>

  <specifier>static</specifier> <name>void</name> <call><name>runTest</name><argument_list>(<argument><expr><name>Connector</name> <name>c</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>TableExistsException</name></expr></argument>, <argument><expr><name>TableNotFoundException</name></expr></argument>,
      <argument><expr><name>MutationsRejectedException</name></expr></argument>, <argument><expr><name>Exception</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
     <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <decl_stmt><decl><type><name>IteratorSetting</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>IteratorSetting</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name><name>SlowIterator</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr><call><name><name>SlowIterator</name><operator>.</operator><name>setSleepTime</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>attachIterator</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><name>is</name></expr></argument>, <argument><expr><call><name><name>EnumSet</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name><name>IteratorScope</name><operator>.</operator><name>minc</name></name></expr></argument>, <argument><expr><name><name>IteratorScope</name><operator>.</operator><name>majc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setProperty</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><call><name><name>Property</name><operator>.</operator><name>TABLE_MAJC_RATIO</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"1.0"</literal></expr></argument>)</argument_list></call></expr>;
     
    <decl_stmt><decl><type><name>BatchWriter</name></type> <name>bw</name> <init>= <expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createBatchWriter</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BatchWriter</name></type> <name>bw</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>createBatchWriter</name></name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">50</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>Mutation</name></type> <name>m</name> <init>= <expr><operator>new</operator> <call><name>Mutation</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%06d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>m</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"cf1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"cq1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Value</name><argument_list>(<argument><expr><literal type="string">"foo"</literal><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConcurrencyIT</name> extends <name>ConfigurableMacIT</name> <block>{
     }</block>
     <call><name><name>bw</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
    <decl_stmt><decl><type><name>ScanTask</name></type> <name>st0</name> <init>= <expr><operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ScanTask</name></type> <name>st0</name> <init>= <expr><operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>st0</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
    <decl_stmt><decl><type><name>ScanTask</name></type> <name>st1</name> <init>= <expr><operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ScanTask</name></type> <name>st1</name> <init>= <expr><operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>st1</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
     <expr_stmt><expr><call><name><name>UtilWaitThread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>flush</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>flush</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">50</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>Mutation</name></type> <name>m</name> <init>= <expr><operator>new</operator> <call><name>Mutation</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%06d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">116</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConcurrencyIT</name> extends <name>ConfigurableMacIT</name> <block>{
     
     <expr><call><name><name>bw</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;
     
    <expr><name>ScanTask</name> <name>st2</name> <operator>=</operator> <operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>ScanTask</name> <name>st2</name> <operator>=</operator> <operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>st2</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;
     
     <expr><call><name><name>st1</name><operator>.</operator><name>join</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">117</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">127</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConcurrencyIT</name> extends <name>ConfigurableMacIT</name> <block>{
     <if_stmt><if>if <condition>(<expr><name><name>st2</name><operator>.</operator><name>count</name></name> <operator>!=</operator> <literal type="number">50</literal></expr>)</condition><block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>Exception</name><argument_list>(<argument><expr><literal type="string">"Thread 2 did not see 50, saw "</literal> <operator>+</operator> <name><name>st2</name><operator>.</operator><name>count</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
     
    <name>ScanTask</name> <name>st3</name> <operator>=</operator> <operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">150</literal></expr></argument>)</argument_list></call></block></expr>;
    <expr><name>ScanTask</name> <name>st3</name> <operator>=</operator> <operator>new</operator> <call><name>ScanTask</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">150</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>st3</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;
     
     <expr><call><name><name>UtilWaitThread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>flush</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>flush</name><argument_list>(<argument><expr><literal type="string">"cct"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     
     <expr><call><name><name>st3</name><operator>.</operator><name>join</name></name><argument_list>()</argument_list></call></expr>;
     <if_stmt><if>if <condition>(<expr><name><name>st3</name><operator>.</operator><name>count</name></name> <operator>!=</operator> <literal type="number">50</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConfigurableMacIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConfigurableMacIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3f60f1dac</literal><operator>..</operator><literal type="number">21c2bb737</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConfigurableMacIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ConfigurableMacIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConfigurableMacIT</name> extends <name>AbstractMacIT</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>MiniAccumuloConfig</name> <name>cfg</name> <operator>=</operator> <operator>new</operator> <call><name>MiniAccumuloConfig</name><argument_list>(<argument><expr><call><name>createTestDir</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ROOT_PASSWORD</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <call><name>configure</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <call><name>configureForEnvironment</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>createSharedTestDir</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-ssl"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>cluster</name> <operator>=</operator> <operator>new</operator> <call><name>MiniAccumuloCluster</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>cluster</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConfigurableMacIT</name> extends <name>AbstractMacIT</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>String</name> <call><name>getMonitor</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
    <expr><name>Instance</name> <name>instance</name> <operator>=</operator> <operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Instance</name></type> <name>instance</name> <init>= <expr><operator>new</operator> <call><name>ZooKeeperInstance</name><argument_list>(<argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClientConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name><name>MonitorUtil</name><operator>.</operator><name>getLocation</name></name><argument_list>(<argument><expr><name>instance</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></for>
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>MapReduceIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>MapReduceIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9e42e5594</literal><operator>..</operator><literal type="number">0867e7305</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>MapReduceIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>MapReduceIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name></name>;</package>
 
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>MessageDigest</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>NoSuchAlgorithmException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>BatchWriterConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>MutationsRejectedException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Scanner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableExistsException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>TableNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Key</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Mutation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>data</name><operator>.</operator><name>Value</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>security</name><operator>.</operator><name>Authorizations</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>examples</name><operator>.</operator><name>simple</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>RowHash</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloCluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>codehaus</name><operator>.</operator><name>plexus</name><operator>.</operator><name>util</name><operator>.</operator><name>Base64</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>MapReduceIT</name> extends <name>ConfigurableMacIT</name> <block>{
 
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>test</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name>getConnector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><call><name>runTest</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block>

  <specifier>static</specifier> <name>void</name> <call><name>runTest</name><argument_list>(<argument><expr><name>Connector</name> <name>c</name></expr></argument>, <argument><expr><name>MiniAccumuloCluster</name> <name>cluster</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>TableExistsException</name></expr></argument>,
      <argument><expr><name>TableNotFoundException</name></expr></argument>, <argument><expr><name>MutationsRejectedException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument>, <argument><expr><name>NoSuchAlgorithmException</name> <block>{
     <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><name>tablename</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <decl_stmt><decl><type><name>BatchWriter</name></type> <name>bw</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>createBatchWriter</name></name><argument_list>(<argument><expr><name>tablename</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>MapReduceIT</name> extends <name>ConfigurableMacIT</name> <block>{
       <expr><call><name><name>bw</name><operator>.</operator><name>addMutation</name></name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;
     }</block>
     <call><name><name>bw</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Process</name></type> <name>hash</name> <init>= <expr><call><name>exec</name><argument_list>(<argument><expr><name><name>RowHash</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"-i"</literal></expr></argument>, <argument><expr><call><name><name>c</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"-z"</literal></expr></argument>, <argument><expr><call><name><name>c</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"-u"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"-p"</literal></expr></argument>, <argument><expr><name>ROOT_PASSWORD</name></expr></argument>, <argument><expr><literal type="string">"-t"</literal></expr></argument>,
        <argument><expr><name>tablename</name></expr></argument>, <argument><expr><literal type="string">"--column"</literal></expr></argument>, <argument><expr><name>input_cfcq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Process</name></type> <name>hash</name> <init>= <expr><call><name><name>cluster</name><operator>.</operator><name>exec</name></name><argument_list>(<argument><expr><name><name>RowHash</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"-i"</literal></expr></argument>, <argument><expr><call><name><name>c</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"-z"</literal></expr></argument>, <argument><expr><call><name><name>c</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZooKeepers</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"-u"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"-p"</literal></expr></argument>,
        <argument><expr><name>ROOT_PASSWORD</name></expr></argument>, <argument><expr><literal type="string">"-t"</literal></expr></argument>, <argument><expr><name>tablename</name></expr></argument>, <argument><expr><literal type="string">"--column"</literal></expr></argument>, <argument><expr><name>input_cfcq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>hash</name><operator>.</operator><name>waitFor</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>Scanner</name></type> <name>s</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>createScanner</name></name><argument_list>(<argument><expr><name>tablename</name></expr></argument>, <argument><expr><name><name>Authorizations</name><operator>.</operator><name>EMPTY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ScannerIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ScannerIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">79130898d</literal><operator>..</operator><name>e364b4626</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ScannerIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ScannerIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">55</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">55</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScannerIT</name> extends <name>SimpleMacIT</name> <block>{
     <expr><name>final</name> <name>String</name> <name>table</name> <operator>=</operator> <literal type="string">"table"</literal></expr>;
     <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name>getConnector</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>c</name><operator>.</operator><name>tableOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;
    

     <expr><name>BatchWriter</name> <name>bw</name> <operator>=</operator> <call><name><name>c</name><operator>.</operator><name>createBatchWriter</name></name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>BatchWriterConfig</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    

     <expr><name>Mutation</name> <name>m</name> <operator>=</operator> <operator>new</operator> <call><name>Mutation</name><argument_list>(<argument><expr><literal type="string">"a"</literal></expr></argument>)</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>m</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></for>}</block>
    

     <call><name><name>bw</name><operator>.</operator><name>addMutation</name></name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>bw</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    

     <decl_stmt><decl><type><name>Scanner</name></type> <name>s</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>createScanner</name></name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Authorizations</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    

     <decl_stmt><decl><type><name>IteratorSetting</name></type> <name>cfg</name> <init>= <expr><operator>new</operator> <call><name>IteratorSetting</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><name><name>SlowIterator</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>SlowIterator</name><operator>.</operator><name>setSleepTime</name></name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><literal type="number">100l</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>addScanIterator</name></name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>setReadaheadThreshold</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>setBatchSize</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    

     <decl_stmt><decl><type><name>Stopwatch</name></type> <name>sw</name> <init>= <expr><operator>new</operator> <call><name>Stopwatch</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>,<argument><name>Value</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>iterator</name> <init>= <expr><call><name><name>s</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    

     <expr_stmt><expr><call><name><name>sw</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <while>while <condition>(<expr><call><name><name>iterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>sw</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      

       <comment type="line">// While we "do work" in the client, we should be fetching the next result</comment>
       <expr_stmt><expr><call><name><name>UtilWaitThread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100l</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>iterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>sw</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></while>
     <expr_stmt><expr><call><name><name>sw</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    

     <decl_stmt><decl><type><name>long</name></type> <name>millisWithWait</name> <init>= <expr><call><name><name>sw</name><operator>.</operator><name>elapsed</name></name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    

     <expr_stmt><expr><name>s</name> <operator>=</operator> <call><name><name>c</name><operator>.</operator><name>createScanner</name></name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Authorizations</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>addScanIterator</name></name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>setBatchSize</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>setReadaheadThreshold</name></name><argument_list>(<argument><expr><literal type="number">0l</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    

     <expr_stmt><expr><name>sw</name> <operator>=</operator> <operator>new</operator> <call><name>Stopwatch</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>iterator</name> <operator>=</operator> <call><name><name>s</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    

     <expr_stmt><expr><call><name><name>sw</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <while>while <condition>(<expr><call><name><name>iterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>sw</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      

       <comment type="line">// While we "do work" in the client, we should be fetching the next result</comment>
       <expr_stmt><expr><call><name><name>UtilWaitThread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100l</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>iterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScannerIT</name> extends <name>SimpleMacIT</name> <block>{
     <expr><call><name><name>sw</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>long</name> <name>millisWithNoWait</name> <operator>=</operator> <call><name><name>sw</name><operator>.</operator><name>elapsed</name></name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr>;
    

     <comment type="line">// The "no-wait" time should be much less than the "wait-time"</comment>
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><literal type="string">"Expected less time to be taken with immediate readahead ("</literal> <operator>+</operator> <name>millisWithNoWait</name> 
        <operator>+</operator> <literal type="string">") than without immediate readahead ("</literal> <operator>+</operator> <name>millisWithWait</name> <operator>+</operator> <literal type="string">")"</literal></expr></argument>, <argument><expr><name>millisWithNoWait</name> <operator>&lt;</operator> <name>millisWithWait</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><literal type="string">"Expected less time to be taken with immediate readahead ("</literal> <operator>+</operator> <name>millisWithNoWait</name> <operator>+</operator> <literal type="string">") than without immediate readahead ("</literal> <operator>+</operator> <name>millisWithWait</name>
        <operator>+</operator> <literal type="string">")"</literal></expr></argument>, <argument><expr><name>millisWithNoWait</name> <operator>&lt;</operator> <name>millisWithWait</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
 </block_content>}</block></while>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ShutdownIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ShutdownIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8d5882102</literal><operator>..</operator><name>d1943677a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ShutdownIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>ShutdownIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name></name>;</package>
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicReference</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>Connector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>util</name><operator>.</operator><name>UtilWaitThread</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloCluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>server</name><operator>.</operator><name>util</name><operator>.</operator><name>Admin</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>TestIngest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>TestRandomDeletes</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShutdownIT</name> extends <name>ConfigurableMacIT</name> <block>{
   
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>adminStop</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Connector</name> <name>c</name> <operator>=</operator> <call><name>getConnector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><call><name>runAdminStopTest</name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>cluster</name></expr></argument>)</argument_list></call></expr>;
  }</block>

  <specifier>static</specifier> <name>void</name> <call><name>runAdminStopTest</name><argument_list>(<argument><expr><name>Connector</name> <name>c</name></expr></argument>, <argument><expr><name>MiniAccumuloCluster</name> <name>cluster</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>exec</name></name><argument_list>(<argument><expr><name><name>TestIngest</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"-i"</literal></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getInstanceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"-z"</literal></expr></argument>, <argument><expr><call><name><name>cluster</name><operator>.</operator><name>getZooKeepers</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"-u"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"-p"</literal></expr></argument>, <argument><expr><name>ROOT_PASSWORD</name></expr></argument>, <argument><expr><literal type="string">"--createTable"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>waitFor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>tabletServers</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>instanceOperations</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTabletServers</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>tabletServers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SimpleMacIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SimpleMacIT</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9086f13a4</literal><operator>..</operator><literal type="number">10db5156b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SimpleMacIT</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SimpleMacIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloCluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloInstance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>SimpleMacIT</name> <super_list><extends>extends <super><name>AbstractMacIT</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleMacIT</name> extends <name>AbstractMacIT</name> <block>{
     <if_stmt><if>if <condition>(<expr><call><name>getInstanceOneConnector</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>cluster</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>folder</name> <operator>=</operator> <call><name>createSharedTestDir</name><argument_list>(<argument><expr><call><name><name>SimpleMacIT</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>MiniAccumuloConfig</name></type> <name>cfg</name> <init>= <expr><operator>new</operator> <call><name>MiniAccumuloConfig</name><argument_list>(<argument><expr><name>folder</name></expr></argument>, <argument><expr><name>ROOT_PASSWORD</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>configureForEnvironment</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name><name>SimpleMacIT</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name>createSharedTestDir</name><argument_list>(<argument><expr><call><name><name>SimpleMacIT</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-ssl"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>cluster</name> <operator>=</operator> <operator>new</operator> <call><name>MiniAccumuloCluster</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>cluster</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Runtime</name><operator>.</operator><name>getRuntime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addShutdownHook</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Thread</name></super><argument_list>()</argument_list> <block>{
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> class <name>SimpleMacIT</name> extends <name>AbstractMacIT</name> <block>{
     <return>return <expr><operator>(</operator><call><name>getInstanceOneConnector</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>?</operator> <call><name><name>cluster</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDir</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>getInstanceOnePath</name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</return>
   }</block>
 
  <specifier>public</specifier> <specifier>static</specifier> <name>MiniAccumuloCluster</name> <call><name>getStaticCluster</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>cluster</name></expr>;</return>
  }</block>

  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>getFolder</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>folder</name></expr>;</return>
  }</block>

  @<name>After</name>
  <specifier>public</specifier> <name>void</name> <call><name>cleanUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{}</block>

  <annotation>@<name>AfterClass</name></annotation>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>tearDown</name><argument_list>()</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{}</block>

   <specifier>private</specifier> <specifier>static</specifier> <name>Connector</name> <call><name>getInstanceOneConnector</name><argument_list>()</argument_list></call> <block>{</block></expr></argument></throws></expr>
     <try>try <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>MiniAccumuloInstance</name><argument_list>(<argument><expr><literal type="string">"instance1"</literal></expr></argument>, <argument><expr><call><name>getInstanceOnePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getConnector</name><argument_list>(<argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>PasswordToken</name><argument_list>(<argument><expr><name>ROOT_PASSWORD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslIT</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..6a29ad708</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">62</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Do a selection of ITs with SSL turned on that cover a range of different connection scenarios. Note that you can run *all* the ITs against SSL-enabled mini
 * clusters with `mvn verify -DuseSslForIT`
 *
 */</comment>
<class><specifier>public</specifier> class <name>SslIT</name> <super_list><extends>extends <super><name>ConfigurableMacIT</name></super></extends></super_list> <block>{
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>configure</name><parameter_list>(<parameter><decl><type><name>MiniAccumuloConfig</name></type> <name>cfg</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>configure</name></name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>configureForSsl</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><call><name>createSharedTestDir</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-ssl"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt/>}</block_content>

  @Test(timeout = 60 * 1000</block></function>)</block>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>binary</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>getConnector</name><argument_list>()</argument_list></call><operator>.</operator><call><name>tableOperations</name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>(<argument><expr><literal type="string">"bt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>BinaryIT</name><operator>.</operator><name>runTest</name></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt/>}</block_content>

  @Test(timeout = 2 * 60 * 1000</block></function></class>)</block_content>
  public void concurrency(</block></try>)</block> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>ConcurrencyIT</name><operator>.</operator><name>runTest</name></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr></expr_stmt>
  <expr_stmt/></block_content></block></if></if_stmt>}</block>

  @<call><name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call>
  <specifier>public</specifier> <name>void</name> <call><name>adminStop</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>ShutdownIT</name><operator>.</operator><name>runAdminStopTest</name></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
  }</block></class>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>bulk</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>BulkIT</name><operator>.</operator><name>runTest</name></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getTableNames</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>mapReduce</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>MapReduceIT</name><operator>.</operator><name>runTest</name></name><argument_list>(<argument><expr><call><name>getConnector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getCluster</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

</block_content>}</block></for>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslWithClientAuthIT</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslWithClientAuthIT</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..c40e2b37f</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>functional</name><operator>/</operator><name><name>SslWithClientAuthIT</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">71</literal> @@</expr>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>functional</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>minicluster</name><operator>.</operator><name>MiniAccumuloConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Run all the same tests as SslIT, but with client auth turned on.
 *
 * All the methods are overridden just to make it easier to run individual tests from an IDE.
 *
 */</comment>
<class><specifier>public</specifier> class <name>SslWithClientAuthIT</name> <super_list><extends>extends <super><name>SslIT</name></super></extends></super_list> <block>{
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>configure</name><parameter_list>(<parameter><decl><type><name>MiniAccumuloConfig</name></type> <name>cfg</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>configure</name></name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>site</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>getSiteConfig</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>site</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Property</name><operator>.</operator><name>INSTANCE_RPC_SSL_CLIENT_AUTH</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cfg</name><operator>.</operator><name>setSiteConfig</name></name><argument_list>(<argument><expr><name>site</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">60000</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>binary</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AccumuloException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>binary</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">120000</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>concurrency</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>concurrency</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">120000</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>adminStop</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>adminStop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">120000</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>bulk</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>bulk</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Test</name><argument_list>(<argument><expr><name>timeout</name> <operator>=</operator> <literal type="number">60000</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>mapReduce</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>mapReduce</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtils</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..bb7b16db5</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">324</literal> @@</expr>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>BigInteger</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>KeyPair</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>KeyPairGenerator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>KeyStore</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>KeyStoreException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>NoSuchAlgorithmException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>NoSuchProviderException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>PrivateKey</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>PublicKey</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>Security</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>UnrecoverableKeyException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>cert</name><operator>.</operator><name>Certificate</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>cert</name><operator>.</operator><name>CertificateException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Calendar</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Enumeration</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>cli</name><operator>.</operator><name>Help</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>client</name><operator>.</operator><name>AccumuloSecurityException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>AccumuloConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>DefaultConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>core</name><operator>.</operator><name>conf</name><operator>.</operator><name>Property</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileExistsException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>asn1</name><operator>.</operator><name>x500</name><operator>.</operator><name>X500Name</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>asn1</name><operator>.</operator><name>x500</name><operator>.</operator><name>style</name><operator>.</operator><name>IETFUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>asn1</name><operator>.</operator><name>x500</name><operator>.</operator><name>style</name><operator>.</operator><name>RFC4519Style</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>asn1</name><operator>.</operator><name>x509</name><operator>.</operator><name>BasicConstraints</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>asn1</name><operator>.</operator><name>x509</name><operator>.</operator><name>KeyUsage</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>asn1</name><operator>.</operator><name>x509</name><operator>.</operator><name>X509Extension</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>cert</name><operator>.</operator><name>CertIOException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>cert</name><operator>.</operator><name>X509CertificateHolder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>cert</name><operator>.</operator><name>jcajce</name><operator>.</operator><name>JcaX509ExtensionUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>cert</name><operator>.</operator><name>jcajce</name><operator>.</operator><name>JcaX509v3CertificateBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>jce</name><operator>.</operator><name>provider</name><operator>.</operator><name>BouncyCastleProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>jce</name><operator>.</operator><name>provider</name><operator>.</operator><name>X509CertificateObject</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>operator</name><operator>.</operator><name>OperatorCreationException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>bouncycastle</name><operator>.</operator><name>operator</name><operator>.</operator><name>jcajce</name><operator>.</operator><name>JcaContentSignerBuilder</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>beust</name><operator>.</operator><name>jcommander</name><operator>.</operator><name>JCommander</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>beust</name><operator>.</operator><name>jcommander</name><operator>.</operator><name>Parameter</name></name>;</import>

<class><specifier>public</specifier> class <name>CertUtils</name> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>CertUtils</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <static>static <block>{<block_content>
    <expr_stmt><expr><call><name><name>Security</name><operator>.</operator><name>addProvider</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>BouncyCastleProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></static>

  <class><specifier>static</specifier> class <name>Opts</name> <super_list><extends>extends <super><name>Help</name></super></extends></super_list> <block>{
    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>description</name> <operator>=</operator> <literal type="string">"generate-all | generate-local | generate-self-trusted"</literal></expr></argument>, <argument><expr><name>required</name> <operator>=</operator> <literal type="boolean">true</literal></expr></argument>, <argument><expr><name>arity</name> <operator>=</operator> <literal type="number">1</literal></expr></argument>)</argument_list></annotation>
    <type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>operation</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--local-keystore"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Target path for generated keystore"</literal></expr></argument>)</argument_list></annotation>
    <type><name>String</name></type> <name>localKeystore</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--root-keystore"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Path to root truststore, generated with generate-all, or used for signing with generate-local"</literal></expr></argument>)</argument_list></annotation>
    <type><name>String</name></type> <name>rootKeystore</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--root-truststore"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Target path for generated public root truststore"</literal></expr></argument>)</argument_list></annotation>
    <type><name>String</name></type> <name>truststore</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--keystore-type"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Type of keystore file to use"</literal></expr></argument>)</argument_list></annotation>
    <type><name>String</name></type> <name>keystoreType</name> <init>= <expr><literal type="string">"JKS"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(
        <argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--keystore-password"</literal></expr>}</block></expr></argument>,
        <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Password used to encrypt keystores.  If omitted, the instance-wide secret will be used.  If specified, the password must also be explicitly configured in Accumulo."</literal></expr></argument>)</argument_list></annotation>
    <type><name>String</name></type> <name>keystorePassword</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--key-name-prefix"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Prefix for names of generated keys"</literal></expr></argument>)</argument_list></annotation>
    <type><name>String</name></type> <name>keyNamePrefix</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <block>{<expr><literal type="string">"--issuer-rdn"</literal></expr>}</block></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"RDN string for issuer, for example: 'c=US,o=My Organization,cn=My Name'"</literal></expr></argument>)</argument_list></annotation>
    <type><name>String</name></type> <name>issuerDirString</name> <init>= <expr><literal type="string">"o=Apache Accumulo"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--site-file"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Load configuration from the given site file"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>siteFile</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--signing-algorithm"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Algorithm used to sign certificates"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>signingAlg</name> <init>= <expr><literal type="string">"SHA256WITHRSA"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--encryption-algorithm"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Algorithm used to encrypt private keys"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>encryptionAlg</name> <init>= <expr><literal type="string">"RSA"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><annotation>@<name>Parameter</name><argument_list>(<argument><expr><name>names</name> <operator>=</operator> <literal type="string">"--keysize"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Key size used by encryption algorithm"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>keysize</name> <init>= <expr><literal type="number">2048</literal></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name>AccumuloConfiguration</name></type> <name>getConfiguration</name><parameter_list>()</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>siteFile</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getSiteConfiguration</name></name><argument_list>()</argument_list></call></expr>;</return>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <return>return <expr><operator>new</operator> <class><super><name>AccumuloConfiguration</name></super><argument_list>()</argument_list> <block>{
          <decl_stmt><decl><type><name>Configuration</name></type> <name>xml</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <block>{<block_content>
            <expr_stmt><expr><call><name><name>xml</name><operator>.</operator><name>addResource</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>siteFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block>

          <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>iterator</name><parameter_list>()</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name><name>TreeMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>props</name> <range>: <expr><call><name><name>DefaultConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
              <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>props</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>props</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
            <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>props</name> <range>: <expr><name>xml</name></expr></range></decl></init>)</control><block type="pseudo"><block_content>
              <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>props</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>props</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
            <return>return <expr><call><name><name>map</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr>;</return>
          </block_content>}</block></function>

          <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>String</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>Property</name></type> <name>property</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><call><name><name>xml</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
              <return>return <expr><name>value</name></expr>;</return></block_content></block></if></if_stmt>
            <return>return <expr><call><name><name>DefaultConfiguration</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>property</name></expr></argument>)</argument_list></call></expr>;</return>
          </block_content>}</block></function>

          <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>void</name></type> <name>getProperties</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>props</name></decl></parameter>, <parameter><decl><type><name>PropertyFilter</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>entry</name> <range>: <expr><name>this</name></expr></range></decl></init>)</control><block type="pseudo"><block_content>
              <if_stmt><if>if <condition>(<expr><call><name><name>filter</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
                <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
          </block_content>}</block></function>
        }</block></class></expr>;</return>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
  }</block></class>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Opts</name></type> <name>opts</name> <init>= <expr><operator>new</operator> <call><name>Opts</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>opts</name><operator>.</operator><name>parseArgs</name></name><argument_list>(<argument><expr><call><name><name>CertUtils</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>operation</name> <init>= <expr><call><name><name>opts</name><operator>.</operator><name>operation</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>keyPassword</name> <init>= <expr><name><name>opts</name><operator>.</operator><name>keystorePassword</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>keyPassword</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><name>keyPassword</name> <operator>=</operator> <call><name>getDefaultKeyPassword</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>CertUtils</name></type> <name>certUtils</name> <init>= <expr><operator>new</operator> <call><name>CertUtils</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>keystoreType</name></name></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>issuerDirString</name></name></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>encryptionAlg</name></name></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>keysize</name></name></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>signingAlg</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><literal type="string">"generate-all"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>operation</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createAll</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>rootKeystore</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>localKeystore</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>truststore</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>keyNamePrefix</name></name></expr></argument>, <argument><expr><name>keyPassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"generate-local"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>operation</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSignedCert</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>localKeystore</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>keyNamePrefix</name></name> <operator>+</operator> <literal type="string">"-local"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>rootKeystore</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"generate-self-trusted"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>operation</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSelfSignedCert</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>opts</name><operator>.</operator><name>truststore</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>opts</name><operator>.</operator><name>keyNamePrefix</name></name> <operator>+</operator> <literal type="string">"-selfTrusted"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <decl_stmt><decl><type><name>JCommander</name></type> <name>jcommander</name> <init>= <expr><operator>new</operator> <call><name>JCommander</name><argument_list>(<argument><expr><name>opts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>jcommander</name><operator>.</operator><name>setProgramName</name></name><argument_list>(<argument><expr><call><name><name>CertUtils</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>jcommander</name><operator>.</operator><name>usage</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Unrecognized operation: "</literal> <operator>+</operator> <name><name>opts</name><operator>.</operator><name>operation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>getDefaultKeyPassword</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>AccumuloConfiguration</name><operator>.</operator><name>getSiteConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>Property</name><operator>.</operator><name>INSTANCE_SECRET</name></name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>issuerDirString</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>keystoreType</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>encryptionAlgorithm</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>keysize</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>signingAlgorithm</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>CertUtils</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>keystoreType</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>issuerDirString</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>encryptionAlgorithm</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>keysize</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>signingAlgorithm</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>keystoreType</name></name> <operator>=</operator> <name>keystoreType</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>issuerDirString</name></name> <operator>=</operator> <name>issuerDirString</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>encryptionAlgorithm</name></name> <operator>=</operator> <name>encryptionAlgorithm</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>keysize</name></name> <operator>=</operator> <name>keysize</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>signingAlgorithm</name></name> <operator>=</operator> <name>signingAlgorithm</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>createAll</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>rootKeystoreFile</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>localKeystoreFile</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>trustStoreFile</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keyNamePrefix</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>systemPassword</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>KeyStoreException</name></expr></argument>, <argument><expr><name>CertificateException</name></expr></argument>, <argument><expr><name>NoSuchAlgorithmException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>OperatorCreationException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>,
      <argument><expr><name>NoSuchProviderException</name></expr></argument>, <argument><expr><name>UnrecoverableKeyException</name></expr></argument>, <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>createSelfSignedCert</name><argument_list>(<argument><expr><name>rootKeystoreFile</name></expr></argument>, <argument><expr><name>keyNamePrefix</name> <operator>+</operator> <literal type="string">"-root"</literal></expr></argument>, <argument><expr><name>systemPassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>createSignedCert</name><argument_list>(<argument><expr><name>localKeystoreFile</name></expr></argument>, <argument><expr><name>keyNamePrefix</name> <operator>+</operator> <literal type="string">"-local"</literal></expr></argument>, <argument><expr><name>systemPassword</name></expr></argument>, <argument><expr><call><name><name>rootKeystoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>systemPassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>createPublicCert</name><argument_list>(<argument><expr><name>trustStoreFile</name></expr></argument>, <argument><expr><name>keyNamePrefix</name> <operator>+</operator> <literal type="string">"-public"</literal></expr></argument>, <argument><expr><call><name><name>rootKeystoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>systemPassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>createPublicCert</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>targetKeystoreFile</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keyName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>rootKeystorePath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>rootKeystorePassword</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>NoSuchAlgorithmException</name></expr></argument>,
      <argument><expr><name>CertificateException</name></expr></argument>, <argument><expr><name>FileNotFoundException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>KeyStoreException</name></expr></argument>, <argument><expr><name>UnrecoverableKeyException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>KeyStore</name></type> <name>signerKeystore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>keystoreType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>char</name><index>[]</index></name></type> <name>signerPasswordArray</name> <init>= <expr><call><name><name>rootKeystorePassword</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>signerKeystore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>rootKeystorePath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>signerPasswordArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>rootCert</name> <init>= <expr><call><name>findCert</name><argument_list>(<argument><expr><name>signerKeystore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>keystore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>keystoreType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>setCertificateEntry</name></name><argument_list>(<argument><expr><name>keyName</name> <operator>+</operator> <literal type="string">"Cert"</literal></expr></argument>, <argument><expr><name>rootCert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>targetKeystoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <name><name>char</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>createSignedCert</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>targetKeystoreFile</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keyName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keystorePassword</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>signerKeystorePath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>signerKeystorePassword</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>KeyStoreException</name></expr></argument>, <argument><expr><name>CertificateException</name></expr></argument>, <argument><expr><name>NoSuchAlgorithmException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>OperatorCreationException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>,
      <argument><expr><name>UnrecoverableKeyException</name></expr></argument>, <argument><expr><name>NoSuchProviderException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>KeyStore</name></type> <name>signerKeystore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>keystoreType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>char</name><index>[]</index></name></type> <name>signerPasswordArray</name> <init>= <expr><call><name><name>signerKeystorePassword</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>signerKeystore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>signerKeystorePath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>signerPasswordArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>signerCert</name> <init>= <expr><call><name>findCert</name><argument_list>(<argument><expr><name>signerKeystore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PrivateKey</name></type> <name>signerKey</name> <init>= <expr><call><name>findPrivateKey</name><argument_list>(<argument><expr><name>signerKeystore</name></expr></argument>, <argument><expr><name>signerPasswordArray</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>KeyPair</name></type> <name>kp</name> <init>= <expr><call><name>generateKeyPair</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>X509CertificateObject</name></type> <name>cert</name> <init>= <expr><call><name>generateCert</name><argument_list>(<argument><expr><name>keyName</name></expr></argument>, <argument><expr><name>kp</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>signerCert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>signerKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>char</name><index>[]</index></name></type> <name>password</name> <init>= <expr><call><name><name>keystorePassword</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>KeyStore</name></type> <name>keystore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>keystoreType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>setCertificateEntry</name></name><argument_list>(<argument><expr><name>keyName</name> <operator>+</operator> <literal type="string">"Cert"</literal></expr></argument>, <argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>setKeyEntry</name></name><argument_list>(<argument><expr><name>keyName</name> <operator>+</operator> <literal type="string">"Key"</literal></expr></argument>, <argument><expr><call><name><name>kp</name><operator>.</operator><name>getPrivate</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>password</name></expr></argument>, <argument><expr><operator>new</operator> <name><name>Certificate</name><index>[]</index></name> <block>{<expr><name>cert</name></expr>, <expr><name>signerCert</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>targetKeystoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>createSelfSignedCert</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>targetKeystoreFile</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keyName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keystorePassword</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>KeyStoreException</name></expr></argument>, <argument><expr><name>CertificateException</name></expr></argument>,
      <argument><expr><name>NoSuchAlgorithmException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>OperatorCreationException</name></expr></argument>, <argument><expr><name>AccumuloSecurityException</name></expr></argument>, <argument><expr><name>NoSuchProviderException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>targetKeystoreFile</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>FileExistsException</name><argument_list>(<argument><expr><name>targetKeystoreFile</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>KeyPair</name></type> <name>kp</name> <init>= <expr><call><name>generateKeyPair</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>X509CertificateObject</name></type> <name>cert</name> <init>= <expr><call><name>generateCert</name><argument_list>(<argument><expr><name>keyName</name></expr></argument>, <argument><expr><name>kp</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>kp</name><operator>.</operator><name>getPublic</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>kp</name><operator>.</operator><name>getPrivate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>char</name><index>[]</index></name></type> <name>password</name> <init>= <expr><call><name><name>keystorePassword</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>KeyStore</name></type> <name>keystore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>keystoreType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>setCertificateEntry</name></name><argument_list>(<argument><expr><name>keyName</name> <operator>+</operator> <literal type="string">"Cert"</literal></expr></argument>, <argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>setKeyEntry</name></name><argument_list>(<argument><expr><name>keyName</name> <operator>+</operator> <literal type="string">"Key"</literal></expr></argument>, <argument><expr><call><name><name>kp</name><operator>.</operator><name>getPrivate</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>password</name></expr></argument>, <argument><expr><operator>new</operator> <name><name>Certificate</name><index>[]</index></name> <block>{<expr><name>cert</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>keystore</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>targetKeystoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>KeyPair</name></type> <name>generateKeyPair</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>NoSuchAlgorithmException</name></expr></argument>, <argument><expr><name>NoSuchProviderException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>KeyPairGenerator</name></type> <name>gen</name> <init>= <expr><call><name><name>KeyPairGenerator</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>encryptionAlgorithm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>gen</name><operator>.</operator><name>initialize</name></name><argument_list>(<argument><expr><name>keysize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>gen</name><operator>.</operator><name>generateKeyPair</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>X509CertificateObject</name></type> <name>generateCert</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>keyName</name></decl></parameter>, <parameter><decl><type><name>KeyPair</name></type> <name>kp</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>isCertAuthority</name></decl></parameter>, <parameter><decl><type><name>PublicKey</name></type> <name>signerPublicKey</name></decl></parameter>, <parameter><decl><type><name>PrivateKey</name></type> <name>signerPrivateKey</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>CertIOException</name></expr></argument>, <argument><expr><name>OperatorCreationException</name></expr></argument>, <argument><expr><name>CertificateException</name></expr></argument>, <argument><expr><name>NoSuchAlgorithmException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Calendar</name></type> <name>startDate</name> <init>= <expr><call><name><name>Calendar</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Calendar</name></type> <name>endDate</name> <init>= <expr><call><name><name>Calendar</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>endDate</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>Calendar</name><operator>.</operator><name>YEAR</name></name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>BigInteger</name></type> <name>serialNumber</name> <init>= <expr><call><name><name>BigInteger</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><operator>(</operator><call><name><name>startDate</name><operator>.</operator><name>getTimeInMillis</name></name><argument_list>()</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>X500Name</name></type> <name>issuer</name> <init>= <expr><operator>new</operator> <call><name>X500Name</name><argument_list>(<argument><expr><call><name><name>IETFUtils</name><operator>.</operator><name>rDNsFromString</name></name><argument_list>(<argument><expr><name>issuerDirString</name></expr></argument>, <argument><expr><name><name>RFC4519Style</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>JcaX509v3CertificateBuilder</name></type> <name>certGen</name> <init>= <expr><operator>new</operator> <call><name>JcaX509v3CertificateBuilder</name><argument_list>(<argument><expr><name>issuer</name></expr></argument>, <argument><expr><name>serialNumber</name></expr></argument>, <argument><expr><call><name><name>startDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>endDate</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>issuer</name></expr></argument>, <argument><expr><call><name><name>kp</name><operator>.</operator><name>getPublic</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>JcaX509ExtensionUtils</name></type> <name>extensionUtils</name> <init>= <expr><operator>new</operator> <call><name>JcaX509ExtensionUtils</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certGen</name><operator>.</operator><name>addExtension</name></name><argument_list>(<argument><expr><name><name>X509Extension</name><operator>.</operator><name>subjectKeyIdentifier</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>extensionUtils</name><operator>.</operator><name>createSubjectKeyIdentifier</name></name><argument_list>(<argument><expr><call><name><name>kp</name><operator>.</operator><name>getPublic</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>certGen</name><operator>.</operator><name>addExtension</name></name><argument_list>(<argument><expr><name><name>X509Extension</name><operator>.</operator><name>basicConstraints</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BasicConstraints</name><argument_list>(<argument><expr><name>isCertAuthority</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>certGen</name><operator>.</operator><name>addExtension</name></name><argument_list>(<argument><expr><name><name>X509Extension</name><operator>.</operator><name>authorityKeyIdentifier</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>extensionUtils</name><operator>.</operator><name>createAuthorityKeyIdentifier</name></name><argument_list>(<argument><expr><name>signerPublicKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>isCertAuthority</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>certGen</name><operator>.</operator><name>addExtension</name></name><argument_list>(<argument><expr><name><name>X509Extension</name><operator>.</operator><name>keyUsage</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>KeyUsage</name><argument_list>(<argument><expr><name><name>KeyUsage</name><operator>.</operator><name>keyCertSign</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>X509CertificateHolder</name></type> <name>cert</name> <init>= <expr><call><name><name>certGen</name><operator>.</operator><name>build</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>JcaContentSignerBuilder</name><argument_list>(<argument><expr><name>signingAlgorithm</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>(<argument><expr><name>signerPrivateKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><operator>new</operator> <call><name>X509CertificateObject</name><argument_list>(<argument><expr><call><name><name>cert</name><operator>.</operator><name>toASN1Structure</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <name>Certificate</name></type> <name>findCert</name><parameter_list>(<parameter><decl><type><name>KeyStore</name></type> <name>keyStore</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>KeyStoreException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Enumeration</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>aliases</name> <init>= <expr><call><name><name>keyStore</name><operator>.</operator><name>aliases</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>cert</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><call><name><name>aliases</name><operator>.</operator><name>hasMoreElements</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>alias</name> <init>= <expr><call><name><name>aliases</name><operator>.</operator><name>nextElement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>keyStore</name><operator>.</operator><name>isCertificateEntry</name></name><argument_list>(<argument><expr><name>alias</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>cert</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>cert</name> <operator>=</operator> <call><name><name>keyStore</name><operator>.</operator><name>getCertificate</name></name><argument_list>(<argument><expr><name>alias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Found multiple certificates in keystore.  Ignoring "</literal> <operator>+</operator> <name>alias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <if_stmt><if>if <condition>(<expr><name>cert</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>KeyStoreException</name><argument_list>(<argument><expr><literal type="string">"Could not find cert in keystore"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>cert</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <name>PrivateKey</name></type> <name>findPrivateKey</name><parameter_list>(<parameter><decl><type><name>KeyStore</name></type> <name>keyStore</name></decl></parameter>, <parameter><decl><type><name><name>char</name><index>[]</index></name></type> <name>keystorePassword</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>UnrecoverableKeyException</name></expr></argument>, <argument><expr><name>KeyStoreException</name></expr></argument>, <argument><expr><name>NoSuchAlgorithmException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Enumeration</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>aliases</name> <init>= <expr><call><name><name>keyStore</name><operator>.</operator><name>aliases</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PrivateKey</name></type> <name>key</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><call><name><name>aliases</name><operator>.</operator><name>hasMoreElements</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>alias</name> <init>= <expr><call><name><name>aliases</name><operator>.</operator><name>nextElement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>keyStore</name><operator>.</operator><name>isKeyEntry</name></name><argument_list>(<argument><expr><name>alias</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>key</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>key</name> <operator>=</operator> <operator>(</operator><name>PrivateKey</name><operator>)</operator> <call><name><name>keyStore</name><operator>.</operator><name>getKey</name></name><argument_list>(<argument><expr><name>alias</name></expr></argument>, <argument><expr><name>keystorePassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Found multiple keys in keystore.  Ignoring "</literal> <operator>+</operator> <name>alias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
    <if_stmt><if>if <condition>(<expr><name>key</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>KeyStoreException</name><argument_list>(<argument><expr><literal type="string">"Could not find private key in keystore"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>key</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtilsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtilsTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..bb2a9339b</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>test</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>accumulo</name><operator>/</operator><name>test</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CertUtilsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">158</literal> @@</expr>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>accumulo</name><operator>.</operator><name>test</name><operator>.</operator><name>util</name></name>;</package>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>fail</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>KeyStore</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>KeyStoreException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>SignatureException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>cert</name><operator>.</operator><name>Certificate</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Rule</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>TemporaryFolder</name></name>;</import>

<class><specifier>public</specifier> class <name>CertUtilsTest</name> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>KEYSTORE_TYPE</name> <init>= <expr><literal type="string">"JKS"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PASSWORD</name> <init>= <expr><literal type="string">"CertUtilsTestPassword"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>char</name><index>[]</index></name></type> <name>PASSWORD_CHARS</name> <init>= <expr><call><name><name>PASSWORD</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>RDN_STRING</name> <init>= <expr><literal type="string">"o=Apache Accumulo,cn=CertUtilsTest"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
  <type><specifier>public</specifier> <name>TemporaryFolder</name></type> <name>folder</name> <init>= <expr><operator>new</operator> <call><name>TemporaryFolder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><type><specifier>private</specifier> <name>CertUtils</name></type> <name>getUtils</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>CertUtils</name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>, <argument><expr><name>RDN_STRING</name></expr></argument>, <argument><expr><literal type="string">"RSA"</literal></expr></argument>, <argument><expr><literal type="number">2048</literal></expr></argument>, <argument><expr><literal type="string">"sha1WithRSAEncryption"</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>createSelfSigned</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>CertUtils</name></type> <name>certUtils</name> <init>= <expr><call><name>getUtils</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>keyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"selfsigned.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSelfSignedCert</name></name><argument_list>(<argument><expr><name>keyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>keyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>keyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>keyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD_CHARS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>cert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>keyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>cert</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><call><name><name>cert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// throws exception if it can't be verified</comment>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>createPublicSelfSigned</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>CertUtils</name></type> <name>certUtils</name> <init>= <expr><call><name>getUtils</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>rootKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"root.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSelfSignedCert</name></name><argument_list>(<argument><expr><name>rootKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>publicKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"public.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createPublicCert</name></name><argument_list>(<argument><expr><name>publicKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><call><name><name>rootKeyStoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>keyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>keyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>publicKeyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <name><name>char</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>CertUtils</name><operator>.</operator><name>findPrivateKey</name></name><argument_list>(<argument><expr><name>keyStore</name></expr></argument>, <argument><expr><name>PASSWORD_CHARS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"expected not to find private key in keystore"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>KeyStoreException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"private key"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>cert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>keyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>cert</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><call><name><name>cert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// throws exception if it can't be verified</comment>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>createSigned</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>CertUtils</name></type> <name>certUtils</name> <init>= <expr><call><name>getUtils</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>rootKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"root.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSelfSignedCert</name></name><argument_list>(<argument><expr><name>rootKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>signedKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"signed.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSignedCert</name></name><argument_list>(<argument><expr><name>signedKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>, <argument><expr><call><name><name>rootKeyStoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>rootKeyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>rootKeyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>rootKeyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD_CHARS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>rootCert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>rootKeyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>signedKeyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>signedKeyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>signedKeyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD_CHARS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>signedCert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>signedKeyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>signedCert</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><call><name><name>signedCert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"signed cert should not be able to verify itself"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SignatureException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// expected</comment>
    </block_content>}</block></catch></try>

    <expr_stmt><expr><call><name><name>signedCert</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><call><name><name>rootCert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// throws exception if it can't be verified</comment>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>publicOnlyVerfication</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// this approximates the real life scenario. the client will only have the public key of each</comment>
    <comment type="line">// cert (the root made by us as below, but the signed cert extracted by the SSL transport)</comment>
    <decl_stmt><decl><type><name>CertUtils</name></type> <name>certUtils</name> <init>= <expr><call><name>getUtils</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>rootKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"root.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSelfSignedCert</name></name><argument_list>(<argument><expr><name>rootKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>publicRootKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"publicroot.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createPublicCert</name></name><argument_list>(<argument><expr><name>publicRootKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><call><name><name>rootKeyStoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>signedKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"signed.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSignedCert</name></name><argument_list>(<argument><expr><name>signedKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>, <argument><expr><call><name><name>rootKeyStoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>publicSignedKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"publicsigned.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createPublicCert</name></name><argument_list>(<argument><expr><name>publicSignedKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><call><name><name>signedKeyStoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>rootKeyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>rootKeyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>publicRootKeyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <name><name>char</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>KeyStore</name></type> <name>signedKeyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>signedKeyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>publicSignedKeyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <name><name>char</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>rootCert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>rootKeyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>signedCert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>signedKeyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>signedCert</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><call><name><name>signedCert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"signed cert should not be able to verify itself"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SignatureException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// expected</comment>
    </block_content>}</block></catch></try>

    <expr_stmt><expr><call><name><name>signedCert</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><call><name><name>rootCert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// throws exception if it can't be verified</comment>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>signingChain</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// no reason the keypair we generate for the tservers need to be able to sign anything,</comment>
    <comment type="line">// but this is a way to make sure the private and public keys created actually correspond.</comment>
    <decl_stmt><decl><type><name>CertUtils</name></type> <name>certUtils</name> <init>= <expr><call><name>getUtils</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>rootKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"root.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSelfSignedCert</name></name><argument_list>(<argument><expr><name>rootKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>signedCaKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"signedca.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSignedCert</name></name><argument_list>(<argument><expr><name>signedCaKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>, <argument><expr><call><name><name>rootKeyStoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>signedLeafKeyStoreFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"signedleaf.jks"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>certUtils</name><operator>.</operator><name>createSignedCert</name></name><argument_list>(<argument><expr><name>signedLeafKeyStoreFile</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>, <argument><expr><call><name><name>signedCaKeyStoreFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>caKeyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>caKeyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>signedCaKeyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD_CHARS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>caCert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>caKeyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>KeyStore</name></type> <name>leafKeyStore</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>KEYSTORE_TYPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>leafKeyStore</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>signedLeafKeyStoreFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PASSWORD_CHARS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Certificate</name></type> <name>leafCert</name> <init>= <expr><call><name><name>CertUtils</name><operator>.</operator><name>findCert</name></name><argument_list>(<argument><expr><name>leafKeyStore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>leafCert</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><call><name><name>caCert</name><operator>.</operator><name>getPublicKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// throws exception if it can't be verified</comment>
  </block_content>}</block></function>
}</block></class>
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></class></block></class></block_content></block></function></block></class></block></enum></block_content></block></function>

</unit>
