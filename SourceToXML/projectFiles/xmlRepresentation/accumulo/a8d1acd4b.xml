<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/accumulo/a8d1acd4b.java"><expr><name>From</name> <name>a8d1acd4bb34947ac49830e5a671e3f528ca2f7e</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name><name>phrocker</name> <argument_list type="generic">&lt;<argument><name><name>marc</name><operator>.</operator><name>parisi</name></name><annotation>@<name><name>gmail</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">14</literal> <name>Jul</name> <literal type="number">2016</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">42</literal><operator>:</operator><literal type="number">31</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>ACCUMULO</name><operator>-</operator><literal type="number">4372</literal> <name>Fixes</name> <name>synchronization</name> <name>in</name> <name>CompressionTest</name>

<name>Also</name> <name>changed</name> <name>LZO</name> <name>so</name> <name>that</name> <name>creating</name> <name>a</name> <operator>new</operator> <name>codec</name> <name>doesn</name><literal type="char">'</literal></expr>t always assign the new codec to the default variable

Signed-off-by: Josh Elser &lt;elserj@apache.org&gt;
--
 .../apache/accumulo/core/file/rfile/bcfile/Compression.java   | 3 +--
 .../accumulo/core/file/rfile/bcfile/CompressionTest.java      | 4 +++-
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/Compression.java b/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/Compression.java
index 3b8246241..fb0c0660a 100644
-- a/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/Compression.java
++ b/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/Compression.java
@@ -155,8 +155,7 @@ public final class Compression {
           // the default defined within the codec
           if (bufferSize &gt; 0)
             myConf.setInt(BUFFER_SIZE_OPT, bufferSize);
          codec = (CompressionCodec) ReflectionUtils.newInstance(Class.forName(clazz), myConf);
          return codec;
          return (CompressionCodec) ReflectionUtils.newInstance(Class.forName(clazz), myConf);
         } catch (ClassNotFoundException e) {
           // that is okay
         }
diff --git a/core/src/test/java/org/apache/accumulo/core/file/rfile/bcfile/CompressionTest.java b/core/src/test/java/org/apache/accumulo/core/file/rfile/bcfile/CompressionTest.java
index 961556424..683ad4850 100644
-- a/core/src/test/java/org/apache/accumulo/core/file/rfile/bcfile/CompressionTest.java
++ b/core/src/test/java/org/apache/accumulo/core/file/rfile/bcfile/CompressionTest.java
@@ -225,7 +225,9 @@ public class CompressionTest {
               CompressionCodec codec = al.getCodec();
               Assert.assertNotNull(al + " resulted in a non-null codec", codec);
               // add the identity hashcode to the set.
              testSet.add(System.identityHashCode(codec));
              synchronized (testSet) {
                testSet.add(System.identityHashCode(codec));
              }
               return true;
             }
           });
- 
2.19.1.windows.1

</unit>
