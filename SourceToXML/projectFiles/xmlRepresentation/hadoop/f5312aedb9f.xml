<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/f5312aedb9f.java"><expr_stmt><expr><name>From</name> <name>f5312aedb9fa3dc895d61844b5c3202b02554f80</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Daryn</name> <name><name>Sharp</name> <argument_list type="generic">&lt;<argument><name>daryn</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">5</literal> <name>Aug</name> <literal type="number">2013</literal> <literal type="number">22</literal><operator>:</operator><literal type="number">02</literal><operator>:</operator><literal type="number">40</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">9816.</literal> <name>RPC</name> <name>Sasl</name> <name>QOP</name> <name>is</name> <call><name>broken</name> <argument_list>(<argument><expr><name>daryn</name></expr></argument>)</argument_list></call>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/hadoop/common/trunk@1510772 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Client</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">11</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Server</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">22</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SaslRpcClient</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">7</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestSaslRPC</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">64</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">79</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">27</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">8302f0df2d1</literal><operator>..</operator><name>f28cfd00e13</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">686</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">686</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>Release</name> <literal type="number">2.1.0</literal><operator>-</operator><name>beta</name> <operator>-</operator> <literal type="number">2013</literal><operator>-</operator><literal type="number">08</literal><operator>-</operator><literal type="number">06</literal>
     <name>HADOOP</name><operator>-</operator><literal type="number">9507.</literal> <name>LocalFileSystem</name> <call><name>rename</name><argument_list>()</argument_list></call> <name>is</name> <name>broken</name> <name>in</name> <name>some</name> <name>cases</name> <name>when</name>
     <name>destination</name> <name><name>exists</name><operator>.</operator></name> (<name>cnauroth</name></expr></expr_stmt>)
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">9816.</literal> <name>RPC</name> <name>Sasl</name> <name>QOP</name> <name>is</name> <call><name>broken</name> <argument_list>(<argument><expr><name>daryn</name></expr></argument>)</argument_list></call>

   <name>BREAKDOWN</name> <name>OF</name> <name>HADOOP</name><operator>-</operator><literal type="number">8562</literal> <name>SUBTASKS</name> <name>AND</name> <name>RELATED</name> <name>JIRAS</name>
 
     <name>HADOOP</name><operator>-</operator><literal type="number">8924.</literal> <name>Hadoop</name> <name>Common</name> <name>creating</name></expr></expr_stmt> <package>package-<name><name>info</name><operator>.</operator><name>java</name></name> <name>must</name> <name>not</name> <name>depend</name> <name>on</name>
<name>diff</name> --<name>git</name> <name>a</name>/<name>hadoop</name>-<name>common</name>-<name>project</name>/<name>hadoop</name>-<name>common</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>hadoop</name>/<name>ipc</name>/<name><name>Client</name><operator>.</operator><name>java</name></name> <name>b</name>/<name>hadoop</name>-<name>common</name>-<name>project</name>/<name>hadoop</name>-<name>common</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>hadoop</name>/<name>ipc</name>/<name><name>Client</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fe987bfebd4</name>..<name>c1ac20e9067</name> 100644
-- <name>a</name>/<name>hadoop</name>-<name>common</name>-<name>project</name>/<name>hadoop</name>-<name>common</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>hadoop</name>/<name>ipc</name>/<name><name>Client</name><operator>.</operator><name>java</name></name>
++ <name>b</name>/<name>hadoop</name>-<name>common</name>-<name>project</name>/<name>hadoop</name>-<name>common</name>/<name>src</name>/<name>main</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>hadoop</name>/<name>ipc</name>/<name><name>Client</name><operator>.</operator><name>java</name></name>
@@ -52<operator>,</operator>6 +52<operator>,</operator>7 @@
 <name>import</name> <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</package>
 
 <import>import <name><name>javax</name><operator>.</operator><name>net</name><operator>.</operator><name>SocketFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>security</name><operator>.</operator><name>sasl</name><operator>.</operator><name>Sasl</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>LogFactory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>Time</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ThreadFactoryBuilder</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>protobuf</name><operator>.</operator><name>CodedOutputStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">711</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">713</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>AuthMethod</name> <call><name>run</name><argument_list>()</argument_list></call>
               <comment type="line">// Sasl connect is successful. Let's set up Sasl i/o streams.</comment>
               <name>inStream</name> <operator>=</operator> <call><name><name>saslRpcClient</name><operator>.</operator><name>getInputStream</name></name><argument_list>(<argument><expr><name>inStream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><name>outStream</name> <operator>=</operator> <call><name><name>saslRpcClient</name><operator>.</operator><name>getOutputStream</name></name><argument_list>(<argument><expr><name>outStream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <comment type="line">// for testing</comment>
              <expr_stmt><expr><name><name>remoteId</name><operator>.</operator><name>saslQop</name></name> <operator>=</operator>
                  <operator>(</operator><name>String</name><operator>)</operator><call><name><name>saslRpcClient</name><operator>.</operator><name>getNegotiatedProperty</name></name><argument_list>(<argument><expr><name><name>Sasl</name><operator>.</operator><name>QOP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             } else <if_stmt><if>if <condition>(<expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>isSecurityEnabled</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator>
                        <operator>!</operator><name>fallbackAllowed</name></expr>)</condition> <block>{<block_content>
               <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Server asks us to fall back to SIMPLE "</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">1455</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1460</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>private</specifier> <name>Connection</name> <call><name>getConnection</name><argument_list>(<argument><expr><name>ConnectionId</name> <name>remoteId</name></expr></argument>,
     <argument><expr><specifier>private</specifier> <name>final</name> <name>boolean</name> <name>tcpNoDelay</name></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></throw> <comment type="line">// if T then disable Nagle's Algorithm</comment>
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>doPing</name></decl>;</decl_stmt> <comment type="line">//do we need to send ping message</comment>
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>pingInterval</name></decl>;</decl_stmt> <comment type="line">// how often sends ping to the server in msecs</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>saslQop</name></decl>;</decl_stmt> <comment type="line">// here for testing</comment>
     
     <expr_stmt><expr><call><name>ConnectionId</name><argument_list>(<argument><expr><name>InetSocketAddress</name> <name>address</name></expr></argument>, <argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <name>protocol</name></expr></argument>, 
                  <argument><expr><name>UserGroupInformation</name> <name>ticket</name></expr></argument>, <argument><expr><name>int</name> <name>rpcTimeout</name></expr></argument>, <argument><expr><name>int</name> <name>maxIdleTime</name></expr></argument>, 
<argument>@@ <expr><operator>-</operator><literal type="number">1509</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1515</literal></expr></argument>,<argument><expr><literal type="number">11</literal> @@ <name>int</name> <call><name>getPingInterval</name><argument_list>()</argument_list></call> <block>{
       <return>return <expr><name>pingInterval</name></expr>;</return>
     }</block></expr></argument></argument_list></call></expr></expr_stmt>
     
    <function><annotation>@<name>VisibleForTesting</name></annotation>
    <type><name>String</name></type> <name>getSaslQop</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>saslQop</name></expr>;</return>
    </block_content>}</block></function>
    
     <function><type><specifier>static</specifier> <name>ConnectionId</name></type> <name>getConnectionId</name><parameter_list>(<parameter><decl><type><name>InetSocketAddress</name></type> <name>addr</name></decl></parameter>,
         <parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>protocol</name></decl></parameter>, <parameter><decl><type><name>UserGroupInformation</name></type> <name>ticket</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rpcTimeout</name></decl></parameter>,
         <parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Server</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Server</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">60fecddb68a</literal><operator>..</operator><literal type="number">5303655c655</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Server</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Server</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1276</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1276</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>private</specifier> <name>UserGroupInformation</name> <call><name>getAuthorizedUgi</name><argument_list>(<argument><expr><name>String</name> <name>authorizedId</name></expr></argument>)</argument_list></call></expr></expr_stmt>
       </block_content>}</block></function>
     </block_content>}</block></if></if_stmt>
 
    <function><type><specifier>private</specifier> <name>RpcSaslProto</name></type> <name>saslReadAndProcess</name><parameter_list>(<parameter><decl><type><name>DataInputStream</name></type> <name>dis</name></decl></parameter>)</parameter_list> <throws>throws
        <argument><expr><name>WrappedRpcServerException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>saslReadAndProcess</name><parameter_list>(<parameter><decl><type><name>DataInputStream</name></type> <name>dis</name></decl></parameter>)</parameter_list> <throws>throws
        <argument><expr><name>WrappedRpcServerException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>saslContextEstablished</name></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>WrappedRpcServerException</name><argument_list>(
             <argument><expr><name><name>RpcErrorCodeProto</name><operator>.</operator><name>FATAL_INVALID_RPC_HEADER</name></name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">1310</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1310</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <specifier>private</specifier> <name>RpcSaslProto</name> <call><name>saslReadAndProcess</name><argument_list>(<argument><expr><name>DataInputStream</name> <name>dis</name></expr></argument>)</argument_list></call> <throws>throws
             <argument><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"SASL server context established. Negotiated QoP is "</literal>
                 <operator>+</operator> <call><name><name>saslServer</name><operator>.</operator><name>getNegotiatedProperty</name></name><argument_list>(<argument><expr><name><name>Sasl</name><operator>.</operator><name>QOP</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument></throws></expr></argument>;</argument_list></call></expr></throw>
           </block_content>}</block></if></if_stmt>
          <decl_stmt><decl><type><name>String</name></type> <name>qop</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>saslServer</name><operator>.</operator><name>getNegotiatedProperty</name></name><argument_list>(<argument><expr><name><name>Sasl</name><operator>.</operator><name>QOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><name>useWrap</name> <operator>=</operator> <name>qop</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><literal type="string">"auth"</literal><operator>.</operator><call><name>equalsIgnoreCase</name><argument_list>(<argument><expr><name>qop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><name>user</name> <operator>=</operator> <call><name>getAuthorizedUgi</name><argument_list>(<argument><expr><call><name><name>saslServer</name><operator>.</operator><name>getAuthorizationID</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <if_stmt><if>if <condition>(<expr><call><name><name>LOG</name><operator>.</operator><name>isDebugEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"SASL server successfully authenticated client: "</literal> <operator>+</operator> <name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1326</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1324</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>private</specifier> <name>RpcSaslProto</name> <call><name>saslReadAndProcess</name><argument_list>(<argument><expr><name>DataInputStream</name> <name>dis</name></expr></argument>)</argument_list></call> <throws>throws
         throw <argument><expr><operator>new</operator> <call><name>WrappedRpcServerException</name><argument_list>(
             <argument><expr><name><name>RpcErrorCodeProto</name><operator>.</operator><name>FATAL_UNAUTHORIZED</name></name></expr></argument>, <argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr></argument></throws></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
      <return>return <expr><name>saslResponse</name></expr>;</return> 
      <comment type="line">// send back response if any, may throw IOException</comment>
      <if_stmt><if>if <condition>(<expr><name>saslResponse</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>doSaslReply</name><argument_list>(<argument><expr><name>saslResponse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <comment type="line">// do NOT enable wrapping until the last auth response is sent</comment>
      <if_stmt><if>if <condition>(<expr><name>saslContextEstablished</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>qop</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>saslServer</name><operator>.</operator><name>getNegotiatedProperty</name></name><argument_list>(<argument><expr><name><name>Sasl</name><operator>.</operator><name>QOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>useWrap</name> <operator>=</operator> <operator>(</operator><name>qop</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><literal type="string">"auth"</literal><operator>.</operator><call><name>equalsIgnoreCase</name><argument_list>(<argument><expr><name>qop</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>        
      </block_content>}</block></if></if_stmt>
     </block_content>}</block></function>
     
     <decl_stmt><decl><type><specifier>private</specifier> <name>RpcSaslProto</name></type> <name>processSaslMessage</name><argument_list>(<argument><expr><name>DataInputStream</name> <name>dis</name></expr></argument>)</argument_list>
@@ -1906</decl>,11 +1912,7 @@ private <decl><type ref="prev"/><name>void</name> <name>processRpcOutOfBandRequest</name><argument_list>(<argument><expr><name>RpcRequestHeaderProto</name> <name>header</name></expr></argument>,
               <argument><expr><name><name>RpcErrorCodeProto</name><operator>.</operator><name>FATAL_INVALID_RPC_HEADER</name></name></expr></argument>,
               <argument><expr><literal type="string">"SASL protocol not requested by client"</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
         </block_content>}</block></function>
        <decl_stmt><decl><type><name>RpcSaslProto</name></type> <name>response</name> <init>= <expr><call><name>saslReadAndProcess</name><argument_list>(<argument><expr><name>dis</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// send back response if any, may throw IOException</comment>
        <if_stmt><if>if <condition>(<expr><name>response</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>doSaslReply</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name>saslReadAndProcess</name><argument_list>(<argument><expr><name>dis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       } else <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>WrappedRpcServerException</name><argument_list>(
             <argument><expr><name><name>RpcErrorCodeProto</name><operator>.</operator><name>FATAL_INVALID_RPC_HEADER</name></name></expr></argument>,
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SaslRpcClient</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SaslRpcClient</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fe6afd23901</name><operator>..</operator><name>a6fcd97d726</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SaslRpcClient</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SaslRpcClient</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">67</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">67</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@</expr></argument>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>token</name><operator>.</operator><name>TokenSelector</name></name>;</import></argument_list></call></expr></throw>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>ProtoUtil</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>protobuf</name><operator>.</operator><name>ByteString</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * A utility class that encapsulates SASL logic for RPC client
@@ -106,6 +107,12 @@ public SaslRpcClient(UserGroupInformation ugi, Class&lt;?&gt; protocol,
     this.conf = conf;
   }
   
  @VisibleForTesting
  @InterfaceAudience.Private
  public Object getNegotiatedProperty(String key) {
    return (saslClient != null) ? saslClient.getNegotiatedProperty(key) : null;
  }
  
   /**
    * Instantiate a sasl client for the first supported auth type in the
    * given list.  The auth type must be defined, enabled, and the user
diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestSaslRPC.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestSaslRPC.java
index 138e12f8518..02c3e2a561a 100644
-- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestSaslRPC.java
++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestSaslRPC.java
@@ -29,6 +29,7 @@
 import java.net.InetSocketAddress;
 import java.security.PrivilegedExceptionAction;
 import java.security.Security;
import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Set;
 import java.util.regex.Pattern;
@@ -44,8 +45,6 @@
 import javax.security.sasl.SaslException;
 import javax.security.sasl.SaslServer;
 
import junit.framework.Assert;

 import org.apache.commons.lang.StringUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -62,11 +61,11 @@
 import org.apache.hadoop.security.SaslRpcClient;
 import org.apache.hadoop.security.SaslRpcServer;
 import org.apache.hadoop.security.SaslRpcServer.AuthMethod;
import org.apache.hadoop.security.SaslRpcServer.QualityOfProtection;
 import org.apache.hadoop.security.SecurityInfo;
 import org.apache.hadoop.security.SecurityUtil;
 import org.apache.hadoop.security.TestUserGroupInformation;
 import org.apache.hadoop.security.UserGroupInformation;
import org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod;
 import org.apache.hadoop.security.token.SecretManager;
 import org.apache.hadoop.security.token.SecretManager.InvalidToken;
 import org.apache.hadoop.security.token.Token;
@@ -77,9 +76,28 @@
 import org.junit.Before;
 import org.junit.BeforeClass;
 import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;
 
 /** Unit tests for using Sasl over RPC. */</comment>
<class><annotation>@<name>RunWith</name><argument_list>(<argument><expr><name><name>Parameterized</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>TestSaslRPC</name> <block>{
  <function><annotation>@<name>Parameters</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name><name>Object</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>data</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name><name>Object</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>Object</name><index>[]</index></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>QualityOfProtection</name></type> <name>qop</name> <range>: <expr><call><name><name>QualityOfProtection</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name><block>{ <expr><name>qop</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>params</name></expr>;</return>
  </block_content>}</block></function>

  <decl_stmt><decl><type><name>QualityOfProtection</name></type> <name>expectedQop</name></decl>;</decl_stmt>
  
  <constructor><specifier>public</specifier> <name>TestSaslRPC</name><parameter_list>(<parameter><decl><type><name>QualityOfProtection</name></type> <name>qop</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>expectedQop</name> <operator>=</operator> <name>qop</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>
  
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ADDRESS</name> <init>= <expr><literal type="string">"0.0.0.0"</literal></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Log</name></type> <name>LOG</name> <init>=
@@ <expr><operator>-</operator><literal type="number">115</literal></expr></init></decl>,8 +133,12 @@ public static <decl><type ref="prev"/><name>void</name> <name>setupKerb</name><argument_list>()</argument_list> <block>{<block_content>
 
   <function><annotation>@<name>Before</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"---------------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Testing QOP:"</literal><operator>+</operator><name>expectedQop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"---------------------------------"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>HADOOP_SECURITY_AUTHENTICATION</name></expr></argument>, <argument><expr><call><name><name>KERBEROS</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"hadoop.rpc.protection"</literal></expr></argument>, <argument><expr><call><name><name>expectedQop</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>setConfiguration</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>enableSecretManager</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     <expr_stmt><expr><name>forceSecretManager</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">248</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>TestTokenIdentifier</name> <call><name>createIdentifier</name><argument_list>()</argument_list></call> <block>{
       <expr><name>serverPrincipal</name> <operator>=</operator> <name>SERVER_PRINCIPAL_KEY</name></expr>)
   @<call><name>TokenInfo</name><argument_list>(<argument><expr><name><name>TestTokenSelector</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
   <specifier>public</specifier> interface <name>TestSaslProtocol</name> extends <name><name>TestRPC</name><operator>.</operator><name>TestProtocol</name></name> <block>{
    <expr><specifier>public</specifier> <name>AuthenticationMethod</name> <call><name>getAuthMethod</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
    <expr><specifier>public</specifier> <name>AuthMethod</name> <call><name>getAuthMethod</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
     <expr><specifier>public</specifier> <name>String</name> <call><name>getAuthUser</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
   }</block></block>
   
   <specifier>public</specifier> <specifier>static</specifier> <name>class</name> <name>TestSaslImpl</name> extends <name><name>TestRPC</name><operator>.</operator><name>TestImpl</name></name> implements
       <name>TestSaslProtocol</name> <block>{
     @<expr><name>Override</name>
    <specifier>public</specifier> <name>AuthenticationMethod</name> <call><name>getAuthMethod</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
      <return>return <expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>getCurrentUser</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthenticationMethod</name><argument_list>()</argument_list></call></expr>;</return>
    <specifier>public</specifier> <name>AuthMethod</name> <call><name>getAuthMethod</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
      <return>return <expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>getCurrentUser</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>getAuthenticationMethod</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthMethod</name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></function>
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>String</name></type> <name>getAuthUser</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">341</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">364</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>doDigestRpc</name><argument_list>(<argument><expr><name>Server</name> <name>server</name></expr></argument>, <argument><expr><name>TestTokenSecretManager</name> <name>sm</name></expr></argument>
     <try>try <block>{<block_content>
       <expr_stmt><expr><name>proxy</name> <operator>=</operator> <call><name><name>RPC</name><operator>.</operator><name>getProxy</name></name><argument_list>(<argument><expr><name><name>TestSaslProtocol</name><operator>.</operator><name>class</name></name></expr></argument>,
           <argument><expr><name><name>TestSaslProtocol</name><operator>.</operator><name>versionID</name></name></expr></argument>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>AuthMethod</name></type> <name>authMethod</name> <init>= <expr><call><name><name>proxy</name><operator>.</operator><name>getAuthMethod</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>TOKEN</name></expr></argument>, <argument><expr><name>authMethod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <comment type="line">//QOP must be auth</comment>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>SaslRpcServer</name><operator>.</operator><name>SASL_PROPS</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Sasl</name><operator>.</operator><name>QOP</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"auth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>expectedQop</name><operator>.</operator><name>saslQop</name></name></expr></argument>,
                   <argument><expr><call><name><name>RPC</name><operator>.</operator><name>getConnectionIdForProxy</name></name><argument_list>(<argument><expr><name>proxy</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSaslQop</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>            
       <expr_stmt><expr><call><name><name>proxy</name><operator>.</operator><name>ping</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <finally>finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">393</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">419</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testPerConnectionConf</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>newConf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>CommonConfigurationKeysPublic</name><operator>.</operator>
         <name>HADOOP_RPC_SOCKET_FACTORY_CLASS_DEFAULT_KEY</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>Client</name></type> <name>client</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>TestSaslProtocol</name></type> <name>proxy1</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>TestSaslProtocol</name></type> <name>proxy2</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>TestSaslProtocol</name></type> <name>proxy3</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">402</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">429</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testPerConnectionConf</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><name>proxy1</name> <operator>=</operator> <call><name><name>RPC</name><operator>.</operator><name>getProxy</name></name><argument_list>(<argument><expr><name><name>TestSaslProtocol</name><operator>.</operator><name>class</name></name></expr></argument>,
           <argument><expr><name><name>TestSaslProtocol</name><operator>.</operator><name>versionID</name></name></expr></argument>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><name>newConf</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>proxy1</name><operator>.</operator><name>getAuthMethod</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Client</name></type> <name>client</name> <init>= <expr><call><name><name>WritableRpcEngine</name><operator>.</operator><name>getClient</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>client</name> <operator>=</operator> <call><name><name>WritableRpcEngine</name><operator>.</operator><name>getClient</name></name><argument_list>(<argument><expr><name>newConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ConnectionId</name></argument>&gt;</argument_list></name></type> <name>conns</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>getConnectionIds</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"number of connections in cache is wrong"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>conns</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <comment type="line">// same conf, connection should be re-used</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">428</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">455</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testPerConnectionConf</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><call><name>assertNotSame</name><argument_list>(<argument><expr><name><name>connsArray</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><call><name>getMaxIdleTime</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>timeouts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     </block_content>}</block></finally> <finally>finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>RPC</name><operator>.</operator><name>stopProxy</name></name><argument_list>(<argument><expr><name>proxy1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>RPC</name><operator>.</operator><name>stopProxy</name></name><argument_list>(<argument><expr><name>proxy2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>RPC</name><operator>.</operator><name>stopProxy</name></name><argument_list>(<argument><expr><name>proxy3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// this is dirty, but clear out connection cache for next run</comment>
      <if_stmt><if>if <condition>(<expr><name>client</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>getConnectionIds</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>clear</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>proxy1</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>RPC</name><operator>.</operator><name>stopProxy</name></name><argument_list>(<argument><expr><name>proxy1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>proxy2</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>RPC</name><operator>.</operator><name>stopProxy</name></name><argument_list>(<argument><expr><name>proxy2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>proxy3</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>RPC</name><operator>.</operator><name>stopProxy</name></name><argument_list>(<argument><expr><name>proxy3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     </block_content>}</block></finally></try></argument_list></call></expr></expr_stmt>
   </block_content>}</block></function>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">873</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">904</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>String</name> <call><name>run</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
                 <expr><name><name>TestSaslProtocol</name><operator>.</operator><name>versionID</name></name></expr>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument></block></expr></argument></throws></expr></expr_stmt>)</block_content></block></decl>;</decl_stmt>
             
             <constructor_decl><name><name>proxy</name><operator>.</operator><name>ping</name></name><parameter_list>()</parameter_list>;</constructor_decl>
            <comment type="line">// verify sasl completed</comment>
            <if_stmt><if>if <condition>(<expr><name>serverAuth</name> <operator>!=</operator> <name>SIMPLE</name></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>SaslRpcServer</name><operator>.</operator><name>SASL_PROPS</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Sasl</name><operator>.</operator><name>QOP</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"auth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            
             <comment type="line">// make sure the other side thinks we are who we said we are!!!</comment>
             <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>clientUgi</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>proxy</name><operator>.</operator><name>getAuthUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><call><name><name>proxy</name><operator>.</operator><name>getAuthMethod</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
            <decl_stmt><decl><type><name>AuthMethod</name></type> <name>authMethod</name> <init>= <expr><call><name><name>proxy</name><operator>.</operator><name>getAuthMethod</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line">// verify sasl completed with correct QOP</comment>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><ternary><condition><expr><operator>(</operator><name>authMethod</name> <operator>!=</operator> <name>SIMPLE</name><operator>)</operator></expr> ?</condition><then> <expr><name><name>expectedQop</name><operator>.</operator><name>saslQop</name></name></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr></argument>,
                         <argument><expr><call><name><name>RPC</name><operator>.</operator><name>getConnectionIdForProxy</name></name><argument_list>(<argument><expr><name>proxy</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSaslQop</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>            
            <return>return <expr><call><name><name>authMethod</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
           }</block></class> <finally>finally <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><name>proxy</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
               <expr_stmt><expr><call><name><name>RPC</name><operator>.</operator><name>stopProxy</name></name><argument_list>(<argument><expr><name>proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></finally></block_content></block>

</unit>
