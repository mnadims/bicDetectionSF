<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/fb6b38d67d8.java"><expr_stmt><expr><name>From</name> <name>fb6b38d67d8b997eca498fc5010b037e3081ace7</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Haohui</name> <name><name>Mai</name> <argument_list type="generic">&lt;<argument><name>wheat9</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">20</literal> <name>May</name> <literal type="number">2015</literal> <literal type="number">20</literal><operator>:</operator><literal type="number">10</literal><operator>:</operator><literal type="number">50</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">11772.</literal> <name>RPC</name> <name>Invoker</name> <name>relies</name> <name>on</name> <specifier>static</specifier> <name>ClientCache</name> <name>which</name>
 <name>has</name> <synchronized>synchronized<init>(<expr><name>this</name></expr>)</init> <expr_stmt><expr><name><name>blocks</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Haohui</name> <name><name>Mai</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Client</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">106</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <literal type="number">2</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">35</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">74</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">1624ce2bc35</literal><operator>..</operator><literal type="number">416b81914be</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">604</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">604</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.8.0</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">11970.</literal> <name>Replace</name> <name>uses</name> <name>of</name> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>Random</name></argument>&gt;</argument_list></name> <name>with</name> <name>JDK7</name>
     <name><name>ThreadLocalRandom</name><operator>.</operator></name>  (<name>Sean</name> <name>Busbey</name> <name>via</name> <name>Colin</name> <name><name>P</name><operator>.</operator> <name>McCabe</name></name></expr></expr_stmt></synchronized></expr></expr_stmt>)
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">11772.</literal> <name>RPC</name> <name>Invoker</name> <name>relies</name> <name>on</name> <specifier>static</specifier> <name>ClientCache</name> <name>which</name> <name>has</name>
    <synchronized>synchronized<init>(<expr><name>this</name></expr>)</init> <expr_stmt><expr><name><name>blocks</name><operator>.</operator></name> (<name>wheat9</name></expr></expr_stmt></synchronized></expr></expr_stmt>)

   <expr_stmt><expr><name>BUG</name> <name>FIXES</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">11802</literal><operator>:</operator> <name>DomainSocketWatcher</name> <name>thread</name> <name>terminates</name> <name>sometimes</name> <name>after</name> <name>there</name>
     <name>is</name> <name>an</name> <name>I</name><operator>/</operator><name>O</name> <name>error</name> <name>during</name> <call><name>requestShortCircuitShm</name> <argument_list>(<argument><expr><name>cmccabe</name></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Client</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Client</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f28d8a290ce</name><operator>..</operator><name>feb811ed3ae</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Client</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>Client</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Callable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutionException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutorService</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executors</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt>
 <import>import <name><name>javax</name><operator>.</operator><name>net</name><operator>.</operator><name>SocketFactory</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>security</name><operator>.</operator><name>sasl</name><operator>.</operator><name>Sasl</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>Cache</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>CacheBuilder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>LogFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setCallIdAndRetryCount</name><argument_list>(<argument><expr><name>int</name> <name>cid</name></expr></argument>, <argument><expr><name>int</name> <name>rc</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>retryCount</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <specifier>private</specifier> <name><name>Hashtable</name><argument_list type="generic">&lt;<argument><name>ConnectionId</name></argument>, <argument><name>Connection</name></argument>&gt;</argument_list></name> <name>connections</name> <operator>=</operator>
    <operator>new</operator> <call><name><name>Hashtable</name><argument_list type="generic">&lt;<argument><name>ConnectionId</name></argument>, <argument><name>Connection</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Cache</name><argument_list type="generic">&lt;<argument><name>ConnectionId</name></argument>, <argument><name>Connection</name></argument>&gt;</argument_list></name></type> <name>connections</name> <init>=
      <expr><call><name><name>CacheBuilder</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Writable</name></extends></argument>&gt;</argument_list></name></type> <name>valueClass</name></decl>;</decl_stmt>   <comment type="line">// class of call values</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <name>AtomicBoolean</name></type> <name>running</name> <init>= <expr><operator>new</operator> <call><name>AtomicBoolean</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// if client runs</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1167</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">1170</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>private</specifier> <specifier>synchronized</specifier> <name>void</name> <call><name>close</name><argument_list>()</argument_list></call> <block>{
         <return>return;</return>
       }</block></expr></expr_stmt>
 
      <comment type="line">// release the resources</comment>
      <comment type="line">// first thing to do;take the connection out of the connection list</comment>
      <synchronized>synchronized <init>(<expr><name>connections</name></expr>)</init> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>connections</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>this</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>connections</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></synchronized>
      <expr_stmt><expr><call><name><name>connections</name><operator>.</operator><name>invalidate</name></name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <comment type="line">// close the streams and therefore the socket</comment>
       <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>closeStream</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1260</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">1257</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>stop</name><argument_list>()</argument_list></call> <block>{
     }</block>
     
     <comment type="line">// wake up all connections</comment>
    <synchronized>synchronized <init>(<expr><name>connections</name></expr>)</init> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>Connection</name></type> <name>conn</name> <range>: <expr><call><name><name>connections</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>interrupt</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    <for>for <control>(<init><decl><type><name>Connection</name></type> <name>conn</name> <range>: <expr><call><name><name>connections</name><operator>.</operator><name>asMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>values</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>interrupt</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     
     <comment type="line">// wait until all connections are closed</comment>
    <while>while <condition>(<expr><operator>!</operator><call><name><name>connections</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <while>while <condition>(<expr><call><name><name>connections</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1283</literal></expr><operator>,</operator><expr><literal type="number">56</literal> <operator>+</operator><literal type="number">1278</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>stop</name><argument_list>()</argument_list></call> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <name>Writable</name> <call><name>call</name><argument_list>(<argument><expr><name>Writable</name> <name>param</name></expr></argument>, <argument><expr><name>InetSocketAddress</name> <name>address</name></expr></argument>)</argument_list></call>
       <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><call><name>call</name><argument_list>(<argument><expr><name><name>RPC</name><operator>.</operator><name>RpcKind</name><operator>.</operator><name>RPC_BUILTIN</name></name></expr></argument>, <argument><expr><name>param</name></expr></argument>, <argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</return>
    
  }</block></expr></expr_stmt>
  <comment type="block" format="javadoc">/** Make a call, passing &lt;code&gt;param&lt;/code&gt;, to the IPC server running at
   * &lt;code&gt;address&lt;/code&gt;, returning the value.  Throws exceptions if there are
   * network problems or if the remote code threw an exception.
   * @deprecated Use {@link #call(RPC.RpcKind, Writable,
   *  ConnectionId)} instead 
   */</comment>
  <function><annotation>@<name>Deprecated</name></annotation>
  <type><specifier>public</specifier> <name>Writable</name></type> <name>call</name><parameter_list>(<parameter><decl><type><name><name>RPC</name><operator>.</operator><name>RpcKind</name></name></type> <name>rpcKind</name></decl></parameter>, <parameter><decl><type><name>Writable</name></type> <name>param</name></decl></parameter>, <parameter><decl><type><name>InetSocketAddress</name></type> <name>address</name></decl></parameter>)</parameter_list>
  <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <return>return <expr><call><name>call</name><argument_list>(<argument><expr><name>rpcKind</name></expr></argument>, <argument><expr><name>param</name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
  
  <comment type="block" format="javadoc">/** Make a call, passing &lt;code&gt;param&lt;/code&gt;, to the IPC server running at
   * &lt;code&gt;address&lt;/code&gt; with the &lt;code&gt;ticket&lt;/code&gt; credentials, returning 
   * the value.  
   * Throws exceptions if there are network problems or if the remote code 
   * threw an exception.
   * @deprecated Use {@link #call(RPC.RpcKind, Writable, 
   * ConnectionId)} instead 
   */</comment>
  <function><annotation>@<name>Deprecated</name></annotation>
  <type><specifier>public</specifier> <name>Writable</name></type> <name>call</name><parameter_list>(<parameter><decl><type><name><name>RPC</name><operator>.</operator><name>RpcKind</name></name></type> <name>rpcKind</name></decl></parameter>, <parameter><decl><type><name>Writable</name></type> <name>param</name></decl></parameter>, <parameter><decl><type><name>InetSocketAddress</name></type> <name>addr</name></decl></parameter>, 
      <parameter><decl><type><name>UserGroupInformation</name></type> <name>ticket</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ConnectionId</name></type> <name>remoteId</name> <init>= <expr><call><name><name>ConnectionId</name><operator>.</operator><name>getConnectionId</name></name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>ticket</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
    <argument><expr><name>ConnectionId</name> <name>remoteId</name> <operator>=</operator> <call><name><name>ConnectionId</name><operator>.</operator><name>getConnectionId</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
         <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>;
    return <argument><expr><call><name>call</name><argument_list>(<argument><expr><name>rpcKind</name></expr></argument>, <argument><expr><name>param</name></expr></argument>, <argument><expr><name>remoteId</name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
  </block_content>}</block></function>
  
  <comment type="block" format="javadoc">/** Make a call, passing &lt;code&gt;param&lt;/code&gt;, to the IPC server running at
   * &lt;code&gt;address&lt;/code&gt; which is servicing the &lt;code&gt;protocol&lt;/code&gt; protocol, 
   * with the &lt;code&gt;ticket&lt;/code&gt; credentials and &lt;code&gt;rpcTimeout&lt;/code&gt; as 
   * timeout, returning the value.  
   * Throws exceptions if there are network problems or if the remote code 
   * threw an exception. 
   * @deprecated Use {@link #call(RPC.RpcKind, Writable,
   *  ConnectionId)} instead 
   */</comment>
  <function><annotation>@<name>Deprecated</name></annotation>
  <type><specifier>public</specifier> <name>Writable</name></type> <name>call</name><parameter_list>(<parameter><decl><type><name><name>RPC</name><operator>.</operator><name>RpcKind</name></name></type> <name>rpcKind</name></decl></parameter>, <parameter><decl><type><name>Writable</name></type> <name>param</name></decl></parameter>, <parameter><decl><type><name>InetSocketAddress</name></type> <name>addr</name></decl></parameter>, 
                       <parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>protocol</name></decl></parameter>, <parameter><decl><type><name>UserGroupInformation</name></type> <name>ticket</name></decl></parameter>,
                       <parameter><decl><type><name>int</name></type> <name>rpcTimeout</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ConnectionId</name></type> <name>remoteId</name> <init>= <expr><call><name><name>ConnectionId</name><operator>.</operator><name>getConnectionId</name></name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><name>protocol</name></expr></argument>,
        <argument><expr><name>ticket</name></expr></argument>, <argument><expr><name>rpcTimeout</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name>call</name><argument_list>(<argument><expr><name>rpcKind</name></expr></argument>, <argument><expr><name>param</name></expr></argument>, <argument><expr><name>remoteId</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><call><name>call</name><argument_list>(<argument><expr><name><name>RpcKind</name><operator>.</operator><name>RPC_BUILTIN</name></name></expr></argument>, <argument><expr><name>param</name></expr></argument>, <argument><expr><name>remoteId</name></expr></argument>)</argument_list></call></expr>;</return>

   </block_content>}</block></function>
 
  
   <comment type="block" format="javadoc">/**
    * Same as {@link #call(RPC.RpcKind, Writable, InetSocketAddress,
    * Class, UserGroupInformation, int, Configuration)}
@@ -1506,15 +1457,14 @@ public Writable call(RPC.RpcKind rpcKind, Writable rpcRequest,
   @InterfaceAudience.Private
   @InterfaceStability.Unstable
   Set&lt;ConnectionId&gt; getConnectionIds() {
    synchronized (connections) {
      return connections.keySet();
    }
    return connections.asMap().keySet();
   }
   
   /** Get a connection from the pool, or create a new one and add it to the
    * pool.  Connections to a given ConnectionId are reused. */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Connection</name></type> <name>getConnection</name><argument_list>(<argument><expr><name>ConnectionId</name> <name>remoteId</name></expr></argument>,
      <argument><expr><name>Call</name> <name>call</name></expr></argument>, <argument><expr><name>int</name> <name>serviceClass</name></expr></argument>, <argument><expr><name>AtomicBoolean</name> <name>fallbackToSimpleAuth</name></expr></argument>)</argument_list>
  private <name>Connection</name> <name>getConnection</name><argument_list>(
      <argument><expr><name>final</name> <name>ConnectionId</name> <name>remoteId</name></expr></argument>,
      <argument><expr><name>Call</name> <name>call</name></expr></argument>, <argument><expr><name>final</name> <name>int</name> <name>serviceClass</name></expr></argument>, <argument><expr><name>AtomicBoolean</name> <name>fallbackToSimpleAuth</name></expr></argument>)</argument_list>
       <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
     if <argument_list>(<argument><expr><operator>!</operator><call><name><name>running</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list> <block>{<block_content>
       <comment type="line">// the client is stopped</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1525</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">1475</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>private</specifier> <name>Connection</name> <call><name>getConnection</name><argument_list>(<argument><expr><name>ConnectionId</name> <name>remoteId</name></expr></argument>,
      <argument><expr><operator>*</operator> <name>connectionsId</name> <name>object</name> <name>and</name> <name>with</name> <call><name>set</name><argument_list>()</argument_list></call> <name><name>method</name><operator>.</operator> <name>We</name></name> <name>need</name> <name>to</name> <name>manage</name> <name>the</name>
      <operator>*</operator> <name>refs</name></expr></argument> <for>for keys in HashMap properly. For now its ok.
      */
    do <block>{<block_content>
      <synchronized>synchronized <init>(<expr><name>connections</name></expr>)</init> <block>{<block_content>
        <expr_stmt><expr><name>connection</name> <operator>=</operator> <call><name><name>connections</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>connection</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>connection</name> <operator>=</operator> <operator>new</operator> <call><name>Connection</name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>, <argument><expr><name>serviceClass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>connections</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>, <argument><expr><name>connection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    <while>while<condition>(<expr><literal type="boolean">true</literal></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>connection</name> <operator>=</operator> <call><name><name>connections</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Connection</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
          <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>Connection</name></type> <name>call</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>Connection</name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>, <argument><expr><name>serviceClass</name></expr></argument>)</argument_list></call></expr>;</return>
          </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ExecutionException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch></try>
      <if_stmt><if>if <condition>(<expr><call><name><name>connection</name><operator>.</operator><name>addCall</name></name><argument_list>(<argument><expr><name>call</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <break>break;</break>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>connections</name><operator>.</operator><name>invalidate</name></name><argument_list>(<argument><expr><name>remoteId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
    </block_content>}</block></while> <while>while <condition>(<expr><operator>!</operator><call><name><name>connection</name><operator>.</operator><name>addCall</name></name><argument_list>(<argument><expr><name>call</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
    </block_content>}</block></synchronized>
     
     <comment type="line">//we don't invoke the method below inside "synchronized (connections)"</comment>
     <comment type="line">//block above. The reason for that is if the server happens to be slow,</comment>
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block_content></block></for></argument_list></call></expr></expr_stmt></block_content></block></decl></decl_stmt></block_content></block></catch></try></block_content></block></while></block_content></block></while></block_content></block></synchronized></expr></expr_stmt>

</unit>
