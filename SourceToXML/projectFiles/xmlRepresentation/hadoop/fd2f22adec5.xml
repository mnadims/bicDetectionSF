<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/fd2f22adec5.java"><expr_stmt><expr><name>From</name> <name>fd2f22adec5c2f21f792045dbfde9385c21403ec</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Yongjun</name> <name><name>Zhang</name> <argument_list type="generic">&lt;<argument><name>yzhang</name><annotation>@<name><name>cloudera</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">10</literal> <name>Nov</name> <literal type="number">2016</literal> <literal type="number">22</literal><operator>:</operator><literal type="number">21</literal><operator>:</operator><literal type="number">54</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">13720.</literal> <name>Add</name> <name>more</name> <name>info</name> <name>to</name> <name>the</name> <name>msgs</name> <name>printed</name> <name>in</name>
 <name><name>AbstractDelegationTokenSecretManager</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Yongjun</name> <name><name>Zhang</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name><name>AbstractDelegationTokenSecretManager</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">69</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Time</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">18</literal> <operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>io</name><operator>/</operator><name>file</name><operator>/</operator><name>tfile</name><operator>/</operator><name><name>Timer</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">52</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestTime</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">50</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">136</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">53</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestTime</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>token</name><operator>/</operator><name>delegation</name><operator>/</operator><name><name>AbstractDelegationTokenSecretManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>token</name><operator>/</operator><name>delegation</name><operator>/</operator><name><name>AbstractDelegationTokenSecretManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cc2efc907f5</name><operator>..</operator><literal type="number">0e311ddeb2a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>token</name><operator>/</operator><name>delegation</name><operator>/</operator><name><name>AbstractDelegationTokenSecretManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>token</name><operator>/</operator><name>delegation</name><operator>/</operator><name><name>AbstractDelegationTokenSecretManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
   <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Log</name> <name>LOG</name> <operator>=</operator> <call><name><name>LogFactory</name>
       <operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><name><name>AbstractDelegationTokenSecretManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
  <function><type><specifier>private</specifier> <name>String</name></type> <name>formatTokenId</name><parameter_list>(<parameter><decl><type><name>TokenIdent</name></type> <name>id</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"("</literal> <operator>+</operator> <name>id</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/** 
    * Cache of currently valid tokens, mapping from DelegationTokenIdentifier 
    * to DelegationTokenInformation. Protected by this object lock.
@@ -312,7 +316,8 @@ public synchronized void addPersistedDelegationToken(
     int keyId = identifier.getMasterKeyId();
     DelegationKey dKey = allKeys.get(keyId);
     if (dKey == null) {
      LOG.warn("No KEY found for persisted identifier " + identifier.toString());
      LOG.warn("No KEY found for persisted identifier "
          + formatTokenId(identifier));
       return;
     }
     byte[] password = createPassword(identifier.getBytes(), dKey.getKey());
@@ -323,7 +328,8 @@ public synchronized void addPersistedDelegationToken(
       currentTokens.put(identifier, new DelegationTokenInformation(renewDate,
           password, getTrackingIdIfEnabled(identifier)));
     } else {
      throw new IOException("Same delegation token being added twice.");
      throw new IOException("Same delegation token being added twice: "
          + formatTokenId(identifier));
     }
   }
 
@@ -393,7 +399,7 @@ private synchronized void removeExpiredKeys() {
     identifier.setMaxDate(now + tokenMaxLifetime);
     identifier.setMasterKeyId(currentKey.getKeyId());
     identifier.setSequenceNumber(sequenceNum);
    LOG.info("Creating password for identifier: " + identifier
    LOG.info("Creating password for identifier: " + formatTokenId(identifier)
         + ", currentKey: " + currentKey.getKeyId());
     byte[] password = createPassword(identifier.getBytes(), currentKey.getKey());
     DelegationTokenInformation tokenInfo = new DelegationTokenInformation(now
@@ -401,7 +407,8 @@ private synchronized void removeExpiredKeys() {
     try {
       storeToken(identifier, tokenInfo);
     } catch (IOException ioe) {
      LOG.error("Could not store token !!", ioe);
      LOG.error("Could not store token " + formatTokenId(identifier) + "!!",
          ioe);
     }
     return password;
   }
@@ -418,11 +425,14 @@ protected DelegationTokenInformation checkToken(TokenIdent identifier)
     assert Thread.holdsLock(this);
     DelegationTokenInformation info = getTokenInfo(identifier);
     if (info == null) {
      throw new InvalidToken("token (" + identifier.toString()
          + ") can't be found in cache");
      throw new InvalidToken("token " + formatTokenId(identifier)
          + " can't be found in cache");
     }
    if (info.getRenewDate() &lt; Time.now()) {
      throw new InvalidToken("token (" + identifier.toString() + ") is expired");
    long now = Time.now();
    if (info.getRenewDate() &lt; now) {
      throw new InvalidToken("token " + formatTokenId(identifier) + " is " +
          "expired, current time: " + Time.formatTime(now) +
          " expected renewal time: " + Time.formatTime(info.getRenewDate()));
     }
     return info;
   }
@@ -458,8 +468,8 @@ public synchronized void verifyToken(TokenIdent identifier, byte[] password)
       throws InvalidToken {
     byte[] storedPassword = retrievePassword(identifier);
     if (!Arrays.equals(password, storedPassword)) {
      throw new InvalidToken("token (" + identifier
          + ") is invalid, password doesn't match");
      throw new InvalidToken("token " + formatTokenId(identifier)
          + " is invalid, password doesn't match");
     }
   }
   
@@ -477,32 +487,39 @@ public synchronized long renewToken(Token&lt;TokenIdent&gt; token,
     DataInputStream in = new DataInputStream(buf);
     TokenIdent id = createIdentifier();
     id.readFields(in);
    LOG.info("Token renewal for identifier: " + id + "; total currentTokens "
        +  currentTokens.size());
    LOG.info("Token renewal for identifier: " + formatTokenId(id)
        + "; total currentTokens " +  currentTokens.size());
 
     long now = Time.now();
     if (id.getMaxDate() &lt; now) {
      throw new InvalidToken(renewer + " tried to renew an expired token");
      throw new InvalidToken(renewer + " tried to renew an expired token "
          + formatTokenId(id) + " max expiration date: "
          + Time.formatTime(id.getMaxDate())
          + " currentTime: " + Time.formatTime(now));
     }
     if ((id.getRenewer() == null) || (id.getRenewer().toString().isEmpty())) {
       throw new AccessControlException(renewer +
          " tried to renew a token without a renewer");
          " tried to renew a token " + formatTokenId(id)
          + " without a renewer");
     }
     if (!id.getRenewer().toString().equals(renewer)) {
      throw new AccessControlException(renewer +
          " tries to renew a token with renewer " + id.getRenewer());
      throw new AccessControlException(renewer
          + " tries to renew a token " + formatTokenId(id)
          + " with non-matching renewer " + id.getRenewer());
     }
     DelegationKey key = getDelegationKey(id.getMasterKeyId());
     if (key == null) {
       throw new InvalidToken("Unable to find master key for keyId="
           + id.getMasterKeyId()
          + " from cache. Failed to renew an unexpired token"
          + " with sequenceNumber=" + id.getSequenceNumber());
          + " from cache. Failed to renew an unexpired token "
          + formatTokenId(id) + " with sequenceNumber="
          + id.getSequenceNumber());
     }
     byte[] password = createPassword(token.getIdentifier(), key.getKey());
     if (!Arrays.equals(password, token.getPassword())) {
      throw new AccessControlException(renewer +
          " is trying to renew a token with wrong password");
      throw new AccessControlException(renewer
          + " is trying to renew a token "
          + formatTokenId(id) + " with wrong password");
     }
     long renewTime = Math.min(id.getMaxDate(), now + tokenRenewInterval);
     String trackingId = getTrackingIdIfEnabled(id);
@@ -510,7 +527,8 @@ public synchronized long renewToken(Token&lt;TokenIdent&gt; token,
         password, trackingId);
 
     if (getTokenInfo(id) == null) {
      throw new InvalidToken("Renewal request for unknown token");
      throw new InvalidToken("Renewal request for unknown token "
          + formatTokenId(id));
     }
     updateToken(id, info);
     return renewTime;
@@ -528,10 +546,11 @@ public synchronized TokenIdent cancelToken(Token&lt;TokenIdent&gt; token,
     DataInputStream in = new DataInputStream(buf);
     TokenIdent id = createIdentifier();
     id.readFields(in);
    LOG.info("Token cancellation requested for identifier: " + id);
    LOG.info("Token cancellation requested for identifier: "
        + formatTokenId(id));
     
     if (id.getUser() == null) {
      throw new InvalidToken("Token with no owner");
      throw new InvalidToken("Token with no owner " + formatTokenId(id));
     }
     String owner = id.getUser().getUserName();
     Text renewer = id.getRenewer();
@@ -541,11 +560,11 @@ public synchronized TokenIdent cancelToken(Token&lt;TokenIdent&gt; token,
         &amp;&amp; (renewer == null || renewer.toString().isEmpty() || !cancelerShortName
             .equals(renewer.toString()))) {
       throw new AccessControlException(canceller
          + " is not authorized to cancel the token");
          + " is not authorized to cancel the token " + formatTokenId(id));
     }
     DelegationTokenInformation info = currentTokens.remove(id);
     if (info == null) {
      throw new InvalidToken("Token not found");
      throw new InvalidToken("Token not found " + formatTokenId(id));
     }
     removeStoredToken(id);
     return id;
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
index 20e2965c0d8..e96fa77dbd7 100644
-- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
@@ -17,6 +17,8 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@
    <operator>*</operator><operator>/</operator>
   <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>long</name> <name>NANOSECONDS_PER_MILLISECOND</name> <operator>=</operator> <literal type="number">1000000</literal></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>SimpleDateFormat</name></argument>&gt;</argument_list></name></type> <name>DATE_FORMAT</name> <init>=
      <expr><operator>new</operator> <class><super><name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>SimpleDateFormat</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>SimpleDateFormat</name></type> <name>initialValue</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy-MM-dd HH:mm:ss,SSSZ"</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  }</block></class></expr></init></decl>;</decl_stmt>

   <comment type="block" format="javadoc">/**
    * Current system time.  Do not use this to calculate a duration or interval
    * to sleep, because it will be broken by settimeofday.  Instead, use
@@ -54,4 +64,12 @@ public static long now() {
   public static long monotonicNow() {
     return System.nanoTime() / NANOSECONDS_PER_MILLISECOND;
   }

  /**
   * Convert time in millisecond to human readable format.
   * @return a human readable string for the input time
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>formatTime</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>millis</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>DATE_FORMAT</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>format</name><argument_list>(<argument><expr><name>millis</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>io</name><operator>/</operator><name>file</name><operator>/</operator><name>tfile</name><operator>/</operator><name><name>Timer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>io</name><operator>/</operator><name>file</name><operator>/</operator><name>tfile</name><operator>/</operator><name><name>Timer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ee2286af2cc</name><operator>..</operator><literal type="number">0987d4412c7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>io</name><operator>/</operator><name>file</name><operator>/</operator><name>tfile</name><operator>/</operator><name><name>Timer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>io</name><operator>/</operator><name>file</name><operator>/</operator><name>tfile</name><operator>/</operator><name><name>Timer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>file</name><operator>.</operator><name>tfile</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DateFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>Time</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">36</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">34</literal> @@
 <specifier>public</specifier>  <name>class</name> <name>Timer</name> <block>{
   <expr><name>long</name> <name>startTimeEpoch</name></expr>;
   <expr><name>long</name> <name>finishTimeEpoch</name></expr>;
  <expr><specifier>private</specifier> <name>DateFormat</name> <name>formatter</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy-MM-dd HH:mm:ss"</literal></expr></argument>)</argument_list></call></expr>;
   
   <expr><specifier>public</specifier> <name>void</name> <call><name>startTime</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>startTimeEpoch</name> <operator>=</operator> <call><name><name>Time</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    }</block>
    <name>startTimeEpoch</name> <operator>=</operator> <call><name><name>Time</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  }
 
    public <function><type><name>void</name></type> <name>stopTime</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name>finishTimeEpoch</name> <operator>=</operator> <call><name><name>Time</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>stopTime</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>finishTimeEpoch</name> <operator>=</operator> <call><name><name>Time</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name>long</name></type> <name>getIntervalMillis</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <return>return <expr><name>finishTimeEpoch</name> <operator>-</operator> <name>startTimeEpoch</name></expr>;</return>
    </block_content>}</block></function>
  
    <function><type><specifier>public</specifier> <name>void</name></type> <name>printlnWithTimestamp</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name>formatCurrentTime</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"  "</literal> <operator>+</operator> <name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
  
    <function><type><specifier>public</specifier> <name>String</name></type> <name>formatTime</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>millis</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>formatter</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name>millis</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getIntervalString</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name>long</name></type> <name>time</name> <init>= <expr><call><name>getIntervalMillis</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><call><name>formatTime</name><argument_list>(<argument><expr><name>time</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    
    <function><type><specifier>public</specifier> <name>String</name></type> <name>formatCurrentTime</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><call><name>formatTime</name><argument_list>(<argument><expr><call><name><name>Time</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  <function><type><specifier>public</specifier> <name>long</name></type> <name>getIntervalMillis</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><name>finishTimeEpoch</name> <operator>-</operator> <name>startTimeEpoch</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>printlnWithTimestamp</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name>formatCurrentTime</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"  "</literal> <operator>+</operator> <name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>formatTime</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>millis</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>Time</name><operator>.</operator><name>formatTime</name></name><argument_list>(<argument><expr><name>millis</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getIntervalString</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>time</name> <init>= <expr><call><name>getIntervalMillis</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name>formatTime</name><argument_list>(<argument><expr><name>time</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>String</name></type> <name>formatCurrentTime</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>formatTime</name><argument_list>(<argument><expr><call><name><name>Time</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
 }
 
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestTime</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestTime</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..360e5f8b107</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestTime</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">50</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name></name>;</package>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<comment type="block" format="javadoc">/**
 * A JUnit test to test {@link Time}.
 */</comment>
<class><specifier>public</specifier> class <name>TestTime</name> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>SimpleDateFormat</name></argument>&gt;</argument_list></name></type> <name>DATE_FORMAT</name> <init>=
      <expr><operator>new</operator> <class><super><name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>SimpleDateFormat</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>SimpleDateFormat</name></type> <name>initialValue</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy-MM-dd HH:mm:ss,SSSZ"</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  }</block></class></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Test formatTime.
   * @throws IOException
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testFormatTime</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>time</name> <init>= <expr><call><name><name>Time</name><operator>.</operator><name>now</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>Time</name><operator>.</operator><name>formatTime</name></name><argument_list>(<argument><expr><name>time</name></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>DATE_FORMAT</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>format</name><argument_list>(<argument><expr><name>time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
