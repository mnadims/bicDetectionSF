<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/a2a5cb60b09.java"><expr_stmt><expr><name>From</name> <name>a2a5cb60b09491cb672978ba9442f02373392c67</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Konstantin</name> <name>V</name> <name><name>Shvachko</name> <argument_list type="generic">&lt;<argument><name>shv</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">16</literal> <name>Jun</name> <literal type="number">2016</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">20</literal><operator>:</operator><literal type="number">49</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">13189.</literal> <name>FairCallQueue</name> <name>makes</name> <name>callQueue</name> <name>larger</name> <name>than</name> <name>the</name>
 <name>configured</name> <name><name>capacity</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Vinitha</name> <name><name>Gankidi</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>CallQueueManager</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>FairCallQueue</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">19</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestCallQueueManager</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestFairCallQueue</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">27</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">37</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">17</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>CallQueueManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>CallQueueManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7a19217bebc</literal><operator>..</operator><name>cbf8ebd320e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>CallQueueManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>CallQueueManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <call><name>CallQueueManager</name><argument_list>(<argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name><name>BlockingQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></extends></argument>&gt;</argument_list></name> <name>backingClass</name></expr></argument>,
     <argument><expr><name><name>this</name><operator>.</operator><name>clientBackOffEnabled</name></name> <operator>=</operator> <name>clientBackOffEnabled</name></expr></argument>;
     <argument><expr><name><name>this</name><operator>.</operator><name>putRef</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>AtomicReference</name><argument_list type="generic">&lt;<argument><name><name>BlockingQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>bq</name></expr></argument>)</argument_list></call></expr></argument>;
     <argument><expr><name><name>this</name><operator>.</operator><name>takeRef</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>AtomicReference</name><argument_list type="generic">&lt;<argument><name><name>BlockingQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>bq</name></expr></argument>)</argument_list></call></expr></argument>;
    <argument><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Using callQueue: "</literal> <operator>+</operator> <name>backingClass</name> <operator>+</operator> <literal type="string">" scheduler: "</literal> <operator>+</operator>
        <name>schedulerClass</name></expr></argument>)</argument_list></call></expr></argument>;
    <argument><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Using callQueue: "</literal> <operator>+</operator> <name>backingClass</name> <operator>+</operator> <literal type="string">" queueCapacity: "</literal> <operator>+</operator>
        <name>maxQueueSize</name> <operator>+</operator> <literal type="string">" scheduler: "</literal> <operator>+</operator> <name>schedulerClass</name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
   }
 
   private <decl_stmt><decl><type><specifier>static</specifier> <argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>RpcScheduler</name></extends></argument>&gt;</argument_list> <name>T</name></type> <name>createScheduler</name><argument_list>(
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>FairCallQueue</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>FairCallQueue</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">435c454176b</literal><operator>..</operator><literal type="number">38b196dc808</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>FairCallQueue</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>FairCallQueue</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">75</literal></expr></argument>,<argument><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">75</literal></expr></argument>,<argument><expr><literal type="number">12</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>signalNotEmpty</name><argument_list>()</argument_list></call> <block>{
 
   <comment type="block" format="javadoc">/**
    * Create a FairCallQueue.
   * @param capacity the maximum size of each sub-queue
   * @param capacity the total size of all sub-queues
    * @param ns the prefix to use for configuration
    * @param conf the configuration to read from
   * Notes: the FairCallQueue has no fixed capacity. Rather, it has a minimum
   * capacity of `capacity` and a maximum capacity of `capacity * number_queues`
   * Notes: Each sub-queue has a capacity of `capacity / numSubqueues`.
   * The first or the highest priority sub-queue has an excess capacity
   * of `capacity % numSubqueues`
    */</comment>
   <expr><specifier>public</specifier> <call><name>FairCallQueue</name><argument_list>(<argument><expr><name>int</name> <name>priorityLevels</name></expr></argument>, <argument><expr><name>int</name> <name>capacity</name></expr></argument>, <argument><expr><name>String</name> <name>ns</name></expr></argument>,
       <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">88</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">89</literal></expr>,<expr><literal type="number">19</literal> @@ <specifier>public</specifier> <call><name>FairCallQueue</name><argument_list>(<argument><expr><name>int</name> <name>priorityLevels</name></expr></argument>, <argument><expr><name>int</name> <name>capacity</name></expr></argument>, <argument><expr><name>String</name> <name>ns</name></expr></argument>,
           <argument><expr><literal type="string">"at least 1"</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
     <name>int</name> <name>numQueues</name> <operator>=</operator> <name>priorityLevels</name></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"FairCallQueue is in use with "</literal> <operator>+</operator> <name>numQueues</name> <operator>+</operator> <literal type="string">" queues."</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"FairCallQueue is in use with "</literal> <operator>+</operator> <name>numQueues</name> <operator>+</operator>
        <literal type="string">" queues with total capacity of "</literal> <operator>+</operator> <name>capacity</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name><name>this</name><operator>.</operator><name>queues</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>BlockingQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>numQueues</name></expr></argument>)</argument_list></call></expr>;
     <expr><name><name>this</name><operator>.</operator><name>overflowedCalls</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>AtomicLong</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>numQueues</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>int</name> <name>queueCapacity</name> <operator>=</operator> <name>capacity</name> <operator>/</operator> <name>numQueues</name></expr>;
    <expr><name>int</name> <name>capacityForFirstQueue</name> <operator>=</operator> <name>queueCapacity</name> <operator>+</operator> <operator>(</operator><name>capacity</name> <operator>%</operator> <name>numQueues</name><operator>)</operator></expr>;
     <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>numQueues</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>queues</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>LinkedBlockingQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>capacity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>queues</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>LinkedBlockingQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>capacityForFirstQueue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content> else <block>{<block_content>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>queues</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>LinkedBlockingQueue</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>queueCapacity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content>
       this.overflowedCalls.add(new AtomicLong(0</block></block></if></if_stmt>)</block_content></block></for>)</block></expr></argument>;</argument_list></decl></decl_stmt>
     }
 
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestCallQueueManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestCallQueueManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>af9ce1b08bc</name><operator>..</operator><literal type="number">121165785cd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestCallQueueManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestCallQueueManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testFcqBackwardCompatibility</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>InterruptedException</name> <block>{
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>queue</name><operator>.</operator><name>getCanonicalName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>queueClassName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>manager</name> <operator>=</operator> <operator>new</operator> <call><name><name>CallQueueManager</name><argument_list type="generic">&lt;<argument><name>FakeCall</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><name>scheduler</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>,
        <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><literal type="number">8</literal></expr><operator>,</operator> <expr><literal type="string">""</literal></expr><operator>,</operator> <expr><name>conf</name></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
 
    <comment type="line">// Default FCQ has 4 levels and the max capacity is 2 x 4</comment>
    <comment type="line">// Default FCQ has 4 levels and the max capacity is 8</comment>
     <expr_stmt><expr><call><name>assertCanPut</name><argument_list>(<argument><expr><name>manager</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }
 
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestFairCallQueue</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestFairCallQueue</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4a8ad3b9271</literal><operator>..</operator><literal type="number">8c96c2e500a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestFairCallQueue</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>ipc</name><operator>/</operator><name><name>TestFairCallQueue</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>ipc</name></name>;</package>
 
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNotNull</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNull</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>

 <import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name><operator>.</operator><name>mock</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name><operator>.</operator><name>when</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <block>{
     <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>conf</name><operator>.</operator><name>setInt</name></name><argument_list>(<argument><expr><literal type="string">"ns."</literal> <operator>+</operator> <name><name>FairCallQueue</name><operator>.</operator><name>IPC_CALLQUEUE_PRIORITY_LEVELS_KEY</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>fcq</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>fcq</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
  }</block>

  <comment type="line">// Validate that the total capacity of all subqueues equals</comment>
  <comment type="line">// the maxQueueSize for different values of maxQueueSize</comment>
  <specifier>public</specifier> <name>void</name> <call><name>testTotalCapacityOfSubQueues</name><argument_list>()</argument_list></call> <block>{
    <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name> <name>fairCallQueue</name></expr>;
    <expr><name>fairCallQueue</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>fairCallQueue</name><operator>.</operator><name>remainingCapacity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>fairCallQueue</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>fairCallQueue</name><operator>.</operator><name>remainingCapacity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>fairCallQueue</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>fairCallQueue</name><operator>.</operator><name>remainingCapacity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>fairCallQueue</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1025</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>fairCallQueue</name><operator>.</operator><name>remainingCapacity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1025</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>fairCallQueue</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1025</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>fairCallQueue</name><operator>.</operator><name>remainingCapacity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1025</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>fairCallQueue</name> <operator>=</operator> <operator>new</operator> <call><name><name>FairCallQueue</name><argument_list type="generic">&lt;<argument><name>Schedulable</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">1025</literal></expr></argument>, <argument><expr><literal type="string">"ns"</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>fairCallQueue</name><operator>.</operator><name>remainingCapacity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1025</literal></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <comment type="line">//</comment>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt>

</unit>
