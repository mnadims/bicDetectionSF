<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/ef1fc51852c.java"><expr_stmt><expr><name>From</name> <name>ef1fc51852cd2914accde4d80c2f496cd1ca042f</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Haohui</name> <name><name>Mai</name> <argument_list type="generic">&lt;<argument><name>wheat9</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">18</literal> <name>Dec</name> <literal type="number">2014</literal> <literal type="number">11</literal><operator>:</operator><literal type="number">33</literal><operator>:</operator><literal type="number">09</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">11385.</literal> <name>Prevent</name> <name>cross</name> <name>site</name> <name>scripting</name> <name>attack</name> <name>on</name>
 <name><name>JMXJSONServlet</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Haohui</name> <name><name>Mai</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">3</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>JMXJsonServlet</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">46</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>TestJMXJsonServlet</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">48</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">34</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">63</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">167bf384c8e</literal><operator>..</operator><literal type="number">7cbac149f63</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">614</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">614</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.7.0</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">11125.</literal> <name>Remove</name> <name>redundant</name> <name>tests</name> <name>in</name> <name><name>TestOsSecureRandom</name><operator>.</operator></name>
     (<name>Masanori</name> <name>Oyama</name> <name>via</name> <name>wheat9</name></expr></expr_stmt>)
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">11385.</literal> <name>Prevent</name> <name>cross</name> <name>site</name> <name>scripting</name> <name>attack</name> <name>on</name> <name><name>JMXJSONServlet</name><operator>.</operator></name>
    (<name>wheat9</name></expr></expr_stmt>)

 <expr_stmt><expr><name>Release</name> <literal type="number">2.6.0</literal> <operator>-</operator> <literal type="number">2014</literal><operator>-</operator><literal type="number">11</literal><operator>-</operator><literal type="number">18</literal>
 
   <name>INCOMPATIBLE</name> <name>CHANGES</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>JMXJsonServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>JMXJsonServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f775dd71beb</name><operator>..</operator><literal type="number">9ade62f27ab</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>JMXJsonServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>JMXJsonServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>jmx</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Array</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>LogFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServer2</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>codehaus</name><operator>.</operator><name>jackson</name><operator>.</operator><name>JsonFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>codehaus</name><operator>.</operator><name>jackson</name><operator>.</operator><name>JsonGenerator</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>AttributeNotFoundException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>InstanceNotFoundException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServlet</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServletRequest</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServletResponse</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>LogFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServer2</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>codehaus</name><operator>.</operator><name>jackson</name><operator>.</operator><name>JsonFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>codehaus</name><operator>.</operator><name>jackson</name><operator>.</operator><name>JsonGenerator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Array</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <comment type="block">/*
  * This servlet is based off of the JMXProxyServlet from Tomcat 7.0.14. It has
@@ -114,16 +113,16 @@
  *  
  *  The bean's name and modelerType will be returned for all beans.
  *
 *  Optional paramater "callback" should be used to deliver JSONP response.
 *  
  */</comment>
 <class><specifier>public</specifier> class <name>JMXJsonServlet</name> <super_list><extends>extends <super><name>HttpServlet</name></super></extends></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Log</name></type> <name>LOG</name> <init>= <expr><call><name><name>LogFactory</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><name><name>JMXJsonServlet</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ACCESS_CONTROL_ALLOW_METHODS</name> <init>=
      <expr><literal type="string">"Access-Control-Allow-Methods"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ACCESS_CONTROL_ALLOW_ORIGIN</name> <init>=
      <expr><literal type="string">"Access-Control-Allow-Origin"</literal></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">1L</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CALLBACK_PARAM</name> <init>= <expr><literal type="string">"callback"</literal></expr></init></decl>;</decl_stmt>

   <comment type="block" format="javadoc">/**
    * MBean server.
    */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>doGet</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list></call> <block>{
         <return>return;</return>
       }</block></expr></expr_stmt>
       <decl_stmt><decl><type><name>JsonGenerator</name></type> <name>jg</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>jsonpcb</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>PrintWriter</name></type> <name>writer</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name><name>response</name><operator>.</operator><name>getWriter</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  
        <comment type="line">// "callback" parameter implies JSONP outpout</comment>
        <expr_stmt><expr><name>jsonpcb</name> <operator>=</operator> <call><name><name>request</name><operator>.</operator><name>getParameter</name></name><argument_list>(<argument><expr><name>CALLBACK_PARAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>jsonpcb</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>setContentType</name></name><argument_list>(<argument><expr><literal type="string">"application/javascript; charset=utf8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>jsonpcb</name> <operator>+</operator> <literal type="string">"("</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>setContentType</name></name><argument_list>(<argument><expr><literal type="string">"application/json; charset=utf8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>setContentType</name></name><argument_list>(<argument><expr><literal type="string">"application/json; charset=utf8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>setHeader</name></name><argument_list>(<argument><expr><name>ACCESS_CONTROL_ALLOW_METHODS</name></expr></argument>, <argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>setHeader</name></name><argument_list>(<argument><expr><name>ACCESS_CONTROL_ALLOW_ORIGIN</name></expr></argument>, <argument><expr><literal type="string">"*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <expr_stmt><expr><name>jg</name> <operator>=</operator> <call><name><name>jsonFactory</name><operator>.</operator><name>createJsonGenerator</name></name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>jg</name><operator>.</operator><name>disable</name></name><argument_list>(<argument><expr><name><name>JsonGenerator</name><operator>.</operator><name>Feature</name><operator>.</operator><name>AUTO_CLOSE_TARGET</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>doGet</name><argument_list>(<argument><expr><name>HttpServletRequest</name> <name>request</name></expr></argument>, <argument><expr><name>HttpServletResponse</name> <name>response</name></expr></argument>)</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>jg</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>jg</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>jsonpcb</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">");"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
         <if_stmt><if>if <condition>(<expr><name>writer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>TestJMXJsonServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>TestJMXJsonServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a119f2c29ce</name><operator>..</operator><name>cf7014ddc6b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>TestJMXJsonServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>jmx</name><operator>/</operator><name><name>TestJMXJsonServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>jmx</name></name>;</package>
 
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>LogFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServer2</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpServerFunctionalTest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>HttpURLConnection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>jmx</name><operator>.</operator><name>JMXJsonServlet</name><operator>.</operator><name>ACCESS_CONTROL_ALLOW_METHODS</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>jmx</name><operator>.</operator><name>JMXJsonServlet</name><operator>.</operator><name>ACCESS_CONTROL_ALLOW_ORIGIN</name></name>;</import>

 <class><specifier>public</specifier> class <name>TestJMXJsonServlet</name> <super_list><extends>extends <super><name>HttpServerFunctionalTest</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier>   <specifier>static</specifier> <specifier>final</specifier> <name>Log</name></type> <name>LOG</name> <init>= <expr><call><name><name>LogFactory</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><name><name>TestJMXJsonServlet</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>HttpServer2</name></type> <name>server</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>URL</name></type> <name>baseUrl</name></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">54</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>assertReFind</name><argument_list>(<argument><expr><name>String</name> <name>re</name></expr></argument>, <argument><expr><name>String</name> <name>value</name></expr></argument>)</argument_list></call> <block>{
   
   @<expr><name>Test</name> <specifier>public</specifier> <name>void</name> <call><name>testQuery</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>String</name> <name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><literal type="string">"/jmx?qry=java.lang:type=Runtime"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx?qry=java.lang:type=Runtime RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"name\"\\s*:\\s*\"java.lang:type=Runtime\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"modelerType\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><literal type="string">"/jmx?qry=java.lang:type=Memory"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx?qry=java.lang:type=Memory RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"name\"\\s*:\\s*\"java.lang:type=Memory\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"modelerType\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><literal type="string">"/jmx"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"name\"\\s*:\\s*\"java.lang:type=Memory\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     
     <comment type="line">// test to get an attribute of a mbean</comment>
     <expr><name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, 
         <argument><expr><literal type="string">"/jmx?get=java.lang:type=Memory::HeapMemoryUsage"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"name\"\\s*:\\s*\"java.lang:type=Memory\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"committed\"\\s*:"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     
     <comment type="line">// negative test to get an attribute of a mbean</comment>
     <expr><name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, 
         <argument><expr><literal type="string">"/jmx?get=java.lang:type=Memory::"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"ERROR\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// test to get JSONP result</comment>
    <expr><name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><literal type="string">"/jmx?qry=java.lang:type=Memory&amp;callback=mycallback1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx?qry=java.lang:type=Memory&amp;callback=mycallback RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"^mycallback1\\(\\{"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\\}\\);$"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// negative test to get an attribute of a mbean as JSONP</comment>
    <expr><name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>,
        <argument><expr><literal type="string">"/jmx?get=java.lang:type=Memory::&amp;callback=mycallback2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"^mycallback2\\(\\{"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"ERROR\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\\}\\);$"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// test to get an attribute of a mbean as JSONP</comment>
    <expr><name>result</name> <operator>=</operator> <call><name>readOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>,
        <argument><expr><literal type="string">"/jmx?get=java.lang:type=Memory::HeapMemoryUsage&amp;callback=mycallback3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"/jmx RESULT: "</literal><operator>+</operator><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"^mycallback3\\(\\{"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"name\"\\s*:\\s*\"java.lang:type=Memory\""</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\"committed\"\\s*:"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertReFind</name><argument_list>(<argument><expr><literal type="string">"\\}\\);$"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;
 
    <comment type="line">// test to CORS headers</comment>
    <expr><name>HttpURLConnection</name> <name>conn</name> <operator>=</operator> <operator>(</operator><name>HttpURLConnection</name><operator>)</operator>
        <operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><literal type="string">"/jmx?qry=java.lang:type=Memory"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>openConnection</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>, <argument><expr><call><name><name>conn</name><operator>.</operator><name>getHeaderField</name></name><argument_list>(<argument><expr><name>ACCESS_CONTROL_ALLOW_METHODS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>conn</name><operator>.</operator><name>getHeaderField</name></name><argument_list>(<argument><expr><name>ACCESS_CONTROL_ALLOW_ORIGIN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 }</block></class>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></try></block></class>

</unit>
