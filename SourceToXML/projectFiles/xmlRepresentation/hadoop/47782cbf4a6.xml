<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/47782cbf4a6.java"><expr_stmt><expr><name>From</name> <literal type="number">47782cbf4a66d49064fd3dd6d1d1a19cc42157fc</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Haohui</name> <name><name>Mai</name> <argument_list type="generic">&lt;<argument><name>wheat9</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">26</literal> <name>Mar</name> <literal type="number">2015</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">29</literal><operator>:</operator><literal type="number">36</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">11748.</literal> <name>The</name> <name>secrets</name> <name>of</name> <name>auth</name> <name>cookies</name> <name>should</name> <name>not</name> <name>be</name>
 <name>specified</name> <name>in</name> <name>configuration</name> <name>in</name> <name>clear</name> <name><name>text</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Li</name> <name>Lu</name> <name>and</name> <name>Haohui</name>
 <name><name>Mai</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">173</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">33</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>                <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>fs</name><operator>/</operator><name>http</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestHttpFSServer</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">7</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">106</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">128</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>rename</name> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><block>{<expr><name>main</name> <operator>=</operator><operator>&gt;</operator> <name>test</name></expr>}</block><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><call><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name> <argument_list>(<argument><expr><literal type="number">92</literal><operator>%</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">43bb4b0af92</literal><operator>..</operator><literal type="number">5c22fce0245</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">279</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">279</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>protected</specifier> <name>void</name> <call><name>initializeSecretProvider</name><argument_list>(<argument><expr><name>FilterConfig</name> <name>filterConfig</name></expr></argument>)</argument_list></call>
             <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>SIGNER_SECRET_PROVIDER</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// fallback to old behavior</comment>
     <if_stmt><if>if <condition>(<expr><name>signerSecretProviderName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>signatureSecret</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>SIGNATURE_SECRET</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>signatureSecretFile</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(
           <argument><expr><name>SIGNATURE_SECRET_FILE</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <comment type="line">// The precedence from high to low : file, inline string, random</comment>
      <comment type="line">// The precedence from high to low : file, random</comment>
       <if_stmt><if>if <condition>(<expr><name>signatureSecretFile</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>FileSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>signatureSecret</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>StringSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>RandomSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>randomSecret</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">295</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">292</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>protected</specifier> <name>void</name> <call><name>initializeSecretProvider</name><argument_list>(<argument><expr><name>FilterConfig</name> <name>filterConfig</name></expr></argument>)</argument_list></call></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><literal type="string">"random"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>signerSecretProviderName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>RandomSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>randomSecret</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"string"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>signerSecretProviderName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>StringSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"file"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>signerSecretProviderName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>FileSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"zookeeper"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>signerSecretProviderName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a03894b0757</name><operator>..</operator><literal type="number">26c10a9d31a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>client</name><operator>.</operator><name>AuthenticationException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>Signer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>SignerSecretProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>StringSignerSecretProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>StringSignerSecretProviderCreator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>FilterConfig</name></type> <name>config</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>FilterConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameter</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="string">"simple"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameter</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
      <argument><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameter</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
           <argument><expr><operator>(</operator><operator>new</operator> <call><name>Long</name><argument_list>(<argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameterNames</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
        <argument><expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                                 <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                                           <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>PseudoAuthenticationHandler</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>filter</name><operator>.</operator><name>getAuthenticationHandler</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">27</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><call><name><name>filter</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
    <comment type="line">// string secret</comment>
    <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>FilterConfig</name></type> <name>config</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>FilterConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameter</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="string">"simple"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameter</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameterNames</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
        <argument><expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                                 <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>filter</name><operator>.</operator><name>isRandomSecret</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>filter</name><operator>.</operator><name>isCustomSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>

     <comment type="line">// custom secret as inline</comment>
     <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">278</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">257</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>, <argument><expr><name>ServletContext</name> <name>servletContext</name></expr></argument>,
         <argument><expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                                  <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>COOKIE_DOMAIN</name></name></expr></argument>,
                                  <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>COOKIE_PATH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">".foo.com"</literal></expr></argument>, <argument><expr><call><name><name>filter</name><operator>.</operator><name>getCookieDomain</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"/bar"</literal></expr></argument>, <argument><expr><call><name><name>filter</name><operator>.</operator><name>getCookiePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">303</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">278</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>, <argument><expr><name>ServletContext</name> <name>servletContext</name></expr></argument>,
         <argument><expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(
           <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>init</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <finally>finally <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">345</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">316</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInitCaseSensitivity</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameterNames</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
           <argument><expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
               <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>PseudoAuthenticationHandler</name><operator>.</operator><name>class</name></name></expr></argument>, 
<argument>@@ <expr><operator>-</operator><literal type="number">372</literal></expr></argument>,<argument><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">339</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetRequestURL</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(
           <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>HttpServletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>HttpServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">392</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">355</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetRequestURL</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
   <expr><annotation>@<name>Test</name></annotation>
   <specifier>public</specifier> <name>void</name> <call><name>testGetToken</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>AuthenticationFilter</name> <name>filter</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationFilter</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>

     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>FilterConfig</name></type> <name>config</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>FilterConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameter</name></name><argument_list>(<argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator>
@@ <operator>-</operator><literal type="number">404</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">368</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetToken</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
           <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)</block_content>.elements(</block></try>)</block_content></block></finally></try>)</block_content></block><empty_stmt>;</empty_stmt></else></if_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
          <expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>AuthenticationToken</name></type> <name>token</name> <init>= <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">448</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">404</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetTokenExpired</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
           <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)</block_content>.elements(</block></if></if_stmt>))<empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>AuthenticationToken</name></type> <name>token</name> <init>=
           <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
          <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
               <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">500</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">452</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetTokenInvalidType</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
           <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>AuthenticationToken</name></type> <name>token</name> <init>= <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"invalidtype"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
          <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
               <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">536</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">484</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetTokenInvalidType</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     }</block></expr></argument>
   }
 
  <argument><expr><specifier>private</specifier> <specifier>static</specifier> <name>SignerSecretProvider</name> <call><name>getMockedServletContextWithStringSigner</name><argument_list>(
      <argument><expr><name>FilterConfig</name> <name>config</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Properties</name> <name>secretProviderProps</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>,
                                    <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
        <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
            <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>secretProvider</name></expr>;</return>
  }

   @<function><type><name>Test</name>
   <specifier>public</specifier> <name>void</name></type> <name>testDoFilterNotAuthenticated</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>AuthenticationFilter</name></type> <name>filter</name> <init>= <expr><operator>new</operator> <call><name>AuthenticationFilter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">549</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">514</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterNotAuthenticated</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(
           <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)</block_content></block>;</function>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>HttpServletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>HttpServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">603</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">564</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>_testDoFilterAuthentication</name><argument_list>(<argument><expr><name>boolean</name> <name>withDomainPath</name></expr></argument>,
             <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></argument>,
             <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"management.operation"</literal> <operator>+</operator>
             <literal type="string">".return"</literal></expr></argument>, <argument><expr><literal type="string">"expired.token"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>)<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name>withDomainPath</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getInitParameter</name></name><argument_list>(<argument><expr><name>AuthenticationFilter</name>
@@ <operator>-</operator><literal type="number">661</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">618</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>Object</name> <call><name>answer</name><argument_list>(<argument><expr><name>InvocationOnMock</name> <name>invocation</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
         <expr><call><name><name>Mockito</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>chain</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>doFilter</name><argument_list>(<argument><expr><call><name><name>Mockito</name><operator>.</operator><name>any</name></name><argument_list>(<argument><expr><name><name>ServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>,
                 <argument><expr><call><name><name>Mockito</name><operator>.</operator><name>any</name></name><argument_list>(<argument><expr><name><name>ServletResponse</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></expr_stmt>
 
        <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
                <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
            <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
                 <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">734</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">691</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticated</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(
           <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>HttpServletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>HttpServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">746</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">699</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticated</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"t"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
          <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
               <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">795</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">748</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticationFailure</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(
           <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>HttpServletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>HttpServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">863</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">812</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedExpired</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
           <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>HttpServletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>HttpServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">875</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">820</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedExpired</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
          <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
               <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">942</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">887</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedInvalidType</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
           <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>HttpServletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>HttpServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">954</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">895</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedInvalidType</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"invalidtype"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
          <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
               <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">989</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">930</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testManagementOperation</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><operator>new</operator> <call><name><name>Vector</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(
           <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TYPE</name></name></expr></argument>,
                         <argument><expr><literal type="string">"management.operation.return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getMockedServletContextWithStringSigner</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>HttpServletRequest</name></type> <name>request</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>HttpServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1013</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">950</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testManagementOperation</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"t"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
          <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
               <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">92</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">57ddd372fe4</literal><operator>..</operator><literal type="number">7e5b10e6418</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>server</name><operator>.</operator><name>AuthenticationFilter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
  <operator>*</operator> <name>A</name> <name>SignerSecretProvider</name> <name>that</name> <name>simply</name> <name>creates</name> <name>a</name> <name>secret</name> <name>based</name> <name>on</name> <name>a</name> <name>given</name> <name><name>String</name><operator>.</operator></name>
  *<operator>/</operator>
 @<name><name>InterfaceStability</name><operator>.</operator><name>Unstable</name></name>
@<name><name>InterfaceAudience</name><operator>.</operator><name>Private</name></name>
<specifier>public</specifier> <name>class</name> <name>StringSignerSecretProvider</name> extends <name>SignerSecretProvider</name> <block>{
@<expr><name>VisibleForTesting</name>
<name>class</name> <name>StringSignerSecretProvider</name> extends <name>SignerSecretProvider</name> <block>{
 
   <expr><specifier>private</specifier> <name><name>byte</name><index>[]</index></name> <name>secret</name></expr>;
   <expr><specifier>private</specifier> <name><name>byte</name><index>[]</index><index>[]</index></name> <name>secrets</name></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..e567e7bfbaf</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr>,<expr><literal type="number">33</literal> @@</expr>
<comment type="block" format="javadoc">/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. See accompanying LICENSE file.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package></block></expr>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import></block></expr></expr_stmt>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Helper class for creating StringSignerSecretProviders in unit tests
 */</comment>
<class><annotation>@<name><name>InterfaceStability</name><operator>.</operator><name>Unstable</name></name></annotation>
<annotation>@<name>VisibleForTesting</name></annotation>
<specifier>public</specifier> class <name>StringSignerSecretProviderCreator</name> <block>{
  <comment type="block" format="javadoc">/**
   * @return a new StringSignerSecretProvider
   * @throws Exception
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>StringSignerSecretProvider</name></type> <name>newStringSignerSecretProvider</name><parameter_list>()</parameter_list>
      <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">40b4f84033d</literal><operator>..</operator><name>e739a8ff457</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1163</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1163</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.7.0</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">11738.</literal> <name>Fix</name> <name>a</name> <name>link</name> <name>of</name> <name>Protocol</name> <name>Buffers</name> <literal type="number">2.5</literal></expr></expr_stmt> <for>for download in BUILDING.txt.
     <control>(<init><expr><name>ozawa</name></expr></init>)</control><block type="pseudo"><block_content>
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">11748.</literal> <name>The</name> <name>secrets</name> <name>of</name> <name>auth</name> <name>cookies</name> <name>should</name> <name>not</name> <name>be</name> <name>specified</name> <name>in</name>
    <name>configuration</name> <name>in</name> <name>clear</name> <name><name>text</name><operator>.</operator></name> (<name>Li</name> <name>Lu</name> <name>and</name> <name>Haohui</name> <name>Mai</name> <name>via</name> <name>wheat9</name></expr></expr_stmt></block_content></block></for>)

 <expr_stmt><expr><name>Release</name> <literal type="number">2.6.1</literal> <operator>-</operator> <name>UNRELEASED</name>
 
   <name>INCOMPATIBLE</name> <name>CHANGES</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<name>index</name> <name>ddc60339669</name><operator>..</operator><literal type="number">520e30fb325</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@
       <operator>&lt;</operator><name>scope</name><operator>&gt;</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>scope</name></argument>&gt;</argument_list></name>
       <operator>&lt;</operator><name>type</name><operator>&gt;</operator><name>test</name><operator>-</operator><name><name>jar</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>type</name></argument>&gt;</argument_list></name>
     <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
      <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name><name>hadoop</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
      <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name>hadoop</name><operator>-</operator><name><name>auth</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
      <operator>&lt;</operator><name>scope</name><operator>&gt;</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>scope</name></argument>&gt;</argument_list></name>
      <operator>&lt;</operator><name>type</name><operator>&gt;</operator><name>test</name><operator>-</operator><name><name>jar</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>type</name></argument>&gt;</argument_list></name>
    <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
     <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
       <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>log4j</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name>
       <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name><name>log4j</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>http</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestHttpFSServer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>http</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestHttpFSServer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">763d168d198</literal><operator>..</operator><literal type="number">14b7a43654d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>http</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestHttpFSServer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>httpfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>http</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestHttpFSServer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>http</name><operator>.</operator><name>server</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>DFSConfigKeys</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>SignerSecretProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>StringSignerSecretProviderCreator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>token</name><operator>.</operator><name>delegation</name><operator>.</operator><name>web</name><operator>.</operator><name>DelegationTokenAuthenticator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>token</name><operator>.</operator><name>delegation</name><operator>.</operator><name>web</name><operator>.</operator><name>KerberosDelegationTokenAuthenticationHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>json</name><operator>.</operator><name>simple</name><operator>.</operator><name>JSONArray</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Maps</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>server</name><operator>.</operator><name>AuthenticationFilter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>StringSignerSecretProvider</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestHttpFSServer</name> <super_list><extends>extends <super><name>HFSTestCase</name></super></extends></super_list> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">687</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">688</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDelegationTokenOperations</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>,
           <argument><expr><operator>new</operator> <call><name>KerberosDelegationTokenAuthenticationHandler</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">100000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name> <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>secretProvider</name> <init>=
        <expr><call><name><name>StringSignerSecretProviderCreator</name><operator>.</operator><name>newStringSignerSecretProvider</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block></class>

</unit>
