<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/90e07d55ace.java"><expr_stmt><expr><name>From</name> <literal type="number">90e07d55ace7221081a58a90e54b360ad68fa1ef</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Haohui</name> <name><name>Mai</name> <argument_list type="generic">&lt;<argument><name>wheat9</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">30</literal> <name>Mar</name> <literal type="number">2015</literal> <literal type="number">11</literal><operator>:</operator><literal type="number">44</literal><operator>:</operator><literal type="number">22</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">11754.</literal> <name>RM</name> <name>fails</name> <name>to</name> <name>start</name> <name>in</name> <name>non</name><operator>-</operator><name>secure</name> <name>mode</name> <name>due</name> <name>to</name>
 <name>authentication</name> <name>filter</name> <name><name>failure</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Haohui</name> <name><name>Mai</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>          <operator>|</operator> <literal type="number">108</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">20</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>http</name><operator>/</operator><name><name>HttpServer2</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">53</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AuthenticationFilterInitializer</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">18</literal> <operator>++</operator><operator>-</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">128</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">74</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5c22fce0245</literal><operator>..</operator><literal type="number">684e91c2bc9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>FilterChain</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>FilterConfig</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletRequest</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletResponse</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
   <specifier>private</specifier> <name>Signer</name> <name>signer</name></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>SignerSecretProvider</name></type> <name>secretProvider</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>AuthenticationHandler</name></type> <name>authHandler</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>randomSecret</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>customSecretProvider</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>validity</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>cookieDomain</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>cookiePath</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>FilterConfig</name> <name>filterConfig</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>ServletException</name> <block>{
 
     <expr><call><name>initializeAuthHandler</name><argument_list>(<argument><expr><name>authHandlerClassName</name></expr></argument>, <argument><expr><name>filterConfig</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
 

     <expr_stmt><expr><name>cookieDomain</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>COOKIE_DOMAIN</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>cookiePath</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>COOKIE_PATH</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">235</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>protected</specifier> <name>void</name> <call><name>initializeAuthHandler</name><argument_list>(<argument><expr><name>String</name> <name>authHandlerClassName</name></expr></argument>, <argument><expr><name>FilterConfig</name> <name>f</name>
       <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <name>klass</name> <operator>=</operator> <call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>loadClass</name><argument_list>(<argument><expr><name>authHandlerClassName</name></expr></argument>)</argument_list></call></expr></argument>;
       <argument><expr><name>authHandler</name> <operator>=</operator> <operator>(</operator><name>AuthenticationHandler</name><operator>)</operator> <call><name><name>klass</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr></argument>;
       <argument><expr><call><name><name>authHandler</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
    } catch <expr_stmt><expr><operator>(</operator><name>ClassNotFoundException</name> <name>ex</name><operator>)</operator> <block>{
      <throw>throw <argument_list>new <argument><expr><call><name>ServletException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
    }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>InstantiationException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>ServletException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalAccessException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> | <type><name>InstantiationException</name></type> |
        <type><name>IllegalAccessException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>ServletException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch>
   }
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">251</literal></expr><operator>,</operator><expr><literal type="number">62</literal> <operator>+</operator><literal type="number">246</literal></expr><operator>,</operator><expr><literal type="number">59</literal> @@ <specifier>protected</specifier> <name>void</name> <call><name>initializeSecretProvider</name><argument_list>(<argument><expr><name>FilterConfig</name> <name>filterConfig</name></expr></argument>)</argument_list></call>
     <name>secretProvider</name> <operator>=</operator> <operator>(</operator><name>SignerSecretProvider</name><operator>)</operator> <call><name><name>filterConfig</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call><operator>.</operator>
         <call><name>getAttribute</name><argument_list>(<argument><expr><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>secretProvider</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>SignerSecretProvider</name></extends></argument>&gt;</argument_list></name></type> <name>providerClass</name>
              <init>= <expr><call><name>getProviderClass</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>secretProvider</name> <operator>=</operator> <call><name><name>providerClass</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InstantiationException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>ServletException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalAccessException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>ServletException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch></try>
      <comment type="line">// As tomcat cannot specify the provider object in the configuration.</comment>
      <comment type="line">// It'll go into this path</comment>
       <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><call><name><name>filterConfig</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>validity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>secretProvider</name> <operator>=</operator> <call><name>constructSecretProvider</name><argument_list>(
            <argument><expr><call><name><name>filterConfig</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>,
            <argument><expr><name>config</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>ServletException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
       </block_content>}</block></catch></try>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>customSecretProvider</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
     <expr_stmt><expr><name>signer</name> <operator>=</operator> <operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }
 
  @<expr_stmt><expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
  <specifier>private</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>SignerSecretProvider</name></extends></argument>&gt;</argument_list></name> <call><name>getProviderClass</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>)</argument_list></call>
          <throws>throws <argument><expr><name>ServletException</name> <block>{
    <expr><name>String</name> <name>providerClassName</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>signerSecretProviderName</name>
            <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>SIGNER_SECRET_PROVIDER</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// fallback to old behavior</comment>
    <if_stmt><if>if <condition>(<expr><name>signerSecretProviderName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>signatureSecretFile</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(
          <argument><expr><name>SIGNATURE_SECRET_FILE</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <comment type="line">// The precedence from high to low : file, random</comment>
      <if_stmt><if>if <condition>(<expr><name>signatureSecretFile</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>FileSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>RandomSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>randomSecret</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>SignerSecretProvider</name></type> <name>constructSecretProvider</name><parameter_list>(
      <parameter><decl><type><name>ServletContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>,
      <parameter><decl><type><name>boolean</name></type> <name>disallowFallbackToRandomSecretProvider</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>SIGNER_SECRET_PROVIDER</name></expr></argument>, <argument><expr><literal type="string">"file"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>validity</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>parseLong</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>AUTH_TOKEN_VALIDITY</name></expr></argument>,
                                                      <argument><expr><literal type="string">"36000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">1000</literal></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>disallowFallbackToRandomSecretProvider</name>
        <operator>&amp;&amp;</operator> <literal type="string">"file"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call>
        <operator>&amp;&amp;</operator> <call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>SIGNATURE_SECRET_FILE</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <literal type="string">"random"</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>SignerSecretProvider</name></type> <name>provider</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><literal type="string">"file"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>provider</name> <operator>=</operator> <operator>new</operator> <call><name>FileSignerSecretProvider</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>provider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>validity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><name>disallowFallbackToRandomSecretProvider</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Unable to initialize FileSignerSecretProvider, "</literal> <operator>+</operator>
                       <literal type="string">"falling back to use random secrets."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>provider</name> <operator>=</operator> <operator>new</operator> <call><name>RandomSignerSecretProvider</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>provider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>validity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <throw>throw <expr><name>e</name></expr>;</throw>
        </block_content>}</block></else></if_stmt>
       </block_content>}</block></catch></try>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"random"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>provider</name> <operator>=</operator> <operator>new</operator> <call><name>RandomSignerSecretProvider</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>provider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>validity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"zookeeper"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>provider</name> <operator>=</operator> <operator>new</operator> <call><name>ZKSignerSecretProvider</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>provider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>validity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><literal type="string">"random"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>signerSecretProviderName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>RandomSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>randomSecret</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"file"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>signerSecretProviderName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>FileSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"zookeeper"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>signerSecretProviderName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <call><name><name>ZKSignerSecretProvider</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>providerClassName</name> <operator>=</operator> <name>signerSecretProviderName</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>customSecretProvider</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
    <try>try <block>{<block_content>
      <return>return <expr><operator>(</operator><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>SignerSecretProvider</name></extends></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator>
              <call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>loadClass</name><argument_list>(<argument><expr><name>providerClassName</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>ServletException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</throw>
      <expr_stmt><expr><name>provider</name> <operator>=</operator> <operator>(</operator><name>SignerSecretProvider</name><operator>)</operator> <call><name><name>Thread</name><operator>.</operator><name>currentThread</name></name><argument_list>()</argument_list></call><operator>.</operator>
          <call><name>getContextClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>loadClass</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>newInstance</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>provider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>validity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch></try>
    <return>return <expr><name>provider</name></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -335,7 +327,7 @@ protected AuthenticationHandler getAuthenticationHandler() {
    * @return if a random secret is being used.
    */</comment>
   <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>isRandomSecret</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>randomSecret</name></expr>;</return>
    <return>return <expr><call><name><name>secretProvider</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>RandomSignerSecretProvider</name><operator>.</operator><name>class</name></name></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -344,7 +336,10 @@ protected boolean isRandomSecret() {
    * @return if a custom implementation of a SignerSecretProvider is being used.
    */</comment>
   <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>isCustomSignerSecretProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>customSecretProvider</name></expr>;</return>
    <decl_stmt><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>clazz</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><name>clazz</name> <operator>!=</operator> <name><name>FileSignerSecretProvider</name><operator>.</operator><name>class</name></name> <operator>&amp;&amp;</operator> <name>clazz</name> <operator>!=</operator>
        <name><name>RandomSignerSecretProvider</name><operator>.</operator><name>class</name></name> <operator>&amp;&amp;</operator> <name>clazz</name> <operator>!=</operator> <name><name>ZKSignerSecretProvider</name>
        <operator>.</operator><name>class</name></name></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -385,9 +380,6 @@ public void destroy() {
       authHandler.destroy();
       authHandler = null;
     }
    if (secretProvider != null) {
      secretProvider.destroy();
    }
   }
 
   /**
diff --git a/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/server/TestAuthenticationFilter.java b/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/server/TestAuthenticationFilter.java
index 26c10a9d31a..63b812d5e35 100644
-- a/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/server/TestAuthenticationFilter.java
++ b/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/server/TestAuthenticationFilter.java
@@ -18,7 +18,9 @@
 import java.io.IOException;
 import java.io.Writer;
 import java.net.HttpCookie;
import java.util.ArrayList;
 import java.util.Arrays;
import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Properties;
@@ -151,8 +153,7 @@ public AuthenticationToken authenticate(HttpServletRequest request, HttpServletR
   }
 
   @Test
  public void testInit() throws Exception {

  public void testFallbackToRandomSecretProvider() throws Exception {
     // minimal configuration &amp; simple auth handler (Pseudo)
     AuthenticationFilter filter = new AuthenticationFilter();
     try {
@@ -162,8 +163,8 @@ public void testInit() throws Exception {
           AuthenticationFilter.AUTH_TOKEN_VALIDITY)).thenReturn(
           (new Long(TOKEN_VALIDITY_SEC)).toString());
       Mockito.when(config.getInitParameterNames()).thenReturn(
          new Vector&lt;String&gt;(Arrays.asList(AuthenticationFilter.AUTH_TYPE,
                                           AuthenticationFilter.AUTH_TOKEN_VALIDITY)).elements());
          new Vector&lt;&gt;(Arrays.asList(AuthenticationFilter.AUTH_TYPE,
                                     AuthenticationFilter.AUTH_TOKEN_VALIDITY)).elements());
       ServletContext context = Mockito.mock(ServletContext.class);
       Mockito.when(context.getAttribute(AuthenticationFilter.SIGNER_SECRET_PROVIDER_ATTRIBUTE))
           .thenReturn(null);
@@ -178,16 +179,17 @@ public void testInit() throws Exception {
     } finally {
       filter.destroy();
     }

  }
  @Test
  public void testInit() throws Exception {
     // custom secret as inline
    filter = new AuthenticationFilter();
    AuthenticationFilter filter = new AuthenticationFilter();
     try {
       FilterConfig config = Mockito.mock(FilterConfig.class);
       Mockito.when(config.getInitParameter(AuthenticationFilter.AUTH_TYPE)).thenReturn("simple");
      Mockito.when(config.getInitParameter(AuthenticationFilter.SIGNATURE_SECRET)).thenReturn("secret");
       Mockito.when(config.getInitParameterNames()).thenReturn(
        new Vector&lt;String&gt;(Arrays.asList(AuthenticationFilter.AUTH_TYPE,
                                 AuthenticationFilter.SIGNATURE_SECRET)).elements());
          new Vector&lt;&gt;(Arrays.asList(AuthenticationFilter.AUTH_TYPE))
              .elements());
       ServletContext context = Mockito.mock(ServletContext.class);
       Mockito.when(context.getAttribute(
           AuthenticationFilter.SIGNER_SECRET_PROVIDER_ATTRIBUTE)).thenReturn(
diff --git a/hadoop-common-project/hadoop-common/CHANGES.txt b/hadoop-common-project/hadoop-common/CHANGES.txt
index 8b5997259c9..b5d23037d35 100644
-- a/hadoop-common-project/hadoop-common/CHANGES.txt
++ b/hadoop-common-project/hadoop-common/CHANGES.txt
@@ -1178,6 +1178,9 @@ Release 2.7.0 - UNRELEASED
     HADOOP-11761. Fix findbugs warnings in org.apache.hadoop.security
     .authentication. (Li Lu via wheat9)
 
    HADOOP-11754. RM fails to start in non-secure mode due to authentication
    filter failure. (wheat9)

 Release 2.6.1 - UNRELEASED
 
   INCOMPATIBLE CHANGES
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java
index 566861e046f..0f1c22287e2 100644
-- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java
++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java
@@ -31,6 +31,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
import java.util.Properties;
 
 import javax.servlet.Filter;
 import javax.servlet.FilterChain;
@@ -53,6 +54,11 @@
 import org.apache.hadoop.conf.ConfServlet;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.CommonConfigurationKeys;
import org.apache.hadoop.security.AuthenticationFilterInitializer;
import org.apache.hadoop.security.authentication.util.FileSignerSecretProvider;
import org.apache.hadoop.security.authentication.util.RandomSignerSecretProvider;
import org.apache.hadoop.security.authentication.util.SignerSecretProvider;
import org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider;
 import org.apache.hadoop.security.ssl.SslSocketConnectorSecure;
 import org.apache.hadoop.jmx.JMXJsonServlet;
 import org.apache.hadoop.log.LogLevel;
@@ -91,6 +97,8 @@
 import com.google.common.collect.Lists;
 import com.sun.jersey.spi.container.servlet.ServletContainer;
 
import static org.apache.hadoop.security.authentication.server
    .AuthenticationFilter.*;
 /**
  * Create a Jetty embedded server to answer http requests. The primary goal is
  * to serve up status information for the server. There are three contexts:
@@ -160,6 +168,8 @@
     private boolean findPort;
 
     private String hostName;
    private boolean disallowFallbackToRandomSignerSecretProvider;
    private String authFilterConfigurationPrefix = "hadoop.http.authentication.";
 
     public Builder setName(String name){
       this.name = name;
@@ -254,6 +264,16 @@ public Builder setKeytabConfKey(String keytabConfKey) {
       return this;
     }
 
    public Builder disallowFallbackToRandomSingerSecretProvider(boolean value) {
      this.disallowFallbackToRandomSignerSecretProvider = value;
      return this;
    }

    public Builder authFilterConfigurationPrefix(String value) {
      this.authFilterConfigurationPrefix = value;
      return this;
    }

     public HttpServer2 build() throws IOException {
       Preconditions.checkNotNull(name, "name is not set");
       Preconditions.checkState(!endpoints.isEmpty(), "No endpoints specified");
@@ -314,6 +334,18 @@ private HttpServer2(final Builder b) throws IOException {
     this.webServer = new Server();
     this.adminsAcl = b.adminsAcl;
     this.webAppContext = createWebAppContext(b.name, b.conf, adminsAcl, appDir);
    try {
      SignerSecretProvider secretProvider =
          constructSecretProvider(b, webAppContext.getServletContext());
      this.webAppContext.getServletContext().setAttribute
          (AuthenticationFilter.SIGNER_SECRET_PROVIDER_ATTRIBUTE,
           secretProvider);
    } catch(IOException e) {
      throw e;
    } catch (Exception e) {
      throw new IOException(e);
    }

     this.findPort = b.findPort;
     initializeWebServer(b.name, b.hostName, b.conf, b.pathSpecs);
   }
@@ -405,9 +437,28 @@ private static WebAppContext createWebAppContext(String name,
     return ctx;
   }
 
  private static SignerSecretProvider constructSecretProvider(final Builder b,
      ServletContext ctx)
      throws Exception {
    final Configuration conf = b.conf;
    Properties config = getFilterProperties(conf,
                                            b.authFilterConfigurationPrefix);
    return AuthenticationFilter.constructSecretProvider(
        ctx, config, b.disallowFallbackToRandomSignerSecretProvider);
  }

  private static Properties getFilterProperties(Configuration conf, String
      prefix) {
    Properties prop = new Properties();
    Map&lt;String, String&gt; filterConfig = AuthenticationFilterInitializer
        .getFilterConfigMap(conf, prefix);
    prop.putAll(filterConfig);
    return prop;
  }

   private static void addNoCacheFilter(WebAppContext ctxt) {
     defineFilter(ctxt, NO_CACHE_FILTER, NoCacheFilter.class.getName(),
        Collections.&lt;String, String&gt; emptyMap(), new String[] { "/*" });
                 Collections.&lt;String, String&gt; emptyMap(), new String[] { "/*" });
   }
 
   @InterfaceAudience.Private
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/AuthenticationFilterInitializer.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/AuthenticationFilterInitializer.java
index cb3830d3ea2..ca221f5b3dc 100644
-- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/AuthenticationFilterInitializer.java
++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/AuthenticationFilterInitializer.java
@@ -56,6 +56,15 @@
    */</comment>
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>initFilter</name><parameter_list>(<parameter><decl><type><name>FilterContainer</name></type> <name>container</name></decl></parameter>, <parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filterConfig</name> <init>= <expr><call><name>getFilterConfigMap</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>PREFIX</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>container</name><operator>.</operator><name>addFilter</name></name><argument_list>(<argument><expr><literal type="string">"authentication"</literal></expr></argument>,
                        <argument><expr><call><name><name>AuthenticationFilter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
                        <argument><expr><name>filterConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getFilterConfigMap</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>conf</name></decl></parameter>,
      <parameter><decl><type><name>String</name></type> <name>prefix</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filterConfig</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">//setting the cookie path to root '/' so it is used for all resources.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>initFilter</name><argument_list>(<argument><expr><name>FilterContainer</name> <name>container</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
 
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><name>conf</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>PREFIX</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>name</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>PREFIX</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>name</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>prefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>filterConfig</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>initFilter</name><argument_list>(<argument><expr><name>FilterContainer</name> <name>container</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
       }</block>
       <call><name><name>filterConfig</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>KerberosAuthenticationHandler</name><operator>.</operator><name>PRINCIPAL</name></name></expr></argument>, <argument><expr><name>principal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>

    <call><name><name>container</name><operator>.</operator><name>addFilter</name></name><argument_list>(<argument><expr><literal type="string">"authentication"</literal></expr></argument>,
                        <argument><expr><call><name><name>AuthenticationFilter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
                        <argument><expr><name>filterConfig</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <return>return <expr><name>filterConfig</name></expr>;</return>
   </block_content>}</block></function>
 
 </block_content>}</block></else></if_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt>

</unit>
