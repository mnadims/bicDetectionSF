<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/8df7e7deeca.java"><expr_stmt><expr><name>From</name> <literal type="number">8df7e7deecad2b8131d67a1916b1ec4c9f7bc633</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Colin</name> <name><name>McCabe</name> <argument_list type="generic">&lt;<argument><name>cmccabe</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">15</literal> <name>Aug</name> <literal type="number">2013</literal> <literal type="number">23</literal><operator>:</operator><literal type="number">05</literal><operator>:</operator><literal type="number">41</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">9865.</literal>  <name>FileContext</name><operator>#</operator><name>globStatus</name> <name>has</name> <name>a</name> <name>regression</name> <name>with</name>
 <name>respect</name> <name>to</name> <name>relative</name> <name><name>path</name><operator>.</operator></name>  (<name>Contributed</name> <name>by</name> <name>Chaun</name> <name>Lin</name></expr></expr_stmt>)

<expr_stmt><expr><name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/hadoop/common/trunk@1514531 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>Globber</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestGlobPaths</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">55</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">47</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">19</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">9518bf278af</literal><operator>..</operator><name>e18d4584299</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">337</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">337</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.3.0</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">9875.</literal>  <name>TestDoAsEffectiveUser</name> <name>can</name> <name>fail</name> <name>on</name> <name>JDK</name> <literal type="number">7.</literal>  <operator>(</operator><name>Aaron</name> <name><name>T</name><operator>.</operator> <name>Myers</name></name> <name>via</name>
     <name>Colin</name> <name>Patrick</name> <name>McCabe</name><operator>)</operator>
 
    <name>HADOOP</name><operator>-</operator><literal type="number">9865.</literal>  <name>FileContext</name><operator>#</operator><name>globStatus</name> <name>has</name> <name>a</name> <name>regression</name> <name>with</name> <name>respect</name> <name>to</name>
    <name>relative</name> <name><name>path</name><operator>.</operator></name>  (<name>Chuan</name> <name>Lin</name> <name>via</name> <name>Colin</name> <name>Patrick</name> <name>McCabe</name></expr></expr_stmt>)

 
 <expr_stmt><expr><name>Release</name> <literal type="number">2.1.1</literal><operator>-</operator><name>beta</name> <operator>-</operator> <name>UNRELEASED</name>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>Globber</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>Globber</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ad28478aeb8</name><operator>..</operator><literal type="number">378311a71a2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>Globber</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>Globber</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>private</specifier> <name>Path</name> <call><name>fixRelativePart</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call> <block>{
   }</block>
 
   <specifier>private</specifier> <name>String</name> <call><name>schemeFromPath</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>String</name> <name>scheme</name> <operator>=</operator> <call><name><name>pathPattern</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getScheme</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scheme</name> <init>= <expr><call><name><name>path</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getScheme</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>scheme</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>fs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>scheme</name> <operator>=</operator> <call><name><name>fs</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getScheme</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>scheme</name> <operator>=</operator> <call><name><name>fc</name><operator>.</operator><name>getFSofPath</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getUri</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getScheme</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scheme</name> <operator>=</operator> <call><name><name>fc</name><operator>.</operator><name>getDefaultFileSystem</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUri</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getScheme</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
     </block_content>}</block></if></if_stmt>
     <return>return <expr><name>scheme</name></expr>;</return>
   }
 
   private <function><type><name>String</name></type> <name>authorityFromPath</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>authority</name> <init>= <expr><call><name><name>pathPattern</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthority</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>authority</name> <init>= <expr><call><name><name>path</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthority</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>authority</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>fs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>authority</name> <operator>=</operator> <call><name><name>fs</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthority</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>authority</name> <operator>=</operator> <call><name><name>fc</name><operator>.</operator><name>getFSofPath</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getUri</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthority</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>authority</name> <operator>=</operator> <call><name><name>fc</name><operator>.</operator><name>getDefaultFileSystem</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUri</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthority</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
     </block_content>}</block></if></if_stmt>
     <return>return <expr><name>authority</name></expr> ;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestGlobPaths</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestGlobPaths</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b712be10f0f</name><operator>..</operator><literal type="number">820b00bb0b0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestGlobPaths</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestGlobPaths</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">622</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">622</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>pTestCombination</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>cleanupDFS</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     </block_content>}</block></function>
   }
  
  @<function><type><name>Test</name>
  <specifier>public</specifier> <name>void</name></type> <name>pTestRelativePath</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name><name>String</name> <index>[]</index></name></type> <name>files</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"a"</literal></expr>, <expr><literal type="string">"abc"</literal></expr>, <expr><literal type="string">"abc.p"</literal></expr>, <expr><literal type="string">"bacd"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Path</name><index>[]</index></name></type> <name>matchedPath</name> <init>= <expr><call><name>prepareTesting</name><argument_list>(<argument><expr><literal type="string">"a*"</literal></expr></argument>, <argument><expr><name>files</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>matchedPath</name><operator>.</operator><name>length</name></name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>matchedPath</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>USER_DIR</name></expr></argument>, <argument><expr><name><name>path</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>matchedPath</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>USER_DIR</name></expr></argument>, <argument><expr><name><name>path</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>matchedPath</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>USER_DIR</name></expr></argument>, <argument><expr><name><name>path</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name>cleanupDFS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>
  

   <comment type="block">/* Test {xx,yy} */</comment>
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>pTestCurlyBracket</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1061</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">1047</literal></expr><operator>,</operator><expr><literal type="number">43</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGlobFillsInSchemeOnFS</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testGlobFillsInSchemeOnFC</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>testOnFileContext</name><argument_list>(<argument><expr><operator>new</operator> <call><name>TestGlobFillsInScheme</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
   </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Test that globStatus works with relative paths.
   **/</comment>
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>TestRelativePath</name> <super_list><implements>implements <super><name>FSTestWrapperGlobTest</name></super></implements></super_list> <block>{
    <function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>FSTestWrapper</name></type> <name>wrap</name></decl></parameter>, <parameter><decl><type><name>FileSystem</name></type> <name>fs</name></decl></parameter>, <parameter><decl><type><name>FileContext</name></type> <name>fc</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>files</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"a"</literal></expr>, <expr><literal type="string">"abc"</literal></expr>, <expr><literal type="string">"abc.p"</literal></expr>, <expr><literal type="string">"bacd"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

      <decl_stmt><decl><type><name><name>Path</name><index>[]</index></name></type> <name>path</name> <init>= <expr><operator>new</operator> <name><name>Path</name><index>[<expr><name><name>files</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator>  <name><name>files</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>path</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>wrap</name><operator>.</operator><name>makeQualified</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name><name>files</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>wrap</name><operator>.</operator><name>mkdir</name></name><argument_list>(<argument><expr><name><name>path</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><call><name><name>FsPermission</name><operator>.</operator><name>getDirDefault</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>

      <decl_stmt><decl><type><name>Path</name></type> <name>patternPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><literal type="string">"a*"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Path</name><index>[]</index></name></type> <name>globResults</name> <init>= <expr><call><name><name>FileUtil</name><operator>.</operator><name>stat2Paths</name></name><argument_list>(<argument><expr><call><name><name>wrap</name><operator>.</operator><name>globStatus</name></name><argument_list>(<argument><expr><name>patternPath</name></expr></argument>,
            <argument><expr><operator>new</operator> <call><name>AcceptAllPathFilter</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><name>patternPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>globResults</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>globResults</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>wrap</name><operator>.</operator><name>makeQualified</name></name><argument_list>(<argument><expr><name><name>globResults</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>

      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>globResults</name><operator>.</operator><name>length</name></name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>USER_DIR</name> <operator>+</operator> <literal type="string">"/a;"</literal> <operator>+</operator> <name>USER_DIR</name> <operator>+</operator> <literal type="string">"/abc;"</literal> <operator>+</operator> <name>USER_DIR</name> <operator>+</operator> <literal type="string">"/abc.p"</literal></expr></argument>,
                    <argument><expr><call><name><name>TestPath</name><operator>.</operator><name>mergeStatuses</name></name><argument_list>(<argument><expr><name>globResults</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
  }</block></class>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testRelativePathOnFS</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testOnFileSystem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>TestRelativePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testRelativePathOnFC</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testOnFileContext</name><argument_list>(<argument><expr><operator>new</operator> <call><name>TestRelativePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 }
- 
<expr><literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
