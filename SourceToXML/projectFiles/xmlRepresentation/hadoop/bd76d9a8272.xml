<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/bd76d9a8272.java"><expr_stmt><expr><name>From</name> <name>bd76d9a8272f6037be3938df78c0d3589d04e044</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Harsh</name> <name><name>J</name> <argument_list type="generic">&lt;<argument><name>harsh</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Sat</name></expr><operator>,</operator> <expr><literal type="number">22</literal> <name>Sep</name> <literal type="number">2012</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">56</literal><operator>:</operator><literal type="number">07</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">8833.</literal> <name>fs</name> <operator>-</operator><name>text</name> <name>should</name> <name>make</name> <name>sure</name> <name>to</name> <name>call</name>
 <call><name><name>inputstream</name><operator>.</operator><name>seek</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <name>before</name> <name>using</name> <name>input</name> <name><name>stream</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Tom</name> <name>White</name> <name>and</name>
 <name>Harsh</name> <name><name>J</name><operator>.</operator></name> (<name>harsh</name></expr></expr_stmt>)

<expr_stmt><expr><name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/hadoop/common/trunk@1388869 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">3</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Display</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestDFSShell</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">47</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">50</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">1</literal> <call><name>deletion</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>e37d46acaf7</name><operator>..</operator><name>b049af43232</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">253</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">253</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.0.3</literal><operator>-</operator><name>alpha</name> <operator>-</operator> <name>Unreleased</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">8780.</literal> <name>Update</name> <name>DeprecatedProperties</name> <name>apt</name> <name><name>file</name><operator>.</operator></name> (<name>Ahmed</name> <name>Radwan</name> <name>via</name>
     <name>tomwhite</name></expr></expr_stmt>)
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">8833.</literal> <name>fs</name> <operator>-</operator><name>text</name> <name>should</name> <name>make</name> <name>sure</name> <name>to</name> <name>call</name> <call><name><name>inputstream</name><operator>.</operator><name>seek</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call>
    <name>before</name> <name>using</name> <name>input</name> <name><name>stream</name><operator>.</operator></name> (<name>tomwhite</name> <name>and</name> <name>harsh</name></expr></expr_stmt>)

 <expr_stmt><expr><name>Release</name> <literal type="number">2.0.2</literal><operator>-</operator><name>alpha</name> <operator>-</operator> <literal type="number">2012</literal><operator>-</operator><literal type="number">09</literal><operator>-</operator><literal type="number">07</literal> 
 
   <name>INCOMPATIBLE</name> <name>CHANGES</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Display</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Display</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>af47d4027ff</name><operator>..</operator><literal type="number">503ac05a364</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Display</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>Display</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>protected</specifier> <name>InputStream</name> <call><name>getInputStream</name><argument_list>(<argument><expr><name>PathData</name> <name>item</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
           <expr><name>CompressionCodecFactory</name> <name>cf</name> <operator>=</operator> <operator>new</operator> <call><name>CompressionCodecFactory</name><argument_list>(<argument><expr><call><name>getConf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
           <decl_stmt><decl><type><name>CompressionCodec</name></type> <name>codec</name> <init>= <expr><call><name><name>cf</name><operator>.</operator><name>getCodec</name></name><argument_list>(<argument><expr><name><name>item</name><operator>.</operator><name>path</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <if_stmt><if>if <condition>(<expr><name>codec</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>i</name><operator>.</operator><name>seek</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <return>return <expr><call><name><name>codec</name><operator>.</operator><name>createInputStream</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</return>
           </block_content>}</block></if></if_stmt>
           <break>break;</break>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestDFSShell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestDFSShell</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">426d8e70152</literal><operator>..</operator><name>a6c40844f83</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestDFSShell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestDFSShell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Scanner</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>DeflaterOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>GZIPOutputStream</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>logging</name><operator>.</operator><name>Log</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>SequenceFile</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>Text</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>compress</name><operator>.</operator><name>BZip2Codec</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>io</name><operator>.</operator><name>compress</name><operator>.</operator><name>CompressionCodec</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>UserGroupInformation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>ReflectionUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name><operator>.</operator><name>ToolRunner</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">577</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">581</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>textTest</name><argument_list>(<argument><expr><name>Path</name> <name>root</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name><name>root</name><operator>.</operator><name>getFileSystem</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>mkdirs</name></name><argument_list>(<argument><expr><name>root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <comment type="line">// Test the gzip type of files. Magic detection.</comment>
       <decl_stmt><decl><type><name>OutputStream</name></type> <name>zout</name> <init>= <expr><operator>new</operator> <call><name>GZIPOutputStream</name><argument_list>(
           <argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="string">"file.gz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Random</name></type> <name>r</name> <init>= <expr><operator>new</operator> <call><name>Random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">601</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">607</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>textTest</name><argument_list>(<argument><expr><name>Path</name> <name>root</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
           <expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toByteArray</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>out</name><operator>.</operator><name>toByteArray</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
 
       <comment type="line">// Create a sequence file with a gz extension, to test proper</comment>
      <comment type="line">// container detection</comment>
      <comment type="line">// container detection. Magic detection.</comment>
       <decl_stmt><decl><type><name><name>SequenceFile</name><operator>.</operator><name>Writer</name></name></type> <name>writer</name> <init>= <expr><call><name><name>SequenceFile</name><operator>.</operator><name>createWriter</name></name><argument_list>(
           <argument><expr><name>conf</name></expr></argument>,
           <argument><expr><call><name><name>SequenceFile</name><operator>.</operator><name>Writer</name><operator>.</operator><name>file</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="string">"file.gz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">619</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">625</literal></expr></argument>,<argument><expr><literal type="number">45</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>textTest</name><argument_list>(<argument><expr><name>Path</name> <name>root</name></expr></argument>, <argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Output doesn't match input"</literal></expr></argument>,
           <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"Foo\tBar\n"</literal><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>out</name><operator>.</operator><name>toByteArray</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></argument>;
       <argument><expr><call><name><name>out</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr></argument>;

      <comment type="line">// Test deflate. Extension-based detection.</comment>
      <argument><expr><name>OutputStream</name> <name>dout</name> <operator>=</operator> <operator>new</operator> <call><name>DeflaterOutputStream</name><argument_list>(
          <argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="string">"file.deflate"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><name><name>byte</name><index>[]</index></name> <name>outbytes</name> <operator>=</operator> <literal type="string">"foo"</literal><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>dout</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>outbytes</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>dout</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><name>out</name> <operator>=</operator> <operator>new</operator> <call><name>ByteArrayOutputStream</name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>System</name><operator>.</operator><name>setOut</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrintStream</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><name>argv</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>;
      <argument><expr><name><name>argv</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"-text"</literal></expr></argument>;
      <argument><expr><name><name>argv</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="string">"file.deflate"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><name>ret</name> <operator>=</operator> <call><name><name>ToolRunner</name><operator>.</operator><name>run</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FsShell</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"'-text "</literal> <operator>+</operator> <name><name>argv</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="string">" returned "</literal> <operator>+</operator> <name>ret</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Output doesn't match input"</literal></expr></argument>,
          <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>outbytes</name></expr></argument>, <argument><expr><call><name><name>out</name><operator>.</operator><name>toByteArray</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>out</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr></argument>;

      <comment type="line">// Test a simple codec. Extension based detection. We use</comment>
      <comment type="line">// Bzip2 cause its non-native.</comment>
      <argument><expr><name>CompressionCodec</name> <name>codec</name> <operator>=</operator> <operator>(</operator><name>CompressionCodec</name><operator>)</operator>
          <call><name><name>ReflectionUtils</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>BZip2Codec</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><name>String</name> <name>extension</name> <operator>=</operator> <call><name><name>codec</name><operator>.</operator><name>getDefaultExtension</name></name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><name>Path</name> <name>p</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="string">"file."</literal> <operator>+</operator> <name>extension</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><name>OutputStream</name> <name>fout</name> <operator>=</operator> <operator>new</operator> <call><name>DataOutputStream</name><argument_list>(<argument><expr><call><name><name>codec</name><operator>.</operator><name>createOutputStream</name></name><argument_list>(
          <argument><expr><call><name><name>fs</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><name><name>byte</name><index>[]</index></name> <name>writebytes</name> <operator>=</operator> <literal type="string">"foo"</literal><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>fout</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>writebytes</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>fout</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><name>out</name> <operator>=</operator> <operator>new</operator> <call><name>ByteArrayOutputStream</name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>System</name><operator>.</operator><name>setOut</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrintStream</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><name>argv</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>;
      <argument><expr><name><name>argv</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"-text"</literal></expr></argument>;
      <argument><expr><name><name>argv</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><name>ret</name> <operator>=</operator> <call><name><name>ToolRunner</name><operator>.</operator><name>run</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FsShell</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"'-text "</literal> <operator>+</operator> <name><name>argv</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="string">" returned "</literal> <operator>+</operator> <name>ret</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Output doesn't match input"</literal></expr></argument>,
          <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>writebytes</name></expr></argument>, <argument><expr><call><name><name>out</name><operator>.</operator><name>toByteArray</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>out</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
     } finally <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>bak</name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setOut</name></name><argument_list>(<argument><expr><name>bak</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block>

</unit>
