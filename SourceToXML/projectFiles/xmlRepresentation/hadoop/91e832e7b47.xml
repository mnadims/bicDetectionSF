<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/91e832e7b47.java"><expr_stmt><expr><name>From</name> <literal type="number">91e832e7b47ff5088ca2bb54aa25f6f166d6c8d5</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Eli</name> <name><name>Collins</name> <argument_list type="generic">&lt;<argument><name>eli</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">5</literal> <name>Sep</name> <literal type="number">2012</literal> <literal type="number">19</literal><operator>:</operator><literal type="number">42</literal><operator>:</operator><literal type="number">09</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">8770.</literal> <name>NN</name> <name>should</name> <name>not</name> <name>RPC</name> <name>to</name> <name>self</name> <name>to</name> <name>find</name> <name>trash</name>
 <name><name>defaults</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Eli</name> <name>Collins</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/hadoop/common/trunk@1381319 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>Trash</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">22</literal> <operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TrashPolicyDefault</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">21</literal> <operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestTrash</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestDFSShell</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">93</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestHDFSTrash</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">54</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">6</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">122</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">77</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">4c24291d75b</literal><operator>..</operator><literal type="number">93ad985375a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">465</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">465</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>Branch</name><operator>-</operator><literal type="number">2</literal> <operator>(</operator> <name>Unreleased</name> <name>changes</name> <operator>)</operator>
 
     <name>HADOOP</name><operator>-</operator><literal type="number">8764.</literal> <name>CMake</name><operator>:</operator> <name>HADOOP</name><operator>-</operator><literal type="number">8737</literal> <name>broke</name> <name>ARM</name> <name><name>build</name><operator>.</operator></name> (<name>Trevor</name> <name>Robinson</name> <name>via</name> <name>eli</name></expr></expr_stmt>)
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">8770.</literal> <name>NN</name> <name>should</name> <name>not</name> <name>RPC</name> <name>to</name> <name>self</name> <name>to</name> <name>find</name> <name>trash</name> <name><name>defaults</name><operator>.</operator></name> (<name>eli</name></expr></expr_stmt>)

   <expr_stmt><expr><name>BREAKDOWN</name> <name>OF</name> <name>HDFS</name><operator>-</operator><literal type="number">3042</literal> <name>SUBTASKS</name>
 
     <name>HADOOP</name><operator>-</operator><literal type="number">8220.</literal> <name>ZKFailoverController</name> <name>doesn</name><literal type="char">'t handle failure to become active
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
index 56ccac3b9c8..2d5f540e2d7 100644
-- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
@@ -68,8 +68,26 @@ public Trash(FileSystem fs, Configuration conf) throws IOException {
   public static boolean moveToAppropriateTrash(FileSystem fs, Path p,
       Configuration conf) throws IOException {
     Path fullyResolvedPath = fs.resolvePath(p);
    Trash trash = new Trash(FileSystem.get(fullyResolvedPath.toUri(), conf), conf);
    boolean success =  trash.moveToTrash(fullyResolvedPath);
    FileSystem fullyResolvedFs =
        FileSystem.get(fullyResolvedPath.toUri(), conf);
    // If the trash interval is configured server side then clobber this
    // configuration so that we always respect the server configuration.
    try {
      long trashInterval = fullyResolvedFs.getServerDefaults(
          fullyResolvedPath).getTrashInterval();
      if (0 != trashInterval) {
        Configuration confCopy = new Configuration(conf);
        confCopy.setLong(CommonConfigurationKeysPublic.FS_TRASH_INTERVAL_KEY,
            trashInterval);
        conf = confCopy;
      }
    } catch (Exception e) {
      // If we can not determine that trash is enabled server side then
      // bail rather than potentially deleting a file when trash is enabled.
      throw new IOException("Failed to get server trash configuration", e);
    }
    Trash trash = new Trash(fullyResolvedFs, conf);
    boolean success = trash.moveToTrash(fullyResolvedPath);
     if (success) {
       System.out.println("Moved: '</literal><literal type="string">" + p + "</literal><literal type="char">' to trash at: " +
           trash.getCurrentTrashDir() );
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
index 1820c6619e2..05e629752c8 100644
-- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
@@ -79,24 +79,9 @@ public void initialize(Configuration conf, FileSystem fs, Path home) {
     this.trash = new Path(home, TRASH);
     this.homesParent = home.getParent();
     this.current = new Path(trash, CURRENT);
    long trashInterval = 0;
    try {
      trashInterval = fs.getServerDefaults(home).getTrashInterval();
    } catch (IOException ioe) {
      LOG.warn("Unable to get server defaults", ioe);
    }
    // If the trash interval is not configured or is disabled on the
    // server side then check the config which may be client side.
    if (0 == trashInterval) {
      this.deletionInterval = (long)(conf.getFloat(
          FS_TRASH_INTERVAL_KEY, FS_TRASH_INTERVAL_DEFAULT)
          * MSECS_PER_MINUTE);
    } else {
      this.deletionInterval = trashInterval * MSECS_PER_MINUTE;
    }
    // For the checkpoint interval use the given config instead of
    // checking the server as it'</literal><name>s</name> <name>OK</name></expr></expr_stmt> <if_stmt><if>if a client starts an emptier
    <comment type="line">// with a different interval than the server.</comment>
    this.deletionInterval = <condition>(<expr><name>long</name></expr>)</condition><block type="pseudo"><block_content><expr_stmt><expr><operator>(</operator><call><name><name>conf</name><operator>.</operator><name>getFloat</name></name><argument_list>(
        <argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><name>FS_TRASH_INTERVAL_DEFAULT</name></expr></argument>)</argument_list></call>
        <operator>*</operator> <name>MSECS_PER_MINUTE</name><operator>)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>emptierInterval</name></name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator><operator>(</operator><call><name><name>conf</name><operator>.</operator><name>getFloat</name></name><argument_list>(
         <argument><expr><name>FS_TRASH_CHECKPOINT_INTERVAL_KEY</name></expr></argument>, <argument><expr><name>FS_TRASH_CHECKPOINT_INTERVAL_DEFAULT</name></expr></argument>)</argument_list></call>
         <operator>*</operator> <name>MSECS_PER_MINUTE</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestTrash</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestTrash</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">70bd62fa000</literal><operator>..</operator><name>fa79d5959e7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestTrash</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestTrash</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>trashShell</name><argument_list>(<argument><expr><name>final</name> <name>FileSystem</name> <name>fs</name></expr></argument>, <argument><expr><name>final</name> <name>Path</name> <name>base</name></expr></argument>)</argument_list></call></expr></expr_stmt>
   }
 
   <comment type="block" format="javadoc">/**
   * 
    * Test trash for the shell's delete command for the default file system
    * specified in the paramter conf
    * @param conf 
@@ -429,8 +428,10 @@ public static void trashShell(final Configuration conf, final Path base,
       String output = byteStream.toString();
       System.setOut(stdout);
       System.setErr(stderr);
      assertTrue("skipTrash wasn't suggested as remedy to failed rm command",
        output.indexOf(("Consider using -skipTrash option")) != -1 );
      assertTrue("skipTrash wasn't suggested as remedy to failed rm command" +
          " or we deleted / even though we could not get server defaults",
          output.indexOf("Consider using -skipTrash option") != -1 ||
          output.indexOf("Failed to determine server trash configuration") != -1);
     }
 
   }
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSShell.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSShell.java
index 1ebef6db51b..426d8e70152 100644
-- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSShell.java
++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSShell.java
@@ -57,6 +57,8 @@
 import org.apache.hadoop.util.ToolRunner;
 import org.junit.Test;
 
import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.FS_TRASH_INTERVAL_KEY;

 /**
  * This class tests commands from DFSShell.
  */</comment>
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">1480</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">1482</literal></expr><operator>,</operator><expr><literal type="number">95</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testCopyCommandsWithForceOption</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Delete a file optionally configuring trash on the server and client.
   */</comment>
  <specifier>private</specifier> <name>void</name> <call><name>deleteFileUsingTrash</name><argument_list>(
      <argument><expr><name>boolean</name> <name>serverTrash</name></expr></argument>, <argument><expr><name>boolean</name> <name>clientTrash</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
    <comment type="line">// Run a cluster, optionally with trash enabled on the server</comment>
    <expr><name>Configuration</name> <name>serverConf</name> <operator>=</operator> <operator>new</operator> <call><name>HdfsConfiguration</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>serverTrash</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>serverConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>MiniDFSCluster</name></type> <name>cluster</name> <init>= <expr><operator>new</operator> <call><name><name>MiniDFSCluster</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>serverConf</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>numDataNodes</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>format</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>clientConf</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>serverConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// Create a client, optionally with trash enabled</comment>
    <if_stmt><if>if <condition>(<expr><name>clientTrash</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>clientConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>clientConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <decl_stmt><decl><type><name>FsShell</name></type> <name>shell</name> <init>= <expr><operator>new</operator> <call><name>FsShell</name><argument_list>(<argument><expr><name>clientConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <try>try <block>{<block_content>
      <comment type="line">// Create and delete a file</comment>
      <expr_stmt><expr><name>fs</name> <operator>=</operator> <call><name><name>cluster</name><operator>.</operator><name>getFileSystem</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>writeFile</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>TEST_ROOT_DIR</name></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>testFile</name> <init>= <expr><name>TEST_ROOT_DIR</name> <operator>+</operator> <literal type="string">"/foo"</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>trashFile</name> <init>= <expr><call><name><name>shell</name><operator>.</operator><name>getCurrentTrashDir</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>testFile</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>argv</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"-rm"</literal></expr>, <expr><name>testFile</name></expr> }</block></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>res</name> <init>= <expr><call><name><name>ToolRunner</name><operator>.</operator><name>run</name></name><argument_list>(<argument><expr><name>shell</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"rm failed"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if_stmt><if>if <condition>(<expr><name>serverTrash</name></expr>)</condition> <block>{<block_content>
        <comment type="line">// If the server config was set we should use it unconditionally</comment>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"File not in trash"</literal></expr></argument>, <argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>trashFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>clientTrash</name></expr>)</condition> <block>{<block_content>
        <comment type="line">// If the server config was not set but the client config was</comment>
        <comment type="line">// set then we should use it</comment>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"File not in trashed"</literal></expr></argument>, <argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>trashFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <comment type="line">// If neither was set then we should not have trashed the file</comment>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"File was not removed"</literal></expr></argument>, <argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>testFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"File was trashed"</literal></expr></argument>, <argument><expr><call><name><name>fs</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>trashFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>fs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>cluster</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>cluster</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
  }

  <comment type="block" format="javadoc">/**
   * Test that the server trash configuration is respected when
   * the client configuration is not set.
   */</comment>
  @<function><type><name>Test</name>
  <specifier>public</specifier> <name>void</name></type> <name>testServerConfigRespected</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>deleteFileUsingTrash</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Test that server trash configuration is respected even when the
   * client configuration is set.
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testServerConfigRespectedWithClient</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>deleteFileUsingTrash</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Test that the client trash configuration is respected when
   * the server configuration is not set.
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testClientConfigRespected</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>deleteFileUsingTrash</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Test that trash is disabled by default.
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testNoTrashConfig</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>deleteFileUsingTrash</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestHDFSTrash</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestHDFSTrash</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b10cab01e04</name><operator>..</operator><name>ad4d600f51d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestHDFSTrash</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>hdfs</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>TestHDFSTrash</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>TestTrash</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Trash</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>CommonConfigurationKeysPublic</name><operator>.</operator><name>FS_TRASH_INTERVAL_KEY</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">53</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testNonDefaultFS</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>DFSConfigKeys</name><operator>.</operator><name>FS_DEFAULT_NAME_KEY</name></name></expr></argument>, <argument><expr><call><name><name>fs</name><operator>.</operator><name>getUri</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>TestTrash</name><operator>.</operator><name>trashNonDefaultFS</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }

  <comment type="block" format="javadoc">/** Clients should always use trash if enabled server side */</comment>
  @<function><type><name>Test</name>
  <specifier>public</specifier> <name>void</name></type> <name>testTrashEnabledServerSide</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>serverConf</name> <init>= <expr><operator>new</operator> <call><name>HdfsConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>clientConf</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// Enable trash on the server and client</comment>
    <expr_stmt><expr><call><name><name>serverConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>clientConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>MiniDFSCluster</name></type> <name>cluster2</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>cluster2</name> <operator>=</operator> <operator>new</operator> <call><name><name>MiniDFSCluster</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>serverConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>numDataNodes</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name><name>cluster2</name><operator>.</operator><name>getFileSystem</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Trash</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isEnabled</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <comment type="line">// Disabling trash on the client is ignored</comment>
      <expr_stmt><expr><call><name><name>clientConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Trash</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isEnabled</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>cluster2</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>cluster2</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** Clients should always use trash if enabled client side */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testTrashEnabledClientSide</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>serverConf</name> <init>= <expr><operator>new</operator> <call><name>HdfsConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>clientConf</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <comment type="line">// Disable server side</comment>
    <expr_stmt><expr><call><name><name>serverConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>MiniDFSCluster</name></type> <name>cluster2</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>cluster2</name> <operator>=</operator> <operator>new</operator> <call><name><name>MiniDFSCluster</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>serverConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>numDataNodes</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

      <comment type="line">// Client side is disabled by default</comment>
      <decl_stmt><decl><type><name>FileSystem</name></type> <name>fs</name> <init>= <expr><call><name><name>cluster2</name><operator>.</operator><name>getFileSystem</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Trash</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isEnabled</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <comment type="line">// Enabling on the client works even though its disabled on the server</comment>
      <expr_stmt><expr><call><name><name>clientConf</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><name>FS_TRASH_INTERVAL_KEY</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Trash</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>clientConf</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isEnabled</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>cluster2</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>cluster2</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>
 }
- 
<expr><literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
