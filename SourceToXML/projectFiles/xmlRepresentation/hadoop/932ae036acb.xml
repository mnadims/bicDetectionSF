<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/932ae036acb.java"><expr_stmt><expr><name>From</name> <literal type="number">932ae036acb96634c5dd435d57ba02ce4d5e8918</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Alejandro</name> <name><name>Abdelnur</name> <argument_list type="generic">&lt;<argument><name>tucu</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">15</literal> <name>Sep</name> <literal type="number">2014</literal> <literal type="number">17</literal><operator>:</operator><literal type="number">05</literal><operator>:</operator><literal type="number">42</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">10868.</literal> <name>AuthenticationFilter</name> <name>should</name> <name>support</name>
 <name>externalizing</name> <name>the</name> <name>secret</name></expr></expr_stmt> <for>for signing and provide rotation support. <control>(<init><expr><name>rkanter</name>
 <name>via</name> <name>tucu</name></expr></init>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><operator>--</operator>
 <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>     <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>          <operator>|</operator> <literal type="number">152</literal> <operator>++</operator><operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>RandomSignerSecretProvider</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>RolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>SignerSecretProvider</name><operator>.</operator><name>java</name></name>            <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>java</name></name>          <operator>|</operator> <literal type="number">503</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>         <operator>|</operator> <literal type="number">148</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>index</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>     <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">117</literal> <operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>TestJaasConfiguration</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">55</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRandomSignerSecretProvider</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestRolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestSigner</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>TestStringSignerSecretProvider</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>TestZKSignerSecretProvider</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">270</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>fs</name><operator>/</operator><name>http</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestHttpFSServer</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <name>hadoop</name><operator>-</operator><name>project</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>                        <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator>
 <literal type="number">19</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">1259</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">97</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestJaasConfiguration</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestZKSignerSecretProvider</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<name>index</name> <literal type="number">564518c540b</literal><operator>..</operator><literal type="number">5f7d77434bc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@
           <operator>&lt;</operator><operator>/</operator><name>exclusion</name><operator>&gt;</operator>
         <operator>&lt;</operator><operator>/</operator><name>exclusions</name><operator>&gt;</operator>
     <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
      <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name><name>zookeeper</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
      <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name><name>zookeeper</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
    <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
      <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name><name>curator</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
      <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name>curator</name><operator>-</operator><name><name>framework</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
    <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
      <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name><name>curator</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
      <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name>curator</name><operator>-</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
      <operator>&lt;</operator><name>scope</name><operator>&gt;</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>scope</name></argument>&gt;</argument_list></name>
    <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
   <operator>&lt;</operator><operator>/</operator><name>dependencies</name><operator>&gt;</operator>
 
   <operator>&lt;</operator><name>build</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9330444c46e</literal><operator>..</operator><literal type="number">47cf54c6066</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AuthenticationFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></block_content></block></for>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>RandomSignerSecretProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>SignerSecretProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>StringSignerSecretProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>ZKSignerSecretProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
 
 <comment type="block" format="javadoc">/**
  * The {@link AuthenticationFilter} enables protecting web application resources with different (pluggable)
 * authentication mechanisms.
 * authentication mechanisms and signer secret providers.
  * &lt;p/&gt;
  * Out of the box it provides 2 authentication mechanisms: Pseudo and Kerberos SPNEGO.
  * &lt;p/&gt;
@@ -60,10 +61,13 @@
  * &lt;li&gt;[#PREFIX#.]type: simple|kerberos|#CLASS#, 'simple' is short for the
  * {@link PseudoAuthenticationHandler}, 'kerberos' is short for {@link KerberosAuthenticationHandler}, otherwise
  * the full class name of the {@link AuthenticationHandler} must be specified.&lt;/li&gt;
 * &lt;li&gt;[#PREFIX#.]signature.secret: the secret used to sign the HTTP cookie value. The default value is a random
 * value. Unless multiple webapp instances need to share the secret the random value is adequate.&lt;/li&gt;
 * &lt;li&gt;[#PREFIX#.]token.validity: time -in seconds- that the generated token is valid before a
 * new authentication is triggered, default value is &lt;code&gt;3600&lt;/code&gt; seconds.&lt;/li&gt;
 * &lt;li&gt;[#PREFIX#.]signature.secret: when signer.secret.provider is set to
 * "string" or not specified, this is the value for the secret used to sign the
 * HTTP cookie.&lt;/li&gt;
 * &lt;li&gt;[#PREFIX#.]token.validity: time -in seconds- that the generated token is
 * valid before a new authentication is triggered, default value is
 * &lt;code&gt;3600&lt;/code&gt; seconds. This is also used for the rollover interval for
 * the "random" and "zookeeper" SignerSecretProviders.&lt;/li&gt;
  * &lt;li&gt;[#PREFIX#.]cookie.domain: domain to use for the HTTP cookie that stores the authentication token.&lt;/li&gt;
  * &lt;li&gt;[#PREFIX#.]cookie.path: path to use for the HTTP cookie that stores the authentication token.&lt;/li&gt;
  * &lt;/ul&gt;
@@ -72,6 +76,49 @@
  * {@link AuthenticationFilter} will take all the properties that start with the prefix #PREFIX#, it will remove
  * the prefix from it and it will pass them to the the authentication handler for initialization. Properties that do
  * not start with the prefix will not be passed to the authentication handler initialization.
 * &lt;p/&gt;
 * Out of the box it provides 3 signer secret provider implementations:
 * "string", "random", and "zookeeper"
 * &lt;p/&gt;
 * Additional signer secret providers are supported via the
 * {@link SignerSecretProvider} class.
 * &lt;p/&gt;
 * For the HTTP cookies mentioned above, the SignerSecretProvider is used to
 * determine the secret to use for signing the cookies. Different
 * implementations can have different behaviors.  The "string" implementation
 * simply uses the string set in the [#PREFIX#.]signature.secret property
 * mentioned above.  The "random" implementation uses a randomly generated
 * secret that rolls over at the interval specified by the
 * [#PREFIX#.]token.validity mentioned above.  The "zookeeper" implementation
 * is like the "random" one, except that it synchronizes the random secret
 * and rollovers between multiple servers; it's meant for HA services.
 * &lt;p/&gt;
 * The relevant configuration properties are:
 * &lt;ul&gt;
 * &lt;li&gt;signer.secret.provider: indicates the name of the SignerSecretProvider
 * class to use. Possible values are: "string", "random", "zookeeper", or a
 * classname. If not specified, the "string" implementation will be used with
 * [#PREFIX#.]signature.secret; and if that's not specified, the "random"
 * implementation will be used.&lt;/li&gt;
 * &lt;li&gt;[#PREFIX#.]signature.secret: When the "string" implementation is
 * specified, this value is used as the secret.&lt;/li&gt;
 * &lt;li&gt;[#PREFIX#.]token.validity: When the "random" or "zookeeper"
 * implementations are specified, this value is used as the rollover
 * interval.&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;p/&gt;
 * The "zookeeper" implementation has additional configuration properties that
 * must be specified; see {@link ZKSignerSecretProvider} for details.
 * &lt;p/&gt;
 * For subclasses of AuthenticationFilter that want additional control over the
 * SignerSecretProvider, they can use the following attribute set in the
 * ServletContext:
 * &lt;ul&gt;
 * &lt;li&gt;signer.secret.provider.object: A SignerSecretProvider implementation can
 * be passed here that will be used instead of the signer.secret.provider
 * configuration property. Note that the class should already be
 * initialized.&lt;/li&gt;
 * &lt;/ul&gt;
  */</comment>
 
 @<name><name>InterfaceAudience</name><operator>.</operator><name>Private</name></name>
@@ <operator>-</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@
 
   <comment type="block" format="javadoc">/**
    * Constant for the configuration property that indicates the name of the
   * SignerSecretProvider class to use.  If not specified, SIGNATURE_SECRET
   * will be used or a random secret.
   * SignerSecretProvider class to use.
   * Possible values are: "string", "random", "zookeeper", or a classname.
   * If not specified, the "string" implementation will be used with
   * SIGNATURE_SECRET; and if that's not specified, the "random" implementation
   * will be used.
    */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SIGNER_SECRET_PROVIDER_CLASS</name> <operator>=</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SIGNER_SECRET_PROVIDER</name> <operator>=</operator>
           <literal type="string">"signer.secret.provider"</literal></expr>;</expr_stmt>
 
   <comment type="block" format="javadoc">/**
   * Constant for the attribute that can be used for providing a custom
   * object that subclasses the SignerSecretProvider.  Note that this should be
   * set in the ServletContext and the class should already be initialized.  
   * If not specified, SIGNER_SECRET_PROVIDER_CLASS will be used.
   * Constant for the ServletContext attribute that can be used for providing a
   * custom implementation of the SignerSecretProvider. Note that the class
   * should already be initialized. If not specified, SIGNER_SECRET_PROVIDER
   * will be used.
    */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SIGNATURE_PROVIDER_ATTRIBUTE</name> <init>=
      <expr><literal type="string">"org.apache.hadoop.security.authentication.util.SignerSecretProvider"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name> <init>=
      <expr><literal type="string">"signer.secret.provider.object"</literal></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>Properties</name></type> <name>config</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Signer</name></type> <name>signer</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">188</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
   <specifier>private</specifier> <name>String</name> <name>cookiePath</name></expr>;</expr_stmt>
 
   <comment type="block" format="javadoc">/**
   * Initializes the authentication filter.
   * Initializes the authentication filter and signer secret provider.
    * &lt;p/&gt;
    * It instantiates and initializes the specified {@link AuthenticationHandler}.
    * &lt;p/&gt;
@@ -184,35 +234,19 @@ public void init(FilterConfig filterConfig) throws ServletException {
     validity = Long.parseLong(config.getProperty(AUTH_TOKEN_VALIDITY, "36000"))
         * 1000; //10 hours
     secretProvider = (SignerSecretProvider) filterConfig.getServletContext().
        getAttribute(SIGNATURE_PROVIDER_ATTRIBUTE);
        getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);
     if (secretProvider == null) {
      String signerSecretProviderClassName =
          config.getProperty(configPrefix + SIGNER_SECRET_PROVIDER_CLASS, null);
      if (signerSecretProviderClassName == null) {
        String signatureSecret =
            config.getProperty(configPrefix + SIGNATURE_SECRET, null);
        if (signatureSecret != null) {
          secretProvider = new StringSignerSecretProvider(signatureSecret);
        } else {
          secretProvider = new RandomSignerSecretProvider();
          randomSecret = true;
        }
      } else {
        try {
          Class&lt;?&gt; klass = Thread.currentThread().getContextClassLoader().
              loadClass(signerSecretProviderClassName);
          secretProvider = (SignerSecretProvider) klass.newInstance();
          customSecretProvider = true;
        } catch (ClassNotFoundException ex) {
          throw new ServletException(ex);
        } catch (InstantiationException ex) {
          throw new ServletException(ex);
        } catch (IllegalAccessException ex) {
          throw new ServletException(ex);
        }
      Class&lt;? extends SignerSecretProvider&gt; providerClass
              = getProviderClass(config);
      try {
        secretProvider = providerClass.newInstance();
      } catch (InstantiationException ex) {
        throw new ServletException(ex);
      } catch (IllegalAccessException ex) {
        throw new ServletException(ex);
       }
       try {
        secretProvider.init(config, validity);
        secretProvider.init(config, filterConfig.getServletContext(), validity);
       } catch (Exception ex) {
         throw new ServletException(ex);
       }
@@ -225,6 +259,42 @@ public void init(FilterConfig filterConfig) throws ServletException {
     cookiePath = config.getProperty(COOKIE_PATH, null);
   }
 
  @SuppressWarnings("unchecked")
  private Class&lt;? extends SignerSecretProvider&gt; getProviderClass(Properties config)
          throws ServletException {
    String providerClassName;
    String signerSecretProviderName
            = config.getProperty(SIGNER_SECRET_PROVIDER, null);
    // fallback to old behavior
    if (signerSecretProviderName == null) {
      String signatureSecret = config.getProperty(SIGNATURE_SECRET, null);
      if (signatureSecret != null) {
        providerClassName = StringSignerSecretProvider.class.getName();
      } else {
        providerClassName = RandomSignerSecretProvider.class.getName();
        randomSecret = true;
      }
    } else {
      if ("random".equals(signerSecretProviderName)) {
        providerClassName = RandomSignerSecretProvider.class.getName();
        randomSecret = true;
      } else if ("string".equals(signerSecretProviderName)) {
        providerClassName = StringSignerSecretProvider.class.getName();
      } else if ("zookeeper".equals(signerSecretProviderName)) {
        providerClassName = ZKSignerSecretProvider.class.getName();
      } else {
        providerClassName = signerSecretProviderName;
        customSecretProvider = true;
      }
    }
    try {
      return (Class&lt;? extends SignerSecretProvider&gt;) Thread.currentThread().
              getContextClassLoader().loadClass(providerClassName);
    } catch (ClassNotFoundException ex) {
      throw new ServletException(ex);
    }
  }

   /**
    * Returns the configuration properties of the {@link AuthenticationFilter}
    * without the prefix. The returned properties are the same that the
diff --git a/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/RandomSignerSecretProvider.java b/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/RandomSignerSecretProvider.java
index 5491a8671bf..29e5661cb0b 100644
-- a/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/RandomSignerSecretProvider.java
++ b/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/RandomSignerSecretProvider.java
@@ -13,12 +13,13 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * A SignerSecretProvider that uses a random number as it's secret.  It rolls
 * A SignerSecretProvider that uses a random number as its secret.  It rolls
  * the secret at a regular interval.
  */</comment>
 <annotation>@<name><name>InterfaceStability</name><operator>.</operator><name>Unstable</name></name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <call><name>RandomSignerSecretProvider</name><argument_list>()</argument_list></call> <block>{
    <expr><operator>*</operator> <name>is</name> <name>meant</name></expr> <for>for testing.
    * @param seed the seed for the random number generator
    */
  @VisibleForTesting
   public RandomSignerSecretProvider<control>(<init><expr><name>long</name> <name>seed</name></expr></init>)</control> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>rand</name> <operator>=</operator> <operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ec6e601b4d9</name><operator>..</operator><name>bdca3e4eb94</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executors</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ScheduledExecutorService</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <call><name>RolloverSignerSecretProvider</name><argument_list>()</argument_list></call> <block>{
    <expr><operator>*</operator> <name>Initialize</name> <name>the</name> <name><name>SignerSecretProvider</name><operator>.</operator>  <name>It</name></name> <name>initializes</name> <name>the</name> <name>current</name> <name>secret</name>
    <operator>*</operator> <name>and</name> <name>starts</name> <name>the</name> <name>scheduler</name></expr> <for>for the rollover to run at an interval of
    * tokenValidity.
   * @param config filter configuration
   * @param config configuration properties
   * @param servletContext servlet context
    * @param tokenValidity The amount of time a token is valid for
    * @<throws>throws <argument><expr><name>Exception</name>
    <operator>*</operator><operator>/</operator>
   <annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>, <argument><expr><name>long</name> <name>tokenValidity</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
  <expr><specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>, <argument><expr><name>ServletContext</name> <name>servletContext</name></expr></argument>,
          <argument><expr><name>long</name> <name>tokenValidity</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>initSecrets</name><argument_list>(<argument><expr><call><name>generateNewSecret</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></for>
     <call><name>startScheduler</name><argument_list>(<argument><expr><name>tokenValidity</name></expr></argument>, <argument><expr><name>tokenValidity</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   <expr_stmt/></block_content></block></for>}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a4d98d784f8</name><operator>..</operator><literal type="number">2e0b9854898</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@
 
   <comment type="block" format="javadoc">/**
    * Initialize the SignerSecretProvider
   * @param config filter configuration
   * @param config configuration properties
   * @param servletContext servlet context
    * @param tokenValidity The amount of time a token is valid for
    * @throws Exception
    */</comment>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>, <argument><expr><name>long</name> <name>tokenValidity</name></expr></argument>)</argument_list></call>
      <throws>throws <argument><expr><name>Exception</name></expr></argument></throws></expr>;</expr_stmt>

  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>ServletContext</name></type> <name>servletContext</name></decl></parameter>,
          <parameter><decl><type><name>long</name></type> <name>tokenValidity</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws>;</function_decl>
   <comment type="block" format="javadoc">/**
    * Will be called on shutdown; subclasses should perform any cleanup here.
    */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">230059b645b</literal><operator>..</operator><literal type="number">7aaccd2914c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>server</name><operator>.</operator><name>AuthenticationFilter</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * A SignerSecretProvider that simply creates a secret based on a given String.
@@ -27,14 +29,15 @@
   private byte[] secret;
   private byte[][] secrets;
 
  public StringSignerSecretProvider(String secretStr) {
    secret = secretStr.getBytes();
    secrets = new byte[][]{secret};
  }
  public StringSignerSecretProvider() {}
 
   @Override
  public void init(Properties config, long tokenValidity) throws Exception {
    // do nothing
  public void init(Properties config, ServletContext servletContext,
          long tokenValidity) throws Exception {
    String signatureSecret = config.getProperty(
            AuthenticationFilter.SIGNATURE_SECRET, null);
    secret = signatureSecret.getBytes();
    secrets = new byte[][]{secret};
   }
 
   @Override
diff --git a/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/ZKSignerSecretProvider.java b/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/ZKSignerSecretProvider.java
new file mode 100644
index 00000000000..45d4d65307a
-- /dev/null
++ b/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/ZKSignerSecretProvider.java
@@ -0,0 +1,503 @@
/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. See accompanying LICENSE file.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>annotations</name><operator>.</operator><name>VisibleForTesting</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>ByteBuffer</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>security</name><operator>.</operator><name>auth</name><operator>.</operator><name>login</name><operator>.</operator><name>AppConfigurationEntry</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>security</name><operator>.</operator><name>auth</name><operator>.</operator><name>login</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>curator</name><operator>.</operator><name>RetryPolicy</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>curator</name><operator>.</operator><name>framework</name><operator>.</operator><name>CuratorFramework</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>curator</name><operator>.</operator><name>framework</name><operator>.</operator><name>CuratorFrameworkFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>curator</name><operator>.</operator><name>framework</name><operator>.</operator><name>api</name><operator>.</operator><name>ACLProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>curator</name><operator>.</operator><name>framework</name><operator>.</operator><name>imps</name><operator>.</operator><name>DefaultACLProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>curator</name><operator>.</operator><name>retry</name><operator>.</operator><name>ExponentialBackoffRetry</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceAudience</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>classification</name><operator>.</operator><name>InterfaceStability</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>KeeperException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>ZooDefs</name><operator>.</operator><name>Perms</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>client</name><operator>.</operator><name>ZooKeeperSaslClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>data</name><operator>.</operator><name>ACL</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>data</name><operator>.</operator><name>Id</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>data</name><operator>.</operator><name>Stat</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<comment type="block" format="javadoc">/**
 * A SignerSecretProvider that synchronizes a rolling random secret between
 * multiple servers using ZooKeeper.
 * &lt;p/&gt;
 * It works by storing the secrets and next rollover time in a ZooKeeper znode.
 * All ZKSignerSecretProviders looking at that znode will use those
 * secrets and next rollover time to ensure they are synchronized.  There is no
 * "leader" -- any of the ZKSignerSecretProviders can choose the next secret;
 * which one is indeterminate.  Kerberos-based ACLs can also be enforced to
 * prevent a malicious third-party from getting or setting the secrets.  It uses
 * its own CuratorFramework client for talking to ZooKeeper.  If you want to use
 * your own Curator client, you can pass it to ZKSignerSecretProvider; see
 * {@link org.apache.hadoop.security.authentication.server.AuthenticationFilter}
 * for more details.
 * &lt;p/&gt;
 * The supported configuration properties are:
 * &lt;ul&gt;
 * &lt;li&gt;signer.secret.provider.zookeeper.connection.string: indicates the
 * ZooKeeper connection string to connect with.&lt;/li&gt;
 * &lt;li&gt;signer.secret.provider.zookeeper.path: indicates the ZooKeeper path
 * to use for storing and retrieving the secrets.  All ZKSignerSecretProviders
 * that need to coordinate should point to the same path.&lt;/li&gt;
 * &lt;li&gt;signer.secret.provider.zookeeper.auth.type: indicates the auth type to
 * use.  Supported values are "none" and "sasl".  The default value is "none"
 * &lt;/li&gt;
 * &lt;li&gt;signer.secret.provider.zookeeper.kerberos.keytab: set this to the path
 * with the Kerberos keytab file.  This is only required if using Kerberos.&lt;/li&gt;
 * &lt;li&gt;signer.secret.provider.zookeeper.kerberos.principal: set this to the
 * Kerberos principal to use.  This only required if using Kerberos.&lt;/li&gt;
 * &lt;li&gt;signer.secret.provider.zookeeper.disconnect.on.close: when set to "true",
 * ZKSignerSecretProvider will close the ZooKeeper connection on shutdown.  The
 * default is "true". Only set this to "false" if a custom Curator client is
 * being provided and the disconnection is being handled elsewhere.&lt;/li&gt;
 * &lt;/ul&gt;
 *
 * The following attribute in the ServletContext can also be set if desired:
 * &lt;li&gt;signer.secret.provider.zookeeper.curator.client: A CuratorFramework
 * client object can be passed here. If given, the "zookeeper" implementation
 * will use this Curator client instead of creating its own, which is useful if
 * you already have a Curator client or want more control over its
 * configuration.&lt;/li&gt;
 */</comment>
<class><annotation>@<name><name>InterfaceStability</name><operator>.</operator><name>Unstable</name></name></annotation>
<annotation>@<name><name>InterfaceAudience</name><operator>.</operator><name>Private</name></name></annotation>
<specifier>public</specifier> class <name>ZKSignerSecretProvider</name> <super_list><extends>extends <super><name>RolloverSignerSecretProvider</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONFIG_PREFIX</name> <init>=
          <expr><literal type="string">"signer.secret.provider.zookeeper."</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constant for the property that specifies the ZooKeeper connection string.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ZOOKEEPER_CONNECTION_STRING</name> <init>=
          <expr><name>CONFIG_PREFIX</name> <operator>+</operator> <literal type="string">"connection.string"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constant for the property that specifies the ZooKeeper path.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ZOOKEEPER_PATH</name> <init>= <expr><name>CONFIG_PREFIX</name> <operator>+</operator> <literal type="string">"path"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constant for the property that specifies the auth type to use.  Supported
   * values are "none" and "sasl".  The default value is "none".
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ZOOKEEPER_AUTH_TYPE</name> <init>= <expr><name>CONFIG_PREFIX</name> <operator>+</operator> <literal type="string">"auth.type"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constant for the property that specifies the Kerberos keytab file.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ZOOKEEPER_KERBEROS_KEYTAB</name> <init>=
          <expr><name>CONFIG_PREFIX</name> <operator>+</operator> <literal type="string">"kerberos.keytab"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constant for the property that specifies the Kerberos principal.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ZOOKEEPER_KERBEROS_PRINCIPAL</name> <init>=
          <expr><name>CONFIG_PREFIX</name> <operator>+</operator> <literal type="string">"kerberos.principal"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constant for the property that specifies whether or not the Curator client
   * should disconnect from ZooKeeper on shutdown.  The default is "true".  Only
   * set this to "false" if a custom Curator client is being provided and the
   * disconnection is being handled elsewhere.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DISCONNECT_FROM_ZOOKEEPER_ON_SHUTDOWN</name> <init>=
          <expr><name>CONFIG_PREFIX</name> <operator>+</operator> <literal type="string">"disconnect.on.shutdown"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constant for the ServletContext attribute that can be used for providing a
   * custom CuratorFramework client. If set ZKSignerSecretProvider will use this
   * Curator client instead of creating a new one. The providing class is
   * responsible for creating and configuring the Curator client (including
   * security and ACLs) in this case.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type>
      <name>ZOOKEEPER_SIGNER_SECRET_PROVIDER_CURATOR_CLIENT_ATTRIBUTE</name> <init>=
      <expr><name>CONFIG_PREFIX</name> <operator>+</operator> <literal type="string">"curator.client"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(
          <argument><expr><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>path</name></decl>;</decl_stmt>
  <comment type="block" format="javadoc">/**
   * Stores the next secret that will be used after the current one rolls over.
   * We do this to help with rollover performance by actually deciding the next
   * secret at the previous rollover.  This allows us to switch to the next
   * secret very quickly.  Afterwards, we have plenty of time to decide on the
   * next secret.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>volatile</specifier> <name><name>byte</name><index>[]</index></name></type> <name>nextSecret</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Random</name></type> <name>rand</name></decl>;</decl_stmt>
  <comment type="block" format="javadoc">/**
   * Stores the current version of the znode.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>zkVersion</name></decl>;</decl_stmt>
  <comment type="block" format="javadoc">/**
   * Stores the next date that the rollover will occur.  This is only used
   * for allowing new servers joining later to synchronize their rollover
   * with everyone else.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>nextRolloverDate</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>tokenValidity</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>CuratorFramework</name></type> <name>client</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>shouldDisconnect</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>int</name></type> <name>INT_BYTES</name> <init>= <expr><name><name>Integer</name><operator>.</operator><name>SIZE</name></name> <operator>/</operator> <name><name>Byte</name><operator>.</operator><name>SIZE</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>int</name></type> <name>LONG_BYTES</name> <init>= <expr><name><name>Long</name><operator>.</operator><name>SIZE</name></name> <operator>/</operator> <name><name>Byte</name><operator>.</operator><name>SIZE</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>int</name></type> <name>DATA_VERSION</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ZKSignerSecretProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>rand</name> <operator>=</operator> <operator>new</operator> <call><name>Random</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <comment type="block" format="javadoc">/**
   * This constructor lets you set the seed of the Random Number Generator and
   * is meant for testing.
   * @param seed the seed for the random number generator
   */</comment>
  <constructor><annotation>@<name>VisibleForTesting</name></annotation>
  <specifier>public</specifier> <name>ZKSignerSecretProvider</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>seed</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>rand</name> <operator>=</operator> <operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>ServletContext</name></type> <name>servletContext</name></decl></parameter>,
          <parameter><decl><type><name>long</name></type> <name>tokenValidity</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Object</name></type> <name>curatorClientObj</name> <init>= <expr><call><name><name>servletContext</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
            <argument><expr><name>ZOOKEEPER_SIGNER_SECRET_PROVIDER_CURATOR_CLIENT_ATTRIBUTE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>curatorClientObj</name> <operator>!=</operator> <literal type="null">null</literal>
            <operator>&amp;&amp;</operator> <name>curatorClientObj</name> <operator>instanceof</operator> <name>CuratorFramework</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>client</name> <operator>=</operator> <operator>(</operator><name>CuratorFramework</name><operator>)</operator> <name>curatorClientObj</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>client</name> <operator>=</operator> <call><name>createCuratorClient</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>tokenValidity</name></name> <operator>=</operator> <name>tokenValidity</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>shouldDisconnect</name> <operator>=</operator> <call><name><name>Boolean</name><operator>.</operator><name>parseBoolean</name></name><argument_list>(
            <argument><expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>DISCONNECT_FROM_ZOOKEEPER_ON_SHUTDOWN</name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>path</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>ZOOKEEPER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>path</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>ZOOKEEPER_PATH</name>
              <operator>+</operator> <literal type="string">" must be specified"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>nextRolloverDate</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>tokenValidity</name></expr>;</expr_stmt>
      <comment type="line">// everyone tries to do this, only one will succeed and only when the</comment>
      <comment type="line">// znode doesn't already exist.  Everyone else will synchronize on the</comment>
      <comment type="line">// data from the znode</comment>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>create</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>creatingParentsIfNeeded</name><argument_list>()</argument_list></call>
              <operator>.</operator><call><name>forPath</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><call><name>generateZKData</name><argument_list>(<argument><expr><call><name>generateRandomSecret</name><argument_list>()</argument_list></call></expr></argument>,
              <argument><expr><call><name>generateRandomSecret</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>zkVersion</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Creating secret znode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name><name>KeeperException</name><operator>.</operator><name>NodeExistsException</name></name></type> <name>nee</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"The secret znode already exists, retrieving data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
    <comment type="line">// Synchronize on the data from the znode</comment>
    <comment type="line">// passing true tells it to parse out all the data for initing</comment>
    <expr_stmt><expr><call><name>pullFromZK</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>initialDelay</name> <init>= <expr><name>nextRolloverDate</name> <operator>-</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// If it's in the past, try to find the next interval that we should</comment>
    <comment type="line">// be using</comment>
    <if_stmt><if>if <condition>(<expr><name>initialDelay</name> <operator>&lt;</operator> <literal type="number">1l</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
      <while>while <condition>(<expr><name>initialDelay</name> <operator>&lt;</operator> <literal type="number">1l</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>initialDelay</name> <operator>=</operator> <name>nextRolloverDate</name> <operator>+</operator> <name>tokenValidity</name> <operator>*</operator> <name>i</name>
                <operator>-</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
      </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>startScheduler</name></name><argument_list>(<argument><expr><name>initialDelay</name></expr></argument>, <argument><expr><name>tokenValidity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Disconnects from ZooKeeper unless told not to.
   */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>destroy</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>shouldDisconnect</name> <operator>&amp;&amp;</operator> <name>client</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>rollSecret</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>rollSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Try to push the information to ZooKeeper with a potential next secret.</comment>
    <expr_stmt><expr><name>nextRolloverDate</name> <operator>+=</operator> <name>tokenValidity</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>secrets</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>pushToZK</name><argument_list>(<argument><expr><call><name>generateRandomSecret</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>secrets</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>secrets</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Pull info from ZooKeeper to get the decided next secret</comment>
    <comment type="line">// passing false tells it that we don't care about most of the data</comment>
    <expr_stmt><expr><call><name>pullFromZK</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name><name>byte</name><index>[]</index></name></type> <name>generateNewSecret</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// We simply return nextSecret because it's already been decided on</comment>
    <return>return <expr><name>nextSecret</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Pushes proposed data to ZooKeeper.  If a different server pushes its data
   * first, it gives up.
   * @param newSecret The new secret to use
   * @param currentSecret The current secret
   * @param previousSecret  The previous secret
   */</comment>
  <function><type><specifier>private</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>pushToZK</name><parameter_list>(<parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>newSecret</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecret</name></decl></parameter>,
          <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>previousSecret</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>bytes</name> <init>= <expr><call><name>generateZKData</name><argument_list>(<argument><expr><name>newSecret</name></expr></argument>, <argument><expr><name>currentSecret</name></expr></argument>, <argument><expr><name>previousSecret</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>setData</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>withVersion</name><argument_list>(<argument><expr><name>zkVersion</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>forPath</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name><name>KeeperException</name><operator>.</operator><name>BadVersionException</name></name></type> <name>bve</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Unable to push to znode; another server already did it"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"An unexpected exception occured pushing data to ZooKeeper"</literal></expr></argument>,
              <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Serialize the data to attempt to push into ZooKeeper.  The format is this:
   * &lt;p&gt;
   * [DATA_VERSION, newSecretLength, newSecret, currentSecretLength, currentSecret, previousSecretLength, previousSecret, nextRolloverDate]
   * &lt;p&gt;
   * Only previousSecret can be null, in which case the format looks like this:
   * &lt;p&gt;
   * [DATA_VERSION, newSecretLength, newSecret, currentSecretLength, currentSecret, 0, nextRolloverDate]
   * &lt;p&gt;
   * @param newSecret The new secret to use
   * @param currentSecret The current secret
   * @param previousSecret The previous secret
   * @return The serialized data for ZooKeeper
   */</comment>
  <function><type><specifier>private</specifier> <specifier>synchronized</specifier> <name><name>byte</name><index>[]</index></name></type> <name>generateZKData</name><parameter_list>(<parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>newSecret</name></decl></parameter>,
          <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecret</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>previousSecret</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>newSecretLength</name> <init>= <expr><name><name>newSecret</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>currentSecretLength</name> <init>= <expr><name><name>currentSecret</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>previousSecretLength</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>previousSecret</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>previousSecretLength</name> <operator>=</operator> <name><name>previousSecret</name><operator>.</operator><name>length</name></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>ByteBuffer</name></type> <name>bb</name> <init>= <expr><call><name><name>ByteBuffer</name><operator>.</operator><name>allocate</name></name><argument_list>(<argument><expr><name>INT_BYTES</name> <operator>+</operator> <name>INT_BYTES</name> <operator>+</operator> <name>newSecretLength</name>
        <operator>+</operator> <name>INT_BYTES</name> <operator>+</operator> <name>currentSecretLength</name> <operator>+</operator> <name>INT_BYTES</name> <operator>+</operator> <name>previousSecretLength</name>
        <operator>+</operator> <name>LONG_BYTES</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>putInt</name></name><argument_list>(<argument><expr><name>DATA_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>putInt</name></name><argument_list>(<argument><expr><name>newSecretLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>newSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>putInt</name></name><argument_list>(<argument><expr><name>currentSecretLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>currentSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>putInt</name></name><argument_list>(<argument><expr><name>previousSecretLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>previousSecretLength</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>previousSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>putLong</name></name><argument_list>(<argument><expr><name>nextRolloverDate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>bb</name><operator>.</operator><name>array</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Pulls data from ZooKeeper.  If isInit is false, it will only parse the
   * next secret and version.  If isInit is true, it will also parse the current
   * and previous secrets, and the next rollover date; it will also init the
   * secrets.  Hence, isInit should only be true on startup.
   * @param isInit  see description above
   */</comment>
  <function><type><specifier>private</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>pullFromZK</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>isInit</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>Stat</name></type> <name>stat</name> <init>= <expr><operator>new</operator> <call><name>Stat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>bytes</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>getData</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>storingStatIn</name><argument_list>(<argument><expr><name>stat</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>forPath</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>ByteBuffer</name></type> <name>bb</name> <init>= <expr><call><name><name>ByteBuffer</name><operator>.</operator><name>wrap</name></name><argument_list>(<argument><expr><name>bytes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>dataVersion</name> <init>= <expr><call><name><name>bb</name><operator>.</operator><name>getInt</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>dataVersion</name> <operator>&gt;</operator> <name>DATA_VERSION</name></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Cannot load data from ZooKeeper; it"</literal>
                <operator>+</operator> <literal type="string">"was written with a newer version"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>nextSecretLength</name> <init>= <expr><call><name><name>bb</name><operator>.</operator><name>getInt</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>nextSecret</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><name>nextSecretLength</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>nextSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>nextSecret</name></name> <operator>=</operator> <name>nextSecret</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>zkVersion</name> <operator>=</operator> <call><name><name>stat</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>isInit</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>currentSecretLength</name> <init>= <expr><call><name><name>bb</name><operator>.</operator><name>getInt</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecret</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><name>currentSecretLength</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>currentSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>previousSecretLength</name> <init>= <expr><call><name><name>bb</name><operator>.</operator><name>getInt</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>previousSecret</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>previousSecretLength</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>previousSecret</name> <operator>=</operator> <operator>new</operator> <name><name>byte</name><index>[<expr><name>previousSecretLength</name></expr>]</index></name></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>bb</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>previousSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>initSecrets</name></name><argument_list>(<argument><expr><name>currentSecret</name></expr></argument>, <argument><expr><name>previousSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>nextRolloverDate</name> <operator>=</operator> <call><name><name>bb</name><operator>.</operator><name>getLong</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"An unexpected exception occurred while pulling data from"</literal>
              <operator>+</operator> <literal type="string">"ZooKeeper"</literal></expr></argument>, <argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name><name>byte</name><index>[]</index></name></type> <name>generateRandomSecret</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * This method creates the Curator client and connects to ZooKeeper.
   * @param config configuration properties
   * @return A Curator client
   * @throws java.lang.Exception
   */</comment>
  <function><type><specifier>protected</specifier> <name>CuratorFramework</name></type> <name>createCuratorClient</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>)</parameter_list>
          <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>connectionString</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(
            <argument><expr><name>ZOOKEEPER_CONNECTION_STRING</name></expr></argument>, <argument><expr><literal type="string">"localhost:2181"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>RetryPolicy</name></type> <name>retryPolicy</name> <init>= <expr><operator>new</operator> <call><name>ExponentialBackoffRetry</name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ACLProvider</name></type> <name>aclProvider</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>authType</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>ZOOKEEPER_AUTH_TYPE</name></expr></argument>, <argument><expr><literal type="string">"none"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>authType</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"sasl"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Connecting to ZooKeeper with SASL/Kerberos"</literal>
              <operator>+</operator> <literal type="string">"and using 'sasl' ACLs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>principal</name> <init>= <expr><call><name>setJaasConfiguration</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ZooKeeperSaslClient</name><operator>.</operator><name>LOGIN_CONTEXT_NAME_KEY</name></name></expr></argument>,
              <argument><expr><literal type="string">"ZKSignerSecretProviderClient"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"zookeeper.authProvider.1"</literal></expr></argument>,
              <argument><expr><literal type="string">"org.apache.zookeeper.server.auth.SASLAuthenticationProvider"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>aclProvider</name> <operator>=</operator> <operator>new</operator> <call><name>SASLOwnerACLProvider</name><argument_list>(<argument><expr><name>principal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>  <comment type="line">// "none"</comment>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Connecting to ZooKeeper without authentication"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>aclProvider</name> <operator>=</operator> <operator>new</operator> <call><name>DefaultACLProvider</name><argument_list>()</argument_list></call></expr>;</expr_stmt>     <comment type="line">// open to everyone</comment>
    </block_content>}</block></else></if_stmt>
    <decl_stmt><decl><type><name>CuratorFramework</name></type> <name>cf</name> <init>= <expr><call><name><name>CuratorFrameworkFactory</name><operator>.</operator><name>builder</name></name><argument_list>()</argument_list></call>
            <operator>.</operator><call><name>connectString</name><argument_list>(<argument><expr><name>connectionString</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>retryPolicy</name><argument_list>(<argument><expr><name>retryPolicy</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>aclProvider</name><argument_list>(<argument><expr><name>aclProvider</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>cf</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>cf</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>String</name></type> <name>setJaasConfiguration</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>keytabFile</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>ZOOKEEPER_KERBEROS_KEYTAB</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>keytabFile</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>keytabFile</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>ZOOKEEPER_KERBEROS_KEYTAB</name>
              <operator>+</operator> <literal type="string">" must be specified"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>principal</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>ZOOKEEPER_KERBEROS_PRINCIPAL</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>principal</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>principal</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>ZOOKEEPER_KERBEROS_PRINCIPAL</name>
              <operator>+</operator> <literal type="string">" must be specified"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// This is equivalent to writing a jaas.conf file and setting the system</comment>
    <comment type="line">// property, "java.security.auth.login.config", to point to it</comment>
    <decl_stmt><decl><type><name>JaasConfiguration</name></type> <name>jConf</name> <init>=
            <expr><operator>new</operator> <call><name>JaasConfiguration</name><argument_list>(<argument><expr><literal type="string">"Client"</literal></expr></argument>, <argument><expr><name>principal</name></expr></argument>, <argument><expr><name>keytabFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Configuration</name><operator>.</operator><name>setConfiguration</name></name><argument_list>(<argument><expr><name>jConf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>principal</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"[/@]"</literal></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Simple implementation of an {@link ACLProvider} that simply returns an ACL
   * that gives all permissions only to a single principal.
   */</comment>
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>SASLOwnerACLProvider</name> <super_list><implements>implements <super><name>ACLProvider</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ACL</name></argument>&gt;</argument_list></name></type> <name>saslACL</name></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>SASLOwnerACLProvider</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>principal</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>saslACL</name></name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(
              <argument><expr><operator>new</operator> <call><name>ACL</name><argument_list>(<argument><expr><name><name>Perms</name><operator>.</operator><name>ALL</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Id</name><argument_list>(<argument><expr><literal type="string">"sasl"</literal></expr></argument>, <argument><expr><name>principal</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ACL</name></argument>&gt;</argument_list></name></type> <name>getDefaultAcl</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>saslACL</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ACL</name></argument>&gt;</argument_list></name></type> <name>getAclForPath</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><name>saslACL</name></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

  <comment type="block" format="javadoc">/**
   * Creates a programmatic version of a jaas.conf file. This can be used
   * instead of writing a jaas.conf file and setting the system property,
   * "java.security.auth.login.config", to point to that file. It is meant to be
   * used for connecting to ZooKeeper.
   */</comment>
  <class><annotation>@<name><name>InterfaceAudience</name><operator>.</operator><name>Private</name></name></annotation>
  <specifier>public</specifier> <specifier>static</specifier> class <name>JaasConfiguration</name> <super_list><extends>extends <super><name>Configuration</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name><name>AppConfigurationEntry</name><index>[]</index></name></type> <name>entry</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>entryName</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Add an entry to the jaas configuration with the passed in name,
     * principal, and keytab. The other necessary options will be set for you.
     *
     * @param entryName The name of the entry (e.g. "Client")
     * @param principal The principal of the user
     * @param keytab The location of the keytab
     */</comment>
    <constructor><specifier>public</specifier> <name>JaasConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>entryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>principal</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>keytab</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>entryName</name></name> <operator>=</operator> <name>entryName</name></expr>;</expr_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>options</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>options</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"keyTab"</literal></expr></argument>, <argument><expr><name>keytab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>options</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"principal"</literal></expr></argument>, <argument><expr><name>principal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>options</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"useKeyTab"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>options</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"storeKey"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>options</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"useTicketCache"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>options</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"refreshKrb5Config"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>jaasEnvVar</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><literal type="string">"HADOOP_JAAS_DEBUG"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>jaasEnvVar</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <literal type="string">"true"</literal><operator>.</operator><call><name>equalsIgnoreCase</name><argument_list>(<argument><expr><name>jaasEnvVar</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>options</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"debug"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><name>entry</name> <operator>=</operator> <operator>new</operator> <name><name>AppConfigurationEntry</name><index>[]</index></name><block>{
                  <expr><operator>new</operator> <call><name>AppConfigurationEntry</name><argument_list>(<argument><expr><call><name>getKrb5LoginModuleName</name><argument_list>()</argument_list></call></expr></argument>,
                  <argument><expr><name><name>AppConfigurationEntry</name><operator>.</operator><name>LoginModuleControlFlag</name><operator>.</operator><name>REQUIRED</name></name></expr></argument>,
                  <argument><expr><name>options</name></expr></argument>)</argument_list></call></expr>}</block></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>AppConfigurationEntry</name><index>[]</index></name></type> <name>getAppConfigurationEntry</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><ternary><condition><expr><operator>(</operator><call><name><name>entryName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ?</condition><then> <expr><name>entry</name></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name>String</name></type> <name>getKrb5LoginModuleName</name><parameter_list>()</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>krb5LoginModuleName</name></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.vendor"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"IBM"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>krb5LoginModuleName</name> <operator>=</operator> <literal type="string">"com.ibm.security.auth.module.Krb5LoginModule"</literal></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>krb5LoginModuleName</name> <operator>=</operator> <literal type="string">"com.sun.security.auth.module.Krb5LoginModule"</literal></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
      <return>return <expr><name>krb5LoginModuleName</name></expr>;</return>
    </block_content>}</block></function>
  }</block></class>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>
<name>index</name> <literal type="number">63773933551..88248e52373</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>Configuration</name>
   <operator>*</operator> <operator>&lt;&lt;</operator><operator>&lt;</operator><index>[<expr><name><name>PREFIX</name><operator>.</operator></name></expr></index>]<name>type</name><operator>&gt;&gt;&gt;</operator><operator>:</operator> <name>the</name> <name>authentication</name> <name>type</name> <call><name>keyword</name> <argument_list>(<argument><expr><operator>&lt;&lt;</operator><operator>&lt;</operator><name>simple</name><operator>&gt;&gt;&gt;</operator> <name>or</name>
     <operator>&lt;&lt;</operator><operator>&lt;</operator><name>kerberos</name><operator>&gt;&gt;&gt;</operator></expr></argument>)</argument_list></call> <name>or</name> <name>a</name> <name>Authentication</name> <name>handler</name> <name><name>implementation</name><operator>.</operator></name>
 
  * <operator>&lt;&lt;</operator><operator>&lt;</operator><index>[<expr><name><name>PREFIX</name><operator>.</operator></name></expr></index>]<name><name>signature</name><operator>.</operator><name>secret</name></name><operator>&gt;&gt;&gt;</operator><operator>:</operator> <name>The</name> <name>secret</name> <name>to</name> <name>SHA</name><operator>-</operator><name>sign</name> <name>the</name> <name>generated</name>
    <name>authentication</name> <name><name>tokens</name><operator>.</operator> <name>If</name></name> <name>a</name> <name>secret</name> <name>is</name> <name>not</name> <name>provided</name> <name>a</name> <name>random</name> <name>secret</name> <name>is</name>
    <name>generated</name> <name>at</name> <name>start</name> <name>up</name> <name><name>time</name><operator>.</operator> <name>If</name></name> <name>using</name> <name>multiple</name> <name>web</name> <name>application</name> <name>instances</name>
    <name>behind</name> <name>a</name> <name>load</name><operator>-</operator><name>balancer</name> <name>a</name> <name>secret</name> <name>must</name> <name>be</name> <name>set</name></expr></expr_stmt> <for>for the application to work
    properly.
  * &lt;&lt;&lt;[PREFIX.]signature.secret&gt;&gt;&gt;: When &lt;&lt;&lt;signer.secret.provider&gt;&gt;&gt; is set to
    &lt;&lt;&lt;string&gt;&gt;&gt; or not specified<operator>,</operator> <expr_stmt><expr><name>this</name> <name>is</name> <name>the</name> <name>value</name></expr></expr_stmt></for> <for>for the secret used to sign
    the HTTP cookie.
 
   * &lt;&lt;&lt;[PREFIX.]token.validity&gt;&gt;&gt;: The validity -in seconds- of the generated
    authentication token. The default value is &lt;&lt;&lt;3600&gt;&gt;&gt; seconds.
    authentication token. The default value is &lt;&lt;&lt;3600&gt;&gt;&gt; seconds. This is also
    used for the rollover interval when &lt;&lt;&lt;signer.secret.provider&gt;&gt;&gt; is set to
    &lt;&lt;&lt;random&gt;&gt;&gt; or &lt;&lt;&lt;zookeeper&gt;&gt;&gt;.
 
   * &lt;&lt;&lt;[PREFIX.]cookie.domain&gt;&gt;&gt;: domain to use for the HTTP cookie that stores
     the authentication token.
@@ -60<operator>,</operator><expr_stmt><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <name>Configuration</name>
   <operator>*</operator> <operator>&lt;&lt;</operator><operator>&lt;</operator><index>[<expr><name><name>PREFIX</name><operator>.</operator></name></expr></index>]<name><name>cookie</name><operator>.</operator><name>path</name></name><operator>&gt;&gt;&gt;</operator><operator>:</operator> <name>path</name> <name>to</name> <name>use</name></expr></expr_stmt></for> <for>for the HTTP cookie that stores the
     authentication token.
 
  * &lt;&lt;&lt;signer.secret.provider&gt;&gt;&gt;: indicates the name of the SignerSecretProvider
    class to use. Possible values are: &lt;&lt;&lt;string&gt;&gt;&gt;<operator>,</operator> <expr_stmt><expr><operator>&lt;&lt;</operator><operator>&lt;</operator><name>random</name><operator>&gt;&gt;&gt;</operator></expr><operator>,</operator>
    <expr><operator>&lt;&lt;</operator><operator>&lt;</operator><name>zookeeper</name><operator>&gt;&gt;&gt;</operator></expr><operator>,</operator> <expr><name>or</name> <name>a</name> <name><name>classname</name><operator>.</operator> <name>If</name></name> <name>not</name> <name>specified</name></expr><operator>,</operator> <expr><name>the</name> <operator>&lt;&lt;</operator><operator>&lt;</operator><name>string</name><operator>&gt;&gt;&gt;</operator>
    <name>implementation</name> <name>will</name> <name>be</name> <name>used</name></expr>;</expr_stmt></for> <decl_stmt><decl><type><name>and</name> <name>failing</name></type> <name>that</name></decl>, <decl><type ref="prev"/><name>the</name> &lt;&lt;<argument_list type="generic">&lt;<argument><name>random</name></argument>&gt;</argument_list>&gt;&gt;
    <name>implementation</name> <name>will</name> <name>be</name> <name><name>used</name><operator>.</operator></name>

 *<modifier>*</modifier> <name>Kerberos</name> <name>Configuration</name>
 
   &lt;&lt;<name>IMPORTANT</name>&gt;&gt;<range>: <expr><name>A</name> <name>KDC</name> <name>must</name> <name>be</name> <name>configured</name> <name>and</name> <name><name>running</name><operator>.</operator></name>
@@ <operator>-</operator><literal type="number">239</literal></expr></range></decl>,3 +245,133 @@ <decl><type ref="prev"/><name>Configuration</name>
     <modifier>...</modifier>
 <name><argument_list type="generic">&lt;<argument><operator>/</operator><name>web</name></argument></argument_list></name>-<name>app</name>&gt;
 +---+

<modifier>*</modifier><modifier>*</modifier> <name>SignerSecretProvider</name> <name>Configuration</name>

  <name>The</name> <name>SignerSecretProvider</name> <name>is</name> <name>used</name> <name>to</name> <name>provide</name> <name>more</name> <name>advanced</name> <name>behaviors</name> for <name>the</name>
  <name>secret</name> <name>used</name> for <name>signing</name> <name>the</name> <name>HTTP</name> <name><name>Cookies</name><operator>.</operator>

  <name>These</name></name> <name>are</name> <name>the</name> <name>relevant</name> <name>configuration</name> <name>properties</name><range>:

    <expr><operator>*</operator> <operator>&lt;&lt;</operator><operator>&lt;</operator><name><name>signer</name><operator>.</operator><name>secret</name><operator>.</operator><name>provider</name></name><operator>&gt;&gt;&gt;</operator><operator>:</operator> <name>indicates</name> <name>the</name> <name>name</name> <name>of</name> <name>the</name>
      <name>SignerSecretProvider</name> <name>class</name> <name>to</name> <name><name>use</name><operator>.</operator> <name>Possible</name></name> <name>values</name> <name>are</name><operator>:</operator> <literal type="string">"string"</literal></expr></range></decl>,
      "random", "zookeeper", <decl><type ref="prev"/><name>or</name> <name>a</name> <name><name>classname</name><operator>.</operator> <name>If</name></name> <name>not</name> <name>specified</name></decl>, <decl><type ref="prev"/><name>the</name> "string"
      <name>implementation</name> <name>will</name> <name>be</name> <name>used</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>and</name> <name>failing</name></type> <name>that</name></decl>, <decl><type ref="prev"/><name>the</name> "random" <name>implementation</name>
      <name>will</name> <name>be</name> <name><name>used</name><operator>.</operator></name>

    * &lt;&lt;<name><argument_list type="generic">&lt;<argument/></argument_list></name>[<name><name>PREFIX</name><operator>.</operator></name>]<name><name>signature</name><operator>.</operator><name>secret</name></name>&gt;&gt;&gt;<range>: <expr><name>When</name> <operator>&lt;&lt;</operator><operator>&lt;</operator><name><name>signer</name><operator>.</operator><name>secret</name><operator>.</operator><name>provider</name></name><operator>&gt;&gt;&gt;</operator> <name>is</name> <name>set</name>
      <name>to</name> <operator>&lt;&lt;</operator><operator>&lt;</operator><name>string</name><operator>&gt;&gt;&gt;</operator> <name>or</name> <name>not</name> <name>specified</name></expr></range></decl>, <decl><type ref="prev"/><name>this</name> <name>is</name> <name>the</name> <name>value</name> for <name>the</name> <name>secret</name> <name>used</name> <name>to</name>
      <name>sign</name> <name>the</name> <name>HTTP</name> <name><name>cookie</name><operator>.</operator></name>

    * &lt;&lt;<name><argument_list type="generic">&lt;<argument/></argument_list></name>[<name><name>PREFIX</name><operator>.</operator></name>]<name><name>token</name><operator>.</operator><name>validity</name></name>&gt;&gt;&gt;<range>: <expr><name>The</name> <name>validity</name> <operator>-</operator><name>in</name> <name>seconds</name><operator>-</operator> <name>of</name> <name>the</name> <name>generated</name>
      <name>authentication</name> <name><name>token</name><operator>.</operator> <name>The</name></name> default <name>value</name> <name>is</name> <operator>&lt;&lt;</operator><operator>&lt;</operator><literal type="number">3600</literal><operator>&gt;&gt;&gt;</operator> <name><name>seconds</name><operator>.</operator> <name>This</name></name> <name>is</name>
      <name>also</name> <name>used</name></expr></range></decl></decl_stmt> <for>for the rollover interval when &lt;&lt;&lt;signer.secret.provider&gt;&gt;&gt; is
      set to &lt;&lt;&lt;random&gt;&gt;&gt; or &lt;&lt;&lt;zookeeper&gt;&gt;&gt;.

  The following configuration properties are specific to the &lt;&lt;&lt;zookeeper&gt;&gt;&gt;
  implementation:

    * &lt;&lt;&lt;signer.secret.provider.zookeeper.connection.string&gt;&gt;&gt;: Indicates the
      ZooKeeper connection string to connect with.

    * &lt;&lt;&lt;signer.secret.provider.zookeeper.path&gt;&gt;&gt;: Indicates the ZooKeeper path
      to use for storing and retrieving the secrets.  All servers
      that need to coordinate their secret should point to the same path

    * &lt;&lt;&lt;signer.secret.provider.zookeeper.auth.type&gt;&gt;&gt;: Indicates the auth type
      to use.  Supported values are &lt;&lt;&lt;none&gt;&gt;&gt; and &lt;&lt;&lt;sasl&gt;&gt;&gt;.  The default
      value is &lt;&lt;&lt;none&gt;&gt;&gt;.

    * &lt;&lt;&lt;signer.secret.provider.zookeeper.kerberos.keytab&gt;&gt;&gt;: Set this to the
      path with the Kerberos keytab file.  This is only required if using
      Kerberos.

    * &lt;&lt;&lt;signer.secret.provider.zookeeper.kerberos.principal&gt;&gt;&gt;: Set this to the
      Kerberos principal to use.  This only required if using Kerberos.

  &lt;&lt;Example&gt;&gt;:

+---+
&lt;web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"&gt;
    ...

    &lt;filter&gt;
        &lt;!-- AuthenticationHandler configs not shown --&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;signer.secret.provider&lt;/param-name&gt;
            &lt;param-value&gt;string&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;signature.secret&lt;/param-name&gt;
            &lt;param-value&gt;my_secret&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;

    ...
&lt;/web-app&gt;
+---+

  &lt;&lt;Example&gt;&gt;:

+---+
&lt;web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"&gt;
    ...

    &lt;filter&gt;
        &lt;!-- AuthenticationHandler configs not shown --&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;signer.secret.provider&lt;/param-name&gt;
            &lt;param-value&gt;random&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;token.validity&lt;/param-name&gt;
            &lt;param-value&gt;30&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;

    ...
&lt;/web-app&gt;
+---+

  &lt;&lt;Example&gt;&gt;:

+---+
&lt;web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"&gt;
    ...

    &lt;filter&gt;
        &lt;!-- AuthenticationHandler configs not shown --&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;signer.secret.provider&lt;/param-name&gt;
            &lt;param-value&gt;zookeeper&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;token.validity&lt;/param-name&gt;
            &lt;param-value&gt;30&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;signer.secret.provider.zookeeper.connection.string&lt;/param-name&gt;
            &lt;param-value&gt;zoo1:2181<operator>,</operator><label><name>zoo2</name>:</label><expr_stmt><expr><literal type="number">2181</literal></expr><operator>,</operator><expr><name>zoo3</name><operator>:</operator><literal type="number">2181</literal><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
        <operator>&lt;</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator><name><name>signer</name><operator>.</operator><name>secret</name><operator>.</operator><name>provider</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>path</name></name><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator><operator>/</operator><name>myapp</name><operator>/</operator><name>secrets</name><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
        <operator>&lt;</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator><name><name>signer</name><operator>.</operator><name>secret</name><operator>.</operator><name>provider</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>use</name><operator>.</operator><name>kerberos</name><operator>.</operator><name>acls</name></name><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator><literal type="boolean">true</literal><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
        <operator>&lt;</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator><name><name>signer</name><operator>.</operator><name>secret</name><operator>.</operator><name>provider</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>kerberos</name><operator>.</operator><name>keytab</name></name><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator><operator>/</operator><name>tmp</name><operator>/</operator><name><name>auth</name><operator>.</operator><name>keytab</name></name><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
        <operator>&lt;</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator><name><name>signer</name><operator>.</operator><name>secret</name><operator>.</operator><name>provider</name><operator>.</operator><name>zookeeper</name><operator>.</operator><name>kerberos</name><operator>.</operator><name>principal</name></name><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>name</name><operator>&gt;</operator>
            <operator>&lt;</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator><name>HTTP</name><operator>/</operator><name>localhost</name>@<name>LOCALHOST</name><operator>&lt;</operator><operator>/</operator><name>param</name><operator>-</operator><name>value</name><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>init</name><operator>-</operator><name>param</name><operator>&gt;</operator>
    <operator>&lt;</operator><operator>/</operator><name>filter</name><operator>&gt;</operator>

    <operator>...</operator>
<operator>&lt;</operator><operator>/</operator><name>web</name><operator>-</operator><name>app</name><operator>&gt;</operator>
<operator>+</operator><operator>--</operator><operator>-</operator><operator>+</operator>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>index</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>index</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>
<name>index</name> <literal type="number">6051f8cbf2a</literal><operator>..</operator><name>bf85f7f41ba</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>index</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>site</name><operator>/</operator><name>apt</name><operator>/</operator><name><name>index</name><operator>.</operator><name>apt</name><operator>.</operator><name>vm</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>Hadoop</name> <name>Auth</name></expr><operator>,</operator> <expr><name>Java</name> <name>HTTP</name> <name>SPNEGO</name> <name>$</name><block>{<expr><name><name>project</name><operator>.</operator><name>version</name></name></expr>}</block>
   <name>Subsequent</name> <name>HTTP</name> <name>client</name> <name>requests</name> <name>presenting</name> <name>the</name> <name>signed</name> <name>HTTP</name> <name>Cookie</name> <name>have</name> <name>access</name>
   <name>to</name> <name>the</name> <specifier>protected</specifier> <name>resources</name> <name>until</name> <name>the</name> <name>HTTP</name> <name>Cookie</name> <name><name>expires</name><operator>.</operator>
 
  <name>The</name></name> <name>secret</name> <name>used</name> <name>to</name> <name>sign</name> <name>the</name> <name>HTTP</name> <name>Cookie</name> <name>has</name> <name>multiple</name> <name>implementations</name> <name>that</name>
  <name>provide</name> <name>different</name> <name>behaviors</name></expr><operator>,</operator> <expr><name>including</name> <name>a</name> <name>hardcoded</name> <name>secret</name> <name>string</name></expr><operator>,</operator> <expr><name>a</name> <name>rolling</name>
  <name>randomly</name> <name>generated</name> <name>secret</name></expr><operator>,</operator> <expr><name>and</name> <name>a</name> <name>rolling</name> <name>randomly</name> <name>generated</name> <name>secret</name>
  <specifier>synchronized</specifier> <name>between</name> <name>multiple</name> <name>servers</name> <name>using</name> <name><name>ZooKeeper</name><operator>.</operator></name>

 * <name>User</name> <name>Documentation</name>
 
   <operator>*</operator> <block>{<expr><block>{<expr><block>{<expr><operator>.</operator><operator>/</operator><name><name>Examples</name><operator>.</operator><name>html</name></name></expr>}</block><name>Examples</name></expr>}</block></expr>}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a9a5e8c738f</name><operator>..</operator><literal type="number">5d93fcfa1c4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>TestAuthenticationFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                                  <expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></block></expr></argument></throws></expr></expr_stmt></for>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>PseudoAuthenticationHandler</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>filter</name><operator>.</operator><name>getAuthenticationHandler</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                                  <expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>filter</name><operator>.</operator><name>isRandomSecret</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">208</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                                  <expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></expr_stmt>)<expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(
             <argument><expr><operator>new</operator> <class><super><name>SignerSecretProvider</name></super><argument_list>()</argument_list> <block>{
               <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>tokenValidity</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <function><type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>ServletContext</name></type> <name>servletContext</name></decl></parameter>,
                      <parameter><decl><type><name>long</name></type> <name>tokenValidity</name></decl></parameter>)</parameter_list> <block>{<block_content>
               </block_content>}</block></function>
               <function><annotation>@<name>Override</name></annotation>
               <type><specifier>public</specifier> <name><name>byte</name><index>[]</index></name></type> <name>getCurrentSecret</name><parameter_list>()</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">241</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>, <argument><expr><name>long</name> <name>tokenValidity</name></expr></argument>)</argument_list></call> <block>{
                                  <expr><name><name>AuthenticationFilter</name><operator>.</operator><name>COOKIE_PATH</name></name></expr></block></expr></expr_stmt></block_content></block></function></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr></expr_stmt>)<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">".foo.com"</literal></expr></argument>, <argument><expr><call><name><name>filter</name><operator>.</operator><name>getCookieDomain</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">265</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">269</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>Properties</name> <name>config</name></expr></argument>, <argument><expr><name>long</name> <name>tokenValidity</name></expr></argument>)</argument_list></call> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr>))</block><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>init</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">304</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">309</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInitCaseSensitivity</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
               <expr><name><name>AuthenticationFilter</name><operator>.</operator><name>AUTH_TOKEN_VALIDITY</name></name></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">330</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetRequestURL</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">361</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">368</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetToken</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>AuthenticationToken</name></type> <name>token</name> <init>= <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Cookie</name></type> <name>cookie</name> <init>= <expr><operator>new</operator> <call><name>Cookie</name><argument_list>(<argument><expr><name><name>AuthenticatedURL</name><operator>.</operator><name>AUTH_COOKIE</name></name></expr></argument>, <argument><expr><name>tokenSigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">398</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">412</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetTokenExpired</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>AuthenticationToken</name></type> <name>token</name> <init>=
           <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Cookie</name></type> <name>cookie</name> <init>= <expr><operator>new</operator> <call><name>Cookie</name><argument_list>(<argument><expr><name><name>AuthenticatedURL</name><operator>.</operator><name>AUTH_COOKIE</name></name></expr></argument>, <argument><expr><name>tokenSigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">443</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">464</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetTokenInvalidType</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>AuthenticationToken</name></type> <name>token</name> <init>= <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"invalidtype"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Cookie</name></type> <name>cookie</name> <init>= <expr><operator>new</operator> <call><name>Cookie</name><argument_list>(<argument><expr><name><name>AuthenticatedURL</name><operator>.</operator><name>AUTH_COOKIE</name></name></expr></argument>, <argument><expr><name>tokenSigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">485</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">513</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterNotAuthenticated</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">538</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">567</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>_testDoFilterAuthentication</name><argument_list>(<argument><expr><name>boolean</name> <name>withDomainPath</name></expr></argument>,
             <argument><expr><literal type="string">".return"</literal></expr></argument>, <argument><expr><literal type="string">"expired.token"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>)<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name>withDomainPath</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">593</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">623</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>Object</name> <call><name>answer</name><argument_list>(<argument><expr><name>InvocationOnMock</name> <name>invocation</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
         <expr><call><name><name>Mockito</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>chain</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>doFilter</name><argument_list>(<argument><expr><call><name><name>Mockito</name><operator>.</operator><name>any</name></name><argument_list>(<argument><expr><name><name>ServletRequest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>,
                 <argument><expr><call><name><name>Mockito</name><operator>.</operator><name>any</name></name><argument_list>(<argument><expr><name><name>ServletResponse</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
 
        <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
                <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
                <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>verifyAndExtract</name></name><argument_list>(<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>AuthenticationToken</name></type> <name>token</name> <init>= <expr><call><name><name>AuthenticationToken</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>getExpires</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>not</name><argument_list>(<argument><expr><literal type="number">0L</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">662</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">698</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticated</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>)</block_content></block></if></if_stmt>)<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">671</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">708</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticated</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"t"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Cookie</name></type> <name>cookie</name> <init>= <expr><operator>new</operator> <call><name>Cookie</name><argument_list>(<argument><expr><name><name>AuthenticatedURL</name><operator>.</operator><name>AUTH_COOKIE</name></name></expr></argument>, <argument><expr><name>tokenSigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">716</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">759</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticationFailure</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">783</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">827</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedExpired</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">792</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">837</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedExpired</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><name><name>DummyAuthenticationHandler</name><operator>.</operator><name>TYPE</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Cookie</name></type> <name>cookie</name> <init>= <expr><operator>new</operator> <call><name>Cookie</name><argument_list>(<argument><expr><name><name>AuthenticatedURL</name><operator>.</operator><name>AUTH_COOKIE</name></name></expr></argument>, <argument><expr><name>tokenSigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">854</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">905</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedInvalidType</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">863</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">915</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDoFilterAuthenticatedInvalidType</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"invalidtype"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Cookie</name></type> <name>cookie</name> <init>= <expr><operator>new</operator> <call><name>Cookie</name><argument_list>(<argument><expr><name><name>AuthenticatedURL</name><operator>.</operator><name>AUTH_COOKIE</name></name></expr></argument>, <argument><expr><name>tokenSigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">893</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">951</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testManagementOperation</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
                         <expr><literal type="string">"management.operation.return"</literal></expr></block></expr></argument></throws></expr></expr_stmt>))<expr_stmt><expr><operator>.</operator><call><name>elements</name><argument_list>()</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <decl_stmt><decl><type><name>ServletContext</name></type> <name>context</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getAttribute</name></name><argument_list>(
          <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_PROVIDER_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNER_SECRET_PROVIDER_ATTRIBUTE</name></name></expr></expr_stmt>))
              <expr_stmt><expr><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getServletContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">914</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">973</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testManagementOperation</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
       <expr><name>AuthenticationToken</name> <name>token</name> <operator>=</operator> <operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="string">"t"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
              <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
              <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>TOKEN_VALIDITY_SEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Cookie</name></type> <name>cookie</name> <init>= <expr><operator>new</operator> <call><name>Cookie</name><argument_list>(<argument><expr><name><name>AuthenticatedURL</name><operator>.</operator><name>AUTH_COOKIE</name></name></expr></argument>, <argument><expr><name>tokenSigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getCookies</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><operator>new</operator> <name><name>Cookie</name><index>[]</index></name><block>{<expr><name>cookie</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestJaasConfiguration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestJaasConfiguration</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..2b70135800b</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestJaasConfiguration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">55</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License. See accompanying LICENSE file.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>security</name><operator>.</operator><name>auth</name><operator>.</operator><name>login</name><operator>.</operator><name>AppConfigurationEntry</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<class><specifier>public</specifier> class <name>TestJaasConfiguration</name> <block>{

  <comment type="line">// We won't test actually using it to authenticate because that gets messy and</comment>
  <comment type="line">// may conflict with other tests; but we can test that it otherwise behaves</comment>
  <comment type="line">// correctly</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>krb5LoginModuleName</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.vendor"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"IBM"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>krb5LoginModuleName</name> <operator>=</operator> <literal type="string">"com.ibm.security.auth.module.Krb5LoginModule"</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>krb5LoginModuleName</name> <operator>=</operator> <literal type="string">"com.sun.security.auth.module.Krb5LoginModule"</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <decl_stmt><decl><type><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>JaasConfiguration</name></name></type> <name>jConf</name> <init>=
            <expr><operator>new</operator> <call><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>JaasConfiguration</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"foo/localhost"</literal></expr></argument>,
            <argument><expr><literal type="string">"/some/location/foo.keytab"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>AppConfigurationEntry</name><index>[]</index></name></type> <name>entries</name> <init>= <expr><call><name><name>jConf</name><operator>.</operator><name>getAppConfigurationEntry</name></name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><name>entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>entries</name> <operator>=</operator> <call><name><name>jConf</name><operator>.</operator><name>getAppConfigurationEntry</name></name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>entries</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AppConfigurationEntry</name></type> <name>entry</name> <init>= <expr><name><name>entries</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>AppConfigurationEntry</name><operator>.</operator><name>LoginModuleControlFlag</name><operator>.</operator><name>REQUIRED</name></name></expr></argument>,
            <argument><expr><call><name><name>entry</name><operator>.</operator><name>getControlFlag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>krb5LoginModuleName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getLoginModuleName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>?</name></argument>&gt;</argument_list></name></type> <name>options</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getOptions</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"/some/location/foo.keytab"</literal></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"keyTab"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"foo/localhost"</literal></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"principal"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"useKeyTab"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"storeKey"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"useTicketCache"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"refreshKrb5Config"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>options</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRandomSignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRandomSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c3384ad03bf</name><operator>..</operator><literal type="number">41d4967eace</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRandomSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRandomSignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetAndRollSecrets</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>RandomSignerSecretProvider</name> <name>secretProvider</name> <operator>=</operator>
         <operator>new</operator> <call><name>RandomSignerSecretProvider</name><argument_list>(<argument><expr><name>seed</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecret</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecrets</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2a2986af9c1</literal><operator>..</operator><literal type="number">1e40c423262</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRolloverSignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetAndRollSecrets</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
         <expr><operator>new</operator> <call><name>TRolloverSignerSecretProvider</name><argument_list>(
             <argument><expr><operator>new</operator> <name><name>byte</name><index>[]</index><index>[]</index></name><block>{<expr><name>secret1</name></expr>, <argument><expr><name>secret2</name></expr></argument>, <argument><expr><name>secret3</name></expr></argument>}</block></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecret</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecrets</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestSigner</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestSigner</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1e2c960a925</literal><operator>..</operator><name>c6a77105715</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestSigner</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestSigner</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>server</name><operator>.</operator><name>AuthenticationFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
 
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testNullAndEmptyString</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Signer</name> <name>signer</name> <operator>=</operator> <operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><call><name>createStringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>fail</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testNullAndEmptyString</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
   <expr><annotation>@<name>Test</name></annotation>
   <specifier>public</specifier> <name>void</name> <call><name>testSignature</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Signer</name> <name>signer</name> <operator>=</operator> <operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><call><name>createStringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>s1</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><literal type="string">"ok"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>s2</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><literal type="string">"ok"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>s3</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><literal type="string">"wrong"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testSignature</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
   <expr><annotation>@<name>Test</name></annotation>
   <specifier>public</specifier> <name>void</name> <call><name>testVerify</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Signer</name> <name>signer</name> <operator>=</operator> <operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><call><name>createStringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>t</name> <init>= <expr><literal type="string">"test"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>s</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>e</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>verifyAndExtract</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testVerify</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
   <expr><annotation>@<name>Test</name></annotation>
   <specifier>public</specifier> <name>void</name> <call><name>testInvalidSignedText</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Signer</name> <name>signer</name> <operator>=</operator> <operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><call><name>createStringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>signer</name><operator>.</operator><name>verifyAndExtract</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>fail</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testInvalidSignedText</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
   <expr><annotation>@<name>Test</name></annotation>
   <specifier>public</specifier> <name>void</name> <call><name>testTampering</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Signer</name> <name>signer</name> <operator>=</operator> <operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><call><name>createStringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>t</name> <init>= <expr><literal type="string">"test"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>s</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>s</name> <operator>+=</operator> <literal type="string">"x"</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testTampering</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     }</block></expr></argument>
   }
 
  <argument><expr><specifier>private</specifier> <name>StringSignerSecretProvider</name> <call><name>createStringSignerSecretProvider</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
      <expr><name>StringSignerSecretProvider</name> <name>secretProvider</name> <operator>=</operator> <operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></argument></throws></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>secretProvider</name></expr>;</return>
  </block_content>}</block></try>

   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testMultipleSecrets</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>TestSignerSecretProvider</name></type> <name>secretProvider</name> <init>= <expr><operator>new</operator> <call><name>TestSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testMultipleSecrets</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><specifier>private</specifier> <name><name>byte</name><index>[]</index></name> <name>previousSecret</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>tokenValidity</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Properties</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>ServletContext</name></type> <name>servletContext</name></decl></parameter>,
            <parameter><decl><type><name>long</name></type> <name>tokenValidity</name></decl></parameter>)</parameter_list> <block>{<block_content>
     </block_content>}</block></function>
 
     <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestStringSignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestStringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c1170060baf</name><operator>..</operator><name>d8b044dcd27</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestStringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestStringSignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">13</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">13</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>server</name><operator>.</operator><name>AuthenticationFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@
   <specifier>public</specifier> <name>void</name> <call><name>testGetSecrets</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>String</name> <name>secretStr</name> <operator>=</operator> <literal type="string">"secret"</literal></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name>
        <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><name>secretStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><operator>=</operator> <operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(
            <argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretBytes</name> <init>= <expr><call><name><name>secretStr</name><operator>.</operator><name>getBytes</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretBytes</name></expr></argument>, <argument><expr><call><name><name>secretProvider</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecrets</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestZKSignerSecretProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestZKSignerSecretProvider</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..d7b6e17e117</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestZKSignerSecretProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">270</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. See accompanying LICENSE file.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>curator</name><operator>.</operator><name>test</name><operator>.</operator><name>TestingServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name></name>;</import>

<class><specifier>public</specifier> class <name>TestZKSignerSecretProvider</name> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>TestingServer</name></type> <name>zkServer</name></decl>;</decl_stmt>

  <function><annotation>@<name>Before</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>zkServer</name> <operator>=</operator> <operator>new</operator> <call><name>TestingServer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>After</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>teardown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>zkServer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>zkServer</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkServer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <comment type="line">// Test just one ZKSignerSecretProvider to verify that it works in the</comment>
  <comment type="line">// simplest case</comment>
  <type><specifier>public</specifier> <name>void</name></type> <name>testOne</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>rolloverFrequency</name> <init>= <expr><literal type="number">15</literal> <operator>*</operator> <literal type="number">1000</literal></expr></init></decl>;</decl_stmt> <comment type="line">// rollover every 15 sec</comment>
    <comment type="line">// use the same seed so we can predict the RNG</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>seed</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Random</name></type> <name>rand</name> <init>= <expr><operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secret2</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secret1</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secret3</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZKSignerSecretProvider</name></type> <name>secretProvider</name> <init>= <expr><operator>new</operator> <call><name>ZKSignerSecretProvider</name><argument_list>(<argument><expr><name>seed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Properties</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>config</name><operator>.</operator><name>setProperty</name></name><argument_list>(
        <argument><expr><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>ZOOKEEPER_CONNECTION_STRING</name></name></expr></argument>,
        <argument><expr><call><name><name>zkServer</name><operator>.</operator><name>getConnectString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>config</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>ZOOKEEPER_PATH</name></name></expr></argument>,
        <argument><expr><literal type="string">"/secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><call><name>getDummyServletContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecret</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecrets</name> <init>= <expr><call><name><name>secretProvider</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret1</name></expr></argument>, <argument><expr><name>currentSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecrets</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret1</name></expr></argument>, <argument><expr><name><name>allSecrets</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><name><name>allSecrets</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><operator>(</operator><name>rolloverFrequency</name> <operator>+</operator> <literal type="number">2000</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><name>currentSecret</name> <operator>=</operator> <call><name><name>secretProvider</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecrets</name> <operator>=</operator> <call><name><name>secretProvider</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret2</name></expr></argument>, <argument><expr><name>currentSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecrets</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret2</name></expr></argument>, <argument><expr><name><name>allSecrets</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret1</name></expr></argument>, <argument><expr><name><name>allSecrets</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><operator>(</operator><name>rolloverFrequency</name> <operator>+</operator> <literal type="number">2000</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><name>currentSecret</name> <operator>=</operator> <call><name><name>secretProvider</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecrets</name> <operator>=</operator> <call><name><name>secretProvider</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret3</name></expr></argument>, <argument><expr><name>currentSecret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecrets</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret3</name></expr></argument>, <argument><expr><name><name>allSecrets</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secret2</name></expr></argument>, <argument><expr><name><name>allSecrets</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><operator>(</operator><name>rolloverFrequency</name> <operator>+</operator> <literal type="number">2000</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testMultipleInit</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>rolloverFrequency</name> <init>= <expr><literal type="number">15</literal> <operator>*</operator> <literal type="number">1000</literal></expr></init></decl>;</decl_stmt> <comment type="line">// rollover every 15 sec</comment>
    <comment type="line">// use the same seed so we can predict the RNG</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>seedA</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Random</name></type> <name>rand</name> <init>= <expr><operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seedA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretA2</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretA1</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// use the same seed so we can predict the RNG</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>seedB</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>rand</name> <operator>=</operator> <operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seedB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretB2</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretB1</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// use the same seed so we can predict the RNG</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>seedC</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>rand</name> <operator>=</operator> <operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seedC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretC2</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretC1</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZKSignerSecretProvider</name></type> <name>secretProviderA</name> <init>= <expr><operator>new</operator> <call><name>ZKSignerSecretProvider</name><argument_list>(<argument><expr><name>seedA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZKSignerSecretProvider</name></type> <name>secretProviderB</name> <init>= <expr><operator>new</operator> <call><name>ZKSignerSecretProvider</name><argument_list>(<argument><expr><name>seedB</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZKSignerSecretProvider</name></type> <name>secretProviderC</name> <init>= <expr><operator>new</operator> <call><name>ZKSignerSecretProvider</name><argument_list>(<argument><expr><name>seedC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Properties</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>config</name><operator>.</operator><name>setProperty</name></name><argument_list>(
        <argument><expr><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>ZOOKEEPER_CONNECTION_STRING</name></name></expr></argument>,
        <argument><expr><call><name><name>zkServer</name><operator>.</operator><name>getConnectString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>config</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>ZOOKEEPER_PATH</name></name></expr></argument>,
        <argument><expr><literal type="string">"/secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProviderA</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><call><name>getDummyServletContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProviderB</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><call><name>getDummyServletContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProviderC</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><call><name>getDummyServletContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecretA</name> <init>= <expr><call><name><name>secretProviderA</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecretsA</name> <init>= <expr><call><name><name>secretProviderA</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecretB</name> <init>= <expr><call><name><name>secretProviderB</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecretsB</name> <init>= <expr><call><name><name>secretProviderB</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecretC</name> <init>= <expr><call><name><name>secretProviderC</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecretsC</name> <init>= <expr><call><name><name>secretProviderC</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>currentSecretA</name></expr></argument>, <argument><expr><name>currentSecretB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>currentSecretB</name></expr></argument>, <argument><expr><name>currentSecretC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsA</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsB</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsC</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsC</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><name><name>allSecretsC</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>char</name></type> <name>secretChosen</name> <init>= <expr><literal type="char">'z'</literal></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>secretA1</name></expr></argument>, <argument><expr><name>currentSecretA</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA1</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>secretChosen</name> <operator>=</operator> <literal type="char">'A'</literal></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>secretB1</name></expr></argument>, <argument><expr><name>currentSecretB</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretB1</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>secretChosen</name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt>
      </block_content>}</block></if><if type="elseif">else if <condition>(<expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>secretC1</name></expr></argument>, <argument><expr><name>currentSecretC</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretC1</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>secretChosen</name> <operator>=</operator> <literal type="char">'C'</literal></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>fail</name></name><argument_list>(<argument><expr><literal type="string">"It appears that they all agreed on the same secret, but "</literal>
                <operator>+</operator> <literal type="string">"not one of the secrets they were supposed to"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><operator>(</operator><name>rolloverFrequency</name> <operator>+</operator> <literal type="number">2000</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><name>currentSecretA</name> <operator>=</operator> <call><name><name>secretProviderA</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecretsA</name> <operator>=</operator> <call><name><name>secretProviderA</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>currentSecretB</name> <operator>=</operator> <call><name><name>secretProviderB</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecretsB</name> <operator>=</operator> <call><name><name>secretProviderB</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>currentSecretC</name> <operator>=</operator> <call><name><name>secretProviderC</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecretsC</name> <operator>=</operator> <call><name><name>secretProviderC</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>currentSecretA</name></expr></argument>, <argument><expr><name>currentSecretB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>currentSecretB</name></expr></argument>, <argument><expr><name>currentSecretC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsA</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsB</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsC</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsC</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsC</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// The second secret used is prechosen by whoever won the init; so it</comment>
      <comment type="line">// should match with whichever we saw before</comment>
      <if_stmt><if>if <condition>(<expr><name>secretChosen</name> <operator>==</operator> <literal type="char">'A'</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA2</name></expr></argument>, <argument><expr><name>currentSecretA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>secretChosen</name> <operator>==</operator> <literal type="char">'B'</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretB2</name></expr></argument>, <argument><expr><name>currentSecretA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>secretChosen</name> <operator>==</operator> <literal type="char">'C'</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretC2</name></expr></argument>, <argument><expr><name>currentSecretA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProviderC</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProviderB</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProviderA</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testMultipleUnsychnronized</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>rolloverFrequency</name> <init>= <expr><literal type="number">15</literal> <operator>*</operator> <literal type="number">1000</literal></expr></init></decl>;</decl_stmt> <comment type="line">// rollover every 15 sec</comment>
    <comment type="line">// use the same seed so we can predict the RNG</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>seedA</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Random</name></type> <name>rand</name> <init>= <expr><operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seedA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretA2</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretA1</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretA3</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// use the same seed so we can predict the RNG</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>seedB</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>rand</name> <operator>=</operator> <operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>seedB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretB2</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretB1</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secretB3</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>rand</name><operator>.</operator><name>nextLong</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZKSignerSecretProvider</name></type> <name>secretProviderA</name> <init>= <expr><operator>new</operator> <call><name>ZKSignerSecretProvider</name><argument_list>(<argument><expr><name>seedA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZKSignerSecretProvider</name></type> <name>secretProviderB</name> <init>= <expr><operator>new</operator> <call><name>ZKSignerSecretProvider</name><argument_list>(<argument><expr><name>seedB</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Properties</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>config</name><operator>.</operator><name>setProperty</name></name><argument_list>(
        <argument><expr><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>ZOOKEEPER_CONNECTION_STRING</name></name></expr></argument>,
        <argument><expr><call><name><name>zkServer</name><operator>.</operator><name>getConnectString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>config</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>ZKSignerSecretProvider</name><operator>.</operator><name>ZOOKEEPER_PATH</name></name></expr></argument>,
        <argument><expr><literal type="string">"/secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProviderA</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><call><name>getDummyServletContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecretA</name> <init>= <expr><call><name><name>secretProviderA</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecretsA</name> <init>= <expr><call><name><name>secretProviderA</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA1</name></expr></argument>, <argument><expr><name>currentSecretA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsA</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA1</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><operator>(</operator><name>rolloverFrequency</name> <operator>+</operator> <literal type="number">2000</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><name>currentSecretA</name> <operator>=</operator> <call><name><name>secretProviderA</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecretsA</name> <operator>=</operator> <call><name><name>secretProviderA</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA2</name></expr></argument>, <argument><expr><name>currentSecretA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsA</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA2</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA1</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><operator>(</operator><name>rolloverFrequency</name> <operator>/</operator> <literal type="number">5</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>secretProviderB</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><call><name>getDummyServletContext</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>rolloverFrequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>currentSecretB</name> <init>= <expr><call><name><name>secretProviderB</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>allSecretsB</name> <init>= <expr><call><name><name>secretProviderB</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA2</name></expr></argument>, <argument><expr><name>currentSecretB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsA</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA2</name></expr></argument>, <argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA1</name></expr></argument>, <argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><operator>(</operator><name>rolloverFrequency</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><name>currentSecretA</name> <operator>=</operator> <call><name><name>secretProviderA</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecretsA</name> <operator>=</operator> <call><name><name>secretProviderA</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>currentSecretB</name> <operator>=</operator> <call><name><name>secretProviderB</name><operator>.</operator><name>getCurrentSecret</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>allSecretsB</name> <operator>=</operator> <call><name><name>secretProviderB</name><operator>.</operator><name>getAllSecrets</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>currentSecretA</name></expr></argument>, <argument><expr><name>currentSecretB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsA</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>allSecretsB</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>allSecretsB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>secretA3</name></expr></argument>, <argument><expr><name>currentSecretA</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretA3</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>Arrays</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>secretB3</name></expr></argument>, <argument><expr><name>currentSecretB</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>secretB3</name></expr></argument>, <argument><expr><name><name>allSecretsA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>fail</name></name><argument_list>(<argument><expr><literal type="string">"It appears that they all agreed on the same secret, but "</literal>
                <operator>+</operator> <literal type="string">"not one of the secrets they were supposed to"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>secretProviderB</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>secretProviderA</name><operator>.</operator><name>destroy</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>ServletContext</name></type> <name>getDummyServletContext</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>ServletContext</name></type> <name>servletContext</name> <init>= <expr><call><name><name>Mockito</name><operator>.</operator><name>mock</name></name><argument_list>(<argument><expr><name><name>ServletContext</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>when</name></name><argument_list>(<argument><expr><call><name><name>servletContext</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name><name>ZKSignerSecretProvider</name>
            <operator>.</operator><name>ZOOKEEPER_SIGNER_SECRET_PROVIDER_CURATOR_CLIENT_ATTRIBUTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>servletContext</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">89bce4dd920</literal><operator>..</operator><literal type="number">2d906f7f2bf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">520</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">520</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.6.0</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">11091.</literal> <name>Eliminate</name> <name>old</name> <name>configuration</name> <name>parameter</name> <name>names</name> <name>from</name> <call><name>s3a</name> <argument_list>(<argument><expr><name>David</name>
     <name><name>S</name><operator>.</operator> <name>Wang</name></name> <name>via</name> <name>Colin</name> <name>Patrick</name> <name>McCabe</name></expr></argument>)</argument_list></call>
 
    <name>HADOOP</name><operator>-</operator><literal type="number">10868.</literal> <name>AuthenticationFilter</name> <name>should</name> <name>support</name> <name>externalizing</name> <name>the</name> 
    <name>secret</name></expr></expr_stmt> <for>for signing and provide rotation support. <control>(<init><expr><name>rkanter</name> <name>via</name> <name>tucu</name></expr></init>)</control><block type="pseudo"><block_content>

   <expr_stmt><expr><name>OPTIMIZATIONS</name>
 
     <name>HADOOP</name><operator>-</operator><literal type="number">10838.</literal> <name>Byte</name> <name>array</name> <specifier>native</specifier> <name><name>checksumming</name><operator>.</operator></name> (<name>James</name> <name>Thomas</name> <name>via</name> <name>todd</name></expr></expr_stmt></block_content></block></for>)</block_content>
diff --git a/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/fs/http/server/TestHttpFSServer.java b/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/fs/http/server/TestHttpFSServer.java
index c6c0d19d2ad..763d168d198 100644
-- a/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/fs/http/server/TestHttpFSServer.java
++ b/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/fs/http/server/TestHttpFSServer.java
@@ -66</block><operator>,</operator>6 +66<operator>,</operator>8 @@
 import org.mortbay.jetty.webapp.WebAppContext;</function>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Maps</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>server</name><operator>.</operator><name>AuthenticationFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>util</name><operator>.</operator><name>StringSignerSecretProvider</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestHttpFSServer</name> <super_list><extends>extends <super><name>HFSTestCase</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">685</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">687</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testDelegationTokenOperations</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><operator>new</operator> <call><name>AuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"u"</literal></expr></argument>, <argument><expr><literal type="string">"p"</literal></expr></argument>,
           <argument><expr><operator>new</operator> <call><name>KerberosDelegationTokenAuthenticationHandler</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>token</name><operator>.</operator><name>setExpires</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">100000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>StringSignerSecretProvider</name></type> <name>secretProvider</name> <init>= <expr><operator>new</operator> <call><name>StringSignerSecretProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Properties</name></type> <name>secretProviderProps</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>secretProviderProps</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>AuthenticationFilter</name><operator>.</operator><name>SIGNATURE_SECRET</name></name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>secretProvider</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>secretProviderProps</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Signer</name></type> <name>signer</name> <init>= <expr><operator>new</operator> <call><name>Signer</name><argument_list>(<argument><expr><name>secretProvider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>tokenSigned</name> <init>= <expr><call><name><name>signer</name><operator>.</operator><name>sign</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><name>url</name> <operator>=</operator> <operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><call><name><name>TestJettyHelper</name><operator>.</operator><name>getJettyURL</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>project</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>project</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<name>index</name> <literal type="number">502655f7096</literal><operator>..</operator><literal type="number">0f662a2049c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>project</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>project</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">849</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">849</literal></expr></argument>,<argument><expr><literal type="number">17</literal> @@
        <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name><name>xercesImpl</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
        <operator>&lt;</operator><name>version</name><operator>&gt;</operator><literal type="number">2.9.1</literal><operator>&lt;</operator><operator>/</operator><name>version</name><operator>&gt;</operator>
      <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>

     <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
       <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name><name>curator</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
       <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name>curator</name><operator>-</operator><name><name>framework</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
       <operator>&lt;</operator><name>version</name><operator>&gt;</operator><literal type="number">2.6.0</literal><operator>&lt;</operator><operator>/</operator><name>version</name><operator>&gt;</operator>
     <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
     <operator>&lt;</operator><name>dependency</name><operator>&gt;</operator>
       <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name><name>curator</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
       <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name>curator</name><operator>-</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
       <operator>&lt;</operator><name>version</name><operator>&gt;</operator><literal type="number">2.6.0</literal><operator>&lt;</operator><operator>/</operator><name>version</name><operator>&gt;</operator>
     <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
       
     <operator>&lt;</operator><operator>/</operator><name>dependencies</name><operator>&gt;</operator>
   <operator>&lt;</operator><operator>/</operator><name>dependencyManagement</name><operator>&gt;</operator>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></argument></argument_list></call></expr></expr_stmt></block></class></block_content></block></function></block_content></block></try></block_content></block></try></block_content></block></try>

</unit>
