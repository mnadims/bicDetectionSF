<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/d96bbe152cf.java"><expr_stmt><expr><name>From</name> <name>d96bbe152cf536304208f2e8f35deb3b2aa91d2b</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Haohui</name> <name><name>Mai</name> <argument_list type="generic">&lt;<argument><name>wheat9</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">16</literal> <name>Jul</name> <literal type="number">2015</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">21</literal><operator>:</operator><literal type="number">53</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HDFS</name><operator>-</operator><literal type="number">8767.</literal> <call><name><name>RawLocalFileSystem</name><operator>.</operator><name>listStatus</name></name><argument_list>()</argument_list></call> <name>returns</name> <literal type="null">null</literal></expr></expr_stmt> <for>for
 UNIX pipefile. Contributed by kanaka kumar avvaru.

--
 .../hadoop-common/CHANGES.txt                 <operator>|</operator>  3 ++
 .../apache/hadoop/fs/RawLocalFileSystem.java  <operator>|</operator> 53 ++++++++++---------
 .../apache/hadoop/fs/TestLocalFileSystem.java <operator>|</operator> 22 ++++++++
 3 files changed<operator>,</operator> <expr_stmt><expr><literal type="number">53</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">25</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>cf79bab0c50</name><operator>..</operator><name>b54688fe90d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">987</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">987</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.7.2</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">12191.</literal> <name>Bzip2Factory</name> <name>is</name> <name>not</name> <name>thread</name> <name><name>safe</name><operator>.</operator></name> (<name>Brahma</name> <name>Reddy</name> <name>Battula</name>
     <name>via</name> <name>ozawa</name></expr></expr_stmt></for>)
 
    <expr_stmt><expr><name>HDFS</name><operator>-</operator><literal type="number">8767.</literal> <call><name><name>RawLocalFileSystem</name><operator>.</operator><name>listStatus</name></name><argument_list>()</argument_list></call> <name>returns</name> <literal type="null">null</literal></expr></expr_stmt> <for>for UNIX pipefile.
    <control>(<init><expr><name>kanaka</name> <name>kumar</name> <name>avvaru</name> <name>via</name> <name>wheat9</name></expr></init>)</control><block type="pseudo"><block_content>

 <expr_stmt><expr><name>Release</name> <literal type="number">2.7.1</literal> <operator>-</operator> <literal type="number">2015</literal><operator>-</operator><literal type="number">07</literal><operator>-</operator><literal type="number">06</literal> 
 
   <name>INCOMPATIBLE</name> <name>CHANGES</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>RawLocalFileSystem</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>RawLocalFileSystem</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ac65b6221f3</name><operator>..</operator><literal type="number">4728dbe4f20</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>RawLocalFileSystem</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>RawLocalFileSystem</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">459</literal></expr><operator>,</operator><expr><literal type="number">35</literal> <operator>+</operator><literal type="number">459</literal></expr><operator>,</operator><expr><literal type="number">38</literal> @@ <specifier>public</specifier> <name>boolean</name> <call><name>delete</name><argument_list>(<argument><expr><name>Path</name> <name>p</name></expr></argument>, <argument><expr><name>boolean</name> <name>recursive</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt></block_content></block></for>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>localf</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>FileNotFoundException</name><argument_list>(<argument><expr><literal type="string">"File "</literal> <operator>+</operator> <name>f</name> <operator>+</operator> <literal type="string">" does not exist"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>localf</name><operator>.</operator><name>isFile</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>useDeprecatedFileStatus</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><operator>new</operator> <name><name>FileStatus</name><index>[]</index></name> <block>{ <expr><call><name>getFileStatus</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <return>return <expr><operator>new</operator> <name><name>FileStatus</name><index>[]</index></name> <block>{
        <expr><operator>new</operator> <call><name>DeprecatedRawLocalFileStatus</name><argument_list>(<argument><expr><name>localf</name></expr></argument>, <argument><expr><call><name>getDefaultBlockSize</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>}</block></expr>;</return>
    </block_content>}</block></if></if_stmt>
 
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>names</name> <init>= <expr><call><name><name>localf</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>names</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>results</name> <operator>=</operator> <operator>new</operator> <name><name>FileStatus</name><index>[<expr><name><name>names</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>names</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <try>try <block>{<block_content>
        <comment type="line">// Assemble the path using the Path 3 arg constructor to make sure</comment>
        <comment type="line">// paths with colon are properly resolved on Linux</comment>
        <expr_stmt><expr><name><name>results</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <call><name>getFileStatus</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>j</name><operator>++</operator></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// ignore the files not found since the dir list may have have changed</comment>
        <comment type="line">// since the names[] list was generated.</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>localf</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>names</name> <init>= <expr><call><name><name>localf</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>names</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
       </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><name>results</name> <operator>=</operator> <operator>new</operator> <name><name>FileStatus</name><index>[<expr><name><name>names</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>names</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <try>try <block>{<block_content>
          <comment type="line">// Assemble the path using the Path 3 arg constructor to make sure</comment>
          <comment type="line">// paths with colon are properly resolved on Linux</comment>
          <expr_stmt><expr><name><name>results</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <call><name>getFileStatus</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>,
                                                          <argument><expr><name><name>names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>j</name><operator>++</operator></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <comment type="line">// ignore the files not found since the dir list may have have</comment>
          <comment type="line">// changed since the names[] list was generated.</comment>
        </block_content>}</block></catch></try>
      </block_content>}</block></for>
      <if_stmt><if>if <condition>(<expr><name>j</name> <operator>==</operator> <name><name>names</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>results</name></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <return>return <expr><call><name><name>Arrays</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><name>results</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>j</name> <operator>==</operator> <name><name>names</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
      <return>return <expr><name>results</name></expr>;</return>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>useDeprecatedFileStatus</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><operator>new</operator> <name><name>FileStatus</name><index>[]</index></name> <block>{ <expr><call><name>getFileStatus</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
     </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>Arrays</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><name>results</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><operator>new</operator> <name><name>FileStatus</name><index>[]</index></name> <block>{
        <expr><operator>new</operator> <call><name>DeprecatedRawLocalFileStatus</name><argument_list>(<argument><expr><name>localf</name></expr></argument>,
        <argument><expr><call><name>getDefaultBlockSize</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
   </block_content>}</block></if></if_stmt>
   
   <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>mkOneDir</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>p2f</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestLocalFileSystem</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestLocalFileSystem</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f641f041d29</name><operator>..</operator><literal type="number">13499efec15</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestLocalFileSystem</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>TestLocalFileSystem</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt>
 
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>*</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assume</name><operator>.</operator><name>assumeTrue</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>Mockito</name><operator>.</operator><name>*</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>mockito</name><operator>.</operator><name>internal</name><operator>.</operator><name>util</name><operator>.</operator><name>reflection</name><operator>.</operator><name>Whitebox</name></name>;</import></block_content></block></function></block_content></block></catch></try></block_content></block></for>

 
 <comment type="block" format="javadoc">/**
  * This class tests the local file system via the FileSystem abstraction.
@@ -612,4 +615,23 @@ public void testAppendSetsPosCorrectly() throws Exception {
     }
   }
 
  @Test
  public void testFileStatusPipeFile() throws Exception {
    RawLocalFileSystem origFs = new RawLocalFileSystem();
    RawLocalFileSystem fs = spy(origFs);
    Configuration conf = mock(Configuration.class);
    fs.setConf(conf);
    Whitebox.setInternalState(fs, "useDeprecatedFileStatus", false);
    Path path = new Path("/foo");
    File pipe = mock(File.class);
    when(pipe.isFile()).thenReturn(false);
    when(pipe.isDirectory()).thenReturn(false);
    when(pipe.exists()).thenReturn(true);

    FileStatus stat = mock(FileStatus.class);
    doReturn(pipe).when(fs).pathToFile(path);
    doReturn(stat).when(fs).getFileStatus(path);
    FileStatus[] stats = fs.listStatus(path);
    assertTrue(stats != null &amp;&amp; stats.length == 1 &amp;&amp; stats[0] == stat);
  }
 }
- 
2.19.1.windows.1

</comment></unit>
