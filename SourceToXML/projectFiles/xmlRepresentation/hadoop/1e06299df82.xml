<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/1e06299df82.java"><expr_stmt><expr><name>From</name> <literal type="number">1e06299df82b98795124fe8a33578c111e744ff4</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Kanter</name> <argument_list type="generic">&lt;<argument><name>rkanter</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">19</literal> <name>Aug</name> <literal type="number">2015</literal> <literal type="number">19</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">51</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">12317.</literal> <name>Applications</name> <name>fail</name> <name>on</name> <name>NM</name> <name>restart</name> <name>on</name> <name>some</name> <name>linux</name>
 <name>distro</name> <name>because</name> <name>NM</name> <name>container</name> <name>recovery</name> <name>declares</name> <name>AM</name> <name>container</name> <name>as</name> <call><name>LOST</name> <argument_list>(<argument><expr><name>adhoot</name>
 <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">11</literal> <operator>++</operator><operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">39</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">51</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">3</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>d07adcb7b35</name><operator>..</operator><literal type="number">943dbac731c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1063</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1063</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>Release</name> <literal type="number">2.8.0</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">12322.</literal> <name>typos</name> <name>in</name> <name><name>rpcmetrics</name><operator>.</operator><name>java</name><operator>.</operator></name> (<name>Anu</name> <name>Engineer</name> <name>via</name>
     <name>Arpit</name> <name>Agarwal</name></expr></expr_stmt>)
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">12317.</literal> <name>Applications</name> <name>fail</name> <name>on</name> <name>NM</name> <name>restart</name> <name>on</name> <name>some</name> <name>linux</name> <name>distro</name>
    <name>because</name> <name>NM</name> <name>container</name> <name>recovery</name> <name>declares</name> <name>AM</name> <name>container</name> <name>as</name> <call><name>LOST</name>
    <argument_list>(<argument><expr><name>adhoot</name> <name>via</name> <name>rkanter</name></expr></argument>)</argument_list></call>

 <name>Release</name> <literal type="number">2.7.2</literal> <operator>-</operator> <name>UNRELEASED</name>
 
   <name>INCOMPATIBLE</name> <name>CHANGES</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ed83e8d1e5e</name><operator>..</operator><name>e4269558c30</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>static</specifier> <specifier>private</specifier> <name>OSType</name> <call><name>getOSType</name><argument_list>()</argument_list></call> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getCheckProcessIsAliveCommand</name><argument_list>(<argument><expr><name>String</name> <name>pid</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name> <operator>?</operator>
       <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><name><name>Shell</name><operator>.</operator><name>WINUTILS</name></name></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"isAlive"</literal></expr>, <expr><name>pid</name></expr> }</block> <operator>:</operator>
      <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-0"</literal></expr>, <expr><name>isSetsidAvailable</name> <operator>?</operator> <literal type="string">"-"</literal> <operator>+</operator> <name>pid</name> <operator>:</operator> <name>pid</name></expr> }</block></expr>;</return>
      <ternary><condition><expr><name>isSetsidAvailable</name></expr> ?</condition><then>
        <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-0"</literal></expr>, <expr><literal type="string">"--"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>pid</name></expr> }</block></expr> </then><else>:
        <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-0"</literal></expr>, <expr><name>pid</name></expr> }</block></expr></else></ternary></block></expr>;
   }</block>
 
   <comment type="block" format="javadoc">/** Return a command to send a signal to a given pid */</comment>
   <specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getSignalKillCommand</name><argument_list>(<argument><expr><name>int</name> <name>code</name></expr></argument>, <argument><expr><name>String</name> <name>pid</name></expr></argument>)</argument_list></call> <block>{
    <return>return <expr><ternary><condition><expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr> ?</condition><then> <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><name><name>Shell</name><operator>.</operator><name>WINUTILS</name></name></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"kill"</literal></expr>, <expr><name>pid</name></expr> }</block></expr> </then><else>:
      <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>code</name></expr>, <expr><ternary><condition><expr><name>isSetsidAvailable</name></expr> ?</condition><then> <expr><literal type="string">"-"</literal> <operator>+</operator> <name>pid</name></expr> </then><else>: <expr><name>pid</name></expr></else></ternary></expr> }</block></expr></else></ternary></expr>;</return></block></expr></expr_stmt>
    <return>return <expr><ternary><condition><expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr> ?</condition><then>
      <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><name><name>Shell</name><operator>.</operator><name>WINUTILS</name></name></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"kill"</literal></expr>, <expr><name>pid</name></expr> }</block></expr> </then><else>:
      <expr><ternary><condition><expr><name>isSetsidAvailable</name></expr> ?</condition><then>
        <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>code</name></expr>, <expr><literal type="string">"--"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>pid</name></expr> }</block></expr> </then><else>:
        <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>code</name></expr>, <expr><name>pid</name></expr> }</block></expr></else></ternary></expr></else></ternary></expr>;</return>
   }
 
   public <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ENV_NAME_REGEX</name> <init>= <expr><literal type="string">"[A-Za-z_][A-Za-z0-9_]*"</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d9dc9ef5fe6</name><operator>..</operator><name>a96a0c82cc9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">44</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testShellCommandTimerLeak</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"after: "</literal> <operator>+</operator> <name>timersAfter</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>timersBefore</name></expr></argument>, <argument><expr><name>timersAfter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }

  public <function><type><name>void</name></type> <name>testGetCheckProcessIsAliveCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>anyPid</name> <init>= <expr><literal type="string">"9999"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>checkProcessAliveCommand</name> <init>= <expr><call><name><name>Shell</name><operator>.</operator><name>getCheckProcessIsAliveCommand</name></name><argument_list>(
        <argument><expr><name>anyPid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>expectedCommand</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator>
          <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><name><name>Shell</name><operator>.</operator><name>WINUTILS</name></name></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"isAlive"</literal></expr>, <expr><name>anyPid</name></expr> }</block></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>isSetsidAvailable</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-0"</literal></expr>, <expr><literal type="string">"--"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>anyPid</name></expr> }</block></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-0"</literal></expr>, <expr><name>anyPid</name></expr>}</block></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>expectedCommand</name></expr></argument>, <argument><expr><name>checkProcessAliveCommand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetSignalKillCommand</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>anyPid</name> <init>= <expr><literal type="string">"9999"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>anySignal</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>checkProcessAliveCommand</name> <init>= <expr><call><name><name>Shell</name><operator>.</operator><name>getSignalKillCommand</name></name><argument_list>(<argument><expr><name>anySignal</name></expr></argument>,
        <argument><expr><name>anyPid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>expectedCommand</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator>
          <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><name><name>Shell</name><operator>.</operator><name>WINUTILS</name></name></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"kill"</literal></expr>, <expr><name>anyPid</name></expr> }</block></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>isSetsidAvailable</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator>
          <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>anySignal</name></expr>, <expr><literal type="string">"--"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>anyPid</name></expr> }</block></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator>
          <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{ <expr><literal type="string">"kill"</literal></expr>, <expr><literal type="string">"-"</literal> <operator>+</operator> <name>anySignal</name></expr>, <expr><name>anyPid</name></expr> }</block></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertArrayEquals</name></name><argument_list>(<argument><expr><name>expectedCommand</name></expr></argument>, <argument><expr><name>checkProcessAliveCommand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
   
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>testInterval</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>interval</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function>

</unit>
