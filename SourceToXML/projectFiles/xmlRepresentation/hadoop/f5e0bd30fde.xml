<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/f5e0bd30fde.java"><expr_stmt><expr><name>From</name> <name>f5e0bd30fde654ed48fe73e5c0523030365385a4</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Xiaoyu</name> <name><name>Yao</name> <argument_list type="generic">&lt;<argument><name>xyao</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">14</literal> <name>Dec</name> <literal type="number">2016</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">41</literal><operator>:</operator><literal type="number">40</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">13890.</literal> <name>Maintain</name> <name>HTTP</name><operator>/</operator><name>host</name> <name>as</name> <name>SPNEGO</name> <name>SPN</name> <name>support</name> <name>and</name>
 <name>fix</name> <name>KerberosName</name> <name><name>parsing</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Xiaoyu</name> <name><name>Yao</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name><name>KerberosAuthenticationHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">19</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>KerberosName</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>authentication</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestKerberosName</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">22</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>web</name><operator>/</operator><name><name>TestWebDelegationToken</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>++</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">38</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">11</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>KerberosAuthenticationHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>KerberosAuthenticationHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f51bbd68f7c</name><operator>..</operator><name>e0ee227c614</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>KerberosAuthenticationHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>auth</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name>authentication</name><operator>/</operator><name>server</name><operator>/</operator><name><name>KerberosAuthenticationHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator> <operator>&lt;</operator><operator>/</operator><name>ul</name><operator>&gt;</operator>
  <operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>KerberosAuthenticationHandler</name> implements <name>AuthenticationHandler</name> <block>{
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>LOG</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(
  <argument><expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>LOG</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(
       <argument><expr><name><name>KerberosAuthenticationHandler</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>;
 
   <comment type="block" format="javadoc">/**
@@ -274,14 +274,14 @@ public void init(Properties config) throws ServletException {
         loginContexts.add(loginContext);
         KerberosName kerbName = new KerberosName(spnegoPrincipal);
         if (kerbName.getHostName() != null
            &amp;&amp; kerbName.getRealm() != null
             &amp;&amp; kerbName.getServiceName() != null
             &amp;&amp; kerbName.getServiceName().equals("HTTP")) {
          LOG.trace("Map server: {} to principal: {}", kerbName.getHostName(),
          boolean added = serverPrincipalMap.put(kerbName.getHostName(),
               spnegoPrincipal);
          serverPrincipalMap.put(kerbName.getHostName(), spnegoPrincipal);
          LOG.info("Map server: {} to principal: [{}], added = {}",
              kerbName.getHostName(), spnegoPrincipal, added);
         } else {
          LOG.warn("HTTP principal: {} is invalid for SPNEGO!",
          LOG.warn("HTTP principal: [{}] is invalid for SPNEGO!",
               spnegoPrincipal);
         }
       }
@@ -419,8 +419,8 @@ public AuthenticationToken authenticate(HttpServletRequest request,
               @Override
               public AuthenticationToken run() throws Exception {
                 if (LOG.isTraceEnabled()) {
                  LOG.trace("SPNEGO with principals: {}",
                      serverPrincipals.toString());
                  LOG.trace("SPNEGO with server principals: {} for {}",
                      serverPrincipals.toString(), serverName);
                 }
                 AuthenticationToken token = null;
                 Exception lastException = null;
@@ -464,7 +464,7 @@ private AuthenticationToken runWithPrincipal(String serverPrincipal,
     GSSCredential gssCreds = null;
     AuthenticationToken token = null;
     try {
      LOG.trace("SPNEGO initiated with principal {}", serverPrincipal);
      LOG.trace("SPNEGO initiated with server principal [{}]", serverPrincipal);
       gssCreds = this.gssManager.createCredential(
           this.gssManager.createName(serverPrincipal,
               KerberosUtil.getOidInstance("NT_GSS_KRB5_PRINCIPAL")),
@@ -491,7 +491,8 @@ private AuthenticationToken runWithPrincipal(String serverPrincipal,
         String userName = kerberosName.getShortName();
         token = new AuthenticationToken(userName, clientPrincipal, getType());
         response.setStatus(HttpServletResponse.SC_OK);
        LOG.trace("SPNEGO completed for principal [{}]", clientPrincipal);
        LOG.trace("SPNEGO completed for client principal [{}]",
            clientPrincipal);
       }
     } finally {
       if (gssContext != null) {
diff --git a/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java b/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java
index 0b668f1e237..6d15b6bea5c 100644
-- a/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java
++ b/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java
@@ -54,7 +54,7 @@
    * A pattern that matches a Kerberos name with at most 2 components.
    */</comment>
   <argument><expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Pattern</name> <name>nameParser</name> <operator>=</operator>
    <call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"([^/@]*)(/([^/@]*))?@([^/@]*)"</literal></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"([^/@]+)(/([^/@]+))?(@([^/@]+))?"</literal></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></block></expr></expr_stmt>
 
   <comment type="block" format="javadoc">/**
    * A pattern that matches a string with out '$' and then a single
@@ -109,7 +109,7 @@ public KerberosName(String name) {
     } else {
       serviceName = match.group(1);
       hostName = match.group(3);
      realm = match.group(4);
      realm = match.group(5);
     }
   }
 
diff --git a/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/util/TestKerberosName.java b/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/util/TestKerberosName.java
index f85b3e11d5a..a375bc95036 100644
-- a/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/util/TestKerberosName.java
++ b/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/util/TestKerberosName.java
@@ -82,6 +82,28 @@ public void testAntiPatterns() throws Exception {
     checkTranslation("root/joe@FOO.COM", "root/joe@FOO.COM");
   }
 
  @Test
  public void testParsing() throws Exception {
    final String principalNameFull = "HTTP/abc.com@EXAMPLE.COM";
    final String principalNameWoRealm = "HTTP/abc.com";
    final String principalNameWoHost = "HTTP@EXAMPLE.COM";

    final KerberosName kerbNameFull = new KerberosName(principalNameFull);
    Assert.assertEquals("HTTP", kerbNameFull.getServiceName());
    Assert.assertEquals("abc.com", kerbNameFull.getHostName());
    Assert.assertEquals("EXAMPLE.COM", kerbNameFull.getRealm());

    final KerberosName kerbNamewoRealm = new KerberosName(principalNameWoRealm);
    Assert.assertEquals("HTTP", kerbNamewoRealm.getServiceName());
    Assert.assertEquals("abc.com", kerbNamewoRealm.getHostName());
    Assert.assertEquals(null, kerbNamewoRealm.getRealm());

    final KerberosName kerbNameWoHost = new KerberosName(principalNameWoHost);
    Assert.assertEquals("HTTP", kerbNameWoHost.getServiceName());
    Assert.assertEquals(null, kerbNameWoHost.getHostName());
    Assert.assertEquals("EXAMPLE.COM", kerbNameWoHost.getRealm());
  }

   @Test
   public void testToLowerCase() throws Exception {
     String rules =
diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
index 89f15da891c..7319e4ca2bc 100644
-- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
@@ -31,6 +31,8 @@
 import org.apache.hadoop.security.authentication.server.PseudoAuthenticationHandler;
 import org.apache.hadoop.security.authentication.util.KerberosUtil;
 import org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager;
import org.apache.hadoop.test.GenericTestUtils;
import org.apache.log4j.Level;
 import org.eclipse.jetty.server.Server;
 import org.eclipse.jetty.server.ServerConnector;
 import org.eclipse.jetty.servlet.ServletContextHandler;
@@ -197,6 +199,8 @@ public void setUp() throws Exception {
     UserGroupInformation.setConfiguration(conf);
 
     jetty = createJettyServer();
    GenericTestUtils.setLogLevel(KerberosAuthenticationHandler.LOG,
        Level.TRACE);
   }
 
   @After
- 
2.19.1.windows.1

</comment></unit>
