<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/4a4dd27571c.java"><expr_stmt><expr><name>From</name> <literal type="number">4a4dd27571c44b2374d6a909a88bdd04817b0f11</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Hemanth</name> <name><name>Yamijala</name> <argument_list type="generic">&lt;<argument><name>yhemanth</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">8</literal> <name>Sep</name> <literal type="number">2009</literal> <literal type="number">10</literal><operator>:</operator><literal type="number">56</literal><operator>:</operator><literal type="number">15</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">6243.</literal> <name>Fix</name> <name>a</name> <name>NullPointerException</name> <name>in</name> <name>processing</name>
 <name>deprecated</name> <name><name>keys</name><operator>.</operator> <name>Contributed</name></name> <name>by</name> <name>Sreekanth</name> <name><name>Ramakrishnan</name><operator>.</operator>

<name>git</name></name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/hadoop/common/trunk@812455 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                                   <operator>|</operator>  <literal type="number">3</literal> <operator>++</operator>
 <name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>core</name><operator>-</operator>default<operator>.</operator><name>xml</name>                     <operator>|</operator>  <literal type="number">7</literal> <operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">54</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>conf</name><operator>/</operator><name><name>TestConfigurationDeprecation</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">48</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">31</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">81</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>f90a206c27d</name><operator>..</operator><literal type="number">75917b6261d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">984</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">984</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <call><name>Trunk</name> <argument_list>(<argument><expr><name>unreleased</name> <name>changes</name></expr></argument>)</argument_list></call>
     <name>HADOOP</name><operator>-</operator><literal type="number">6229.</literal> <name>Attempt</name> <name>to</name> <name>make</name> <name>a</name> <name>directory</name> <name>under</name> <name>an</name> <name>existing</name> <name>file</name> <name>on</name>
     <name>LocalFileSystem</name> <name>should</name> <throw>throw <argument_list>an <argument><expr><name><name>Exception</name><operator>.</operator></name> (<name>Boris</name> <name>Shkolnik</name> <name>via</name> <name>tomwhite</name></expr></argument>)</argument_list></throw>
 
    <name>HADOOP</name><operator>-</operator><literal type="number">6243.</literal> <name>Fix</name> <name>a</name> <name>NullPointerException</name> <name>in</name> <name>processing</name> <name>deprecated</name> <name><name>keys</name><operator>.</operator></name>
    (<name>Sreekanth</name> <name>Ramakrishnan</name> <name>via</name> <name>yhemanth</name></expr></expr_stmt>)

 <expr_stmt><expr><name>Release</name> <literal type="number">0.20.1</literal> <operator>-</operator> <name>Unreleased</name>
 
   <name>INCOMPATIBLE</name> <name>CHANGES</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>core</name><operator>-</operator>default<operator>.</operator><name>xml</name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>core</name><operator>-</operator>default<operator>.</operator><name>xml</name>
<name>index</name> <literal type="number">9034a9e655e</literal><operator>..</operator><literal type="number">9a2ae76ee0d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>core</name><operator>-</operator>default<operator>.</operator><name>xml</name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>core</name><operator>-</operator>default<operator>.</operator><name>xml</name>
@@ <operator>-</operator><literal type="number">485</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">485</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@
     <name>IP</name> <name><name>address</name><operator>.</operator></name>
   &lt;<operator>/</operator><name>description</name><operator>&gt;</operator>
 <operator>&lt;</operator><operator>/</operator><name>property</name><operator>&gt;</operator>

<operator>&lt;</operator><name>property</name><operator>&gt;</operator>
  <operator>&lt;</operator><name>name</name><operator>&gt;</operator><name><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>extra</name><operator>.</operator><name><name>classes</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>name</name></argument>&gt;</argument_list></name></name>
  <operator>&lt;</operator><name>value</name><operator>&gt;</operator><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name><name>JobConf</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>value</name></argument>&gt;</argument_list></name></name>
  <operator>&lt;</operator><name>final</name><operator>&gt;</operator><literal type="boolean">true</literal><operator>&lt;</operator><operator>/</operator><name>final</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>property</name><operator>&gt;</operator>

 <operator>&lt;</operator><operator>/</operator><name>configuration</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8bf4c1c436e</literal><operator>..</operator><name>d2572595842</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>conf</name><operator>/</operator><name><name>Configuration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>private</specifier> <name>String</name> <call><name>handleDeprecation</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call> <block>{
     }</block>
     <call><name>addDefaultResource</name><argument_list>(<argument><expr><literal type="string">"core-default.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>addDefaultResource</name><argument_list>(<argument><expr><literal type="string">"core-site.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">//Add code for managing deprecated key mapping</comment>
    <comment type="line">//for example</comment>
    <comment type="line">//addDeprecation("oldKey1",new String[]{"newkey1","newkey2"});</comment>
    <comment type="line">//adds deprecation for oldKey1 to two new keys(newkey1, newkey2).</comment>
    <comment type="line">//so get or set of oldKey1 will correctly populate/access values of </comment>
    <comment type="line">//newkey1 and newkey2</comment>
   }
   
   private <decl_stmt><decl><type><name>Properties</name></type> <name>properties</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1364</literal></expr><operator>,</operator><expr><literal type="number">56</literal> <operator>+</operator><literal type="number">1370</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>loadResources</name><argument_list>(<argument><expr><name>Properties</name> <name>properties</name></expr></argument>,
       <argument><expr><call><name>loadResource</name><argument_list>(<argument><expr><name>properties</name></expr></argument>, <argument><expr><name>resource</name></expr></argument>, <argument><expr><name>quiet</name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
     }
     <comment type="line">// process for deprecation.</comment>
    processDeprecation<expr_stmt><expr><operator>(</operator><operator>)</operator></expr>;</expr_stmt>
  }
  
  <comment type="block" format="javadoc">/**
   * Flag to ensure that the classes mentioned in the value of the property
   * &lt;code&gt;hadoop.conf.extra.classes&lt;/code&gt; are loaded only once for
   * all instances of &lt;code&gt;Configuration&lt;/code&gt;
   */</comment>
  private <decl_stmt><decl><type><specifier>static</specifier> <name>AtomicBoolean</name></type> <name>loadedDeprecation</name> <init>= <expr><operator>new</operator> <call><name>AtomicBoolean</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>extraConfKey</name> <init>= <expr><literal type="string">"hadoop.conf.extra.classes"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * adds all the deprecations to the deprecatedKeyMap and updates the values of
   * the appropriate keys
   */</comment>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>processDeprecation</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>populateDeprecationMapping</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>processDeprecatedKeys</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
  
  <comment type="block" format="javadoc">/**
   * Loads all the classes in mapred and hdfs that extend Configuration and that
   * have deprecations to be added into deprecatedKeyMap
   */</comment>
  <function><type><specifier>private</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>populateDeprecationMapping</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>loadedDeprecation</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <comment type="line">// load classes from mapred and hdfs which extend Configuration and have </comment>
      <comment type="line">// deprecations added in their static blocks</comment>
      <decl_stmt><decl><type><name>String</name></type> <name>classnames</name> <init>= <expr><call><name>substituteVars</name><argument_list>(<argument><expr><call><name><name>properties</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>extraConfKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>classnames</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>
      <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>classes</name> <init>= <expr><call><name><name>StringUtils</name><operator>.</operator><name>getStrings</name></name><argument_list>(<argument><expr><name>classnames</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>className</name> <range>: <expr><name>classes</name></expr></range></decl></init>)</control> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>className</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><name>className</name> <operator>+</operator> <literal type="string">" is not in the classpath"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
      </block_content>}</block></for>
      <comment type="line">// make deprecatedKeyMap unmodifiable in order to prevent changes to </comment>
      <comment type="line">// it in user's code.</comment>
      <expr_stmt><expr><name>deprecatedKeyMap</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(<argument><expr><name>deprecatedKeyMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// ensure that deprecation processing is done only once for all </comment>
      <comment type="line">// instances of this object</comment>
      <expr_stmt><expr><call><name><name>loadedDeprecation</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Updates the keys that are replacing the deprecated keys and removes the 
    * deprecated keys from memory.
diff --git a/src/test/core/org/apache/hadoop/conf/TestConfigurationDeprecation.java b/src/test/core/org/apache/hadoop/conf/TestConfigurationDeprecation.java
index bbb0e758c58..a5cb59de7ff 100644
-- a/src/test/core/org/apache/hadoop/conf/TestConfigurationDeprecation.java
++ b/src/test/core/org/apache/hadoop/conf/TestConfigurationDeprecation.java
@@ -81,30 +81,27 @@ void appendProperty(String name, String val, boolean isFinal)
     out.write("&lt;/property&gt;\n");
   }
   
  static class MyConf extends Configuration {
    static {
      // add deprecation mappings.
      Configuration.addDeprecation("old.key1", new String[]{"new.key1"});
      Configuration.addDeprecation("old.key2", new String[]{"new.key2"});
      Configuration.addDeprecation("old.key3", new String[]{"new.key3"});
      Configuration.addDeprecation("old.key4", new String[]{"new.key4"});
      Configuration.addDeprecation("old.key5", new String[]{"new.key5"});
      Configuration.addDeprecation("old.key6", new String[]{"new.key6"});
      Configuration.addDeprecation("old.key7", new String[]{"new.key7"});
      Configuration.addDeprecation("old.key8", new String[]{"new.key8"});
      Configuration.addDeprecation("old.key9", new String[]{"new.key9"});
      Configuration.addDeprecation("old.key10", new String[]{"new.key10"});
      Configuration.addDeprecation("old.key11", new String[]{"new.key11"});
      Configuration.addDeprecation("old.key12", new String[]{"new.key12"});
      Configuration.addDeprecation("old.key13", new String[]{"new.key13"});
      Configuration.addDeprecation("old.key14", new String[]{"new.key14"});
      Configuration.addDeprecation("old.key15", new String[]{"new.key15"});
      Configuration.addDeprecation("old.key16", new String[]{"new.key16"});
      Configuration.addDeprecation("A", new String[]{"B"});
      Configuration.addDeprecation("C", new String[]{"D"});
      Configuration.addDeprecation("E", new String[]{"F"});
      Configuration.addDeprecation("G", new String[]{"H","I"});
    }
  private void addDeprecationToConfiguration() {
    Configuration.addDeprecation("old.key1", new String[]{"new.key1"});
    Configuration.addDeprecation("old.key2", new String[]{"new.key2"});
    Configuration.addDeprecation("old.key3", new String[]{"new.key3"});
    Configuration.addDeprecation("old.key4", new String[]{"new.key4"});
    Configuration.addDeprecation("old.key5", new String[]{"new.key5"});
    Configuration.addDeprecation("old.key6", new String[]{"new.key6"});
    Configuration.addDeprecation("old.key7", new String[]{"new.key7"});
    Configuration.addDeprecation("old.key8", new String[]{"new.key8"});
    Configuration.addDeprecation("old.key9", new String[]{"new.key9"});
    Configuration.addDeprecation("old.key10", new String[]{"new.key10"});
    Configuration.addDeprecation("old.key11", new String[]{"new.key11"});
    Configuration.addDeprecation("old.key12", new String[]{"new.key12"});
    Configuration.addDeprecation("old.key13", new String[]{"new.key13"});
    Configuration.addDeprecation("old.key14", new String[]{"new.key14"});
    Configuration.addDeprecation("old.key15", new String[]{"new.key15"});
    Configuration.addDeprecation("old.key16", new String[]{"new.key16"});
    Configuration.addDeprecation("A", new String[]{"B"});
    Configuration.addDeprecation("C", new String[]{"D"});
    Configuration.addDeprecation("E", new String[]{"F"});
    Configuration.addDeprecation("G", new String[]{"H","I"});
   }
   
   /**
@@ -123,8 +120,6 @@ void appendProperty(String name, String val, boolean isFinal)
   public void testDeprecation() throws IOException {
     out=new BufferedWriter(new FileWriter(CONFIG));
     startConfig();
    appendProperty("hadoop.conf.extra.classes", MyConf.class.getName()
        + ",myconf1");
     // load keys with default values. Some of them are set to final to
     // test the precedence order between deprecation and being final
     appendProperty("new.key1","default.value1",true);
@@ -145,6 +140,7 @@ public void testDeprecation() throws IOException {
     appendProperty("new.key16","default.value16");
     endConfig();
     Path fileResource = new Path(CONFIG);
    addDeprecationToConfiguration();
     conf.addResource(fileResource);
     
     out=new BufferedWriter(new FileWriter(CONFIG2));
- 
2.19.1.windows.1

</comment></unit>
