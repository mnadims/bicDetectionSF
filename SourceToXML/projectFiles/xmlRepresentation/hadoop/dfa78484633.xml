<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/dfa78484633.java"><expr_stmt><expr><name>From</name> <name>dfa78484633b3ce21471d527b9c24671e3ca5df9</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Steve</name> <name><name>Loughran</name> <argument_list type="generic">&lt;<argument><name>stevel</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">14</literal> <name>Oct</name> <literal type="number">2015</literal> <literal type="number">20</literal><operator>:</operator><literal type="number">25</literal><operator>:</operator><literal type="number">33</literal> <operator>+</operator><literal type="number">0100</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">12478.</literal> <call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call> <name>has</name> <name>been</name> <name>renamed</name>
 <call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call><operator>.</operator> <operator>(</operator><name>stevel</name><operator>)</operator>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">3</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>HardLink</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>NativeLibraryChecker</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">26</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SysInfoWindows</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestWinUtils</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">6</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>yarn</name><operator>/</operator><name>util</name><operator>/</operator><name><name>WindowsBasedProcessTree</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>ContainerExecutor</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>WindowsSecureContainerExecutor</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>launcher</name><operator>/</operator><name><name>ContainerLaunch</name><operator>.</operator><name>java</name></name>             <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>launcher</name><operator>/</operator><name><name>TestContainerLaunch</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">13</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">33</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">30</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">8cd36a589dd</literal><operator>..</operator><literal type="number">7efc885add2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">1225</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1225</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">2.8.0</literal> <operator>-</operator> <name>UNRELEASED</name>
     <name>HADOOP</name><operator>-</operator><literal type="number">11515.</literal> <name>Upgrade</name> <name>jsch</name> <name>lib</name> <name>to</name> <name>jsch</name><operator>-</operator><literal type="number">0.1.51</literal> <name>to</name> <name>avoid</name> <name>problems</name> <name>running</name>
     <name>on</name> <name><name>java7</name><operator>.</operator></name> (<name>stevel</name> <name>and</name> <name>ozawa</name></expr></expr_stmt>)
 
    <expr_stmt><expr><name>HADOOP</name><operator>-</operator><literal type="number">12478.</literal> <call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call> <name>has</name> <name>been</name> <name>renamed</name>
    <call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call><operator>.</operator> <operator>(</operator><name>stevel</name><operator>)</operator>

   <name>OPTIMIZATIONS</name>
 
     <name>HADOOP</name><operator>-</operator><literal type="number">12051.</literal> <call><name><name>ProtobufRpcEngine</name><operator>.</operator><name>invoke</name></name><argument_list>()</argument_list></call> <name>should</name> <name>use</name> <call><name><name>Exception</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>HardLink</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>HardLink</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0de019d34a1</literal><operator>..</operator><literal type="number">8b47dfeb9a7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>HardLink</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>fs</name><operator>/</operator><name><name>HardLink</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>void</name> <call><name>setLinkCountCmdTemplate</name><argument_list>(<argument><expr><name><name>String</name><index>[]</index></name> <name>template</name></expr></argument>)</argument_list></call> <block>{
     @<expr><name>Override</name>
     <name><name>String</name><index>[]</index></name> <call><name>linkCount</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <comment type="line">// trigger the check for winutils</comment>
      <expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsFile</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
      <expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsFile</name></name><argument_list>()</argument_list></call></expr>;
       <expr><name><name>String</name><index>[]</index></name> <name>buf</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[<expr><name><name>getLinkCountCommand</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;
       <expr><call><name><name>System</name><operator>.</operator><name>arraycopy</name></name><argument_list>(<argument><expr><name>getLinkCountCommand</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, 
                        <argument><expr><name><name>getLinkCountCommand</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>NativeLibraryChecker</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>NativeLibraryChecker</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9d84ced8569</literal><operator>..</operator><name>d8c68992a5e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>NativeLibraryChecker</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>NativeLibraryChecker</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">108</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">108</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>main</name><argument_list>(<argument><expr><name><name>String</name><index>[]</index></name> <name>args</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr>)</condition> <block>{<block_content>
       <comment type="line">// winutils.exe is required on Windows</comment>
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>winutilsPath</name> <operator>=</operator> <call><name><name>Shell</name><operator>.</operator><name>getWinutilsFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>winutilsPath</name> <operator>=</operator> <call><name><name>Shell</name><operator>.</operator><name>getWinUtilsFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>winutilsExists</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt>}</block></expr> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"No Winutils: "</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4370d89ec89</literal><operator>..</operator><name>d6eca69d95b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>Shell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>private</specifier> <specifier>static</specifier> <name>OSType</name> <call><name>getOSType</name><argument_list>()</argument_list></call> <block>{
     <comment type="line">//'groups username' command return is inconsistent across different unixes</comment>
     <return>return <expr><name>WINDOWS</name> <operator>?</operator>
       <operator>new</operator> <name><name>String</name><index>[]</index></name>
          <block>{ <expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"groups"</literal></expr>, <expr><literal type="string">"-F"</literal></expr>, <expr><literal type="string">"\""</literal> <operator>+</operator> <name>user</name> <operator>+</operator> <literal type="string">"\""</literal></expr> }</block>
          <block>{ <expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"groups"</literal></expr>, <expr><literal type="string">"-F"</literal></expr>, <expr><literal type="string">"\""</literal> <operator>+</operator> <name>user</name> <operator>+</operator> <literal type="string">"\""</literal></expr> }</block>
       <operator>:</operator> <operator>new</operator> <name><name>String</name> <index>[]</index></name> <block>{<expr><literal type="string">"bash"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"id -gn "</literal> <operator>+</operator> <name>user</name> <operator>+</operator> <literal type="string">"&amp;&amp; id -Gn "</literal> <operator>+</operator> <name>user</name></expr>}</block></expr>;</return></block></expr></expr_stmt></block_content></block></catch>
   }</block>
 
@@ <operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>private</specifier> <specifier>static</specifier> <name>OSType</name> <call><name>getOSType</name><argument_list>()</argument_list></call> <block>{
 
   <comment type="block" format="javadoc">/** Return a command to get permission information. */</comment>
   <expr><specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getGetPermissionCommand</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><ternary><condition><expr><operator>(</operator><name>WINDOWS</name><operator>)</operator></expr> ?</condition><then> <expr><ternary><condition><expr><operator>new</operator> <name><name>String</name><index>[]</index></name></expr></condition> <block>{<block_content> <expr_stmt><expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><literal type="string">"ls"</literal></expr><operator>,</operator> <expr><literal type="string">"-F"</literal></expr></expr_stmt></block_content></block></ternary></expr></then></ternary></expr></return> }</block></expr>
    <return>return <expr><ternary><condition><expr><operator>(</operator><name>WINDOWS</name><operator>)</operator></expr> ?</condition><then> <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"ls"</literal></expr>, <expr><literal type="string">"-F"</literal></expr> }</block></expr>
                      </then><else>: <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"/bin/ls"</literal></expr>, <expr><literal type="string">"-ld"</literal></expr> }</block></expr></else></ternary></expr>;</return>
   }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>private</specifier> <specifier>static</specifier> <name>OSType</name> <call><name>getOSType</name><argument_list>()</argument_list></call> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getSetPermissionCommand</name><argument_list>(<argument><expr><name>String</name> <name>perm</name></expr></argument>, <argument><expr><name>boolean</name> <name>recursive</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>recursive</name></expr>)</condition> <block>{<block_content>
       <return>return <expr><ternary><condition><expr><operator>(</operator><name>WINDOWS</name><operator>)</operator></expr> ?</condition><then>
          <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"chmod"</literal></expr>, <expr><literal type="string">"-R"</literal></expr>, <expr><name>perm</name></expr> }</block>
          <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"chmod"</literal></expr>, <expr><literal type="string">"-R"</literal></expr>, <expr><name>perm</name></expr> }</block></expr>
           </then><else>: <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"chmod"</literal></expr>, <expr><literal type="string">"-R"</literal></expr>, <expr><name>perm</name></expr> }</block></expr></else></ternary></expr>;</return>
     <expr_stmt/></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
       <return>return <expr><ternary><condition><expr><operator>(</operator><name>WINDOWS</name><operator>)</operator></expr> ?</condition><then>
          <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"chmod"</literal></expr>, <expr><name>perm</name></expr> }</block>
          <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"chmod"</literal></expr>, <expr><name>perm</name></expr> }</block></expr>
           </then><else>: <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"chmod"</literal></expr>, <expr><name>perm</name></expr> }</block></expr></else></ternary></expr>;</return>
     <expr_stmt/></block_content></block></else></if_stmt>}</block></expr></expr_stmt>
   }
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>private</specifier> <specifier>static</specifier> <name>OSType</name> <call><name>getOSType</name><argument_list>()</argument_list></call> <block>{
   <comment type="block" format="javadoc">/** Return a command to set owner. */</comment>
   <expr><specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getSetOwnerCommand</name><argument_list>(<argument><expr><name>String</name> <name>owner</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><operator>(</operator><name>WINDOWS</name><operator>)</operator> <operator>?</operator>
        <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"chown"</literal></expr>, <expr><literal type="string">"\""</literal> <operator>+</operator> <name>owner</name> <operator>+</operator> <literal type="string">"\""</literal></expr> }</block>
        <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"chown"</literal></expr>, <expr><literal type="string">"\""</literal> <operator>+</operator> <name>owner</name> <operator>+</operator> <literal type="string">"\""</literal></expr> }</block>
         <operator>:</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"chown"</literal></expr>, <expr><name>owner</name></expr> }</block></expr>;</return></block></expr>
   }</block>
 
   <comment type="block" format="javadoc">/** Return a command to create symbolic links. */</comment>
   <specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getSymlinkCommand</name><argument_list>(<argument><expr><name>String</name> <name>target</name></expr></argument>, <argument><expr><name>String</name> <name>link</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><ternary><condition><expr><name>WINDOWS</name></expr> ?</condition><then>
       <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"symlink"</literal></expr>, <expr><name>link</name></expr>, <expr><name>target</name></expr> }</block>
       <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"symlink"</literal></expr>, <expr><name>link</name></expr>, <expr><name>target</name></expr> }</block></expr>
        </then><else>: <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"ln"</literal></expr>, <expr><literal type="string">"-s"</literal></expr>, <expr><name>target</name></expr>, <expr><name>link</name></expr> }</block></expr></else></ternary></expr>;</return>
   }</block></expr></expr_stmt>
 
   <comment type="block" format="javadoc">/** Return a command to read the target of the a symbolic link. */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name></type> <name>getReadlinkCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>link</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><ternary><condition><expr><name>WINDOWS</name></expr> ?</condition><then>
        <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"readlink"</literal></expr>, <expr><name>link</name></expr> }</block>
        <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"readlink"</literal></expr>, <expr><name>link</name></expr> }</block></expr>
         </then><else>: <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"readlink"</literal></expr>, <expr><name>link</name></expr> }</block></expr></else></ternary></expr>;</return>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">266</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">266</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>private</specifier> <specifier>static</specifier> <name>OSType</name> <call><name>getOSType</name><argument_list>()</argument_list></call> <block>{
     <comment type="line">// Code == 0 means check alive</comment>
     <if_stmt><if>if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"isAlive"</literal></expr>, <expr><name>pid</name></expr> }</block></expr>;</return>
        <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"isAlive"</literal></expr>, <expr><name>pid</name></expr> }</block></expr>;</return>
       <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
        <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"kill"</literal></expr>, <expr><name>pid</name></expr> }</block></expr>;</return>
        <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"kill"</literal></expr>, <expr><name>pid</name></expr> }</block></expr>;</return>
       </block_content>}</block></else></if_stmt>
     }
 
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">590</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">590</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>getQualifiedBinPath</name><argument_list>(<argument><expr><name>String</name> <name>executable</name></expr></argument>)</argument_list></call>
    <operator>*</operator> <name>The</name> <name>lack</name> <name>of</name> <name>such</name> <name>checks</name> <name>has</name> <name>led</name> <name>to</name> <name>many</name> <name>support</name> <name>issues</name> <name>being</name> <name><name>raised</name><operator>.</operator></name>
    * <operator>&lt;</operator><name>p</name><operator>&gt;</operator>
    <operator>*</operator> @<name>deprecated</name> <name>use</name> <name>one</name> <name>of</name> <name>the</name> <name>exception</name><operator>-</operator><name>raising</name> <name>getter</name> <name>methods</name></expr><operator>,</operator>
   <expr><operator>*</operator> <name>specifically</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>}</block> <name>or</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinutilsFile</name><argument_list>()</argument_list></call></expr>}</block>
   <operator>*</operator> <name>specifically</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>}</block> <name>or</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinUtilsFile</name><argument_list>()</argument_list></call></expr>}</block>
    <operator>*</operator><operator>/</operator>
   @<name>Deprecated</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>WINUTILS</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">646</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">646</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>getQualifiedBinPath</name><argument_list>(<argument><expr><name>String</name> <name>executable</name></expr></argument>)</argument_list></call>
    <operator>*</operator> <name>Predicate</name> <name>to</name> <name>indicate</name> <name>whether</name> <name>or</name> <name>not</name> <name>the</name> <name>path</name> <name>to</name> <name>winutils</name> <name>is</name> <name><name>known</name><operator>.</operator></name>
    *
    <operator>*</operator> <name>If</name> <literal type="boolean">true</literal></expr><operator>,</operator> <expr><name>then</name> <block>{@<expr><name>link</name> <operator>#</operator><name>WINUTILS</name></expr>}</block> <name>is</name> <name>non</name><operator>-</operator><literal type="null">null</literal></expr><operator>,</operator> <expr><name>and</name> <name>both</name>
   <operator>*</operator> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>}</block> <name>and</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinutilsFile</name><argument_list>()</argument_list></call></expr>}</block>
   <operator>*</operator> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>}</block> <name>and</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getWinUtilsFile</name><argument_list>()</argument_list></call></expr>}</block>
    <operator>*</operator> <name>will</name> <name>successfully</name></expr></expr_stmt> <return>return <expr><name>this</name> <name><name>value</name><operator>.</operator> <name>Always</name></name> <literal type="boolean">false</literal> <name>on</name> <name>non</name><operator>-</operator><name>windows</name> <name><name>systems</name><operator>.</operator></name>
    * @</expr></return><return>return <expr><literal type="boolean">true</literal></expr></return> <if_stmt><if>if there is a valid path to the binary
    */
@@ -662<operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">662</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>boolean</name> <call><name>hasWinutilsPath</name><argument_list>()</argument_list></call> <block>{
    <expr><operator>*</operator> @</expr><return>return <expr><name>the</name> <name>path</name> <name>to</name> <block>{@<expr><name>link</name> <operator>#</operator><name>WINUTILS_EXE</name></expr>}</block>
    <operator>*</operator> @<throws>throws <argument><expr><name>RuntimeException</name></expr></argument></throws></expr></return> <if_stmt><if>if the path is not resolvable
    */
  public static String getWinutilsPath<condition>()</condition> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>getWinUtilsPath</name><parameter_list>()</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>WINUTILS_FAILURE</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <return>return <expr><name>WINUTILS_PATH</name></expr>;</return>
     </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">677</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">677</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>getWinutilsPath</name><argument_list>()</argument_list></call> <block>{
    <expr><operator>*</operator> @</expr><return>return <expr><name>the</name> <name>file</name> <name>instance</name> <name>referring</name> <name>to</name> <name>the</name> <name>winutils</name> <name><name>bin</name><operator>.</operator></name>
    * @<throws>throws <argument><expr><name>FileNotFoundException</name> <name>on</name> <name>any</name> <name>failure</name> <name>to</name> <name>locate</name> <name>that</name> <name><name>file</name><operator>.</operator></name></expr></argument>
    *<argument><expr><operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>getWinutilsFile</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>FileNotFoundException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>getWinUtilsFile</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>FileNotFoundException</name> <block>{</block></expr></argument></throws></expr></argument></throws></expr></return>
     <if_stmt><if>if <condition>(<expr><name>WINUTILS_FAILURE</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <return>return <expr><name>WINUTILS_FILE</name></expr>;</return>
     </block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SysInfoWindows</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SysInfoWindows</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1fd036e41d0</literal><operator>..</operator><literal type="number">3b009efa8de</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SysInfoWindows</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SysInfoWindows</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>void</name> <call><name>reset</name><argument_list>()</argument_list></call> <block>{
   <expr><name>String</name> <call><name>getSystemInfoInfoFromShell</name><argument_list>()</argument_list></call> <block>{
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>ShellCommandExecutor</name></type> <name>shellExecutor</name> <init>= <expr><operator>new</operator> <call><name>ShellCommandExecutor</name><argument_list>(
          <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr>,
          <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr>,
               <expr><literal type="string">"systeminfo"</literal></expr> }</block></expr></block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>shellExecutor</name><operator>.</operator><name>execute</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><call><name><name>shellExecutor</name><operator>.</operator><name>getOutput</name></name><argument_list>()</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6e279643840</literal><operator>..</operator><literal type="number">54cfc2d4890</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetServerSideGroups</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>,
     <argument/></throws></expr></expr_stmt></block_content></block></try></block></expr>}</block>
     <comment type="line">// get the groups</comment>
     <name>pp</name> <operator>=</operator> <call><name><name>Runtime</name><operator>.</operator><name>getRuntime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>exec</name><argument_list>(<argument><expr><ternary><condition><expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr> ?</condition><then>
      <expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" groups -F"</literal>
      <call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" groups -F"</literal></expr></then></ternary></expr></argument></argument_list></call>
       <operator>:</operator> <literal type="string">"id -Gn"</literal></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></else></if_stmt>
     <name>br</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><call><name><name>pp</name><operator>.</operator><name>getInputStream</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">138d0255ac6</literal><operator>..</operator><name>a9f7f6ddd46</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestShell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetCheckProcessIsAliveCommand</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator>
          <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"isAlive"</literal></expr>, <expr><name>anyPid</name></expr> }</block></expr>;</expr_stmt>
          <expr_stmt><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"isAlive"</literal></expr>, <expr><name>anyPid</name></expr> }</block></expr>;</expr_stmt>
     </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>isSetsidAvailable</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"bash"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"kill -0 -- -"</literal> <operator>+</operator> <name>anyPid</name></expr> }</block></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGetSignalKillCommand</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator>
          <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"kill"</literal></expr>, <expr><name>anyPid</name></expr> }</block></expr>;</expr_stmt>
          <expr_stmt><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"kill"</literal></expr>, <expr><name>anyPid</name></expr> }</block></expr>;</expr_stmt>
     </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>Shell</name><operator>.</operator><name>isSetsidAvailable</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>expectedCommand</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"bash"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"kill -9 -- -"</literal> <operator>+</operator> <name>anyPid</name></expr> }</block></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">342</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">342</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testBinWinUtilsNotAFile</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testNoWinutilsOnUnix</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Throwable</name> <block>{
     <expr><call><name><name>Assume</name><operator>.</operator><name>assumeFalse</name></name><argument_list>(<argument><expr><name>WINDOWS</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>getWinutilsFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getWinUtilsFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>assertExContains</name><argument_list>(<argument><expr><name>ex</name></expr></argument>, <argument><expr><name>E_NOT_A_WINDOWS_SYSTEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch></try>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>getWinutilsPath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getWinUtilsPath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>RuntimeException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>assertExContains</name><argument_list>(<argument><expr><name>ex</name></expr></argument>, <argument><expr><name>E_NOT_A_WINDOWS_SYSTEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>( <expr><call><name><name>ex</name><operator>.</operator><name>getCause</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestWinUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestWinUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6fc8969819e</literal><operator>..</operator><name>fde28227679</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestWinUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestWinUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>TEST_DIR</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></condition><empty_stmt>;</empty_stmt></if></if_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Failed to create Test directory "</literal> <operator>+</operator> <name>TEST_DIR</name></expr></argument>,
         <argument><expr><call><name><name>TEST_DIR</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>winutils</name> <operator>=</operator> <call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>winutils</name> <operator>=</operator> <call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></catch></try>
 
   <annotation>@<name>After</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>tearDown</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>void</name> <call><name>requireWinutils</name><argument_list>()</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></else></if_stmt>
 
   <comment type="line">// Helper routine that writes the given content to the file.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">280</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">280</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testBasicChmod</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="line">// - Change mode to 677 so owner does not have execute permission.</comment>
     <comment type="line">// - Verify the owner truly does not have the permissions to execute the file.</comment>
 
    <expr><name>File</name> <name>winutilsFile</name> <operator>=</operator> <call><name><name>Shell</name><operator>.</operator><name>getWinutilsFile</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>winutilsFile</name> <init>= <expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsFile</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>aExe</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>TEST_DIR</name></expr></argument>, <argument><expr><literal type="string">"a.exe"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(<argument><expr><name>winutilsFile</name></expr></argument>, <argument><expr><name>aExe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>chmod</name><argument_list>(<argument><expr><literal type="string">"677"</literal></expr></argument>, <argument><expr><name>aExe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>util</name><operator>/</operator><name><name>WindowsBasedProcessTree</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>util</name><operator>/</operator><name><name>WindowsBasedProcessTree</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">41b26f418c6</literal><operator>..</operator><literal type="number">1bf25a5492b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>util</name><operator>/</operator><name><name>WindowsBasedProcessTree</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>util</name><operator>/</operator><name><name>WindowsBasedProcessTree</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>boolean</name> <call><name>isAvailable</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><literal type="boolean">false</literal></expr>;</return>
       }</block></expr></expr_stmt>
       <decl_stmt><decl><type><name>ShellCommandExecutor</name></type> <name>shellExecutor</name> <init>= <expr><operator>new</operator> <call><name>ShellCommandExecutor</name><argument_list>(
          <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"help"</literal></expr> }</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"help"</literal></expr> }</block></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></else></if_stmt>
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name><name>shellExecutor</name><operator>.</operator><name>execute</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <call><name>WindowsBasedProcessTree</name><argument_list>(<argument><expr><name>String</name> <name>pid</name></expr></argument>)</argument_list></call> <block>{
   <expr><name>String</name> <call><name>getAllProcessInfoFromShell</name><argument_list>()</argument_list></call> <block>{
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>ShellCommandExecutor</name></type> <name>shellExecutor</name> <init>= <expr><operator>new</operator> <call><name>ShellCommandExecutor</name><argument_list>(
          <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr>,
          <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr>,
               <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"processList"</literal></expr>, <expr><name>taskProcessId</name></expr> }</block></expr></block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>shellExecutor</name><operator>.</operator><name>execute</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><call><name><name>shellExecutor</name><operator>.</operator><name>getOutput</name></name><argument_list>()</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>ContainerExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>ContainerExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a83ef844de8</name><operator>..</operator><literal type="number">6d75a1cfc64</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>ContainerExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>ContainerExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">401</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">401</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>protected</specifier> <name>Path</name> <call><name>getPidFilePath</name><argument_list>(<argument><expr><name>ContainerId</name> <name>containerId</name></expr></argument>)</argument_list></call> <block>{
           <expr><name>cpuRate</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><literal type="number">10000</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <operator>(</operator><name>containerCpuPercentage</name> <operator>*</operator> <literal type="number">100</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></try></block></expr>
         }</block></expr></expr_stmt>
       </block_content>}</block></catch></try>
      <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"create"</literal></expr>, <expr><literal type="string">"-m"</literal></expr>,
      <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>, <expr><literal type="string">"create"</literal></expr>, <expr><literal type="string">"-m"</literal></expr>,
           <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>memory</name></expr></argument>)</argument_list></call></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>cpuRate</name></expr></argument>)</argument_list></call></expr>, <expr><name>groupId</name></expr>,
           <expr><literal type="string">"cmd /c "</literal> <operator>+</operator> <name>command</name></expr> }</block></expr>;</return>
     }</block></expr></return> <if_stmt><else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>WindowsSecureContainerExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>WindowsSecureContainerExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">70fdcdaa5db</literal><operator>..</operator><literal type="number">8d307441cc4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>WindowsSecureContainerExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name><name>WindowsSecureContainerExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">578</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">578</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>setConf</name><argument_list>(<argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
       <expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"getRunCommand: %s exists:%b"</literal></expr></argument>, 
           <argument><expr><name>command</name></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
    <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>,
    <return>return <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"task"</literal></expr>,
         <expr><literal type="string">"createAsUser"</literal></expr>, <expr><name>groupId</name></expr>,
         <expr><name>userName</name></expr>, <expr><call><name><name>pidFile</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"cmd /c "</literal> <operator>+</operator> <name>command</name></expr> }</block></expr>;</return>
   }</block></expr></return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>ContainerLaunch</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>ContainerLaunch</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">43493327ef7</literal><operator>..</operator><name>fc8615bfbb8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>ContainerLaunch</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>ContainerLaunch</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">747</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">747</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>protected</specifier> <name>void</name> <call><name>link</name><argument_list>(<argument><expr><name>Path</name> <name>src</name></expr></argument>, <argument><expr><name>Path</name> <name>dst</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>String</name> <name>srcFileStr</name> <operator>=</operator> <call><name><name>srcFile</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>dstFileStr</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>dst</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getPath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>lineWithLenCheck</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"@%s symlink \"%s\" \"%s\""</literal></expr></argument>,
          <argument><expr><call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>dstFileStr</name></expr></argument>, <argument><expr><name>srcFileStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>dstFileStr</name></expr><operator>,</operator> <expr><name>srcFileStr</name></expr></expr_stmt>)</block_content></block></else></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></else></if_stmt>
       <expr_stmt><expr><call><name>errorCheck</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>TestContainerLaunch</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>TestContainerLaunch</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f85b01e31f0</name><operator>..</operator><literal type="number">0abae2b09d1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>TestContainerLaunch</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>yarn</name><operator>-</operator><name>server</name><operator>-</operator><name>nodemanager</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>nodemanager</name><operator>/</operator><name>containermanager</name><operator>/</operator><name>launcher</name><operator>/</operator><name><name>TestContainerLaunch</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1072</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1072</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testWindowsShellScriptBuilderMkdir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testWindowsShellScriptBuilderLink</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="line">// Test is only relevant on Windows</comment>
     <expr><call><name><name>Assume</name><operator>.</operator><name>assumeTrue</name></name><argument_list>(<argument><expr><name><name>Shell</name><operator>.</operator><name>WINDOWS</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>linkCmd</name> <init>= <expr><literal type="string">"@"</literal> <operator>+</operator> <call><name><name>Shell</name><operator>.</operator><name>getWinutilsPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" symlink \"\" \"\""</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>linkCmd</name> <init>= <expr><literal type="string">"@"</literal> <operator>+</operator> <call><name><name>Shell</name><operator>.</operator><name>getWinUtilsPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" symlink \"\" \"\""</literal></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// The tests are built on assuming 8191 max command line length</comment>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">8191</literal></expr></argument>, <argument><expr><name><name>Shell</name><operator>.</operator><name>WINDOWS_MAX_SHELL_LENGTH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></if></if_stmt>

</unit>
