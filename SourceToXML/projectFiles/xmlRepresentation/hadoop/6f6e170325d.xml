<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/hadoop/6f6e170325d.java"><expr_stmt><expr><name>From</name> <literal type="number">6f6e170325d39f9f7b543a39791b2cb54692f83d</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name>Joseph</name> <name><name>Evans</name> <argument_list type="generic">&lt;<argument><name>bobby</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">30</literal> <name>Aug</name> <literal type="number">2012</literal> <literal type="number">19</literal><operator>:</operator><literal type="number">58</literal><operator>:</operator><literal type="number">07</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>HADOOP</name><operator>-</operator><literal type="number">8726.</literal> <name>The</name> <name>Secrets</name> <name>in</name> <name>Credentials</name> <name>are</name> <name>not</name> <name>available</name> <name>to</name>
 <name>MR</name> <call><name>tasks</name> <argument_list>(<argument><expr><name>daryn</name> <name>and</name> <name>Benoy</name> <name>Antony</name> <name>via</name> <name>bobby</name></expr></argument>)</argument_list></call>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/hadoop/common/trunk@1379100 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                 <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">6</literal> <operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>UserGroupInformation</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">75</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestCredentials</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">73</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>YarnChild</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>v2</name><operator>/</operator><name>app</name><operator>/</operator><name><name>MRAppMaster</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TestJob</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">17</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <literal type="number">8</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">117</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">63</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">6bd92f8af68</literal><operator>..</operator><literal type="number">2b0ba1da2df</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">993</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">993</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Release</name> <literal type="number">0.23.3</literal> <operator>-</operator> <name>UNRELEASED</name>
 
     <name>HADOOP</name><operator>-</operator><literal type="number">8725.</literal> <name>MR</name> <name>is</name> <name>broken</name> <name>when</name> <name>security</name> <name>is</name> <call><name>off</name> <argument_list>(<argument><expr><name>daryn</name> <name>via</name> <name>bobby</name></expr></argument>)</argument_list></call>
 
    <name>HADOOP</name><operator>-</operator><literal type="number">8726.</literal> <name>The</name> <name>Secrets</name> <name>in</name> <name>Credentials</name> <name>are</name> <name>not</name> <name>available</name> <name>to</name> <name>MR</name> <call><name>tasks</name>
    <argument_list>(<argument><expr><name>daryn</name> <name>and</name> <name>Benoy</name> <name>Antony</name> <name>via</name> <name>bobby</name></expr></argument>)</argument_list></call>

 <name>Release</name> <literal type="number">0.23.2</literal> <operator>-</operator> <name>UNRELEASED</name> 
 
   <name>INCOMPATIBLE</name> <name>CHANGES</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6d5b048c8a4</literal><operator>..</operator><name>a258c7f88ca</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>Credentials</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>addAll</name><argument_list>(<argument><expr><name>Credentials</name> <name>other</name></expr></argument>, <argument><expr><name>boolean</name> <name>overwrite</name></expr></argument>)</argument_list></call> <block>{
       }</block></expr></expr_stmt>
     }
   }
  
  <function><type><specifier>public</specifier> <name>void</name></type> <name>addTokensToUGI</name><parameter_list>(<parameter><decl><type><name>UserGroupInformation</name></type> <name>ugi</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Text</name></argument>, <argument><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>token</name><range>: <expr><call><name><name>tokenMap</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>ugi</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>token</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>UserGroupInformation</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>UserGroupInformation</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">184b40d8ed5</literal><operator>..</operator><literal type="number">64ca98cf28a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>UserGroupInformation</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>UserGroupInformation</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>PrivilegedAction</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>PrivilegedActionException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>PrivilegedExceptionAction</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">646</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">645</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>static</specifier> <name>UserGroupInformation</name> <call><name>getLoginUser</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
           <comment type="line">// user.</comment>
           <expr><name>Credentials</name> <name>cred</name> <operator>=</operator> <call><name><name>Credentials</name><operator>.</operator><name>readTokenStorageFile</name></name><argument_list>(
               <argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><literal type="string">"file:///"</literal> <operator>+</operator> <name>fileLocation</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>cred</name><operator>.</operator><name>addTokensToUGI</name></name><argument_list>(<argument><expr><name>loginUser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>loginUser</name><operator>.</operator><name>addCredentials</name></name><argument_list>(<argument><expr><name>cred</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         }
         loginUser<expr_stmt><expr><operator>.</operator><call><name>spawnAutoRenewalThreadForUserCreds</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       } catch <expr_stmt><expr><operator>(</operator><name>LoginException</name> <name>le</name><operator>)</operator> <block>{
@@ <expr><operator>-</operator><literal type="number">1176</literal></expr>,<expr><literal type="number">41</literal> <operator>+</operator><literal type="number">1175</literal></expr>,<expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>synchronized</specifier> <name>boolean</name> <call><name>addTokenIdentifier</name><argument_list>(<argument><expr><name>TokenIdentifier</name> <name>tokenId</name></expr></argument>)</argument_list></call> <block>{
   <expr><specifier>public</specifier> <specifier>synchronized</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>TokenIdentifier</name></argument>&gt;</argument_list></name> <call><name>getTokenIdentifiers</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><call><name><name>subject</name><operator>.</operator><name>getPublicCredentials</name></name><argument_list>(<argument><expr><name><name>TokenIdentifier</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>

  <comment type="line">// wrapper to retain the creds key for the token</comment>
  <specifier>private</specifier> <name>class</name> <name>NamedToken</name> <block>{
    <expr><name>Text</name> <name>alias</name></expr>;
    <expr><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>TokenIdentifier</name></extends></argument>&gt;</argument_list></name> <name>token</name></expr>;
    <expr><call><name>NamedToken</name><argument_list>(<argument><expr><name>Text</name> <name>alias</name></expr></argument>, <argument><expr><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>TokenIdentifier</name></extends></argument>&gt;</argument_list></name> <name>token</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>alias</name></name> <operator>=</operator> <name>alias</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>token</name></name> <operator>=</operator> <name>token</name></expr>;
    }</block>
    @<name>Override</name>
    <specifier>public</specifier> <name>boolean</name> <call><name>equals</name><argument_list>(<argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></call> <block>{
      <expr><name>boolean</name> <name>equals</name></expr>;
      <if_stmt><if>if <condition>(<expr><name>o</name> <operator>==</operator> <name>this</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>equals</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr> <if_stmt><if type="elseif">else if <condition>(<expr><operator>!</operator><operator>(</operator><name>o</name> <operator>instanceof</operator> <name>NamedToken</name><operator>)</operator></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>equals</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
        <decl_stmt><decl><type><name>Text</name></type> <name>otherAlias</name> <init>= <expr><operator>(</operator><operator>(</operator><name>NamedToken</name><operator>)</operator><name>o</name><operator>)</operator><operator>.</operator><name>alias</name></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>alias</name> <operator>==</operator> <name>otherAlias</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>equals</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></else></if_stmt>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
          <expr_stmt><expr><name>equals</name> <operator>=</operator> <operator>(</operator><name>otherAlias</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>otherAlias</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>alias</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
      }
      return <expr_stmt><expr><name>equals</name></expr>;</expr_stmt>
    }
    @<function><type><name>Override</name>
    <specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><ternary><condition><expr><operator>(</operator><name>alias</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><call><name><name>alias</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return> 
    </block_content>}</block></function>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><literal type="string">"NamedToken: alias="</literal><operator>+</operator><name>alias</name><operator>+</operator><literal type="string">" token="</literal><operator>+</operator><name>token</name></expr>;</return>
    </block_content>}</block></function>
  }
   
   <comment type="block" format="javadoc">/**
    * Add a token to this UGI
@@ -1219,7 +1183,7 @@ public String toString() {
    * @return true on successful add of new token
    */</comment>
   public <function><type><specifier>synchronized</specifier> <name>boolean</name></type> <name>addToken</name><parameter_list>(<parameter><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>TokenIdentifier</name></extends></argument>&gt;</argument_list></name></type> <name>token</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>addToken</name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><ternary><condition><expr><operator>(</operator><name>token</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><call><name>addToken</name><argument_list>(<argument><expr><call><name><name>token</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="boolean">false</literal></expr></else></ternary></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -1231,10 +1195,8 @@ public synchronized boolean addToken(Token&lt;? extends TokenIdentifier&gt; token) {
    */</comment>
   <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>boolean</name></type> <name>addToken</name><parameter_list>(<parameter><decl><type><name>Text</name></type> <name>alias</name></decl></parameter>,
                                        <parameter><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>TokenIdentifier</name></extends></argument>&gt;</argument_list></name></type> <name>token</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>NamedToken</name></type> <name>namedToken</name> <init>= <expr><operator>new</operator> <call><name>NamedToken</name><argument_list>(<argument><expr><name>alias</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>ugiCreds</name> <init>= <expr><call><name><name>subject</name><operator>.</operator><name>getPrivateCredentials</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>ugiCreds</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>namedToken</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// allow token to be replaced</comment>
    <return>return <expr><call><name><name>ugiCreds</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NamedToken</name><argument_list>(<argument><expr><name>alias</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    <expr_stmt><expr><call><name>getCredentialsInternal</name><argument_list>()</argument_list></call><operator>.</operator><call><name>addToken</name><argument_list>(<argument><expr><name>alias</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/**
@@ -1244,8 +1206,8 @@ public synchronized boolean addToken(Text alias,
    */</comment>
   <function><type><specifier>public</specifier> <specifier>synchronized</specifier>
   <name><name>Collection</name><argument_list type="generic">&lt;<argument><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>TokenIdentifier</name></extends></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>getTokens</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableList</name></name><argument_list>(
        <argument><expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name>getCredentials</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAllTokens</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableCollection</name></name><argument_list>(
        <argument><expr><call><name>getCredentialsInternal</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAllTokens</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -1254,11 +1216,26 @@ public synchronized boolean addToken(Text alias,
    * @return Credentials of tokens associated with this user
    */</comment>
   <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>Credentials</name></type> <name>getCredentials</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Credentials</name></type> <name>credentials</name> <init>= <expr><operator>new</operator> <call><name>Credentials</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>NamedToken</name></argument>&gt;</argument_list></name></type> <name>namedTokens</name> <init>=
        <expr><call><name><name>subject</name><operator>.</operator><name>getPrivateCredentials</name></name><argument_list>(<argument><expr><name><name>NamedToken</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><specifier>final</specifier> <name>NamedToken</name></type> <name>namedToken</name> <range>: <expr><name>namedTokens</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>credentials</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name><name>namedToken</name><operator>.</operator><name>alias</name></name></expr></argument>, <argument><expr><name><name>namedToken</name><operator>.</operator><name>token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>Credentials</name><argument_list>(<argument><expr><call><name>getCredentialsInternal</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></for>
  
  <comment type="block" format="javadoc">/**
   * Add the given Credentials to this user.
   * @param credentials of tokens and secrets
   */</comment>
  <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>addCredentials</name><parameter_list>(<parameter><decl><type><name>Credentials</name></type> <name>credentials</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>getCredentialsInternal</name><argument_list>()</argument_list></call><operator>.</operator><call><name>addAll</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <specifier>synchronized</specifier> <name>Credentials</name></type> <name>getCredentialsInternal</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Credentials</name></type> <name>credentials</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Credentials</name></argument>&gt;</argument_list></name></type> <name>credentialsSet</name> <init>=
      <expr><call><name><name>subject</name><operator>.</operator><name>getPrivateCredentials</name></name><argument_list>(<argument><expr><name><name>Credentials</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>credentialsSet</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
      <expr_stmt><expr><name>credentials</name> <operator>=</operator> <call><name><name>credentialsSet</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>credentials</name> <operator>=</operator> <operator>new</operator> <call><name>Credentials</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>subject</name><operator>.</operator><name>getPrivateCredentials</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
     <return>return <expr><name>credentials</name></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestCredentials</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestCredentials</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">72d02dbc6e3</literal><operator>..</operator><name>cad0262a92d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestCredentials</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestCredentials</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testAddTokensToUGI</name><argument_list>()</argument_list></call> <block>{
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>service</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>creds</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name><name>service</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>token</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></for>}</block>
    <call><name><name>creds</name><operator>.</operator><name>addTokensToUGI</name></name><argument_list>(<argument><expr><name>ugi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ugi</name><operator>.</operator><name>addCredentials</name></name><argument_list>(<argument><expr><name>creds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>creds</name> <operator>=</operator> <call><name><name>ugi</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>service</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ce8ee28207c</name><operator>..</operator><name>a1bbd984d14</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>security</name><operator>/</operator><name><name>TestUserGroupInformation</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">250</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">250</literal></expr><operator>,</operator><expr><literal type="number">70</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testGettingGroups</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>ugi</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>checkTokens</name><argument_list>(<argument><expr><name>ugi</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
   </block_content>}</block></for>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation> <comment type="line">// from Mockito mocks</comment>
  <annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TokenIdentifier</name></extends></parameter>&gt;</parameter_list> <name>void</name></type> <name>testGetCreds</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>UserGroupInformation</name></type> <name>ugi</name> <init>= 
        <expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>createRemoteUser</name></name><argument_list>(<argument><expr><literal type="string">"someone"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
    
    <decl_stmt><decl><type><name>Text</name></type> <name>service</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"service"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>t1</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>Token</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>t1</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>service</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>t2</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>Token</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>t2</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"service2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>t3</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>Token</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>t3</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>service</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <comment type="line">// add token to ugi</comment>
    <expr_stmt><expr><call><name><name>ugi</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ugi</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>checkTokens</name><argument_list>(<argument><expr><name>ugi</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Credentials</name></type> <name>creds</name> <init>= <expr><call><name><name>ugi</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>creds</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><call><name><name>t3</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><call><name><name>creds</name><operator>.</operator><name>getToken</name></name><argument_list>(<argument><expr><name>service</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// check that ugi wasn't modified</comment>
    <expr_stmt><expr><call><name>checkTokens</name><argument_list>(<argument><expr><name>ugi</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation> <comment type="line">// from Mockito mocks</comment>
  <annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TokenIdentifier</name></extends></parameter>&gt;</parameter_list> <name>void</name></type> <name>testAddCreds</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>UserGroupInformation</name></type> <name>ugi</name> <init>= 
        <expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>createRemoteUser</name></name><argument_list>(<argument><expr><literal type="string">"someone"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
    
    <decl_stmt><decl><type><name>Text</name></type> <name>service</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"service"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>t1</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>Token</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>t1</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>service</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>t2</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>Token</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>t2</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"service2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>secret</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[]</index></name><block>{}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Text</name></type> <name>secretKey</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"sshhh"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// fill credentials</comment>
    <decl_stmt><decl><type><name>Credentials</name></type> <name>creds</name> <init>= <expr><operator>new</operator> <call><name>Credentials</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>creds</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><call><name><name>t1</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>creds</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><call><name><name>t2</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>creds</name><operator>.</operator><name>addSecretKey</name></name><argument_list>(<argument><expr><name>secretKey</name></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <comment type="line">// add creds to ugi, and check ugi</comment>
    <expr_stmt><expr><call><name><name>ugi</name><operator>.</operator><name>addCredentials</name></name><argument_list>(<argument><expr><name>creds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>checkTokens</name><argument_list>(<argument><expr><name>ugi</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name>secret</name></expr></argument>, <argument><expr><call><name><name>ugi</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSecretKey</name><argument_list>(<argument><expr><name>secretKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation> <comment type="line">// from Mockito mocks</comment>
  <annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>TokenIdentifier</name></extends></parameter>&gt;</parameter_list> <name>void</name></type> <name>testGetCredsNotSame</name><parameter_list>()</parameter_list>
      <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>UserGroupInformation</name></type> <name>ugi</name> <init>= 
        <expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>createRemoteUser</name></name><argument_list>(<argument><expr><literal type="string">"someone"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
    <decl_stmt><decl><type><name>Credentials</name></type> <name>creds</name> <init>= <expr><call><name><name>ugi</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// should always get a new copy</comment>
    <expr_stmt><expr><call><name>assertNotSame</name><argument_list>(<argument><expr><name>creds</name></expr></argument>, <argument><expr><call><name><name>ugi</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   
   <function><type><specifier>private</specifier> <name>void</name></type> <name>checkTokens</name><parameter_list>(<parameter><decl><type><name>UserGroupInformation</name></type> <name>ugi</name></decl></parameter>, <parameter><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <modifier>...</modifier></type> <name>tokens</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <comment type="line">// check the ugi's token collection</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">299</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">363</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>private</specifier> <name>void</name> <call><name>checkTokens</name><argument_list>(<argument><expr><name>UserGroupInformation</name> <name>ugi</name></expr></argument>, <argument><expr><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name> <operator>...</operator> <name>tokens</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>Token</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <name>t2</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>Token</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>t2</name><operator>.</operator><name>getService</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"t2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     
    <expr><name>Credentials</name> <name>creds</name> <operator>=</operator> <operator>new</operator> <call><name>Credentials</name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>byte</name><index>[]</index></name> <name>secretKey</name> <operator>=</operator> <operator>new</operator> <name><name>byte</name><index>[]</index></name><block>{}</block></expr>;
    <expr><name>Text</name> <name>secretName</name> <operator>=</operator> <operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"shhh"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>creds</name><operator>.</operator><name>addSecretKey</name></name><argument_list>(<argument><expr><name>secretName</name></expr></argument>, <argument><expr><name>secretKey</name></expr></argument>)</argument_list></call></expr>;
    
     <expr><call><name><name>ugi</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>ugi</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>ugi</name><operator>.</operator><name>addCredentials</name></name><argument_list>(<argument><expr><name>creds</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>TokenIdentifier</name></extends></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>z</name> <operator>=</operator> <call><name><name>ugi</name><operator>.</operator><name>getTokens</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>z</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>z</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>z</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>Credentials</name> <name>ugiCreds</name> <operator>=</operator> <call><name><name>ugi</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>assertSame</name><argument_list>(<argument><expr><name>secretKey</name></expr></argument>, <argument><expr><call><name><name>ugiCreds</name><operator>.</operator><name>getSecretKey</name></name><argument_list>(<argument><expr><name>secretName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>ugiCreds</name><operator>.</operator><name>numberOfSecretKeys</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>z</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>YarnChild</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>YarnChild</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">64ac83e8cfd</literal><operator>..</operator><name>c05c7aa69db</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>YarnChild</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapred</name><operator>/</operator><name><name>YarnChild</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>TaskUmbilicalProtocol</name> <call><name>run</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
       <expr><name>childUGI</name> <operator>=</operator> <call><name><name>UserGroupInformation</name><operator>.</operator><name>createRemoteUser</name></name><argument_list>(<argument><expr><call><name><name>System</name>
           <operator>.</operator><name>getenv</name></name><argument_list>(<argument><expr><call><name><name>ApplicationConstants</name><operator>.</operator><name>Environment</name><operator>.</operator><name>USER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <comment type="line">// Add tokens to new user so that it may execute its task correctly.</comment>
      <expr_stmt><expr><call><name><name>job</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addTokensToUGI</name><argument_list>(<argument><expr><name>childUGI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>childUGI</name><operator>.</operator><name>addCredentials</name></name><argument_list>(<argument><expr><name>credentials</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <comment type="line">// Create a final reference to the task for the doAs block</comment>
       <decl_stmt><decl><type><specifier>final</specifier> <name>Task</name></type> <name>taskFinal</name> <init>= <expr><name>task</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>v2</name><operator>/</operator><name>app</name><operator>/</operator><name><name>MRAppMaster</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>v2</name><operator>/</operator><name>app</name><operator>/</operator><name><name>MRAppMaster</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">463a3edec69</literal><operator>..</operator><name>d80653767e4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>v2</name><operator>/</operator><name>app</name><operator>/</operator><name><name>MRAppMaster</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>app</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name>v2</name><operator>/</operator><name>app</name><operator>/</operator><name><name>MRAppMaster</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">487</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">487</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>protected</specifier> <name>void</name> <call><name>downloadTokensAndSetupUGI</name><argument_list>(<argument><expr><name>Configuration</name> <name>conf</name></expr></argument>)</argument_list></call> <block>{
         <expr><call><name><name>fsTokens</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>Credentials</name><operator>.</operator><name>readTokenStorageFile</name></name><argument_list>(<argument><expr><name>jobTokenFile</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"jobSubmitDir="</literal> <operator>+</operator> <name>jobSubmitDir</name> <operator>+</operator> <literal type="string">" jobTokenFile="</literal>
             <operator>+</operator> <name>jobTokenFile</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>fsTokens</name><operator>.</operator><name>addTokensToUGI</name></name><argument_list>(<argument><expr><name>currentUser</name></expr></argument>)</argument_list></call></expr>; <comment type="line">// For use by AppMaster itself.</comment>
        <expr><call><name><name>currentUser</name><operator>.</operator><name>addCredentials</name></name><argument_list>(<argument><expr><name>fsTokens</name></expr></argument>)</argument_list></call></expr>; <comment type="line">// For use by AppMaster itself.</comment>
       }</block></expr></expr_stmt></block_content></block></try>
     }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>YarnException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TestJob</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TestJob</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6d2f5e6b692</literal><operator>..</operator><literal type="number">94f49acf971</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TestJob</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>project</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>/</operator><name>hadoop</name><operator>-</operator><name>mapreduce</name><operator>-</operator><name>client</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>mapreduce</name><operator>/</operator><name><name>TestJob</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapred</name><operator>.</operator><name>JobConf</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>JobStatus</name><operator>.</operator><name>State</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>mapreduce</name><operator>.</operator><name>protocol</name><operator>.</operator><name>ClientProtocol</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>Credentials</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>UserGroupInformation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>security</name><operator>.</operator><name>token</name><operator>.</operator><name>Token</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>void</name> <call><name>testJobToString</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
 
   <expr><annotation>@<name>Test</name></annotation>
   <specifier>public</specifier> <name>void</name> <call><name>testUGICredentialsPropogation</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>Credentials</name> <name>creds</name> <operator>=</operator> <operator>new</operator> <call><name>Credentials</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Token</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>token</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>Token</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Text</name></type> <name>service</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"service"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><name>UserGroupInformation</name></type> <name>ugi</name> <init>= <expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>getCurrentUser</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>ugi</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name>service</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Text</name></type> <name>tokenService</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"service"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Text</name></type> <name>secretName</name> <init>= <expr><operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>byte</name></type> <name><name>secret</name><index>[]</index></name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[]</index></name><block>{}</block></expr></init></decl>;</decl_stmt>
        
    <expr_stmt><expr><call><name><name>creds</name><operator>.</operator><name>addToken</name></name><argument_list>(<argument><expr><name>tokenService</name></expr></argument>,  <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>creds</name><operator>.</operator><name>addSecretKey</name></name><argument_list>(<argument><expr><name>secretName</name></expr></argument>, <argument><expr><name>secret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>UserGroupInformation</name><operator>.</operator><name>getLoginUser</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addCredentials</name><argument_list>(<argument><expr><name>creds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>JobConf</name></type> <name>jobConf</name> <init>= <expr><operator>new</operator> <call><name>JobConf</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Job</name></type> <name>job</name> <init>= <expr><operator>new</operator> <call><name>Job</name><argument_list>(<argument><expr><name>jobConf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name>token</name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getToken</name><argument_list>(<argument><expr><name>service</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name>token</name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getToken</name><argument_list>(<argument><expr><name>tokenService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name>secret</name></expr></argument>, <argument><expr><call><name><name>job</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSecretKey</name><argument_list>(<argument><expr><name>secretName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></catch>
 </block_content>}</block></function>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function>

</unit>
