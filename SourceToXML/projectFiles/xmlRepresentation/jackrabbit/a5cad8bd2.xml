<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/a5cad8bd2.java"><expr_stmt><expr><name>From</name> <name>a5cad8bd20e9069739aa70d523ee280f55b577b5</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Jukka</name> <name><name>Zitting</name> <argument_list type="generic">&lt;<argument><name>jukka</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">16</literal> <name>Feb</name> <literal type="number">2009</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">37</literal><operator>:</operator><literal type="number">19</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">1979</literal><operator>:</operator> <name>Deadlock</name> <name>on</name> <name>concurrent</name> <name>read</name> <operator>&amp;</operator> <name>transactional</name> <name>write</name>
 <name>operations</name>

<name>We</name> <name>can</name> <name>also</name> <name>move</name> <name>the</name> <call><name>other</name> <argument_list>(<argument><expr><name>than</name> <name>getReferences</name></expr></argument>)</argument_list></call> <name>virtual</name> <name>provider</name> <name>accesses</name> <name>outside</name> <name>the</name> <name>workspace</name> <name><name>lock</name><operator>.</operator> <name>This</name></name> <name>obsoletes</name> <name>the</name> <name>remaining</name> <name>parts</name> <name>of</name> <name>the</name> <literal type="string">"Use the JCR versioning API instead of the /jcr:system/jcr:versionStorage tree to access version information"</literal> <name><name>recommendation</name><operator>.</operator>


<name>git</name></name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@744911 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">53</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">28</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">25</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">60d70fc69</literal><operator>..</operator><literal type="number">426fa446e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">29</literal> <operator>+</operator><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">30</literal> @@ <specifier>public</specifier> <name>class</name> <name>SharedItemStateManager</name>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>ItemState</name> <call><name>getItemState</name><argument_list>(<argument><expr><name>ItemId</name> <name>id</name></expr></argument>)</argument_list></call>
             <throws>throws <argument><expr><name>NoSuchItemStateException</name></expr></argument>, <argument><expr><name>ItemStateException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
        <comment type="line">// check the virtual root ids (needed for overlay)</comment>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>isVirtualRoot</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
 
         <decl_stmt><decl><type><name><name>ISMLocking</name><operator>.</operator><name>ReadLock</name></name></type> <name>readLock</name> <init>= <expr><call><name>acquireReadLock</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

         <try>try <block>{<block_content>
            <comment type="line">// check the virtual root ids (needed for overlay)</comment>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>isVirtualRoot</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
             <comment type="line">// check internal first</comment>
             <if_stmt><if>if <condition>(<expr><call><name>hasNonVirtualItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                 <return>return <expr><call><name>getNonVirtualItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
             </block_content>}</block></if></if_stmt>
            <comment type="line">// check if there is a virtual state for the specified item</comment>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>hasItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
         </block_content>}</block> <finally>finally <block>{<block_content>
             <expr_stmt><expr><call><name><name>readLock</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></finally></try>

        <comment type="line">// check if there is a virtual state for the specified item</comment>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>hasItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>

         <throw>throw <expr><operator>new</operator> <call><name>NoSuchItemStateException</name><argument_list>(<argument><expr><call><name><name>id</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
     }
 
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">273</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SharedItemStateManager</name>
      <operator>*</operator> <block>{@<expr><name>inheritDoc</name></expr>}</block>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>boolean</name> <call><name>hasItemState</name><argument_list>(<argument><expr><name>ItemId</name> <name>id</name></expr></argument>)</argument_list></call> <block>{
        <comment type="line">// check the virtual root ids (needed for overlay)</comment>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>isVirtualRoot</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for>}</block></expr></expr_stmt>
        }
 
         ISMLocking<expr_stmt><expr><operator>.</operator><name>ReadLock</name> <name>readLock</name></expr>;</expr_stmt>
         <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">286</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">293</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>SharedItemStateManager</name></expr></expr_stmt>
                 <return>return <expr><literal type="boolean">true</literal></expr>;</return>
             </block_content>}</block></try>
 
            <comment type="line">// check the virtual root ids (needed for overlay)</comment>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>isVirtualRoot</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
             <comment type="line">// check if this manager has the item state</comment>
             <if_stmt><if>if <condition>(<expr><call><name>hasNonVirtualItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                 <return>return <expr><literal type="boolean">true</literal></expr>;</return>
             </block_content>}</block></if></if_stmt>
            <comment type="line">// otherwise check virtual ones</comment>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>hasItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
         } finally <block>{<block_content>
             <expr_stmt><expr><call><name><name>readLock</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block>

        <comment type="line">// otherwise check virtual ones</comment>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>virtualProviders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>virtualProviders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>hasItemState</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>

         <return>return <expr><literal type="boolean">false</literal></expr>;</return>
     }
 
- 
<expr><literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
