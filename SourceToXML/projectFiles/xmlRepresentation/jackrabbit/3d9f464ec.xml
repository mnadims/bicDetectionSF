<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/3d9f464ec.java"><expr_stmt><expr><name>From</name> <literal type="number">3d9f464ecd343326e34181d8b72af330bcb17b1b</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Alexandru</name> <name><name>Parvulescu</name> <argument_list type="generic">&lt;<argument><name>alexparvulescu</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">24</literal> <name>Jun</name> <literal type="number">2011</literal> <literal type="number">09</literal><operator>:</operator><literal type="number">46</literal><operator>:</operator><literal type="number">30</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">3001</literal> <name>DescendantSelfAxisQuery</name> <name>may</name> <name>fail</name> <name>with</name> <name>IOException</name>
 <name>when</name> <name>session</name> <name>has</name> <name>limited</name> <name>access</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@1139224 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DescendantSelfAxisQuery</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">37</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeImplTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>LimitedAccessQueryTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">92</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">123</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">16</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>LimitedAccessQueryTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DescendantSelfAxisQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DescendantSelfAxisQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">894444da9</literal><operator>..</operator><name>bae88d752</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DescendantSelfAxisQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DescendantSelfAxisQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>SessionImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AbstractHitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>ItemNotFoundException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Node</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>DescendantSelfAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
     <comment type="block" format="javadoc">/**
      * {@inheritDoc}
      */</comment>
    <expr><specifier>public</specifier> <name>void</name> <call><name>extractTerms</name><argument_list>(<argument><expr><name>Set</name> <name>terms</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>void</name> <call><name>extractTerms</name><argument_list>(<argument><expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Term</name></argument>&gt;</argument_list></name> <name>terms</name></expr></argument>)</argument_list></call> <block>{
         <expr><call><name><name>contextQuery</name><operator>.</operator><name>extractTerms</name></name><argument_list>(<argument><expr><name>terms</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>subQuery</name><operator>.</operator><name>extractTerms</name></name><argument_list>(<argument><expr><name>terms</name></expr></argument>)</argument_list></call></expr>;
     }</block>
@@ <operator>-</operator><literal type="number">240</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">243</literal></expr>,<expr><literal type="number">17</literal> @@ <name>class</name> <name>DescendantSelfAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
                 }</block>
 
                 <name>ScoreNode</name> <name>sn</name></expr>;
                <try>try <block>{<block_content>
                    <while>while <condition>(<expr><operator>(</operator><name>sn</name> <operator>=</operator> <call><name><name>result</name><operator>.</operator><name>nextScoreNode</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <decl_stmt><decl><type><name>Node</name></type> <name>node</name> <init>= <expr><call><name><name>session</name><operator>.</operator><name>getNodeById</name></name><argument_list>(<argument><expr><call><name><name>sn</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <while>while <condition>(<expr><operator>(</operator><name>sn</name> <operator>=</operator> <call><name><name>result</name><operator>.</operator><name>nextScoreNode</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>NodeId</name></type> <name>id</name> <init>= <expr><call><name><name>sn</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <try>try <block>{<block_content>
                        <decl_stmt><decl><type><name>Node</name></type> <name>node</name> <init>= <expr><call><name><name>session</name><operator>.</operator><name>getNodeById</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                         <expr_stmt><expr><call><name><name>startingPoints</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>node</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>sn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt/></block_content></block></try></block_content></block></while></block_content></block></while></block_content></block></try>}</block></expr> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                        <comment type="line">// JCR-3001 access denied to score node, will just skip it</comment>
                        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Access denied to node id {}."</literal></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt/></block_content></block></catch>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>RepositoryException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                        <throw>throw <expr><call><name><name>Util</name><operator>.</operator><name>createIOException</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                     </block_content>}</block></catch>
                } catch <expr_stmt><expr><operator>(</operator><name>RepositoryException</name> <name>e</name><operator>)</operator> <block>{
                    <throw>throw <argument_list>Util<argument><expr><operator>.</operator><call><name>createIOException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
                 }</block></expr></expr_stmt>
             } finally <block>{<block_content>
                 <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">297</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">304</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <name>class</name> <name>DescendantSelfAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
                     <if_stmt><if>if <condition>(<expr><name>currentTraversal</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                         <expr_stmt><expr><call><name><name>currentTraversal</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>scoreNodes</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>currentTraversal</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
                    <comment type="line">// We only need one node, but because of the acls, we'll</comment>
                    <comment type="line">// iterate until we find a good one</comment>
                    <while>while <condition>(<expr><call><name><name>scoreNodes</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                         <decl_stmt><decl><type><name>ScoreNode</name></type> <name>sn</name> <init>= <expr><call><name><name>scoreNodes</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name>NodeId</name></type> <name>id</name> <init>= <expr><call><name><name>sn</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                         <try>try <block>{<block_content>
                            <decl_stmt><decl><type><name>Node</name></type> <name>node</name> <init>= <expr><call><name><name>session</name><operator>.</operator><name>getNodeById</name></name><argument_list>(<argument><expr><call><name><name>sn</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                            <expr_stmt><expr><name>currentTraversal</name> <operator>=</operator> <operator>new</operator> <call><name>NodeTraversingQueryHits</name><argument_list>(<argument><expr><name>node</name></expr></argument>,
                                    <argument><expr><call><name>getMinLevels</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <decl_stmt><decl><type><name>Node</name></type> <name>node</name> <init>= <expr><call><name><name>session</name><operator>.</operator><name>getNodeById</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                            <expr_stmt><expr><name>currentTraversal</name> <operator>=</operator> <operator>new</operator> <call><name>NodeTraversingQueryHits</name><argument_list>(
                                    <argument><expr><name>node</name></expr></argument>, <argument><expr><call><name>getMinLevels</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <break>break;</break>
                        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                            <comment type="line">// JCR-3001 node access denied, will just skip it</comment>
                            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Access denied to node id {}."</literal></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                         </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>RepositoryException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                             <throw>throw <expr><call><name><name>Util</name><operator>.</operator><name>createIOException</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                         </block_content>}</block></catch></try>
                    </block_content>}</block></while> <if_stmt><else>else <block>{<block_content>
                        <expr_stmt><expr><name>currentTraversal</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
                     </block_content>}</block></else></if_stmt>
                 </block_content>}</block></if></if_stmt>
             </block_content>}</block><empty_stmt>;</empty_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeImplTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeImplTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a44997c7f</name><operator>..</operator><name>f587e5622</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeImplTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeImplTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>api</name><operator>.</operator><name>security</name><operator>.</operator><name>JackrabbitAccessControlList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>commons</name><operator>.</operator><name>JcrUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>AbstractJCRTest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>NotExecutableException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>RepositoryHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NodeImplTest</name> extends <name>AbstractJCRTest</name> <block>{
         }</block></expr></expr_stmt>
     }
 
    private <function><type><specifier>static</specifier> <name>void</name></type> <name>changeReadPermission</name><parameter_list>(<parameter><decl><type><name>Principal</name></type> <name>principal</name></decl></parameter>, <parameter><decl><type><name>Node</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>allowRead</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>NotExecutableException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>changeReadPermission</name><parameter_list>(<parameter><decl><type><name>Principal</name></type> <name>principal</name></decl></parameter>, <parameter><decl><type><name>Node</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>allowRead</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>NotExecutableException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>SessionImpl</name></type> <name>s</name> <init>= <expr><operator>(</operator><name>SessionImpl</name><operator>)</operator> <call><name><name>n</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>JackrabbitAccessControlList</name></type> <name>acl</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>AccessControlManager</name></type> <name>acMgr</name> <init>= <expr><call><name><name>s</name><operator>.</operator><name>getAccessControlManager</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>NodeImplTest</name> extends <name>AbstractJCRTest</name> <block>{
         }</block></expr></expr_stmt>
     </block_content>}</block></function>
 
    <function><type><specifier>private</specifier> <name>Principal</name></type> <name>getReadOnlyPrincipal</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>NotExecutableException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>SessionImpl</name></type> <name>s</name> <init>= <expr><operator>(</operator><name>SessionImpl</name><operator>)</operator> <call><name>getHelper</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReadOnlySession</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Principal</name></type> <name>getReadOnlyPrincipal</name><parameter_list>(<parameter><decl><type><name>RepositoryHelper</name></type> <name>helper</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>NotExecutableException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>SessionImpl</name></type> <name>s</name> <init>= <expr><operator>(</operator><name>SessionImpl</name><operator>)</operator> <call><name><name>helper</name><operator>.</operator><name>getReadOnlySession</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
             <for>for <control>(<init><decl><type><name>Principal</name></type> <name>p</name> <range>: <expr><call><name><name>s</name><operator>.</operator><name>getSubject</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPrincipals</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                 <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>p</name> <operator>instanceof</operator> <name>Group</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NodeImplTest</name> extends <name>AbstractJCRTest</name> <block>{
         <expr><name>NodeImpl</name> <name>testNode</name> <operator>=</operator> <operator>(</operator><name>NodeImpl</name><operator>)</operator> <call><name><name>n</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><name>nodeName2</name></expr></argument>)</argument_list></call></expr>;
         <call><name><name>testRootNode</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
        <decl_stmt><decl><type><name>Principal</name></type> <name>principal</name> <init>= <expr><call><name>getReadOnlyPrincipal</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Principal</name></type> <name>principal</name> <init>= <expr><call><name>getReadOnlyPrincipal</name><argument_list>(<argument><expr><call><name>getHelper</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name>changeReadPermission</name><argument_list>(<argument><expr><name>principal</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>changeReadPermission</name><argument_list>(<argument><expr><name>principal</name></expr></argument>, <argument><expr><name>testNode</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>LimitedAccessQueryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>LimitedAccessQueryTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..308c12c54</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>LimitedAccessQueryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">92</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>Principal</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>ItemNotFoundException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Node</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Session</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>query</name><operator>.</operator><name>Query</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>NodeImplTest</name></name>;</import>

<comment type="block" format="javadoc">/**
 * &lt;code&gt;LimitedAccessQueryTest&lt;/code&gt; tests queries that include nodes that are
 * outside their access.
 */</comment>
<class><specifier>public</specifier> class <name>LimitedAccessQueryTest</name> <super_list><extends>extends <super><name>AbstractQueryTest</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>Session</name></type> <name>readOnly</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Principal</name></type> <name>principal</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>Node</name></type> <name>a</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Node</name></type> <name>b</name></decl>;</decl_stmt>

    <function><type><specifier>protected</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>a</name> <operator>=</operator> <call><name><name>testRootNode</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><literal type="string">"a"</literal></expr></argument>, <argument><expr><literal type="string">"nt:unstructured"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>a</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>b</name> <operator>=</operator> <call><name><name>testRootNode</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><literal type="string">"b"</literal></expr></argument>, <argument><expr><literal type="string">"nt:unstructured"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>b</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"p"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>superuser</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>principal</name> <operator>=</operator> <call><name><name>NodeImplTest</name><operator>.</operator><name>getReadOnlyPrincipal</name></name><argument_list>(<argument><expr><call><name>getHelper</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>NodeImplTest</name><operator>.</operator><name>changeReadPermission</name></name><argument_list>(<argument><expr><name>principal</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>superuser</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>readOnly</name> <operator>=</operator> <call><name>getHelper</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReadOnlySession</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// preliminary tests</comment>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>readOnly</name><operator>.</operator><name>getNodeByIdentifier</name></name><argument_list>(<argument><expr><call><name><name>a</name><operator>.</operator><name>getIdentifier</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Access to the node '"</literal> <operator>+</operator> <call><name><name>a</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"' has to be denied."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// good acl</comment>
        </block_content>}</block></catch></try>

        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>readOnly</name><operator>.</operator><name>getNodeByIdentifier</name></name><argument_list>(<argument><expr><call><name><name>b</name><operator>.</operator><name>getIdentifier</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>

    </block_content>}</block></function>

    <function><type><specifier>protected</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>readOnly</name><operator>.</operator><name>logout</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>NodeImplTest</name><operator>.</operator><name>changeReadPermission</name></name><argument_list>(<argument><expr><name>principal</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>tearDown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * this test is for the DescendantSelfAxisQuery class.
     * 
     * see &lt;a href="https://issues.apache.org/jira/browse/JCR-3001"&gt;JCR-3001&lt;/a&gt;
     * 
     * @throws Exception
     */</comment>
    <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testDescendantSelfAxisQuery</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>xpath</name> <init>= <expr><literal type="string">"/"</literal> <operator>+</operator> <call><name><name>testRootNode</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"//*"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>checkResult</name><argument_list>(
                <argument><expr><call><name><name>readOnly</name><operator>.</operator><name>getWorkspace</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getQueryManager</name><argument_list>()</argument_list></call>
                        <operator>.</operator><call><name>createQuery</name><argument_list>(<argument><expr><name>xpath</name></expr></argument>, <argument><expr><name><name>Query</name><operator>.</operator><name>XPATH</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>execute</name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><operator>new</operator> <name><name>Node</name><index>[]</index></name> <block>{ <expr><name>b</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">708e9c5c6</literal><operator>..</operator><literal type="number">50d0e9c29</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAll</name> extends <name>TestCase</name> <block>{
         <expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>SQL2OuterJoinTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
         <call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>SQL2PathEscapingTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>SQL2QueryResultTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>LimitedAccessQueryTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <return>return <expr><name>suite</name></expr>;</return>
     </block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></for></block_content></block></try></block_content></block></function></block_content></block></function></block_content></block></function>

</unit>
