<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/a07fe82df.java"><expr_stmt><expr><name>From</name> <name>a07fe82df90ebc16519e0091811bb22880fc9a22</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Julian</name> <name><name>Reschke</name> <argument_list type="generic">&lt;<argument><name>reschke</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">4</literal> <name>Jul</name> <literal type="number">2016</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">26</literal><operator>:</operator><literal type="number">25</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">3987</literal><operator>:</operator> <name><name>JcrUtils</name><operator>.</operator><name>getOrCreateByPath</name></name> <name>fails</name></expr></expr_stmt> <if_stmt><if>if session is not
 allowed to read root

<condition>(<expr><name>patch</name> <name>by</name> <name>Carsten</name> <name>Ziegeler</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@1751279 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name><name>JcrUtils</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">21</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">21</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name><name>JcrUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name><name>JcrUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ad99be0fd</name><operator>..</operator><literal type="number">4fefe019a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name><name>JcrUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name><name>JcrUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1543</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1543</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@ <specifier>public</specifier> <name>class</name> <name>JcrUtils</name> <block>{
             <return>return <expr><call><name><name>baseNode</name><operator>.</operator><name>getNode</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
         }</block></expr></expr_stmt></block_content></block></if></if_stmt>
 
        <comment type="line">// find the parent that exists</comment>
        <comment type="line">// we can start from the deepest child in tree</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>fullPath</name> <init>= <expr><ternary><condition><expr><call><name><name>baseNode</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="string">"/"</literal> <operator>+</operator> <name>path</name></expr> </then><else>: <expr><call><name><name>baseNode</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>path</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>currentIndex</name> <init>= <expr><call><name><name>fullPath</name><operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>temp</name> <init>= <expr><name>fullPath</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>existingPath</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><name>currentIndex</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name><name>temp</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>currentIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// break when first existing parent is found</comment>
            <if_stmt><if>if <condition>(<expr><call><name><name>baseNode</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>itemExists</name><argument_list>(<argument><expr><name>temp</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>existingPath</name> <operator>=</operator> <name>temp</name></expr>;</expr_stmt>
                <break>break;</break>
            </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><name>currentIndex</name> <operator>=</operator> <call><name><name>temp</name><operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>

        <if_stmt><if>if <condition>(<expr><name>existingPath</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>baseNode</name> <operator>=</operator> <call><name><name>baseNode</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNode</name><argument_list>(<argument><expr><name>existingPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>path</name> <operator>=</operator> <call><name><name>path</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>existingPath</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

         <decl_stmt><decl><type><name>Node</name></type> <name>node</name> <init>= <expr><name>baseNode</name></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><call><name><name>path</name><operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
