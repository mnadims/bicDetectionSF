<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/818cb1017.java"><expr_stmt><expr><name>From</name> <literal type="number">818cb101757d45853ba53a428c4b60d72d30a03b</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Jukka</name> <name><name>Zitting</name> <argument_list type="generic">&lt;<argument><name>jukka</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">26</literal> <name>May</name> <literal type="number">2009</literal> <literal type="number">10</literal><operator>:</operator><literal type="number">26</literal><operator>:</operator><literal type="number">13</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">134</literal><operator>:</operator> <name>Unreferenced</name> <name>VersionHistory</name> <name>should</name> <name>be</name> <name>deleted</name>
 <name>automatically</name>
<name>MIME</name><operator>-</operator><name>Version</name><operator>:</operator> <literal type="number">1.0</literal>
<name>Content</name><operator>-</operator><name>Type</name><operator>:</operator> <name>text</name><operator>/</operator><name>plain</name></expr>;</expr_stmt> <expr_stmt><expr><name>charset</name><operator>=</operator><name>UTF</name><operator>-</operator><literal type="number">8</literal>
<name>Content</name><operator>-</operator><name>Transfer</name><operator>-</operator><name>Encoding</name><operator>:</operator> <literal type="number">8bit</literal>

<name>Applied</name> <name>patch</name> <name>contributed</name> <name>by</name> <name>SÃ©bastien</name> <name>Launay</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@778645 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>AbstractVersionManager</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">27</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>version</name><operator>/</operator><name><name>InternalVersionHistoryImpl</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">23</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>VersionManagerImpl</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>XAVersionManager</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>RemoveOrphanVersionHistoryTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">154</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">220</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">18</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>RemoveOrphanVersionHistoryTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>AbstractVersionManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>AbstractVersionManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f0ff6ebeb</name><operator>..</operator><literal type="number">40d9b307f</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>AbstractVersionManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>AbstractVersionManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>version</name><operator>.</operator><name>VersionException</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * Base implementation of the {@link VersionManager} interface.
  * &lt;p/&gt;
 * All read operations must aquire the read lock before reading, all write
 * operations must aquire the write lock.
 * All read operations must acquire the read lock before reading, all write
 * operations must acquire the write lock.
  */</comment>
 <class><specifier>abstract</specifier> class <name>AbstractVersionManager</name> <super_list><implements>implements <super><name>VersionManager</name></super></implements></super_list> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>AbstractVersionManager</name> implements <name>VersionManager</name> <block>{
     <comment type="block" format="javadoc">/**
      * Returns the item with the given persistent id. Subclass responsibility.
      * &lt;p/&gt;
     * Please note, that the overridden method must aquire the readlock before
     * Please note, that the overridden method must acquire the readlock before
      * reading the state manager.
      *
      * @param id the id of the item
@@ -312,18 +312,31 @@ abstract class AbstractVersionManager implements VersionManager {
 
     /**
      * Checks if there are item references (from outside the version storage)
     * that reference the given version item. Subclass responsiblity.
     * that reference the given node. Subclass responsibility.
      * &lt;p/&gt;
     * Please note, that the overridden method must aquire the readlock before
     * Please note, that the overridden method must acquire the readlock before
      * reading the state manager.
      *
     * @param item version item
     * @param id the id of the node
      * @return &lt;code&gt;true&lt;/code&gt; if there are item references from outside the
      *         version storage; &lt;code&gt;false&lt;/code&gt; otherwise.
      * @throws RepositoryException if an error occurs while reading from the
      *                             repository.
      */</comment>
    <expr><specifier>protected</specifier> <specifier>abstract</specifier> <name>boolean</name> <call><name>hasItemReferences</name><argument_list>(<argument><expr><name>InternalVersionItem</name> <name>item</name></expr></argument>)</argument_list></call>
    <specifier>protected</specifier> <specifier>abstract</specifier> <name>boolean</name> <call><name>hasItemReferences</name><argument_list>(<argument><expr><name>NodeId</name> <name>id</name></expr></argument>)</argument_list></call>
            <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws></expr>;

    <comment type="block" format="javadoc">/**
     * Returns the node with the given persistent id. Subclass responsibility.
     * &lt;p/&gt;
     * Please note, that the overridden method must acquire the readlock before
     * reading the state manager.
     *
     * @param id the id of the node
     * @throws RepositoryException if an error occurs while reading from the
     *                             repository.
     */</comment>
    <expr><specifier>protected</specifier> <specifier>abstract</specifier> <name>NodeStateEx</name> <call><name>getNodeStateEx</name><argument_list>(<argument><expr><name>NodeId</name> <name>id</name></expr></argument>)</argument_list></call>
             <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws></expr>;
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java
index 39bccec7d..65df0ea01 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalVersionHistoryImpl.java
@@ -375,7 +375,7 @@ class InternalVersionHistoryImpl extends InternalVersionItemImpl
             throw new VersionException(msg);
         }
         // check if any references (from outside the version storage) exist on this version
        if (vMgr.hasItemReferences(v)) {
        if (vMgr.hasItemReferences(v.getId())) {
             throw new ReferentialIntegrityException("Unable to remove version. At least once referenced.");
         }
 
@@ -396,8 +396,25 @@ class InternalVersionHistoryImpl extends InternalVersionItemImpl
         nameCache.remove(versionName);
         vMgr.versionDestroyed(v);
 
        // store changes
        node.store();
        // Check if this was the last version in addition to the root version
        if (!vMgr.hasItemReferences(node.getNodeId())) {
            log.debug("Current version history has no references");
            NodeStateEx[] childNodes = node.getChildNodes();

            // Check if there is only root version and version labels nodes
            if (childNodes.length == 2) {
                log.debug("Removing orphan version history as it contains only two children");
                NodeStateEx parentNode = vMgr.getNodeStateEx(node.getParentId());
                // Remove version history node
                parentNode.removeNode(node.getName());
                // store changes for this node and his children
                parentNode.store();
            }
        } else {
            log.debug("Current version history has at least one reference");
            // store changes
            node.store();
        }
 
         // now also remove from labelCache
         for (int i = 0; i &lt; labels.length; i++) {
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionManagerImpl.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionManagerImpl.java
index 2081daacd..744f394ae 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionManagerImpl.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/VersionManagerImpl.java
@@ -411,14 +411,19 @@ public class VersionManagerImpl extends AbstractVersionManager implements ItemSt
     /**
      * {@inheritDoc}
      */</comment>
    <expr><specifier>protected</specifier> <name>boolean</name> <call><name>hasItemReferences</name><argument_list>(<argument><expr><name>InternalVersionItem</name> <name>item</name></expr></argument>)</argument_list></call>
    <specifier>protected</specifier> <name>boolean</name> <call><name>hasItemReferences</name><argument_list>(<argument><expr><name>NodeId</name> <name>id</name></expr></argument>)</argument_list></call>
            <throws>throws <argument><expr><name>RepositoryException</name> <block>{</block></expr></argument></throws></expr>
        <return>return <expr><call><name><name>stateMgr</name><operator>.</operator><name>hasNodeReferences</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NodeReferencesId</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></expr></expr_stmt>

    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>protected</specifier> <name>NodeStateEx</name></type> <name>getNodeStateEx</name><parameter_list>(<parameter><decl><type><name>NodeId</name></type> <name>parentNodeId</name></decl></parameter>)</parameter_list>
             <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws> <block>{<block_content>
         <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>NodeReferences</name></type> <name>refs</name> <init>= <expr><call><name><name>stateMgr</name><operator>.</operator><name>getNodeReferences</name></name><argument_list>(
                    <argument><expr><operator>new</operator> <call><name>NodeReferencesId</name><argument_list>(<argument><expr><call><name><name>item</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><call><name><name>refs</name><operator>.</operator><name>hasReferences</name></name><argument_list>()</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchItemStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
            <decl_stmt><decl><type><name>NodeState</name></type> <name>state</name> <init>= <expr><operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>stateMgr</name><operator>.</operator><name>getItemState</name></name><argument_list>(<argument><expr><name>parentNodeId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><operator>new</operator> <call><name>NodeStateEx</name><argument_list>(<argument><expr><name>stateMgr</name></expr></argument>, <argument><expr><name>ntReg</name></expr></argument>, <argument><expr><name>state</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>XAVersionManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>XAVersionManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a8ab7e5b7</name><operator>..</operator><literal type="number">5519d41c5</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>XAVersionManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>XAVersionManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">370</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">370</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>XAVersionManager</name> extends <name>AbstractVersionManager</name>
     <comment type="block" format="javadoc">/**
      * {@inheritDoc}
      */</comment>
    <specifier>protected</specifier> <name>boolean</name> <call><name>hasItemReferences</name><argument_list>(<argument><expr><name>InternalVersionItem</name> <name>item</name></expr></argument>)</argument_list></call>
    <specifier>protected</specifier> <name>boolean</name> <call><name>hasItemReferences</name><argument_list>(<argument><expr><name>NodeId</name> <name>id</name></expr></argument>)</argument_list></call>
             <throws>throws <argument><expr><name>RepositoryException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
        <return>return <expr><call><name><name>session</name><operator>.</operator><name>getNodeById</name></name><argument_list>(<argument><expr><call><name><name>item</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReferences</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasNext</name><argument_list>()</argument_list></call></expr>;</return>
        <return>return <expr><call><name><name>session</name><operator>.</operator><name>getNodeById</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReferences</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasNext</name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>protected</specifier> <name>NodeStateEx</name></type> <name>getNodeStateEx</name><parameter_list>(<parameter><decl><type><name>NodeId</name></type> <name>parentNodeId</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>NodeState</name></type> <name>state</name> <init>= <expr><operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>stateMgr</name><operator>.</operator><name>getItemState</name></name><argument_list>(<argument><expr><name>parentNodeId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><operator>new</operator> <call><name>NodeStateEx</name><argument_list>(<argument><expr><name>stateMgr</name></expr></argument>, <argument><expr><name>ntReg</name></expr></argument>, <argument><expr><name>state</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/version/RemoveOrphanVersionHistoryTest.java b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/version/RemoveOrphanVersionHistoryTest.java
new file mode 100644
index 000000000..88c741b28
-- /dev/null
++ b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/version/RemoveOrphanVersionHistoryTest.java
@@ -0,0 +1,154 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>version</name></name>;</package>

<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>ItemNotFoundException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Node</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Session</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>SimpleCredentials</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Workspace</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>version</name><operator>.</operator><name>Version</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>version</name><operator>.</operator><name>VersionHistory</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>AbstractJCRTest</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Test case for JCR-134.
 */</comment>
<class><specifier>public</specifier> class <name>RemoveOrphanVersionHistoryTest</name> <super_list><extends>extends <super><name>AbstractJCRTest</name></super></extends></super_list> <block>{

    <comment type="block" format="javadoc">/**
     * Test orphan version history cleaning in a single workspace.
     * @throws RepositoryException if an error occurs.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testRemoveOrphanVersionHistory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Node</name></type> <name>n</name> <init>= <expr><call><name><name>testRootNode</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><name>nodeName1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>n</name><operator>.</operator><name>addMixin</name></name><argument_list>(<argument><expr><name>mixVersionable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>testRootNode</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Session</name></type> <name>session</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>VersionHistory</name></type> <name>vh</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getVersionHistory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vhUuid</name> <init>= <expr><call><name><name>vh</name><operator>.</operator><name>getUUID</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// First version</comment>
        <decl_stmt><decl><type><name>Version</name></type> <name>v10</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>checkin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>n</name><operator>.</operator><name>checkout</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Second version</comment>
        <decl_stmt><decl><type><name>Version</name></type> <name>v11</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>checkin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>n</name><operator>.</operator><name>checkout</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove node</comment>
        <expr_stmt><expr><call><name><name>n</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>testRootNode</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove the first version</comment>
        <expr_stmt><expr><call><name><name>vh</name><operator>.</operator><name>removeVersion</name></name><argument_list>(<argument><expr><call><name><name>v10</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove the second and last version</comment>
        <expr_stmt><expr><call><name><name>vh</name><operator>.</operator><name>removeVersion</name></name><argument_list>(<argument><expr><call><name><name>v11</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>session</name><operator>.</operator><name>getNodeByUUID</name></name><argument_list>(<argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Orphan version history must have been removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// Expected</comment>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Test orphan version history cleaning in multiple workspace.
     * @throws RepositoryException if an error occurs.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testWorkspaceRemoveOrphanVersionHistory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Node</name></type> <name>n</name> <init>= <expr><call><name><name>testRootNode</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><name>nodeName1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>n</name><operator>.</operator><name>addMixin</name></name><argument_list>(<argument><expr><name>mixVersionable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>testRootNode</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Session</name></type> <name>session</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>VersionHistory</name></type> <name>vh</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getVersionHistory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vhUuid</name> <init>= <expr><call><name><name>vh</name><operator>.</operator><name>getUUID</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// First version</comment>
        <decl_stmt><decl><type><name>Version</name></type> <name>v10</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>checkin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>n</name><operator>.</operator><name>checkout</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Workspace</name></type> <name>defaultWorkspace</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getWorkspace</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Session</name></type> <name>otherWsSession</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRepository</name><argument_list>()</argument_list></call><operator>.</operator><call><name>login</name><argument_list>(<argument><expr><operator>new</operator> <call><name>SimpleCredentials</name><argument_list>(<argument><expr><literal type="string">"superuser"</literal></expr></argument>, <argument><expr><literal type="string">""</literal><operator>.</operator><call><name>toCharArray</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>workspaceName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// Clone the node in another workspace</comment>
        <expr_stmt><expr><call><name><name>otherWsSession</name><operator>.</operator><name>getWorkspace</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>clone</name><argument_list>(<argument><expr><call><name><name>defaultWorkspace</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>n</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>n</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Node</name></type> <name>otherWsRootNode</name> <init>= <expr><call><name><name>otherWsSession</name><operator>.</operator><name>getRootNode</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Node</name></type> <name>clonedNode</name> <init>= <expr><call><name><name>otherWsRootNode</name><operator>.</operator><name>getNode</name></name><argument_list>(<argument><expr><call><name><name>n</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>substring</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// Ensure that version histories are the same</comment>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>vhUuid</name></expr></argument>, <argument><expr><call><name><name>clonedNode</name><operator>.</operator><name>getVersionHistory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUUID</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Version</name></type> <name>v11</name> <init>= <expr><call><name><name>clonedNode</name><operator>.</operator><name>checkin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>clonedNode</name><operator>.</operator><name>checkout</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove node</comment>
        <expr_stmt><expr><call><name><name>n</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>testRootNode</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>otherWsSession</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove the first version</comment>
        <expr_stmt><expr><call><name><name>vh</name><operator>.</operator><name>removeVersion</name></name><argument_list>(<argument><expr><call><name><name>v10</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>otherWsSession</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove cloned node</comment>
        <expr_stmt><expr><call><name><name>clonedNode</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>otherWsRootNode</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertExists</name><argument_list>(<argument><expr><name>otherWsSession</name></expr></argument>, <argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove the last version</comment>
        <expr_stmt><expr><call><name><name>vh</name><operator>.</operator><name>removeVersion</name></name><argument_list>(<argument><expr><call><name><name>v11</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>session</name><operator>.</operator><name>getNodeByUUID</name></name><argument_list>(<argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Orphan version history must have been removed from the default workspace"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// Expected</comment>
        </block_content>}</block></catch></try>

        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>otherWsSession</name><operator>.</operator><name>getNodeByUUID</name></name><argument_list>(<argument><expr><name>vhUuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Orphan version history must have been removed from the other workspace"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// Expected</comment>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Assert that a node exists in a session.
     * @param session the session.
     * @param uuid the node's UUID.
     * @throws RepositoryException if an error occurs.
     */</comment>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>assertExists</name><parameter_list>(<parameter><decl><type><name>Session</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>uuid</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws>
    <block>{<block_content>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>session</name><operator>.</operator><name>getNodeByUUID</name></name><argument_list>(<argument><expr><name>uuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Unknown uuid: "</literal> <operator>+</operator> <name>uuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block></class>

</unit>
