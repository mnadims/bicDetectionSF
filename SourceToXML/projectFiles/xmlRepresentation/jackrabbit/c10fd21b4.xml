<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/c10fd21b4.java"><expr_stmt><expr><name>From</name> <name>c10fd21b4f38eca0d655080836f4e5cd8132e3f0</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Marcel</name> <name><name>Reutegger</name> <argument_list type="generic">&lt;<argument><name>mreutegg</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">22</literal> <name>Jul</name> <literal type="number">2009</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">55</literal><operator>:</operator><literal type="number">29</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">2222</literal><operator>:</operator> <name>Unclosed</name> <name>files</name> <name>when</name> <name>aggregated</name> <name>property</name> <name>states</name> <name>are</name>
 <name>indexed</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@796757 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SearchIndex</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">38</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">21</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">17</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SearchIndex</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SearchIndex</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">63b54ff57</literal><operator>..</operator><name>bad611246</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SearchIndex</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SearchIndex</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1315</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">1315</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>SearchIndex</name> extends <name>AbstractQueryHandler</name> <block>{
                             <expr><name>String</name> <name>namePrefix</name> <operator>=</operator> <call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><call><name>getNamespaceMappings</name><argument_list>()</argument_list></call><operator>.</operator><call><name>translateName</name><argument_list>(<argument><expr><call><name><name>propState</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
                             <expr><name>NodeState</name> <name>parent</name> <operator>=</operator> <operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>ism</name><operator>.</operator><name>getItemState</name></name><argument_list>(<argument><expr><call><name><name>propState</name><operator>.</operator><name>getParentId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
                             <expr><name>Document</name> <name>aDoc</name> <operator>=</operator> <call><name>createDocument</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><call><name>getNamespaceMappings</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getIndex</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexFormatVersion</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
                            <comment type="line">// find the right fields to transfer</comment>
                            <expr><name><name>Fieldable</name><index>[]</index></name> <name>fields</name> <operator>=</operator> <call><name><name>aDoc</name><operator>.</operator><name>getFieldables</name></name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTIES</name></name></expr></argument>)</argument_list></call></expr>;
                            <expr><name>Token</name> <name>t</name> <operator>=</operator> <operator>new</operator> <call><name>Token</name><argument_list>()</argument_list></call></expr>;
                            <for>for <control>(<init><decl><type><name>Fieldable</name></type> <name>field</name> <range>: <expr><name>fields</name></expr></range></decl></init>)</control> <block>{<block_content>
                                <comment type="line">// assume properties fields use SingleTokenStream</comment>
                                <expr_stmt><expr><name>t</name> <operator>=</operator> <call><name><name>field</name><operator>.</operator><name>tokenStreamValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>t</name><operator>.</operator><name>termBuffer</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>t</name><operator>.</operator><name>termLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                <if_stmt><if>if <condition>(<expr><call><name><name>value</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>namePrefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                    <comment type="line">// extract value</comment>
                                    <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>value</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>namePrefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <comment type="line">// create new named value</comment>
                                    <decl_stmt><decl><type><name>Path</name></type> <name>p</name> <init>= <expr><call><name>getRelativePath</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>propState</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                    <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name>getNamespaceMappings</name><argument_list>()</argument_list></call><operator>.</operator><call><name>translatePath</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                    <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>setTermBuffer</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><call><name><name>field</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>SingletonTokenStream</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>AGGREGATED_NODE_UUID</name></name></expr></argument>, <argument><expr><call><name><name>parent</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>NO</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>NOT_ANALYZED_NO_NORMS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <try>try <block>{<block_content>
                                <comment type="line">// find the right fields to transfer</comment>
                                <decl_stmt><decl><type><name><name>Fieldable</name><index>[]</index></name></type> <name>fields</name> <init>= <expr><call><name><name>aDoc</name><operator>.</operator><name>getFieldables</name></name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTIES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                <decl_stmt><decl><type><name>Token</name></type> <name>t</name> <init>= <expr><operator>new</operator> <call><name>Token</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                                <for>for <control>(<init><decl><type><name>Fieldable</name></type> <name>field</name> <range>: <expr><name>fields</name></expr></range></decl></init>)</control> <block>{<block_content>
                                    <comment type="line">// assume properties fields use SingleTokenStream</comment>
                                    <expr_stmt><expr><name>t</name> <operator>=</operator> <call><name><name>field</name><operator>.</operator><name>tokenStreamValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>t</name><operator>.</operator><name>termBuffer</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>t</name><operator>.</operator><name>termLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                    <if_stmt><if>if <condition>(<expr><call><name><name>value</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>namePrefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                        <comment type="line">// extract value</comment>
                                        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>value</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>namePrefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <comment type="line">// create new named value</comment>
                                        <decl_stmt><decl><type><name>Path</name></type> <name>p</name> <init>= <expr><call><name>getRelativePath</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>propState</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                        <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name>getNamespaceMappings</name><argument_list>()</argument_list></call><operator>.</operator><call><name>translatePath</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                        <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>setTermBuffer</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><call><name><name>field</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>SingletonTokenStream</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>AGGREGATED_NODE_UUID</name></name></expr></argument>, <argument><expr><call><name><name>parent</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>NO</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>NOT_ANALYZED_NO_NORMS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for></block_content></block></try></block_content></block></if></if_stmt></block_content></block></for>}</block></expr></expr_stmt>
                                 }
                            } <finally>finally <block>{<block_content>
                                <expr_stmt><expr><call><name><name>Util</name><operator>.</operator><name>disposeDocument</name></name><argument_list>(<argument><expr><name>aDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                             </block_content>}</block></finally>
                         }
                     }
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
