<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/b194534a1.java"><expr_stmt><expr><name>From</name> <name>b194534a19f210933237df127bc9b8fb3315d787</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Felix</name> <name><name>Meschberger</name> <argument_list type="generic">&lt;<argument><name>fmeschbe</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">30</literal> <name>Jun</name> <literal type="number">2006</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">35</literal><operator>:</operator><literal type="number">47</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">367</literal> <operator>-</operator> <name>Remove</name> <name>dependency</name> <name>on</name> <name>Xerces</name>    <name>Part</name> <literal type="number">2</literal><operator>:</operator> <name>JAXP</name>
 <name>Transform</name> <name>instead</name> <name>of</name> <name>Xerces</name> <name>Serializer</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@418357 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SessionImpl</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">43</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>AbstractImportXmlTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">24</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>ExportDocViewTest</name><operator>.</operator><name>java</name></name>           <operator>|</operator> <literal type="number">31</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">67</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">31</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SessionImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SessionImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3355bec5d</literal><operator>..</operator><literal type="number">5f76afb3f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SessionImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SessionImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>name</name><operator>.</operator><name>QName</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>uuid</name><operator>.</operator><name>UUID</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>xml</name><operator>.</operator><name>serialize</name><operator>.</operator><name>OutputFormat</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>xml</name><operator>.</operator><name>serialize</name><operator>.</operator><name>XMLSerializer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>ContentHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>InputSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>SAXException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>nodetype</name><operator>.</operator><name>ConstraintViolationException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>nodetype</name><operator>.</operator><name>NoSuchNodeTypeException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>version</name><operator>.</operator><name>VersionException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>security</name><operator>.</operator><name>auth</name><operator>.</operator><name>Subject</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>OutputKeys</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>Result</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>TransformerException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>TransformerFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>sax</name><operator>.</operator><name>SAXTransformerFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>sax</name><operator>.</operator><name>TransformerHandler</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>stream</name><operator>.</operator><name>StreamResult</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1111</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">1117</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>SessionImpl</name> implements <name>Session</name></expr><operator>,</operator> <expr><name>Dumpable</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>exportDocumentView</name><argument_list>(<argument><expr><name>String</name> <name>absPath</name></expr></argument>, <argument><expr><name>OutputStream</name> <name>out</name></expr></argument>,
                                    <argument><expr><name>boolean</name> <name>skipBinary</name></expr></argument>, <argument><expr><name>boolean</name> <name>noRecurse</name></expr></argument>)</argument_list></call>
             <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>PathNotFoundException</name></expr></argument>, <argument><expr><name>RepositoryException</name> <block>{
        <expr><name>boolean</name> <name>indenting</name> <operator>=</operator> <literal type="boolean">false</literal></expr></block></expr></argument></throws></expr>;
        <expr><name>OutputFormat</name> <name>format</name> <operator>=</operator> <operator>new</operator> <call><name>OutputFormat</name><argument_list>(<argument><expr><literal type="string">"xml"</literal></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>, <argument><expr><name>indenting</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>XMLSerializer</name> <name>serializer</name> <operator>=</operator> <operator>new</operator> <call><name>XMLSerializer</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>format</name></expr></argument>)</argument_list></call></expr>;

        <expr><name>SAXTransformerFactory</name> <name>stf</name> <operator>=</operator> <operator>(</operator><name>SAXTransformerFactory</name><operator>)</operator> <call><name><name>SAXTransformerFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr>;

         <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>exportDocumentView</name><argument_list>(<argument><expr><name>absPath</name></expr></argument>, <argument><expr><call><name><name>serializer</name><operator>.</operator><name>asContentHandler</name></name><argument_list>()</argument_list></call></expr></argument>,
                    <argument><expr><name>skipBinary</name></expr></argument>, <argument><expr><name>noRecurse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>TransformerHandler</name></type> <name>th</name> <init>= <expr><call><name><name>stf</name><operator>.</operator><name>newTransformerHandler</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>setResult</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamResult</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>getTransformer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>METHOD</name></name></expr></argument>, <argument><expr><literal type="string">"xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>getTransformer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>ENCODING</name></name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>getTransformer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>INDENT</name></name></expr></argument>, <argument><expr><literal type="string">"no"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>exportDocumentView</name><argument_list>(<argument><expr><name>absPath</name></expr></argument>, <argument><expr><name>th</name></expr></argument>, <argument><expr><name>skipBinary</name></expr></argument>, <argument><expr><name>noRecurse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>TransformerException</name></type> <name>te</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>te</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>SAXException</name></type> <name>se</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>se</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1146</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">1159</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>SessionImpl</name> implements <name>Session</name></expr><operator>,</operator> <expr><name>Dumpable</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>exportSystemView</name><argument_list>(<argument><expr><name>String</name> <name>absPath</name></expr></argument>, <argument><expr><name>OutputStream</name> <name>out</name></expr></argument>,
                                  <argument><expr><name>boolean</name> <name>skipBinary</name></expr></argument>, <argument><expr><name>boolean</name> <name>noRecurse</name></expr></argument>)</argument_list></call>
             <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>PathNotFoundException</name></expr></argument>, <argument><expr><name>RepositoryException</name> <block>{
        <expr><name>boolean</name> <name>indenting</name> <operator>=</operator> <literal type="boolean">false</literal></expr></block></expr></argument></throws></expr>;
        <expr><name>OutputFormat</name> <name>format</name> <operator>=</operator> <operator>new</operator> <call><name>OutputFormat</name><argument_list>(<argument><expr><literal type="string">"xml"</literal></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>, <argument><expr><name>indenting</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>XMLSerializer</name> <name>serializer</name> <operator>=</operator> <operator>new</operator> <call><name>XMLSerializer</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>format</name></expr></argument>)</argument_list></call></expr>;

        <expr><name>SAXTransformerFactory</name> <name>stf</name> <operator>=</operator> <operator>(</operator><name>SAXTransformerFactory</name><operator>)</operator> <call><name><name>SAXTransformerFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr>;
         <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>exportSystemView</name><argument_list>(<argument><expr><name>absPath</name></expr></argument>, <argument><expr><call><name><name>serializer</name><operator>.</operator><name>asContentHandler</name></name><argument_list>()</argument_list></call></expr></argument>,
                    <argument><expr><name>skipBinary</name></expr></argument>, <argument><expr><name>noRecurse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>TransformerHandler</name></type> <name>th</name> <init>= <expr><call><name><name>stf</name><operator>.</operator><name>newTransformerHandler</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>setResult</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamResult</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>getTransformer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>METHOD</name></name></expr></argument>, <argument><expr><literal type="string">"xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>getTransformer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>ENCODING</name></name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>getTransformer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setParameter</name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>INDENT</name></name></expr></argument>, <argument><expr><literal type="string">"no"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>exportSystemView</name><argument_list>(<argument><expr><name>absPath</name></expr></argument>, <argument><expr><name>th</name></expr></argument>, <argument><expr><name>skipBinary</name></expr></argument>, <argument><expr><name>noRecurse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>TransformerException</name></type> <name>te</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>te</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>SAXException</name></type> <name>se</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>se</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>AbstractImportXmlTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>AbstractImportXmlTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c84b35d7c</name><operator>..</operator><literal type="number">04320c8a2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>AbstractImportXmlTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>AbstractImportXmlTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>api</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>AbstractJCRTest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>xml</name><operator>.</operator><name>serialize</name><operator>.</operator><name>OutputFormat</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>xml</name><operator>.</operator><name>serialize</name><operator>.</operator><name>XMLSerializer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>Element</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>Attr</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>PathNotFoundException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>DocumentBuilder</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>DocumentBuilderFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>OutputKeys</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>Result</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>Source</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>Transformer</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>TransformerException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>TransformerFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>dom</name><operator>.</operator><name>DOMSource</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>stream</name><operator>.</operator><name>StreamResult</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">391</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">398</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>AbstractImportXmlTest</name> extends <name>AbstractJCRTest</name> <block>{
         <expr><name>BufferedOutputStream</name> <name>bos</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <try>try <block>{<block_content>
             <comment type="line">// disable pretty printing/default line wrapping!</comment>
            <decl_stmt><decl><type><name>boolean</name></type> <name>indenting</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>OutputFormat</name></type> <name>format</name> <init>= <expr><operator>new</operator> <call><name>OutputFormat</name><argument_list>(<argument><expr><literal type="string">"xml"</literal></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>, <argument><expr><name>indenting</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>XMLSerializer</name></type> <name>serializer</name> <init>= <expr><operator>new</operator> <call><name>XMLSerializer</name><argument_list>(<argument><expr><name>bos</name></expr></argument>, <argument><expr><name>format</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>serializer</name><operator>.</operator><name>serialize</name></name><argument_list>(<argument><expr><name>document</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Transformer</name></type> <name>t</name> <init>= <expr><call><name><name>TransformerFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newTransformer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>METHOD</name></name></expr></argument>, <argument><expr><literal type="string">"xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>ENCODING</name></name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><name><name>OutputKeys</name><operator>.</operator><name>INDENT</name></name></expr></argument>, <argument><expr><literal type="string">"no"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Source</name></type> <name>s</name> <init>= <expr><operator>new</operator> <call><name>DOMSource</name><argument_list>(<argument><expr><name>document</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Result</name></type> <name>r</name> <init>= <expr><operator>new</operator> <call><name>StreamResult</name><argument_list>(<argument><expr><name>bos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>transform</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>TransformerException</name></type> <name>te</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>(</operator><name>IOException</name><operator>)</operator> <operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><call><name><name>te</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>initCause</name><argument_list>(<argument><expr><name>te</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch> <finally>finally <block>{<block_content>
             <expr_stmt><expr><call><name><name>bos</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></finally>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>ExportDocViewTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>ExportDocViewTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">32aa56f7c</literal><operator>..</operator><literal type="number">4731ac56f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>ExportDocViewTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>test</name><operator>/</operator><name>api</name><operator>/</operator><name><name>ExportDocViewTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>api</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>AbstractJCRTest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>xerces</name><operator>.</operator><name>util</name><operator>.</operator><name>XMLChar</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>util</name><operator>.</operator><name>XMLChar</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>SAXException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>ContentHandler</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>Element</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>Attr</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>NamedNodeMap</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>sax</name><operator>.</operator><name>SAXTransformerFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>sax</name><operator>.</operator><name>TransformerHandler</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>stream</name><operator>.</operator><name>StreamResult</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>stream</name><operator>.</operator><name>StreamSource</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>dom</name><operator>.</operator><name>DOMResult</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>transform</name><operator>.</operator><name>TransformerException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">42</literal> <operator>+</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExportDocViewTest</name> extends <name>AbstractJCRTest</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>void</name> <call><name>testExportDocView_handler_session_skipBinary_noRecurse</name><argument_list>()</argument_list></call>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name> <block>{</block></expr></argument></throws>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>CONTENTHANDLER</name></expr></argument>, <argument><expr><name>SKIPBINARY</name></expr></argument>, <argument><expr><name>NORECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     }
 
     public <function><type><name>void</name></type> <name>testExportDocView_handler_session_skipBinary_recurse</name><parameter_list>()</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>CONTENTHANDLER</name></expr></argument>, <argument><expr><name>SKIPBINARY</name></expr></argument>, <argument><expr><name>RECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testExportDocView_handler_session_saveBinary_noRecurse</name><parameter_list>()</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>CONTENTHANDLER</name></expr></argument>, <argument><expr><name>SAVEBINARY</name></expr></argument>, <argument><expr><name>NORECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testExportDocView_handler_session_saveBinary_recurse</name><parameter_list>()</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>CONTENTHANDLER</name></expr></argument>, <argument><expr><name>SAVEBINARY</name></expr></argument>, <argument><expr><name>RECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testExportDocView_stream_session_skipBinary_recurse</name><parameter_list>()</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>STREAM</name></expr></argument>, <argument><expr><name>SKIPBINARY</name></expr></argument>, <argument><expr><name>RECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testExportDocView_stream_session_skipBinary_noRecurse</name><parameter_list>()</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>STREAM</name></expr></argument>, <argument><expr><name>SKIPBINARY</name></expr></argument>, <argument><expr><name>NORECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testExportDocView_stream_session_saveBinary_noRecurse</name><parameter_list>()</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>STREAM</name></expr></argument>, <argument><expr><name>SAVEBINARY</name></expr></argument>, <argument><expr><name>NORECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testExportDocView_stream_session_saveBinary_recurse</name><parameter_list>()</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
            <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
         <expr><call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>STREAM</name></expr></argument>, <argument><expr><name>SAVEBINARY</name></expr></argument>, <argument><expr><name>RECURSE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExportDocViewTest</name> extends <name>AbstractJCRTest</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>noRecurse</name>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>void</name> <call><name>doTestExportDocView</name><argument_list>(<argument><expr><name>boolean</name> <name>withHandler</name></expr></argument>, <argument><expr><name>boolean</name> <name>skipBinary</name></expr></argument>, <argument><expr><name>boolean</name> <name>noRecurse</name></expr></argument>)</argument_list></call>
            <throws>throws <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>SAXException</name> <block>{</block></expr></argument></throws>
            <throws>throws <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument>, <argument><expr><name>TransformerException</name> <block>{
 
         <expr><name><name>this</name><operator>.</operator><name>skipBinary</name></name> <operator>=</operator> <name>skipBinary</name></expr></block></expr></argument></throws></expr>;
         <expr><name><name>this</name><operator>.</operator><name>noRecurse</name></name> <operator>=</operator> <name>noRecurse</name></expr>;
@@ <expr><operator>-</operator><literal type="number">202</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">205</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExportDocViewTest</name> extends <name>AbstractJCRTest</name> <block>{
         <expr><name>BufferedOutputStream</name> <name>os</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <try>try <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><name>withHandler</name></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>ContentHandler</name></type> <name>handler</name> <init>=
                        <expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>xml</name><operator>.</operator><name>serialize</name><operator>.</operator><name>XMLSerializer</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>asContentHandler</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>session</name><operator>.</operator><name>exportDocumentView</name></name><argument_list>(<argument><expr><name>testPath</name></expr></argument>, <argument><expr><name>handler</name></expr></argument>, <argument><expr><name>skipBinary</name></expr></argument>, <argument><expr><name>noRecurse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>SAXTransformerFactory</name></type> <name>stf</name> <init>=
                    <expr><operator>(</operator><name>SAXTransformerFactory</name><operator>)</operator> <call><name><name>SAXTransformerFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>TransformerHandler</name></type> <name>th</name> <init>= <expr><call><name><name>stf</name><operator>.</operator><name>newTransformerHandler</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>th</name><operator>.</operator><name>setResult</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StreamResult</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>session</name><operator>.</operator><name>exportDocumentView</name></name><argument_list>(<argument><expr><name>testPath</name></expr></argument>, <argument><expr><name>th</name></expr></argument>, <argument><expr><name>skipBinary</name></expr></argument>, <argument><expr><name>noRecurse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></if></if_stmt></block_content></block></try>}</block></expr> <if_stmt><else>else <block>{<block_content>
                 <expr_stmt><expr><call><name><name>session</name><operator>.</operator><name>exportDocumentView</name></name><argument_list>(<argument><expr><name>testPath</name></expr></argument>, <argument><expr><name>os</name></expr></argument>, <argument><expr><name>skipBinary</name></expr></argument>, <argument><expr><name>noRecurse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content></block></else></if_stmt></block>}</expr>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr_stmt>

</unit>
