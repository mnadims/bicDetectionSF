<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/10e0a6242.java"><expr_stmt><expr><name>From</name> <literal type="number">10e0a6242a1ca4526fdb533150a8b7f78fa971e4</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Michael</name> <name><name>Duerig</name> <argument_list type="generic">&lt;<argument><name>mduerig</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">27</literal> <name>Jan</name> <literal type="number">2011</literal> <literal type="number">09</literal><operator>:</operator><literal type="number">33</literal><operator>:</operator><literal type="number">13</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">2415</literal><operator>:</operator> <name>Update</name> <name>Lucene</name> <name>to</name> <literal type="number">3.0</literal> <operator>-</operator> <name>Merge</name> <name>all</name> <name>from</name>
 <name>JCR</name><operator>-</operator><literal type="number">2415</literal><operator>-</operator><name>lucene</name><operator>-</operator><literal type="number">3.0</literal> <name>at</name> <literal type="number">1064038</literal> <operator>(</operator><name>reintegration</name><operator>)</operator>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@1064058 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>PropertyTypeRegistry</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractExcerpt</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractIndex</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">53</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractScoreDocComparator</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">124</literal> <operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractWeight</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingIndexReader</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingMultiIndexReader</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CaseTermQuery</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">31</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">76</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DefaultHighlighter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DefaultQueryHits</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DerefQuery</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">76</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DescendantSelfAxisQuery</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">99</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DocOrderScoreNodeIterator</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorBase</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">105</literal> <operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorDecorator</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">62</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldSelectors</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IDField</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexDeletionPolicyImpl</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexFormatVersion</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexHistory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexInfos</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMerger</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMigration</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingConfigurationImpl</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingQueue</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitAnalyzer</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitIndexReader</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitParser</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitQueryParser</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitTermQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LazyTextExtractorField</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LengthSortComparator</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">66</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LocalNameQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LocalNameRangeQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LowerCaseSortComparator</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">70</literal> <operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryHits</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllDocsQuery</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllQuery</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllScorer</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">70</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllWeight</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MoreLikeThis</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">64</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MultiScorer</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">75</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>NameQuery</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>NameRangeQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>NodeIndexer</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">43</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>NodeTraversingQueryHits</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>NotQuery</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">72</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>OffsetCharSequence</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>Ordering</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ParentAxisQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">122</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PersistentIndex</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PredicateDerefQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">169</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>QueryHitsQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">61</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RangeQuery</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">73</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ReadOnlyIndexReader</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RefCountingIndexReader</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ScoreNode</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SearchIndex</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">82</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldCache</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldComparatorSource</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">379</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldSortComparator</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">242</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SimilarityQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SimpleExcerptProvider</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SingletonTokenStream</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">59</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SortedLuceneQueryHits</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SortedMultiColumnQueryHits</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">48</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TermDocsCache</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>UpperCaseSortComparator</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">66</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>VolatileIndex</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>WeightedHighlighter</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>WildcardNameQuery</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">9</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>WildcardQuery</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">92</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>directory</name><operator>/</operator><name><name>FSDirectoryManager</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">44</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>hits</name><operator>/</operator><name><name>AbstractHitCollector</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">60</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>hits</name><operator>/</operator><name><name>ScorerHits</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>SameNodeJoinMerger</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ScoreNodeMap</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChainedTermEnumTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMigrationTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <name>jackrabbit</name><operator>-</operator><name>parent</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>                     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">81</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">1546</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">1359</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractScoreDocComparator</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorBase</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorDecorator</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldComparatorSource</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldSortComparator</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>hits</name><operator>/</operator><name><name>AbstractHitCollector</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>PropertyTypeRegistry</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>PropertyTypeRegistry</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3ea0e4050</literal><operator>..</operator><literal type="number">12d369776</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>PropertyTypeRegistry</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name><name>PropertyTypeRegistry</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PropertyTypeRegistry</name> implements <name>NodeTypeRegistryListener</name> <block>{
         <comment type="line">// remove all TypeMapping instances refering to this ntName</comment>
         <synchronized>synchronized <init>(<expr><name>typeMapping</name></expr>)</init> <block>{<block_content>
             <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Name</name></argument>, <argument><name><name>TypeMapping</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>modified</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>Name</name></argument>, <argument><name><name>TypeMapping</name><index>[]</index></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name><name>typeMapping</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
            <for>for <control>(<init><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Name</name></argument>&gt;</argument_list></name></type> <name>it</name> <init>= <expr><call><name><name>typeMapping</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
                 <decl_stmt><decl><type><name>Name</name></type> <name>propName</name> <init>= <expr><operator>(</operator><name>Name</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name><name>TypeMapping</name><index>[]</index></name></type> <name>mapping</name> <init>= <expr><call><name><name>typeMapping</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>propName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>TypeMapping</name></argument>&gt;</argument_list></name></type> <name>remove</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractExcerpt</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractExcerpt</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">819c935aa</literal><operator>..</operator><literal type="number">1e84bbc1f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractExcerpt</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractExcerpt</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermVectorOffsetInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>TokenStream</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Token</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>OffsetAttribute</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>TermAttribute</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">231</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">232</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractExcerpt</name> implements <name>HighlightingExcerptProvider</name> <block>{
             <expr><operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>TermVectorOffsetInfo</name><index>[]</index></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
         <expr><name>Reader</name> <name>r</name> <operator>=</operator> <operator>new</operator> <call><name>StringReader</name><argument_list>(<argument><expr><name>text</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>TokenStream</name> <name>ts</name> <operator>=</operator> <call><name><name>index</name><operator>.</operator><name>getTextAnalyzer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>tokenStream</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;
        <expr><name>Token</name> <name>t</name> <operator>=</operator> <operator>new</operator> <call><name>Token</name><argument_list>()</argument_list></call></expr>;
         <try>try <block>{<block_content>
            <while>while <condition>(<expr><operator>(</operator><name>t</name> <operator>=</operator> <call><name><name>ts</name><operator>.</operator><name>next</name></name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>String</name></type> <name>termText</name> <init>= <expr><call><name><name>t</name><operator>.</operator><name>term</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <while>while <condition>(<expr><call><name><name>ts</name><operator>.</operator><name>incrementToken</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>OffsetAttribute</name></type> <name>offset</name> <init>= <expr><call><name><name>ts</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name><name>OffsetAttribute</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>TermAttribute</name></type> <name>term</name> <init>= <expr><call><name><name>ts</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name><name>TermAttribute</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>termText</name> <init>= <expr><call><name><name>term</name><operator>.</operator><name>term</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name><name>TermVectorOffsetInfo</name><index>[]</index></name></type> <name>info</name> <init>= <expr><call><name><name>termMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>termText</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <if_stmt><if>if <condition>(<expr><name>info</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                     <expr_stmt><expr><name>info</name> <operator>=</operator> <operator>new</operator> <name><name>TermVectorOffsetInfo</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">246</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractExcerpt</name> implements <name>HighlightingExcerptProvider</name> <block>{
                     <expr><call><name><name>System</name><operator>.</operator><name>arraycopy</name></name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>tmp</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></while></block_content></block></try>
                 }</block>
                 <name><name>info</name><index>[<expr><name><name>info</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>TermVectorOffsetInfo</name><argument_list>(
                        <argument><expr><call><name><name>t</name><operator>.</operator><name>startOffset</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>t</name><operator>.</operator><name>endOffset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>offset</name><operator>.</operator><name>startOffset</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><call><name><name>offset</name><operator>.</operator><name>endOffset</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
                 <expr_stmt><expr><call><name><name>termMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>termText</name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></for></block_content></block></synchronized>}</block>
            <call><name><name>ts</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>ts</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         } catch <expr_stmt><expr><operator>(</operator><name>IOException</name> <name>e</name><operator>)</operator> <block>{
             <comment type="line">// should never happen, we are reading from a string</comment>
         }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractIndex</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractIndex</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">28ad9f7b6</literal><operator>..</operator><literal type="number">11bcad0f7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractIndex</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractIndex</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>CountDownLatch</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>tika</name><operator>.</operator><name>io</name><operator>.</operator><name>IOExceptionWithCause</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>CountDownLatch</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Implements common functionality for a lucene index.
  * &lt;p/&gt;
@@ -248,13 +248,7 @@ abstract class AbstractIndex {
         }
         if (indexReader == null) {
             IndexDeletionPolicy idp = getIndexDeletionPolicy();
            IndexReader reader;
            if (idp != null) {
                reader = IndexReader.open(getDirectory(), idp);
            } else {
                reader = IndexReader.open(getDirectory());
            }
            reader.setTermInfosIndexDivisor(termInfosIndexDivisor);
            IndexReader reader = IndexReader.open(getDirectory(), idp, false, termInfosIndexDivisor);
             indexReader = new CommittableIndexReader(reader);
         }
         return indexReader;
@@ -318,8 +312,7 @@ abstract class AbstractIndex {
         }
         if (sharedReader == null) {
             // create new shared reader
            IndexReader reader = IndexReader.open(getDirectory(), true);
            reader.setTermInfosIndexDivisor(termInfosIndexDivisor);
            IndexReader reader = IndexReader.open(getDirectory(), null, true, termInfosIndexDivisor);
             CachingIndexReader cr = new CachingIndexReader(
                     reader, cache, initCache);
             sharedReader = new SharedIndexReader(cr);
@@ -496,10 +489,10 @@ abstract class AbstractIndex {
             // mark the document that reindexing is required
             copy.add(new Field(FieldNames.REINDEXING_REQUIRED, "",
                     Field.Store.NO, Field.Index.NOT_ANALYZED_NO_NORMS));
            for (Fieldable f : (List&lt;Fieldable&gt;) doc.getFields()) {
            for (Fieldable f : doc.getFields()) {
                 Fieldable field = null;
                 Field.TermVector tv = getTermVectorParameter(f);
                Field.Store stored = getStoreParameter(f);
                Field.Store stored = f.isStored() ? Field.Store.YES : Field.Store.NO;
                 Field.Index indexed = getIndexParameter(f);
                 if (f instanceof LazyTextExtractorField || f.readerValue() != null) {
                     // replace all readers with empty string reader
@@ -508,7 +501,7 @@ abstract class AbstractIndex {
                     field = new Field(f.name(), f.stringValue(),
                             stored, indexed, tv);
                 } else if (f.isBinary()) {
                    field = new Field(f.name(), f.binaryValue(), stored);
                    field = new Field(f.name(), f.getBinaryValue(), stored);
                 }
                 if (field != null) {
                     field.setOmitNorms(f.getOmitNorms());
@@ -584,22 +577,6 @@ abstract class AbstractIndex {
         }
     }
 
    /**
     * Returns the store parameter set on &lt;code&gt;f&lt;/code&gt;.
     *
     * @param f a lucene field.
     * @return the store parameter on &lt;code&gt;f&lt;/code&gt;.
     */</comment>
    <function><type><specifier>private</specifier> <name><name>Field</name><operator>.</operator><name>Store</name></name></type> <name>getStoreParameter</name><parameter_list>(<parameter><decl><type><name>Fieldable</name></type> <name>f</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>f</name><operator>.</operator><name>isCompressed</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>COMPRESS</name></name></expr>;</return>
        </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>f</name><operator>.</operator><name>isStored</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr>;</return>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <return>return <expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>NO</name></name></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

     <comment type="block" format="javadoc">/**
      * Returns the term vector parameter set on &lt;code&gt;f&lt;/code&gt;.
      *
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/AbstractScoreDocComparator.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/AbstractScoreDocComparator.java
deleted file mode 100644
index 45b54c318..000000000
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/AbstractScoreDocComparator.java
++ /dev/null
@@ -1,124 +0,0 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDocComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Abstract base class of {@link ScoreDocComparator} implementations.
 */</comment>
<class><specifier>abstract</specifier> class <name>AbstractScoreDocComparator</name> <super_list><implements>implements <super><name>ScoreDocComparator</name></super></implements></super_list> <block>{

    <comment type="block" format="javadoc">/**
     * The index readers.
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>&gt;</argument_list></name></type> <name>readers</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The document number starts for the {@link #readers}.
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>int</name><index>[]</index></name></type> <name>starts</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>AbstractScoreDocComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>getIndexReaders</name><argument_list>(<argument><expr><name>readers</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>int</name></type> <name>maxDoc</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>starts</name></name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name>starts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>maxDoc</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>maxDoc</name> <operator>+=</operator> <call><name><name>r</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt><expr><name><name>starts</name><index>[<expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name> <operator>=</operator> <name>maxDoc</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <comment type="block" format="javadoc">/**
     * Compares sort values of &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;. If the
     * sort values have differing types, then the sort order is defined on
     * the type itself by calling &lt;code&gt;compareTo()&lt;/code&gt; on the respective
     * type class names.
     *
     * @param i first score doc.
     * @param j second score doc.
     * @return a negative integer if &lt;code&gt;i&lt;/code&gt; should come before
     *         &lt;code&gt;j&lt;/code&gt;&lt;br&gt; a positive integer if &lt;code&gt;i&lt;/code&gt;
     *         should come after &lt;code&gt;j&lt;/code&gt;&lt;br&gt; &lt;code&gt;0&lt;/code&gt; if they
     *         are equal
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><name>ScoreDoc</name></type> <name>j</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><call><name><name>Util</name><operator>.</operator><name>compare</name></name><argument_list>(<argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>int</name></type> <name>sortType</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name><name>SortField</name><operator>.</operator><name>CUSTOM</name></name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Returns the reader index for document &lt;code&gt;n&lt;/code&gt;.
     *
     * @param n document number.
     * @return the reader index.
     */</comment>
    <function><type><specifier>protected</specifier> <name>int</name></type> <name>readerIndex</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>lo</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>hi</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><name>hi</name> <operator>&gt;=</operator> <name>lo</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>mid</name> <init>= <expr><operator>(</operator><name>lo</name> <operator>+</operator> <name>hi</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>midValue</name> <init>= <expr><name><name>starts</name><index>[<expr><name>mid</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>n</name> <operator>&lt;</operator> <name>midValue</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>hi</name> <operator>=</operator> <name>mid</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>n</name> <operator>&gt;</operator> <name>midValue</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>lo</name> <operator>=</operator> <name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <while>while <condition>(<expr><name>mid</name> <operator>+</operator> <literal type="number">1</literal> <operator>&lt;</operator> <call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name><name>starts</name><index>[<expr><name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <name>midValue</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>mid</name><operator>++</operator></expr>;</expr_stmt>
                </block_content>}</block></while>
                <return>return <expr><name>mid</name></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></while>
        <return>return <expr><name>hi</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Checks if &lt;code&gt;reader&lt;/code&gt; is of type {@link MultiIndexReader} and if
     * that's the case calls this method recursively for each reader within the
     * multi index reader; otherwise the reader is simply added to the list.
     *
     * @param readers the list of index readers.
     * @param reader  the reader to check.
     */</comment>
    <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>getIndexReaders</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>&gt;</argument_list></name></type> <name>readers</name></decl></parameter>,
                                        <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>reader</name> <operator>instanceof</operator> <name>MultiIndexReader</name></expr>)</condition> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>IndexReader</name></type> <name>r</name> <range>: <expr><operator>(</operator><operator>(</operator><name>MultiIndexReader</name><operator>)</operator> <name>reader</name><operator>)</operator><operator>.</operator><call><name>getIndexReaders</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name>getIndexReaders</name><argument_list>(<argument><expr><name>readers</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>readers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractWeight</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractWeight</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b4ae1c501</name><operator>..</operator><literal type="number">70792b63b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractWeight</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>AbstractWeight</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>code</name><operator>&gt;</operator><name><name>AbstractWeight</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> implements <name>base</name> <name>functionality</name></expr></expr_stmt> <for>for custom lucene
  * weights in jackrabbit.
  */
abstract class AbstractWeight implements Weight <block>{<block_content>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
<specifier>abstract</specifier> class <name>AbstractWeight</name> <super_list><extends>extends <super><name>Weight</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
      * The searcher for this weight.
@@ -52,8 +53,8 @@ abstract class AbstractWeight implements Weight {
      * @return the scorer instance
      * @throws IOException if an error occurs while reading from the index
      */</comment>
    <function_decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>Scorer</name></type> <name>createScorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
    <function_decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>Scorer</name></type> <name>createScorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>scoreDocsInOrder</name></decl></parameter>,
            <parameter><decl><type><name>boolean</name></type> <name>topScorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
 
     <comment type="block" format="javadoc">/**
      * {@inheritDoc}
@@ -61,7 +62,8 @@ abstract class AbstractWeight implements Weight {
      * Returns a {@link MultiScorer} if the passed &lt;code&gt;reader&lt;/code&gt; is of
      * type {@link MultiIndexReader}.
      */</comment>
    <function><type><specifier>public</specifier> <name>Scorer</name></type> <name>scorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Scorer</name></type> <name>scorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>scoreDocsInOrder</name></decl></parameter>,
            <parameter><decl><type><name>boolean</name></type> <name>topScorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>reader</name> <operator>instanceof</operator> <name>MultiIndexReader</name></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name>MultiIndexReader</name></type> <name>mir</name> <init>= <expr><operator>(</operator><name>MultiIndexReader</name><operator>)</operator> <name>reader</name></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name><name>IndexReader</name><index>[]</index></name></type> <name>readers</name> <init>= <expr><call><name><name>mir</name><operator>.</operator><name>getIndexReaders</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>AbstractWeight</name> implements <name>Weight</name> <block>{
             <expr><name><name>starts</name><index>[<expr><name><name>readers</name><operator>.</operator><name>length</name></name></expr>]</index></name> <operator>=</operator> <name>maxDoc</name></expr>;
             <name><name>Scorer</name><index>[]</index></name> <name>scorers</name> <operator>=</operator> <operator>new</operator> <name><name>Scorer</name><index>[<expr><name><name>readers</name><operator>.</operator><name>length</name></name></expr>]</index></name></block></expr>;</expr_stmt>
             <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>readers</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <expr_stmt><expr><name><name>scorers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>scorer</name><argument_list>(<argument><expr><name><name>readers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>scorers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>scorer</name><argument_list>(<argument><expr><name><name>readers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></for>
 
             <return>return <expr><operator>new</operator> <call><name>MultiScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scorers</name></expr></argument>, <argument><expr><name>starts</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
            <return>return <expr><call><name>createScorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
            <return>return <expr><call><name>createScorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></else></if_stmt>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingIndexReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingIndexReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a59960700</name><operator>..</operator><literal type="number">1075a40e9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingIndexReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingIndexReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>FieldSelector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>FilterIndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">287</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">286</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>CachingIndexReader</name> extends <name>FilterIndexReader</name> <block>{
      <expr><operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr> <if_stmt><if>if an error occurs while reading from the index.
      */
     public TermDocs termDocs<condition>(<expr><name>Term</name> <name>term</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
        <if_stmt><if>if <condition>(<expr><call><name><name>term</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>FieldNames</name><operator>.</operator><name>UUID</name></name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>term</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>term</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>FieldNames</name><operator>.</operator><name>UUID</name></name></expr>)</condition> <block>{<block_content>
             <comment type="line">// check cache if we have one</comment>
             <if_stmt><if>if <condition>(<expr><name>cache</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <decl_stmt><decl><type><name><name>DocNumberCache</name><operator>.</operator><name>Entry</name></name></type> <name>e</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>term</name><operator>.</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingMultiIndexReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingMultiIndexReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">612acc574</literal><operator>..</operator><literal type="number">026792f46</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingMultiIndexReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CachingMultiIndexReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>CachingMultiIndexReader</name>
      <operator>*</operator> <block>{@<expr><name>inheritDoc</name></expr>}</block>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>TermDocs</name> <call><name>termDocs</name><argument_list>(<argument><expr><name>Term</name> <name>term</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>term</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>FieldNames</name><operator>.</operator><name>UUID</name></name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>term</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>term</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>FieldNames</name><operator>.</operator><name>UUID</name></name></expr>)</condition> <block>{<block_content>
             <comment type="line">// check cache</comment>
             <decl_stmt><decl><type><name><name>DocNumberCache</name><operator>.</operator><name>Entry</name></name></type> <name>e</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>term</name><operator>.</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><name>e</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CaseTermQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CaseTermQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">24c661c59</literal><operator>..</operator><literal type="number">76a769d89</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CaseTermQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CaseTermQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MultiTermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FilteredTermEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>code</name><operator>&gt;</operator><name><name>CaseTermQuery</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> implements <name>a</name> <name>term</name> <name>query</name> <name>which</name> <name>convert</name> <name>the</name> <name>term</name>
  <operator>*</operator> <name>from</name> <name>the</name> <name>index</name> <name>either</name> <name>to</name> <name>upper</name> <name>or</name> <name>lower</name></expr></expr_stmt> <case>case <expr><name>before</name> <name>it</name> <name>is</name> <name><name>matched</name><operator>.</operator></name>
  *<operator>/</operator>
@<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
 <specifier>abstract</specifier> <name>class</name> <name>CaseTermQuery</name> extends <name>MultiTermQuery</name> implements <name>TransformConstants</name> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -40,19 +42,34 @@ abstract class CaseTermQuery extends MultiTermQuery implements TransformConstant
      * upper-cased.
      */</comment>
     <expr><specifier>protected</specifier> <name>final</name> <name>int</name> <name>transform</name></expr>;
    <specifier>private</specifier> <name>final</name> <name>Term</name> <name>term</name></block></expr><empty_stmt>;</empty_stmt>
 
     <expr_stmt><expr><call><name>CaseTermQuery</name><argument_list>(<argument><expr><name>Term</name> <name>term</name></expr></argument>, <argument><expr><name>int</name> <name>transform</name></expr></argument>)</argument_list></call> <block>{
        <expr><call><name>super</name><argument_list>(<argument><expr><name>term</name></expr></argument>)</argument_list></call></expr>;
        <name><name>this</name><operator>.</operator><name>term</name></name> <operator>=</operator> <name>term</name></block></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>transform</name></name> <operator>=</operator> <name>transform</name></expr>;</expr_stmt>
     <expr_stmt/></case></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
 
     <comment type="block" format="javadoc">/**
      * {@inheritDoc}
      */</comment>
    @<name>Override</name>
     <specifier>protected</specifier> <name>FilteredTermEnum</name> <call><name>getEnum</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
         <return>return <expr><operator>new</operator> <call><name>CaseTermEnum</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/** Prints a user-readable version of this query. */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>StringBuffer</name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>term</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>term</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>term</name><operator>.</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>ToStringUtils</name><operator>.</operator><name>boost</name></name><argument_list>(<argument><expr><call><name>getBoost</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><call><name><name>buffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

     <class><specifier>static</specifier> <specifier>final</specifier> class <name>Upper</name> <super_list><extends>extends <super><name>CaseTermQuery</name></super></extends></super_list> <block>{
 
         <constructor><name>Upper</name><parameter_list>(<parameter><decl><type><name>Term</name></type> <name>term</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>CaseTermQuery</name> extends <name>MultiTermQuery</name> implements <name>TransformConstant</name>
         <call><name>Lower</name><argument_list>(<argument><expr><name>Term</name> <name>term</name></expr></argument>)</argument_list></call> <block>{
             <expr><call><name>super</name><argument_list>(<argument><expr><name>term</name></expr></argument>, <argument><expr><name>TRANSFORM_LOWER_CASE</name></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>

     </block_content>}</block></constructor>
 
     <class><specifier>private</specifier> <specifier>final</specifier> class <name>CaseTermEnum</name> <super_list><extends>extends <super><name>FilteredTermEnum</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>CaseTermQuery</name> extends <name>MultiTermQuery</name> implements <name>TransformConstant</name>
             <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Term</name></argument>, <argument><name>Integer</name></argument>&gt;</argument_list></name> <name>orderedTerms</name> <operator>=</operator>
                 <operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>Term</name></argument>, <argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
            <decl_stmt><decl><type><name>Term</name></type> <name>term</name> <init>= <expr><call><name>getTerm</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line">// there are always two range scanse: one with an initial</comment>
            <comment type="line">// there are always two range scans: one with an initial</comment>
             <comment type="line">// lower case character and another one with an initial upper case</comment>
             <comment type="line">// character</comment>
             <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>RangeScan</name></argument>&gt;</argument_list></name></type> <name>rangeScans</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>RangeScan</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>CaseTermQuery</name> extends <name>MultiTermQuery</name> implements <name>TransformConstant</name>
                     <call><name>getNext</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 }</block></class>
 
                <function><annotation>@<name>Override</name></annotation>
                 <type><specifier>public</specifier> <name>boolean</name></type> <name>next</name><parameter_list>()</parameter_list> <block>{<block_content>
                     <expr_stmt><expr><call><name>getNext</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                     <return>return <expr><name>current</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</return>
                 </block_content>}</block></function>
 
                <function><annotation>@<name>Override</name></annotation>
                 <type><specifier>public</specifier> <name>Term</name></type> <name>term</name><parameter_list>()</parameter_list> <block>{<block_content>
                     <return>return <expr><name>current</name></expr>;</return>
                 </block_content>}</block></function>
 
                <function><annotation>@<name>Override</name></annotation>
                 <type><specifier>public</specifier> <name>int</name></type> <name>docFreq</name><parameter_list>()</parameter_list> <block>{<block_content>
                     <decl_stmt><decl><type><name>Integer</name></type> <name>docFreq</name> <init>= <expr><call><name><name>orderedTerms</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>current</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                     <return>return <expr><ternary><condition><expr><name>docFreq</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>docFreq</name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</return>
                 </block_content>}</block></function>
 
                <function><annotation>@<name>Override</name></annotation>
                 <type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{<block_content>
                     <comment type="line">// nothing to close</comment>
                 </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">200</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>CaseTermQuery</name> extends <name>MultiTermQuery</name> implements <name>TransformConstant</name></expr></expr_stmt>
             }</block></class>)</block>;</class>
         </block_content>}</block></for>
 
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>protected</specifier> <name>boolean</name></type> <name>termCompare</name><parameter_list>(<parameter><decl><type><name>Term</name></type> <name>term</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <comment type="line">// they all match</comment>
             <return>return <expr><literal type="boolean">true</literal></expr>;</return>
         </block_content>}</block></function>
 
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>difference</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         </block_content>}</block></function>
 
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>protected</specifier> <name>boolean</name></type> <name>endEnum</name><parameter_list>()</parameter_list> <block>{<block_content>
             <comment type="line">// todo correct?</comment>
             <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e5ba9848b</name><operator>..</operator><literal type="number">52f6fa641</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>SessionImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AbstractHitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AdaptingHits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>Hits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>ScorerHits</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>HitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>Implements</name> <name>a</name> <name><name>lucene</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>Query</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>which</name> <name>returns</name> <name>the</name> <name>child</name> <name>nodes</name> <name>of</name> <name>the</name>
  <operator>*</operator> <name>nodes</name> <name>selected</name> <name>by</name> <name><name>another</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name><name>Query</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name><operator>.</operator></name>
  *<operator>/</operator>
@<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
 <name>class</name> <name>ChildAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -192,7 +193,7 @@ class ChildAxisQuery extends Query implements JackrabbitQuery {
      * @param searcher the &lt;code&gt;Searcher&lt;/code&gt; instance to use.
      * @return a &lt;code&gt;ChildAxisWeight&lt;/code&gt;.
      */</comment>
    <expr><specifier>protected</specifier> <name>Weight</name> <call><name>createWeight</name><argument_list>(<argument><expr><name>Searcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>Weight</name> <call><name>createWeight</name><argument_list>(<argument><expr><name>Searcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <block>{
         <return>return <expr><operator>new</operator> <call><name>ChildAxisWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
     }</block>
 
@@ <operator>-</operator><literal type="number">273</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">274</literal></expr>,<expr><literal type="number">7</literal> @@ <name>class</name> <name>ChildAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
     <comment type="block" format="javadoc">/**
      * The &lt;code&gt;Weight&lt;/code&gt; implementation for this &lt;code&gt;ChildAxisQuery&lt;/code&gt;.
      */</comment>
    <expr><specifier>private</specifier> <name>class</name> <name>ChildAxisWeight</name> implements <name>Weight</name> <block>{
    <expr><specifier>private</specifier> <name>class</name> <name>ChildAxisWeight</name> extends <name>Weight</name> <block>{
 
         <comment type="block" format="javadoc">/**
          * The searcher in use
@@ -326,10 +327,11 @@ class ChildAxisQuery extends Query implements JackrabbitQuery {
          * @return a &lt;code&gt;ChildAxisScorer&lt;/code&gt;.
          * @throws IOException if an error occurs while reading from the index.
          */</comment>
        <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        @<expr><name>Override</name>
        <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
             <if_stmt><if>if <condition>(<expr><name>nameTest</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nameTestScorer</name> <operator>=</operator> <operator>new</operator> <call><name>NameQuery</name><argument_list>(<argument><expr><name>nameTest</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>nsMappings</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>nameTestScorer</name> <operator>=</operator> <operator>new</operator> <call><name>NameQuery</name><argument_list>(<argument><expr><name>nameTest</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>nsMappings</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></if></if_stmt>}</block></expr>
             <return>return <expr><operator>new</operator> <call><name>ChildAxisScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>,
                     <argument><expr><name>reader</name></expr></argument>, <argument><expr><operator>(</operator><name>HierarchyResolver</name><operator>)</operator> <name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
@@ <operator>-</operator><literal type="number">385</literal><operator>,</operator><literal type="number">52</literal> <operator>+</operator><literal type="number">387</literal><operator>,</operator><literal type="number">48</literal> @@ <name>class</name> <name>ChildAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
             <expr><name><name>this</name><operator>.</operator><name>hResolver</name></name> <operator>=</operator> <name>hResolver</name></expr>;
         }</block></block>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <specifier>public</specifier> <name>boolean</name> <call><name>next</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><annotation>@<name>Override</name></annotation>
        <specifier>public</specifier> <name>int</name> <call><name>nextDoc</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            <expr_stmt/></block_content></block></if></if_stmt>}</block>

             <call><name>calculateChildren</name><argument_list>()</argument_list></call></expr>;
             <do>do <block>{<block_content>
                 <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></do>}</block></expr></expr_stmt> <while>while <condition>(<expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>indexIsValid</name><argument_list>(<argument><expr><name>nextDoc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
 
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateChildren</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>skipTo</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <while>while <condition>(<expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>indexIsValid</name><argument_list>(<argument><expr><name>nextDoc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name>next</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>nextDoc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></while>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         *
         * @throws UnsupportedOperationException this implementation always
         *                                       throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
         <function><type><specifier>private</specifier> <name>void</name></type> <name>calculateChildren</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">440</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">438</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <name>class</name> <name>ChildAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
                 <if_stmt><if>if <condition>(<expr><name>nameTestScorer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                     <comment type="line">// always use simple in that case</comment>
                     <expr_stmt><expr><name><name>calc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>SimpleChildrenCalculator</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>hResolver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>HitCollector</name></super><argument_list>()</argument_list> <block>{
                        <function><type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractHitCollector</name></super><argument_list>()</argument_list> <block>{
                        <function><annotation>@<name>Override</name></annotation>
                        <type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                             <expr_stmt><expr><name><name>calc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>collectContextHit</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                         <expr_stmt/>}</block_content>
                     }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr></expr_stmt>
                 <expr_stmt/>}</block_content> else <block>{<block_content>
                     <comment type="line">// start simple but switch once threshold is reached</comment>
                     <expr_stmt><expr><name><name>calc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>SimpleChildrenCalculator</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>hResolver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>HitCollector</name></super><argument_list>()</argument_list> <block>{
                    <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractHitCollector</name></super><argument_list>()</argument_list> <block>{
 
                         <decl_stmt><decl><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>docIds</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
                        <function><type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                        <function><annotation>@<name>Override</name></annotation>
                        <type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                             <expr_stmt><expr><name><name>calc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>collectContextHit</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                             <if_stmt><if>if <condition>(<expr><name>docIds</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                                 <expr_stmt><expr><call><name><name>docIds</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DefaultHighlighter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DefaultHighlighter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6c70ca251</literal><operator>..</operator><literal type="number">6fa989203</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DefaultHighlighter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DefaultHighlighter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">300</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">300</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>DefaultHighlighter</name> <block>{
                     <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><name>cbuf</name></expr></argument>, <argument><expr><name>skippedChars</name></expr></argument>, <argument><expr><name><name>cbuf</name><operator>.</operator><name>length</name></name> <operator>-</operator> <name>skippedChars</name></expr></argument>)</argument_list></call></expr></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr></expr_stmt></block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
             <comment type="line">// iterate terms</comment>
            <for>for <control>(<init><decl><type><name>Iterator</name></type> <name>iter</name> <init>= <expr><call><name><name>fi</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>TermVectorOffsetInfo</name></type> <name>ti</name> <init>= <expr><operator>(</operator><name>TermVectorOffsetInfo</name><operator>)</operator> <call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>TermVectorOffsetInfo</name></argument>&gt;</argument_list></name></type> <name>iter</name> <init>= <expr><call><name><name>fi</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>TermVectorOffsetInfo</name></type> <name>ti</name> <init>= <expr><call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <expr_stmt><expr><name>nextStart</name> <operator>=</operator> <call><name><name>ti</name><operator>.</operator><name>getStartOffset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 <if_stmt><if>if <condition>(<expr><name>nextStart</name> <operator>-</operator> <name>pos</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                     <expr_stmt><expr><name>cbuf</name> <operator>=</operator> <operator>new</operator> <name><name>char</name><index>[<expr><name>nextStart</name> <operator>-</operator> <name>pos</name></expr>]</index></name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">420</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">420</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>DefaultHighlighter</name> <block>{
             }</block>
             <call><name><name>offsetInfosList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>offsetinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>numTerms</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>endOffset</name> <operator>=</operator> <call><name><name>offsetinfo</name><operator>.</operator><name>getEndOffset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <return>return <expr><literal type="boolean">true</literal></expr>;</return>
         <expr_stmt/>}</block_content>
 
        public Iterator iterator(</block></if></if_stmt>)</block_content> <block>{<block_content>
        <function><type><specifier>public</specifier> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>TermVectorOffsetInfo</name></argument>&gt;</argument_list></name></type> <name>iterator</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><call><name><name>offsetInfosList</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;</return>
         <expr_stmt/>}</block_content>
 
@@ -432</block><operator>,</operator>10 +431<operator>,</operator>6 @@ public class DefaultHighlighter <block>{<block_content>
             <return>return <expr><name>startOffset</name></expr>;</return>
         <expr_stmt/>}</block_content>
 
        public int getEndOffset(</block></function>)</block_content> <block>{<block_content>
            <return>return <expr><name>endOffset</name></expr>;</return>
        <expr_stmt/>}</block_content>

         public int numTerms(</block></block></block></for>)</block_content> <block>{<block_content>
             <return>return <expr><name>numTerms</name></expr>;</return>
         <expr_stmt/>}</block_content>
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DefaultQueryHits.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DefaultQueryHits.java
index ad400e0ce..f602087d6 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DefaultQueryHits.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DefaultQueryHits.java
@@ -34</block></block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>DefaultQueryHits</name> extends <name>AbstractQueryHits</name> <block>{
     <comment type="block" format="javadoc">/**
      * An iterator over the query nodes.
      */</comment>
    <expr><specifier>private</specifier> <name>final</name> <name>Iterator</name> <name>scoreNodes</name></expr>;
    <specifier>private</specifier> <name>final</name> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>ScoreNode</name></argument>&gt;</argument_list></name> <name>scoreNodes</name></block></expr>;</expr_stmt></for>
 
     <comment type="block" format="javadoc">/**
      * Creates a new &lt;code&gt;DefaultQueryHits&lt;/code&gt; instance based on the passed
@@ -42,7 +42,7 @@ public class DefaultQueryHits extends AbstractQueryHits {
      *
      * @param scoreNodes a collection of {@link ScoreNode}s.
      */</comment>
    <constructor><specifier>public</specifier> <name>DefaultQueryHits</name><parameter_list>(<parameter><decl><type><name>Collection</name></type> <name>scoreNodes</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>DefaultQueryHits</name><parameter_list>(<parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>ScoreNode</name></argument>&gt;</argument_list></name></type> <name>scoreNodes</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>size</name></name> <operator>=</operator> <call><name><name>scoreNodes</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scoreNodes</name></name> <operator>=</operator> <call><name><name>scoreNodes</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DerefQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DerefQuery.java
index 2f1d18461..b72886139 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DerefQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DerefQuery.java
@@ -17</block><operator>,</operator>15 +17<operator>,</operator>14 @@
 package org.apache.jackrabbit.core.query.lucene<empty_stmt>;</empty_stmt></constructor>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>HitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AbstractHitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>Implements</name> <name>a</name> <name><name>lucene</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>Query</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>which</name> <name>returns</name> <name>the</name> <name>nodes</name> <name>selected</name> <name>by</name>
  <operator>*</operator> <name>a</name> <name>reference</name> <name>property</name> <name>of</name> <name>the</name> <name>context</name> <name><name>node</name><operator>.</operator></name>
  *<operator>/</operator>
@<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
 class <name>DerefQuery</name> extends <name>Query</name> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -102,7 +102,7 @@ class DerefQuery extends Query {
      * @param searcher the &lt;code&gt;Searcher&lt;/code&gt; instance to use.
      * @return a &lt;code&gt;DerefWeight&lt;/code&gt;.
      */</comment>
    <expr><specifier>protected</specifier> <name>Weight</name> <call><name>createWeight</name><argument_list>(<argument><expr><name>Searcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>Weight</name> <call><name>createWeight</name><argument_list>(<argument><expr><name>Searcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <block>{
         <return>return <expr><operator>new</operator> <call><name>DerefWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</return>
     }</block>
 
@@ <operator>-</operator><literal type="number">148</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">148</literal></expr>,<expr><literal type="number">7</literal> @@ class <name>DerefQuery</name> extends <name>Query</name> <block>{
     <comment type="block" format="javadoc">/**
      * The &lt;code&gt;Weight&lt;/code&gt; implementation for this &lt;code&gt;DerefQuery&lt;/code&gt;.
      */</comment>
    <expr><specifier>private</specifier> class <name>DerefWeight</name> implements <name>Weight</name> <block>{
    <expr><specifier>private</specifier> class <name>DerefWeight</name> extends <name>Weight</name> <block>{
 
         <comment type="block" format="javadoc">/**
          * The searcher in use
@@ -201,10 +201,12 @@ class DerefQuery extends Query {
          * @return a &lt;code&gt;DerefScorer&lt;/code&gt;.
          * @throws IOException if an error occurs while reading from the index.
          */</comment>
        <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        @<name>Override</name>
        <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</block></expr>
             <if_stmt><if>if <condition>(<expr><name>nameTest</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nameTestScorer</name> <operator>=</operator> <operator>new</operator> <call><name>NameQuery</name><argument_list>(<argument><expr><name>nameTest</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>nsMappings</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>nameTestScorer</name> <operator>=</operator> <operator>new</operator> <call><name>NameQuery</name><argument_list>(<argument><expr><name>nameTest</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>nsMappings</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/>}</block_content>
             return new DerefScorer(searcher.getSimilarity(</block></if></if_stmt>)</block></expr>, <expr><name>reader</name></expr></block></expr></block></expr></expr_stmt></block_content></block></constructor></block_content></block></block></function></block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></if></if_stmt>}</block>
@@ <operator>-</operator><literal type="number">256</literal></expr><operator>,</operator><expr><literal type="number">46</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <name>class</name> <name>DerefQuery</name> extends <name>Query</name> <block>{
             <expr><name><name>this</name><operator>.</operator><name>hits</name></name> <operator>=</operator> <operator>new</operator> <call><name>BitSet</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         }</block>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <specifier>public</specifier> <name>boolean</name> <call><name>next</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><annotation>@<name>Override</name></annotation>
        <specifier>public</specifier> <name>int</name> <call><name>nextDoc</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateChildren</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>nextDoc</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateChildren</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         *
         * @throws UnsupportedOperationException this implementation always
         *                                       throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
         <comment type="block" format="javadoc">/**
@@ -311,8 +309,9 @@ class DerefQuery extends Query {
         private void calculateChildren() throws IOException {
             if (uuids == null) {
                 uuids = new ArrayList&lt;String&gt;();
                contextScorer.score(new HitCollector() {
                    public void collect(int doc, float score) {
                contextScorer.score(new AbstractHitCollector() {
                    @Override
                    protected void collect(int doc, float score) {
                         hits.set(doc);
                     }
                 });
@@ -320,8 +319,9 @@ class DerefQuery extends Query {
                 // collect nameTest hits
                 final BitSet nameTestHits = new BitSet();
                 if (nameTestScorer != null) {
                    nameTestScorer.score(new HitCollector() {
                        public void collect(int doc, float score) {
                    nameTestScorer.score(new AbstractHitCollector() {
                        @Override
                        protected void collect(int doc, float score) {
                             nameTestHits.set(doc);
                         }
                     });
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java
index ace8da743..894444da9 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java
@@ -16,16 +16,16 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>SessionImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AbstractHitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>HitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>SessionImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Node</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Implements a lucene &lt;code&gt;Query&lt;/code&gt; which filters a sub query by checking
  * whether the nodes selected by that sub query are descendants or self of
  * nodes selected by a context query.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 class <name>DescendantSelfAxisQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends> <implements>implements <super><name>JackrabbitQuery</name></super></implements></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -171,7 +172,7 @@ class DescendantSelfAxisQuery extends Query implements JackrabbitQuery {
      * @param searcher the &lt;code&gt;Searcher&lt;/code&gt; instance to use.
      * @return a &lt;code&gt;DescendantSelfAxisWeight&lt;/code&gt;.
      */</comment>
    <function><type><specifier>protected</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>DescendantSelfAxisWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">322</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>DescendantSelfAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
      <expr><operator>*</operator> <name><name>The</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>Weight</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>implementation</name></expr> <for>for this
      * &lt;code&gt;DescendantSelfAxisWeight&lt;/code&gt;.
      */
    private class DescendantSelfAxisWeight implements Weight <block>{<block_content>
    <class><specifier>private</specifier> class <name>DescendantSelfAxisWeight</name> <super_list><extends>extends <super><name>Weight</name></super></extends></super_list> <block>{
 
         <comment type="block" format="javadoc">/**
          * The searcher in use
@@ -376,9 +377,10 @@ class DescendantSelfAxisQuery extends Query implements JackrabbitQuery {
          * @return a &lt;code&gt;DescendantSelfAxisScorer&lt;/code&gt;.
          * @throws IOException if an error occurs while reading from the index.
          */</comment>
        <function><type><specifier>public</specifier> <name>Scorer</name></type> <name>scorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>subScorer</name> <operator>=</operator> <call><name><name>subQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <function><type><specifier>public</specifier> <name>Scorer</name></type> <name>scorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>scoreDocsInOrder</name></decl></parameter>,
                <parameter><decl><type><name>boolean</name></type> <name>topScorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>subScorer</name> <operator>=</operator> <call><name><name>subQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><name>HierarchyResolver</name></type> <name>resolver</name> <init>= <expr><operator>(</operator><name>HierarchyResolver</name><operator>)</operator> <name>reader</name></expr></init></decl>;</decl_stmt>
             <return>return <expr><operator>new</operator> <call><name>DescendantSelfAxisScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr>;</return>
         <expr_stmt/></block_content></block></function></block_content></block></function></block></class></block_content></block></for>}</block>
@@ <operator>-</operator><literal type="number">428</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">430</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>class</name> <name>DescendantSelfAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
          <expr><operator>*</operator><operator>/</operator>
         <specifier>private</specifier> <name>final</name> <name><name>int</name><index>[]</index></name> <name>singleDoc</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;
 
        <comment type="block" format="javadoc">/**
         * The next document id to be returned
         */</comment>
        <expr><specifier>private</specifier> <name>int</name> <name>currentDoc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;

         <comment type="block" format="javadoc">/**
          * Creates a new &lt;code&gt;DescendantSelfAxisScorer&lt;/code&gt;.
          *
@@ -444,59 +451,59 @@ class DescendantSelfAxisQuery extends Query implements JackrabbitQuery {
             this.contextHits = new BitSet(reader.maxDoc());
         }
 
        /**
         * {@inheritDoc}
         */</comment>
        <expr><specifier>public</specifier> <name>boolean</name> <call><name>next</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><call><name>collectContextHits</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>subScorer</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>contextHits</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>currentDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>currentDoc</name></expr>;</return>
             <expr_stmt/></block_content></block></if></if_stmt></block_content></block></function></block_content></block></if></if_stmt>}</block>
            <name>int</name> <name>nextDoc</name> <operator>=</operator> <call><name><name>subScorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <while>while <condition>(<expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
 
                <if_stmt><if>if <condition>(<expr><call><name>isValid</name><argument_list>(<argument><expr><name>nextDoc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            <expr_stmt><expr><call><name>collectContextHits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <call><name><name>subScorer</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>contextHits</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <while>while <condition>(<expr><name>currentDoc</name> <operator>!=</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name>isValid</name><argument_list>(<argument><expr><name>currentDoc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><name>currentDoc</name></expr>;</return>
                 </block_content>}</block></if></if_stmt>
 
                 <comment type="line">// try next</comment>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <ternary><condition><expr><call><name><name>subScorer</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><call><name><name>subScorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>
                <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <call><name><name>subScorer</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></while>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
            <return>return <expr><name>currentDoc</name></expr>;</return>
         </block_content>}</block></if></if_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
            <return>return <expr><call><name><name>subScorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr>;</return>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
            <return>return <expr><name>currentDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><call><name><name>subScorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <decl_stmt><decl><type><name>boolean</name></type> <name>match</name> <init>= <expr><call><name><name>subScorer</name><operator>.</operator><name>skipTo</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>match</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name>collectContextHits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><call><name>isValid</name><argument_list>(<argument><expr><call><name><name>subScorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>next</name><argument_list>()</argument_list></call></expr>;</return>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>currentDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>currentDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

            <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <call><name><name>subScorer</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>currentDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>NO_MORE_DOCS</name></expr>;</return>
             </block_content>}</block></if> <else>else <block>{<block_content>
                <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                <expr_stmt><expr><call><name>collectContextHits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><ternary><condition><expr><call><name>isValid</name><argument_list>(<argument><expr><name>currentDoc</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>currentDoc</name></expr> </then><else>: <expr><call><name>nextDoc</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</return>
             </block_content>}</block></else></if_stmt>
         </block_content>}</block></function>
 
         <function><type><specifier>private</specifier> <name>void</name></type> <name>collectContextHits</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><operator>!</operator><name>contextHitsCalculated</name></expr>)</condition> <block>{<block_content>
                 <decl_stmt><decl><type><name>long</name></type> <name>time</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>HitCollector</name></super><argument_list>()</argument_list> <block>{
                    <function><type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractHitCollector</name></super><argument_list>()</argument_list> <block>{
                    <function><annotation>@<name>Override</name></annotation>
                    <type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                         <expr_stmt><expr><call><name><name>contextHits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     </block_content>}</block></function>
                 }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// find all</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">513</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">520</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ class <name>DescendantSelfAxisQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name> <block>{
             }</block></expr></expr_stmt>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * @throws UnsupportedOperationException this implementation always
         *                                       throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
        </block_content>}</block></function>

         <comment type="block" format="javadoc">/**
          * Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;doc&lt;/code&gt; is a valid match from
          * the sub scorer against the context hits. The caller must ensure
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DocOrderScoreNodeIterator.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DocOrderScoreNodeIterator.java
index af3315b3e..2ab79f78b 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DocOrderScoreNodeIterator.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DocOrderScoreNodeIterator.java
@@ -270,6 +270,7 @@ class DocOrderScoreNodeIterator implements ScoreNodeIterator {
     /**
      * Indicates that sorting failed.
      */</comment>
    <class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
     <specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>SortFailedException</name> <super_list><extends>extends <super><name>RuntimeException</name></super></extends></super_list> <block>{
     }</block></class>
 }</block></class>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorBase</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..5b572c58c</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">105</literal> @@</expr></argument></argument_list></call></expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Abstract base class for &lt;code&gt;FieldComparator&lt;/code&gt; implementations
 * which are based on values in the form of &lt;code&gt;Comparables&lt;/code&gt;.
 */</comment>
<class><specifier>abstract</specifier> class <name>FieldComparatorBase</name> <super_list><extends>extends <super><name>FieldComparator</name></super></extends></super_list> <block>{

    <comment type="block" format="javadoc">/**
     * The bottom value.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Comparable</name></type> <name>bottom</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Value for a document
     *
     * @param doc  id of the document
     * @return  the value for the given id
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>Comparable</name></type> <name>sortValue</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Retrieves the value of a given slot
     *
     * @param slot  index of the value to retrieve
     * @return  the value in the given slot
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>Comparable</name></type> <name>getValue</name><argument_list>(<argument><expr><name>int</name> <name>slot</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Puts a value into a given slot
     *
     * @param slot  index where to put the value
     * @param value  the value to put into the given slot
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>setValue</name><argument_list>(<argument><expr><name>int</name> <name>slot</name></expr></argument>, <argument><expr><name>Comparable</name> <name>value</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>slot2</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><call><name>compare</name><argument_list>(<argument><expr><call><name>getValue</name><argument_list>(<argument><expr><name>slot1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>getValue</name><argument_list>(<argument><expr><name>slot2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>compareBottom</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><call><name>compare</name><argument_list>(<argument><expr><name>bottom</name></expr></argument>, <argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setBottom</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name>bottom</name> <operator>=</operator> <call><name>getValue</name><argument_list>(<argument><expr><name>slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Compare two values
     *
     * @param val1  first value
     * @param val2  second value
     * @return  A negative integer if &lt;code&gt;val1&lt;/code&gt; comes before &lt;code&gt;val2&lt;/code&gt;,
     *   a positive integer if &lt;code&gt;val1&lt;/code&gt; comes after &lt;code&gt;val2&lt;/code&gt; and
     *   &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;val1&lt;/code&gt; and &lt;code&gt;val2&lt;/code&gt; are equal.
     */</comment>
    <function><type><specifier>protected</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>Comparable</name></type> <name>val1</name></decl></parameter>, <parameter><decl><type><name>Comparable</name></type> <name>val2</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>val1</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>val2</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="number">0</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></if>
        <if type="elseif">else if <condition>(<expr><name>val2</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><call><name><name>Util</name><operator>.</operator><name>compare</name></name><argument_list>(<argument><expr><name>val1</name></expr></argument>, <argument><expr><name>val2</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>copy</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>setValue</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Comparable</name></type> <name>value</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><call><name>getValue</name><argument_list>(<argument><expr><name>slot</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorDecorator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorDecorator</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..d3ea3e1ac</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldComparatorDecorator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">62</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Implements a &lt;code&gt;FieldComparator&lt;/code&gt; which decorates a
 * base comparator.
 */</comment>
<class><specifier>abstract</specifier> class <name>FieldComparatorDecorator</name> <super_list><extends>extends <super><name>FieldComparatorBase</name></super></extends></super_list> <block>{

    <comment type="block" format="javadoc">/**
     * The base comparator
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>FieldComparatorBase</name></type> <name>base</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Create a new instance which delegates to a base comparator.
     * @param base  delegatee
     */</comment>
    <constructor><specifier>public</specifier> <name>FieldComparatorDecorator</name><parameter_list>(<parameter><decl><type><name>FieldComparatorBase</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>base</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><call><name><name>base</name><operator>.</operator><name>sortValue</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>Comparable</name></type> <name>getValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><call><name><name>base</name><operator>.</operator><name>getValue</name></name><argument_list>(<argument><expr><name>slot</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>setValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot</name></decl></parameter>, <parameter><decl><type><name>Comparable</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>base</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldSelectors</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldSelectors</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">87a63ea4a</literal><operator>..</operator><literal type="number">01796033e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldSelectors</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>FieldSelectors</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FieldSelectors</name> <block>{
     <expr><specifier>private</specifier> <call><name>FieldSelectors</name><argument_list>()</argument_list></call> <block>{
     }</block>
 
    @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
     <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>FieldSelector</name> <name>UUID</name> <operator>=</operator> <operator>new</operator> <class><super><name>FieldSelector</name></super><argument_list>()</argument_list> <block>{
         <comment type="block" format="javadoc">/**
          * Only accepts {@link FieldNames#UUID}.
@@ -46,6 +47,7 @@ public class FieldSelectors {
         }
     };
 
    @SuppressWarnings("serial")
     public static final FieldSelector UUID_AND_PARENT = new FieldSelector() {
         /**
          * Accepts {@link FieldNames#UUID} and {@link FieldNames#PARENT}.
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IDField.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IDField.java
index fd97d0e18..9105980bc 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IDField.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IDField.java
@@ -37,7 +37,7 @@ public class IDField extends AbstractField {
         this.isStored = true;
         this.isTokenized = false;
         this.omitNorms = true;
        this.omitTf = true;
        this.omitTermFreqAndPositions = true;
     }
 
     public String stringValue() {
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexDeletionPolicyImpl.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexDeletionPolicyImpl.java
index db14989ab..ff29e6a18 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexDeletionPolicyImpl.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexDeletionPolicyImpl.java
@@ -79,7 +79,7 @@ public class IndexDeletionPolicyImpl implements IndexDeletionPolicy {
 
     void readCurrentGeneration() throws IOException {
         Directory dir = index.getDirectory();
        String[] names = dir.list();
        String[] names = dir.listAll();
         long max = 0;
         if (names != null) {
             for (String name : names) {
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexFormatVersion.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexFormatVersion.java
index b55625c40..6596051d2 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexFormatVersion.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/IndexFormatVersion.java
@@ -102,7 +102,8 @@ public class IndexFormatVersion {
      * index reader.
      */</comment>
     <function><type><specifier>public</specifier> <specifier>static</specifier> <name>IndexFormatVersion</name></type> <name>getVersion</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>indexReader</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Collection</name></type> <name>fields</name> <init>= <expr><call><name><name>indexReader</name><operator>.</operator><name>getFieldNames</name></name><argument_list>(
        <argument><expr><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
        <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>fields</name> <operator>=</operator> <call><name><name>indexReader</name><operator>.</operator><name>getFieldNames</name></name><argument_list>(
                 <argument><expr><name><name>IndexReader</name><operator>.</operator><name>FieldOption</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>fields</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>LOCAL_NAME</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>indexReader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
             <return>return <expr><name><name>IndexFormatVersion</name><operator>.</operator><name>V3</name></name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexHistory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexHistory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bc64f59c6</name><operator>..</operator><name>d5b28d531</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexHistory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexHistory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>IndexHistory</name> <block>{
         <expr><name><name>this</name><operator>.</operator><name>indexDir</name></name> <operator>=</operator> <name>dir</name></expr>;
         <name><name>this</name><operator>.</operator><name>maxAge</name></name> <operator>=</operator> <name>maxAge</name></block></expr>;</expr_stmt>
         <comment type="line">// read all index infos</comment>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>names</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>names</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>names</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <for>for <control>(<init><decl><type><name>String</name></type> <name>name</name> <range>: <expr><name>names</name></expr></range></decl></init>)</control> <block>{<block_content>
                 <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>INDEXES</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>IndexHistory</name> <block>{
     <expr><name>void</name> <call><name>pruneOutdated</name><argument_list>()</argument_list></call> <block>{
         <expr><name>long</name> <name>threshold</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>maxAge</name></expr>;
         <call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Pruning index infos older than: "</literal> <operator>+</operator> <name>threshold</name> <operator>+</operator> <literal type="string">"("</literal> <operator>+</operator> <name>indexDir</name> <operator>+</operator> <literal type="string">")"</literal></expr></argument>)</argument_list></call></block></expr>;
        <name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>indexInfosMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>IndexInfos</name></argument>&gt;</argument_list></name></type> <name>it</name> <init>= <expr><call><name><name>indexInfosMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <comment type="line">// never prune the current generation</comment>
         <if_stmt><if>if <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>IndexInfos</name></type> <name>infos</name> <init>= <expr><operator>(</operator><name>IndexInfos</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>IndexInfos</name></type> <name>infos</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Skipping first index infos. generation="</literal> <operator>+</operator> <call><name><name>infos</name><operator>.</operator><name>getGeneration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></block></class></expr>}</block></expr></expr_stmt>
         <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexInfos</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexInfos</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ae643ed9b</name><operator>..</operator><literal type="number">693d693d2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexInfos</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexInfos</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>IndexInfos</name> implements <name>Cloneable</name> <block>{
                 <expr><call><name><name>dataOut</name><operator>.</operator><name>writeInt</name></name><argument_list>(<argument><expr><name>WITH_GENERATION</name></expr></argument>)</argument_list></call></expr>;
                 <call><name><name>dataOut</name><operator>.</operator><name>writeInt</name></name><argument_list>(<argument><expr><name>counter</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                 <expr_stmt><expr><call><name><name>dataOut</name><operator>.</operator><name>writeInt</name></name><argument_list>(<argument><expr><call><name><name>indexes</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <for>for <control>(<init><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
                    <decl_stmt><decl><type><name>IndexInfo</name></type> <name>info</name> <init>= <expr><operator>(</operator><name>IndexInfo</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <for>for <control>(<init><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>IndexInfo</name></argument>&gt;</argument_list></name></type> <name>it</name> <init>= <expr><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
                    <decl_stmt><decl><type><name>IndexInfo</name></type> <name>info</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                     <expr_stmt><expr><call><name><name>dataOut</name><operator>.</operator><name>writeUTF</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name><name>dataOut</name><operator>.</operator><name>writeLong</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getGeneration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"  + {}:{}"</literal></expr></argument>, <argument><expr><call><name><name>info</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>info</name><operator>.</operator><name>getGeneration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>IndexInfos</name> implements <name>Cloneable</name> <block>{
      <expr><operator>*</operator> @</expr><return>return <expr><name>an</name> <name>iterator</name> <name>over</name> <name>the</name> <block>{@<expr><name>link</name> <name>IndexInfo</name></expr>}</block><name>s</name> <name>contained</name> <name>in</name> <name>this</name> <name>index</name>
      <operator>*</operator>          <name><name>infos</name><operator>.</operator></name>
      *<operator>/</operator>
    <name>Iterator</name> <call><name>iterator</name><argument_list>()</argument_list></call> <block>{
    <expr><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>IndexInfo</name></argument>&gt;</argument_list></name> <call><name>iterator</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><call><name><name>indexes</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr>;</return></block></expr>
     }</block>
 
@@ <operator>-</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>class</name> <name>IndexInfos</name> implements <name>Cloneable</name> <block>{
      <expr><operator>*</operator>
      <operator>*</operator> @</expr><return>return <expr><name>a</name> <name>clone</name> <name>of</name> <name>this</name> <name>index</name> <name><name>infos</name><operator>.</operator></name>
      *<operator>/</operator>
    @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
     <specifier>public</specifier> <name>IndexInfos</name> <call><name>clone</name><argument_list>()</argument_list></call> <block>{
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>IndexInfos</name></type> <name>clone</name> <init>= <expr><operator>(</operator><name>IndexInfos</name><operator>)</operator> <call><name><name>super</name><operator>.</operator><name>clone</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name>clone</name><operator>.</operator><name>indexes</name></name> <operator>=</operator> <operator>(</operator><name>LinkedHashMap</name><operator>)</operator> <call><name><name>indexes</name><operator>.</operator><name>clone</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>clone</name><operator>.</operator><name>indexes</name></name> <operator>=</operator> <operator>(</operator><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>IndexInfo</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>indexes</name><operator>.</operator><name>clone</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>IndexInfo</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>clone</name><operator>.</operator><name>indexes</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                 <expr_stmt><expr><call><name><name>entry</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>clone</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">342</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">343</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <name>class</name> <name>IndexInfos</name> implements <name>Cloneable</name> <block>{
      <expr><operator>*</operator> @</expr><return>return <expr><name>names</name> <name>of</name> <name>all</name> <name>generation</name> <name>files</name> <name>of</name> <name>this</name> <name>index</name> <name><name>infos</name><operator>.</operator></name>
      *<operator>/</operator>
     <specifier>private</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>getFileNames</name><argument_list>(<argument><expr><name>Directory</name> <name>directory</name></expr></argument>, <argument><expr><name>final</name> <name>String</name> <name>base</name></expr></argument>)</argument_list></call> <block>{
        <expr><name><name>String</name><index>[]</index></name> <name>names</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;
        <name><name>String</name><index>[]</index></name> <name>names</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</return></block></expr></expr_stmt>
         <try>try <block>{<block_content>
            <expr_stmt><expr><name>names</name> <operator>=</operator> <call><name><name>directory</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>names</name> <operator>=</operator> <call><name><name>directory</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <comment type="line">// TODO: log warning? or throw?</comment>
         </block_content>}</block></catch></try>
        <if_stmt><if>if <condition>(<expr><name>names</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
        </block_content>}</block></if></if_stmt>
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>nameList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name><name>names</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>n</name> <range>: <expr><name>names</name></expr></range></decl></init>)</control> <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><call><name><name>n</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMerger</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMerger</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">13ec1e177</literal><operator>..</operator><name>fa0563b70</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMerger</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMerger</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">329</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">329</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>IndexMerger</name> implements <name>IndexListener</name> <block>{
      <expr><operator>*</operator> <name>many</name> <name>document</name> <name>it</name> <name><name>contains</name><operator>.</operator></name> &lt;<name>code</name><operator>&gt;</operator><name><name>Index</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>is</name> <name>comparable</name> <name>using</name> <name>the</name>
      <operator>*</operator> <name>number</name> <name>of</name> <name>documents</name> <name>it</name> <name><name>contains</name><operator>.</operator></name>
      *<operator>/</operator>
    <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>Index</name> implements <name>Comparable</name> <block>{
    <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>Index</name> implements <name><name>Comparable</name><argument_list type="generic">&lt;<argument><name>Index</name></argument>&gt;</argument_list></name> <block>{
 
         <comment type="block" format="javadoc">/**
          * The name of the index.
@@ -361,8 +361,7 @@ class IndexMerger implements IndexListener {
          *         Index is less than, equal to, or greater than the specified
          *         Index.
          */</comment>
        <expr><specifier>public</specifier> <name>int</name> <call><name>compareTo</name><argument_list>(<argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></call> <block>{
            <expr><name>Index</name> <name>other</name> <operator>=</operator> <operator>(</operator><name>Index</name><operator>)</operator> <name>o</name></expr>;
        <specifier>public</specifier> <name>int</name> <call><name>compareTo</name><argument_list>(<argument><expr><name>Index</name> <name>other</name></expr></argument>)</argument_list></call> <block>{
             <expr><name>int</name> <name>val</name> <operator>=</operator> <name>numDocs</name> <operator>&lt;</operator> <name><name>other</name><operator>.</operator><name>numDocs</name></name> <operator>?</operator> <operator>-</operator><literal type="number">1</literal> <operator>:</operator> <operator>(</operator><name>numDocs</name> <operator>==</operator> <name><name>other</name><operator>.</operator><name>numDocs</name></name> <operator>?</operator> <literal type="number">0</literal> <operator>:</operator> <literal type="number">1</literal><operator>)</operator></expr>;</block></block></expr>
             <if_stmt><if>if <condition>(<expr><name>val</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                 <return>return <expr><name>val</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMigration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMigration</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2db7c3060</literal><operator>..</operator><name>cb2468875</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMigration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexMigration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexMigration</name> <block>{
                     <expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>UNLIMITED</name></name></expr>)</block></expr>;</expr_stmt>
             <try>try <block>{<block_content>
                 <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><operator>new</operator> <call><name>MigrationIndexReader</name><argument_list>(
                        <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>index</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>index</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>,
                         <argument><expr><name>oldSeparatorChar</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <try>try <block>{<block_content>
                     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addIndexes</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>IndexReader</name><index>[]</index></name><block>{<expr><name>r</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingConfigurationImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingConfigurationImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">96f82a454</literal><operator>..</operator><name>f81186768</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingConfigurationImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingConfigurationImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexingConfigurationImpl</name></expr></expr_stmt>
                     <if_stmt><if>if <condition>(<expr><call><name><name>analyzerNode</name><operator>.</operator><name>getNodeName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"analyzer"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                         <decl_stmt><decl><type><name>String</name></type> <name>analyzerClassName</name> <init>= <expr><call><name><name>analyzerNode</name><operator>.</operator><name>getAttributes</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNamedItem</name><argument_list>(<argument><expr><literal type="string">"class"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getNodeValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                         <try>try <block>{<block_content>
                        <decl_stmt><decl><type><name>Class</name></type> <name>clazz</name> <init>= <expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>analyzerClassName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                            <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"rawtypes"</literal></expr></argument>)</argument_list></annotation>
                            <type><name>Class</name></type> <name>clazz</name> <init>= <expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>analyzerClassName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                             <if_stmt><if>if <condition>(<expr><name>clazz</name> <operator>==</operator> <name><name>JackrabbitAnalyzer</name><operator>.</operator><name>class</name></name></expr>)</condition> <block>{<block_content>
                                 <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Not allowed to configure "</literal> <operator>+</operator> <call><name><name>JackrabbitAnalyzer</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator>  <literal type="string">" for a property. "</literal>
                                         <operator>+</operator> <literal type="string">"Using default analyzer for that property."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingQueue</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingQueue</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6a994094c</literal><operator>..</operator><literal type="number">4be7f649d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingQueue</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>IndexingQueue</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>class</name> <name>IndexingQueue</name> <block>{
             <expr><call><name><name>finished</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>pendingDocuments</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></try></block_content></block></if></if_stmt></block_content></block></try></block_content></block></try></block_content></block></if></if_stmt></block></expr>
         }</block>
 
        <name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>finished</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;
        <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Document</name></argument>&gt;</argument_list></name> <name>it</name> <operator>=</operator> <call><name><name>finished</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
         <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><operator>(</operator><name>Document</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Util</name><operator>.</operator><name>isDocumentReady</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><call><name><name>it</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitAnalyzer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitAnalyzer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cb9b4c045</name><operator>..</operator><literal type="number">9a7fbeeec</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitAnalyzer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitAnalyzer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>TokenStream</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>standard</name><operator>.</operator><name>StandardAnalyzer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * This is the global jackrabbit lucene analyzer. By default, all
@@ -39,7 +41,7 @@ public class JackrabbitAnalyzer  extends Analyzer {
      * The default Jackrabbit analyzer if none is configured in &lt;code&gt;&lt;SearchIndex&gt;&lt;/code&gt;
      * configuration.
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Analyzer</name></type> <name>defaultAnalyzer</name> <init>=  <expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Analyzer</name></type> <name>defaultAnalyzer</name> <init>=  <expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name><name>Version</name><operator>.</operator><name>LUCENE_24</name></name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * The indexing configuration.
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitIndexReader.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitIndexReader.java
index 9410324d7..0f75f267d 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitIndexReader.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitIndexReader.java
@@ -106,6 +106,11 @@ public final class JackrabbitIndexReader
         return reader.getIndexReaders();
     }
 
    public IndexReader[] getSequentialSubReaders() {
      // No sequential sub-readers
      return null;
    }

     /**
      * {@inheritDoc}
      */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitParser</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitParser</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ae106333a</name><operator>..</operator><literal type="number">432e854c4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitParser</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>JackrabbitParser</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>SAXException</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>
  <operator>*</operator> @<name>since</name> <name>Apache</name> <name>Jackrabbit</name> <literal type="number">2.0</literal>
  <operator>*</operator><operator>/</operator>
@<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
 <name>class</name> <name>JackrabbitParser</name> implements <name>Parser</name> <block>{
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitQueryParser.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitQueryParser.java
index 335d82b1f..03b60cee9 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitQueryParser.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitQueryParser.java
@@ -24,6 +24,7 @@ import org.apache.lucene.queryParser.QueryParser;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.BooleanClause;
import org.apache.lucene.util.Version;
 
 /**
  * &lt;code&gt;JackrabbitQueryParser&lt;/code&gt; extends the standard lucene query parser
@@ -50,7 +51,7 @@ public class JackrabbitQueryParser extends QueryParser {
                                  Analyzer analyzer,
                                  SynonymProvider synonymProvider,
                                  PerQueryCache cache) {
        super(fieldName, analyzer);
        super(Version.LUCENE_24, fieldName, analyzer);
         this.synonymProvider = synonymProvider;
         this.cache = cache;
         setAllowLeadingWildcard(true);
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitTermQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitTermQuery.java
index 27e21f514..016aeda5f 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitTermQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/JackrabbitTermQuery.java
@@ -39,7 +39,7 @@ public class JackrabbitTermQuery extends TermQuery {
         super(t);
     }
 
    protected Weight createWeight(Searcher searcher) throws IOException {
    public Weight createWeight(Searcher searcher) throws IOException {
         return new JackrabbitTermWeight(searcher, super.createWeight(searcher));
     }
 
@@ -63,8 +63,9 @@ public class JackrabbitTermQuery extends TermQuery {
         /**
          * {@inheritDoc}
          */</comment>
        <expr><specifier>protected</specifier> <name>Scorer</name> <call><name>createScorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
            <return>return <expr><call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
        <specifier>protected</specifier> <name>Scorer</name> <call><name>createScorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
            <return>return <expr><call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></while>
 
         <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LazyTextExtractorField.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LazyTextExtractorField.java
index 41692c12d..aecd6d891 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LazyTextExtractorField.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LazyTextExtractorField.java
@@ -42,6 +42,7 @@ import org.xml.sax.helpers.DefaultHandler;
  *
  * @see #isExtractorFinished()
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>LazyTextExtractorField</name> <super_list><extends>extends <super><name>AbstractField</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LengthSortComparator.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LengthSortComparator.java
index 377fb084b..408f5977e 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LengthSortComparator.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LengthSortComparator.java
@@ -16,23 +16,20 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortComparatorSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDocComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>SharedFieldComparatorSource</name><operator>.</operator><name>SimpleFieldComparator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>NameFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>NameFactoryImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>conversion</name><operator>.</operator><name>IllegalNameException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>NameFactoryImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparatorSource</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * &lt;code&gt;LengthSortComparator&lt;/code&gt; implements a sort comparator source that
 * &lt;code&gt;LengthSortComparator&lt;/code&gt; implements a &lt;code&gt;FieldComparator&lt;/code&gt; which
  * sorts on the length of property values.
  */</comment>
<class><specifier>public</specifier> class <name>LengthSortComparator</name> <super_list><implements>implements <super><name>SortComparatorSource</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">2513564768671391632L</literal></expr></init></decl>;</decl_stmt>
<class><specifier>public</specifier> class <name>LengthSortComparator</name> <super_list><extends>extends <super><name>FieldComparatorSource</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
      * The index internal namespace mappings.
@@ -43,52 +40,15 @@ public class LengthSortComparator implements SortComparatorSource {
         this.nsMappings = nsMappings;
     }
 
    /**
     * Creates a new comparator.
     *
     * @param reader    the current index reader.
     * @param fieldname the name of the property to sort on. This is the string
     *                  representation of {@link org.apache.jackrabbit.spi.Name
     *                  Name}.
     * @return the score doc comparator.
     * @throws IOException if an error occurs while reading from the index.
     */</comment>
    <function><type><specifier>public</specifier> <name>ScoreDocComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                            <parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>FieldComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sortPos</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>reversed</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>NameFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>NameFactoryImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>Comparator</name><argument_list>(<argument><expr><name>reader</name></expr></argument>,
                    <argument><expr><call><name><name>nsMappings</name><operator>.</operator><name>translateName</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalNameException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>SimpleFieldComparator</name><argument_list>(<argument><expr><call><name><name>nsMappings</name><operator>.</operator><name>translateName</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTY_LENGTHS</name></name></expr></argument>, <argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></catch>
        <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalNameException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><call><name><name>Util</name><operator>.</operator><name>createIOException</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch></try>
     </block_content>}</block></function>
 
    <class><specifier>private</specifier> <specifier>final</specifier> class <name>Comparator</name> <super_list><extends>extends <super><name>AbstractScoreDocComparator</name></super></extends></super_list> <block>{

        <comment type="block" format="javadoc">/**
         * The term look ups of the index segments.
         */</comment>
        <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>SharedFieldCache</name><operator>.</operator><name>ValueIndex</name><index>[]</index></name></type> <name>indexes</name></decl>;</decl_stmt>

        <constructor><specifier>public</specifier> <name>Comparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                          <parameter><decl><type><name>String</name></type> <name>propertyName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>indexes</name></name> <operator>=</operator> <operator>new</operator> <name><name>SharedFieldCache</name><operator>.</operator><name>ValueIndex</name><index>[<expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>namedLength</name> <init>= <expr><call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name>indexes</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>SharedFieldCache</name><operator>.</operator><name>INSTANCE</name><operator>.</operator><name>getValueIndex</name></name><argument_list>(
                        <argument><expr><name>r</name></expr></argument>, <argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTY_LENGTHS</name></name></expr></argument>,
                        <argument><expr><name>namedLength</name></expr></argument>, <argument><expr><name><name>LengthSortComparator</name><operator>.</operator><name>this</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></constructor>

        <function><type><specifier>public</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name>readerIndex</name><argument_list>(<argument><expr><name><name>i</name><operator>.</operator><name>doc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name><name>indexes</name><index>[<expr><name>idx</name></expr>]</index></name><operator>.</operator><call><name>getValue</name><argument_list>(<argument><expr><name><name>i</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LocalNameQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LocalNameQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>db84203ca</name><operator>..</operator><literal type="number">45d79612f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LocalNameQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LocalNameQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * &lt;code&gt;LocalNameQuery&lt;/code&gt; implements a query for the local name of a node.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>LocalNameQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LocalNameRangeQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LocalNameRangeQuery.java
index f1036dc3a..db881fb72 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LocalNameRangeQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LocalNameRangeQuery.java
@@ -22,6 +22,7 @@ import org.apache.lucene.index.Term;
  * &lt;code&gt;LocalNameRangeQuery&lt;/code&gt; implements a range query on the local name
  * of nodes.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>LocalNameRangeQuery</name> <super_list><extends>extends <super><name>RangeQuery</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LowerCaseSortComparator.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LowerCaseSortComparator.java
index a8b57ae70..6b65c48dd 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LowerCaseSortComparator.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/LowerCaseSortComparator.java
@@ -16,71 +16,43 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparatorSource</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDocComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortComparatorSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * &lt;code&gt;LowerCaseSortComparator&lt;/code&gt; implements a sort comparator that
 * compares the lower-cased string values of a base sort comparator.
 * &lt;code&gt;LowerCaseSortComparator&lt;/code&gt; implements a &lt;code&gt;FieldComparator&lt;/code&gt; which
 * compares the lower-cased string values of a base comparator.
  */</comment>
<class><specifier>public</specifier> class <name>LowerCaseSortComparator</name> <super_list><implements>implements <super><name>SortComparatorSource</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">5396206509020979445L</literal></expr></init></decl>;</decl_stmt>
<class><specifier>public</specifier> class <name>LowerCaseSortComparator</name> <super_list><extends>extends <super><name>FieldComparatorSource</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
     * The base sort comparator.
     * The base comparator.
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SortComparatorSource</name></type> <name>base</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>FieldComparatorSource</name></type> <name>base</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
     * Creates a new lower case sort comparator.
     * Creates a new upper case sort comparator.
      *
      * @param base the base sort comparator source.
      */</comment>
    <constructor><specifier>public</specifier> <name>LowerCaseSortComparator</name><parameter_list>(<parameter><decl><type><name>SortComparatorSource</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>LowerCaseSortComparator</name><parameter_list>(<parameter><decl><type><name>FieldComparatorSource</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>ScoreDocComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                            <parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>Comparator</name><argument_list>(<argument><expr><call><name><name>base</name><operator>.</operator><name>newComparator</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>Comparator</name> <super_list><implements>implements <super><name>ScoreDocComparator</name></super></implements></super_list> <block>{

        <decl_stmt><decl><type><specifier>private</specifier> <name>ScoreDocComparator</name></type> <name>base</name></decl>;</decl_stmt>

        <constructor><specifier>private</specifier> <name>Comparator</name><parameter_list>(<parameter><decl><type><name>ScoreDocComparator</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>FieldComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sortPos</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>reversed</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>FieldComparator</name></type> <name>comparator</name> <init>= <expr><call><name><name>base</name><operator>.</operator><name>newComparator</name></name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>, <argument><expr><name>numHits</name></expr></argument>, <argument><expr><name>sortPos</name></expr></argument>, <argument><expr><name>reversed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <assert>assert <expr><name>comparator</name> <operator>instanceof</operator> <name>FieldComparatorBase</name></expr>;</assert>
 
        <comment type="block" format="javadoc">/**
         * @see Util#compare(Comparable, Comparable)
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><name>ScoreDoc</name></type> <name>j</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><call><name><name>Util</name><operator>.</operator><name>compare</name></name><argument_list>(<argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>

        <function><type><specifier>public</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>Comparable</name></type> <name>c</name> <init>= <expr><call><name><name>base</name><operator>.</operator><name>sortValue</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><call><name><name>c</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
        <return>return <expr><operator>new</operator> <class><super><name>FieldComparatorDecorator</name></super><argument_list>(<argument><expr><operator>(</operator><name>FieldComparatorBase</name><operator>)</operator> <name>comparator</name></expr></argument>)</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <decl_stmt><decl><type><name>Comparable</name></type> <name>c</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>sortValue</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return>return <expr><ternary><condition><expr><name>c</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>c</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</return>
             </block_content>}</block></function>
        }</block></class>

        <specifier>public</specifier> <name>int</name> <call><name>sortType</name><argument_list>()</argument_list></call> <block>{
            <return>return <expr><name><name>SortField</name><operator>.</operator><name>CUSTOM</name></name></expr>;</return>
        }</block></expr></return>
        </block_content>}</block></else></if_stmt><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>

 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryHits</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryHits</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">155168627..26515a696</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryHits</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryHits</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>LuceneQueryHits</name> implements <name>QueryHits</name> <block>{
                            <expr><name>Query</name> <name>query</name></expr>)
             <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <name>reader</name></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <call><name><name>query</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// We rely on Scorer#nextDoc() and Scorer#advance(int) so enable</comment>
        <comment type="line">// scoreDocsInOrder</comment>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <call><name><name>query</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     }</block></class>
 
     <comment type="block" format="javadoc">/**
      * {@inheritDoc}
      */</comment>
     <function><type><specifier>public</specifier> <name>ScoreNode</name></type> <name>nextScoreNode</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>scorer</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>==</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr>)</condition> <block>{<block_content>
             <return>return <expr><literal type="null">null</literal></expr>;</return>
         </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>NodeId</name></type> <name>id</name> <init>= <expr><operator>new</operator> <call><name>NodeId</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>document</name></name><argument_list>(
                 <argument><expr><name>doc</name></expr></argument>, <argument><expr><name><name>FieldSelectors</name><operator>.</operator><name>UUID</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>UUID</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <return>return <expr><operator>new</operator> <call><name>ScoreNode</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>LuceneQueryHits</name> implements <name>QueryHits</name> <block>{
      <expr><operator>*</operator> <block>{@<expr><name>inheritDoc</name></expr>}</block>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>void</name> <call><name>close</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <comment type="line">// make sure scorer frees resources</comment>
        <expr><call><name><name>scorer</name><operator>.</operator><name>skipTo</name></name><argument_list>(<argument><expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// make sure scorer frees resources</comment>
            <expr_stmt><expr><call><name><name>scorer</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllDocsQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllDocsQuery.java
index 175abc1e3..5dcfa9803 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllDocsQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllDocsQuery.java
@@ -26,6 +26,7 @@ import java.io.IOException;
  * &lt;code&gt;MatchAllDocsQuery&lt;/code&gt; extends the lucene &lt;code&gt;MatchAllDocsQuery&lt;/code&gt;
  * and in addition implements {@link JackrabbitQuery}.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>MatchAllDocsQuery</name>
         <super_list><extends>extends <super><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MatchAllDocsQuery</name></name></super></extends>
         <implements>implements <super><name>JackrabbitQuery</name></super></implements></super_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3a4d1c9c3</literal><operator>..</operator><name>a5c2c95e5</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>Specialized</name> <name>query</name> <name>that</name> <name>returns</name> <operator>/</operator> <name>scores</name> <name>all</name> <name>pages</name> <name>in</name> <name>the</name> <name>search</name> <name><name>index</name><operator>.</operator></name>
  * <operator>&lt;</operator><name>p</name><operator>&gt;</operator><name>Use</name> <name>this</name> <name>Query</name> <name>to</name> <name>perform</name> <name>a</name> <name>match</name> <literal type="char">'*'</literal><operator>.</operator>
  <operator>*</operator><operator>/</operator>
@<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
 <name>class</name> <name>MatchAllQuery</name> extends <name>Query</name> <block>{
 
     <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>field</name></expr>;
@@ <operator>-</operator><literal type="number">54</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">55</literal><operator>,</operator><literal type="number">7</literal> @@ <name>class</name> <name>MatchAllQuery</name> extends <name>Query</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>searcher</name> <name>the</name> <name>current</name> <name><name>searcher</name><operator>.</operator></name>
      * @</expr><return>return <expr><name><name>the</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>Weight</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name></expr></return> <for>for this Query.
      */
    protected Weight createWeight<control>(<init><expr><name>Searcher</name> <name>searcher</name></expr></init>)</control> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>MatchAllWeight</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>searcher</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f0209bc4c</name><operator>..</operator><literal type="number">5ff98730e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MatchAllScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>HitCollector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * The MatchAllScorer implements a Scorer that scores / collects all
@@ -56,11 +55,6 @@ class MatchAllScorer extends Scorer {
      */</comment>
     <decl_stmt><decl><type><specifier>private</specifier> <name>BitSet</name></type> <name>docFilter</name></decl>;</decl_stmt>
 
    <comment type="block" format="javadoc">/**
     * Explanation object. the same for all docs
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Explanation</name></type> <name>matchExpl</name></decl>;</decl_stmt>

     <comment type="block" format="javadoc">/**
      * Creates a new MatchAllScorer.
      *
@@ -74,57 +68,49 @@ class MatchAllScorer extends Scorer {
         super(Similarity.getDefault());
         this.reader = reader;
         this.field = field;
        matchExpl
                = new Explanation(Similarity.getDefault().idf(reader.maxDoc(),
                        reader.maxDoc()),
                        "matchAll");
         calculateDocFilter(cache);
     }
 
    /**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>score</name><parameter_list>(<parameter><decl><type><name>HitCollector</name></type> <name>hc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <while>while <condition>(<expr><call><name>next</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>hc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><call><name>doc</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>score</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>score</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>collector</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while>while <condition>(<expr><call><name>nextDoc</name><argument_list>()</argument_list></call> <operator>!=</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><call><name>docID</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></while>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>nextDoc</name></expr>;</return>
        </block_content>}</block></if></if_stmt>

         <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>docFilter</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>nextDoc</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
        <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><name>nextDoc</name></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><name>nextDoc</name></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>target</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <return>return <expr><call><name>next</name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>nextDoc</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><name>matchExpl</name></expr>;</return>
        <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>target</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <return>return <expr><call><name>nextDoc</name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllWeight.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllWeight.java
index 2f112ae6d..40c326860 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllWeight.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MatchAllWeight.java
@@ -28,6 +28,7 @@ import java.io.IOException;
 /**
  * This class implements the Weight calculation for the MatchAllQuery.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 class <name>MatchAllWeight</name> <super_list><extends>extends <super><name>AbstractWeight</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -76,7 +77,8 @@ class MatchAllWeight extends AbstractWeight {
      * @param reader index reader
      * @return a {@link MatchAllScorer} instance
      */</comment>
    <function><type><specifier>protected</specifier> <name>Scorer</name></type> <name>createScorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>protected</specifier> <name>Scorer</name></type> <name>createScorer</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>scoreDocsInOrder</name></decl></parameter>,
            <parameter><decl><type><name>boolean</name></type> <name>topScorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>MatchAllScorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MoreLikeThis</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MoreLikeThis</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bcd8ff2af</name><operator>..</operator><name>e539ec091</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MoreLikeThis</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>MoreLikeThis</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>PriorityQueue</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermFreqVector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Token</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>TokenStream</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>standard</name><operator>.</operator><name>StandardAnalyzer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>TermAttribute</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MoreLikeThis</name> <block>{
      <expr><operator>*</operator> <name>Default</name> <name>analyzer</name> <name>to</name> <name>parse</name> <name>source</name> <name>doc</name> <name><name>with</name><operator>.</operator></name>
      * @<name>see</name> <operator>#</operator><name>getAnalyzer</name>
      <operator>*</operator><operator>/</operator>
    <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>Analyzer</name> <name>DEFAULT_ANALYZER</name> <operator>=</operator> <operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>()</argument_list></call></expr>;
    <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>Analyzer</name> <name>DEFAULT_ANALYZER</name> <operator>=</operator> <operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name><name>Version</name><operator>.</operator><name>LUCENE_24</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <comment type="block" format="javadoc">/**
      * Ignore terms with less than this frequency in the source doc.
@@ -202,12 +204,12 @@ public final class MoreLikeThis {
      * @see #setStopWords
      * @see #getStopWords
      */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Set</name></type> <name>DEFAULT_STOP_WORDS</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>DEFAULT_STOP_WORDS</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * Current set of stop words.
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Set</name></type> <name>stopWords</name> <init>= <expr><name>DEFAULT_STOP_WORDS</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>stopWords</name> <init>= <expr><name>DEFAULT_STOP_WORDS</name></expr></init></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * Return a Query with no more than this many terms.
@@ -448,7 +450,7 @@ public final class MoreLikeThis {
      * @see org.apache.lucene.analysis.StopFilter#makeStopSet StopFilter.makeStopSet()
      * @see #getStopWords
      */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setStopWords</name><parameter_list>(<parameter><decl><type><name>Set</name></type> <name>stopWords</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setStopWords</name><parameter_list>(<parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>stopWords</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>stopWords</name></name> <operator>=</operator> <name>stopWords</name></expr>;</expr_stmt>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">456</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">458</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MoreLikeThis</name> <block>{
      <expr><operator>*</operator> <name>Get</name> <name>the</name> <name>current</name> <name>stop</name> <name>words</name> <name>being</name> <name><name>used</name><operator>.</operator></name>
      * @<name>see</name> <operator>#</operator><name>setStopWords</name>
      <operator>*</operator><operator>/</operator>
    <specifier>public</specifier> <name>Set</name> <call><name>getStopWords</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getStopWords</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><name>stopWords</name></expr>;</return></block></expr>
     }</block>
 
@@ <operator>-</operator><literal type="number">504</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">506</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MoreLikeThis</name> <block>{
     <expr><specifier>public</specifier> <name>Query</name> <call><name>like</name><argument_list>(<argument><expr><name>int</name> <name>docNum</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
         <if_stmt><if>if <condition>(<expr><name>fieldNames</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <comment type="line">// gather list of valid fields from lucene</comment>
            <decl_stmt><decl><type><name>Collection</name></type> <name>fields</name> <init>= <expr><call><name><name>ir</name><operator>.</operator><name>getFieldNames</name></name><argument_list>( <argument><expr><name><name>IndexReader</name><operator>.</operator><name>FieldOption</name><operator>.</operator><name>INDEXED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>fieldNames</name> <operator>=</operator> <operator>(</operator><name><name>String</name><index>[]</index></name><operator>)</operator> <call><name><name>fields</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>fields</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
            <type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>fields</name> <init>= <expr><call><name><name>ir</name><operator>.</operator><name>getFieldNames</name></name><argument_list>(<argument><expr><name><name>IndexReader</name><operator>.</operator><name>FieldOption</name><operator>.</operator><name>INDEXED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>fieldNames</name> <operator>=</operator> <call><name><name>fields</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>fields</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block></expr></expr_stmt>
 
         <return>return <expr><call><name>createQuery</name><argument_list>(<argument><expr><call><name>retrieveTerms</name><argument_list>(<argument><expr><name>docNum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">519</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">522</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MoreLikeThis</name> <block>{
     <expr><specifier>public</specifier> <name>Query</name> <call><name>like</name><argument_list>(<argument><expr><name>File</name> <name>f</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
         <if_stmt><if>if <condition>(<expr><name>fieldNames</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <comment type="line">// gather list of valid fields from lucene</comment>
            <decl_stmt><decl><type><name>Collection</name></type> <name>fields</name> <init>= <expr><call><name><name>ir</name><operator>.</operator><name>getFieldNames</name></name><argument_list>( <argument><expr><name><name>IndexReader</name><operator>.</operator><name>FieldOption</name><operator>.</operator><name>INDEXED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>fieldNames</name> <operator>=</operator> <operator>(</operator><name><name>String</name><index>[]</index></name><operator>)</operator> <call><name><name>fields</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>fields</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
            <type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>fields</name> <init>= <expr><call><name><name>ir</name><operator>.</operator><name>getFieldNames</name></name><argument_list>(<argument><expr><name><name>IndexReader</name><operator>.</operator><name>FieldOption</name><operator>.</operator><name>INDEXED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>fieldNames</name> <operator>=</operator> <call><name><name>fields</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>fields</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
 
         <return>return <expr><call><name>like</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileReader</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">596</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">600</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MoreLikeThis</name> <block>{
      <expr><operator>*</operator>
      <operator>*</operator> @<name>param</name> <name>words</name> <name>a</name> <name>map</name> <name>of</name> <name>words</name> <name>keyed</name> <name>on</name> <name>the</name> <call><name>word</name><argument_list>(<argument><expr><name>String</name></expr></argument>)</argument_list></call> <name>with</name> <name>Int</name> <name>objects</name> <name>as</name> <name>the</name> <name><name>values</name><operator>.</operator></name>
      *<operator>/</operator>
    <specifier>private</specifier> <name>PriorityQueue</name> <call><name>createQueue</name><argument_list>(<argument><expr><name>Map</name> <name>words</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>private</specifier> <name>PriorityQueue</name> <call><name>createQueue</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Int</name></argument>&gt;</argument_list></name> <name>words</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
         <comment type="line">// have collected all words in doc and their freqs</comment>
         <expr><name>int</name> <name>numDocs</name> <operator>=</operator> <call><name><name>ir</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
         <name>FreqQ</name> <name>res</name> <operator>=</operator> <operator>new</operator> <call><name>FreqQ</name><argument_list>(<argument><expr><call><name><name>words</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt> <comment type="line">// will order words by score</comment>
 
        <decl_stmt><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name><name>words</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>it</name> <init>= <expr><call><name><name>words</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content> <comment type="line">// for every word</comment>
            <decl_stmt><decl><type><name>String</name></type> <name>word</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>word</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
             <decl_stmt><decl><type><name>int</name></type> <name>tf</name> <init>= <expr><operator>(</operator><operator>(</operator><name>Int</name><operator>)</operator> <call><name><name>words</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>word</name></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><name>x</name></expr></init></decl>;</decl_stmt> <comment type="line">// term freq in the source doc</comment>
             <if_stmt><if>if <condition>(<expr><name>minTermFreq</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>tf</name> <operator>&lt;</operator> <name>minTermFreq</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">631</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">635</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MoreLikeThis</name> <block>{
             <expr><name>float</name> <name>score</name> <operator>=</operator> <name>tf</name> <operator>*</operator> <name>idf</name></expr>;
 
             <comment type="line">// only really need 1st 3 entries, other ones are for troubleshooting</comment>
            <call><name><name>res</name><operator>.</operator><name>insert</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name><block>{<expr><name>word</name></expr>,                   <comment type="line">// the word</comment>
            <expr><call><name><name>res</name><operator>.</operator><name>insertWithOverflow</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name><block>{<expr><name>word</name></expr>,                   <comment type="line">// the word</comment>
                                     <expr><name>topField</name></expr>,               <comment type="line">// the top field</comment>
                                     <expr><operator>new</operator> <call><name>Float</name><argument_list>(<argument><expr><name>score</name></expr></argument>)</argument_list></call></expr>,       <comment type="line">// overall score</comment>
                                     <expr><operator>new</operator> <call><name>Float</name><argument_list>(<argument><expr><name>idf</name></expr></argument>)</argument_list></call></expr>,         <comment type="line">// idf</comment>
@@ <expr><operator>-</operator><literal type="number">670</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">674</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> class <name>MoreLikeThis</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>docNum</name> <name>the</name> <name>id</name> <name>of</name> <name>the</name> <name>lucene</name> <name>document</name> <name>from</name> <name>which</name> <name>to</name> <name>find</name> <name>terms</name>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>PriorityQueue</name> <call><name>retrieveTerms</name><argument_list>(<argument><expr><name>int</name> <name>docNum</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><name>Map</name> <name>termFreqMap</name> <operator>=</operator> <operator>new</operator> <call><name>HashMap</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
        <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Int</name></argument>&gt;</argument_list></name> <name>termFreqMap</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Int</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</block></expr></argument></argument_list></call></expr>
         <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fieldNames</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <decl_stmt><decl><type><name>String</name></type> <name>fieldName</name> <init>= <expr><name><name>fieldNames</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>TermFreqVector</name></type> <name>vector</name> <init>= <expr><call><name><name>ir</name><operator>.</operator><name>getTermFreqVector</name></name><argument_list>(<argument><expr><name>docNum</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">699</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">703</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> class <name>MoreLikeThis</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>termFreqMap</name> <name>a</name> <name>Map</name> <name>of</name> <name>terms</name> <name>and</name> <name>their</name> <name>frequencies</name>
      <operator>*</operator> @<name>param</name> <name>vector</name> <name>List</name> <name>of</name> <name>terms</name> <name>and</name> <name>their</name> <name>frequencies</name></expr> <for>for a doc/field
      */
    private void addTermFrequencies<control>(<init><decl><type><name>Map</name></type> <name>termFreqMap</name></decl>, <decl><type ref="prev"/><name>TermFreqVector</name> <name>vector</name></decl></init>)</control> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>addTermFrequencies</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Int</name></argument>&gt;</argument_list></name></type> <name>termFreqMap</name></decl></parameter>, <parameter><decl><type><name>TermFreqVector</name></type> <name>vector</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>terms</name> <init>= <expr><call><name><name>vector</name><operator>.</operator><name>getTerms</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>freqs</name> <init>= <expr><call><name><name>vector</name><operator>.</operator><name>getTermFrequencies</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>terms</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">727</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">731</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>final</name> class <name>MoreLikeThis</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>termFreqMap</name> <name>a</name> <name>Map</name> <name>of</name> <name>terms</name> <name>and</name> <name>their</name> <name>frequencies</name>
      <operator>*</operator> @<name>param</name> <name>fieldName</name> <name>Used</name> <name>by</name> <name>analyzer</name></expr> <for>for any special per-field analysis
      */
    private void addTermFrequencies<control>(<init><decl><type><name>Reader</name></type> <name>r</name></decl>, <decl><type ref="prev"/><name>Map</name> <name>termFreqMap</name></decl>, <decl><type ref="prev"/><name>String</name> <name>fieldName</name></decl></init>)</control><block type="pseudo"><block_content>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>addTermFrequencies</name><parameter_list>(<parameter><decl><type><name>Reader</name></type> <name>r</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Int</name></argument>&gt;</argument_list></name></type> <name>termFreqMap</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fieldName</name></decl></parameter>)</parameter_list>
             <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>TokenStream</name></type> <name>ts</name> <init>= <expr><call><name><name>analyzer</name><operator>.</operator><name>tokenStream</name></name><argument_list>(<argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>tokenCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
         <comment type="line">// for every token</comment>
        <decl_stmt><decl><type><specifier>final</specifier> <name>Token</name></type> <name>reusableToken</name> <init>= <expr><operator>new</operator> <call><name>Token</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>Token</name></type> <name>nextToken</name> <init>= <expr><call><name><name>ts</name><operator>.</operator><name>next</name></name><argument_list>(<argument><expr><name>reusableToken</name></expr></argument>)</argument_list></call></expr></init></decl>;</init> <condition><expr><name>nextToken</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</condition> <incr><expr><name>nextToken</name> <operator>=</operator> <call><name><name>ts</name><operator>.</operator><name>next</name></name><argument_list>(<argument><expr><name>reusableToken</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>word</name> <init>= <expr><call><name><name>nextToken</name><operator>.</operator><name>term</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>ts</name><operator>.</operator><name>incrementToken</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>TermAttribute</name></type> <name>term</name> <init>= <expr><call><name><name>ts</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name><name>TermAttribute</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>word</name> <init>=  <expr><call><name><name>term</name><operator>.</operator><name>term</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><name>tokenCount</name><operator>++</operator></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><name>tokenCount</name> <operator>&gt;</operator> <name>maxNumTokensParsed</name></expr>)</condition> <block>{<block_content>
                 <break>break;</break>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">744</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">748</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>final</name> class <name>MoreLikeThis</name> <block>{
             }</block>
 
             <comment type="line">// increment frequency</comment>
            <name>Int</name> <name>cnt</name> <operator>=</operator> <operator>(</operator><name>Int</name><operator>)</operator> <call><name><name>termFreqMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>Int</name></type> <name>cnt</name> <init>= <expr><call><name><name>termFreqMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>word</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><name>cnt</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><call><name><name>termFreqMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>word</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Int</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if> <else>else <block>{<block_content>
                 <expr_stmt><expr><name><name>cnt</name><operator>.</operator><name>x</name></name><operator>++</operator></expr>;</expr_stmt>
             </block_content>}</block></else></if_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>ts</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ts</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></while>
 
     <comment type="block" format="javadoc">/** determines if the passed term is likely to be of interest in "more like" comparisons
@@ -796,7 +802,7 @@ public final class MoreLikeThis {
      * @see #retrieveInterestingTerms
      */</comment>
     <function><type><specifier>public</specifier> <name>PriorityQueue</name></type> <name>retrieveTerms</name><parameter_list>(<parameter><decl><type><name>Reader</name></type> <name>r</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Map</name></type> <name>words</name> <init>= <expr><operator>new</operator> <call><name>HashMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Int</name></argument>&gt;</argument_list></name></type> <name>words</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Int</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fieldNames</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <decl_stmt><decl><type><name>String</name></type> <name>fieldName</name> <init>= <expr><name><name>fieldNames</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name>addTermFrequencies</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>words</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">808</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">814</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>final</name> class <name>MoreLikeThis</name> <block>{
      <expr><operator>*</operator> @<name>see</name> <operator>#</operator><call><name>retrieveInterestingTerms</name><argument_list>(<argument><expr><name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name></expr></argument>)</argument_list></call>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name><name>String</name><index>[]</index></name> <call><name>retrieveInterestingTerms</name><argument_list>(<argument><expr><name>int</name> <name>docNum</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><name>ArrayList</name> <name>al</name> <operator>=</operator> <operator>new</operator> <call><name>ArrayList</name><argument_list>(<argument><expr><name>maxQueryTerms</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>al</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>maxQueryTerms</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>PriorityQueue</name></type> <name>pq</name> <init>= <expr><call><name>retrieveTerms</name><argument_list>(<argument><expr><name>docNum</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Object</name></type> <name>cur</name></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>lim</name> <init>= <expr><name>maxQueryTerms</name></expr></init></decl>;</decl_stmt> <comment type="line">// have to be careful, retrieveTerms returns all words but that's probably not useful to our caller...</comment>
         <comment type="line">// we just want to return the top words</comment>
         <while>while <condition>(<expr><operator>(</operator><operator>(</operator><name>cur</name> <operator>=</operator> <call><name><name>pq</name><operator>.</operator><name>pop</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <name>lim</name><operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>ar</name> <init>= <expr><operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>cur</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>al</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// the 1st entry is the interesting word</comment>
            <expr_stmt><expr><call><name><name>al</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>ar</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// the 1st entry is the interesting word</comment>
         </block_content>}</block></while>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>res</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>al</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <return>return <expr><operator>(</operator><name><name>String</name><index>[]</index></name><operator>)</operator> <call><name><name>al</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</return>
        <return>return <expr><call><name><name>al</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>al</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></for>
 
     <comment type="block" format="javadoc">/**
@@ -831,17 +836,16 @@ public final class MoreLikeThis {
      * @see #setMaxQueryTerms
      */</comment>
     <function><type><specifier>public</specifier> <name><name>String</name><index>[]</index></name></type> <name>retrieveInterestingTerms</name><parameter_list>(<parameter><decl><type><name>Reader</name></type> <name>r</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>ArrayList</name></type> <name>al</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>(<argument><expr><name>maxQueryTerms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>al</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>maxQueryTerms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>PriorityQueue</name></type> <name>pq</name> <init>= <expr><call><name>retrieveTerms</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Object</name></type> <name>cur</name></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>lim</name> <init>= <expr><name>maxQueryTerms</name></expr></init></decl>;</decl_stmt> <comment type="line">// have to be careful, retrieveTerms returns all words but that's probably not useful to our caller...</comment>
         <comment type="line">// we just want to return the top words</comment>
         <while>while <condition>(<expr><operator>(</operator><operator>(</operator><name>cur</name> <operator>=</operator> <call><name><name>pq</name><operator>.</operator><name>pop</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <name>lim</name><operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>ar</name> <init>= <expr><operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator> <name>cur</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>al</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>ar</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// the 1st entry is the interesting word</comment>
            <expr_stmt><expr><call><name><name>al</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name><name>ar</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// the 1st entry is the interesting word</comment>
         </block_content>}</block></while>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>res</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>al</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <return>return <expr><operator>(</operator><name><name>String</name><index>[]</index></name><operator>)</operator> <call><name><name>al</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</return>
        <return>return <expr><call><name><name>al</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>al</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MultiScorer.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MultiScorer.java
index 9efa0de38..528f73514 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MultiScorer.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/MultiScorer.java
@@ -17,7 +17,6 @@
 package org.apache.jackrabbit.core.query.lucene;
 
 import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.Explanation;
 import org.apache.lucene.search.Similarity;
 
 import java.io.IOException;
@@ -42,12 +41,12 @@ class MultiScorer extends Scorer {
     /**
      * Index of the current scorer.
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>current</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>currentScorer</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
     * Indicates if there are more documents.
     * The next document id to be returned
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>hasNext</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>currentDoc</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * Creates a new &lt;code&gt;MultiScorer&lt;/code&gt; that spans multiple
@@ -63,64 +62,56 @@ class MultiScorer extends Scorer {
         this.starts = starts;
     }
 
    /**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <while>while <condition>(<expr><name>hasNext</name></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>scorers</name><index>[<expr><name>current</name></expr>]</index></name><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>++</operator><name>current</name> <operator>&lt;</operator> <name><name>scorers</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <while>while <condition>(<expr><name>currentDoc</name> <operator>!=</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name><name>scorers</name><index>[<expr><name>currentScorer</name></expr>]</index></name><operator>.</operator><call><name>nextDoc</name><argument_list>()</argument_list></call> <operator>!=</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <name><name>scorers</name><index>[<expr><name>currentScorer</name></expr>]</index></name><operator>.</operator><call><name>docID</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>starts</name><index>[<expr><name>currentScorer</name></expr>]</index></name></expr>;</expr_stmt>
                <return>return <expr><name>currentDoc</name></expr>;</return>
            </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>++</operator><name>currentScorer</name> <operator>&lt;</operator> <name><name>scorers</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
                 <comment type="line">// advance to next scorer</comment>
             </block_content>}</block></if> <else>else <block>{<block_content>
                 <comment type="line">// no more scorers</comment>
                <expr_stmt><expr><name>hasNext</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
                <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
             </block_content>}</block></else></if_stmt>
         </block_content>}</block></while>
        <return>return <expr><name>hasNext</name></expr>;</return>

        <return>return <expr><name>currentDoc</name></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name><name>scorers</name><index>[<expr><name>current</name></expr>]</index></name><operator>.</operator><call><name>doc</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>starts</name><index>[<expr><name>current</name></expr>]</index></name></expr>;</return>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>currentDoc</name></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><name><name>scorers</name><index>[<expr><name>current</name></expr>]</index></name><operator>.</operator><call><name>score</name><argument_list>()</argument_list></call></expr>;</return>
        <return>return <expr><name><name>scorers</name><index>[<expr><name>currentScorer</name></expr>]</index></name><operator>.</operator><call><name>score</name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name>current</name> <operator>=</operator> <call><name>scorerIndex</name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name><name>scorers</name><index>[<expr><name>current</name></expr>]</index></name><operator>.</operator><call><name>skipTo</name><argument_list>(<argument><expr><name>target</name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>current</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>currentDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>currentDoc</name></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><name>currentScorer</name> <operator>=</operator> <call><name>scorerIndex</name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name><name>scorers</name><index>[<expr><name>currentScorer</name></expr>]</index></name><operator>.</operator><call><name>advance</name><argument_list>(<argument><expr><name>target</name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>currentScorer</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <name><name>scorers</name><index>[<expr><name>currentScorer</name></expr>]</index></name><operator>.</operator><call><name>docID</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>starts</name><index>[<expr><name>currentScorer</name></expr>]</index></name></expr>;</expr_stmt>
            <return>return <expr><name>currentDoc</name></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>++</operator><name>current</name> <operator>&lt;</operator> <name><name>scorers</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>++</operator><name>currentScorer</name> <operator>&lt;</operator> <name><name>scorers</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
                 <comment type="line">// simply move to the next if there is any</comment>
                <return>return <expr><call><name>next</name><argument_list>()</argument_list></call></expr>;</return>
                <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <call><name>nextDoc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><name>currentDoc</name></expr>;</return>
             </block_content>}</block></if> <else>else <block>{<block_content>
                 <comment type="line">// no more document</comment>
                <expr_stmt><expr><name>hasNext</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
                <return>return <expr><name>hasNext</name></expr>;</return>
                <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
                <return>return <expr><name>currentDoc</name></expr>;</return>
             </block_content>}</block></else></if_stmt>
         </block_content>}</block></if></if_stmt>
     </block_content>}</block></else></if_stmt>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>scorerIndex</name> <init>= <expr><call><name>scorerIndex</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><name><name>scorers</name><index>[<expr><name>scorerIndex</name></expr>]</index></name><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><name>doc</name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>scorerIndex</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

     <comment type="line">//--------------------------&lt; internal &gt;------------------------------------</comment>
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameQuery.java
index 3c2f8e625..ff6b3b423 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameQuery.java
@@ -30,6 +30,7 @@ import java.util.Set;
 /**
  * &lt;code&gt;NameQuery&lt;/code&gt; implements a query for the name of a node.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>NameQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameRangeQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameRangeQuery.java
index 1fb5dede2..5232ae926 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameRangeQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NameRangeQuery.java
@@ -30,6 +30,7 @@ import java.io.IOException;
 /**
  * &lt;code&gt;NameRangeQuery&lt;/code&gt;...
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>NameRangeQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java
index d15a29a29..809dada7c 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeIndexer.java
@@ -16,19 +16,6 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>BigDecimal</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Calendar</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executor</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>NamespaceException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>PropertyType</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>PropertyId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>ChildNodeEntry</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>tika</name><operator>.</operator><name>parser</name><operator>.</operator><name>Parser</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>NamespaceException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>PropertyType</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>BigDecimal</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Calendar</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executor</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Creates a lucene &lt;code&gt;Document&lt;/code&gt; object from a {@link javax.jcr.Node}.
  */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">369</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">368</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>NodeIndexer</name> <block>{
                     <comment type="line">// never fulltext index jcr:uuid String</comment>
                     <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>NameConstants</name><operator>.</operator><name>JCR_UUID</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                         <expr_stmt><expr><call><name>addStringValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><call><name><name>value</name><operator>.</operator><name>getString</name></name><argument_list>()</argument_list></call></expr></argument>,
                                <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>DEFAULT_BOOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><name>DEFAULT_BOOST</name></expr><operator>,</operator> <expr><literal type="boolean">true</literal></expr></expr_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block></class></block></class></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block_content></block></while></block_content></block></function></block_content></block></function></block_content></block></for></block_content></block></function></block_content></block></for></block></expr></expr_stmt></block_content></block></for></block_content></block></function></block_content></block></for></block></expr></expr_stmt></block_content></block></for></block></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                     </block_content>}</block></if> <else>else <block>{<block_content>
                         <expr_stmt><expr><call><name>addStringValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><call><name><name>value</name><operator>.</operator><name>getString</name></name><argument_list>()</argument_list></call></expr></argument>,
                                 <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name>isIncludedInNodeIndex</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">666</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">665</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>NodeIndexer</name> <block>{
      <expr><operator>*</operator>             <call><name>addStringValue</name><argument_list>(<argument><expr><name>Document</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>Object</name></expr></argument>, <argument><expr><name>boolean</name></expr></argument>)</argument_list></call></expr>}</block> <name><name>instead</name><operator>.</operator></name>
      *<operator>/</operator>
     <specifier>protected</specifier> <name>void</name> <call><name>addStringValue</name><argument_list>(<argument><expr><name>Document</name> <name>doc</name></expr></argument>, <argument><expr><name>String</name> <name>fieldName</name></expr></argument>, <argument><expr><name>Object</name> <name>internalValue</name></expr></argument>)</argument_list></call> <block>{
        <expr><call><name>addStringValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name>internalValue</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>DEFAULT_BOOST</name></expr></argument>)</argument_list></call></expr>;
        <call><name>addStringValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name>internalValue</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>DEFAULT_BOOST</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></call></expr></expr_stmt>
     </block_content>}</block></else></if_stmt>
 
     <comment type="block" format="javadoc">/**
@@ -682,7 +681,7 @@ public class NodeIndexer {
      */</comment>
     <function><type><specifier>protected</specifier> <name>void</name></type> <name>addStringValue</name><parameter_list>(<parameter><decl><type><name>Document</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fieldName</name></decl></parameter>,
                                   <parameter><decl><type><name>Object</name></type> <name>internalValue</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>tokenized</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>addStringValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name>internalValue</name></expr></argument>, <argument><expr><name>tokenized</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>DEFAULT_BOOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addStringValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name>internalValue</name></expr></argument>, <argument><expr><name>tokenized</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>DEFAULT_BOOST</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
@@ -814,14 +813,10 @@ public class NodeIndexer {
             tv = Field.TermVector.NO;
         }
         if (store) {
            // store field compressed if greater than 16k
            Field.Store stored;
            if (value.length() &gt; 0x4000) {
                stored = Field.Store.COMPRESS;
            } else {
                stored = Field.Store.YES;
            }
            return new Field(FieldNames.FULLTEXT, value, stored,
            // We would be able to store the field compressed or not depending
            // on a criterion but then we could not determine later is this field
            // has been compressed or not, so we choose to store it uncompressed
            return new Field(FieldNames.FULLTEXT, value, Field.Store.YES,
                     Field.Index.ANALYZED, tv);
         } else {
             return new Field(FieldNames.FULLTEXT, value,
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeTraversingQueryHits.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeTraversingQueryHits.java
index 3d8d0a087..b80bcf432 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeTraversingQueryHits.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NodeTraversingQueryHits.java
@@ -37,7 +37,7 @@ public class NodeTraversingQueryHits extends AbstractQueryHits {
     /**
      * The nodes to traverse.
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Iterator</name></type> <name>nodes</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Node</name></argument>&gt;</argument_list></name></type> <name>nodes</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * Creates query hits that consist of the nodes that are traversed from a
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NotQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NotQuery.java
index 5940a5a01..9570727f7 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NotQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/NotQuery.java
@@ -33,6 +33,7 @@ import java.util.Set;
  * Documents that did not match the context query will be selected by this
  * &lt;code&gt;NotQuery&lt;/code&gt;.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 class <name>NotQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -56,7 +57,7 @@ class NotQuery extends Query {
     /**
      * {@inheritDoc}
      */</comment>
    <function><type><specifier>protected</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>NotQueryWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>NotQuery</name> extends <name>Query</name> <block>{
     <comment type="block" format="javadoc">/**
      * Implements a weight for this &lt;code&gt;NotQuery&lt;/code&gt;.
      */</comment>
    <expr><specifier>private</specifier> <name>class</name> <name>NotQueryWeight</name> implements <name>Weight</name> <block>{
    <expr><specifier>private</specifier> <name>class</name> <name>NotQueryWeight</name> extends <name>Weight</name> <block>{
 
         <comment type="block" format="javadoc">/**
          * The searcher to access the index.
@@ -134,8 +135,9 @@ class NotQuery extends Query {
         /**
          * @inheritDoc
          */</comment>
        <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</block></expr>
             <return>return <expr><operator>new</operator> <call><name>NotQueryScorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
         }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <name>class</name> <name>NotQuery</name> extends <name>Query</name> <block>{
             <expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <name>reader</name></expr>;
         }</block></expr></expr_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>docNo</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>docNo</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <if_stmt><if>if <condition>(<expr><name>docNo</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                 <comment type="line">// get first doc of context scorer</comment>
                <if_stmt><if>if <condition>(<expr><call><name><name>contextScorer</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <call><name><name>contextScorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>docId</name> <init>= <expr><call><name><name>contextScorer</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>docId</name> <operator>!=</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <name>docId</name></expr>;</expr_stmt>
                 </block_content>}</block></if></if_stmt>
             </block_content>}</block></if></if_stmt>
             <comment type="line">// move to next candidate</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">49</literal> <operator>+</operator><literal type="number">200</literal></expr><operator>,</operator><expr><literal type="number">38</literal> @@ <name>class</name> <name>NotQuery</name> extends <name>Query</name> <block>{
             <comment type="line">// check with contextScorer</comment>
             <while>while <condition>(<expr><name>contextNo</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>contextNo</name> <operator>==</operator> <name>docNo</name></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><name>docNo</name><operator>++</operator></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>contextScorer</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <call><name><name>contextScorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>docId</name> <init>= <expr><call><name><name>contextScorer</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <ternary><condition><expr><name>docId</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr> ?</condition><then> <expr><operator>-</operator><literal type="number">1</literal></expr> </then><else>: <expr><name>docId</name></expr></else></ternary></expr>;</expr_stmt>
            </block_content>}</block></while></block></expr></expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>docNo</name> <operator>&gt;=</operator> <call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>docNo</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
            <return>return <expr><name>docNo</name> <operator>&lt;</operator> <call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</return>
            <return>return <expr><name>docNo</name></expr>;</return>
         </block_content>}</block></if></if_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>docNo</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>docNo</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>docNo</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <if_stmt><if>if <condition>(<expr><name>contextNo</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>contextNo</name> <operator>&lt;</operator> <name>target</name></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>contextScorer</name><operator>.</operator><name>skipTo</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <call><name><name>contextScorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>docId</name> <init>= <expr><call><name><name>contextScorer</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name>contextNo</name> <operator>=</operator> <ternary><condition><expr><name>docId</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr> ?</condition><then> <expr><operator>-</operator><literal type="number">1</literal></expr> </then><else>: <expr><name>docId</name></expr></else></ternary></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
             <expr_stmt><expr><name>docNo</name> <operator>=</operator> <name>target</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
            <return>return <expr><call><name>next</name><argument_list>()</argument_list></call></expr>;</return>
            <return>return <expr><call><name>nextDoc</name><argument_list>()</argument_list></call></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * @throws UnsupportedOperationException always
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
        </block_content>}</block></function>
     </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>OffsetCharSequence</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>OffsetCharSequence</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dd5563b85</name><operator>..</operator><name>ddebe7f47</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>OffsetCharSequence</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>OffsetCharSequence</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>CharSequence</name> <name>that</name> <name>applies</name> <name>an</name> <name>offset</name> <name>to</name> <name>a</name> <name>base</name> <name><name>CharSequence</name><operator>.</operator> <name>The</name></name> <name>base</name>
  <operator>*</operator> <name>CharSequence</name> <name>can</name> <name>be</name> <name>replaced</name> <name>without</name> <name>creating</name> <name>a</name> <operator>new</operator> <name><name>CharSequence</name><operator>.</operator></name>
  *<operator>/</operator>
<name>final</name> <name>class</name> <name>OffsetCharSequence</name> implements <name>CharSequence</name></expr><operator>,</operator> <expr><name>Comparable</name></expr><operator>,</operator> <expr><name>TransformConstants</name> <block>{
<expr><name>final</name> <name>class</name> <name>OffsetCharSequence</name> implements <name>CharSequence</name></expr>, <expr><name><name>Comparable</name><argument_list type="generic">&lt;<argument><name>OffsetCharSequence</name></argument>&gt;</argument_list></name></expr>, <expr><name>TransformConstants</name> <block>{
 
     <comment type="block" format="javadoc">/**
      * Indicates how the underlying char sequence is exposed / tranformed.
@@ -128,8 +128,7 @@ final class OffsetCharSequence implements CharSequence, Comparable, TransformCon
      * @return as defined in {@link String#compareTo(Object)} but also takes
      *         {@link #transform} into account.
      */</comment>
    <expr><specifier>public</specifier> <name>int</name> <call><name>compareTo</name><argument_list>(<argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>OffsetCharSequence</name> <name>other</name> <operator>=</operator> <operator>(</operator><name>OffsetCharSequence</name><operator>)</operator> <name>o</name></expr>;
    <specifier>public</specifier> <name>int</name> <call><name>compareTo</name><argument_list>(<argument><expr><name>OffsetCharSequence</name> <name>other</name></expr></argument>)</argument_list></call> <block>{
         <expr><name>int</name> <name>len1</name> <operator>=</operator> <call><name>length</name><argument_list>()</argument_list></call></expr>;
         <name>int</name> <name>len2</name> <operator>=</operator> <call><name><name>other</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></block></block></expr>;
         <name>int</name> <name>lim</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><name>len1</name></expr></argument>, <argument><expr><name>len2</name></expr></argument>)</argument_list></call></block></expr>;
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>Ordering</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>Ordering</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>db2cb5607</name><operator>..</operator><name>a660adafa</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>Ordering</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>Ordering</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal><operator>,</operator><literal type="number">22</literal> <operator>+</operator><literal type="number">16</literal><operator>,</operator><literal type="number">21</literal> @@
  <operator>*</operator><operator>/</operator></block></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>OrderingImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>QOMTreeVisitor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>DefaultTraversingQOMTreeVisitor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>LengthImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>PropertyValueImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>LowerCaseImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>DynamicOperandImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>UpperCaseImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>FullTextSearchScoreImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>LengthImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>LowerCaseImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>NodeLocalNameImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>NodeNameImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>OrderingImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>PropertyValueImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>QOMTreeVisitor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>UpperCaseImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortComparatorSource</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * &lt;code&gt;Ordering&lt;/code&gt; implements a single ordering specification.
@@ -84,7 +83,7 @@ public class Ordering {
      *                             QOM ordering.
      */</comment>
     <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Ordering</name></type> <name>fromQOM</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>OrderingImpl</name></type> <name>ordering</name></decl></parameter>,
                                    <parameter><decl><type><specifier>final</specifier> <name>SortComparatorSource</name></type> <name>scs</name></decl></parameter>,
                                    <parameter><decl><type><specifier>final</specifier> <name>SharedFieldComparatorSource</name></type> <name>scs</name></decl></parameter>,
                                     <parameter><decl><type><specifier>final</specifier> <name>NamespaceMappings</name></type> <name>nsMappings</name></decl></parameter>)</parameter_list>
             <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><specifier>final</specifier> <name><name>Name</name><index>[]</index></name></type> <name>selectorName</name> <init>= <expr><operator>new</operator> <name><name>Name</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Ordering</name> <block>{
                 <expr><name>SortField</name> <name>sf</name> <operator>=</operator> <operator>(</operator><name>SortField</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>DynamicOperandImpl</name><operator>)</operator> <call><name><name>node</name><operator>.</operator><name>getOperand</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>accept</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;
                 <name><name>selectorName</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name><name>node</name><operator>.</operator><name>getSelectorQName</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
                 <return>return <expr><operator>new</operator> <call><name>SortField</name><argument_list>(<argument><expr><call><name><name>sf</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>,
                        <argument><expr><operator>new</operator> <call><name>LowerCaseSortComparator</name><argument_list>(<argument><expr><call><name><name>sf</name><operator>.</operator><name>getFactory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><operator>new</operator> <call><name>LowerCaseSortComparator</name><argument_list>(<argument><expr><call><name><name>sf</name><operator>.</operator><name>getComparatorSource</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                         <argument><expr><operator>!</operator><call><name><name>ordering</name><operator>.</operator><name>isAscending</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
             </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Ordering</name> <block>{
                 <expr><name>SortField</name> <name>sf</name> <operator>=</operator> <operator>(</operator><name>SortField</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>DynamicOperandImpl</name><operator>)</operator> <call><name><name>node</name><operator>.</operator><name>getOperand</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>accept</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;
                 <name><name>selectorName</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name><name>node</name><operator>.</operator><name>getSelectorQName</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
                 <return>return <expr><operator>new</operator> <call><name>SortField</name><argument_list>(<argument><expr><call><name><name>sf</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>,
                        <argument><expr><operator>new</operator> <call><name>UpperCaseSortComparator</name><argument_list>(<argument><expr><call><name><name>sf</name><operator>.</operator><name>getFactory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><operator>new</operator> <call><name>UpperCaseSortComparator</name><argument_list>(<argument><expr><call><name><name>sf</name><operator>.</operator><name>getComparatorSource</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                         <argument><expr><operator>!</operator><call><name><name>ordering</name><operator>.</operator><name>isAscending</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
             </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ParentAxisQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ParentAxisQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9315cf575</literal><operator>..</operator><literal type="number">4eb93789a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ParentAxisQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ParentAxisQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">27</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AbstractHitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>Hits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>ScorerHits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>HitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * &lt;code&gt;ParentAxisQuery&lt;/code&gt; selects the parent nodes of a context query.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 class <name>ParentAxisQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -89,7 +90,7 @@ class ParentAxisQuery extends Query {
      * @param searcher the &lt;code&gt;Searcher&lt;/code&gt; instance to use.
      * @return a &lt;code&gt;ParentAxisWeight&lt;/code&gt;.
      */</comment>
    <function><type><specifier>protected</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>ParentAxisWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>ParentAxisQuery</name> extends <name>Query</name> <block>{
     <comment type="block" format="javadoc">/**
      * The &lt;code&gt;Weight&lt;/code&gt; implementation for this &lt;code&gt;ParentAxisQuery&lt;/code&gt;.
      */</comment>
    <expr><specifier>private</specifier> <name>class</name> <name>ParentAxisWeight</name> implements <name>Weight</name> <block>{
    <expr><specifier>private</specifier> <name>class</name> <name>ParentAxisWeight</name> extends <name>Weight</name> <block>{
 
         <comment type="block" format="javadoc">/**
          * The searcher in use
@@ -186,8 +187,9 @@ class ParentAxisQuery extends Query {
          * @return a &lt;code&gt;ParentAxisScorer&lt;/code&gt;.
          * @throws IOException if an error occurs while reading from the index.
          */</comment>
        <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>contextScorer</name> <operator>=</operator> <call><name><name>contextQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;
             <name>HierarchyResolver</name> <name>resolver</name> <operator>=</operator> <operator>(</operator><name>HierarchyResolver</name><operator>)</operator> <name>reader</name></block></expr>;</block></expr></expr_stmt>
             <return>return <expr><operator>new</operator> <call><name>ParentAxisScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>,
                     <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>searcher</name></expr></argument>, <argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">266</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">268</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <name>class</name> <name>ParentAxisQuery</name> extends <name>Query</name> <block>{
             <expr><name><name>this</name><operator>.</operator><name>hResolver</name></name> <operator>=</operator> <name>resolver</name></expr>;
         }</block></expr></expr_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateParent</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>nextDoc</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <decl_stmt><decl><type><name>Float</name></type> <name>score</name> <init>= <expr><call><name><name>scores</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>nextDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><name>score</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">293</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">296</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <name>class</name> <name>ParentAxisQuery</name> extends <name>Query</name> <block>{
             <return>return <expr><name>score</name></expr>;</return>
         }</block></expr></expr_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateParent</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         *
         * @throws UnsupportedOperationException this implementation always
         *                                       throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
         <function><type><specifier>private</specifier> <name>void</name></type> <name>calculateParent</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">36</literal> <operator>+</operator><literal type="number">315</literal></expr><operator>,</operator><expr><literal type="number">38</literal> @@ <name>class</name> <name>ParentAxisQuery</name> extends <name>Query</name> <block>{
                 <expr><name>hits</name> <operator>=</operator> <operator>new</operator> <call><name>BitSet</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
                 <name>final</name> <name><name>IOException</name><index>[]</index></name> <name>ex</name> <operator>=</operator> <operator>new</operator> <name><name>IOException</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></block></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>HitCollector</name></super><argument_list>()</argument_list> <block>{

                    <decl_stmt><decl><type><specifier>private</specifier> <name><name>int</name><index>[]</index></name></type> <name>docs</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <function><type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                        <try>try <block>{<block_content>
                            <expr_stmt><expr><name>docs</name> <operator>=</operator> <call><name><name>hResolver</name><operator>.</operator><name>getParents</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <if_stmt><if>if <condition>(<expr><name><name>docs</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                                <comment type="line">// optimize single value</comment>
                                <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>docs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <if_stmt><if>if <condition>(<expr><name>firstScore</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                                    <expr_stmt><expr><name>firstScore</name> <operator>=</operator> <name>score</name></expr>;</expr_stmt>
                                </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>firstScore</name> <operator>!=</operator> <name>score</name></expr>)</condition> <block>{<block_content>
                                    <expr_stmt><expr><call><name><name>scores</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>score</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                </block_content>}</block></if></if_stmt>
                            </block_content>}</block></if> <else>else <block>{<block_content>
                                <for>for <control>(<init><decl><type><name>int</name></type> <name>docNum</name> <range>: <expr><name>docs</name></expr></range></decl></init>)</control> <block>{<block_content>
                                    <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>docNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><name>contextScorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>contextScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractHitCollector</name></super><argument_list>()</argument_list> <block>{
                        <decl_stmt><decl><type><specifier>private</specifier> <name><name>int</name><index>[]</index></name></type> <name>docs</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <function><annotation>@<name>Override</name></annotation>
                        <type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                            <try>try <block>{<block_content>
                                <expr_stmt><expr><name>docs</name> <operator>=</operator> <call><name><name>hResolver</name><operator>.</operator><name>getParents</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <if_stmt><if>if <condition>(<expr><name><name>docs</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                                    <comment type="line">// optimize single value</comment>
                                    <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>docs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                     <if_stmt><if>if <condition>(<expr><name>firstScore</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                                         <expr_stmt><expr><name>firstScore</name> <operator>=</operator> <name>score</name></expr>;</expr_stmt>
                                     </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>firstScore</name> <operator>!=</operator> <name>score</name></expr>)</condition> <block>{<block_content>
                                         <expr_stmt><expr><call><name><name>scores</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>score</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                     </block_content>}</block></if></if_stmt>
                                </block_content>}</block></if> <else>else <block>{<block_content>
                                    <for>for <control>(<init><decl><type><name>int</name></type> <name>docNum</name> <range>: <expr><name>docs</name></expr></range></decl></init>)</control> <block>{<block_content>
                                        <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>docNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <if_stmt><if>if <condition>(<expr><name>firstScore</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                                            <expr_stmt><expr><name>firstScore</name> <operator>=</operator> <name>score</name></expr>;</expr_stmt>
                                        </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>firstScore</name> <operator>!=</operator> <name>score</name></expr>)</condition> <block>{<block_content>
                                            <expr_stmt><expr><call><name><name>scores</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>score</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        </block_content>}</block></if></if_stmt>
                                    </block_content>}</block></for>
                                 </block_content>}</block></else></if_stmt>
                            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                                <expr_stmt><expr><name><name>ex</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>e</name></expr>;</expr_stmt>
                             </block_content>}</block></catch></try>
                        </block_content>}</block></function> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                            <expr_stmt><expr><name><name>ex</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>e</name></expr>;</expr_stmt>
                         </block_content>}</block></catch>
                    }</block></class></expr></argument></argument_list></call></expr></expr_stmt>
                </block_content>}</block></if></if_stmt><expr_stmt><expr/></expr_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></try></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></function>)</block_content></block>;</function>
                </block_content>}</block></if></if_stmt>
 
                 <if_stmt><if>if <condition>(<expr><name><name>ex</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                     <throw>throw <expr><name><name>ex</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">355</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">355</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>ParentAxisQuery</name> extends <name>Query</name> <block>{
                 <comment type="line">// filter out documents that do not match the name test</comment>
                 <if_stmt><if>if <condition>(<expr><name>nameTest</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                     <decl_stmt><decl><type><name>Query</name></type> <name>nameQuery</name> <init>= <expr><operator>new</operator> <call><name>NameQuery</name><argument_list>(<argument><expr><name>nameTest</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>nsMappings</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>Hits</name></type> <name>nameHits</name> <init>= <expr><operator>new</operator> <call><name>ScorerHits</name><argument_list>(<argument><expr><call><name><name>nameQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name>Hits</name></type> <name>nameHits</name> <init>= <expr><operator>new</operator> <call><name>ScorerHits</name><argument_list>(<argument><expr><call><name><name>nameQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></incr>)</control> <block>{<block_content>
                         <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><call><name><name>nameHits</name><operator>.</operator><name>skipTo</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                         <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PersistentIndex</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PersistentIndex</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">28adc2a31</literal><operator>..</operator><literal type="number">6f5696cf7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PersistentIndex</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PersistentIndex</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>PersistentIndex</name> extends <name>AbstractIndex</name> <block>{
         <expr><name><name>byte</name><index>[]</index></name> <name>buffer</name> <operator>=</operator> <operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></expr>;
         <name>Directory</name> <name>dir</name> <operator>=</operator> <call><name><name>index</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>Directory</name></type> <name>dest</name> <init>= <expr><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>files</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>files</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
             <decl_stmt><decl><type><name>IndexInput</name></type> <name>in</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PredicateDerefQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PredicateDerefQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b2d874548</name><operator>..</operator><literal type="number">605983ea3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PredicateDerefQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>PredicateDerefQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">28</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AbstractHitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>HitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Implements a Lucene &lt;code&gt;Query&lt;/code&gt; which returns the nodes which have a 
  * reference property which matches the nodes of the subquery.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>PredicateDerefQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -101,7 +100,7 @@ public class PredicateDerefQuery extends Query {
      * @param searcher the &lt;code&gt;Searcher&lt;/code&gt; instance to use.
      * @return a &lt;code&gt;DerefWeight&lt;/code&gt;.
      */</comment>
    <function><type><specifier>protected</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>DerefWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">147</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PredicateDerefQuery</name> extends <name>Query</name> <block>{
     <comment type="block" format="javadoc">/**
      * The &lt;code&gt;Weight&lt;/code&gt; implementation for this &lt;code&gt;DerefQuery&lt;/code&gt;.
      */</comment>
    <expr><specifier>private</specifier> <name>class</name> <name>DerefWeight</name> implements <name>Weight</name> <block>{
    <expr><specifier>private</specifier> <name>class</name> <name>DerefWeight</name> extends <name>Weight</name> <block>{
 
         <comment type="block" format="javadoc">/**
          * The searcher in use
@@ -201,10 +200,11 @@ public class PredicateDerefQuery extends Query {
          * @return a &lt;code&gt;DerefScorer&lt;/code&gt;.
          * @throws IOException if an error occurs while reading from the index.
          */</comment>
        <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>subQueryScorer</name> <operator>=</operator> <call><name><name>subQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
        <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><name>subQueryScorer</name> <operator>=</operator> <call><name><name>subQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</block></expr>
             <if_stmt><if>if <condition>(<expr><name>nameTest</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nameTestScorer</name> <operator>=</operator> <operator>new</operator> <call><name>NameQuery</name><argument_list>(<argument><expr><name>nameTest</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>nsMappings</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>nameTestScorer</name> <operator>=</operator> <operator>new</operator> <call><name>NameQuery</name><argument_list>(<argument><expr><name>nameTest</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>nsMappings</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>topScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
             <return>return <expr><operator>new</operator> <call><name>DerefScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>PredicateDerefQuery</name> extends <name>Query</name> <block>{
          <expr><operator>*</operator> <name>BitSet</name> <name>storing</name> <name>the</name> <name>id</name><literal type="char">'s of selected documents
          */
         private final BitSet subQueryHits;
        

         /**
          * BitSet storing the id'</literal><name>s</name> <name>of</name> <name>selected</name> <name>documents</name>
          <operator>*</operator><operator>/</operator>
         <specifier>private</specifier> <name>final</name> <name>BitSet</name> <name>hits</name></expr>;
 
        <comment type="block" format="javadoc">/**
         * List of UUIDs of selected nodes
         */</comment>
        <specifier>private</specifier> <name>List</name> <name>uuids</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
 
        
         <comment type="block" format="javadoc">/**
          * The next document id to return
          */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">263</literal></expr><operator>,</operator><expr><literal type="number">49</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">44</literal> @@ <specifier>public</specifier> <name>class</name> <name>PredicateDerefQuery</name> extends <name>Query</name> <block>{
             <expr><name><name>this</name><operator>.</operator><name>subQueryHits</name></name> <operator>=</operator> <operator>new</operator> <call><name>BitSet</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateChildren</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>nextDoc</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateChildren</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         *
         * @throws UnsupportedOperationException this implementation always
         *                                       throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 

         <comment type="block" format="javadoc">/**
          * Perform the sub query
          * For each reference property UUID
@@ -315,59 +305,58 @@ public class PredicateDerefQuery extends Query {
          * @throws IOException
          */</comment>
         <function><type><specifier>private</specifier> <name>void</name></type> <name>calculateChildren</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>uuids</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>uuids</name> <operator>=</operator> <operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 <comment type="line">//                subQueryHits.clear();</comment>
 <comment type="line">//                hits.clear();</comment>
                <expr_stmt><expr><call><name><name>subQueryScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>HitCollector</name></super><argument_list>()</argument_list> <block>{
                    <function><type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>subQueryHits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></function>
                }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>subQueryScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractHitCollector</name></super><argument_list>()</argument_list> <block>{
                <function><annotation>@<name>Override</name></annotation>
                <type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>subQueryHits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></function>
            }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
                <decl_stmt><decl><type><name>TermDocs</name></type> <name>termDocs</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>termDocs</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTIES_SET</name></name></expr></argument>, <argument><expr><name>refProperty</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>prefix</name> <init>= <expr><call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>refProperty</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <while>while <condition>(<expr><call><name><name>termDocs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><call><name><name>termDocs</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                     
                    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>document</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTIES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><name>values</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <comment type="line">// no reference properties at all on this node</comment>
                        <continue>continue;</continue>
                    </block_content>}</block></if></if_stmt>
                    <for>for <control>(<init><decl><type><name>int</name></type> <name>v</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>v</name> <operator>&lt;</operator> <name><name>values</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>v</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                        <if_stmt><if>if <condition>(<expr><name><name>values</name><index>[<expr><name>v</name></expr>]</index></name><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><name>prefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                            <decl_stmt><decl><type><name>String</name></type> <name>uuid</name> <init>= <expr><name><name>values</name><index>[<expr><name>v</name></expr>]</index></name><operator>.</operator><call><name>substring</name><argument_list>(<argument><expr><call><name><name>prefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                            
                            <decl_stmt><decl><type><name>TermDocs</name></type> <name>node</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>termDocs</name></name><argument_list>(<argument><expr><call><name><name>TermFactory</name><operator>.</operator><name>createUUIDTerm</name></name><argument_list>(<argument><expr><name>uuid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                            <try>try <block>{<block_content>
                                <while>while <condition>(<expr><call><name><name>node</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                                    <if_stmt><if>if <condition>(<expr><call><name><name>subQueryHits</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>node</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                        <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    </block_content>}</block></if></if_stmt>
            <decl_stmt><decl><type><name>TermDocs</name></type> <name>termDocs</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>termDocs</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTIES_SET</name></name></expr></argument>, <argument><expr><name>refProperty</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>prefix</name> <init>= <expr><call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>refProperty</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <while>while <condition>(<expr><call><name><name>termDocs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><call><name><name>termDocs</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>document</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTIES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>values</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <comment type="line">// no reference properties at all on this node</comment>
                    <continue>continue;</continue>
                </block_content>}</block></if></if_stmt>
                <for>for <control>(<init><decl><type><name>int</name></type> <name>v</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>v</name> <operator>&lt;</operator> <name><name>values</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>v</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><name><name>values</name><index>[<expr><name>v</name></expr>]</index></name><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><name>prefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                        <decl_stmt><decl><type><name>String</name></type> <name>uuid</name> <init>= <expr><name><name>values</name><index>[<expr><name>v</name></expr>]</index></name><operator>.</operator><call><name>substring</name><argument_list>(<argument><expr><call><name><name>prefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt><decl><type><name>TermDocs</name></type> <name>node</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>termDocs</name></name><argument_list>(<argument><expr><call><name><name>TermFactory</name><operator>.</operator><name>createUUIDTerm</name></name><argument_list>(<argument><expr><name>uuid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <try>try <block>{<block_content>
                            <while>while <condition>(<expr><call><name><name>node</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                                <if_stmt><if>if <condition>(<expr><call><name><name>subQueryHits</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>node</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                    <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                 </block_content>}</block></if></if_stmt>
                            </block_content>}</block></while> <finally>finally <block>{<block_content>
                                <expr_stmt><expr><call><name><name>node</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                             </block_content>}</block></finally>
                        </block_content>}</block> <finally>finally <block>{<block_content>
                            <expr_stmt><expr><call><name><name>node</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                         </block_content>}</block></finally></try>
                     </block_content>}</block></if></if_stmt>
                 </block_content>}</block></for>
                
                <comment type="line">// collect nameTest hits</comment>
                <decl_stmt><decl><type><specifier>final</specifier> <name>BitSet</name></type> <name>nameTestHits</name> <init>= <expr><operator>new</operator> <call><name>BitSet</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>nameTestScorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>nameTestScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>HitCollector</name></super><argument_list>()</argument_list> <block>{
                        <function><type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                            <expr_stmt><expr><call><name><name>nameTestHits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        </block_content>}</block></function>
                    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></while>
 
                <comment type="line">// filter out the target nodes that do not match the name test</comment>
                <comment type="line">// if there is any name test at all.</comment>
                <if_stmt><if>if <condition>(<expr><name>nameTestScorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>and</name></name><argument_list>(<argument><expr><name>nameTestHits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            <comment type="line">// collect nameTest hits</comment>
            <decl_stmt><decl><type><specifier>final</specifier> <name>BitSet</name></type> <name>nameTestHits</name> <init>= <expr><operator>new</operator> <call><name>BitSet</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>nameTestScorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>nameTestScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractHitCollector</name></super><argument_list>()</argument_list> <block>{
                    <function><annotation>@<name>Override</name></annotation>
                    <type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>score</name></decl></parameter>)</parameter_list> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>nameTestHits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></function>
                }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>

            <comment type="line">// filter out the target nodes that do not match the name test</comment>
            <comment type="line">// if there is any name test at all.</comment>
            <if_stmt><if>if <condition>(<expr><name>nameTestScorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>hits</name><operator>.</operator><name>and</name></name><argument_list>(<argument><expr><name>nameTestHits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
         </block_content>}</block></while>
     </block_content>}</block></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>QueryHitsQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>QueryHitsQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b1f1fa332</name><operator>..</operator><name>ae2502426</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>QueryHitsQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>QueryHitsQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeSet</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>code</name><operator>&gt;</operator><name><name>QueryHitsQuery</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>exposes</name> <name>a</name> <block>{@<expr><name>link</name> <name>QueryHits</name></expr>}</block> <name>implementation</name> <name>again</name>
  <operator>*</operator> <name>as</name> <name>a</name> <name>Lucene</name> <name><name>Query</name><operator>.</operator></name>
  *<operator>/</operator>
@<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
 <specifier>public</specifier> <name>class</name> <name>QueryHitsQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name><block>{
 
     <comment type="block" format="javadoc">/**
@@ -58,7 +59,7 @@ public class QueryHitsQuery extends Query implements JackrabbitQuery{
     /**
      * {@inheritDoc}
      */</comment>
    <expr><specifier>protected</specifier> <name>Weight</name> <call><name>createWeight</name><argument_list>(<argument><expr><name>Searcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Weight</name> <call><name>createWeight</name><argument_list>(<argument><expr><name>Searcher</name> <name>searcher</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
         <return>return <expr><operator>new</operator> <call><name>QueryHitsQueryWeight</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
     }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryHitsQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name><block>{
     <comment type="block" format="javadoc">/**
      * The Weight implementation for this query.
      */</comment>
    <expr><specifier>public</specifier> <name>class</name> <name>QueryHitsQueryWeight</name> implements <name>Weight</name> <block>{
    <expr><specifier>public</specifier> <name>class</name> <name>QueryHitsQueryWeight</name> extends <name>Weight</name> <block>{
 
         <comment type="block" format="javadoc">/**
          * The similarity.
@@ -142,7 +143,8 @@ public class QueryHitsQuery extends Query implements JackrabbitQuery{
         /**
          * {@inheritDoc}
          */</comment>
        <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
             <return>return <expr><operator>new</operator> <call><name>QueryHitsQueryScorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>similarity</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
         }</block>
 
@@ <operator>-</operator><literal type="number">165</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">167</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryHitsQuery</name> extends <name>Query</name> implements <name>JackrabbitQuery</name><block>{
          <expr><operator>*</operator> <name>Iterator</name> <name><name>over</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>Integer</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>instances</name> <name>identifying</name> <name>the</name>
          <operator>*</operator> <name>lucene</name> <name><name>documents</name><operator>.</operator> <name>Document</name></name> <name>numbers</name> <name>are</name> <name>iterated</name> <name>in</name> <name>ascending</name> <name><name>order</name><operator>.</operator></name>
          *<operator>/</operator>
        <specifier>private</specifier> <name>final</name> <name>Iterator</name> <name>docs</name></expr>;
        <specifier>private</specifier> <name>final</name> <name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name> <name>docs</name></block></expr>;
 
         <comment type="block" format="javadoc">/**
          * Maps &lt;code&gt;Integer&lt;/code&gt; document numbers to &lt;code&gt;Float&lt;/code&gt;
@@ -212,48 +214,39 @@ public class QueryHitsQuery extends Query implements JackrabbitQuery{
             docs = sortedDocs.iterator();
         }
 
        /**
         * {@inheritDoc}
         */</comment>
        <specifier>public</specifier> <name>boolean</name> <call><name>next</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>docs</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <operator>(</operator><name>Integer</name><operator>)</operator> <call><name><name>docs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>currentDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>currentDoc</name></expr>;</return>
             </block_content>}</block></if></if_stmt>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
            <expr_stmt><expr><name>currentDoc</name> <operator>=</operator> <ternary><condition><expr><call><name><name>docs</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><call><name><name>docs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><name>NO_MORE_DOCS</name></expr></else></ternary></expr>;</expr_stmt>
             <return>return <expr><name>currentDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
            <return>return <expr><ternary><condition><expr><name>currentDoc</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><operator>-</operator><literal type="number">1</literal></expr> </then><else>: <expr><name>currentDoc</name></expr></else></ternary></expr>;</return>
        </block_content>}</block></function>

        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><call><name><name>scores</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>currentDoc</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>currentDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>currentDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <do>do <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>next</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
                <if_stmt><if>if <condition>(<expr><call><name>nextDoc</name><argument_list>()</argument_list></call> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                    <return>return <expr><name>NO_MORE_DOCS</name></expr>;</return>
                 </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt> <while>while <condition>(<expr><name>target</name> <operator>&gt;</operator> <call><name>doc</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block> while <condition>(<expr><name>target</name> <operator>&gt;</operator> <call><name>docID</name><argument_list>()</argument_list></call></expr>)</condition>;</do>
            <return>return <expr><call><name>docID</name><argument_list>()</argument_list></call></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>Explanation</name><argument_list>()</argument_list></call></expr>;</return>
        </block_content>}</block></function>
     </block_content>}</block></function>
 </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RangeQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RangeQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b5b71c681</name><operator>..</operator><literal type="number">2c8fb335b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RangeQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RangeQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermRangeQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Implements a variant of the lucene class {@link org.apache.lucene.search.RangeQuery}.
  * This class does not rewrite to basic {@link org.apache.lucene.search.TermQuery}
  * but will calculate the matching documents itself. That way a
  * &lt;code&gt;TooManyClauses&lt;/code&gt; can be avoided.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>RangeQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends> <implements>implements <super><name>Transformable</name></super></implements></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -147,7 +149,7 @@ public class RangeQuery extends Query implements Transformable {
     public Query rewrite(IndexReader reader) throws IOException {
         if (transform == TRANSFORM_NONE) {
             Query stdRangeQueryImpl
                    = new org.apache.lucene.search.RangeQuery(lowerTerm, upperTerm, inclusive);
                    = new TermRangeQuery(lowerTerm.field(), lowerTerm.text(), upperTerm.text(), inclusive, inclusive);
             try {
                 stdRangeQuery = stdRangeQueryImpl.rewrite(reader);
                 return stdRangeQuery;
@@ -169,7 +171,7 @@ public class RangeQuery extends Query implements Transformable {
      * @param searcher the searcher to use for the &lt;code&gt;Weight&lt;/code&gt;.
      * @return the &lt;code&gt;Weigth&lt;/code&gt; for this query.
      */</comment>
    <function><type><specifier>protected</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>RangeQueryWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">240</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>RangeQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
          <expr><operator>*</operator> @<name>param</name> <name>reader</name> <name>index</name> <name>reader</name>
          <operator>*</operator> @</expr><return>return <expr><name>a</name> <block>{@<expr><name>link</name> <name>RangeQueryScorer</name></expr>}</block> <name>instance</name>
          <operator>*</operator><operator>/</operator>
        <specifier>protected</specifier> <name>Scorer</name> <call><name>createScorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <block>{
        <expr><specifier>protected</specifier> <name>Scorer</name> <call><name>createScorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <block>{
             <return>return <expr><operator>new</operator> <call><name>RangeQueryScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
         }</block>
 
@@ <operator>-</operator><literal type="number">355</literal></expr><operator>,</operator><expr><literal type="number">44</literal> <operator>+</operator><literal type="number">358</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <specifier>public</specifier> <name>class</name> <name>RangeQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
             <expr><name>hits</name> <operator>=</operator> <name>result</name></expr>;
         }</block></expr></return>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <specifier>public</specifier> <name>boolean</name> <call><name>next</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><annotation>@<name>Override</name></annotation>
        <specifier>public</specifier> <name>int</name> <call><name>nextDoc</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateHits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>nextDoc</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateHits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * Returns an empty Explanation object.
         * @return an empty Explanation object.
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>Explanation</name><argument_list>()</argument_list></call></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
         <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ReadOnlyIndexReader.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ReadOnlyIndexReader.java
index 87344a7df..a865594b3 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ReadOnlyIndexReader.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/ReadOnlyIndexReader.java
@@ -16,13 +16,14 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermPositions</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Overwrites the methods that would modify the index and throws an
  * {@link UnsupportedOperationException} in each of those methods. A
@@ -175,7 +176,8 @@ class ReadOnlyIndexReader extends RefCountingIndexReader {
     /**
      * @exception UnsupportedOperationException always
      */</comment>
    <function><type><specifier>protected</specifier> <specifier>final</specifier> <name>void</name></type> <name>doCommit</name><parameter_list>()</parameter_list> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>doCommit</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>commitUserData</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content> 
         <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"IndexReader is read-only"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RefCountingIndexReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RefCountingIndexReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9fd3d06a8</literal><operator>..</operator><name>c68c48fbf</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RefCountingIndexReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RefCountingIndexReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RefCountingIndexReader</name>
     <comment type="block" format="javadoc">/**
      * @return the current reference count value.
      */</comment>
    <specifier>synchronized</specifier> <name>int</name> <call><name>getRefCount</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>public</specifier> <specifier>synchronized</specifier> <name>int</name> <call><name>getRefCount</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><name>refCount</name></expr>;</return></block></expr>
     }</block>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ScoreNode</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ScoreNode</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f81c57365</name><operator>..</operator><name>c0919b9f6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ScoreNode</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ScoreNode</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java
index ad610b6be..0c06d9b6b 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SearchIndex.java
@@ -16,27 +16,6 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>query</name><operator>.</operator><name>InvalidQueryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>DocumentBuilder</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>DocumentBuilderFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>ParserConfigurationException</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>HierarchyManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>SessionImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>QueryHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>QueryHandlerContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>directory</name><operator>.</operator><name>DirectoryManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>directory</name><operator>.</operator><name>FSDirectoryManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AbstractHitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>session</name><operator>.</operator><name>SessionContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>ItemStateException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>ItemStateManager</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>PathFactoryImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>DefaultQueryNodeFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>OrderingImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Token</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>TokenStream</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>PayloadAttribute</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>TermAttribute</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Payload</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>HitCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortComparatorSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>tika</name><operator>.</operator><name>parser</name><operator>.</operator><name>Parser</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>Element</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>SAXException</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>query</name><operator>.</operator><name>InvalidQueryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>DocumentBuilder</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>DocumentBuilderFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>ParserConfigurationException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Implements a {@link org.apache.jackrabbit.core.query.QueryHandler} using
  * Lucene.
@@ -440,9 +441,9 @@ public class SearchIndex extends AbstractQueryHandler {
     private int termInfosIndexDivisor = DEFAULT_TERM_INFOS_INDEX_DIVISOR;
 
     /**
     * The sort comparator source for indexed properties.
     * The field comparator source for indexed properties.
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>SortComparatorSource</name></type> <name>scs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>SharedFieldComparatorSource</name></type> <name>scs</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * Flag that indicates whether the hierarchy cache should be initialized
@@ -507,7 +508,7 @@ public class SearchIndex extends AbstractQueryHandler {
             }
         }
 
        scs = new SharedFieldSortComparator(
        scs = new SharedFieldComparatorSource(
                 FieldNames.PROPERTIES, context.getItemStateManager(),
                 context.getHierarchyManager(), nsMappings);
         indexingConfig = createIndexingConfiguration(nsMappings);
@@ -691,7 +692,8 @@ public class SearchIndex extends AbstractQueryHandler {
             try {
                 Query q = new TermQuery(new Term(
                         FieldNames.WEAK_REFS, id.toString()));
                searcher.search(q, new HitCollector() {
                searcher.search(q, new AbstractHitCollector() {
                    @Override
                     public void collect(int doc, float score) {
                         docs.add(doc);
                     }
@@ -1096,9 +1098,9 @@ public class SearchIndex extends AbstractQueryHandler {
     }
 
     /**
     * @return the sort comparator source for this index.
     * @return the field comparator source for this index.
      */</comment>
    <function><type><specifier>protected</specifier> <name>SortComparatorSource</name></type> <name>getSortComparatorSource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <function><type><specifier>protected</specifier> <name>SharedFieldComparatorSource</name></type> <name>getSortComparatorSource</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><name>scs</name></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1376</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">1378</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>SearchIndex</name> extends <name>AbstractQueryHandler</name> <block>{
                             <try>try <block>{<block_content>
                                 <comment type="line">// find the right fields to transfer</comment>
                                 <decl_stmt><decl><type><name><name>Fieldable</name><index>[]</index></name></type> <name>fields</name> <init>= <expr><call><name><name>aDoc</name><operator>.</operator><name>getFieldables</name></name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>PROPERTIES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                <decl_stmt><decl><type><name>Token</name></type> <name>t</name> <init>= <expr><operator>new</operator> <call><name>Token</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                                 <for>for <control>(<init><decl><type><name>Fieldable</name></type> <name>field</name> <range>: <expr><name>fields</name></expr></range></decl></init>)</control> <block>{<block_content>

                                     <comment type="line">// assume properties fields use SingleTokenStream</comment>
                                    <expr_stmt><expr><name>t</name> <operator>=</operator> <call><name><name>field</name><operator>.</operator><name>tokenStreamValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>t</name><operator>.</operator><name>termBuffer</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>t</name><operator>.</operator><name>termLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                    <decl_stmt><decl><type><name>TokenStream</name></type> <name>tokenStream</name> <init>= <expr><call><name><name>field</name><operator>.</operator><name>tokenStreamValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                                    <decl_stmt><decl><type><name>TermAttribute</name></type> <name>termAttribute</name> <init>= <expr><call><name><name>tokenStream</name><operator>.</operator><name>addAttribute</name></name><argument_list>(<argument><expr><name><name>TermAttribute</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                    <decl_stmt><decl><type><name>PayloadAttribute</name></type> <name>payloadAttribute</name> <init>= <expr><call><name><name>tokenStream</name><operator>.</operator><name>addAttribute</name></name><argument_list>(<argument><expr><name><name>PayloadAttribute</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                    <expr_stmt><expr><call><name><name>tokenStream</name><operator>.</operator><name>incrementToken</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name>tokenStream</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name>tokenStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

                                    <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>termAttribute</name><operator>.</operator><name>termBuffer</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>termAttribute</name><operator>.</operator><name>termLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                     <if_stmt><if>if <condition>(<expr><call><name><name>value</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>namePrefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                         <comment type="line">// extract value</comment>
                                         <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>value</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><call><name><name>namePrefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1388</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">1396</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SearchIndex</name> extends <name>AbstractQueryHandler</name> <block>{
                                         <expr><name>Path</name> <name>p</name> <operator>=</operator> <call><name>getRelativePath</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>propState</name></expr></argument>)</argument_list></call></expr>;
                                         <name>String</name> <name>path</name> <operator>=</operator> <call><name>getNamespaceMappings</name><argument_list>()</argument_list></call><operator>.</operator><call><name>translatePath</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                                         <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>setTermBuffer</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><call><name><name>field</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>SingletonTokenStream</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>AGGREGATED_NODE_UUID</name></name></expr></argument>, <argument><expr><call><name><name>parent</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>NO</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>NOT_ANALYZED_NO_NORMS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>termAttribute</name><operator>.</operator><name>setTermBuffer</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><call><name><name>field</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>,
                                                <argument><expr><operator>new</operator> <call><name>SingletonTokenStream</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><operator>(</operator><name>Payload</name><operator>)</operator> <call><name><name>payloadAttribute</name><operator>.</operator><name>getPayload</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>clone</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>AGGREGATED_NODE_UUID</name></name></expr></argument>,
                                                <argument><expr><call><name><name>parent</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>NO</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>NOT_ANALYZED_NO_NORMS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                     </block_content>}</block></if></if_stmt>
                                 </block_content>}</block></for>
                             </block_content>}</block> <finally>finally <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6f5820749</literal><operator>..</operator><name>accb3a00b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermPositions</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortComparatorSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>PropertyType</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>WeakHashMap</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>PropertyType</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Implements a variant of the lucene class &lt;code&gt;org.apache.lucene.search.FieldCacheImpl&lt;/code&gt;.
  * The lucene FieldCache class has some sort of support for custom comparators
@@ -139,7 +138,7 @@ public class SharedFieldCache {
      * @param reader     the &lt;code&gt;IndexReader&lt;/code&gt;.
      * @param field      name of the shared field.
      * @param prefix     the property name, will be used as term prefix.
     * @param comparator the sort comparator instance.
     * @param comparator the field comparator instance.
      * @return a ValueIndex that contains the field values and order
      *         information.
      * @throws IOException if an error occurs while reading from the index.
@@ -147,7 +146,7 @@ public class SharedFieldCache {
     public ValueIndex getValueIndex(IndexReader reader,
                                     String field,
                                     String prefix,
                                    SortComparatorSource comparator)
                                    FieldComparator comparator)
             throws IOException {
 
         if (reader instanceof ReadOnlyIndexReader) {
@@ -225,7 +224,7 @@ public class SharedFieldCache {
      * See if a &lt;code&gt;ValueIndex&lt;/code&gt; object is in the cache.
      */</comment>
     <function><type><name>ValueIndex</name></type> <name>lookup</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>,
                      <parameter><decl><type><name>String</name></type> <name>prefix</name></decl></parameter>, <parameter><decl><type><name>SortComparatorSource</name></type> <name>comparer</name></decl></parameter>)</parameter_list> <block>{<block_content>
                      <decl_stmt><decl><type><name>String</name></type> <name>prefix</name></decl>, <decl><type ref="prev"/><name>FieldComparator</name> <name>comparer</name></decl>) <block>{<block_content>
         <decl_stmt><decl><type><name>Key</name></type> <name>key</name> <init>= <expr><operator>new</operator> <call><name>Key</name><argument_list>(<argument><expr><name>field</name></expr></argument>, <argument><expr><name>prefix</name></expr></argument>, <argument><expr><name>comparer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
             <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>, <argument><name>ValueIndex</name></argument>&gt;</argument_list></name></type> <name>readerCache</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">240</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SharedFieldCache</name> <block>{
      <expr><operator>*</operator> <name>Put</name> <name><name>a</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>ValueIndex</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <operator>&lt;</operator><name>code</name><operator>&gt;</operator><name><name>value</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>to</name> <name><name>cache</name><operator>.</operator></name>
      *<operator>/</operator>
     <name>ValueIndex</name> <call><name>store</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>String</name> <name>field</name></expr></argument>, <argument><expr><name>String</name> <name>prefix</name></expr></argument>,
                 <argument><expr><name>SortComparatorSource</name> <name>comparer</name></expr></argument>, <argument><expr><name>ValueIndex</name> <name>value</name></expr></argument>)</argument_list></call> <block>{
                 <expr><name>FieldComparator</name> <name>comparer</name></expr>, <expr><name>ValueIndex</name> <name>value</name></expr>) <block>{
         <expr><name>Key</name> <name>key</name> <operator>=</operator> <operator>new</operator> <call><name>Key</name><argument_list>(<argument><expr><name>field</name></expr></argument>, <argument><expr><name>prefix</name></expr></argument>, <argument><expr><name>comparer</name></expr></argument>)</argument_list></call></expr>;
         <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
             <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Key</name></argument>, <argument><name>ValueIndex</name></argument>&gt;</argument_list></name></type> <name>readerCache</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">285</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">284</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SharedFieldCache</name> <block>{
 
         <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>field</name></expr>;
         <specifier>private</specifier> <name>final</name> <name>String</name> <name>prefix</name></block></expr>;</expr_stmt>
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SortComparatorSource</name></type> <name>comparator</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Object</name></type> <name>comparator</name></decl>;</decl_stmt>
 
         <comment type="block" format="javadoc">/**
          * Creates &lt;code&gt;Key&lt;/code&gt; for ValueIndex lookup.
          */</comment>
        <expr_stmt><expr><call><name>Key</name><argument_list>(<argument><expr><name>String</name> <name>field</name></expr></argument>, <argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>SortComparatorSource</name> <name>comparator</name></expr></argument>)</argument_list></call> <block>{
        <expr><call><name>Key</name><argument_list>(<argument><expr><name>String</name> <name>field</name></expr></argument>, <argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>FieldComparator</name> <name>comparator</name></expr></argument>)</argument_list></call> <block>{ 
             <expr><name><name>this</name><operator>.</operator><name>field</name></name> <operator>=</operator> <call><name><name>field</name><operator>.</operator><name>intern</name></name><argument_list>()</argument_list></call></expr>;
             <name><name>this</name><operator>.</operator><name>prefix</name></name> <operator>=</operator> <call><name><name>prefix</name><operator>.</operator><name>intern</name></name><argument_list>()</argument_list></call></block></expr>;
             <name><name>this</name><operator>.</operator><name>comparator</name></name> <operator>=</operator> <name>comparator</name></block></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldComparatorSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldComparatorSource</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..e3ea3cc70</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldComparatorSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">379</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>HierarchyManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>PropertyId</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>ItemStateManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>PropertyState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>value</name><operator>.</operator><name>InternalValue</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>PathFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>conversion</name><operator>.</operator><name>IllegalNameException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>PathBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>PathFactoryImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparatorSource</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Implements a &lt;code&gt;FieldComparatorSource&lt;/code&gt; for &lt;code&gt;FieldComparator&lt;/code&gt;s which
 * know how to sort on a lucene field that contains values for multiple properties.
 */</comment>
<class><specifier>public</specifier> class <name>SharedFieldComparatorSource</name> <super_list><extends>extends <super><name>FieldComparatorSource</name></super></extends></super_list> <block>{

    <comment type="block" format="javadoc">/**
     * The name of the shared field in the lucene index.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>field</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The item state manager.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ItemStateManager</name></type> <name>ism</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The hierarchy manager on top of {@link #ism}.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>HierarchyManager</name></type> <name>hmgr</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The index internal namespace mappings.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>NamespaceMappings</name></type> <name>nsMappings</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Create a new &lt;code&gt;SharedFieldComparatorSource&lt;/code&gt; for a given shared field.
     *
     * @param fieldname the shared field.
     * @param ism       the item state manager of this workspace.
     * @param hmgr      the hierarchy manager of this workspace.
     * @param nsMappings the index internal namespace mappings.
     */</comment>
    <constructor><specifier>public</specifier> <name>SharedFieldComparatorSource</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>, <parameter><decl><type><name>ItemStateManager</name></type> <name>ism</name></decl></parameter>,
                                       <parameter><decl><type><name>HierarchyManager</name></type> <name>hmgr</name></decl></parameter>, <parameter><decl><type><name>NamespaceMappings</name></type> <name>nsMappings</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>field</name></name> <operator>=</operator> <name>fieldname</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ism</name></name> <operator>=</operator> <name>ism</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>hmgr</name></name> <operator>=</operator> <name>hmgr</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>nsMappings</name></name> <operator>=</operator> <name>nsMappings</name></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></constructor></block></class></block_content></block></synchronized></block></block></expr>}</block>

    <comment type="block" format="javadoc">/**
     * Create a new &lt;code&gt;FieldComparator&lt;/code&gt; for an embedded &lt;code&gt;propertyName&lt;/code&gt;
     * and a &lt;code&gt;reader&lt;/code&gt;.
     *
     * @param propertyName the relative path to the property to sort on as returned
     *          by {@link org.apache.jackrabbit.spi.Path#getString()}.
     * @return a &lt;code&gt;FieldComparator&lt;/code&gt;
     * @throws java.io.IOException if an error occurs
     */</comment>
    @<name>Override</name>
    <specifier>public</specifier> <name>FieldComparator</name> <call><name>newComparator</name><argument_list>(<argument><expr><name>String</name> <name>propertyName</name></expr></argument>, <argument><expr><name>int</name> <name>numHits</name></expr></argument>, <argument><expr><name>int</name> <name>sortPos</name></expr></argument>,
                                         <argument><expr><name>boolean</name> <name>reversed</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{

        <expr><name>PathFactory</name> <name>factory</name> <operator>=</operator> <call><name><name>PathFactoryImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>SimpleFieldComparator</name></type> <name>simple</name> <init>= <expr><operator>new</operator> <call><name>SimpleFieldComparator</name><argument_list>(<argument><expr><call><name><name>nsMappings</name><operator>.</operator><name>translatePath</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <return>return <expr><ternary><condition><expr><call><name><name>path</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>
                ?</condition><then> <expr><name>simple</name></expr>
                </then><else>: <expr><operator>new</operator> <call><name>CompoundScoreFieldComparator</name><argument_list>(
                        <argument><expr><operator>new</operator> <name><name>FieldComparator</name><index>[]</index></name> <block>{ <expr><name>simple</name></expr>, <expr><operator>new</operator> <call><name>RelPathFieldComparator</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr> }</block></expr></argument>, <argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>

        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalNameException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><call><name><name>Util</name><operator>.</operator><name>createIOException</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></synchronized>

    <comment type="block" format="javadoc">/**
     * Abstract base class for &lt;code&gt;FieldComparator&lt;/code&gt;s which keep their values
     * (&lt;code&gt;Comparable&lt;/code&gt;s) in an array.
     */</comment>
    <class><specifier>private</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name>AbstractFieldComparator</name> <super_list><extends>extends <super><name>FieldComparatorBase</name></super></extends></super_list> <block>{

        <comment type="block" format="javadoc">/**
         * The values for comparing.
         */</comment>
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Comparable</name><index>[]</index></name></type> <name>values</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * The index readers.
         */</comment>

        <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>&gt;</argument_list></name></type> <name>readers</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="block" format="javadoc">/**
         * The document number starts for the {@link #readers}.
         */</comment>
        <decl_stmt><decl><type><specifier>protected</specifier> <name><name>int</name><index>[]</index></name></type> <name>starts</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * Create a new instance with the given number of values.
         *
         * @param numHits  the number of values
         */</comment>
        <constructor><specifier>protected</specifier> <name>AbstractFieldComparator</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><name>values</name> <operator>=</operator> <operator>new</operator> <name><name>Comparable</name><index>[<expr><name>numHits</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <comment type="block" format="javadoc">/**
         * Returns the reader index for document &lt;code&gt;n&lt;/code&gt;.
         *
         * @param n document number.
         * @return the reader index.
         */</comment>
        <function><type><specifier>protected</specifier> <specifier>final</specifier> <name>int</name></type> <name>readerIndex</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>lo</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>hi</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

            <while>while <condition>(<expr><name>hi</name> <operator>&gt;=</operator> <name>lo</name></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>mid</name> <init>= <expr><operator>(</operator><name>lo</name> <operator>+</operator> <name>hi</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>int</name></type> <name>midValue</name> <init>= <expr><name><name>starts</name><index>[<expr><name>mid</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>n</name> <operator>&lt;</operator> <name>midValue</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>hi</name> <operator>=</operator> <name>mid</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if>
                <if type="elseif">else if <condition>(<expr><name>n</name> <operator>&gt;</operator> <name>midValue</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>lo</name> <operator>=</operator> <name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if>
                <else>else <block>{<block_content>
                    <while>while <condition>(<expr><name>mid</name> <operator>+</operator> <literal type="number">1</literal> <operator>&lt;</operator> <call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name><name>starts</name><index>[<expr><name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <name>midValue</name></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>mid</name><operator>++</operator></expr>;</expr_stmt>
                    </block_content>}</block></while>
                    <return>return <expr><name>mid</name></expr>;</return>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></while>
            <return>return <expr><name>hi</name></expr>;</return>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * Add the given value to the values array
         *
         * @param slot   index into values
         * @param value  value for adding
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot</name></decl></parameter>, <parameter><decl><type><name>Comparable</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><name><name>values</name><index>[<expr><name>slot</name></expr>]</index></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * Return a value from the values array
         *
         * @param slot  index to retrieve
         * @return  the retrieved value
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>Comparable</name></type> <name>getValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>slot</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><name><name>values</name><index>[<expr><name>slot</name></expr>]</index></name></expr>;</return>
        </block_content>}</block></function>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><call><name>getIndexReaders</name><argument_list>(<argument><expr><name>readers</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>int</name></type> <name>maxDoc</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>starts</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name>starts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>maxDoc</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>maxDoc</name> <operator>+=</operator> <call><name><name>r</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt><expr><name><name>starts</name><index>[<expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name> <operator>=</operator> <name>maxDoc</name></expr>;</expr_stmt>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * Checks if &lt;code&gt;reader&lt;/code&gt; is of type {@link MultiIndexReader} and if
         * so calls itself recursively for each reader within the
         * &lt;code&gt;MultiIndexReader&lt;/code&gt; or otherwise adds the reader to the list.
         *
         * @param readers  list of index readers.
         * @param reader   reader to decompose
         */</comment>
        <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>getIndexReaders</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>&gt;</argument_list></name></type> <name>readers</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>reader</name> <operator>instanceof</operator> <name>MultiIndexReader</name></expr>)</condition> <block>{<block_content>
                <for>for <control>(<init><decl><type><name>IndexReader</name></type> <name>r</name> <range>: <expr><operator>(</operator><operator>(</operator><name>MultiIndexReader</name><operator>)</operator> <name>reader</name><operator>)</operator><operator>.</operator><call><name>getIndexReaders</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                    <expr_stmt><expr><call><name>getIndexReaders</name><argument_list>(<argument><expr><name>readers</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></for>
            </block_content>}</block></if>
            <else>else <block>{<block_content>
                <expr_stmt><expr><call><name><name>readers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></function>
    }</block></class>

    <comment type="block" format="javadoc">/**
     * A &lt;code&gt;FieldComparator&lt;/code&gt; which works for order by clauses with properties
     * directly on the result nodes.
     */</comment>
    <class><specifier>static</specifier> <specifier>final</specifier> class <name>SimpleFieldComparator</name> <super_list><extends>extends <super><name>AbstractFieldComparator</name></super></extends></super_list> <block>{

        <comment type="block" format="javadoc">/**
         * The term look ups of the index segments.
         */</comment>
        <decl_stmt><decl><type><specifier>protected</specifier> <name><name>SharedFieldCache</name><operator>.</operator><name>ValueIndex</name><index>[]</index></name></type> <name>indexes</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * The name of the property
         */</comment>
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>propertyName</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * The name of the field in the index
         */</comment>
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>fieldName</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * Create a new instance of the &lt;code&gt;FieldComparator&lt;/code&gt;.
         *
         * @param propertyName  the name of the property
         * @param fieldName     the name of the field in the index
         * @param numHits       the number of values 
         */</comment>
        <constructor><specifier>public</specifier> <name>SimpleFieldComparator</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>propertyName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fieldName</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>propertyName</name></name> <operator>=</operator> <name>propertyName</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>fieldName</name></name> <operator>=</operator> <name>fieldName</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name>indexes</name> <operator>=</operator> <operator>new</operator> <name><name>SharedFieldCache</name><operator>.</operator><name>ValueIndex</name><index>[<expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>namedValue</name> <init>= <expr><call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name>indexes</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>SharedFieldCache</name><operator>.</operator><name>INSTANCE</name><operator>.</operator><name>getValueIndex</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name>namedValue</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></function>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>protected</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name>readerIndex</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name><name>indexes</name><index>[<expr><name>idx</name></expr>]</index></name><operator>.</operator><call><name>getValue</name><argument_list>(<argument><expr><name>doc</name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>

    }</block></class>

    <comment type="block" format="javadoc">/**
     * A &lt;code&gt;FieldComparator&lt;/code&gt; which works with order by clauses that use a
     * relative path to a property to sort on.
     */</comment>
    <class><specifier>private</specifier> <specifier>final</specifier> class <name>RelPathFieldComparator</name> <super_list><extends>extends <super><name>AbstractFieldComparator</name></super></extends></super_list> <block>{

        <comment type="block" format="javadoc">/**
         * Relative path to the property
         */</comment>
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>propertyName</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * Create a new instance of the &lt;code&gt;FieldComparator&lt;/code&gt;.
         *
         * @param propertyName  relative path of the property
         * @param numHits       the number of values
         */</comment>
        <constructor><specifier>public</specifier> <name>RelPathFieldComparator</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>propertyName</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>propertyName</name></name> <operator>=</operator> <name>propertyName</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>protected</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <try>try <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name>readerIndex</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>Document</name></type> <name>document</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>document</name></name><argument_list>(<argument><expr><name>doc</name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>FieldSelectors</name><operator>.</operator><name>UUID</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>uuid</name> <init>= <expr><call><name><name>document</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>UUID</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>hmgr</name><operator>.</operator><name>getPath</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NodeId</name><argument_list>(<argument><expr><name>uuid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>PathBuilder</name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name>PathBuilder</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>propertyName</name><operator>.</operator><name>getElements</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>PropertyId</name></type> <name>id</name> <init>= <expr><call><name><name>hmgr</name><operator>.</operator><name>resolvePropertyPath</name></name><argument_list>(<argument><expr><call><name><name>builder</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt><if>if <condition>(<expr><name>id</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="null">null</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>

                <decl_stmt><decl><type><name>PropertyState</name></type> <name>state</name> <init>= <expr><operator>(</operator><name>PropertyState</name><operator>)</operator> <call><name><name>ism</name><operator>.</operator><name>getItemState</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>state</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="null">null</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>

                <decl_stmt><decl><type><name><name>InternalValue</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>state</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name><name>values</name><operator>.</operator><name>length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><call><name><name>Util</name><operator>.</operator><name>getComparable</name></name><argument_list>(<argument><expr><name><name>values</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block>
            <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ignore</name></decl></parameter>)</parameter_list> <block>{<block_content> </block_content>}</block></catch></try>

            <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></function>

    }</block></class>

    <comment type="block" format="javadoc">/**
     * Implements a compound &lt;code&gt;FieldComparator&lt;/code&gt; which delegates to several
     * other comparators. The comparators are asked for a sort value in the
     * sequence they are passed to the constructor.
     */</comment>
    <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>CompoundScoreFieldComparator</name> <super_list><extends>extends <super><name>AbstractFieldComparator</name></super></extends></super_list> <block>{
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>FieldComparator</name><index>[]</index></name></type> <name>fieldComparators</name></decl>;</decl_stmt>

        <comment type="block" format="javadoc">/**
         * Create a new instance of the &lt;code&gt;FieldComparator&lt;/code&gt;.
         *
         * @param fieldComparators  delegatees
         * @param numHits           the number of values
         */</comment>
        <constructor><specifier>public</specifier> <name>CompoundScoreFieldComparator</name><parameter_list>(<parameter><decl><type><name><name>FieldComparator</name><index>[]</index></name></type> <name>fieldComparators</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>fieldComparators</name></name> <operator>=</operator> <name>fieldComparators</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>FieldComparator</name></type> <name>fieldComparator</name> <range>: <expr><name>fieldComparators</name></expr></range></decl></init>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>fieldComparator</name> <operator>instanceof</operator> <name>FieldComparatorBase</name></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>Comparable</name></type> <name>c</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FieldComparatorBase</name><operator>)</operator> <name>fieldComparator</name><operator>)</operator><operator>.</operator><call><name>sortValue</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <return>return <expr><name>c</name></expr>;</return>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></function>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>FieldComparator</name></type> <name>fieldComparator</name> <range>: <expr><name>fieldComparators</name></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name><name>fieldComparator</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></function>
    }</block></class>
    
</block_content>}</block></decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldSortComparator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldSortComparator</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">1b4cfcd27</literal><operator>..</operator><literal type="number">000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SharedFieldSortComparator</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">242</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDocComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>ItemStateManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>PropertyState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>HierarchyManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>PropertyId</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>value</name><operator>.</operator><name>InternalValue</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>PathFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>PathBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>PathFactoryImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>conversion</name><operator>.</operator><name>IllegalNameException</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Implements a &lt;code&gt;SortComparator&lt;/code&gt; which knows how to sort on a lucene
 * field that contains values for multiple properties.
 */</comment>
<class><specifier>public</specifier> class <name>SharedFieldSortComparator</name> <super_list><extends>extends <super><name>SortComparator</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">2609351820466200052L</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The name of the shared field in the lucene index.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>field</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The item state manager.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ItemStateManager</name></type> <name>ism</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The hierarchy manager on top of {@link #ism}.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>HierarchyManager</name></type> <name>hmgr</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The index internal namespace mappings.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>NamespaceMappings</name></type> <name>nsMappings</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Creates a new &lt;code&gt;SharedFieldSortComparator&lt;/code&gt; for a given shared
     * field.
     *
     * @param fieldname the shared field.
     * @param ism       the item state manager of this workspace.
     * @param hmgr      the hierarchy manager of this workspace.
     * @param nsMappings the index internal namespace mappings.
     */</comment>
    <constructor><specifier>public</specifier> <name>SharedFieldSortComparator</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>,
                                     <parameter><decl><type><name>ItemStateManager</name></type> <name>ism</name></decl></parameter>,
                                     <parameter><decl><type><name>HierarchyManager</name></type> <name>hmgr</name></decl></parameter>,
                                     <parameter><decl><type><name>NamespaceMappings</name></type> <name>nsMappings</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>field</name></name> <operator>=</operator> <name>fieldname</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ism</name></name> <operator>=</operator> <name>ism</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>hmgr</name></name> <operator>=</operator> <name>hmgr</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>nsMappings</name></name> <operator>=</operator> <name>nsMappings</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <comment type="block" format="javadoc">/**
     * Creates a new &lt;code&gt;ScoreDocComparator&lt;/code&gt; for an embedded
     * &lt;code&gt;propertyName&lt;/code&gt; and a &lt;code&gt;reader&lt;/code&gt;.
     *
     * @param reader the index reader.
     * @param relPath the relative path to the property to sort on as returned
     *          by {@link Path#getString()}.
     * @return a &lt;code&gt;ScoreDocComparator&lt;/code&gt; for the
     * @throws IOException if an error occurs while reading from the index.
     */</comment>
    <function><type><specifier>public</specifier> <name>ScoreDocComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                            <parameter><decl><type><name>String</name></type> <name>relPath</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>PathFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>PathFactoryImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>p</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>relPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>ScoreDocComparator</name></type> <name>simple</name> <init>= <expr><operator>new</operator> <call><name>SimpleScoreDocComparator</name><argument_list>(
                    <argument><expr><name>reader</name></expr></argument>, <argument><expr><call><name><name>nsMappings</name><operator>.</operator><name>translatePath</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>simple</name></expr>;</return>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <return>return <expr><operator>new</operator> <call><name>CompoundScoreDocComparator</name><argument_list>(<argument><expr><name>reader</name></expr></argument>,
                        <argument><expr><operator>new</operator> <name><name>ScoreDocComparator</name><index>[]</index></name><block>{
                                <expr><name>simple</name></expr>,
                                <expr><operator>new</operator> <call><name>RelPathScoreDocComparator</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>
                        }</block></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalNameException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><call><name><name>Util</name><operator>.</operator><name>createIOException</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * @throws UnsupportedOperationException always.
     */</comment>
    <function><type><specifier>protected</specifier> <name>Comparable</name></type> <name>getComparable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>termtext</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * A score doc comparator that works for order by clauses with properties
     * directly on the result nodes.
     */</comment>
    <class><specifier>private</specifier> <specifier>final</specifier> class <name>SimpleScoreDocComparator</name> <super_list><extends>extends <super><name>AbstractScoreDocComparator</name></super></extends></super_list> <block>{

        <comment type="block" format="javadoc">/**
         * The term look ups of the index segments.
         */</comment>
        <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>SharedFieldCache</name><operator>.</operator><name>ValueIndex</name><index>[]</index></name></type> <name>indexes</name></decl>;</decl_stmt>

        <constructor><specifier>public</specifier> <name>SimpleScoreDocComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                        <parameter><decl><type><name>String</name></type> <name>propertyName</name></decl></parameter>)</parameter_list>
                <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>indexes</name></name> <operator>=</operator> <operator>new</operator> <name><name>SharedFieldCache</name><operator>.</operator><name>ValueIndex</name><index>[<expr><call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>namedValue</name> <init>= <expr><call><name><name>FieldNames</name><operator>.</operator><name>createNamedValue</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>readers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name>indexes</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>SharedFieldCache</name><operator>.</operator><name>INSTANCE</name><operator>.</operator><name>getValueIndex</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>field</name></expr></argument>,
                        <argument><expr><name>namedValue</name></expr></argument>, <argument><expr><name><name>SharedFieldSortComparator</name><operator>.</operator><name>this</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></constructor>

        <comment type="block" format="javadoc">/**
         * Returns the index term for the score doc &lt;code&gt;i&lt;/code&gt;.
         *
         * @param i the score doc.
         * @return the sort value if available.
         */</comment>
        <function><type><specifier>public</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name>readerIndex</name><argument_list>(<argument><expr><name><name>i</name><operator>.</operator><name>doc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name><name>indexes</name><index>[<expr><name>idx</name></expr>]</index></name><operator>.</operator><call><name>getValue</name><argument_list>(<argument><expr><name><name>i</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></class>

    <comment type="block" format="javadoc">/**
     * A score doc comparator that works with order by clauses that use a
     * relative path to a property to sort on.
     */</comment>
    <class><specifier>private</specifier> <specifier>final</specifier> class <name>RelPathScoreDocComparator</name> <super_list><extends>extends <super><name>AbstractScoreDocComparator</name></super></extends></super_list> <block>{

        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>relPath</name></decl>;</decl_stmt>

        <constructor><specifier>public</specifier> <name>RelPathScoreDocComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                         <parameter><decl><type><name>Path</name></type> <name>relPath</name></decl></parameter>)</parameter_list>
                <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>relPath</name></name> <operator>=</operator> <name>relPath</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <comment type="block" format="javadoc">/**
         * Returns the sort value for the given {@link ScoreDoc}. The value is
         * retrieved from the item state manager.
         *
         * @param i the score doc.
         * @return the sort value for the score doc.
         */</comment>
        <function><type><specifier>public</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <try>try <block>{<block_content>
                <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name>readerIndex</name><argument_list>(<argument><expr><name><name>i</name><operator>.</operator><name>doc</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>readers</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>document</name></name><argument_list>(<argument><expr><name><name>i</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name><name>starts</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>FieldSelectors</name><operator>.</operator><name>UUID</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>uuid</name> <init>= <expr><call><name><name>doc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>UUID</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>hmgr</name><operator>.</operator><name>getPath</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NodeId</name><argument_list>(<argument><expr><name>uuid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>PathBuilder</name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name>PathBuilder</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>builder</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>relPath</name><operator>.</operator><name>getElements</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>PropertyId</name></type> <name>id</name> <init>= <expr><call><name><name>hmgr</name><operator>.</operator><name>resolvePropertyPath</name></name><argument_list>(<argument><expr><call><name><name>builder</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>id</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="null">null</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
                <decl_stmt><decl><type><name>PropertyState</name></type> <name>state</name> <init>= <expr><operator>(</operator><name>PropertyState</name><operator>)</operator> <call><name><name>ism</name><operator>.</operator><name>getItemState</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>state</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="null">null</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
                <decl_stmt><decl><type><name><name>InternalValue</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>state</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name><name>values</name><operator>.</operator><name>length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><call><name><name>Util</name><operator>.</operator><name>getComparable</name></name><argument_list>(<argument><expr><name><name>values</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
                </block_content>}</block></if></if_stmt>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></catch></try>
        </block_content>}</block></function>
    }</block></class>

    <comment type="block" format="javadoc">/**
     * Implements a compound score doc comparator that delegates to several
     * other comparators. The comparators are asked for a sort value in the
     * sequence they are passed to the constructor. The first non-null value
     * will be returned by {@link #sortValue(ScoreDoc)}.
     */</comment>
    <class><specifier>private</specifier> <specifier>final</specifier> class <name>CompoundScoreDocComparator</name>
            <super_list><extends>extends <super><name>AbstractScoreDocComparator</name></super></extends></super_list> <block>{

        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>ScoreDocComparator</name><index>[]</index></name></type> <name>comparators</name></decl>;</decl_stmt>

        <constructor><specifier>public</specifier> <name>CompoundScoreDocComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                          <parameter><decl><type><name><name>ScoreDocComparator</name><index>[]</index></name></type> <name>comparators</name></decl></parameter>)</parameter_list>
                <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>comparators</name></name> <operator>=</operator> <name>comparators</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>ScoreDocComparator</name></type> <name>comparator</name> <range>: <expr><name>comparators</name></expr></range></decl></init>)</control> <block>{<block_content>
                <decl_stmt><decl><type><name>Comparable</name></type> <name>c</name> <init>= <expr><call><name><name>comparator</name><operator>.</operator><name>sortValue</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <return>return <expr><name>c</name></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SimilarityQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SimilarityQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e5b5aed4c</name><operator>..</operator><name>d6b6374e1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SimilarityQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SimilarityQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * &lt;code&gt;SimilarityQuery&lt;/code&gt; implements a query that returns similar nodes
  * for a given node UUID.
  */</comment>
<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> class <name>SimilarityQuery</name> <super_list><extends>extends <super><name>Query</name></super></extends></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SimpleExcerptProvider.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SimpleExcerptProvider.java
index 998105afa..06ff2e292 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SimpleExcerptProvider.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SimpleExcerptProvider.java
@@ -60,9 +60,9 @@ public class SimpleExcerptProvider implements ExcerptProvider {
         try {
             NodeState nodeState = (NodeState) ism.getItemState(id);
             String separator = "";
            Iterator it = nodeState.getPropertyNames().iterator();
            Iterator&lt;Name&gt; it = nodeState.getPropertyNames().iterator();
             while (it.hasNext() &amp;&amp; text.length() &lt; maxFragmentSize) {
                PropertyId propId = new PropertyId(id, (Name) it.next());
                PropertyId propId = new PropertyId(id, it.next());
                 PropertyState propState = (PropertyState) ism.getItemState(propId);
                 if (propState.getType() == PropertyType.STRING) {
                     text.append(separator);
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SingletonTokenStream.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SingletonTokenStream.java
index aa087c787..86d836323 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SingletonTokenStream.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SingletonTokenStream.java
@@ -16,12 +16,13 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Token</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>TokenStream</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>PayloadAttribute</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>TermAttribute</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Payload</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * &lt;code&gt;SingletonTokenStream&lt;/code&gt; implements a token stream that wraps a
  * single value with a given property type. The property type is stored as a
@@ -40,40 +41,50 @@ public final class SingletonTokenStream extends TokenStream {
     private final Payload payload;
 
     /**
     * Creates a new SingleTokenStream with the given value and a property
     * &lt;code&gt;type&lt;/code&gt;.
     * The term attribute of the current token
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>TermAttribute</name></type> <name>termAttribute</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The payload attribute of the current token
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>PayloadAttribute</name></type> <name>payloadAttribute</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Creates a new SingleTokenStream with the given value and payload.
      *
      * @param value the string value that will be returned with the token.
     * @param type the JCR property type.
     * @param payload the payload that will be attached to this token
      */</comment>
    <constructor><specifier>public</specifier> <name>SingletonTokenStream</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>SingletonTokenStream</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>Payload</name></type> <name>payload</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>value</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>payload</name></name> <operator>=</operator> <operator>new</operator> <call><name>Payload</name><argument_list>(<argument><expr><operator>new</operator> <call><name>PropertyMetaData</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toByteArray</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>payload</name></name> <operator>=</operator> <name>payload</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>termAttribute</name> <operator>=</operator> <operator>(</operator><name>TermAttribute</name><operator>)</operator> <call><name>addAttribute</name><argument_list>(<argument><expr><name><name>TermAttribute</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>payloadAttribute</name> <operator>=</operator> <operator>(</operator><name>PayloadAttribute</name><operator>)</operator> <call><name>addAttribute</name><argument_list>(<argument><expr><name><name>PayloadAttribute</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
     <comment type="block" format="javadoc">/**
     * Creates a new SingleTokenStream with the given token.
     * Creates a new SingleTokenStream with the given value and a property
     * &lt;code&gt;type&lt;/code&gt;.
      *
     * @param t the token.
     * @param value the string value that will be returned with the token.
     * @param type the JCR property type.
      */</comment>
    <constructor><specifier>public</specifier> <name>SingletonTokenStream</name><parameter_list>(<parameter><decl><type><name>Token</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>value</name></name> <operator>=</operator> <call><name><name>t</name><operator>.</operator><name>term</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>payload</name></name> <operator>=</operator> <call><name><name>t</name><operator>.</operator><name>getPayload</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <constructor><specifier>public</specifier> <name>SingletonTokenStream</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Payload</name><argument_list>(<argument><expr><operator>new</operator> <call><name>PropertyMetaData</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toByteArray</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>Token</name></type> <name>next</name><parameter_list>(<parameter><decl><type><name>Token</name></type> <name>reusableToken</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>incrementToken</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>value</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="null">null</literal></expr>;</return>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>reusableToken</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>reusableToken</name><operator>.</operator><name>setTermBuffer</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>reusableToken</name><operator>.</operator><name>setPayload</name></name><argument_list>(<argument><expr><name>payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>reusableToken</name><operator>.</operator><name>setStartOffset</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>reusableToken</name><operator>.</operator><name>setEndOffset</name></name><argument_list>(<argument><expr><call><name><name>value</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>clearAttributes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>termAttribute</name><operator>.</operator><name>setTermBuffer</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>payloadAttribute</name><operator>.</operator><name>setPayload</name></name><argument_list>(<argument><expr><name>payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt><expr><name>value</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
        <return>return <expr><name>reusableToken</name></expr>;</return>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
     </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SortedLuceneQueryHits</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SortedLuceneQueryHits</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>eb1248336</name><operator>..</operator><literal type="number">2ac05887c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SortedLuceneQueryHits</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>SortedLuceneQueryHits</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>NodeId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopFieldDocCollector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopFieldCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Wraps a lucene query result and adds a close method that allows to release
  * resources after a query has been executed and the results have been read
@@ -155,15 +156,14 @@ public final class SortedLuceneQueryHits extends AbstractQueryHits {
     //-------------------------------&lt; internal &gt;-------------------------------
 
     private void getHits() throws IOException {
        TopFieldDocCollector collector = new TopFieldDocCollector(reader, sort, numHits);
        TopFieldCollector collector = TopFieldCollector.create(sort, numHits, false, true, false, false);
         searcher.search(query, collector);
        this.size = collector.getTotalHits();
        size = collector.getTotalHits();
         ScoreDoc[] docs = collector.topDocs().scoreDocs;
        for (int i = scoreDocs.size(); i &lt; docs.length; i++) {
            scoreDocs.add(docs[i]);
        }
        scoreDocs.addAll(Arrays.asList(docs).subList(scoreDocs.size(), docs.length));
         log.debug("getHits() {}/{}", scoreDocs.size(), numHits);
         // double hits for next round
         numHits *= 2;
     }

 }
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SortedMultiColumnQueryHits.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SortedMultiColumnQueryHits.java
index 1db931773..e166b5a9d 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SortedMultiColumnQueryHits.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/SortedMultiColumnQueryHits.java
@@ -16,19 +16,19 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDocComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * &lt;code&gt;SortedMultiColumnQueryHits&lt;/code&gt; implements sorting of query hits
@@ -61,7 +61,7 @@ public class SortedMultiColumnQueryHits extends FilterMultiColumnQueryHits {
         }
         try {
             Collections.sort(sortedHits, new ScoreNodeComparator(
                    reader, orderings, hits.getSelectorNames()));
                    reader, orderings, hits.getSelectorNames(), sortedHits.size()));
         } catch (RuntimeException e) {
             // might be thrown by ScoreNodeComparator#compare
             throw Util.createIOException(e);
@@ -142,7 +142,8 @@ public class SortedMultiColumnQueryHits extends FilterMultiColumnQueryHits {
          */</comment>
         <expr_stmt><expr><specifier>private</specifier> <call><name>ScoreNodeComparator</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>,
                                     <argument><expr><name><name>Ordering</name><index>[]</index></name> <name>orderings</name></expr></argument>,
                                    <argument><expr><name><name>Name</name><index>[]</index></name> <name>selectorNames</name></expr></argument>)</argument_list></call>
                                    <name><name>Name</name><index>[]</index></name> <name>selectorNames</name></expr><operator>,</operator>
                                    <expr><name>int</name> <name>numHits</name></expr></expr_stmt>)</block_content>
                 <throws>throws <argument><expr><name>IOException</name> <block>{
             <expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <name>reader</name></expr></block></expr></argument></throws></block><empty_stmt>;</empty_stmt></constructor>
             <expr_stmt><expr><name><name>this</name><operator>.</operator><name>orderings</name></name> <operator>=</operator> <name>orderings</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SortedMultiColumnQueryHits</name> extends <name>FilterMultiColumnQueryHits</name> <block>{
             <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>orderings</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                 <expr_stmt><expr><name><name>idx</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>names</name><operator>.</operator><name>indexOf</name></name><argument_list>(<argument><expr><name><name>orderings</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getSelectorName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <decl_stmt><decl><type><name>SortField</name></type> <name>sf</name> <init>= <expr><name><name>orderings</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getSortField</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>sf</name><operator>.</operator><name>getFactory</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>sf</name><operator>.</operator><name>getFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newComparator</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><call><name><name>sf</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>sf</name><operator>.</operator><name>getComparatorSource</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>FieldComparator</name></type> <name>c</name> <init>= <expr><call><name><name>sf</name><operator>.</operator><name>getComparatorSource</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newComparator</name><argument_list>(<argument><expr><call><name><name>sf</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>numHits</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <assert>assert <expr><name>c</name> <operator>instanceof</operator> <name>FieldComparatorBase</name></expr>;</assert>
                    <expr_stmt><expr><name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>ScoreDocComparator</name><argument_list>(<argument><expr><operator>(</operator><name>FieldComparatorBase</name><operator>)</operator> <name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>setNextReader</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></if></if_stmt>
                 <expr_stmt><expr><name><name>isReverse</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>sf</name><operator>.</operator><name>getReverse</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">188</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SortedMultiColumnQueryHits</name> extends <name>FilterMultiColumnQueryHits</name> <block>{
                     }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                         <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                     </block_content>}</block></catch>
                    <expr_stmt><expr><name>c</name> <operator>=</operator> <name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>compare</name><argument_list>(<argument><expr><name>doc1</name></expr></argument>, <argument><expr><name>doc2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name>c</name> <operator>=</operator> <name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>compareDocs</name><argument_list>(<argument><expr><name><name>doc1</name><operator>.</operator><name>doc</name></name></expr></argument>, <argument><expr><name><name>doc2</name><operator>.</operator><name>doc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></for></block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
                     <comment type="line">// compare score</comment>
                     <expr_stmt><expr><name>c</name> <operator>=</operator> <operator>new</operator> <call><name>Float</name><argument_list>(<argument><expr><call><name><name>n1</name><operator>.</operator><name>getScore</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><call><name><name>n2</name><operator>.</operator><name>getScore</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>SortedMultiColumnQueryHits</name> extends <name>FilterMultiColumnQueryHits</name> <block>{
             }</block></expr></expr_stmt>
             <return>return <expr><literal type="number">0</literal></expr>;</return>
         </block_content>}</block></else></if_stmt>

     </block_content>}</block></constructor>

    <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>ScoreDocComparator</name> <super_list><extends>extends <super><name>FieldComparatorDecorator</name></super></extends></super_list> <block>{

        <constructor><specifier>public</specifier> <name>ScoreDocComparator</name><parameter_list>(<parameter><decl><type><name>FieldComparatorBase</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></constructor>

        <function><type><specifier>public</specifier> <name>int</name></type> <name>compareDocs</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc2</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><call><name>compare</name><argument_list>(<argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>doc1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>doc2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>

    }</block></class>

 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TermDocsCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TermDocsCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7f223a166</literal><operator>..</operator><literal type="number">153e8e95c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TermDocsCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TermDocsCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TermDocsCache</name> <block>{
      <expr><operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr> <if_stmt><if>if an error occurs while reading from the index.
      */
     public TermDocs termDocs<condition>(<expr><name>final</name> <name>Term</name> <name>t</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
        <if_stmt><if>if <condition>(<expr><call><name><name>t</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name>field</name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>t</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>t</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name>field</name></expr>)</condition> <block>{<block_content>
             <return>return <expr><call><name><name>reader</name><operator>.</operator><name>termDocs</name></name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">270</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">270</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TermDocsCache</name> <block>{
         }</block></expr></expr_stmt>
     </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
 
    <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>CacheEntry</name> implements <name>Comparable</name> <block>{
    <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>CacheEntry</name> implements <name><name>Comparable</name><argument_list type="generic">&lt;<argument><name>CacheEntry</name></argument>&gt;</argument_list></name> <block>{
 
         <expr><specifier>private</specifier> <specifier>volatile</specifier> <name>int</name> <name>numAccessed</name> <operator>=</operator> <literal type="number">1</literal></expr>;
 
         <specifier>private</specifier> <specifier>volatile</specifier> <name>BitSet</name> <name>bits</name></block></expr>;
 
        <specifier>public</specifier> <name>int</name> <call><name>compareTo</name><argument_list>(<argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></call> <block>{
            <expr><name>CacheEntry</name> <name>other</name> <operator>=</operator> <operator>(</operator><name>CacheEntry</name><operator>)</operator> <name>o</name></expr>;
        <specifier>public</specifier> <name>int</name> <call><name>compareTo</name><argument_list>(<argument><expr><name>CacheEntry</name> <name>other</name></expr></argument>)</argument_list></call> <block>{
             <return>return <expr><operator>(</operator><name>numAccessed</name> <operator>&lt;</operator> <name><name>other</name><operator>.</operator><name>numAccessed</name></name> <operator>?</operator> <operator>-</operator><literal type="number">1</literal> <operator>:</operator> <operator>(</operator><name>numAccessed</name> <operator>==</operator> <name><name>other</name><operator>.</operator><name>numAccessed</name></name> <operator>?</operator> <literal type="number">0</literal> <operator>:</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator></expr>;</return>
         }</block>
     }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>UpperCaseSortComparator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>UpperCaseSortComparator</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c7a09a883</name><operator>..</operator><literal type="number">1317a4f5b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>UpperCaseSortComparator</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>UpperCaseSortComparator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal><operator>,</operator><literal type="number">71</literal> <operator>+</operator><literal type="number">16</literal><operator>,</operator><literal type="number">43</literal> @@
  <operator>*</operator><operator>/</operator></block></block></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparatorSource</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDocComparator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortComparatorSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * &lt;code&gt;UpperCaseSortComparator&lt;/code&gt; implements a sort comparator that
 * &lt;code&gt;UpperCaseSortComparator&lt;/code&gt; implements a &lt;code&gt;FieldComparator&lt;/code&gt; which
  * compares the upper-cased string values of a base sort comparator.
  */</comment>
<class><specifier>public</specifier> class <name>UpperCaseSortComparator</name> <super_list><implements>implements <super><name>SortComparatorSource</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> <init>= <expr><literal type="number">2562371983498948119L</literal></expr></init></decl>;</decl_stmt>
<class><specifier>public</specifier> class <name>UpperCaseSortComparator</name> <super_list><extends>extends <super><name>FieldComparatorSource</name></super></extends></super_list> <block>{
     
     <comment type="block" format="javadoc">/**
      * The base sort comparator.
      */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SortComparatorSource</name></type> <name>base</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>FieldComparatorSource</name></type> <name>base</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * Creates a new upper case sort comparator.
      *
      * @param base the base sort comparator source.
      */</comment>
    <constructor><specifier>public</specifier> <name>UpperCaseSortComparator</name><parameter_list>(<parameter><decl><type><name>SortComparatorSource</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>UpperCaseSortComparator</name><parameter_list>(<parameter><decl><type><name>FieldComparatorSource</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>ScoreDocComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                            <parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>Comparator</name><argument_list>(<argument><expr><call><name><name>base</name><operator>.</operator><name>newComparator</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>Comparator</name> <super_list><implements>implements <super><name>ScoreDocComparator</name></super></implements></super_list> <block>{

        <decl_stmt><decl><type><specifier>private</specifier> <name>ScoreDocComparator</name></type> <name>base</name></decl>;</decl_stmt>

        <constructor><specifier>private</specifier> <name>Comparator</name><parameter_list>(<parameter><decl><type><name>ScoreDocComparator</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>FieldComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sortPos</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>reversed</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>FieldComparator</name></type> <name>comparator</name> <init>= <expr><call><name><name>base</name><operator>.</operator><name>newComparator</name></name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>, <argument><expr><name>numHits</name></expr></argument>, <argument><expr><name>sortPos</name></expr></argument>, <argument><expr><name>reversed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <assert>assert <expr><name>comparator</name> <operator>instanceof</operator> <name>FieldComparatorBase</name></expr>;</assert>
 
        <comment type="block" format="javadoc">/**
         * @see Util#compare(Comparable, Comparable)
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><name>ScoreDoc</name></type> <name>j</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><call><name><name>Util</name><operator>.</operator><name>compare</name></name><argument_list>(<argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>sortValue</name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>

        <function><type><specifier>public</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>ScoreDoc</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>Comparable</name></type> <name>c</name> <init>= <expr><call><name><name>base</name><operator>.</operator><name>sortValue</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><call><name><name>c</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <return>return <expr><literal type="null">null</literal></expr>;</return>
        <return>return <expr><operator>new</operator> <class><super><name>FieldComparatorDecorator</name></super><argument_list>(<argument><expr><operator>(</operator><name>FieldComparatorBase</name><operator>)</operator> <name>comparator</name></expr></argument>)</argument_list> <block>{
            <function><annotation>@<name>Override</name></annotation>
            <type><specifier>protected</specifier> <name>Comparable</name></type> <name>sortValue</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <decl_stmt><decl><type><name>Comparable</name></type> <name>c</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>sortValue</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return>return <expr><ternary><condition><expr><name>c</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>c</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</return>
             </block_content>}</block></function>
        }</block></class>

        <specifier>public</specifier> <name>int</name> <call><name>sortType</name><argument_list>()</argument_list></call> <block>{
            <return>return <expr><name><name>SortField</name><operator>.</operator><name>CUSTOM</name></name></expr>;</return>
        }</block></expr></return>
        </block_content>}</block></else></if_stmt><empty_stmt>;</empty_stmt>
     </block_content>}</block></function>
</block_content>}</block></function>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name></expr></expr_stmt>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>VolatileIndex</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>VolatileIndex</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">53900d62f</literal><operator>..</operator><literal type="number">9974c5130</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>VolatileIndex</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>VolatileIndex</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>VolatileIndex</name> extends <name>AbstractIndex</name> <block>{
     <comment type="block" format="javadoc">/**
      * Map of pending documents to add to the index
      */</comment>
    <expr><specifier>private</specifier> <name>final</name> <name>Map</name> <name>pending</name> <operator>=</operator> <operator>new</operator> <call><name>LinkedMap</name><argument_list>()</argument_list></call></expr>;
    @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
    <specifier>private</specifier> <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Document</name></argument>&gt;</argument_list></name> <name>pending</name> <operator>=</operator> <operator>new</operator> <call><name>LinkedMap</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <comment type="block" format="javadoc">/**
      * Number of documents that are buffered before they are added to the index.
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WeightedHighlighter.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WeightedHighlighter.java
index f7d2f406c..c70f85bca 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WeightedHighlighter.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WeightedHighlighter.java
@@ -140,7 +140,7 @@ public class WeightedHighlighter extends DefaultHighlighter {
                         break;
                     }
                 }
                bestFragments.insert(fi);
                bestFragments.insertWithOverflow(fi);
             }
         }
 
@@ -189,7 +189,7 @@ public class WeightedHighlighter extends DefaultHighlighter {
             int limit = Math.max(0, fi.getStartOffset() / 2 + fi.getEndOffset() / 2 - surround);
             int len = startFragment(sb, text, fi.getStartOffset(), limit);
             TermVectorOffsetInfo lastOffsetInfo = null;
            Iterator fIt = fi.iterator();
            Iterator&lt;TermVectorOffsetInfo&gt; fIt = fi.iterator();
             while (fIt.hasNext()) {
                 TermVectorOffsetInfo oi = (TermVectorOffsetInfo) fIt.next();
                 if (lastOffsetInfo != null) {
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WildcardNameQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WildcardNameQuery.java
index 8bc8767f6..6b5a73a74 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WildcardNameQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WildcardNameQuery.java
@@ -16,18 +16,9 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>NamespaceException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>namespace</name><operator>.</operator><name>NamespaceResolver</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FilteredTermEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MultiTermQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>WildcardQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>WildcardQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f2145e824</name><operator>..</operator><name>c9a226040</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>WildcardQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>WildcardQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FilteredTermEnum</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><operator>&lt;</operator><name>code</name><operator>&gt;</operator><name><name>_</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <operator>:</operator> <name>matches</name> <name>exactly</name> <name>one</name> <name><name>character</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>li</name></argument>&gt;</argument_list></name>
  <operator>*</operator> <operator>&lt;</operator><operator>/</operator><name>ul</name><operator>&gt;</operator>
  <operator>*</operator><operator>/</operator>
@<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></call>
 <specifier>public</specifier> <name>class</name> <name>WildcardQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -140,11 +141,22 @@ public class WildcardQuery extends Query implements Transformable {
      * @return the rewritten query.
      * @throws IOException if an error occurs while reading from the index.
      */</comment>
    @<expr><name>Override</name>
     <specifier>public</specifier> <name>Query</name> <call><name>rewrite</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><name>Query</name> <name>stdWildcardQuery</name> <operator>=</operator> <operator>new</operator> <class><super><name>MultiTermQuery</name></super><argument_list>(<operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name>field</name></expr></argument>, <argument><expr><name>pattern</name></expr></argument>)</argument_list></call></argument_list></class></expr></block></expr></argument></throws></expr>) <block>{
        <expr><name>Query</name> <name>stdWildcardQuery</name> <operator>=</operator> <operator>new</operator> <class><super><name>MultiTermQuery</name></super><argument_list>()</argument_list> <block>{
             <function><type><specifier>protected</specifier> <name>FilteredTermEnum</name></type> <name>getEnum</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                 <return>return <expr><operator>new</operator> <call><name>WildcardTermEnum</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>tvf</name></expr></argument>, <argument><expr><name>pattern</name></expr></argument>, <argument><expr><name>transform</name></expr></argument>)</argument_list></call></expr>;</return>
             <expr_stmt/></block_content></block></function></block></class></expr>}</block></block>

            <comment type="block" format="javadoc">/** Prints a user-readable version of this query. */</comment>
            @<name>Override</name>
            <specifier>public</specifier> <name>String</name> <call><name>toString</name><argument_list>(<argument><expr><name>String</name> <name>field</name></expr></argument>)</argument_list></call> <block>{
                <expr><name>StringBuffer</name> <name>buffer</name> <operator>=</operator> <operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr>;
                <call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>ToStringUtils</name><operator>.</operator><name>boost</name></name><argument_list>(<argument><expr><call><name>getBoost</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><call><name><name>buffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block></constructor>
         }</block></class><empty_stmt>;</empty_stmt>
         <try>try <block>{<block_content>
             <expr_stmt><expr><name>multiTermQuery</name> <operator>=</operator> <call><name><name>stdWildcardQuery</name><operator>.</operator><name>rewrite</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>WildcardQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>searcher</name> <name>the</name> <name>searcher</name> <name>to</name> <name>use</name></expr> <for>for the &lt;code&gt;Weight&lt;/code&gt;.
      * @return the &lt;code&gt;Weigth&lt;/code&gt; for this query.
      */
    protected Weight createWeight<control>(<init><expr><name>Searcher</name> <name>searcher</name></expr></init>)</control> <block>{<block_content>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Weight</name></type> <name>createWeight</name><parameter_list>(<parameter><decl><type><name>Searcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>WildcardQueryWeight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>WildcardQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>field</name> <name>the</name> <name>field</name> <name>name</name></expr> <for>for which to create a string representation.
      * @return a string representation of this query.
      */
    @Override
     public String toString<control>(<init><expr><name>String</name> <name>field</name></expr></init>)</control> <block>{<block_content>
         <return>return <expr><name>field</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>tvf</name><operator>.</operator><name>createValue</name></name><argument_list>(<argument><expr><name>pattern</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></for>
 
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    @<name>Override</name>
     <specifier>public</specifier> <name>void</name> <call><name>extractTerms</name><argument_list>(<argument><expr><name>Set</name> <name>terms</name></expr></argument>)</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>multiTermQuery</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>multiTermQuery</name><operator>.</operator><name>extractTerms</name></name><argument_list>(<argument><expr><name>terms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>WildcardQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
          <expr><operator>*</operator> @<name>param</name> <name>reader</name> <name>index</name> <name>reader</name>
          <operator>*</operator> @</expr><return>return <expr><name>a</name> <block>{@<expr><name>link</name> <name>WildcardQueryScorer</name></expr>}</block> <name>instance</name>
          <operator>*</operator><operator>/</operator>
        <specifier>protected</specifier> <name>Scorer</name> <call><name>createScorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <block>{
        <expr><specifier>protected</specifier> <name>Scorer</name> <call><name>createScorer</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
                <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <block>{
             <return>return <expr><operator>new</operator> <call><name>WildcardQueryScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
         }</block>
 
@@ <operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">33</literal> <operator>+</operator><literal type="number">231</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>WildcardQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
          <expr><operator>*</operator>
          <operator>*</operator> @</expr><return>return <expr><name><name>this</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name><name>WildcardQuery</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name><operator>.</operator></name>
          *<operator>/</operator>
        @<name>Override</name>
         <specifier>public</specifier> <name>Query</name> <call><name>getQuery</name><argument_list>()</argument_list></call> <block>{
             <return>return <expr><name><name>WildcardQuery</name><operator>.</operator><name>this</name></name></expr>;</return>
         }</block></expr></return>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        @<name>Override</name>
         <specifier>public</specifier> <name>float</name> <call><name>getValue</name><argument_list>()</argument_list></call> <block>{
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         }</block>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        @<name>Override</name>
         <specifier>public</specifier> <name>float</name> <call><name>sumOfSquaredWeights</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></return>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         }</block></expr></expr_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>normalize</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>norm</name></decl></parameter>)</parameter_list> <block>{<block_content>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><operator>new</operator> <call><name>Explanation</name><argument_list>()</argument_list></call></expr>;</return>
         </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">315</literal></expr><operator>,</operator><expr><literal type="number">44</literal> <operator>+</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <specifier>public</specifier> <name>class</name> <name>WildcardQuery</name> extends <name>Query</name> implements <name>Transformable</name> <block>{
             <expr><name>hits</name> <operator>=</operator> <name>result</name></expr>;
         }</block></expr></expr_stmt>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateHits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>nextDoc</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>int</name></type> <name>doc</name><parameter_list>()</parameter_list> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><literal type="number">1.0f</literal></expr>;</return>
         </block_content>}</block></function>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>skipTo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>nextDoc</name></expr>;</return>
            </block_content>}</block></if></if_stmt>

             <expr_stmt><expr><call><name>calculateHits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <call><name><name>hits</name><operator>.</operator><name>nextSetBit</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>nextDoc</name> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></function>

        <comment type="block" format="javadoc">/**
         * Returns an empty Explanation object.
         * @return an empty Explanation object.
         */</comment>
        <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>Explanation</name><argument_list>()</argument_list></call></expr>;</return>
            <if_stmt><if>if <condition>(<expr><name>nextDoc</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>nextDoc</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <return>return <expr><name>nextDoc</name></expr>;</return>
         </block_content>}</block></function>
 
         <comment type="block" format="javadoc">/**
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/directory/FSDirectoryManager.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/directory/FSDirectoryManager.java
index cebca00bf..15c7ebac5 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/directory/FSDirectoryManager.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/directory/FSDirectoryManager.java
@@ -16,10 +16,6 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>directory</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileFilter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>IOCounters</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>SearchIndex</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Lock</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>LockFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NativeFSLockFactory</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileFilter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * &lt;code&gt;FSDirectoryManager&lt;/code&gt; implements a directory manager for
  * {@link FSDirectory} instances.
@@ -141,11 +141,17 @@ public class FSDirectoryManager implements DirectoryManager {
         private final FSDirectory directory;
 
         public FSDir(File dir) throws IOException {
            directory = FSDirectory.getDirectory(dir,
            if (!dir.mkdirs()) {
                if (!dir.isDirectory()) {
                    throw new IOException("Unable to create directory: '" + dir + "'");
                }
            }
            directory = FSDirectory.open(dir,
                     new NativeFSLockFactory(dir));
         }
 
        public String[] list() throws IOException {
        @Override
        public String[] listAll() throws IOException {
             File[] files = directory.getFile().listFiles(FILTER);
             if (files == null) {
                 return null;
@@ -157,71 +163,81 @@ public class FSDirectoryManager implements DirectoryManager {
             return names;
         }
 
        @Override
         public boolean fileExists(String name) throws IOException {
             return directory.fileExists(name);
         }
 
        @Override
         public long fileModified(String name) throws IOException {
             return directory.fileModified(name);
         }
 
        @Override
         public void touchFile(String name) throws IOException {
             directory.touchFile(name);
         }
 
        @Override
         public void deleteFile(String name) throws IOException {
             directory.deleteFile(name);
         }
 
        public void renameFile(String from, String to) throws IOException {
            directory.renameFile(from, to);
        }

        @Override
         public long fileLength(String name) throws IOException {
             return directory.fileLength(name);
         }
 
        @Override
         public IndexOutput createOutput(String name) throws IOException {
             return directory.createOutput(name);
         }
 
        @Override
         public IndexInput openInput(String name) throws IOException {
             IndexInput in = directory.openInput(name);
             return new IndexInputLogWrapper(in);
         }
 
        @Override
         public void close() throws IOException {
             directory.close();
         }
 
        @Override
         public IndexInput openInput(String name, int bufferSize)
                 throws IOException {
             IndexInput in = directory.openInput(name, bufferSize);
             return new IndexInputLogWrapper(in);
         }
 
        @Override
         public Lock makeLock(String name) {
             return directory.makeLock(name);
         }
 
        @Override
         public void clearLock(String name) throws IOException {
             directory.clearLock(name);
         }
 
        @Override
         public void setLockFactory(LockFactory lockFactory) {
             directory.setLockFactory(lockFactory);
         }
 
        @Override
         public LockFactory getLockFactory() {
             return directory.getLockFactory();
         }
 
        @Override
         public String getLockID() {
             return directory.getLockID();
         }
 
         public String toString() {
            return this.getClass().getName() + "@" + directory;
            return getClass().getName() + '@' + directory;
         }
     }
 
@@ -237,27 +253,33 @@ public class FSDirectoryManager implements DirectoryManager {
             this.in = in;
         }
 
        @Override
         public byte readByte() throws IOException {
             return in.readByte();
         }
 
        @Override
         public void readBytes(byte[] b, int offset, int len) throws IOException {
             IOCounters.incrRead();
             in.readBytes(b, offset, len);
         }
 
        @Override
         public void close() throws IOException {
             in.close();
         }
 
        @Override
         public long getFilePointer() {
             return in.getFilePointer();
         }
 
        @Override
         public void seek(long pos) throws IOException {
             in.seek(pos);
         }
 
        @Override
         public long length() {
             return in.length();
         }
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/hits/AbstractHitCollector.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/hits/AbstractHitCollector.java
new file mode 100644
index 000000000..8e2ab5421
-- /dev/null
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/hits/AbstractHitCollector.java
@@ -0,0 +1,60 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Collector implementation which simply provides the collection
 * of re-based doc base with scorer.
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractHitCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><specifier>protected</specifier> <name>int</name></type> <name>base</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <name>Scorer</name></type> <name>scorer</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name>base</name> <operator>=</operator> <name>docBase</name></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <name>scorer</name></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>collect</name><argument_list>(<argument><expr><name>base</name> <operator>+</operator> <name>doc</name></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Called once for every document matching a query, with the re-based document
     * number and its computed score.
     * @param doc the re-based document number.
     * @param doc the document's score.
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>, <argument><expr><name>float</name> <name>score</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>hits</name><operator>/</operator><name><name>ScorerHits</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>hits</name><operator>/</operator><name><name>ScorerHits</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9e4f0ee1e</literal><operator>..</operator><literal type="number">11e7c0719</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>hits</name><operator>/</operator><name><name>ScorerHits</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>hits</name><operator>/</operator><name><name>ScorerHits</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -42,8 +43,9 @@ public class ScorerHits implements Hits {
      * {@inheritDoc}
      */</comment>
     <function><type><specifier>public</specifier> <name>int</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>scorer</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><call><name><name>scorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr>;</return>
        <decl_stmt><decl><type><name>int</name></type> <name>docId</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>docId</name> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>docId</name></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
             <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
         </block_content>}</block></else></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScorerHits</name> implements <name>Hits</name> <block>{
      <expr><operator>*</operator> <block>{@<expr><name>inheritDoc</name></expr>}</block>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>int</name> <call><name>skipTo</name><argument_list>(<argument><expr><name>int</name> <name>target</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
        <if_stmt><if>if <condition>(<expr><call><name><name>scorer</name><operator>.</operator><name>skipTo</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><call><name><name>scorer</name><operator>.</operator><name>doc</name></name><argument_list>()</argument_list></call></expr>;</return>
        <decl_stmt><decl><type><name>int</name></type> <name>docId</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>docId</name> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>docId</name></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
             <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
         </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>SameNodeJoinMerger</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>SameNodeJoinMerger</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7edd5670c</literal><operator>..</operator><name>a486b4bcd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>SameNodeJoinMerger</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>SameNodeJoinMerger</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>PropertyValue</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>QueryObjectModelFactory</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>query</name><operator>.</operator><name>qom</name><operator>.</operator><name>SameNodeJoinCondition</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>conversion</name><operator>.</operator><name>PathResolver</name></name>;</import>

 <class>class <name>SameNodeJoinMerger</name> <super_list><extends>extends <super><name>JoinMerger</name></super></extends></super_list> <block>{
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>selector1</name></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ScoreNodeMap</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ScoreNodeMap</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">55dfbd939</literal><operator>..</operator><name>e9f8168ed</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ScoreNodeMap</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ScoreNodeMap</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>ScoreNodeMap</name> <block>{
             <expr><name>existing</name> <operator>=</operator> <name>nodes</name></expr>;
             <call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>existing</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
         }</block></class> <if_stmt><if type="elseif">else if <condition>(<expr><name>existing</name> <operator>instanceof</operator> <name>List</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><operator>(</operator><operator>(</operator><name>List</name><operator>)</operator> <name>existing</name><operator>)</operator><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><name>nodes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
            <type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>ScoreNode</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>existingNodes</name> <init>= <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>ScoreNode</name><index>[]</index></name></argument>&gt;</argument_list></name><operator>)</operator> <name>existing</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>existingNodes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>nodes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
             <comment type="line">// ScoreNode[]</comment>
             <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>ScoreNode</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>tmp</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>ScoreNode</name><index>[]</index></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>ScoreNodeMap</name> <block>{
         <if_stmt><if>if <condition>(<expr><name>sn</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <return>return <expr><literal type="null">null</literal></expr>;</return>
         </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>sn</name> <operator>instanceof</operator> <name>List</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
             <type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>ScoreNode</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>list</name> <init>= <expr><operator>(</operator><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>ScoreNode</name><index>[]</index></name></argument>&gt;</argument_list></name><operator>)</operator> <name>sn</name></expr></init></decl>;</decl_stmt>
             <return>return <expr><call><name><name>list</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>ScoreNode</name><index>[<expr><call><name><name>list</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index><index>[]</index></name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChainedTermEnumTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChainedTermEnumTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">995ac20a1</literal><operator>..</operator><name>e1e2317e9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChainedTermEnumTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChainedTermEnumTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>standard</name><operator>.</operator><name>StandardAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RAMDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name></name>;</import>
 
<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * &lt;code&gt;ChainedTermEnumTest&lt;/code&gt; implements a test for JCR-2410.
@@ -61,7 +61,7 @@ public class ChainedTermEnumTest extends TestCase {
     protected TermEnum createTermEnum(String prefix, int numTerms)
             throws IOException {
         Directory dir = new RAMDirectory();
        IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(),
        IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24),
                 true, IndexWriter.MaxFieldLength.UNLIMITED);
         for (int i = 0; i &lt; numTerms; i++) {
             Document doc = new Document();
@@ -70,7 +70,7 @@ public class ChainedTermEnumTest extends TestCase {
             writer.addDocument(doc);
         }
         writer.close();
        IndexReader reader = IndexReader.open(dir);
        IndexReader reader = IndexReader.open(dir, false);
         TermEnum terms = reader.terms();
         if (terms.term() == null) {
             // position at first term
diff --git a/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/query/lucene/IndexMigrationTest.java b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/query/lucene/IndexMigrationTest.java
index 2e37c6cea..5172a9360 100644
-- a/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/query/lucene/IndexMigrationTest.java
++ b/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/query/lucene/IndexMigrationTest.java
@@ -16,10 +16,7 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import>

<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>directory</name><operator>.</operator><name>DirectoryManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>directory</name><operator>.</operator><name>RAMDirectoryManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>standard</name><operator>.</operator><name>StandardAnalyzer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RAMDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name></name>;</import>
 
<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import></block_content></block></else></if_stmt></block></expr></expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block></block></expr></expr_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></try></block></class></block_content></block></function></block_content></block></finally></try></block></expr></expr_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></if></if_stmt></block_content></block></for></block_content></block></while></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></try></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block></class></block_content></block></while></block_content></block></function></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></while></block_content></block></function></block_content></block></for></block></block></expr></expr_stmt></block></class></block_content></block></function></block_content></block></constructor></block></class></block></class></block></class></block></class></block></class></block></class></block></class></block_content></block></if></if_stmt></block_content></block></for></block_content></block></try></block></expr></return></block></expr></return></block></expr></expr_stmt></block_content></block></for></block_content></block></for></block_content></block></while></block_content></block></if></if_stmt></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></while></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function>
 
 <comment type="block" format="javadoc">/**
  * &lt;code&gt;IndexMigrationTest&lt;/code&gt; contains a test case for JCR-2393.
@@ -50,7 +50,7 @@ public class IndexMigrationTest extends TestCase {
         DirectoryManager dirMgr = new RAMDirectoryManager();
 
         PersistentIndex idx = new PersistentIndex("index",
                new StandardAnalyzer(), Similarity.getDefault(),
                new StandardAnalyzer(Version.LUCENE_24), Similarity.getDefault(),
                 new DocNumberCache(100),
                 new IndexingQueue(new IndexingQueueStore(new RAMDirectory())),
                 dirMgr, 0);
diff --git a/jackrabbit-parent/pom.xml b/jackrabbit-parent/pom.xml
index 70784a084..7bab0c5bd 100644
-- a/jackrabbit-parent/pom.xml
++ b/jackrabbit-parent/pom.xml
@@ -257,7 +257,7 @@
       &lt;dependency&gt;
         &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt;
         &lt;artifactId&gt;lucene-core&lt;/artifactId&gt;
        &lt;version&gt;2.4.1&lt;/version&gt;
        &lt;version&gt;3.0.3&lt;/version&gt;
       &lt;/dependency&gt;
       &lt;dependency&gt;
         &lt;groupId&gt;org.apache.tika&lt;/groupId&gt;
- 
2.19.1.windows.1

</comment></unit>
