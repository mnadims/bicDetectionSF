<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/c847a278a.java"><expr_stmt><expr><name>From</name> <name>c847a278af665f9c931ae4a756cee079799d5d2e</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Tobias</name> <name><name>Bocanegra</name> <argument_list type="generic">&lt;<argument><name>tripod</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">15</literal> <name>Jun</name> <literal type="number">2005</literal> <literal type="number">08</literal><operator>:</operator><literal type="number">47</literal><operator>:</operator><literal type="number">56</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <operator>-</operator> <index>[<expr><name>JCR</name><operator>-</operator><literal type="number">134</literal></expr>]</index> <name>extensibility</name> <name>patch</name></expr></expr_stmt> <for>for DavResourceImpl - moving
 JcrConstants.java to commons - fixing minor import issues - readding lost
 stuff - adding proper shutdown to RepositoryStartupServlet.java

git-svn-id: https:<comment type="line">//svn.apache.org/repos/asf/incubator/jackrabbit/trunk@190721 13f79535-47bb-0310-9956-ffa450edef68</comment>
--
 .../org/apache/jackrabbit/JcrConstants.java   <operator>|</operator>   0
 .../server/AbstractWebdavServlet.java         <operator>|</operator>  27 +++-
 .../server/io/AbstractImportCommand.java      <operator>|</operator>   4 +-
 .../server/io/XMLImportCommand.java           <operator>|</operator> 128 +++++++++++++++++-
 .../webdav/simple/DavResourceImpl.java        <operator>|</operator>   8 ++
 contrib/jcr-server/webapp/project.xml         <operator>|</operator>  18 +++
 .../j2ee/JCRWebdavServerServlet.java          <operator>|</operator>  61 +++++++--
 .../j2ee/RepositoryStartupServlet.java        <operator>|</operator>  13 +-
 .../jackrabbit/j2ee/SimpleWebdavServlet.java  <operator>|</operator> 117 +++++++++++++---
 .../webdav/lock/SimpleLockManager.java        <operator>|</operator>  71 +++++-----
 10 files changed<operator>,</operator> <expr_stmt><expr><literal type="number">378</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">69</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>rename</name> <name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><block>{<expr><name>webdav</name> <operator>=</operator><operator>&gt;</operator> <name>commons</name></expr>}</block><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><call><name><name>JcrConstants</name><operator>.</operator><name>java</name></name> <argument_list>(<argument><expr><literal type="number">100</literal><operator>%</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>webdav</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name><name>JcrConstants</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name><name>JcrConstants</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">100</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>webdav</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name><name>JcrConstants</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name><name>JcrConstants</name><operator>.</operator><name>java</name></name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AbstractWebdavServlet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AbstractWebdavServlet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5affa0951</literal><operator>..</operator><name>b09acc8a0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AbstractWebdavServlet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name><name>AbstractWebdavServlet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>abstract</specifier> <specifier>public</specifier> <name>class</name> <name>AbstractWebdavServlet</name> extends <name>HttpServlet</name> implements <name>DavCo</name>
      <operator>*</operator>
      <operator>*</operator> @</expr></expr_stmt></for><return>return <expr><name>the</name> <name>session</name> <name>provider</name>
      <operator>*</operator><operator>/</operator>
    <specifier>abstract</specifier> <specifier>public</specifier> <name>DavSessionProvider</name> <call><name>getSessionProvider</name><argument_list>()</argument_list></call></expr>;</return>
    <function_decl><type><specifier>abstract</specifier> <specifier>public</specifier> <name>DavSessionProvider</name></type> <name>getDavSessionProvider</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Returns the &lt;code&gt;DavSessionProvider&lt;/code&gt;.
     *
     * @param davSessionProvider
     */</comment>
    <function_decl><type><specifier>abstract</specifier> <specifier>public</specifier> <name>void</name></type> <name>setDavSessionProvider</name><parameter_list>(<parameter><decl><type><name>DavSessionProvider</name></type> <name>davSessionProvider</name></decl></parameter>)</parameter_list>;</function_decl>
 
     <comment type="block" format="javadoc">/**
      * Returns the &lt;code&gt;DavLocatorFactory&lt;/code&gt;.
@@ -116,6 +123,13 @@ abstract public class AbstractWebdavServlet extends HttpServlet implements DavCo
      */</comment>
     <function_decl><type><specifier>abstract</specifier> <specifier>public</specifier> <name>DavLocatorFactory</name></type> <name>getLocatorFactory</name><parameter_list>()</parameter_list>;</function_decl>
 
    <comment type="block" format="javadoc">/**
     * Sets the &lt;code&gt;DavLocatorFactory&lt;/code&gt;.
     *
     * @param locatorFactory
     */</comment>
    <function_decl><type><specifier>abstract</specifier> <specifier>public</specifier> <name>void</name></type> <name>setLocatorFactory</name><parameter_list>(<parameter><decl><type><name>DavLocatorFactory</name></type> <name>locatorFactory</name></decl></parameter>)</parameter_list>;</function_decl>

     <comment type="block" format="javadoc">/**
      * Returns the &lt;code&gt;DavResourceFactory&lt;/code&gt;.
      *
@@ -123,6 +137,13 @@ abstract public class AbstractWebdavServlet extends HttpServlet implements DavCo
      */</comment>
     <function_decl><type><specifier>abstract</specifier> <specifier>public</specifier> <name>DavResourceFactory</name></type> <name>getResourceFactory</name><parameter_list>()</parameter_list>;</function_decl>
 
    <comment type="block" format="javadoc">/**
     * Sets the &lt;code&gt;DavResourceFactory&lt;/code&gt;.
     *
     * @param resourceFactory
     */</comment>
    <function_decl><type><specifier>abstract</specifier> <specifier>public</specifier> <name>void</name></type> <name>setResourceFactory</name><parameter_list>(<parameter><decl><type><name>DavResourceFactory</name></type> <name>resourceFactory</name></decl></parameter>)</parameter_list>;</function_decl>

     <comment type="block" format="javadoc">/**
      * Returns the value of the 'WWW-Authenticate' header, that is returned in
      * case of 401 error.
@@ -146,7 +167,7 @@ abstract public class AbstractWebdavServlet extends HttpServlet implements DavCo
         WebdavResponse webdavResponse = new WebdavResponseImpl(response);
         try {
             // make sure there is a authenticated user
            if (!getSessionProvider().attachSession(webdavRequest)) {
            if (!getDavSessionProvider().attachSession(webdavRequest)) {
                 return;
             }
 
@@ -170,7 +191,7 @@ abstract public class AbstractWebdavServlet extends HttpServlet implements DavCo
                 webdavResponse.sendErrorResponse(e);
             }
         } finally {
            getSessionProvider().releaseSession(webdavRequest);
            getDavSessionProvider().releaseSession(webdavRequest);
         }
     }
 
diff --git a/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/AbstractImportCommand.java b/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/AbstractImportCommand.java
index 49a2380c7..1bde321f8 100644
-- a/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/AbstractImportCommand.java
++ b/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/AbstractImportCommand.java
@@ -75,9 +75,9 @@ public abstract class AbstractImportCommand extends AbstractCommand {
 
         if (importResource(context, fileNode, in)) {
             context.setInputStream(null);
            // set current node
            context.setNode(fileNode);
         }
        // set current node
        context.setNode(fileNode);
         return false;
     }
 
diff --git a/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/XMLImportCommand.java b/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/XMLImportCommand.java
index cf9ad8b27..2d91fc14d 100644
-- a/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/XMLImportCommand.java
++ b/contrib/jcr-server/server/src/java/org/apache/jackrabbit/server/io/XMLImportCommand.java
@@ -16,10 +16,15 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>server</name><operator>.</operator><name>io</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>log4j</name><operator>.</operator><name>Logger</name></name>;</import>

 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Node</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>ImportUUIDBehavior</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Calendar</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -31,7 +36,12 @@ import java.util.Calendar;
  * &lt;li&gt;jcr:lastModified (from current time)
  * &lt;/ul&gt;
  */</comment>
<class><specifier>public</specifier> class <name>XMLImportCommand</name> <super_list><extends>extends <super><name>AbstractImportCommand</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> class <name>XMLImportCommand</name> <super_list><extends>extends <super><name>AbstractCommand</name></super></extends></super_list> <block>{

    <comment type="block" format="javadoc">/**
     * the default logger
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>Logger</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>XMLImportCommand</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * the xml content type
@@ -43,6 +53,100 @@ public class XMLImportCommand extends AbstractImportCommand {
      */</comment>
     <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>contentNodeType</name> <init>= <expr><name>NT_UNSTRUCTURED</name></expr></init></decl>;</decl_stmt>
 
    <comment type="block" format="javadoc">/**
     * the nodetype for the node
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>nodeType</name> <init>= <expr><literal type="string">"nt:file"</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Executes this command by calling {@link #importResource} if
     * the given context is of the correct class.
     *
     * @param context the (import) context.
     * @return the return value of the delegated method or false;
     * @throws Exception in an error occurrs
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>AbstractContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>context</name> <operator>instanceof</operator> <name>ImportContext</name></expr>)</condition> <block>{<block_content>
            <return>return <expr><call><name>execute</name><argument_list>(<argument><expr><operator>(</operator><name>ImportContext</name><operator>)</operator> <name>context</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Executes this command. It checks if this command can handle the content
     * type and delegates it to {@link #importResource}. If the import is
     * successfull, the input stream of the importcontext is cleared.
     *
     * @param context the import context
     * @return false
     * @throws Exception if an error occurrs
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>ImportContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Node</name></type> <name>parentNode</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getNode</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>InputStream</name></type> <name>in</name> <init>= <expr><call><name><name>context</name><operator>.</operator><name>getInputStream</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>in</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// assume already consumed</comment>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>canHandle</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getContentType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <comment type="line">// ignore imports</comment>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// we need a tmp file, since the import could fail</comment>
        <decl_stmt><decl><type><name>File</name></type> <name>tmpFile</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"__xmlimport"</literal></expr></argument>, <argument><expr><literal type="string">"xml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>FileOutputStream</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>tmpFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">8192</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>first</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>isSysView</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>read</name></decl>;</decl_stmt>
        <while>while <condition>(<expr><operator>(</operator><name>read</name><operator>=</operator><call><name><name>in</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call><operator>)</operator><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>first</name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>first</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
                <comment type="line">// could be too less information. is a bit a lazy test</comment>
                <expr_stmt><expr><name>isSysView</name> <operator>=</operator> <operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>read</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>indexOf</name><argument_list>(<argument><expr><literal type="string">"&lt;sv:node"</literal></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
        <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>tmpFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setInputStream</name></name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><name>isSysView</name></expr>)</condition> <block>{<block_content>
            <comment type="line">// just import sys view</comment>
            <try>try <block>{<block_content>
                <expr_stmt><expr><call><name><name>parentNode</name><operator>.</operator><name>getSession</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>importXML</name><argument_list>(<argument><expr><call><name><name>parentNode</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>in</name></expr></argument>,
                        <argument><expr><name><name>ImportUUIDBehavior</name><operator>.</operator><name>IMPORT_UUID_COLLISION_REMOVE_EXISTING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setInputStream</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// no further processing</comment>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>RepositoryException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <comment type="line">// if error occurrs, reset input stream</comment>
                <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setInputStream</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>tmpFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Unable to import sysview. will store as normal file: "</literal> <operator>+</operator> <call><name><name>e</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>parentNode</name><operator>.</operator><name>refresh</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></catch> <finally>finally <block>{<block_content>
                <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></finally></try>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <comment type="line">// check 'file' node</comment>
            <decl_stmt><decl><type><name>Node</name></type> <name>fileNode</name> <init>= <expr><ternary><condition><expr><call><name><name>parentNode</name><operator>.</operator><name>hasNode</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getSystemId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>
                    ?</condition><then> <expr><call><name><name>parentNode</name><operator>.</operator><name>getNode</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getSystemId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>
                    </then><else>: <expr><call><name><name>parentNode</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>getSystemId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>nodeType</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name>importResource</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>fileNode</name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setInputStream</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// set current node</comment>
                <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setNode</name></name><argument_list>(<argument><expr><name>fileNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setInputStream</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>tmpFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>

     <comment type="block" format="javadoc">/**
      * Imports the resource by deseriaizing the xml.
      * @param ctx
@@ -54,6 +158,7 @@ public class XMLImportCommand extends AbstractImportCommand {
     public boolean importResource(ImportContext ctx, Node parentNode,
                                   InputStream in)
             throws Exception {

         Node content = parentNode.hasNode(JCR_CONTENT)
                 ? parentNode.getNode(JCR_CONTENT)
                 : parentNode.addNode(JCR_CONTENT, contentNodeType);
@@ -71,7 +176,17 @@ public class XMLImportCommand extends AbstractImportCommand {
         } catch (RepositoryException e) {
             // ignore
         }
        parentNode.getSession().importXML(content.getPath(), in, ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);
        try {
            parentNode.getSession().importXML(content.getPath(), in, ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);
        } catch (RepositoryException e) {
            // if this fails, we ignore import and pass to next command
            if (content.isNew()) {
                content.remove();
            }
            return false;
        } finally {
            in.close();
        }
         return true;
     }
 
@@ -101,4 +216,13 @@ public class XMLImportCommand extends AbstractImportCommand {
     public void setContentNodeType(String contentNodeType) {
         this.contentNodeType = contentNodeType;
     }

    /**
     * Sets the node type
     * @param nodeType
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setNodeType</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>nodeType</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>nodeType</name></name> <operator>=</operator> <name>nodeType</name></expr>;</expr_stmt>
    </block_content>}</block></function>

 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>simple</name><operator>/</operator><name><name>DavResourceImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>simple</name><operator>/</operator><name><name>DavResourceImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">985ee2057</literal><operator>..</operator><literal type="number">2c12477de</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>simple</name><operator>/</operator><name><name>DavResourceImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>simple</name><operator>/</operator><name><name>DavResourceImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">586</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">586</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>DavResourceImpl</name> implements <name>DavResource</name></expr><operator>,</operator> <expr><name>JcrConstants</name> <block>{
         <return>return <expr><name>factory</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <comment type="block" format="javadoc">/**
     * Returns the node that is wrapped by this resource.
     * @return
     */</comment>
    <function><type><specifier>protected</specifier> <name>Node</name></type> <name>getNode</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>node</name></expr>;</return>
    </block_content>}</block></function>
    
     <comment type="block" format="javadoc">/**
      * Returns true, if this webdav resource allows for locking without checking
      * its current lock status.
diff --git a/contrib/jcr-server/webapp/project.xml b/contrib/jcr-server/webapp/project.xml
index 246ce5c9d..b4b5966a1 100644
-- a/contrib/jcr-server/webapp/project.xml
++ b/contrib/jcr-server/webapp/project.xml
@@ -68,14 +68,23 @@
             &lt;groupId&gt;jsr170&lt;/groupId&gt;
             &lt;artifactId&gt;jcr&lt;/artifactId&gt;
             &lt;version&gt;${jackrabbit.build.version.jcr}&lt;/version&gt;
            &lt;properties&gt;
                &lt;war.bundle&gt;true&lt;/war.bundle&gt;
            &lt;/properties&gt;
         &lt;/dependency&gt;
         &lt;dependency&gt;
             &lt;id&gt;jackrabbit&lt;/id&gt;
             &lt;version&gt;${jackrabbit.build.version.jackrabbit}&lt;/version&gt;
            &lt;properties&gt;
                &lt;war.bundle&gt;true&lt;/war.bundle&gt;
            &lt;/properties&gt;
         &lt;/dependency&gt;
         &lt;dependency&gt;
             &lt;id&gt;jcr-rmi&lt;/id&gt;
             &lt;version&gt;${jackrabbit.build.version.jcr.rmi}&lt;/version&gt;
            &lt;properties&gt;
                &lt;war.bundle&gt;true&lt;/war.bundle&gt;
            &lt;/properties&gt;
         &lt;/dependency&gt;
         
         &lt;!-- non-jackrabbit dependencies --&gt;
@@ -100,14 +109,23 @@
         &lt;dependency&gt;
             &lt;id&gt;commons-chain&lt;/id&gt;
             &lt;version&gt;1.0&lt;/version&gt;
            &lt;properties&gt;
                &lt;war.bundle&gt;true&lt;/war.bundle&gt;
            &lt;/properties&gt;
         &lt;/dependency&gt;
         &lt;dependency&gt;
             &lt;id&gt;commons-digester&lt;/id&gt;
             &lt;version&gt;1.6&lt;/version&gt;
            &lt;properties&gt;
                &lt;war.bundle&gt;true&lt;/war.bundle&gt;
            &lt;/properties&gt;
         &lt;/dependency&gt;
         &lt;dependency&gt;
             &lt;id&gt;commons-beanutils&lt;/id&gt;
             &lt;version&gt;1.7.0&lt;/version&gt;
            &lt;properties&gt;
                &lt;war.bundle&gt;true&lt;/war.bundle&gt;
            &lt;/properties&gt;
         &lt;/dependency&gt;
 
         &lt;!-- dependencies of jackrabbit --&gt;
diff --git a/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/JCRWebdavServerServlet.java b/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/JCRWebdavServerServlet.java
index 5051dff79..efeeee9e1 100644
-- a/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/JCRWebdavServerServlet.java
++ b/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/JCRWebdavServerServlet.java
@@ -47,6 +47,7 @@ public class JCRWebdavServerServlet extends AbstractWebdavServlet implements Dav
      */</comment>
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>INIT_PARAM_PREFIX</name> <init>= <expr><literal type="string">"resource-path-prefix"</literal></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>pathPrefix</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>JCRWebdavServer</name></type> <name>server</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>DavResourceFactory</name></type> <name>resourceFactory</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>DavLocatorFactory</name></type> <name>locatorFactory</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>JCRWebdavServerServlet</name> extends <name>AbstractWebdavServlet</name> implements <name>Dav</name>
         <call><name><name>super</name><operator>.</operator><name>init</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
 	<comment type="line">// set resource path prefix</comment>
	<decl_stmt><decl><type><name>String</name></type> <name>pathPrefix</name> <init>= <expr><call><name>getInitParameter</name><argument_list>(<argument><expr><name>INIT_PARAM_PREFIX</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>pathPrefix</name> <operator>=</operator> <call><name>getInitParameter</name><argument_list>(<argument><expr><name>INIT_PARAM_PREFIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	<expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name>INIT_PARAM_PREFIX</name> <operator>+</operator> <literal type="string">" = "</literal> <operator>+</operator> <name>pathPrefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
 	<decl_stmt><decl><type><name>Repository</name></type> <name>repository</name> <init>= <expr><call><name><name>RepositoryAccessServlet</name><operator>.</operator><name>getRepository</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>JCRWebdavServerServlet</name> extends <name>AbstractWebdavServlet</name> implements <name>Dav</name></expr></expr_stmt>
     }</block></class>
 
     <comment type="block" format="javadoc">/**
     * Returns true if the preconditions are met. This includes validation of
     * {@link WebdavRequest#matchesIfHeader(DavResource) If header} and validation
     * of {@link org.apache.jackrabbit.webdav.transaction.TransactionConstants#HEADER_TRANSACTIONID
     * TransactionId header}. This method will also return false if the requested
     * resource lays within a differenct workspace as is assigned to the repository
     * session attached to the given request.
      *
     * @param request
     * @param resource
     * @return
     * @see AbstractWebdavServlet#isPreconditionValid(WebdavRequest, DavResource)
      */</comment>
     <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>isPreconditionValid</name><parameter_list>(<parameter><decl><type><name>WebdavRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>DavResource</name></type> <name>resource</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <comment type="line">// first check matching If header</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">66</literal> @@ <specifier>public</specifier> <name>class</name> <name>JCRWebdavServerServlet</name> extends <name>AbstractWebdavServlet</name> implements <name>Dav</name></expr></expr_stmt>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     * Returns the &lt;code&gt;DavSessionProvider&lt;/code&gt;
     *
     * @return server
     * @see AbstractWebdavServlet#getDavSessionProvider()
      */</comment>
    <function><type><specifier>public</specifier> <name>DavSessionProvider</name></type> <name>getSessionProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>DavSessionProvider</name></type> <name>getDavSessionProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><name>server</name></expr>;</return>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     * Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.
     *
     * @see AbstractWebdavServlet#setDavSessionProvider(DavSessionProvider)
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setDavSessionProvider</name><parameter_list>(<parameter><decl><type><name>DavSessionProvider</name></type> <name>davSessionProvider</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Not implemented. DavSession(s) are provided by the 'JCRWebdavServer'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Returns the &lt;code&gt;DavLocatorFactory&lt;/code&gt;
     *
     * @see AbstractWebdavServlet#getLocatorFactory()
      */</comment>
     <function><type><specifier>public</specifier> <name>DavLocatorFactory</name></type> <name>getLocatorFactory</name><parameter_list>()</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>locatorFactory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>locatorFactory</name> <operator>=</operator> <operator>new</operator> <call><name>DavLocatorFactoryImpl</name><argument_list>(<argument><expr><name>pathPrefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
         <return>return <expr><name>locatorFactory</name></expr>;</return>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     * Sets the &lt;code&gt;DavLocatorFactory&lt;/code&gt;
     *
     * @see AbstractWebdavServlet#setLocatorFactory(DavLocatorFactory)
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setLocatorFactory</name><parameter_list>(<parameter><decl><type><name>DavLocatorFactory</name></type> <name>locatorFactory</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>locatorFactory</name></name> <operator>=</operator> <name>locatorFactory</name></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Returns the &lt;code&gt;DavResourceFactory&lt;/code&gt;. 
     *
     * @see AbstractWebdavServlet#getResourceFactory()
      */</comment>
     <function><type><specifier>public</specifier> <name>DavResourceFactory</name></type> <name>getResourceFactory</name><parameter_list>()</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>resourceFactory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>resourceFactory</name> <operator>=</operator> <operator>new</operator> <call><name>DavResourceFactoryImpl</name><argument_list>(<argument><expr><name>txMgr</name></expr></argument>, <argument><expr><name>subscriptionMgr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
         <return>return <expr><name>resourceFactory</name></expr>;</return>
     </block_content>}</block></function>
 
    <comment type="block" format="javadoc">/**
     * Sets the &lt;code&gt;DavResourceFactory&lt;/code&gt;.
     *
     * @see AbstractWebdavServlet#setResourceFactory(org.apache.jackrabbit.webdav.DavResourceFactory)
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setResourceFactory</name><parameter_list>(<parameter><decl><type><name>DavResourceFactory</name></type> <name>resourceFactory</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>resourceFactory</name></name> <operator>=</operator> <name>resourceFactory</name></expr>;</expr_stmt>
    </block_content>}</block></function>

     <comment type="block" format="javadoc">/**
      * Returns {@link #DEFAULT_AUTHENTICATE_HEADER}.
      *
diff --git a/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/RepositoryStartupServlet.java b/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/RepositoryStartupServlet.java
index d36f9ea06..d4c40186b 100644
-- a/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/RepositoryStartupServlet.java
++ b/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/RepositoryStartupServlet.java
@@ -98,9 +98,14 @@ public class RepositoryStartupServlet extends HttpServlet {
 	} else {
 	    log.info("RepositoryStartupServlet shutting down...");
 	}
        shutdownRepository();
 	unregisterRMI();
 	unregisterJNDI();
	log("RepositoryStartupServlet shut down.");
        if (log == null) {
            log("RepositoryStartupServlet shut down.");
        } else {
            log.info("RepositoryStartupServlet shut down.");
        }
     }
 
     /**
@@ -179,6 +184,12 @@ public class RepositoryStartupServlet extends HttpServlet {
 	}
     }
 
    private void shutdownRepository() {
        if (repository instanceof RepositoryImpl) {
            ((RepositoryImpl) repository).shutdown();
            repository = null;
        }
    }
     /**
      * Creates the repository for the given config and homedir.
      *
diff --git a/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/SimpleWebdavServlet.java b/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/SimpleWebdavServlet.java
index 47ec11b9c..575e361a8 100644
-- a/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/SimpleWebdavServlet.java
++ b/contrib/jcr-server/webapp/src/java/org/apache/jackrabbit/j2ee/SimpleWebdavServlet.java
@@ -118,12 +118,12 @@ public class SimpleWebdavServlet extends AbstractWebdavServlet {
     private Repository repository;
 
     /**
     * the session provider
     * the webdav session provider
      */</comment>
     <decl_stmt><decl><type><specifier>private</specifier> <name>DavSessionProvider</name></type> <name>davSessionProvider</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
     * the session provider
     * the repository session provider
      */</comment>
     <decl_stmt><decl><type><specifier>private</specifier> <name>SessionProvider</name></type> <name>sessionProvider</name></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleWebdavServlet</name> extends <name>AbstractWebdavServlet</name> <block>{
         }</block>
         <call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><name>INIT_PARAM_RESOURCE_PATH_PREFIX</name> <operator>+</operator> <literal type="string">" = '"</literal> <operator>+</operator> <name>resourcePathPrefix</name> <operator>+</operator> <literal type="string">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <comment type="line">// init repository</comment>
        <expr_stmt><expr><name>repository</name> <operator>=</operator> <call><name><name>RepositoryAccessServlet</name><operator>.</operator><name>getRepository</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>repository</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>ServletException</name><argument_list>(<argument><expr><literal type="string">"Repository could not be retrieved. Check config of 'RepositoryAccessServlet'."</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>String</name></type> <name>chain</name> <init>= <expr><call><name>getInitParameter</name><argument_list>(<argument><expr><name>INIT_PARAM_CHAIN_CATALOG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>URL</name></type> <name>chainUrl</name> <init>= <expr><call><name>getServletContext</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResource</name><argument_list>(<argument><expr><name>chain</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">271</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleWebdavServlet</name> extends <name>AbstractWebdavServlet</name> <block>{
      <expr><operator>*</operator> <name><name>returned</name><operator>.</operator></name>
      *
      <operator>*</operator> @</expr><return>return <expr><name>the</name> <name>locator</name> <name>factory</name>
     <operator>*</operator> @<name>see</name> <name>AbstractWebdavServlet</name><operator>#</operator><call><name>getLocatorFactory</name><argument_list>()</argument_list></call>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>DavLocatorFactory</name> <call><name>getLocatorFactory</name><argument_list>()</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>locatorFactory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">284</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">280</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleWebdavServlet</name> extends <name>AbstractWebdavServlet</name> <block>{
         <return>return <expr><name>locatorFactory</name></expr>;</return></block></expr></expr_stmt></block_content></block></if></if_stmt>
     }</block>
 
    <comment type="block" format="javadoc">/**
     * Sets the &lt;code&gt;DavLocatorFactory&lt;/code&gt;.
     *
     * @param locatorFactory
     * @see AbstractWebdavServlet#setLocatorFactory(DavLocatorFactory)
     */</comment>
    <specifier>public</specifier> <name>void</name> <call><name>setLocatorFactory</name><argument_list>(<argument><expr><name>DavLocatorFactory</name> <name>locatorFactory</name></expr></argument>)</argument_list></call> <block>{
        <expr><name><name>this</name><operator>.</operator><name>locatorFactory</name></name> <operator>=</operator> <name>locatorFactory</name></expr>;
    }</block>

     <comment type="block" format="javadoc">/**
      * Returns the &lt;code&gt;LockManager&lt;/code&gt;. If no lock manager has
      * been set or created a new instance of {@link SimpleLockManager} is
@@ -298,12 +304,22 @@ public class SimpleWebdavServlet extends AbstractWebdavServlet {
         return lockManager;
     }
 
    /**
     * Sets the &lt;code&gt;LockManager&lt;/code&gt;.
     *
     * @param lockManager
     */</comment>
    <specifier>public</specifier> <name>void</name> <call><name>setLockManager</name><argument_list>(<argument><expr><name>LockManager</name> <name>lockManager</name></expr></argument>)</argument_list></call> <block>{
        <expr><name><name>this</name><operator>.</operator><name>lockManager</name></name> <operator>=</operator> <name>lockManager</name></expr>;
    }</block>

     <comment type="block" format="javadoc">/**
      * Returns the &lt;code&gt;DavResourceFactory&lt;/code&gt;. If no request factory has
      * been set or created a new instance of {@link ResourceFactoryImpl} is
      * returned.
      *
      * @return the resource factory
     * @see org.apache.jackrabbit.server.AbstractWebdavServlet#getResourceFactory()
      */</comment>
     <specifier>public</specifier> <name>DavResourceFactory</name> <call><name>getResourceFactory</name><argument_list>()</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>resourceFactory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">313</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">329</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleWebdavServlet</name> extends <name>AbstractWebdavServlet</name> <block>{
     }</block>
 
     <comment type="block" format="javadoc">/**
     * Returns the header value retrieved from the {@link #INIT_PARAM_AUTHENTICATE_HEADER}
     * init parameter. If the parameter is missing, the value defaults to
     * {@link #DEFAULT_AUTHENTICATE_HEADER}.
     * Sets the &lt;code&gt;DavResourceFactory&lt;/code&gt;.
      *
     * @return the header value retrieved from the corresponding init parameter
     * or {@link #DEFAULT_AUTHENTICATE_HEADER}.
     * @param resourceFactory
     * @see AbstractWebdavServlet#setResourceFactory(org.apache.jackrabbit.webdav.DavResourceFactory)
      */</comment>
    <specifier>public</specifier> <name>String</name> <call><name>getAuthenticateHeaderValue</name><argument_list>()</argument_list></call> <block>{
        <return>return <expr><name>authenticate_header</name></expr>;</return>
    <specifier>public</specifier> <name>void</name> <call><name>setResourceFactory</name><argument_list>(<argument><expr><name>DavResourceFactory</name> <name>resourceFactory</name></expr></argument>)</argument_list></call> <block>{
        <expr><name><name>this</name><operator>.</operator><name>resourceFactory</name></name> <operator>=</operator> <name>resourceFactory</name></expr>;</block></block></expr></expr_stmt></block_content></block></if></if_stmt>
     }</block>
 
     <comment type="block" format="javadoc">/**
     * Returns the &lt;code&gt;DavSessionProvider&lt;/code&gt;.
     * Returns the &lt;code&gt;SessionProvider&lt;/code&gt;. If no session provider has been
     * set or created a new instance of {@link SessionProviderImpl} that extracts
     * credentials from the request's &lt;code&gt;Authorization&lt;/code&gt; header is
     * returned.
      *
      * @return the session provider
     * @see RepositoryAccessServlet#getCredentialsFromHeader(String)
      */</comment>
    <specifier>public</specifier> <specifier>synchronized</specifier> <name>SessionProvider</name> <call><name>getRepositorySessionProvider</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>public</specifier> <specifier>synchronized</specifier> <name>SessionProvider</name> <call><name>getSessionProvider</name><argument_list>()</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>sessionProvider</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name>CredentialsProvider</name></type> <name>cp</name> <init>= <expr><operator>new</operator> <class><super><name>CredentialsProvider</name></super><argument_list>()</argument_list> <block>{
                 <function><type><specifier>public</specifier> <name>Credentials</name></type> <name>getCredentials</name><parameter_list>(<parameter><decl><type><name>HttpServletRequest</name></type> <name>request</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>LoginException</name></expr></argument>, <argument><expr><name>ServletException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">342</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">360</literal></expr><operator>,</operator><expr><literal type="number">77</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleWebdavServlet</name> extends <name>AbstractWebdavServlet</name> <block>{
     }</block>
 
     <comment type="block" format="javadoc">/**
     * Returns the &lt;code&gt;DavSessionProvider&lt;/code&gt;.
     * Sets the &lt;code&gt;SessionProvider&lt;/code&gt;.
     *
     * @param sessionProvider
     */</comment>
    <specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name> <call><name>setSessionProvider</name><argument_list>(<argument><expr><name>SessionProvider</name> <name>sessionProvider</name></expr></argument>)</argument_list></call> <block>{
        <expr><name><name>this</name><operator>.</operator><name>sessionProvider</name></name> <operator>=</operator> <name>sessionProvider</name></expr>;
    }</block>

    <comment type="block" format="javadoc">/**
     * Returns the &lt;code&gt;DavSessionProvider&lt;/code&gt;. If no session provider has
     * been set or created a new instance of {@link DavSessionProviderImpl}
     * is returned.
      *
      * @return the session provider
     * @see org.apache.jackrabbit.server.AbstractWebdavServlet#getDavSessionProvider()
      */</comment>
    <specifier>public</specifier> <specifier>synchronized</specifier> <name>DavSessionProvider</name> <call><name>getSessionProvider</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>public</specifier> <specifier>synchronized</specifier> <name>DavSessionProvider</name> <call><name>getDavSessionProvider</name><argument_list>()</argument_list></call> <block>{
         <if_stmt><if>if <condition>(<expr><name>davSessionProvider</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><name>davSessionProvider</name> <operator>=</operator>
                    <operator>new</operator> <call><name>DavSessionProviderImpl</name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><call><name>getRepositorySessionProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><operator>new</operator> <call><name>DavSessionProviderImpl</name><argument_list>(<argument><expr><call><name>getRepository</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getSessionProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/>}</block_content>
         return davSessionProvider</block><empty_stmt>;</empty_stmt></if></if_stmt>
     }</block>
 
    <comment type="block" format="javadoc">/**
     * Sets the &lt;code&gt;DavSessionProvider&lt;/code&gt;.
     *
     * @param sessionProvider
     * @see AbstractWebdavServlet#setDavSessionProvider(org.apache.jackrabbit.webdav.DavSessionProvider)
     */</comment>
    <specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name> <call><name>setDavSessionProvider</name><argument_list>(<argument><expr><name>DavSessionProvider</name> <name>sessionProvider</name></expr></argument>)</argument_list></call> <block>{
        <expr><name><name>this</name><operator>.</operator><name>davSessionProvider</name></name> <operator>=</operator> <name>sessionProvider</name></expr>;
    }</block>

    <comment type="block" format="javadoc">/**
     * Returns the header value retrieved from the {@link #INIT_PARAM_AUTHENTICATE_HEADER}
     * init parameter. If the parameter is missing, the value defaults to
     * {@link #DEFAULT_AUTHENTICATE_HEADER}.
     *
     * @return the header value retrieved from the corresponding init parameter
     * or {@link #DEFAULT_AUTHENTICATE_HEADER}.
     * @see org.apache.jackrabbit.server.AbstractWebdavServlet#getAuthenticateHeaderValue()
     */</comment>
    <specifier>public</specifier> <name>String</name> <call><name>getAuthenticateHeaderValue</name><argument_list>()</argument_list></call> <block>{
        <return>return <expr><name>authenticate_header</name></expr>;</return>
    }</block>

    <comment type="block" format="javadoc">/**
     * Returns the &lt;code&gt;Repository&lt;/code&gt;. If no repository has been set or
     * created the repository initialized by &lt;code&gt;RepositoryAccessServlet&lt;/code&gt;
     * is returned.
     *
     * @return repository
     * @see RepositoryAccessServlet#getRepository()
     */</comment>
    <specifier>public</specifier> <name>Repository</name> <call><name>getRepository</name><argument_list>()</argument_list></call> <block>{
        <if_stmt><if>if <condition>(<expr><name>repository</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>repository</name> <operator>=</operator> <call><name><name>RepositoryAccessServlet</name><operator>.</operator><name>getRepository</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>repository</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Repository could not be retrieved. Check config of 'RepositoryAccessServlet'."</literal></expr></argument>)</argument_list></call></expr>;</throw>
            <expr_stmt/>}</block_content>
        }
        return repository</block><empty_stmt>;</empty_stmt></if></if_stmt>
    <expr_stmt/>}</block_content>

    <comment type="block" format="javadoc">/**
     * Sets the &lt;code&gt;Repository&lt;/code&gt;.
     *
     * @param repository
     */</comment>
    public void setRepository(Repository repository</block></if></if_stmt>)</block> <block>{
        <expr><name><name>this</name><operator>.</operator><name>repository</name></name> <operator>=</operator> <name>repository</name></expr>;
    }</block>
 }
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>webdav</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>lock</name><operator>/</operator><name><name>SimpleLockManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>webdav</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>lock</name><operator>/</operator><name><name>SimpleLockManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">147a32d72</literal><operator>..</operator><literal type="number">8da52ba05</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>webdav</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>lock</name><operator>/</operator><name><name>SimpleLockManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>webdav</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>lock</name><operator>/</operator><name><name>SimpleLockManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">23</literal></expr>,<expr><literal type="number">6</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>util</name><operator>.</operator><name>Text</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Simple manager for webdav locks.&lt;br&gt;
 * NOTE: the timeout requested is always replace by a infinite timeout and
 * expiration of locks is not checked.
  */</comment>
 <specifier>public</specifier> <name>class</name> <name>SimpleLockManager</name> implements <name>LockManager</name> <block>{
 
@@ <expr><operator>-</operator><literal type="number">55</literal></expr>,<expr><literal type="number">33</literal> <operator>+</operator><literal type="number">53</literal></expr>,<expr><literal type="number">37</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleLockManager</name> implements <name>LockManager</name> <block>{
      <expr><operator>*</operator> @<name>param</name> <name>resource</name>
      <operator>*</operator> @</expr><return>return <expr><name>lock</name> <name>that</name> <name>applies</name> <name>to</name> <name>the</name> <name>given</name> <name>resource</name> <name><name>or</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><literal type="null">null</literal><operator>&lt;</operator><operator>/</operator><name>code</name><operator>&gt;</operator><operator>.</operator>
      <operator>*</operator><operator>/</operator>
    <specifier>public</specifier> <name>ActiveLock</name> <call><name>getLock</name><argument_list>(<argument><expr><name>Type</name> <name>type</name></expr></argument>, <argument><expr><name>Scope</name> <name>scope</name></expr></argument>, <argument><expr><name>DavResource</name> <name>resource</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <specifier>synchronized</specifier> <name>ActiveLock</name> <call><name>getLock</name><argument_list>(<argument><expr><name>Type</name> <name>type</name></expr></argument>, <argument><expr><name>Scope</name> <name>scope</name></expr></argument>, <argument><expr><name>DavResource</name> <name>resource</name></expr></argument>)</argument_list></call> <block>{
 	<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>Type</name><operator>.</operator><name>WRITE</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>Scope</name><operator>.</operator><name>EXCLUSIVE</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
 	    <return>return <expr><literal type="null">null</literal></expr>;</return>
 	<expr_stmt/>}</block_content>
	String key = resource.getResourcePath(</block></if></if_stmt>)</block></expr>;
	<name>ActiveLock</name> <name>lock</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><call><name><name>locks</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><name>ActiveLock</name><operator>)</operator><call><name><name>locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></block></expr>;</return></block></expr>
        <return>return <expr><call><name>getLock</name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getResourcePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></block></expr></expr_stmt>
 
	<comment type="line">// look for an inherited lock</comment>
	<if_stmt><if>if <condition>(<expr><name>lock</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
	    <comment type="line">// cut path instead of retrieving the parent resource</comment>
	    <decl_stmt><decl><type><name>String</name></type> <name>parentPath</name> <init>= <expr><call><name><name>Text</name><operator>.</operator><name>getRelativeParent</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name>boolean</name></type> <name>found</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
	    <comment type="block">/* stop as soon as parent lock is found:
	    if the lock is deep or the parent is a collection the lock
	    applies to the given resource. */</comment>
	    <while>while <condition>(<expr><operator>!</operator><literal type="string">"/"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>parentPath</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><operator>(</operator><name>found</name> <operator>=</operator> <call><name><name>locks</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>parentPath</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>parentPath</name> <operator>=</operator> <call><name><name>Text</name><operator>.</operator><name>getRelativeParent</name></name><argument_list>(<argument><expr><name>parentPath</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt/>}</block_content>
	    if (found</block></while>)</block_content> <block>{<block_content>
		<decl_stmt><decl><type><name>ActiveLock</name></type> <name>parentLock</name> <init>= <expr><operator>(</operator><name>ActiveLock</name><operator>)</operator><call><name><name>locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>parentPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>parentLock</name><operator>.</operator><name>isDeep</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
		    <expr_stmt><expr><name>lock</name> <operator>=</operator> <name>parentLock</name></expr>;</expr_stmt>
		<expr_stmt/>}</block_content>
	    }
	}
	<comment type="line">// since locks have infinite timeout, check for expired lock is omitted.</comment>
	return lock</block><empty_stmt>;</empty_stmt></if></if_stmt>
    <comment type="block" format="javadoc">/**
     * Recursivly tries to find the lock
     *
     * @param path
     * @return
     */</comment>
    <function><type><specifier>private</specifier> <name>ActiveLock</name></type> <name>getLock</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>ActiveLock</name></type> <name>lock</name> <init>= <expr><operator>(</operator><name>ActiveLock</name><operator>)</operator> <call><name><name>locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>lock</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// check if not expired</comment>
            <if_stmt><if>if <condition>(<expr><call><name><name>lock</name><operator>.</operator><name>isExpired</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>lock</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
            <expr_stmt/>}</block_content>
        }
        if (lock == null</block></if></if_stmt>)</block_content> <block>{<block_content>
            <comment type="line">// check, if child of deep locked parent</comment>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>path</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>ActiveLock</name></type> <name>parentLock</name> <init>= <expr><call><name>getLock</name><argument_list>(<argument><expr><call><name><name>Text</name><operator>.</operator><name>getRelativeParent</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>parentLock</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>parentLock</name><operator>.</operator><name>isDeep</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>lock</name> <operator>=</operator> <name>parentLock</name></expr>;</expr_stmt>
                <expr_stmt/>}</block_content>
            }
        }
        return lock</block><empty_stmt>;</empty_stmt></if></if_stmt>
     <expr_stmt/>}</block_content>
 
     <comment type="block" format="javadoc">/**
@@ -90,7 +92,8 @@ public class SimpleLockManager implements LockManager {
      * @param lockInfo
      * @param resource being the lock holder
      */</comment>
    public synchronized ActiveLock createLock(LockInfo lockInfo</block><operator>,</operator> <expr_stmt><expr><name>DavResource</name> <name>resource</name></expr></expr_stmt></if></if_stmt>)</block_content>
    public synchronized ActiveLock createLock(LockInfo lockInfo</block></block><operator>,</operator>
                                              <expr_stmt><expr><name>DavResource</name> <name>resource</name></expr></expr_stmt></if></if_stmt>)</block_content>
 	    <throws>throws <argument><expr><name>DavException</name> <block>{</block></expr></argument></throws>
 	if (lockInfo == null || resource == null</block></function>)</block_content> <block>{<block_content>
 	    <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Neither lockInfo nor resource must be null."</literal></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleLockManager</name> implements <name>LockManager</name> <block>{
 
 	<expr><name>String</name> <name>resourcePath</name> <operator>=</operator> <call><name><name>resource</name><operator>.</operator><name>getResourcePath</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
 	<comment type="line">// test if there is already a lock present on this resource</comment>
	<if_stmt><if>if <condition>(<expr><call><name><name>locks</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>resourcePath</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>ActiveLock</name></type> <name>lock</name> <init>= <expr><operator>(</operator><name>ActiveLock</name><operator>)</operator> <call><name><name>locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>resourcePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>lock</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>lock</name><operator>.</operator><name>isExpired</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>locks</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>resourcePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>lock</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
        <expr_stmt/>}</block_content>
        if (lock != null</block></if></if_stmt>)</block_content> <block>{<block_content>
 	    <throw>throw <expr><operator>new</operator> <call><name>DavException</name><argument_list>(<argument><expr><name><name>DavServletResponse</name><operator>.</operator><name>SC_LOCKED</name></name></expr></argument>, <argument><expr><literal type="string">"Resource '"</literal> <operator>+</operator> <call><name><name>resource</name><operator>.</operator><name>getResourcePath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"' already holds a lock."</literal></expr></argument>)</argument_list></call></expr>;</throw>
 	<expr_stmt/>}</block_content>
 	<comment type="line">// test if the new lock would conflict with any lock inherited from the</comment>
@@ -119</block></block><operator>,</operator><expr_stmt><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleLockManager</name> implements <name>LockManager</name> <block>{
 
 	    }</block></expr></expr_stmt></if></if_stmt>
 	}</block_content>
	ActiveLock lock = new DefaultActiveLock(lockInfo</block></block></block></if></if_stmt>)</block_content></block>;</function>
	<comment type="line">// Lazy: reset the timeout to 'Infinite', in order to omit the tests for</comment>
	<comment type="line">// lock expiration.</comment>
	<constructor_decl><name><name>lock</name><operator>.</operator><name>setTimeout</name></name><parameter_list>(<parameter><decl><type><name><name>DavConstants</name><operator>.</operator><name>INFINITE_TIMEOUT</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
	<expr_stmt><expr><name>lock</name> <operator>=</operator> <operator>new</operator> <call><name>DefaultActiveLock</name><argument_list>(<argument><expr><name>lockInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	<expr_stmt><expr><call><name><name>locks</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getResourcePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	<return>return <expr><name>lock</name></expr>;</return>
     <expr_stmt/>}</block>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleLockManager</name> implements <name>LockManager</name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>ActiveLock</name> <call><name>refreshLock</name><argument_list>(<argument><expr><name>LockInfo</name> <name>lockInfo</name></expr></argument>, <argument><expr><name>String</name> <name>lockToken</name></expr></argument>, <argument><expr><name>DavResource</name> <name>resource</name></expr></argument>)</argument_list></call>
 	    <throws>throws <argument><expr><name>DavException</name> <block>{
	<comment type="line">// timeout is always infinite &gt; no test for expiration or adjusting timeout needed.</comment>
 	<expr><name>ActiveLock</name> <name>lock</name> <operator>=</operator> <call><name>getLock</name><argument_list>(<argument><expr><call><name><name>lockInfo</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>lockInfo</name><operator>.</operator><name>getScope</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt></class></expr></init></decl></decl_stmt>
 	<if_stmt><if>if <condition>(<expr><name>lock</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
 	    <throw>throw <expr><operator>new</operator> <call><name>DavException</name><argument_list>(<argument><expr><name><name>DavServletResponse</name><operator>.</operator><name>SC_PRECONDITION_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</throw>
 	<expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr> <if_stmt><if type="elseif">else if <condition>(<expr><operator>!</operator><call><name><name>lock</name><operator>.</operator><name>getToken</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>lockToken</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
 	    <throw>throw <expr><operator>new</operator> <call><name>DavException</name><argument_list>(<argument><expr><name><name>DavServletResponse</name><operator>.</operator><name>SC_LOCKED</name></name></expr></argument>)</argument_list></call></expr>;</throw>
 	<expr_stmt/></block_content></block></if></if_stmt>}</block>
        <call><name><name>lock</name><operator>.</operator><name>setTimeout</name></name><argument_list>(<argument><expr><call><name><name>lockInfo</name><operator>.</operator><name>getTimeout</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt>
 	<return>return <expr><name>lock</name></expr>;</return>
     </block_content>}</block></try>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleLockManager</name> implements <name>LockManager</name> <block>{
 	<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>locks</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getResourcePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
 	    <throw>throw <expr><operator>new</operator> <call><name>DavException</name><argument_list>(<argument><expr><name><name>DavServletResponse</name><operator>.</operator><name>SC_PRECONDITION_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</throw>
 	<expr_stmt/></block_content></block></if></if_stmt>}</block>
	<comment type="line">// since locks have infinite timeout, check for expiration is omitted.</comment>

 	<name>ActiveLock</name> <name>lock</name> <operator>=</operator> <operator>(</operator><name>ActiveLock</name><operator>)</operator> <call><name><name>locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getResourcePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	<if_stmt><if>if <condition>(<expr><call><name><name>lock</name><operator>.</operator><name>getToken</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>lockToken</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
 	    <expr_stmt><expr><call><name><name>locks</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getResourcePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
