<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/79d79a9ed.java"><expr_stmt><expr><name>From</name> <literal type="number">79d79a9ed6c1a9887a761ecdbf1c0e4b7b6c9fd6</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Marcel</name> <name><name>Reutegger</name> <argument_list type="generic">&lt;<argument><name>mreutegg</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">3</literal> <name>Sep</name> <literal type="number">2009</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">44</literal><operator>:</operator><literal type="number">20</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">2170</literal><operator>:</operator> <name>Remove</name> <name>PropDefId</name> <name>and</name> <name>NodeDefId</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@811001 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PropertyImpl</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">11</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name><name>GarbageCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RowIteratorImpl</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>constraint</name><operator>/</operator><name><name>PropertyValueOperand</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>AuthorizableImpl</name><operator>.</operator><name>java</name></name>          <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>TraversingNodeResolver</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>NodeStateEx</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>SessionImporter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ConcurrentReadWriteTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>DocumentViewTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>Exporter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name>remoting</name><operator>/</operator><name>davex</name><operator>/</operator><name><name>JsonWriter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>jcr</name><operator>/</operator><name><name>DefaultItemResource</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>jcr2spi</name><operator>/</operator><name><name>PropertyLengthTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>spi2jcr</name><operator>/</operator><name><name>PropertyInfoImpl</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>--</operator>
 <literal type="number">15</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">23</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">24</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PropertyImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PropertyImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">706b2ec94</literal><operator>..</operator><name>b80130ddf</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PropertyImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PropertyImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>PropertyImpl</name> extends <name>ItemImpl</name> implements <name>Property</name> <block>{
             <expr><name>LockException</name></expr>, <expr><name>ConstraintViolationException</name></expr>,
             <expr><name>RepositoryException</name> <block>{
         <expr><name>NodeImpl</name> <name>parent</name> <operator>=</operator> <operator>(</operator><name>NodeImpl</name><operator>)</operator> <call><name>getParent</name><argument_list>()</argument_list></call></expr>;
        <expr><name>PropertyDefinition</name> <name>definition</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>getPropertyDefinition</name></name><argument_list>()</argument_list></call></expr>;
         <comment type="line">// check multi-value flag</comment>
        <if_stmt><if>if <condition>(<expr><name>multipleValues</name> <operator>!=</operator> <call><name><name>definition</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>multipleValues</name> <operator>!=</operator> <call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>multipleValues</name><operator>)</operator></expr> ?</condition><then>
                     <expr><literal type="string">"Single-valued property can not be set to an array of values:"</literal></expr> </then><else>:
                    <expr><literal type="string">"Multivalued property can not be set to a single value (an array of lenght one is OK): "</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><literal type="string">"Multivalued property can not be set to a single value (an array of length one is OK): "</literal></expr>;</expr_stmt>
             <throw>throw <expr><operator>new</operator> <call><name>ValueFormatException</name><argument_list>(<argument><expr><name>msg</name> <operator>+</operator> <name>this</name></expr></argument>)</argument_list></call></expr>;</throw>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
 
@@ <operator>-</operator><literal type="number">416</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">415</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PropertyImpl</name> extends <name>ItemImpl</name> implements <name>Property</name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name><name>InternalValue</name><index>[]</index></name> <call><name>internalGetValues</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>RepositoryException</name> <block>{
         <expr><name>final</name> <name>PropertyDefinition</name> <name>definition</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>getPropertyDefinition</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
        <if_stmt><if>if <condition>(<expr><call><name><name>definition</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <return>return <expr><call><name>getPropertyState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>()</argument_list></call></expr>;</return>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <class><super><name>ValueFormatException</name></super><argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">435</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">434</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>PropertyImpl</name> extends <name>ItemImpl</name> implements <name>Property</name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>InternalValue</name> <call><name>internalGetValue</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>RepositoryException</name> <block>{
         <expr><name>final</name> <name>PropertyDefinition</name> <name>definition</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>getPropertyDefinition</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></argument></argument_list></class></expr></throw>
        <if_stmt><if>if <condition>(<expr><call><name><name>definition</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>ValueFormatException</name><argument_list>(
                     <argument><expr><name>this</name> <operator>+</operator> <literal type="string">" is a multi-valued property,"</literal>
                     <operator>+</operator> <literal type="string">" so it's values can only be retrieved as an array"</literal></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">789</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">788</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PropertyImpl</name> extends <name>ItemImpl</name> implements <name>Property</name> <block>{
         <comment type="line">// check state of this instance</comment>
         <expr><call><name>sanityCheck</name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
 
        <return>return <expr><call><name><name>data</name><operator>.</operator><name>getPropertyDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>;</return>
        <return>return <expr><call><name>getPropertyState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiValued</name><argument_list>()</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt>}</block>
 
     <comment type="line">//-----------------------------------------------------------------&lt; Item &gt;</comment>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name><name>GarbageCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name><name>GarbageCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">964936f5a</literal><operator>..</operator><literal type="number">77a762c23</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name><name>GarbageCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>data</name><operator>/</operator><name><name>GarbageCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>GarbageCollector</name> <block>{
                         }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
                             <expr_stmt><expr><call><name>rememberNode</name><argument_list>(<argument><expr><call><name><name>n</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                         </block_content>}</block></else></if_stmt>
                        <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                        <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                             <expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>getLengths</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                         </block_content>}</block></if> <else>else <block>{<block_content>
                             <expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RowIteratorImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RowIteratorImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9ebd0e00f</literal><operator>..</operator><literal type="number">7676712e5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RowIteratorImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>RowIteratorImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">341</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">341</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>RowIteratorImpl</name> implements <name>RowIterator</name> <block>{
                     <return>return <expr><call><name><name>valueFactory</name><operator>.</operator><name>createValue</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
                 }</block></expr></expr_stmt> <if_stmt><if type="elseif">else if <condition>(<expr><call><name><name>n</name><operator>.</operator><name>hasProperty</name></name><argument_list>(<argument><expr><call><name><name>col</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                     <decl_stmt><decl><type><name>Property</name></type> <name>p</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><call><name><name>col</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                         <comment type="line">// mvp values cannot be returned</comment>
                         <return>return <expr><literal type="null">null</literal></expr>;</return>
                     </block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>constraint</name><operator>/</operator><name><name>PropertyValueOperand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>constraint</name><operator>/</operator><name><name>PropertyValueOperand</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6bbaade79</literal><operator>..</operator><literal type="number">4dfc45821</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>constraint</name><operator>/</operator><name><name>PropertyValueOperand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name>constraint</name><operator>/</operator><name><name>PropertyValueOperand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PropertyValueOperand</name> extends <name>DynamicOperand</name> <block>{
         <if_stmt><if>if <condition>(<expr><name>prop</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <return>return <expr><name>EMPTY</name></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                 <return>return <expr><call><name><name>prop</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr>;</return>
             </block_content>}</block></if> <else>else <block>{<block_content>
                 <return>return <expr><operator>new</operator> <name><name>Value</name><index>[]</index></name><block>{<expr><call><name><name>prop</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>}</block></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>AuthorizableImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>AuthorizableImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d3265190f</name><operator>..</operator><name>dd0886d60</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>AuthorizableImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>AuthorizableImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>AuthorizableImpl</name> implements <name>Authorizable</name></expr><operator>,</operator> <expr><name>UserConstants</name> <block>{
         <if_stmt><if>if <condition>(<expr><call><name>hasProperty</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name>Property</name></type> <name>prop</name> <init>= <expr><call><name><name>node</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><call><name>isAuthorizableProperty</name><argument_list>(<argument><expr><name>prop</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                     <return>return <expr><call><name><name>prop</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr>;</return>
                 </block_content>}</block></if> <else>else <block>{<block_content>
                     <return>return <expr><operator>new</operator> <name><name>Value</name><index>[]</index></name> <block>{<expr><call><name><name>prop</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>}</block></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">249</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">249</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>AuthorizableImpl</name> implements <name>Authorizable</name></expr><operator>,</operator> <expr><name>UserConstants</name> <block>{
             <if_stmt><if>if <condition>(<expr><call><name><name>node</name><operator>.</operator><name>hasProperty</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                 <comment type="line">// 'node' is protected -&gt; use setValue instead of Property.remove()</comment>
                 <decl_stmt><decl><type><name>Property</name></type> <name>p</name> <init>= <expr><call><name><name>node</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                     <expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><operator>(</operator><name><name>Value</name><index>[]</index></name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></if> <else>else <block>{<block_content>
                     <expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><operator>(</operator><name>Value</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>TraversingNodeResolver</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>TraversingNodeResolver</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">32ea7a7fb</literal><operator>..</operator><literal type="number">1cc9181e4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>TraversingNodeResolver</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>security</name><operator>/</operator><name>user</name><operator>/</operator><name><name>TraversingNodeResolver</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>TraversingNodeResolver</name> extends <name>NodeResolver</name> <block>{
                             <expr><name>Name</name> <name>propertyName</name> <operator>=</operator> <call><name><name>pItr</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
                             <if_stmt><if>if <condition>(<expr><call><name><name>node</name><operator>.</operator><name>hasProperty</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                                 <decl_stmt><decl><type><name>Property</name></type> <name>prop</name> <init>= <expr><call><name><name>node</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                                <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                                     <decl_stmt><decl><type><name><name>Value</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>prop</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                                     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>values</name><operator>.</operator><name>length</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name>match</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
                                         <expr_stmt><expr><name>match</name> <operator>=</operator> <call><name>matches</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>values</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>exact</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>NodeStateEx</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>NodeStateEx</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cfe36d849</name><operator>..</operator><name>ac6701216</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>NodeStateEx</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>version</name><operator>/</operator><name><name>NodeStateEx</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">795</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">795</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NodeStateEx</name> <block>{
      <expr><operator>*</operator> @<throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws></expr> <if_stmt><if>if an error occurs
      */
     public void copyFrom<condition>(<expr><name>PropertyImpl</name> <name>prop</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>RepositoryException</name> <block>{</block></expr></argument></throws>
        <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name><name>InternalValue</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>prop</name><operator>.</operator><name>internalGetValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name><name>InternalValue</name><index>[]</index></name></type> <name>copiedValues</name> <init>= <expr><operator>new</operator> <name><name>InternalValue</name><index>[<expr><name><name>values</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
             <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>values</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>SessionImporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>SessionImporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d9816024f</name><operator>..</operator><name>ec069508c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>SessionImporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>SessionImporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">418</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">418</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SessionImporter</name> implements <name>Importer</name> <block>{
                     <expr><operator>&amp;&amp;</operator> <call><name><name>prop</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>PropertyType</name><operator>.</operator><name>WEAKREFERENCE</name></name></expr>) <block>{
                 <continue>continue;</continue>
             }</block></block></expr></expr_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>prop</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                 <decl_stmt><decl><type><name><name>Value</name><index>[]</index></name></type> <name>values</name> <init>= <expr><call><name><name>prop</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name><name>Value</name><index>[]</index></name></type> <name>newVals</name> <init>= <expr><operator>new</operator> <name><name>Value</name><index>[<expr><name><name>values</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                 <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>values</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ConcurrentReadWriteTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ConcurrentReadWriteTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b021d5e6b</name><operator>..</operator><literal type="number">17db6ef7f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ConcurrentReadWriteTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ConcurrentReadWriteTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConcurrentReadWriteTest</name> extends <name>AbstractConcurrencyTest</name> <block>{
                                 <try>try <block>{<block_content>
                                     <for>for <control>(<init><decl><type><name>PropertyIterator</name></type> <name>it</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
                                         <decl_stmt><decl><type><name>Property</name></type> <name>p</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>nextProperty</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                                        <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                                        <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                                             <expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                                         </block_content>}</block></if> <else>else <block>{<block_content>
                                             <expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>DocumentViewTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>DocumentViewTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f68d24eaf</name><operator>..</operator><literal type="number">5aa5aa72f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>DocumentViewTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>DocumentViewTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DocumentViewTest</name> extends <name>AbstractJCRTest</name> <block>{
                 <expr><name><name>ImportUUIDBehavior</name><operator>.</operator><name>IMPORT_UUID_COLLISION_THROW</name></name></expr>)</block></expr>;</expr_stmt>
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>Property</name></type> <name>property</name> <init>= <expr><call><name><name>root</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"multi-value-test/test"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>message</name></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>message</name></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>message</name></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>message</name></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>getBoolean</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><name>message</name></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">1</literal></expr>]</index><operator>.</operator><call><name>getBoolean</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>Exporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>Exporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8544b9f8f</literal><operator>..</operator><literal type="number">508590e09</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>Exporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>commons</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>commons</name><operator>/</operator><name>xml</name><operator>/</operator><name><name>Exporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">357</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">357</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Exporter</name> <block>{
 
         <expr><name>int</name> <name>type</name> <operator>=</operator> <call><name><name>property</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>type</name> <operator>!=</operator> <name><name>PropertyType</name><operator>.</operator><name>BINARY</name></name> <operator>||</operator> <name>binary</name></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>property</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>property</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><call><name>exportProperty</name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name>local</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if> <else>else <block>{<block_content>
                 <expr_stmt><expr><call><name>exportProperty</name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name>local</name></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">365</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">365</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Exporter</name> <block>{
         }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
             <decl_stmt><decl><type><name>ValueFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>session</name><operator>.</operator><name>getValueFactory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>Value</name></type> <name>value</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>createValue</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>PropertyType</name><operator>.</operator><name>BINARY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>property</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>property</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><call><name>exportProperty</name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name>local</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><operator>new</operator> <name><name>Value</name><index>[]</index></name> <block>{ <expr><name>value</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if> <else>else <block>{<block_content>
                 <expr_stmt><expr><call><name>exportProperty</name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name>local</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name>remoting</name><operator>/</operator><name>davex</name><operator>/</operator><name><name>JsonWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name>remoting</name><operator>/</operator><name>davex</name><operator>/</operator><name><name>JsonWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6e675056b</literal><operator>..</operator><literal type="number">3c0a1b96c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name>remoting</name><operator>/</operator><name>davex</name><operator>/</operator><name><name>JsonWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>server</name><operator>/</operator><name>remoting</name><operator>/</operator><name>davex</name><operator>/</operator><name><name>JsonWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>class</name> <name>JsonWriter</name> <block>{
             <comment type="line">// mark binary properties with a leading ':'</comment>
             <comment type="line">// the value(s) reflect the jcr-values length instead of the binary data.</comment>
             <expr><name>String</name> <name>key</name> <operator>=</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>p</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                 <decl_stmt><decl><type><name><name>long</name><index>[]</index></name></type> <name>binLengths</name> <init>= <expr><call><name><name>p</name><operator>.</operator><name>getLengths</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <expr_stmt><expr><call><name>writeKeyArray</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>binLengths</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if> <else>else <block>{<block_content>
                 <expr_stmt><expr><call><name>writeKeyValue</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><call><name><name>p</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></else></if_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
            <decl_stmt><decl><type><name>boolean</name></type> <name>isMultiple</name> <init>= <expr><call><name><name>p</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>boolean</name></type> <name>isMultiple</name> <init>= <expr><call><name><name>p</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><name>type</name> <operator>==</operator> <name><name>PropertyType</name><operator>.</operator><name>NAME</name></name> <operator>||</operator> <name>type</name> <operator>==</operator> <name><name>PropertyType</name><operator>.</operator><name>PATH</name></name> <operator>||</operator>
                     <name>type</name> <operator>==</operator> <name><name>PropertyType</name><operator>.</operator><name>REFERENCE</name></name> <operator>||</operator> <name>type</name> <operator>==</operator> <name><name>PropertyType</name><operator>.</operator><name>DATE</name></name> <operator>||</operator>
                     <operator>(</operator><name>isMultiple</name> <operator>&amp;&amp;</operator> <call><name><name>p</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>jcr</name><operator>/</operator><name><name>DefaultItemResource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>jcr</name><operator>/</operator><name><name>DefaultItemResource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">485fc4abd</literal><operator>..</operator><literal type="number">49191560d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>jcr</name><operator>/</operator><name><name>DefaultItemResource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>webdav</name><operator>/</operator><name>jcr</name><operator>/</operator><name><name>DefaultItemResource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultItemResource</name> extends <name>AbstractItemResource</name> <block>{
      <expr><operator>*</operator><operator>/</operator>
     <specifier>private</specifier> <name>boolean</name> <call><name>isMultiple</name><argument_list>()</argument_list></call> <block>{
         <try>try <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name>exists</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>Property</name><operator>)</operator><name>item</name><operator>)</operator><operator>.</operator><call><name>getDefinition</name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name>exists</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>Property</name><operator>)</operator><name>item</name><operator>)</operator><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                 <return>return <expr><literal type="boolean">true</literal></expr>;</return>
             <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></try></block></expr>}</block></expr></expr_stmt>
         </block_content>}</block></if></if_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>RepositoryException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr2spi</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>jcr2spi</name><operator>/</operator><name><name>PropertyLengthTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr2spi</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>jcr2spi</name><operator>/</operator><name><name>PropertyLengthTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">15f970604</literal><operator>..</operator><literal type="number">0776b5326</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr2spi</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>jcr2spi</name><operator>/</operator><name><name>PropertyLengthTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>jcr2spi</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>jcr2spi</name><operator>/</operator><name><name>PropertyLengthTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PropertyLengthTest</name> extends <name>AbstractJCRTest</name> <block>{
     }</block>
 
     <specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>checkLength</name><argument_list>(<argument><expr><name>Property</name> <name>p</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>RepositoryException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>p</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name><name>Value</name><index>[]</index></name></type> <name>vals</name> <init>= <expr><call><name><name>p</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name><name>long</name><index>[]</index></name></type> <name>lengths</name> <init>= <expr><call><name><name>p</name><operator>.</operator><name>getLengths</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>lengths</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>spi2jcr</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>spi2jcr</name><operator>/</operator><name><name>PropertyInfoImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>spi2jcr</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>spi2jcr</name><operator>/</operator><name><name>PropertyInfoImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f89e2b0cf</name><operator>..</operator><literal type="number">29962319e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>spi2jcr</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>spi2jcr</name><operator>/</operator><name><name>PropertyInfoImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>spi2jcr</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>spi2jcr</name><operator>/</operator><name><name>PropertyInfoImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>PropertyInfoImpl</name>
             <throws>throws <argument><expr><name>RepositoryException</name></expr></argument>, <argument><expr><name>NameException</name> <block>{
         <expr><call><name>super</name><argument_list>(<argument><expr><call><name><name>resolver</name><operator>.</operator><name>getQPath</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                 <argument><expr><call><name><name>idFactory</name><operator>.</operator><name>createPropertyId</name></name><argument_list>(<argument><expr><name>property</name></expr></argument>, <argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name><name>property</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><call><name><name>property</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>property</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr></argument>,
                 <argument><expr><call><name>getValues</name><argument_list>(<argument><expr><name>property</name></expr></argument>, <argument><expr><name>resolver</name></expr></argument>, <argument><expr><name>qValueFactory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     </block_content>}</block></for>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>PropertyInfoImpl</name>
                                       <name>NamePathResolver</name> <name>resolver</name></expr><operator>,</operator>
                                       <expr><name>QValueFactory</name> <name>factory</name></expr></expr_stmt>)</block_content>
             <throws>throws <argument><expr><name>RepositoryException</name> <block>{
        <expr><name>boolean</name> <name>isMultiValued</name> <operator>=</operator> <call><name><name>property</name><operator>.</operator><name>getDefinition</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isMultiple</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></block><empty_stmt>;</empty_stmt></if></if_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>isMultiValued</name> <init>= <expr><call><name><name>property</name><operator>.</operator><name>isMultiple</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name><name>QValue</name><index>[]</index></name></type> <name>values</name></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>isMultiValued</name></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name><name>Value</name><index>[]</index></name></type> <name>jcrValues</name> <init>= <expr><call><name><name>property</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></catch></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></try></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></try></block></expr></expr_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block></expr></expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt>

</unit>
