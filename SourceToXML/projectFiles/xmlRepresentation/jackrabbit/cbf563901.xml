<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/cbf563901.java"><expr_stmt><expr><name>From</name> <name>cbf563901faef53706d4fa0e4bbf657598351483</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Marcel</name> <name><name>Reutegger</name> <argument_list type="generic">&lt;<argument><name>mreutegg</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">12</literal> <name>Feb</name> <literal type="number">2008</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">47</literal><operator>:</operator><literal type="number">25</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">1365</literal><operator>:</operator> <name>Query</name> <name>path</name> <name>constraints</name> <name>like</name> <name>foo</name><comment type="line">//*/bar do not scale</comment>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@620859 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">109</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>DescendantSelfAxisQuery</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">79</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryBuilder</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>--</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">162</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">44</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">97527ad34</literal><operator>..</operator><literal type="number">6b0cd85a2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>ChildAxisQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>NodeId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>LocationStepQueryNode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>AdaptingHits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>Hits</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>HitsIntersection</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>query</name><operator>.</operator><name>lucene</name><operator>.</operator><name>hits</name><operator>.</operator><name>ScorerHits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>ItemStateException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>ItemStateManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>state</name><operator>.</operator><name>NodeState</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Name</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>uuid</name><operator>.</operator><name>UUID</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Searcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MatchAllDocsQuery</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Implements a lucene &lt;code&gt;Query&lt;/code&gt; which returns the child nodes of the
@@ -115,6 +117,21 @@ class ChildAxisQuery extends Query {
         this.position = position;
     }
 
    /**
     * @return the name test or &lt;code&gt;null&lt;/code&gt; if none was specified.
     */</comment>
    <function><type><name>String</name></type> <name>getNameTest</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>nameTest</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * @return the position check or {@link LocationStepQueryNode#NONE} is none
     *         was specified.
     */</comment>
    <function><type><name>int</name></type> <name>getPosition</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>position</name></expr>;</return>
    </block_content>}</block></function>

     <comment type="block" format="javadoc">/**
      * Creates a &lt;code&gt;Weight&lt;/code&gt; instance for this query.
      *
@@ -137,6 +154,24 @@ class ChildAxisQuery extends Query {
      */</comment>
     <function><type><specifier>public</specifier> <name>Query</name></type> <name>rewrite</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>Query</name></type> <name>cQuery</name> <init>= <expr><call><name><name>contextQuery</name><operator>.</operator><name>rewrite</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// only try to compact if no position is specified</comment>
        <if_stmt><if>if <condition>(<expr><name>position</name> <operator>==</operator> <name><name>LocationStepQueryNode</name><operator>.</operator><name>NONE</name></name></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>cQuery</name> <operator>instanceof</operator> <name>DescendantSelfAxisQuery</name></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>DescendantSelfAxisQuery</name></type> <name>dsaq</name> <init>= <expr><operator>(</operator><name>DescendantSelfAxisQuery</name><operator>)</operator> <name>cQuery</name></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>dsaq</name><operator>.</operator><name>subQueryMatchesAll</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>Query</name></type> <name>sub</name></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><name>nameTest</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>sub</name> <operator>=</operator> <operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if> <else>else <block>{<block_content>
                        <expr_stmt><expr><name>sub</name> <operator>=</operator> <operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>LABEL</name></name></expr></argument>, <argument><expr><name>nameTest</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></else></if_stmt>
                    <return>return <expr><operator>new</operator> <call><name>DescendantSelfAxisQuery</name><argument_list>(<argument><expr><call><name><name>dsaq</name><operator>.</operator><name>getContextQuery</name></name><argument_list>()</argument_list></call></expr></argument>,
                            <argument><expr><name>sub</name></expr></argument>, <argument><expr><call><name><name>dsaq</name><operator>.</operator><name>getMinLevels</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>rewrite</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// if we get here we could not compact the query</comment>
         <if_stmt><if>if <condition>(<expr><name>cQuery</name> <operator>==</operator> <name>contextQuery</name></expr>)</condition> <block>{<block_content>
             <return>return <expr><name>this</name></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">217</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">252</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>ChildAxisQuery</name> extends <name>Query</name> <block>{
             <if_stmt><if>if <condition>(<expr><name>nameTest</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><name>nameTestScorer</name> <operator>=</operator> <operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name><name>FieldNames</name><operator>.</operator><name>LABEL</name></name></expr></argument>, <argument><expr><name>nameTest</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scorer</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
            <return>return <expr><operator>new</operator> <call><name>ChildAxisScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
            <return>return <expr><operator>new</operator> <call><name>ChildAxisScorer</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></argument>,
                    <argument><expr><name>reader</name></expr></argument>, <argument><expr><operator>(</operator><name>HierarchyResolver</name><operator>)</operator> <name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></else></if_stmt>
 
         <comment type="block" format="javadoc">/**
@@ -240,6 +276,11 @@ class ChildAxisQuery extends Query {
          */</comment>
         <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>IndexReader</name></type> <name>reader</name></decl>;</decl_stmt>
 
        <comment type="block" format="javadoc">/**
         * The &lt;code&gt;HierarchyResolver&lt;/code&gt; of the index.
         */</comment>
        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>HierarchyResolver</name></type> <name>hResolver</name></decl>;</decl_stmt>

         <comment type="block" format="javadoc">/**
          * The next document id to return
          */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">255</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">296</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>class</name> <name>ChildAxisQuery</name> extends <name>Query</name> <block>{
          <expr><operator>*</operator>
          <operator>*</operator> @<name>param</name> <name>similarity</name> <name><name>the</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>Similarity</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>instance</name> <name>to</name> <name><name>use</name><operator>.</operator></name>
          * @<name>param</name> <name>reader</name></expr>     <for>for index access.
         * @param hResolver  the hierarchy resolver of &lt;code&gt;reader&lt;/code&gt;.
          */
        protected ChildAxisScorer<control>(<init><decl><type><name>Similarity</name></type> <name>similarity</name></decl>, <decl><type ref="prev"/><name>IndexReader</name> <name>reader</name></decl></init>)</control> <block>{<block_content>
        <constructor><specifier>protected</specifier> <name>ChildAxisScorer</name><parameter_list>(<parameter><decl><type><name>Similarity</name></type> <name>similarity</name></decl></parameter>,
                                  <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>,
                                  <parameter><decl><type><name>HierarchyResolver</name></type> <name>hResolver</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <name>reader</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>hResolver</name></name> <operator>=</operator> <name>hResolver</name></expr>;</expr_stmt>
         <expr_stmt/></block_content></block></constructor></block_content></block></for>}</block>
 
         <comment type="block" format="javadoc">/**
@@ -313,7 +358,7 @@ class ChildAxisQuery extends Query {
             if (hits == null) {
 
                 // collect all context nodes
                List uuids = new ArrayList();
                Map uuids = new HashMap();
                 final Hits contextHits = new AdaptingHits();
                 contextScorer.score(new HitCollector() {
                     public void collect(int doc, float score) {
@@ -322,39 +367,53 @@ class ChildAxisQuery extends Query {
                 });
 
                 // read the uuids of the context nodes
                int i = contextHits.next();
                while (i &gt; -1) {
                    String uuid = reader.document(i).get(FieldNames.UUID);
                    uuids.add(uuid);
                    i = contextHits.next();
                for (int i = contextHits.next(); i &gt; -1; i = contextHits.next()) {
                    String uuid = reader.document(i, FieldSelectors.UUID).get(FieldNames.UUID);
                    uuids.put(new Integer(i), uuid);
                 }
 
                 // collect all children of the context nodes
                 Hits childrenHits = new AdaptingHits();

                TermDocs docs = reader.termDocs();
                try {
                    for (Iterator it = uuids.iterator(); it.hasNext();) {
                        docs.seek(new Term(FieldNames.PARENT, (String) it.next()));
                        while (docs.next()) {
                            childrenHits.set(docs.doc());
                if (nameTestScorer != null) {
                    Hits nameHits = new ScorerHits(nameTestScorer);
                    for (int h = nameHits.next(); h &gt; -1; h = nameHits.next()) {
                        if (uuids.containsKey(new Integer(hResolver.getParent(h)))) {
                            childrenHits.set(h);
                         }
                     }
                } finally {
                    docs.close();
                }

                if (nameTestScorer != null) {
                    hits = new HitsIntersection(childrenHits, new ScorerHits(nameTestScorer));
                 } else {
                    hits = childrenHits;
                    // get child node entries for each hit
                    for (Iterator it = uuids.values().iterator(); it.hasNext(); ) {
                        String uuid = (String) it.next();
                        NodeId id = new NodeId(UUID.fromString(uuid));
                        try {
                            NodeState state = (NodeState) itemMgr.getItemState(id);
                            Iterator entries = state.getChildNodeEntries().iterator();
                            while (entries.hasNext()) {
                                NodeId childId = ((NodeState.ChildNodeEntry) entries.next()).getId();
                                Term uuidTerm = new Term(FieldNames.UUID, childId.getUUID().toString());
                                TermDocs docs = reader.termDocs(uuidTerm);
                                try {
                                    if (docs.next()) {
                                        childrenHits.set(docs.doc());
                                    }
                                } finally {
                                    docs.close();
                                }
                            }
                        } catch (ItemStateException e) {
                            // does not exist anymore -&gt; ignore
                        }
                    }
                 }

                hits = childrenHits;
             }
         }
 
         private boolean indexIsValid(int i) throws IOException {
             if (position != LocationStepQueryNode.NONE) {
                Document node = reader.document(i);
                Document node = reader.document(i, FieldSelectors.UUID_AND_PARENT);
                 NodeId parentId = NodeId.valueOf(node.get(FieldNames.PARENT));
                 NodeId id = NodeId.valueOf(node.get(FieldNames.UUID));
                 try {
diff --git a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java
index 2b0d3cba3..eac0155d9 100644
-- a/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java
++ b/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/DescendantSelfAxisQuery.java
@@ -24,6 +24,7 @@ import org.apache.lucene.search.Scorer;
 import org.apache.lucene.search.Searcher;
 import org.apache.lucene.search.Similarity;
 import org.apache.lucene.search.Weight;
import org.apache.lucene.search.MatchAllDocsQuery;
 
 import java.io.IOException;
 import java.util.BitSet;
@@ -52,16 +53,31 @@ class DescendantSelfAxisQuery extends Query {
     private final Query subQuery;
 
     /**
     * If &lt;code&gt;true&lt;/code&gt; this query acts on the descendant-or-self axis.
     * If &lt;code&gt;false&lt;/code&gt; this query acts on the descendant axis.
     * The minimal levels required between context and sub nodes for a sub node
     * to match.
      */</comment>
    <specifier>private</specifier> <name>final</name> <name>boolean</name> <name>includeSelf</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>minLevels</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
      * The scorer of the sub query to filter
      */</comment>
     <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>subScorer</name></decl>;</decl_stmt>
 
    <comment type="block" format="javadoc">/**
     * Creates a new &lt;code&gt;DescendantSelfAxisQuery&lt;/code&gt; based on a
     * &lt;code&gt;context&lt;/code&gt; and matches all descendants of the context nodes.
     * Whether the context nodes match as well is controlled by
     * &lt;code&gt;includeSelf&lt;/code&gt;.
     *
     * @param context     the context for this query.
     * @param includeSelf if &lt;code&gt;true&lt;/code&gt; this query acts like a
     *                    descendant-or-self axis. If &lt;code&gt;false&lt;/code&gt; this
     *                    query acts like a descendant axis.
     */</comment>
    <constructor><specifier>public</specifier> <name>DescendantSelfAxisQuery</name><parameter_list>(<parameter><decl><type><name>Query</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>includeSelf</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>includeSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

     <comment type="block" format="javadoc">/**
      * Creates a new &lt;code&gt;DescendantSelfAxisQuery&lt;/code&gt; based on a
      * &lt;code&gt;context&lt;/code&gt; query and filtering the &lt;code&gt;sub&lt;/code&gt; query.
@@ -84,9 +100,45 @@ class DescendantSelfAxisQuery extends Query {
      *                    a descendant axis.
      */</comment>
     <constructor><specifier>public</specifier> <name>DescendantSelfAxisQuery</name><parameter_list>(<parameter><decl><type><name>Query</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Query</name></type> <name>sub</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>includeSelf</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>sub</name></expr></argument>, <argument><expr><ternary><condition><expr><name>includeSelf</name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <comment type="block" format="javadoc">/**
     * Creates a new &lt;code&gt;DescendantSelfAxisQuery&lt;/code&gt; based on a
     * &lt;code&gt;context&lt;/code&gt; query and filtering the &lt;code&gt;sub&lt;/code&gt; query.
     *
     * @param context   the context for this query.
     * @param sub       the sub query.
     * @param minLevels the minimal levels required between context and sub
     *                  nodes for a sub node to match.
     */</comment>
    <constructor><specifier>public</specifier> <name>DescendantSelfAxisQuery</name><parameter_list>(<parameter><decl><type><name>Query</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>Query</name></type> <name>sub</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>minLevels</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>contextQuery</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>subQuery</name></name> <operator>=</operator> <name>sub</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>includeSelf</name></name> <operator>=</operator> <name>includeSelf</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>minLevels</name></name> <operator>=</operator> <name>minLevels</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <comment type="block" format="javadoc">/**
     * @return the context query of this &lt;code&gt;DescendantSelfAxisQuery&lt;/code&gt;.
     */</comment>
    <function><type><name>Query</name></type> <name>getContextQuery</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>contextQuery</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * @return &lt;code&gt;true&lt;/code&gt; if the sub query of this &lt;code&gt;DescendantSelfAxisQuery&lt;/code&gt;
     *         matches all nodes.
     */</comment>
    <function><type><name>boolean</name></type> <name>subQueryMatchesAll</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>subQuery</name> <operator>instanceof</operator> <name>MatchAllDocsQuery</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * @return the minimal levels required between context and sub nodes for a
     *         sub node to match.
     */</comment>
    <function><type><name>int</name></type> <name>getMinLevels</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>minLevels</name></expr>;</return>
     </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
@@ -123,10 +175,17 @@ class DescendantSelfAxisQuery extends Query {
     public Query rewrite(IndexReader reader) throws IOException {
         Query cQuery = contextQuery.rewrite(reader);
         Query sQuery = subQuery.rewrite(reader);
        if (contextQuery instanceof DescendantSelfAxisQuery) {
            DescendantSelfAxisQuery dsaq = (DescendantSelfAxisQuery) contextQuery;
            if (dsaq.subQueryMatchesAll()) {
                return new DescendantSelfAxisQuery(dsaq.getContextQuery(),
                        sQuery, dsaq.getMinLevels() + getMinLevels()).rewrite(reader);
            }
        }
         if (cQuery == contextQuery &amp;&amp; sQuery == subQuery) {
             return this;
         } else {
            return new DescendantSelfAxisQuery(cQuery, sQuery, includeSelf);
            return new DescendantSelfAxisQuery(cQuery, sQuery, minLevels);
         }
     }
 
@@ -153,6 +212,8 @@ class DescendantSelfAxisQuery extends Query {
             this.searcher = searcher;
         }
 
        //-----------------------------&lt; Weight &gt;-------------------------------

         /**
          * Returns this &lt;code&gt;DescendantSelfAxisQuery&lt;/code&gt;.
          *
@@ -330,10 +391,8 @@ class DescendantSelfAxisQuery extends Query {
          */</comment>
         <function><type><specifier>private</specifier> <name>boolean</name></type> <name>isValid</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <comment type="line">// check self if necessary</comment>
            <if_stmt><if>if <condition>(<expr><name>includeSelf</name></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>contextHits</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            <if_stmt><if>if <condition>(<expr><name>minLevels</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name><name>contextHits</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
             </block_content>}</block></if></if_stmt>
 
             <comment type="line">// check if doc is a descendant of one of the context nodes</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">343</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">402</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>DescendantSelfAxisQuery</name> extends <name>Query</name> <block>{
             <expr><name><name>ancestorDocs</name><index>[<expr><name>ancestorCount</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>parentDoc</name></expr>;</block></expr></expr_stmt>
 
             <comment type="line">// traverse</comment>
            <while>while <condition>(<expr><name>parentDoc</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>contextHits</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>parentDoc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <while>while <condition>(<expr><name>parentDoc</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <operator>(</operator><operator>!</operator><call><name><name>contextHits</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>parentDoc</name></expr></argument>)</argument_list></call> <operator>||</operator> <name>ancestorCount</name> <operator>&lt;</operator> <name>minLevels</name><operator>)</operator></expr>)</condition> <block>{<block_content>
                 <expr_stmt><expr><name>parentDoc</name> <operator>=</operator> <call><name><name>hResolver</name><operator>.</operator><name>getParent</name></name><argument_list>(<argument><expr><name>parentDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <comment type="line">// resize array if needed</comment>
                 <if_stmt><if>if <condition>(<expr><name>ancestorCount</name> <operator>==</operator> <name><name>ancestorDocs</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryBuilder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryBuilder</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">20c765306</literal><operator>..</operator><name>b0692094f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryBuilder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>query</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>LuceneQueryBuilder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanClause</name><operator>.</operator><name>Occur</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MatchAllDocsQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">556</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">557</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>LuceneQueryBuilder</name> implements <name>QueryNodeVisitor</name> <block>{
                     }</block></expr></expr_stmt>
                 </block_content>}</block></if> <else>else <block>{<block_content>
                     <comment type="line">// todo this will traverse the whole index, optimize!</comment>
                    <decl_stmt><decl><type><name>Query</name></type> <name>subQuery</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
                    <try>try <block>{<block_content>
                        <expr_stmt><expr><name>subQuery</name> <operator>=</operator> <call><name>createMatchAllQuery</name><argument_list>(<argument><expr><call><name><name>resolver</name><operator>.</operator><name>getJCRName</name></name><argument_list>(<argument><expr><name><name>NameConstants</name><operator>.</operator><name>JCR_PRIMARYTYPE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NamespaceException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                        <comment type="line">// will never happen, prefixes are created when unknown</comment>
                    </block_content>}</block></catch></try>
                     <comment type="line">// only use descendant axis if path is not //*</comment>
                     <decl_stmt><decl><type><name>PathQueryNode</name></type> <name>pathNode</name> <init>= <expr><operator>(</operator><name>PathQueryNode</name><operator>)</operator> <call><name><name>node</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                     <if_stmt><if>if <condition>(<expr><call><name><name>pathNode</name><operator>.</operator><name>getPathSteps</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index> <operator>!=</operator> <name>node</name></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><name>context</name> <operator>=</operator> <operator>new</operator> <call><name>DescendantSelfAxisQuery</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>subQuery</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name>andQuery</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ChildAxisQuery</name><argument_list>(<argument><expr><name>sharedItemMgr</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>node</name><operator>.</operator><name>getIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Occur</name><operator>.</operator><name>MUST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt><if>if <condition>(<expr><call><name><name>node</name><operator>.</operator><name>getIndex</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>LocationStepQueryNode</name><operator>.</operator><name>NONE</name></name></expr>)</condition> <block>{<block_content>
                            <expr_stmt><expr><name>context</name> <operator>=</operator> <operator>new</operator> <call><name>DescendantSelfAxisQuery</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>andQuery</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>Occur</name><operator>.</operator><name>MUST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        </block_content>}</block></if> <else>else <block>{<block_content>
                            <expr_stmt><expr><name>context</name> <operator>=</operator> <operator>new</operator> <call><name>DescendantSelfAxisQuery</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name>andQuery</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ChildAxisQuery</name><argument_list>(<argument><expr><name>sharedItemMgr</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>node</name><operator>.</operator><name>getIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Occur</name><operator>.</operator><name>MUST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        </block_content>}</block></else></if_stmt>
                     </block_content>}</block></if> <else>else <block>{<block_content>
                        <expr_stmt><expr><call><name><name>andQuery</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>subQuery</name></expr></argument>, <argument><expr><name><name>Occur</name><operator>.</operator><name>MUST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name>andQuery</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Occur</name><operator>.</operator><name>MUST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                     </block_content>}</block></else></if_stmt>
                 </block_content>}</block></else></if_stmt>
             </block_content>}</block></while>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></while></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function>

</unit>
