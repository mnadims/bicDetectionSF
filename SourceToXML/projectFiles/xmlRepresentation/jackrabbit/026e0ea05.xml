<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/026e0ea05.java"><expr_stmt><expr><name>From</name> <literal type="number">026e0ea05f8d7399d1c15dcfc9be0b823d85b60c</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Thomas</name> <name><name>Mueller</name> <argument_list type="generic">&lt;<argument><name>thomasm</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">7</literal> <name>Feb</name> <literal type="number">2011</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">47</literal><operator>:</operator><literal type="number">50</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">2882</literal> <name>DatabaseJournal</name><operator>:</operator> <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>IllegalStateException</name></name><operator>:</operator>
 <name>already</name> <name>in</name> <name>batch</name> <name>mode</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@1067983 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>                       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>DatabaseJournal</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">64</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>db</name><operator>/</operator><name><name>ConnectionHelper</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">68</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>DbClusterTest</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">80</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name>repository</name><operator>-</operator><name><name>h2</name><operator>.</operator><name>xml</name></name> <operator>|</operator> <literal type="number">171</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <literal type="number">6</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">319</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">67</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>DbClusterTest</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name>repository</name><operator>-</operator><name><name>h2</name><operator>.</operator><name>xml</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<name>index</name> <literal type="number">3948010d1</literal><operator>..</operator><literal type="number">4f367a927</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name><name>pom</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">290</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">290</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>api</name><operator>.</operator><name>ShareableNodeTest</name></name><operator>#</operator><name><name>testGetNodesByPattern</name>
     <argument_list type="generic">&lt;<argument><name>dependency</name></argument>&gt;</argument_list></name>
       <operator>&lt;</operator><name>groupId</name><operator>&gt;</operator><name><name>com</name><operator>.</operator><name><name>h2database</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>groupId</name></argument>&gt;</argument_list></name></name>
       <operator>&lt;</operator><name>artifactId</name><operator>&gt;</operator><name><name>h2</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>artifactId</name></argument>&gt;</argument_list></name>
      <operator>&lt;</operator><name>version</name><operator>&gt;</operator><literal type="number">1.2.121</literal><operator>&lt;</operator><operator>/</operator><name>version</name><operator>&gt;</operator>
      <operator>&lt;</operator><name>version</name><operator>&gt;</operator><literal type="number">1.3.149</literal><operator>&lt;</operator><operator>/</operator><name>version</name><operator>&gt;</operator>
       <operator>&lt;</operator><name>scope</name><operator>&gt;</operator><name><name>test</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>scope</name></argument>&gt;</argument_list></name>
     <operator>&lt;</operator><operator>/</operator><name>dependency</name><operator>&gt;</operator>
   <operator>&lt;</operator><operator>/</operator><name>dependencies</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>DatabaseJournal</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>DatabaseJournal</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7c43d2ab9</literal><operator>..</operator><literal type="number">7ba58ab71</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>DatabaseJournal</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>DatabaseJournal</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
     <comment type="block" format="javadoc">/**
      * Logger.
      */</comment>
    <expr><specifier>private</specifier> <specifier>static</specifier> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>DatabaseJournal</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><specifier>static</specifier> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>DatabaseJournal</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="block" format="javadoc">/**
      * Driver name, bean property.
@@ -128,7 +128,7 @@ public class DatabaseJournal extends AbstractJournal implements DatabaseAware {
     /**
      * The connection helper
      */</comment>
    <expr><specifier>private</specifier> <name>ConnectionHelper</name> <name>conHelper</name></expr>;
    <expr><name>ConnectionHelper</name> <name>conHelper</name></expr>;
 
     <comment type="block" format="javadoc">/**
      * Auto commit level.
@@ -148,13 +148,14 @@ public class DatabaseJournal extends AbstractJournal implements DatabaseAware {
     /**
      * The sleep time of the revision table janitor in seconds, 1 day default.
      */</comment>
    <expr><specifier>private</specifier> <name>int</name> <name>janitorSleep</name> <operator>=</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">24</literal></expr>;
    <expr><name>int</name> <name>janitorSleep</name> <operator>=</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">24</literal></expr>;
 
     <comment type="block" format="javadoc">/**
      * Indicates when the next run of the janitor is scheduled.
      * The first run is scheduled by default at 03:00 hours.
      */</comment>
    <expr><specifier>private</specifier> <name>Calendar</name> <name>janitorNextRun</name> <operator>=</operator> <call><name><name>Calendar</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>Calendar</name> <name>janitorNextRun</name> <operator>=</operator> <call><name><name>Calendar</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr>;

     <expr><block>{
         <if_stmt><if>if <condition>(<expr><call><name><name>janitorNextRun</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>Calendar</name><operator>.</operator><name>HOUR_OF_DAY</name></name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>janitorNextRun</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>Calendar</name><operator>.</operator><name>DAY_OF_MONTH</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">207</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
      <expr><operator>*</operator> <name>SQL</name> <name>statement</name> <name>removing</name> <name>a</name> <name>set</name> <name>of</name> <name>revisions</name> <name>with</name> <name>from</name> <name>the</name> <name>journal</name> <name><name>table</name><operator>.</operator></name>
      *<operator>/</operator>
     <specifier>protected</specifier> <name>String</name> <name>cleanRevisionStmtSQL</name></expr>;
    

     <comment type="block" format="javadoc">/**
      * SQL statement returning the local revision of this cluster node.
      */</comment>
     <specifier>protected</specifier> <name>String</name> <name>getLocalRevisionStmtSQL</name></block></expr>;</expr_stmt>
    

     <comment type="block" format="javadoc">/**
     * SQL statement for inserting the local revision of this cluster node. 
     * SQL statement for inserting the local revision of this cluster node.
      */</comment>
     <decl_stmt><decl><type><specifier>protected</specifier> <name>String</name></type> <name>insertLocalRevisionStmtSQL</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/**
     * SQL statement for updating the local revision of this cluster node. 
     * SQL statement for updating the local revision of this cluster node.
      */</comment>
     <decl_stmt><decl><type><specifier>protected</specifier> <name>String</name></type> <name>updateLocalRevisionStmtSQL</name></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">292</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
      <expr><operator>*</operator> <name>This</name> <name>method</name> <name>is</name> <name>called</name> <name>from</name> <name>the</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>init</name><argument_list>(<argument><expr><name>String</name></expr></argument>, <argument><expr><name>NamespaceResolver</name></expr></argument>)</argument_list></call></expr>}</block> <name>method</name> <name>of</name> <name>this</name> <name>class</name> <name>and</name>
      <operator>*</operator> <name>returns</name> <name>a</name> <block>{@<expr><name>link</name> <name>ConnectionHelper</name></expr>}</block> <name>instance</name> <name>which</name> <name>is</name> <name>assigned</name> <name>to</name> <name>the</name> <block>{@<expr><name>code</name> <name>conHelper</name></expr>}</block> <name><name>field</name><operator>.</operator></name>
      * <name>Subclasses</name> <name>may</name> <name>override</name> <name>it</name> <name>to</name></expr> <return>return <expr><name>a</name> <name>specialized</name> <name>connection</name> <name><name>helper</name><operator>.</operator></name>
     * 
     <operator>*</operator>
      <operator>*</operator> @<name>param</name> <name>dataSrc</name> <name>the</name> <block>{@<expr><name>link</name> <name>DataSource</name></expr>}</block> <name>of</name> <name>this</name> <name>persistence</name> <name>manager</name>
      <operator>*</operator> @</expr></return><return>return <expr><name>a</name> <block>{@<expr><name>link</name> <name>ConnectionHelper</name></expr>}</block>
      <operator>*</operator> @<throws>throws <argument><expr><name>Exception</name> <name>on</name> <name>error</name></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">304</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">305</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><operator>*</operator> <name>This</name> <name>method</name> <name>is</name> <name>called</name> <name>from</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>init</name><argument_list>(<argument><expr><name>String</name></expr></argument>, <argument><expr><name>NamespaceResolver</name></expr></argument>)</argument_list></call></expr>}</block> <name>after</name> <name>the</name>
      <operator>*</operator> <block>{@<expr><name>link</name> <operator>#</operator><call><name>createConnectionHelper</name><argument_list>(<argument><expr><name>DataSource</name></expr></argument>)</argument_list></call></expr>}</block> <name>method</name></expr><operator>,</operator> <expr><name>and</name> <name>returns</name> <name>a</name> default <block>{@<expr><name>link</name> <name>CheckSchemaOperation</name></expr>}</block><operator>.</operator>
      <operator>*</operator> <name>Subclasses</name> <name>can</name> <name>overrride</name> <name>this</name> <name>implementation</name> <name>to</name> <name>get</name> <name>a</name> <name>customized</name> <name><name>implementation</name><operator>.</operator></name>
     * 
     <operator>*</operator>
      <operator>*</operator> @</expr></expr_stmt><return>return <expr><name>a</name> <operator>new</operator> <block>{@<expr><name>link</name> <name>CheckSchemaOperation</name></expr>}</block> <name>instance</name>
      <operator>*</operator><operator>/</operator>
     <specifier>protected</specifier> <name>CheckSchemaOperation</name> <call><name>createCheckSchemaOperation</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">446</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">447</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
     @<expr><name>Override</name>
     <specifier>protected</specifier> <name>void</name> <call><name>doSync</name><argument_list>(<argument><expr><name>long</name> <name>startRevision</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>JournalException</name> <block>{</block></expr></argument></throws></expr>
         <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>conHelper</name><operator>.</operator><name>startBatch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>startBatch</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <try>try <block>{<block_content>
                 <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>doSync</name></name><argument_list>(<argument><expr><name>startRevision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></try></block_content></block></try></block></expr>}</block></expr></return> <finally>finally <block>{<block_content>
                <expr_stmt><expr><call><name><name>conHelper</name><operator>.</operator><name>endBatch</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>endBatch</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></finally></block_content></block></expr></return></block></expr></expr_stmt></block_content></block></if></if_stmt>}</block></expr>
         }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>SQLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>JournalException</name><argument_list>(<argument><expr><literal type="string">"Couldn't sync the cluster node"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">470</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">471</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
         <expr><name>boolean</name> <name>succeeded</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
 
         <try>try <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>lockLevel</name><operator>++</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>conHelper</name><operator>.</operator><name>startBatch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></try>}</block>
            <call><name>startBatch</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>SQLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>JournalException</name><argument_list>(<argument><expr><literal type="string">"Unable to set autocommit to false."</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">485</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">484</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
             }</block>
             <name>lockedRevision</name> <operator>=</operator> <call><name><name>rs</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><name>succeeded</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>

         } catch <expr_stmt><expr><operator>(</operator><name>SQLException</name> <name>e</name><operator>)</operator> <block>{
             <throw>throw <argument_list>new <argument><expr><call><name>JournalException</name><argument_list>(<argument><expr><literal type="string">"Unable to lock global revision table."</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
         }</block></expr></expr_stmt> <finally>finally <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">500</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">498</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
      <expr><operator>*</operator> <block>{@<expr><name>inheritDoc</name></expr>}</block>
      <operator>*</operator><operator>/</operator>
     <specifier>protected</specifier> <name>void</name> <call><name>doUnlock</name><argument_list>(<argument><expr><name>boolean</name> <name>successful</name></expr></argument>)</argument_list></call> <block>{
        <expr><call><name>endBatch</name><argument_list>(<argument><expr><name>successful</name></expr></argument>)</argument_list></call></expr>;
    }</block>

    <specifier>private</specifier> <name>void</name> <call><name>startBatch</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>SQLException</name> <block>{</block></expr></argument></throws></expr>
        <if_stmt><if>if <condition>(<expr><name>lockLevel</name><operator>++</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>conHelper</name><operator>.</operator><name>startBatch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
    </block_content>}</block></finally>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>endBatch</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>successful</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><operator>--</operator><name>lockLevel</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
             <try>try <block>{<block_content>
                 <expr_stmt><expr><call><name><name>conHelper</name><operator>.</operator><name>endBatch</name></name><argument_list>(<argument><expr><name>successful</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt>;</empty_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">622</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">630</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
 
     <comment type="block" format="javadoc">/**
      * Get the database type.
     * 
     *
      * @return the database type
      */</comment>
     <expr><specifier>public</specifier> <name>String</name> <call><name>getDatabaseType</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">633</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">641</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
      <expr><operator>*</operator> <name>Get</name> <name>the</name> <name>database</name> <name><name>type</name><operator>.</operator></name>
      * @<name>deprecated</name>
      <operator>*</operator> <name>This</name> <name>method</name> <name>is</name> <name>deprecated</name></expr>; <block>{@<expr><name>link</name> <operator>#</operator><name>getDatabaseType</name></expr>}</block></block> <name>should</name> <name>be</name> <name>used</name> <name><name>instead</name><operator>.</operator></name>
     * 
     <operator>*</operator>
      <operator>*</operator> @</expr><return>return <expr><name>the</name> <name>database</name> <name>type</name>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>String</name> <call><name>getSchema</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">677</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">685</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
 
     <comment type="block" format="javadoc">/**
      * Set the database type.
     * 
     *
      * @param databaseType the database type
      */</comment>
     <expr><specifier>public</specifier> <name>void</name> <call><name>setDatabaseType</name><argument_list>(<argument><expr><name>String</name> <name>databaseType</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">688</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">696</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
      <expr><operator>*</operator> <name>Set</name> <name>the</name> <name>database</name> <name><name>type</name><operator>.</operator></name>
     * @<name>deprecated</name>
     <operator>*</operator> <name>This</name> <name>method</name> <name>is</name> <name>deprecated</name></expr>; <block>{@<expr><name>link</name> <operator>#</operator><name>getDatabaseType</name></expr>}</block></block> <name>should</name> <name>be</name> <name>used</name> <name><name>instead</name><operator>.</operator></name>
     * 
     <operator>*</operator>
      <operator>*</operator> @<name>param</name> <name>databaseType</name> <name>the</name> <name>database</name> <name>type</name>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>void</name> <call><name>setSchema</name><argument_list>(<argument><expr><name>String</name> <name>databaseType</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">761</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">769</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
         <expr><specifier>private</specifier> <name>long</name> <name>localRevision</name></expr>;
 
         <comment type="block" format="javadoc">/**
         * Indicates whether the init method has been called. 
         * Indicates whether the init method has been called.
          */</comment>
         <specifier>private</specifier> <name>boolean</name> <name>initialized</name> <operator>=</operator> <literal type="boolean">false</literal></block></expr>;
 
@@ <operator>-</operator><literal type="number">801</literal><operator>,</operator><literal type="number">9</literal> <operator>+</operator><literal type="number">809</literal><operator>,</operator><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
             }</block></block></expr>
         }</block>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
         <specifier>public</specifier> <specifier>synchronized</specifier> <name>long</name> <call><name>get</name><argument_list>()</argument_list></call> <block>{
             <if_stmt><if>if <condition>(<expr><operator>!</operator><name>initialized</name></expr>)</condition> <block>{<block_content>
                 <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"instance has not yet been initialized"</literal></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">811</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">816</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
             <return>return <expr><name>localRevision</name></expr>;</return></block></expr></expr_stmt></block_content></block></if></if_stmt></block></expr>
         }</block>
 
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>
         <specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name> <call><name>set</name><argument_list>(<argument><expr><name>long</name> <name>localRevision</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>JournalException</name> <block>{</block></expr></argument></throws></expr>
 
             <if_stmt><if>if <condition>(<expr><operator>!</operator><name>initialized</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">829</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">831</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
                 <throw>throw <argument_list>new <argument><expr><call><name>JournalException</name><argument_list>(<argument><expr><literal type="string">"Failed to update local revision."</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;</block></expr></expr_stmt></block_content></block></if></if_stmt></block></expr></return></block></expr>
             }</block></expr></expr_stmt>
         </block_content>}</block></try>
        
        <comment type="block" format="javadoc">/**
         * {@inheritDoc}
         */</comment>

         <function><type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{<block_content>
            <comment type="line">// nothing to do</comment>
         </block_content>}</block></function>
     </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">863</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">863</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DatabaseJournal</name> extends <name>AbstractJournal</name> implements <name>DatabaseAware</name> <block>{
             }</block>
             <call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Interrupted: stopping clean-up task."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></function>
        

         <comment type="block" format="javadoc">/**
          * Cleans old revisions from the clustering table.
          */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>db</name><operator>/</operator><name><name>ConnectionHelper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>db</name><operator>/</operator><name><name>ConnectionHelper</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">266b3aa50</literal><operator>..</operator><literal type="number">41a6394f6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>db</name><operator>/</operator><name><name>ConnectionHelper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>util</name><operator>/</operator><name>db</name><operator>/</operator><name><name>ConnectionHelper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>This</name> <name>class</name> <name>provides</name> <name>convenience</name> <name>methods</name> <name>to</name> <name>execute</name> <name>SQL</name> <name><name>statements</name><operator>.</operator> <name>They</name></name> <name>can</name> <name>be</name> <name>either</name> <name>executed</name> <name>in</name> <name>isolation</name>
  <operator>*</operator> <name>or</name> <name>within</name> <name>the</name> <name>context</name> <name>of</name> <name>a</name> <name>JDBC</name> <name>transaction</name></expr>;</expr_stmt> <expr_stmt><expr><name>the</name> <name>so</name><operator>-</operator><name><name>called</name> <argument_list type="generic">&lt;<argument><name>i</name></argument>&gt;</argument_list></name><name>batch</name> <call><name><name>mode</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>i</name></argument>&gt;</argument_list></name> <argument_list>(<argument><expr><name>use</name> <name>the</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>startBatch</name><argument_list>()</argument_list></call></expr>}</block>
  <operator>*</operator> <name>and</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>endBatch</name><argument_list>(<argument><expr><name>boolean</name></expr></argument>)</argument_list></call></expr>}</block> <name>methods</name></expr></argument> <for>for this</for>)</argument_list></call><operator>.</operator>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <operator>&lt;</operator><name>p</name><operator>/</operator><operator>&gt;</operator>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <name>This</name> <name>class</name> <name>contains</name> <name>logic</name> <name>to</name> <name>retry</name> <name>execution</name> <name>of</name> <name>SQL</name> <name><name>statements</name><operator>.</operator> <name>If</name></name> <name>this</name> <name>helper</name> <name><name>is</name> <argument_list type="generic">&lt;<argument><name>i</name></argument>&gt;</argument_list></name><name><name>not</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>i</name></argument>&gt;</argument_list></name> <name>in</name> <name>batch</name> <name>mode</name>
  <operator>*</operator> <name>and</name></expr></expr_stmt> <if_stmt><if>if a statement fails due to an <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>SQLException</name></expr></block_content>}</block></if></if_stmt><operator>,</operator> <decl_stmt><decl><type><name>then</name> <name>it</name> <name>is</name> <name><name>retried</name><operator>.</operator> <name>If</name></name></type> <name>the</name> <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>block</name></expr></block_content>}</block></decl></decl_stmt> <expr_stmt><expr><name>argument</name>
  <operator>*</operator> <name>of</name> <name>the</name> <name>constructor</name> <name>call</name> <name>was</name> <block>{@<expr><name>code</name> <literal type="boolean">false</literal></expr>}</block> <name>then</name> <name>it</name> <name>is</name> <name>retried</name> <name>only</name> <name><name>once</name><operator>.</operator> <name>Otherwise</name></name> <name>the</name> <name>statement</name> <name>is</name> <name>retried</name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><block>{@<expr><name>link</name> <operator>#</operator><call><name>update</name><argument_list>(<argument><expr><name>String</name></expr></argument>, <argument><expr><name><name>Object</name><index>[]</index></name></expr></argument>)</argument_list></call></expr>}</block><operator>&lt;</operator><operator>/</operator><name>li</name><operator>&gt;</operator>
  <operator>*</operator> <operator>&lt;</operator><name>li</name><operator>&gt;</operator><block>{@<expr><name>link</name> <operator>#</operator><call><name>exec</name><argument_list>(<argument><expr><name>String</name></expr></argument>, <argument><expr><name><name>Object</name><index>[]</index></name></expr></argument>, <argument><expr><name>boolean</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call></expr>}</block><operator>&lt;</operator><operator>/</operator><name>li</name><operator>&gt;</operator>
  <operator>*</operator> <operator>&lt;</operator><operator>/</operator><name>ul</name><operator>&gt;</operator>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <operator>&lt;</operator><name>p</name><operator>/</operator><operator>&gt;</operator>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <name>This</name> <name>class</name> <name>is</name> <name>not</name> <name>thread</name><operator>-</operator><name>safe</name> <name>and</name></expr></expr_stmt> <if_stmt><if>if it is to be used by multiple threads then the clients must make sure
  * that access to this class is properly synchronized.
 * 
 *
  * &lt;p/&gt;
 * 
 *
  * &lt;strong&gt;Implementation note&lt;/strong&gt;: The <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>Connection</name></expr></block_content>}</block></if></if_stmt> <decl_stmt><decl><type><name>that</name> <name>is</name> <name>retrieved</name> <name>from</name></type> <name>the</name> <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>DataSource</name></expr></block_content>}</block></decl></decl_stmt>
  <expr_stmt><expr><operator>*</operator> <name>in</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>getConnection</name><argument_list>()</argument_list></call></expr>}</block> <name>may</name> <name>be</name> <name><name>broken</name><operator>.</operator> <name>This</name></name> <name>is</name> <name>so</name> <name>because</name></expr></expr_stmt> <if_stmt><if>if an internal <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>DataSource</name></expr></block_content>}</block></if></if_stmt> <decl_stmt><decl><type><name>is</name></type> <name>used</name></decl>,
  <decl><type ref="prev"><modifier>*</modifier></type> <name>then</name> <name>this</name> <name>is</name> <name>a</name> <name>commons</name>-<name>dbcp</name> <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>DataSource</name></expr></block_content>}</block></decl></decl_stmt> <decl_stmt><decl><type><name>with</name> <name><name>a</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>testWhileIdle</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name> <name>validation</name></type> <name>strategy</name> <argument_list>(<argument><expr><name>see</name>
@@ <operator>-</operator><literal type="number">64</literal></expr></argument>,<argument><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">64</literal></expr></argument>,<argument><expr><literal type="number">13</literal> @@</expr></argument> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import></argument_list></decl></decl_stmt>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>ConnectionHelper</name> <block>{
 
    <expr><specifier>private</specifier> <specifier>static</specifier> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>ConnectionHelper</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><specifier>static</specifier> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>ConnectionHelper</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>RETRIES</name> <operator>=</operator> <literal type="number">1</literal></expr>;
 
     <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>SLEEP_BETWEEN_RETRIES_MS</name> <operator>=</operator> <literal type="number">100</literal></expr>;
 
    <expr><specifier>private</specifier> <name>final</name> <name>boolean</name> <name>blockOnConnectionLoss</name></expr>;
    <expr><name>final</name> <name>boolean</name> <name>blockOnConnectionLoss</name></expr>;
 
     <expr><specifier>private</specifier> <name>final</name> <name>boolean</name> <name>checkTablesWithUserName</name></expr>;
 
@@ <expr><operator>-</operator><literal type="number">99</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">99</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionHelper</name> <block>{
         <expr><name>checkTablesWithUserName</name> <operator>=</operator> <name>checkWithUserName</name></expr>;
         <expr><name>blockOnConnectionLoss</name> <operator>=</operator> <name>block</name></expr>;
     }</block>
    

     <comment type="block" format="javadoc">/**
      * A utility method that makes sure that &lt;code&gt;identifier&lt;/code&gt; does only consist of characters that are
      * allowed in names on the target database. Illegal characters will be escaped as necessary.
     * 
     *
      * This method is not affected by the
     * 
     *
      * @param identifier the identifier to convert to a db specific identifier
      * @return the db-normalized form of the given identifier
      * @throws SQLException if an error occurs
@@ -132,7 +132,7 @@ public class ConnectionHelper {
     /**
      * Called from {@link #prepareDbIdentifier(String)}. Default implementation replaces the illegal
      * characters with their hexadecimal encoding.
     * 
     *
      * @param escaped the escaped db identifier
      * @param c the character to replace
      */</comment>
@@ <operator>-</operator><literal type="number">155</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">155</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionHelper</name> <block>{
 
     <comment type="block" format="javadoc">/**
      * The default implementation returns the {@code extraNameCharacters} provided by the databases metadata.
     * 
     *
      * @return the additional characters for identifiers supported by the db
      * @throws SQLException on error
      */</comment>
@@ <expr><operator>-</operator><literal type="number">171</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">171</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionHelper</name> <block>{
 
     <comment type="block" format="javadoc">/**
      * Checks whether the given table exists in the database.
     * 
     *
      * @param tableName the name of the table
      * @return whether the given table exists
      * @throws SQLException on error
@@ -204,12 +204,12 @@ public class ConnectionHelper {
      * Starts the &lt;i&gt;batch mode&lt;/i&gt;. If an {@link SQLException} is thrown, then the batch mode is not started. &lt;p/&gt;
      * &lt;strong&gt;Important:&lt;/strong&gt; clients that call this method must make sure that
      * {@link #endBatch(boolean)} is called eventually.
     * 
     *
      * @throws SQLException on error
      */</comment>
     <expr><specifier>public</specifier> <name>final</name> <name>void</name> <call><name>startBatch</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>SQLException</name> <block>{</block></expr></argument></throws></expr>
         <if_stmt><if>if <condition>(<expr><call><name>inBatchMode</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"already in batch mode"</literal></expr></argument>)</argument_list></call></expr>;</throw>
            <throw>throw <expr><operator>new</operator> <call><name>SQLException</name><argument_list>(<argument><expr><literal type="string">"already in batch mode"</literal></expr></argument>)</argument_list></call></expr>;</throw>
         <expr_stmt/></block_content></block></if></if_stmt>}</block>
         <name>Connection</name> <name>batchConnection</name> <operator>=</operator> <literal type="null">null</literal></expr>;
         <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionHelper</name> <block>{
 
     <comment type="block" format="javadoc">/**
      * This method always ends the &lt;i&gt;batch mode&lt;/i&gt;.
     * 
     *
      * @param commit whether the changes in the batch should be committed or rolled back
      * @throws SQLException if the commit or rollback of the underlying JDBC Connection threw an {@code
      *             SQLException}
@@ -251,7 +251,7 @@ public class ConnectionHelper {
 
     /**
      * Executes a general SQL statement and immediately closes all resources.
     * 
     *
      * Note: We use a Statement if there are no parameters to avoid a problem on
      * the Oracle 10g JDBC driver w.r.t. :NEW and :OLD keywords that triggers ORA-17041.
      *
@@ -267,11 +267,11 @@ public class ConnectionHelper {
                 reallyExec(sql, params);
                 return null;
             }
            

         }.doTry();
     }
    
    private void reallyExec(String sql, Object... params) throws SQLException {

    void reallyExec(String sql, Object... params) throws SQLException {
         Connection con = null;
         Statement stmt = null;
         try {
@@ -290,7 +290,7 @@ public class ConnectionHelper {
 
     /**
      * Executes an update or delete statement and returns the update count.
     * 
     *
      * @param sql an SQL statement string
      * @param params the parameters for the SQL statement
      * @return the update count
@@ -303,11 +303,11 @@ public class ConnectionHelper {
             protected Integer call() throws SQLException {
                 return reallyUpdate(sql, params);
             }
            

         }.doTry();
     }
 
    private int reallyUpdate(String sql, Object[] params) throws SQLException {
    int reallyUpdate(String sql, Object[] params) throws SQLException {
         Connection con = null;
         PreparedStatement stmt = null;
         try {
@@ -322,7 +322,7 @@ public class ConnectionHelper {
     /**
      * Executes a general SQL statement and returns the {@link ResultSet} of the executed statement. The
      * returned {@link ResultSet} should be closed by clients.
     * 
     *
      * @param sql an SQL statement string
      * @param params the parameters for the SQL statement
      * @param returnGeneratedKeys whether generated keys should be returned
@@ -338,11 +338,11 @@ public class ConnectionHelper {
             protected ResultSet call() throws SQLException {
                 return reallyExec(sql, params, returnGeneratedKeys, maxRows);
             }
            

         }.doTry();
     }
    
    private ResultSet reallyExec(String sql, Object[] params, boolean returnGeneratedKeys, int maxRows)

    ResultSet reallyExec(String sql, Object[] params, boolean returnGeneratedKeys, int maxRows)
             throws SQLException {
         Connection con = null;
         PreparedStatement stmt = null;
@@ -381,7 +381,7 @@ public class ConnectionHelper {
      * Gets a connection based on the {@code batchMode} state of this helper. The connection should be closed
      * by a call to {@link #closeResources(Connection, Statement, ResultSet)} which also takes the {@code
      * batchMode} state into account.
     * 
     *
      * @return a {@code Connection} to use, based on the batch mode state
      * @throws SQLException on error
      */</comment>
@@ <expr><operator>-</operator><literal type="number">400</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">400</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionHelper</name> <block>{
 
     <comment type="block" format="javadoc">/**
      * Closes the given resources given the {@code batchMode} state.
     * 
     *
      * @param con the {@code Connection} obtained through the {@link #getConnection()} method
      * @param stmt a {@code Statement}
      * @param rs a {@code ResultSet}
@@ -418,7 +418,7 @@ public class ConnectionHelper {
      * implementation sets all parameters and unwraps {@link StreamWrapper} instances. Subclasses may override
      * this method to do something special with the parameters. E.g., the {@link Oracle10R1ConnectionHelper}
      * overrides it in order to add special blob handling.
     * 
     *
      * @param stmt the {@link PreparedStatement} to execute
      * @param params the parameters
      * @return the executed statement
@@ -438,10 +438,10 @@ public class ConnectionHelper {
         stmt.execute();
         return stmt;
     }
    

     /**
      * This class encapsulates the logic to retry a method invocation if it threw an SQLException.
     * 
     *
      * @param &lt;T&gt; the return type of the method which is retried if it failed
      */</comment>
     <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>RetryManager</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <block>{
@@ <expr><operator>-</operator><literal type="number">475</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">475</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionHelper</name> <block>{
                 <throw>throw <argument_list>lastException</argument_list></throw>;
             }</block></expr>
         }</block>
        

         <specifier>protected</specifier> <specifier>abstract</specifier> <name>T</name> <call><name>call</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws></expr>;
     }</block></expr>
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>DbClusterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>DbClusterTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..78d4ad772</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>DbClusterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">80</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>cluster</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Session</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>SimpleCredentials</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>RepositoryImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>config</name><operator>.</operator><name>RepositoryConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>JUnitTest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>h2</name><operator>.</operator><name>tools</name><operator>.</operator><name>Server</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Tests clustering with a database.
 */</comment>
<class><specifier>public</specifier> class <name>DbClusterTest</name> <super_list><extends>extends <super><name>JUnitTest</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><name>Server</name></type> <name>server1</name></decl>, <decl><type ref="prev"/><name>server2</name></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name>deleteAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>server1</name> <operator>=</operator> <call><name><name>Server</name><operator>.</operator><name>createTcpServer</name></name><argument_list>(<argument><expr><literal type="string">"-tcpPort"</literal></expr></argument>, <argument><expr><literal type="string">"9001"</literal></expr></argument>, <argument><expr><literal type="string">"-baseDir"</literal></expr></argument>,
                <argument><expr><literal type="string">"./target/dbClusterTest/db1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>start</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>server2</name> <operator>=</operator> <call><name><name>Server</name><operator>.</operator><name>createTcpServer</name></name><argument_list>(<argument><expr><literal type="string">"-tcpPort"</literal></expr></argument>, <argument><expr><literal type="string">"9002"</literal></expr></argument>, <argument><expr><literal type="string">"-baseDir"</literal></expr></argument>,
                <argument><expr><literal type="string">"./target/dbClusterTest/db2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>start</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./src/test/resources/org/apache/jackrabbit/core/cluster/repository-h2.xml"</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./target/dbClusterTest/node1/repository.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./src/test/resources/org/apache/jackrabbit/core/cluster/repository-h2.xml"</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./target/dbClusterTest/node2/repository.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></function></block></class></block_content></block></try>}</block>

    <specifier>public</specifier> <name>void</name> <call><name>tearDown</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><call><name><name>server1</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
        <expr><call><name><name>server2</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;
        <expr><call><name>deleteAll</name><argument_list>()</argument_list></call></expr>;
    }</block>

    <specifier>private</specifier> <name>void</name> <call><name>deleteAll</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><call><name><name>FileUtils</name><operator>.</operator><name>deleteDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./target/dbClusterTest"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    }

    public <function><type><name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>RepositoryImpl</name></type> <name>rep1</name> <init>= <expr><call><name><name>RepositoryImpl</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name><name>RepositoryConfig</name><operator>.</operator><name>create</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./target/dbClusterTest/node1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>RepositoryImpl</name></type> <name>rep2</name> <init>= <expr><call><name><name>RepositoryImpl</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name><name>RepositoryConfig</name><operator>.</operator><name>create</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./target/dbClusterTest/node2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Session</name></type> <name>s1</name> <init>= <expr><call><name><name>rep1</name><operator>.</operator><name>login</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SimpleCredentials</name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal><operator>.</operator><call><name>toCharArray</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Session</name></type> <name>s2</name> <init>= <expr><call><name><name>rep2</name><operator>.</operator><name>login</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SimpleCredentials</name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal><operator>.</operator><call><name>toCharArray</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>s1</name><operator>.</operator><name>getRootNode</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addNode</name><argument_list>(<argument><expr><literal type="string">"test1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>s2</name><operator>.</operator><name>getRootNode</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addNode</name><argument_list>(<argument><expr><literal type="string">"test2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>s1</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>s2</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>s1</name><operator>.</operator><name>refresh</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>s2</name><operator>.</operator><name>refresh</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>s1</name><operator>.</operator><name>getRootNode</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNode</name><argument_list>(<argument><expr><literal type="string">"test2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>s2</name><operator>.</operator><name>getRootNode</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNode</name><argument_list>(<argument><expr><literal type="string">"test1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rep1</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rep2</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8e7983e59</literal><operator>..</operator><name>da45f3719</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAll</name> extends <name>TestCase</name> <block>{
         <expr><name>TestSuite</name> <name>suite</name> <operator>=</operator> <operator>new</operator> <call><name>TestSuite</name><argument_list>()</argument_list></call></expr>;
 
         <expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>ClusterRecordTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>DbClusterTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
         <return>return <expr><name>suite</name></expr>;</return>
     }</block></expr></expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name>repository</name><operator>-</operator><name><name>h2</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name>repository</name><operator>-</operator><name><name>h2</name><operator>.</operator><name>xml</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..d15f78708</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>cluster</name><operator>/</operator><name>repository</name><operator>-</operator><name><name>h2</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><ternary><condition><expr><literal type="number">171</literal> @@
<operator>&lt;</operator></expr>?</condition><then><expr><name>xml</name> <name>version</name><operator>=</operator><ternary><condition><expr><literal type="string">"1.0"</literal></expr>?</condition><then><expr><operator>&gt;</operator>
<operator>&lt;</operator><operator>!</operator><operator>--</operator>
   <name>Licensed</name> <name>to</name> <name>the</name> <name>Apache</name> <name>Software</name> <call><name>Foundation</name> <argument_list>(<argument><expr><name>ASF</name></expr></argument>)</argument_list></call> <name>under</name> <name>one</name> <name>or</name> <name>more</name>
   <name>contributor</name> <name>license</name> <name><name>agreements</name><operator>.</operator>  <name>See</name></name> <name>the</name> <name>NOTICE</name> <name>file</name> <name>distributed</name> <name>with</name>
   <name>this</name> <name>work</name></expr></then></ternary></expr></then></ternary></expr></expr_stmt> <for>for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License<operator>,</operator> <expr_stmt><expr><name>Version</name> <literal type="number">2.0</literal>
   <operator>(</operator><name>the</name> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt></for> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name> <name>with</name>
   <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>

       <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>

   <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
   <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
   <expr><name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator>
   <name>See</name></name> <name>the</name> <name>License</name></expr></expr_stmt> <for>for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;!DOCTYPE Repository PUBLIC "-//The Apache Software Foundation//DTD Jackrabbit 1.6//EN"
                            "http://jackrabbit.apache.org/dtd/repository-1.6.dtd"&gt;
&lt;!-- Example Repository Configuration File
     Used by
     - org.apache.jackrabbit.core.config.RepositoryConfigTest.java
     -
--&gt;
&lt;Repository&gt;
    &lt;!--
        virtual file system where the repository stores global state
        <control>(<init><decl><type><name><name>e</name><operator>.</operator><name>g</name><operator>.</operator> <name>registered</name></name></type> <name>namespaces</name></decl>, <decl><type ref="prev"/><name>custom</name> <name>node</name> <name>types</name></decl>, <decl><type ref="prev"/><name><name>etc</name><operator>.</operator></name>)
    --&gt;
    <name><argument_list type="generic">&lt;<argument><name>FileSystem</name> class<operator>=</operator></argument></argument_list></name>"org.apache.jackrabbit.core.fs.db.DbFileSystem"&gt;
        <name><argument_list type="generic">&lt;<argument><name>param</name> <name>name</name><operator>=</operator></argument></argument_list></name>"url" <name>value</name><init>=<expr><literal type="string">"jdbc:h2:tcp://localhost:9001,localhost:9002/db"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"schemaObjectPrefix"</literal> <name>value</name><operator>=</operator><literal type="string">"fs_"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"user"</literal> <name>value</name><operator>=</operator><literal type="string">"sa"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"password"</literal> <name>value</name><operator>=</operator><literal type="string">"sa"</literal><operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><operator>/</operator><name>FileSystem</name><operator>&gt;</operator>

    <operator>&lt;</operator><operator>!</operator><operator>--</operator>
        <name>data</name> <name>store</name> <name>configuration</name>
    <operator>--</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>DataStore</name> class<operator>=</operator><literal type="string">"org.apache.jackrabbit.core.data.db.DbDataStore"</literal><operator>&gt;</operator>
        <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"url"</literal> <name>value</name><operator>=</operator><literal type="string">"jdbc:h2:tcp://localhost:9001,localhost:9002/db"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"schemaObjectPrefix"</literal> <name>value</name><operator>=</operator><literal type="string">"datastore_"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"user"</literal> <name>value</name><operator>=</operator><literal type="string">"sa"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"password"</literal> <name>value</name><operator>=</operator><literal type="string">"sa"</literal><operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><operator>/</operator><name>DataStore</name><operator>&gt;</operator>

    <operator>&lt;</operator><operator>!</operator><operator>--</operator>
        <name>security</name> <name>configuration</name>
    <operator>--</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>Security</name> <name>appName</name><operator>=</operator><literal type="string">"Jackrabbit"</literal><operator>&gt;</operator>
        <operator>&lt;</operator><operator>!</operator><operator>--</operator>
            <name>security</name> <name>manager</name><operator>:</operator>
            class<operator>:</operator> <name>FQN</name> <name>of</name> class <name>implementing</name> <name>the</name> <name>JackrabbitSecurityManager</name> interface
        <operator>--</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>SecurityManager</name> class<operator>=</operator><literal type="string">"org.apache.jackrabbit.core.security.simple.SimpleSecurityManager"</literal> <name>workspaceName</name><operator>=</operator><literal type="string">"security"</literal><operator>&gt;</operator>
            <operator>&lt;</operator><operator>!</operator><operator>--</operator>
            <name>workspace</name> <name>access</name><operator>:</operator>
            class<operator>:</operator> <name>FQN</name> <name>of</name> class <name>implementing</name> <name>the</name> <name>WorkspaceAccessManager</name> interface
            <operator>--</operator><operator>&gt;</operator>
            <operator>&lt;</operator><operator>!</operator><operator>--</operator> <operator>&lt;</operator><name>WorkspaceAccessManager</name> class<operator>=</operator><literal type="string">"..."</literal><operator>/</operator><operator>&gt;</operator> <operator>--</operator><operator>&gt;</operator>
            <operator>&lt;</operator><operator>!</operator><operator>--</operator> <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"config"</literal> <name>value</name><operator>=</operator><literal type="string">"${rep.home}/security.xml"</literal><operator>/</operator><operator>&gt;</operator> <operator>--</operator><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>SecurityManager</name><operator>&gt;</operator>

        <operator>&lt;</operator><operator>!</operator><operator>--</operator>
            <name>access</name> <name>manager</name><operator>:</operator>
            class<operator>:</operator> <name>FQN</name> <name>of</name> class <name>implementing</name> <name>the</name> <name>AccessManager</name> interface
        <operator>--</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>AccessManager</name> class<operator>=</operator><literal type="string">"org.apache.jackrabbit.core.security.simple.SimpleAccessManager"</literal><operator>&gt;</operator>
            <operator>&lt;</operator><operator>!</operator><operator>--</operator> <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"config"</literal> <name>value</name><operator>=</operator><literal type="string">"${rep.home}/access.xml"</literal><operator>/</operator><operator>&gt;</operator> <operator>--</operator><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>AccessManager</name><operator>&gt;</operator>

        <operator>&lt;</operator><name>LoginModule</name> class<operator>=</operator><literal type="string">"org.apache.jackrabbit.core.security.simple.SimpleLoginModule"</literal><operator>&gt;</operator>
           <operator>&lt;</operator><operator>!</operator><operator>--</operator> 
              <name>anonymous</name> <name>user</name> <call><name>name</name> <argument_list>(<argument><expr><literal type="char">'anonymous'</literal> <name>is</name> <name>the</name> default <name>value</name></expr></argument>)</argument_list></call>
            <operator>--</operator><operator>&gt;</operator>
           <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"anonymousId"</literal> <name>value</name><operator>=</operator><literal type="string">"anonymous"</literal><operator>/</operator><operator>&gt;</operator>
           <operator>&lt;</operator><operator>!</operator><operator>--</operator>
              <name>administrator</name> <name>user</name> <call><name>id</name> <argument_list>(<argument><expr>default <name>value</name></expr></argument> <if_stmt><if>if param is missing is 'admin'</if></if_stmt>)</argument_list></call>
            <operator>--</operator><operator>&gt;</operator>
           <operator>&lt;</operator><name>param</name> <name>name</name><operator>=</operator><literal type="string">"adminId"</literal> <name>value</name><operator>=</operator><literal type="string">"admin"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><operator>/</operator><name>LoginModule</name><operator>&gt;</operator>
    <operator>&lt;</operator><operator>/</operator><name>Security</name><operator>&gt;</operator>

    <operator>&lt;</operator><operator>!</operator><operator>--</operator>
        <name>location</name> <name>of</name> <name>workspaces</name> <name>root</name> <name>directory</name> <name>and</name> <name>name</name> <name>of</name> default <name>workspace</name>
    <operator>--</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>Workspaces</name> <name>rootPath</name><operator>=</operator><literal type="string">"${rep.home}/workspaces"</literal> <name>defaultWorkspace</name><operator>=</operator><literal type="string">"default"</literal><operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><operator>!</operator><operator>--</operator>
        <name>workspace</name> <name>configuration</name> <name>template</name><operator>:</operator>
        <name>used</name> <name>to</name> <name>create</name> <name>the</name> <name>initial</name> <name>workspace</name></expr></init></decl></init> <if_stmt><if>if there's no workspace yet
    --&gt;
    &lt;Workspace name="${wsp.name}"&gt;
        &lt;!--
            virtual file system of the workspace:
            class: FQN of class implementing the FileSystem interface
        --&gt;
        &lt;FileSystem class="org.apache.jackrabbit.core.fs.local.LocalFileSystem"&gt;
            &lt;param name="path" value="${wsp.home}"/&gt;
        &lt;/FileSystem&gt;
        
        &lt;!--
            persistence manager of the workspace:
            class: FQN of class implementing the PersistenceManager interface
        --&gt;
        &lt;PersistenceManager class="org.apache.jackrabbit.core.persistence.pool.H2PersistenceManager"&gt;
            &lt;param name="url" value="jdbc:h2:tcp://localhost:9001,localhost:9002/db"/&gt;
            &lt;param name="schemaObjectPrefix" value="ws_${wsp.name}_"/&gt;
            &lt;param name="user" value="sa"/&gt;
            &lt;param name="password" value="sa"/&gt;
        &lt;/PersistenceManager&gt;
        
        &lt;!--
            Search index and the file system it uses.
            class: FQN of class implementing the QueryHandler interface
        --&gt;
        &lt;SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex"&gt;
            &lt;param name="path" value="${wsp.home}/index"/&gt;
            &lt;param name="supportHighlighting" value="true"/&gt;            
        &lt;/SearchIndex&gt;
    &lt;/Workspace&gt;

    &lt;!--
        Configures the versioning
    --&gt;
    &lt;Versioning rootPath="${rep.home}/version"&gt;
        &lt;!--
            Configures the filesystem to use for versioning for the respective
            persistence manager
        --&gt;
        &lt;FileSystem class="org.apache.jackrabbit.core.fs.local.LocalFileSystem"&gt;
            &lt;param name="path" value="${rep.home}/version" /&gt;
        &lt;/FileSystem&gt;

        &lt;!--
            Configures the persistence manager to be used for persisting version state.
            Please note that the current versioning implementation is based on
            a 'normal'</if></if_stmt></control></for> persistence manager, but this could change in future
            implementations.
        --&gt;
        &lt;PersistenceManager class="org.apache.jackrabbit.core.persistence.pool.H2PersistenceManager"&gt;
            &lt;param name="url" value="jdbc:h2:tcp://localhost:9001,localhost:9002/db"/&gt;
            &lt;param name="schemaObjectPrefix" value="version_"/&gt;
            &lt;param name="user" value="sa"/&gt;
            &lt;param name="password" value="sa"/&gt;
        &lt;/PersistenceManager&gt;
    &lt;/Versioning&gt;

    &lt;!--
        Search index for content that is shared repository wide
        (/jcr:system tree, contains mainly versions)
    --&gt;
    &lt;SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex"&gt;
        &lt;param name="path" value="${rep.home}/repository/index"/&gt;
        &lt;param name="supportHighlighting" value="true"/&gt;
    &lt;/SearchIndex&gt;
    
    &lt;!--
        Cluster configuration with system variables.
    --&gt;
    &lt;Cluster&gt;
        &lt;Journal class="org.apache.jackrabbit.core.journal.DatabaseJournal"&gt;
            &lt;param name="driver" value="org.h2.Driver" /&gt;
            &lt;param name="url" value="jdbc:h2:tcp://localhost:9001,localhost:9002/db"/&gt;
            &lt;param name="schemaObjectPrefix" value="journal_"/&gt;
            &lt;param name="databaseType" value="h2"/&gt;
            &lt;param name="user" value="sa"/&gt;
            &lt;param name="password" value="sa"/&gt;
        &lt;/Journal&gt;
    &lt;/Cluster&gt;
    
&lt;/Repository&gt;
- 
2.19.1.windows.1

</unit>
