<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/34cf01844.java"><expr_stmt><expr><name>From</name> <literal type="number">34cf0184403de0a29720ea4127bdb83b96996a01</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Marcel</name> <name><name>Reutegger</name> <argument_list type="generic">&lt;<argument><name>mreutegg</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">18</literal> <name>Sep</name> <literal type="number">2012</literal> <literal type="number">07</literal><operator>:</operator><literal type="number">31</literal><operator>:</operator><literal type="number">59</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">3427</literal><operator>:</operator> <name>JCR</name><operator>-</operator><literal type="number">3138</literal> <name>may</name> <name>cause</name> <name>resource</name> <name>starvation</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@1387021 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>AbstractJournal</name><operator>.</operator><name>java</name></name>         <operator>|</operator> <literal type="number">89</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">47</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">42</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>AbstractJournal</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>AbstractJournal</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1f2e6ae23</literal><operator>..</operator><name>a564b4601</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>AbstractJournal</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>journal</name><operator>/</operator><name><name>AbstractJournal</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">181</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">181</literal></expr><operator>,</operator><expr><literal type="number">30</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractJournal</name> implements <name>Journal</name> <block>{
      <expr><operator>*</operator> <block>{@<expr><name>inheritDoc</name></expr>}</block>
      <operator>*</operator><operator>/</operator>
     <specifier>public</specifier> <name>void</name> <call><name>sync</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>JournalException</name> <block>{</block></expr></argument></throws></expr>
        <if_stmt><if>if <condition>(<expr><name>internalVersionManager</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name><name>VersioningLock</name><operator>.</operator><name>ReadLock</name></name></type> <name>lock</name> <init>=
                <expr><call><name><name>internalVersionManager</name><operator>.</operator><name>acquireReadLock</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <try>try <block>{<block_content>
        <for>for <control>(<init>;</init><condition>;</condition><incr/>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>internalVersionManager</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name><name>VersioningLock</name><operator>.</operator><name>ReadLock</name></name></type> <name>lock</name> <init>=
                        <expr><call><name><name>internalVersionManager</name><operator>.</operator><name>acquireReadLock</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <try>try <block>{<block_content>
                    <expr_stmt><expr><call><name>internalSync</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt></block_content></block></for></block_content></block></try></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <finally>finally <block>{<block_content>
                    <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></finally>
            } else <block>{<block_content>
                 <expr_stmt><expr><call><name>internalSync</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <finally>finally <block>{<block_content>
                <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>release</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></finally>
        } else <block>{<block_content>
            <expr_stmt><expr><call><name>internalSync</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><call><name>syncAgainOnNewRecords</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <comment type="line">// sync again if there are more records available</comment>
                <decl_stmt><decl><type><name>RecordIterator</name></type> <name>it</name> <init>= <expr><call><name>getRecords</name><argument_list>(<argument><expr><call><name>getMinimalRevision</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <try>try <block>{<block_content>
                    <if_stmt><if>if <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                        <continue>continue;</continue>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block> <finally>finally <block>{<block_content>
                    <expr_stmt><expr><call><name><name>it</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></finally></try>
            </block_content>}</block></if></if_stmt>
            <break>break;</break>
         </block_content>}</block>
     }
 
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">46</literal> <operator>+</operator><literal type="number">229</literal></expr><operator>,</operator><expr><literal type="number">37</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractJournal</name> implements <name>Journal</name> <block>{
      <expr><operator>*</operator> @<throws>throws <argument><expr><name>JournalException</name></expr></argument></throws></expr> <if_stmt><if>if an error occurs
      */
     protected void doSync<condition>(<expr><name>long</name> <name>startRevision</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>JournalException</name> <block>{</block></expr></argument></throws>
        <for>for <control>(<init>;</init><condition>;</condition><incr/>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>RecordIterator</name></type> <name>iterator</name> <init>= <expr><call><name>getRecords</name><argument_list>(<argument><expr><name>startRevision</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>long</name></type> <name>stopRevision</name> <init>= <expr><name><name>Long</name><operator>.</operator><name>MIN_VALUE</name></name></expr></init></decl>;</decl_stmt>
    
            <try>try <block>{<block_content>
                <while>while <condition>(<expr><call><name><name>iterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>Record</name></type> <name>record</name> <init>= <expr><call><name><name>iterator</name><operator>.</operator><name>nextRecord</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>record</name><operator>.</operator><name>getJournalId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Record with revision '"</literal> <operator>+</operator> <call><name><name>record</name><operator>.</operator><name>getRevision</name></name><argument_list>()</argument_list></call>
                                <operator>+</operator> <literal type="string">"' created by this journal, skipped."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt/></block_content></block></if></if_stmt></block_content></block></while></block_content></block></try></block_content></block></for></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
                        <decl_stmt><decl><type><name>RecordConsumer</name></type> <name>consumer</name> <init>= <expr><call><name>getConsumer</name><argument_list>(<argument><expr><call><name><name>record</name><operator>.</operator><name>getProducerId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <if_stmt><if>if <condition>(<expr><name>consumer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                            <try>try <block>{<block_content>
                                <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>consume</name></name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Could not synchronize to revision: "</literal> <operator>+</operator> <call><name><name>record</name><operator>.</operator><name>getRevision</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" due illegal state of RecordConsumer."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <return>return;</return>
                            </block_content>}</block></catch></try>
        <decl_stmt><decl><type><name>RecordIterator</name></type> <name>iterator</name> <init>= <expr><call><name>getRecords</name><argument_list>(<argument><expr><name>startRevision</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>stopRevision</name> <init>= <expr><name><name>Long</name><operator>.</operator><name>MIN_VALUE</name></name></expr></init></decl>;</decl_stmt>

        <try>try <block>{<block_content>
            <while>while <condition>(<expr><call><name><name>iterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>Record</name></type> <name>record</name> <init>= <expr><call><name><name>iterator</name><operator>.</operator><name>nextRecord</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><call><name><name>record</name><operator>.</operator><name>getJournalId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Record with revision '"</literal> <operator>+</operator> <call><name><name>record</name><operator>.</operator><name>getRevision</name></name><argument_list>()</argument_list></call>
                            <operator>+</operator> <literal type="string">"' created by this journal, skipped."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <decl_stmt><decl><type><name>RecordConsumer</name></type> <name>consumer</name> <init>= <expr><call><name>getConsumer</name><argument_list>(<argument><expr><call><name><name>record</name><operator>.</operator><name>getProducerId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><name>consumer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                        <try>try <block>{<block_content>
                            <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>consume</name></name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Could not synchronize to revision: "</literal> <operator>+</operator> <call><name><name>record</name><operator>.</operator><name>getRevision</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" due illegal state of RecordConsumer."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <return>return;</return>
                         </block_content>}</block></catch></try>
                     </block_content>}</block></if></if_stmt>
                    <expr_stmt><expr><name>stopRevision</name> <operator>=</operator> <call><name><name>record</name><operator>.</operator><name>getRevision</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></else></if_stmt>
            </block_content>}</block></while> <finally>finally <block>{<block_content>
                <expr_stmt><expr><call><name><name>iterator</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>stopRevision</name> <operator>=</operator> <call><name><name>record</name><operator>.</operator><name>getRevision</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></finally>
    
            <if_stmt><if>if <condition>(<expr><name>stopRevision</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <for>for <control>(<init><decl><type><name>RecordConsumer</name></type> <name>consumer</name> <range>: <expr><call><name><name>consumers</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>setRevision</name></name><argument_list>(<argument><expr><name>stopRevision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Synchronized to revision: "</literal> <operator>+</operator> <name>stopRevision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt> <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name><name>iterator</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></finally>
 
                <if_stmt><if>if <condition>(<expr><call><name>syncAgainOnNewRecords</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                    <comment type="line">// changes detected, sync again</comment>
                    <expr_stmt><expr><name>startRevision</name> <operator>=</operator> <name>stopRevision</name></expr>;</expr_stmt>
                    <continue>continue;</continue>
                </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>stopRevision</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>RecordConsumer</name></type> <name>consumer</name> <range>: <expr><call><name><name>consumers</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>setRevision</name></name><argument_list>(<argument><expr><name>stopRevision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></for>
            <break>break;</break>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Synchronized to revision: "</literal> <operator>+</operator> <name>stopRevision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
     </block_content>}</block></try>
     
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt>

</unit>
