<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/ad78897a9.java"><expr_stmt><expr><name>From</name> <name>ad78897a9f86674a0c162fbf9a56fee1e52e661d</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Thomas</name> <name><name>Mueller</name> <argument_list type="generic">&lt;<argument><name>thomasm</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">18</literal> <name>Jan</name> <literal type="number">2010</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">42</literal><operator>:</operator><literal type="number">10</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">2456</literal> <name>Repository</name> <name>is</name> <name>corrupt</name> <name>after</name> <name>concurrent</name> <name>changes</name> <name>with</name>
 <name>the</name> <name>same</name> <name>session</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@900453 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemImpl</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">13</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>observation</name><operator>/</operator><name><name>EventStateCollection</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">17</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">37</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">63</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">4</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>da40f2b87</name><operator>..</operator><name>b0ec3a9a2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ConcurrentModificationException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">481</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">482</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ItemImpl</name> implements <name>Item</name> <block>{
                     <expr><name>String</name> <name>msg</name> <operator>=</operator> <call><name><name>itemMgr</name><operator>.</operator><name>safeGetJCRPath</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call>
                                 <operator>+</operator> <literal type="string">": mandatory child node "</literal> <operator>+</operator> <call><name><name>cnd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                                 <operator>+</operator> <literal type="string">" does not exist"</literal></expr>;
                    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>nodeState</name><operator>.</operator><name>hasChildNodeEntry</name></name><argument_list>(<argument><expr><call><name><name>cnd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>                      
                    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>nodeState</name><operator>.</operator><name>hasChildNodeEntry</name></name><argument_list>(<argument><expr><call><name><name>cnd</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                         <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                         <throw>throw <expr><operator>new</operator> <call><name>ConstraintViolationException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</throw>
                     <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">975</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">976</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ItemImpl</name> implements <name>Item</name> <block>{
              <expr><operator>*</operator> <name>build</name> <name>list</name> <name>of</name> <specifier>transient</specifier> <operator>(</operator><name><name>i</name><operator>.</operator><name>e</name><operator>.</operator></name> new <operator>&amp;</operator> <name>modified</name><operator>)</operator> <name>states</name> <name>that</name>
              <operator>*</operator> <name>should</name> <name>be</name> <name>persisted</name>
              <operator>*</operator><operator>/</operator>
            <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>ItemState</name></argument>&gt;</argument_list></name> <name>dirty</name> <operator>=</operator> <call><name>getTransientStates</name><argument_list>()</argument_list></call></expr>;
            <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>ItemState</name></argument>&gt;</argument_list></name> <name>dirty</name></block></expr>;</expr_stmt>
            <try>try <block>{<block_content>
                <expr_stmt><expr><name>dirty</name> <operator>=</operator> <call><name>getTransientStates</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ConcurrentModificationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><literal type="string">"Concurrent modification; session is closed"</literal></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>session</name><operator>.</operator><name>logout</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <throw>throw <expr><name>e</name></expr>;</throw>
            </block_content>}</block></catch></try>
             <if_stmt><if>if <condition>(<expr><call><name><name>dirty</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                 <comment type="line">// no transient items, nothing to do here</comment>
                 <return>return;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>observation</name><operator>/</operator><name><name>EventStateCollection</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>observation</name><operator>/</operator><name><name>EventStateCollection</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bb6956132</name><operator>..</operator><literal type="number">66a814253</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>observation</name><operator>/</operator><name><name>EventStateCollection</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>observation</name><operator>/</operator><name><name>EventStateCollection</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">404</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">404</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>EventStateCollection</name> <block>{
                 <expr><name>NodeId</name> <name>parentId</name> <operator>=</operator> <call><name><name>n</name><operator>.</operator><name>getParentId</name></name><argument_list>()</argument_list></call></expr>;
                 <comment type="line">// the parent of an added item is always modified or new</comment>
                 <name>NodeState</name> <name>parent</name> <operator>=</operator> <operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>changes</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>parentId</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><name>parent</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><literal type="string">"Parent "</literal> <operator>+</operator> <name>parentId</name> <operator>+</operator> <literal type="string">" must be changed as well."</literal></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <throw>throw <expr><operator>new</operator> <call><name>ItemStateException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</throw>
                </block_content>}</block></if></if_stmt>
                 <decl_stmt><decl><type><name>NodeTypeImpl</name></type> <name>nodeType</name> <init>= <expr><call><name>getNodeType</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name>session</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Name</name></argument>&gt;</argument_list></name></type> <name>mixins</name> <init>= <expr><call><name><name>parent</name><operator>.</operator><name>getMixinTypeNames</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name>getPath</name><argument_list>(<argument><expr><call><name><name>n</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hmgr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">420</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">425</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>EventStateCollection</name> <block>{
             }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
                 <comment type="line">// property created / set</comment>
                 <decl_stmt><decl><type><name>NodeState</name></type> <name>n</name> <init>= <expr><operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>changes</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>getParentId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><name>n</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><literal type="string">"Node "</literal> <operator>+</operator> <call><name><name>state</name><operator>.</operator><name>getParentId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" must be changed as well."</literal></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <throw>throw <expr><operator>new</operator> <call><name>ItemStateException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</throw>
                </block_content>}</block></if></if_stmt>
                 <decl_stmt><decl><type><name>NodeTypeImpl</name></type> <name>nodeType</name> <init>= <expr><call><name>getNodeType</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>session</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Name</name></argument>&gt;</argument_list></name></type> <name>mixins</name> <init>= <expr><call><name><name>n</name><operator>.</operator><name>getMixinTypeNames</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name>getPath</name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hmgr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">625</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">635</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>EventStateCollection</name> <block>{
         }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <comment type="line">// also catch eventual runtime exceptions here</comment>
             <comment type="line">// should never happen actually</comment>
            <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><literal type="string">"Item "</literal> <operator>+</operator> <call><name><name>node</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" has unknown node type: "</literal> <operator>+</operator> <call><name><name>node</name><operator>.</operator><name>getNodeTypeName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>msg</name></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><name>node</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>msg</name> <operator>=</operator> <literal type="string">"Node state is null"</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <expr_stmt><expr><name>msg</name> <operator>=</operator> <literal type="string">"Item "</literal> <operator>+</operator> <call><name><name>node</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" has unknown node type: "</literal> <operator>+</operator> <call><name><name>node</name><operator>.</operator><name>getNodeTypeName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
             <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <throw>throw <expr><operator>new</operator> <call><name>ItemStateException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">17a183605</literal><operator>..</operator><literal type="number">5d64aa1f3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name>state</name><operator>/</operator><name><name>SharedItemStateManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">574</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">574</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>SharedItemStateManager</name>
                     <call><name>checkReferentialIntegrity</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                 </block_content>}</block></else></if_stmt>
 
                <expr_stmt><expr><call><name>checkAddedChildNodes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

                 <comment type="block" format="javadoc">/**
                  * prepare the events. this needs to be after the referential
                  * integrity check, since another transaction could have modified
@@ -731,8 +733,8 @@ public class SharedItemStateManager
                 long t0 = System.currentTimeMillis();
                 persistMgr.store(shared);
                 succeeded = true;
                long t1 = System.currentTimeMillis();
                 if (log.isDebugEnabled()) {
                    long t1 = System.currentTimeMillis();
                     log.debug("persisting change log " + shared + " took " + (t1 - t0) + "ms");
                 }
             } finally {
@@ -967,6 +969,39 @@ public class SharedItemStateManager
             }
         }
 
        /**
         * Verify the added child nodes of the added or modified states exist.
         * If they don't exist, most likely the problem is that the same session
         * is used concurrently.
         */</comment>
        <function><type><specifier>private</specifier> <name>void</name></type> <name>checkAddedChildNodes</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ItemStateException</name></expr></argument></throws> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>ItemState</name></type> <name>state</name> <range>: <expr><call><name><name>local</name><operator>.</operator><name>addedStates</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name>checkAddedChildNode</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <for>for <control>(<init><decl><type><name>ItemState</name></type> <name>state</name> <range>: <expr><call><name><name>local</name><operator>.</operator><name>modifiedStates</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name>checkAddedChildNode</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></function>

        <function><type><specifier>private</specifier> <name>void</name></type> <name>checkAddedChildNode</name><parameter_list>(<parameter><decl><type><name>ItemState</name></type> <name>state</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ItemStateException</name></expr></argument></throws> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>state</name><operator>.</operator><name>isNode</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>NodeState</name></type> <name>node</name> <init>= <expr><operator>(</operator><name>NodeState</name><operator>)</operator> <name>state</name></expr></init></decl>;</decl_stmt>
                <for>for <control>(<init><decl><type><name>ChildNodeEntry</name></type> <name>child</name> <range>: <expr><call><name><name>node</name><operator>.</operator><name>getAddedChildNodeEntries</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                    <decl_stmt><decl><type><name>NodeId</name></type> <name>id</name> <init>= <expr><call><name><name>child</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt><if>if <condition>(<expr><call><name><name>local</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator>
                            <operator>!</operator><call><name><name>id</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RepositoryImpl</name><operator>.</operator><name>VERSION_STORAGE_NODE_ID</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
                            <operator>!</operator><call><name><name>id</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RepositoryImpl</name><operator>.</operator><name>ACTIVITIES_NODE_ID</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
                            <operator>!</operator><call><name><name>id</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>RepositoryImpl</name><operator>.</operator><name>NODETYPES_NODE_ID</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
                            <operator>!</operator><call><name><name>cache</name><operator>.</operator><name>isCached</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
                            <operator>!</operator><call><name><name>persistMgr</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                        <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><literal type="string">"Trying to add a non-existing child node: "</literal> <operator>+</operator> <name>id</name></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <throw>throw <expr><operator>new</operator> <call><name>ItemStateException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</throw>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></for>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></function></block_content></block></if></if_stmt></block_content></block></else></if_stmt>

         <comment type="block" format="javadoc">/**
          * Verifies that
          * &lt;ul&gt;
- 
2.19.1.windows.1

</comment></unit>
