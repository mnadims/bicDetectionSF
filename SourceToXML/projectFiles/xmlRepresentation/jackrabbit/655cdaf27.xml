<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/jackrabbit/655cdaf27.java"><expr_stmt><expr><name>From</name> <literal type="number">655cdaf2733a0446ad7e0a58d4ada74d308294ab</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Marcel</name> <name><name>Reutegger</name> <argument_list type="generic">&lt;<argument><name>mreutegg</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">21</literal> <name>Sep</name> <literal type="number">2009</literal> <literal type="number">08</literal><operator>:</operator><literal type="number">31</literal><operator>:</operator><literal type="number">17</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>JCR</name><operator>-</operator><literal type="number">2170</literal><operator>:</operator> <name>Remove</name> <name>PropDefId</name> <name>and</name> <name>NodeDefId</name> <operator>-</operator> <name>fix</name> <name>regression</name> <name>and</name>
 <name>add</name> <name>test</name></expr></expr_stmt> <case>case

<expr><name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name></expr>:</case> <label><name>https</name>:</label><comment type="line">//svn.apache.org/repos/asf/jackrabbit/trunk@817192 13f79535-47bb-0310-9956-ffa450edef68</comment>
<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemManager</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">49</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ReplaceTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">42</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">84</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">8</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ReplaceTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e04e67b8a</name><operator>..</operator><literal type="number">2908c5e93</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ItemManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>NodeIterator</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>PathNotFoundException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>PropertyIterator</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>nodetype</name><operator>.</operator><name>ConstraintViolationException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>collections</name><operator>.</operator><name>map</name><operator>.</operator><name>ReferenceMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name><operator>.</operator><name>id</name><operator>.</operator><name>ItemId</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>QPropertyDefinition</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>QNodeDefinition</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>name</name><operator>.</operator><name>NameConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>nodetype</name><operator>.</operator><name>NodeDefinitionImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>nodetype</name><operator>.</operator><name>PropertyDefinitionImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">166</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ItemManager</name> implements <name>Dumpable</name></expr><operator>,</operator> <expr><name>ItemStateListener</name> <block>{
         <expr><call><name><name>shareableNodesCache</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;
     }</block>
 
    <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>nodetype</name><operator>.</operator><name>NodeDefinitionImpl</name></name> <call><name>getDefinition</name><argument_list>(<argument><expr><name>NodeState</name> <name>state</name></expr></argument>)</argument_list></call>
    <name>NodeDefinitionImpl</name> <call><name>getDefinition</name><argument_list>(<argument><expr><name>NodeState</name> <name>state</name></expr></argument>)</argument_list></call>
             <throws>throws <argument><expr><name>RepositoryException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>state</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>rootNodeId</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <comment type="line">// special handling required for root node</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>ItemManager</name> implements <name>Dumpable</name></expr><operator>,</operator> <expr><name>ItemStateListener</name> <block>{
             <comment type="line">// get from overlayed state</comment>
             <expr><name>parentId</name> <operator>=</operator> <call><name><name>state</name><operator>.</operator><name>getOverlayedState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParentId</name><argument_list>()</argument_list></call></expr>;
         }</block></expr></expr_stmt>
        <decl_stmt><decl><type><name>NodeState</name></type> <name>parentState</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>NodeState</name></type> <name>parentState</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>NodeImpl</name></type> <name>parent</name> <init>= <expr><operator>(</operator><name>NodeImpl</name><operator>)</operator> <call><name>getItem</name><argument_list>(<argument><expr><name>parentId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><name>parentState</name> <operator>=</operator> <call><name><name>parent</name><operator>.</operator><name>getNodeState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><call><name><name>state</name><operator>.</operator><name>getParentId</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <comment type="line">// indicates state has been removed, must use</comment>
                 <comment type="line">// overlayed state of parent, otherwise child node entry</comment>
                <comment type="line">// cannot be found</comment>
                <expr_stmt><expr><name>parentState</name> <operator>=</operator> <operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>parentState</name><operator>.</operator><name>getOverlayedState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <comment type="line">// cannot be found. unless the parentState is new, which</comment>
                <comment type="line">// means it was recreated in place of a removed node</comment>
                <comment type="line">// that used to be the actual parent</comment>
                <if_stmt><if>if <condition>(<expr><call><name><name>parentState</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>ItemState</name><operator>.</operator><name>STATUS_NEW</name></name></expr>)</condition> <block>{<block_content>
                    <comment type="line">// force getting parent from attic</comment>
                    <expr_stmt><expr><name>parentState</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <expr_stmt><expr><name>parentState</name> <operator>=</operator> <operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>parentState</name><operator>.</operator><name>getOverlayedState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
             </block_content>}</block></if></if_stmt>
         </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// parent probably removed, get it from attic</comment>
            <comment type="line">// parent probably removed, get it from attic. see below</comment>
        </block_content>}</block></catch></try>

        <if_stmt><if>if <condition>(<expr><name>parentState</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <try>try <block>{<block_content>
                 <comment type="line">// use overlayed state if available</comment>
                 <expr_stmt><expr><name>parentState</name> <operator>=</operator> <operator>(</operator><name>NodeState</name><operator>)</operator> <call><name><name>sism</name><operator>.</operator><name>getAttic</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getItemState</name><argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">196</literal></expr></argument>,<argument><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">209</literal></expr></argument>,<argument><expr><literal type="number">32</literal> @@ <specifier>public</specifier> class <name>ItemManager</name> implements <name>Dumpable</name></expr></argument>, <argument><expr><name>ItemStateListener</name> <block>{
                 <throw>throw <argument_list>new <argument><expr><call><name>RepositoryException</name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
             }</block></expr></argument></argument_list></call></expr></expr_stmt>
         </block_content>}</block></try>

         <comment type="line">// get child node entry</comment>
         <decl_stmt><decl><type><name>ChildNodeEntry</name></type> <name>cne</name> <init>= <expr><call><name><name>parentState</name><operator>.</operator><name>getChildNodeEntry</name></name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>getNodeId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>NodeTypeRegistry</name></type> <name>ntReg</name> <init>= <expr><call><name><name>session</name><operator>.</operator><name>getNodeTypeManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNodeTypeRegistry</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>EffectiveNodeType</name></type> <name>ent</name> <init>= <expr><call><name><name>ntReg</name><operator>.</operator><name>getEffectiveNodeType</name></name><argument_list>(
                     <argument><expr><call><name><name>parentState</name><operator>.</operator><name>getNodeTypeName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>parentState</name><operator>.</operator><name>getMixinTypeNames</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>QNodeDefinition</name></type> <name>def</name> <init>= <expr><call><name><name>ent</name><operator>.</operator><name>getApplicableChildNodeDef</name></name><argument_list>(
            <argument><expr><name>QNodeDefinition</name> <name>def</name></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
            <try>try <block>{<block_content>
                <expr_stmt><expr><name>def</name> <operator>=</operator> <call><name><name>ent</name><operator>.</operator><name>getApplicableChildNodeDef</name></name><argument_list>(
                     <argument><expr><call><name><name>cne</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>state</name><operator>.</operator><name>getNodeTypeName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>ntReg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ConstraintViolationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <comment type="line">// fallback to child node definition of a nt:unstructured</comment>
                <expr_stmt><expr><name>ent</name> <operator>=</operator> <call><name><name>ntReg</name><operator>.</operator><name>getEffectiveNodeType</name></name><argument_list>(<argument><expr><name><name>NameConstants</name><operator>.</operator><name>NT_UNSTRUCTURED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>def</name> <operator>=</operator> <call><name><name>ent</name><operator>.</operator><name>getApplicableChildNodeDef</name></name><argument_list>(
                        <argument><expr><call><name><name>cne</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>state</name><operator>.</operator><name>getNodeTypeName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>ntReg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Fallback to nt:unstructured due to unknown child "</literal> <operator>+</operator>
                        <literal type="string">"node definition for type '"</literal> <operator>+</operator> <call><name><name>state</name><operator>.</operator><name>getNodeTypeName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></catch></try>
             <return>return <expr><call><name><name>session</name><operator>.</operator><name>getNodeTypeManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNodeDefinition</name><argument_list>(<argument><expr><name>def</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NodeTypeConflictException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch></try>
     </block_content>}</block></if></if_stmt>
 
    <decl_stmt><decl><type><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>spi</name><operator>.</operator><name>commons</name><operator>.</operator><name>nodetype</name><operator>.</operator><name>PropertyDefinitionImpl</name></name></type> <name>getDefinition</name><argument_list>(<argument><expr><name>PropertyState</name> <name>state</name></expr></argument>)</argument_list>
    <name>PropertyDefinitionImpl</name> <name>getDefinition</name><argument_list>(<argument><expr><name>PropertyState</name> <name>state</name></expr></argument>)</argument_list>
             <throws>throws <argument><expr><name>RepositoryException</name> <block>{</block></expr></argument></throws>
         try <block>{<block_content>
             <decl_stmt><decl><type><name>NodeImpl</name></type> <name>parent</name> <init>= <expr><operator>(</operator><name>NodeImpl</name><operator>)</operator> <call><name>getItem</name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>getParentId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">249</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>ItemManager</name> implements <name>Dumpable</name></expr><operator>,</operator> <expr><name>ItemStateListener</name> <block>{
             <expr><name>NodeTypeRegistry</name> <name>ntReg</name> <operator>=</operator> <call><name><name>session</name><operator>.</operator><name>getNodeTypeManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNodeTypeRegistry</name><argument_list>()</argument_list></call></expr>;
             <name>EffectiveNodeType</name> <name>ent</name> <operator>=</operator> <call><name><name>ntReg</name><operator>.</operator><name>getEffectiveNodeType</name></name><argument_list>(
                     <argument><expr><call><name><name>parent</name><operator>.</operator><name>getNodeTypeName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>parent</name><operator>.</operator><name>getMixinTypeNames</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>QPropertyDefinition</name></type> <name>def</name> <init>= <expr><call><name><name>ent</name><operator>.</operator><name>getApplicablePropertyDef</name></name><argument_list>(
            <argument><expr><name>QPropertyDefinition</name> <name>def</name></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
            <try>try <block>{<block_content>
                <expr_stmt><expr><name>def</name> <operator>=</operator> <call><name><name>ent</name><operator>.</operator><name>getApplicablePropertyDef</name></name><argument_list>(
                     <argument><expr><call><name><name>state</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>state</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>state</name><operator>.</operator><name>isMultiValued</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ConstraintViolationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <expr_stmt><expr><name>ent</name> <operator>=</operator> <call><name><name>ntReg</name><operator>.</operator><name>getEffectiveNodeType</name></name><argument_list>(<argument><expr><name><name>NameConstants</name><operator>.</operator><name>NT_UNSTRUCTURED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>def</name> <operator>=</operator> <call><name><name>ent</name><operator>.</operator><name>getApplicablePropertyDef</name></name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>,
                        <argument><expr><call><name><name>state</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>state</name><operator>.</operator><name>isMultiValued</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Fallback to nt:unstructured due to unknown property "</literal> <operator>+</operator>
                        <literal type="string">"definition for '"</literal> <operator>+</operator> <call><name><name>state</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></catch></try>
             <return>return <expr><call><name><name>session</name><operator>.</operator><name>getNodeTypeManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPropertyDefinition</name><argument_list>(<argument><expr><name>def</name></expr></argument>)</argument_list></call></expr>;</return>
         </block_content>}</block></decl></decl_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>ItemStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>RepositoryException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ReplaceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ReplaceTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">000000000..581489f3f</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ReplaceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>RepositoryException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>jcr</name><operator>.</operator><name>Node</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>jackrabbit</name><operator>.</operator><name>test</name><operator>.</operator><name>AbstractJCRTest</name></name>;</import>

<comment type="block" format="javadoc">/**
 * &lt;code&gt;ReplaceTest&lt;/code&gt; checks if the node definition for a removed node
 * is correctly calculated when its parent node had been replaced with a new
 * node and the uuid is still the same.
 */</comment>
<class><specifier>public</specifier> class <name>ReplaceTest</name> <super_list><extends>extends <super><name>AbstractJCRTest</name></super></extends></super_list> <block>{

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testReplace</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RepositoryException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Node</name></type> <name>n1</name> <init>= <expr><call><name><name>testRootNode</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><literal type="string">"node1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>n1</name><operator>.</operator><name>addMixin</name></name><argument_list>(<argument><expr><name>mixReferenceable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>uuid</name> <init>= <expr><call><name><name>n1</name><operator>.</operator><name>getIdentifier</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>n1</name><operator>.</operator><name>addNode</name></name><argument_list>(<argument><expr><literal type="string">"node2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>superuser</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>n1</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>(</operator><operator>(</operator><name>NodeImpl</name><operator>)</operator> <name>testRootNode</name><operator>)</operator><operator>.</operator><call><name>addNodeWithUuid</name><argument_list>(<argument><expr><literal type="string">"node1"</literal></expr></argument>, <argument><expr><name>uuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>superuser</name><operator>.</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">85ed00bc7</literal><operator>..</operator><literal type="number">4768524ca</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>jackrabbit</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>jackrabbit</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestAll</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAll</name> extends <name>TestCase</name> <block>{
         <expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>InvalidDateTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
         <call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>SessionGarbageCollectedTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>ReferencesTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>suite</name><operator>.</operator><name>addTestSuite</name></name><argument_list>(<argument><expr><name><name>ReplaceTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">// test related to NodeStateMerger</comment>
         <comment type="line">// temporarily disabled see JCR-2272 and JCR-2295</comment>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></catch></block_content></block></if></if_stmt>

</unit>
