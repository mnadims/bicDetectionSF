<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/e858b20bee.java"><expr_stmt><expr><name>From</name> <name>e858b20bee3119fb1e97077cfd76223e3107fc11</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name><name>tbeerbower</name> <argument_list type="generic">&lt;<argument><name>tbeerbower</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Sat</name></expr><operator>,</operator> <expr><literal type="number">20</literal> <name>Jun</name> <literal type="number">2015</literal> <literal type="number">17</literal><operator>:</operator><literal type="number">12</literal><operator>:</operator><literal type="number">42</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">12048</literal> <operator>-</operator> <name>Views</name> <operator>:</operator> <name>Error</name> <name>deploying</name> <name>all</name> <name>non</name><operator>-</operator><name>system</name> <call><name>views</name>
 <argument_list>(<argument><expr><name>tbeerbower</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">15</literal> <operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewArchiveUtility</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">46</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewRegistry</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">13</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewRegistryTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">46</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">55</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">65</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c7630edfdd</name><operator>..</operator><literal type="number">29dc2a75df</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">327</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">327</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewEntity</name> implements <name>ViewDefinition</name> <block>{
     <return>return <expr><name>statusDetail</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getMask</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>mask</name></expr>;</return>
  </block_content>}</block></function>

 
   <comment type="line">// ----- ViewEntity --------------------------------------------------------</comment>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">797</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">802</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewEntity</name> implements <name>ViewDefinition</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>mask</name></name> <operator>=</operator> <name>mask</name></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Get the mask class name.
   *
   * @return the mask class name.
   */</comment>
  @<name>Override</name>
  <specifier>public</specifier> <name>String</name> <call><name>getMask</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>mask</name></expr>;</return>
  }</block></expr></expr_stmt>

   <comment type="block" format="javadoc">/**
    * Determine whether or not the view is a system view.
    *
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/view/ViewArchiveUtility.java b/ambari-server/src/main/java/org/apache/ambari/server/view/ViewArchiveUtility.java
index 04727562ea..d1ead32fe5 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/view/ViewArchiveUtility.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/view/ViewArchiveUtility.java
@@ -34,7 +34,6 @@ import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.util.jar.JarInputStream;
@@ -64,26 +63,27 @@ public class ViewArchiveUtility {
    * @throws JAXBException if xml is malformed
    */</comment>
   <function><type><specifier>public</specifier> <name>ViewConfig</name></type> <name>getViewConfigFromArchive</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>archiveFile</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>MalformedURLException</name></expr></argument>, <argument><expr><name>JAXBException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ViewConfig</name></type> <name>res</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>configStream</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <throws>throws <argument><expr><name>JAXBException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
     <expr><name>ClassLoader</name> <name>cl</name> <operator>=</operator> <call><name><name>URLClassLoader</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>URL</name><index>[]</index></name><block>{<expr><call><name><name>archiveFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toURL</name><argument_list>()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
 
    <expr_stmt><expr><name>configStream</name> <operator>=</operator> <call><name><name>cl</name><operator>.</operator><name>getResourceAsStream</name></name><argument_list>(<argument><expr><name>VIEW_XML</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>configStream</name> <init>= <expr><call><name><name>cl</name><operator>.</operator><name>getResourceAsStream</name></name><argument_list>(<argument><expr><name>VIEW_XML</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>configStream</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>configStream</name> <operator>=</operator> <call><name><name>cl</name><operator>.</operator><name>getResourceAsStream</name></name><argument_list>(<argument><expr><name>WEB_INF_VIEW_XML</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>configStream</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(
            <argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Archive %s doesn't contain a view descriptor."</literal></expr></argument>, <argument><expr><call><name><name>archiveFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
 
    <decl_stmt><decl><type><name>JAXBContext</name></type> <name>jaxbContext</name>       <init>= <expr><call><name><name>JAXBContext</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>ViewConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Unmarshaller</name></type> <name>jaxbUnmarshaller</name> <init>= <expr><call><name><name>jaxbContext</name><operator>.</operator><name>createUnmarshaller</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>

      <decl_stmt><decl><type><name>JAXBContext</name></type> <name>jaxbContext</name>       <init>= <expr><call><name><name>JAXBContext</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>ViewConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Unmarshaller</name></type> <name>jaxbUnmarshaller</name> <init>= <expr><call><name><name>jaxbContext</name><operator>.</operator><name>createUnmarshaller</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <return>return <expr><operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>configStream</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>configStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>configStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
    <return>return <expr><name>res</name></expr>;</return>
   </block_content>}</block></try>
 
   <comment type="block" format="javadoc">/**
@@ -100,9 +100,6 @@ public class ViewArchiveUtility {
    */</comment>
   <function><type><specifier>public</specifier> <name>ViewConfig</name></type> <name>getViewConfigFromExtractedArchive</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>archivePath</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>validate</name></decl></parameter>)</parameter_list>
       <throws>throws <argument><expr><name>JAXBException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ViewConfig</name></type> <name>res</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type>  <name>configStream</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
     <decl_stmt><decl><type><name>File</name></type> <name>configFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>archivePath</name> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name>VIEW_XML</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>configFile</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewArchiveUtility</name> <block>{
       <expr><call><name>validateConfig</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>configFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
 
    <expr_stmt><expr><name>configStream</name>     <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>configFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>JAXBContext</name></type>  <name>jaxbContext</name>      <init>= <expr><call><name><name>JAXBContext</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>ViewConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Unmarshaller</name></type> <name>jaxbUnmarshaller</name> <init>= <expr><call><name><name>jaxbContext</name><operator>.</operator><name>createUnmarshaller</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type>  <name>configStream</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>configFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>

      <decl_stmt><decl><type><name>JAXBContext</name></type>  <name>jaxbContext</name>      <init>= <expr><call><name><name>JAXBContext</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>ViewConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Unmarshaller</name></type> <name>jaxbUnmarshaller</name> <init>= <expr><call><name><name>jaxbContext</name><operator>.</operator><name>createUnmarshaller</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <return>return <expr><operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>configStream</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>configStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>configStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>

    <return>return <expr><name>res</name></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java b/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java
index 28016eaef2..29b9000833 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java
@@ -464,7 +464,7 @@ public class ViewRegistry {
    * Read all view archives.
    */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>readViewArchives</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>readViewArchives</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>ALL_VIEWS_REG_EXP</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>readViewArchives</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>ALL_VIEWS_REG_EXP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -473,7 +473,7 @@ public class ViewRegistry {
    * @param viewNameRegExp view name regular expression
    */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>readViewArchives</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>viewNameRegExp</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>readViewArchives</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>viewNameRegExp</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>readViewArchives</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>viewNameRegExp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -1438,7 +1438,7 @@ public class ViewRegistry {
 
   // read the view archives.
   private void readViewArchives(boolean systemOnly, boolean useExecutor,
                                String viewNameRegExp, boolean removeUndeployed) {
                                String viewNameRegExp) {
     try {
       File viewDir = configuration.getViewsDir();
 
@@ -1535,17 +1535,16 @@ public class ViewRegistry {
     LOG.info("Reading view archive " + archiveFile + ".");
 
     try {
      // extract the archive and get the class loader
      ClassLoader cl = extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile);
 
       ViewConfig viewConfig = archiveUtility.getViewConfigFromExtractedArchive(extractedArchiveDirPath,
           configuration.isViewValidationEnabled());
 
      if (viewConfig == null) {
        setViewStatus(viewDefinition, ViewEntity.ViewStatus.ERROR, "View configuration not found");
      } 
       viewDefinition.setConfiguration(viewConfig);
 
       if (checkViewVersions(viewDefinition, serverVersion)) {
        setupViewDefinition(viewDefinition, extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile));
        setupViewDefinition(viewDefinition, cl);
 
         Set&lt;ViewInstanceEntity&gt; instanceDefinitions = new HashSet&lt;ViewInstanceEntity&gt;();
 
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java b/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java
index 09df011ca3..4d2c8e2b1e 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java
@@ -108,19 +108,19 @@ import org.springframework.security.core.GrantedAuthority;
  */</comment>
 <class><specifier>public</specifier> class <name>ViewRegistryTest</name> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>view_xml1</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>VIEW_XML_1</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>view_xml2</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>VIEW_XML_2</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;2.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>xml_valid_instance</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>XML_VALID_INSTANCE</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">149</literal></expr></init></decl>,7 +149,7 @@ public <decl><type ref="prev"/><name>class</name> <name>ViewRegistryTest</name> <block>{<block_content>
       <expr_stmt><expr><literal type="string">"    &lt;/instance&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>xml_invalid_instance</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>XML_INVALID_INSTANCE</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">597</literal></expr></init></decl>,7 +597,7 @@ public <decl><type ref="prev"/><name>class</name> <name>ViewRegistryTest</name> <block>{<block_content>
     <decl_stmt><decl><type><name>TestListener</name></type> <name>listener</name> <init>= <expr><operator>new</operator> <call><name>TestListener</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>registry</name><operator>.</operator><name>registerListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>, <argument><expr><literal type="string">"MY_VIEW"</literal></expr></argument>, <argument><expr><literal type="string">"1.0.0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>EventImpl</name></type> <name>event</name> <init>= <expr><call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>view_xml1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>EventImpl</name></type> <name>event</name> <init>= <expr><call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>VIEW_XML_1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name><name>registry</name><operator>.</operator><name>fireEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">606</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">606</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <expr><call><name><name>listener</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;
 
     <comment type="line">// fire an event for a different view</comment>
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>view_xml2</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>VIEW_XML_2</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>registry</name><operator>.</operator><name>fireEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">615</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">615</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <comment type="line">// un-register the listener</comment>
     <expr><call><name><name>registry</name><operator>.</operator><name>unregisterListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>, <argument><expr><literal type="string">"MY_VIEW"</literal></expr></argument>, <argument><expr><literal type="string">"1.0.0"</literal></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>view_xml1</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>VIEW_XML_1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>registry</name><operator>.</operator><name>fireEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">629</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">629</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <expr><name>TestListener</name> <name>listener</name> <operator>=</operator> <operator>new</operator> <call><name>TestListener</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>registry</name><operator>.</operator><name>registerListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>, <argument><expr><literal type="string">"MY_VIEW"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// all versions of MY_VIEW</comment>
 
    <expr><name>EventImpl</name> <name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>view_xml1</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>EventImpl</name> <name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>VIEW_XML_1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>registry</name><operator>.</operator><name>fireEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">638</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">638</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <expr><call><name><name>listener</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;
 
     <comment type="line">// fire an event for a different view</comment>
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>view_xml2</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>VIEW_XML_2</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>registry</name><operator>.</operator><name>fireEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">649</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">649</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <comment type="line">// un-register the listener</comment>
     <expr><call><name><name>registry</name><operator>.</operator><name>unregisterListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>, <argument><expr><literal type="string">"MY_VIEW"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// all versions of MY_VIEW</comment>
 
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>view_xml1</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>VIEW_XML_1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>registry</name><operator>.</operator><name>fireEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><call><name><name>listener</name><operator>.</operator><name>getLastEvent</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>view_xml2</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>event</name> <operator>=</operator> <call><name><name>EventImplTest</name><operator>.</operator><name>getEvent</name></name><argument_list>(<argument><expr><literal type="string">"MyEvent"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></argument>, <argument><expr><name>String</name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>VIEW_XML_2</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>registry</name><operator>.</operator><name>fireEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">812</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">812</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
 
     <expr><name>Configuration</name> <name>ambariConfig</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>ResourceTypeEntity</name> <name>resourceTypeEntity</name> <operator>=</operator> <operator>new</operator> <call><name>ResourceTypeEntity</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">850</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">850</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
 
     <expr><name>Configuration</name> <name>ambariConfig</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_invalid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_INVALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">878</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">878</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <expr><name>Validator</name> <name>validator</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>Validator</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ValidationResult</name> <name>result</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>ValidationResult</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>viewEntity</name><operator>.</operator><name>setValidator</name></name><argument_list>(<argument><expr><name>validator</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">920</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">920</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <expr><name>Validator</name> <name>validator</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>Validator</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ValidationResult</name> <name>result</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>ValidationResult</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>viewEntity</name><operator>.</operator><name>setValidator</name></name><argument_list>(<argument><expr><name>validator</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">957</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">957</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
 
     <expr><name>Configuration</name> <name>ambariConfig</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>viewInstanceEntity</name><operator>.</operator><name>setViewName</name></name><argument_list>(<argument><expr><literal type="string">"BOGUS_VIEW"</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">984</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">984</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
 
     <expr><name>Configuration</name> <name>ambariConfig</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>updateInstance</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1030</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1030</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
 
     <expr><name>Configuration</name> <name>ambariConfig</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">1052</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1052</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
 
     <expr><name>Configuration</name> <name>ambariConfig</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>ResourceEntity</name> <name>resource</name> <operator>=</operator> <operator>new</operator> <call><name>ResourceEntity</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1100</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1100</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
 
     <expr><name>Configuration</name> <name>ambariConfig</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>invalidConfig</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_invalid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>invalidConfig</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_INVALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>updateInstance</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>invalidConfig</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1134</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1134</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <expr><name>Validator</name> <name>validator</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>Validator</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ValidationResult</name> <name>result</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>ValidationResult</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>viewEntity</name><operator>.</operator><name>setValidator</name></name><argument_list>(<argument><expr><name>validator</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1177</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1177</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewRegistryTest</name> <block>{
     <expr><name>Validator</name> <name>validator</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>Validator</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ValidationResult</name> <name>result</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>ValidationResult</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>xml_valid_instance</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>ViewConfig</name> <name>config</name> <operator>=</operator> <call><name><name>ViewConfigTest</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>XML_VALID_INSTANCE</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewEntity</name> <name>viewEntity</name> <operator>=</operator> <call><name>getViewEntity</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>ambariConfig</name></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>viewEntity</name><operator>.</operator><name>setValidator</name></name><argument_list>(<argument><expr><name>validator</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>ViewInstanceEntity</name> <name>viewInstanceEntity</name> <operator>=</operator> <call><name>getViewInstanceEntity</name><argument_list>(<argument><expr><name>viewEntity</name></expr></argument>, <argument><expr><call><name><name>config</name><operator>.</operator><name>getInstances</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></decl></decl_stmt></block_content></block></decl></decl_stmt></block></class></block_content></block></try></block_content></block></function></block_content></block></function>

</unit>
